
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000250a4  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004aa4  08025264  08025264  00035264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 000003fc  08029d08  08029d08  00039d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802a104  0802a104  00175f5c  2**0
                  CONTENTS
  5 .ARM          00000008  0802a104  0802a104  0003a104  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802a10c  0802a10c  00175f5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802a10c  0802a10c  0003a10c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802a124  0802a124  0003a124  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         000001a8  20000000  0802a12c  00040000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00020488  200001a8  0802a2d4  000401a8  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  20020630  0802a2d4  00040630  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00175f5c  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00115700  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000104bc  90115700  90115700  00165700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 000003a0  90125bbc  90125bbc  00175bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   000840bc  00000000  00000000  00175f8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   001c93a3  00000000  00000000  001fa048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001ff10  00000000  00000000  003c33eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003e38  00000000  00000000  003e3300  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00139de3  00000000  00000000  003e7138  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00009b88  00000000  00000000  00520f20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00099bd2  00000000  00000000  0052aaa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003e9d9  00000000  00000000  005c467a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  00603053  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000b844  00000000  00000000  00603128  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	200001a8 	.word	0x200001a8
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0802524c 	.word	0x0802524c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	200001ac 	.word	0x200001ac
 80001fc:	0802524c 	.word	0x0802524c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <strcmp>:
 80002a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80002a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002a8:	2a01      	cmp	r2, #1
 80002aa:	bf28      	it	cs
 80002ac:	429a      	cmpcs	r2, r3
 80002ae:	d0f7      	beq.n	80002a0 <strcmp>
 80002b0:	1ad0      	subs	r0, r2, r3
 80002b2:	4770      	bx	lr

080002b4 <strlen>:
 80002b4:	4603      	mov	r3, r0
 80002b6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002ba:	2a00      	cmp	r2, #0
 80002bc:	d1fb      	bne.n	80002b6 <strlen+0x2>
 80002be:	1a18      	subs	r0, r3, r0
 80002c0:	3801      	subs	r0, #1
 80002c2:	4770      	bx	lr

080002c4 <__aeabi_uldivmod>:
 80002c4:	b953      	cbnz	r3, 80002dc <__aeabi_uldivmod+0x18>
 80002c6:	b94a      	cbnz	r2, 80002dc <__aeabi_uldivmod+0x18>
 80002c8:	2900      	cmp	r1, #0
 80002ca:	bf08      	it	eq
 80002cc:	2800      	cmpeq	r0, #0
 80002ce:	bf1c      	itt	ne
 80002d0:	f04f 31ff 	movne.w	r1, #4294967295
 80002d4:	f04f 30ff 	movne.w	r0, #4294967295
 80002d8:	f000 b96e 	b.w	80005b8 <__aeabi_idiv0>
 80002dc:	f1ad 0c08 	sub.w	ip, sp, #8
 80002e0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e4:	f000 f806 	bl	80002f4 <__udivmoddi4>
 80002e8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f0:	b004      	add	sp, #16
 80002f2:	4770      	bx	lr

080002f4 <__udivmoddi4>:
 80002f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f8:	9d08      	ldr	r5, [sp, #32]
 80002fa:	4604      	mov	r4, r0
 80002fc:	468c      	mov	ip, r1
 80002fe:	2b00      	cmp	r3, #0
 8000300:	f040 8083 	bne.w	800040a <__udivmoddi4+0x116>
 8000304:	428a      	cmp	r2, r1
 8000306:	4617      	mov	r7, r2
 8000308:	d947      	bls.n	800039a <__udivmoddi4+0xa6>
 800030a:	fab2 f282 	clz	r2, r2
 800030e:	b142      	cbz	r2, 8000322 <__udivmoddi4+0x2e>
 8000310:	f1c2 0020 	rsb	r0, r2, #32
 8000314:	fa24 f000 	lsr.w	r0, r4, r0
 8000318:	4091      	lsls	r1, r2
 800031a:	4097      	lsls	r7, r2
 800031c:	ea40 0c01 	orr.w	ip, r0, r1
 8000320:	4094      	lsls	r4, r2
 8000322:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000326:	0c23      	lsrs	r3, r4, #16
 8000328:	fbbc f6f8 	udiv	r6, ip, r8
 800032c:	fa1f fe87 	uxth.w	lr, r7
 8000330:	fb08 c116 	mls	r1, r8, r6, ip
 8000334:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000338:	fb06 f10e 	mul.w	r1, r6, lr
 800033c:	4299      	cmp	r1, r3
 800033e:	d909      	bls.n	8000354 <__udivmoddi4+0x60>
 8000340:	18fb      	adds	r3, r7, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 8119 	bcs.w	800057c <__udivmoddi4+0x288>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 8116 	bls.w	800057c <__udivmoddi4+0x288>
 8000350:	3e02      	subs	r6, #2
 8000352:	443b      	add	r3, r7
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 fe0e 	mul.w	lr, r0, lr
 8000368:	45a6      	cmp	lr, r4
 800036a:	d909      	bls.n	8000380 <__udivmoddi4+0x8c>
 800036c:	193c      	adds	r4, r7, r4
 800036e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000372:	f080 8105 	bcs.w	8000580 <__udivmoddi4+0x28c>
 8000376:	45a6      	cmp	lr, r4
 8000378:	f240 8102 	bls.w	8000580 <__udivmoddi4+0x28c>
 800037c:	3802      	subs	r0, #2
 800037e:	443c      	add	r4, r7
 8000380:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000384:	eba4 040e 	sub.w	r4, r4, lr
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa0>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	b902      	cbnz	r2, 800039e <__udivmoddi4+0xaa>
 800039c:	deff      	udf	#255	; 0xff
 800039e:	fab2 f282 	clz	r2, r2
 80003a2:	2a00      	cmp	r2, #0
 80003a4:	d150      	bne.n	8000448 <__udivmoddi4+0x154>
 80003a6:	1bcb      	subs	r3, r1, r7
 80003a8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003ac:	fa1f f887 	uxth.w	r8, r7
 80003b0:	2601      	movs	r6, #1
 80003b2:	fbb3 fcfe 	udiv	ip, r3, lr
 80003b6:	0c21      	lsrs	r1, r4, #16
 80003b8:	fb0e 331c 	mls	r3, lr, ip, r3
 80003bc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003c0:	fb08 f30c 	mul.w	r3, r8, ip
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d907      	bls.n	80003d8 <__udivmoddi4+0xe4>
 80003c8:	1879      	adds	r1, r7, r1
 80003ca:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003ce:	d202      	bcs.n	80003d6 <__udivmoddi4+0xe2>
 80003d0:	428b      	cmp	r3, r1
 80003d2:	f200 80e9 	bhi.w	80005a8 <__udivmoddi4+0x2b4>
 80003d6:	4684      	mov	ip, r0
 80003d8:	1ac9      	subs	r1, r1, r3
 80003da:	b2a3      	uxth	r3, r4
 80003dc:	fbb1 f0fe 	udiv	r0, r1, lr
 80003e0:	fb0e 1110 	mls	r1, lr, r0, r1
 80003e4:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003e8:	fb08 f800 	mul.w	r8, r8, r0
 80003ec:	45a0      	cmp	r8, r4
 80003ee:	d907      	bls.n	8000400 <__udivmoddi4+0x10c>
 80003f0:	193c      	adds	r4, r7, r4
 80003f2:	f100 33ff 	add.w	r3, r0, #4294967295
 80003f6:	d202      	bcs.n	80003fe <__udivmoddi4+0x10a>
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	f200 80d9 	bhi.w	80005b0 <__udivmoddi4+0x2bc>
 80003fe:	4618      	mov	r0, r3
 8000400:	eba4 0408 	sub.w	r4, r4, r8
 8000404:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000408:	e7bf      	b.n	800038a <__udivmoddi4+0x96>
 800040a:	428b      	cmp	r3, r1
 800040c:	d909      	bls.n	8000422 <__udivmoddi4+0x12e>
 800040e:	2d00      	cmp	r5, #0
 8000410:	f000 80b1 	beq.w	8000576 <__udivmoddi4+0x282>
 8000414:	2600      	movs	r6, #0
 8000416:	e9c5 0100 	strd	r0, r1, [r5]
 800041a:	4630      	mov	r0, r6
 800041c:	4631      	mov	r1, r6
 800041e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000422:	fab3 f683 	clz	r6, r3
 8000426:	2e00      	cmp	r6, #0
 8000428:	d14a      	bne.n	80004c0 <__udivmoddi4+0x1cc>
 800042a:	428b      	cmp	r3, r1
 800042c:	d302      	bcc.n	8000434 <__udivmoddi4+0x140>
 800042e:	4282      	cmp	r2, r0
 8000430:	f200 80b8 	bhi.w	80005a4 <__udivmoddi4+0x2b0>
 8000434:	1a84      	subs	r4, r0, r2
 8000436:	eb61 0103 	sbc.w	r1, r1, r3
 800043a:	2001      	movs	r0, #1
 800043c:	468c      	mov	ip, r1
 800043e:	2d00      	cmp	r5, #0
 8000440:	d0a8      	beq.n	8000394 <__udivmoddi4+0xa0>
 8000442:	e9c5 4c00 	strd	r4, ip, [r5]
 8000446:	e7a5      	b.n	8000394 <__udivmoddi4+0xa0>
 8000448:	f1c2 0320 	rsb	r3, r2, #32
 800044c:	fa20 f603 	lsr.w	r6, r0, r3
 8000450:	4097      	lsls	r7, r2
 8000452:	fa01 f002 	lsl.w	r0, r1, r2
 8000456:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800045a:	40d9      	lsrs	r1, r3
 800045c:	4330      	orrs	r0, r6
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	fbb1 f6fe 	udiv	r6, r1, lr
 8000464:	fa1f f887 	uxth.w	r8, r7
 8000468:	fb0e 1116 	mls	r1, lr, r6, r1
 800046c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000470:	fb06 f108 	mul.w	r1, r6, r8
 8000474:	4299      	cmp	r1, r3
 8000476:	fa04 f402 	lsl.w	r4, r4, r2
 800047a:	d909      	bls.n	8000490 <__udivmoddi4+0x19c>
 800047c:	18fb      	adds	r3, r7, r3
 800047e:	f106 3cff 	add.w	ip, r6, #4294967295
 8000482:	f080 808d 	bcs.w	80005a0 <__udivmoddi4+0x2ac>
 8000486:	4299      	cmp	r1, r3
 8000488:	f240 808a 	bls.w	80005a0 <__udivmoddi4+0x2ac>
 800048c:	3e02      	subs	r6, #2
 800048e:	443b      	add	r3, r7
 8000490:	1a5b      	subs	r3, r3, r1
 8000492:	b281      	uxth	r1, r0
 8000494:	fbb3 f0fe 	udiv	r0, r3, lr
 8000498:	fb0e 3310 	mls	r3, lr, r0, r3
 800049c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004a0:	fb00 f308 	mul.w	r3, r0, r8
 80004a4:	428b      	cmp	r3, r1
 80004a6:	d907      	bls.n	80004b8 <__udivmoddi4+0x1c4>
 80004a8:	1879      	adds	r1, r7, r1
 80004aa:	f100 3cff 	add.w	ip, r0, #4294967295
 80004ae:	d273      	bcs.n	8000598 <__udivmoddi4+0x2a4>
 80004b0:	428b      	cmp	r3, r1
 80004b2:	d971      	bls.n	8000598 <__udivmoddi4+0x2a4>
 80004b4:	3802      	subs	r0, #2
 80004b6:	4439      	add	r1, r7
 80004b8:	1acb      	subs	r3, r1, r3
 80004ba:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80004be:	e778      	b.n	80003b2 <__udivmoddi4+0xbe>
 80004c0:	f1c6 0c20 	rsb	ip, r6, #32
 80004c4:	fa03 f406 	lsl.w	r4, r3, r6
 80004c8:	fa22 f30c 	lsr.w	r3, r2, ip
 80004cc:	431c      	orrs	r4, r3
 80004ce:	fa20 f70c 	lsr.w	r7, r0, ip
 80004d2:	fa01 f306 	lsl.w	r3, r1, r6
 80004d6:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004da:	fa21 f10c 	lsr.w	r1, r1, ip
 80004de:	431f      	orrs	r7, r3
 80004e0:	0c3b      	lsrs	r3, r7, #16
 80004e2:	fbb1 f9fe 	udiv	r9, r1, lr
 80004e6:	fa1f f884 	uxth.w	r8, r4
 80004ea:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ee:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004f2:	fb09 fa08 	mul.w	sl, r9, r8
 80004f6:	458a      	cmp	sl, r1
 80004f8:	fa02 f206 	lsl.w	r2, r2, r6
 80004fc:	fa00 f306 	lsl.w	r3, r0, r6
 8000500:	d908      	bls.n	8000514 <__udivmoddi4+0x220>
 8000502:	1861      	adds	r1, r4, r1
 8000504:	f109 30ff 	add.w	r0, r9, #4294967295
 8000508:	d248      	bcs.n	800059c <__udivmoddi4+0x2a8>
 800050a:	458a      	cmp	sl, r1
 800050c:	d946      	bls.n	800059c <__udivmoddi4+0x2a8>
 800050e:	f1a9 0902 	sub.w	r9, r9, #2
 8000512:	4421      	add	r1, r4
 8000514:	eba1 010a 	sub.w	r1, r1, sl
 8000518:	b2bf      	uxth	r7, r7
 800051a:	fbb1 f0fe 	udiv	r0, r1, lr
 800051e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000522:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000526:	fb00 f808 	mul.w	r8, r0, r8
 800052a:	45b8      	cmp	r8, r7
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x24a>
 800052e:	19e7      	adds	r7, r4, r7
 8000530:	f100 31ff 	add.w	r1, r0, #4294967295
 8000534:	d22e      	bcs.n	8000594 <__udivmoddi4+0x2a0>
 8000536:	45b8      	cmp	r8, r7
 8000538:	d92c      	bls.n	8000594 <__udivmoddi4+0x2a0>
 800053a:	3802      	subs	r0, #2
 800053c:	4427      	add	r7, r4
 800053e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000542:	eba7 0708 	sub.w	r7, r7, r8
 8000546:	fba0 8902 	umull	r8, r9, r0, r2
 800054a:	454f      	cmp	r7, r9
 800054c:	46c6      	mov	lr, r8
 800054e:	4649      	mov	r1, r9
 8000550:	d31a      	bcc.n	8000588 <__udivmoddi4+0x294>
 8000552:	d017      	beq.n	8000584 <__udivmoddi4+0x290>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x27a>
 8000556:	ebb3 020e 	subs.w	r2, r3, lr
 800055a:	eb67 0701 	sbc.w	r7, r7, r1
 800055e:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000562:	40f2      	lsrs	r2, r6
 8000564:	ea4c 0202 	orr.w	r2, ip, r2
 8000568:	40f7      	lsrs	r7, r6
 800056a:	e9c5 2700 	strd	r2, r7, [r5]
 800056e:	2600      	movs	r6, #0
 8000570:	4631      	mov	r1, r6
 8000572:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000576:	462e      	mov	r6, r5
 8000578:	4628      	mov	r0, r5
 800057a:	e70b      	b.n	8000394 <__udivmoddi4+0xa0>
 800057c:	4606      	mov	r6, r0
 800057e:	e6e9      	b.n	8000354 <__udivmoddi4+0x60>
 8000580:	4618      	mov	r0, r3
 8000582:	e6fd      	b.n	8000380 <__udivmoddi4+0x8c>
 8000584:	4543      	cmp	r3, r8
 8000586:	d2e5      	bcs.n	8000554 <__udivmoddi4+0x260>
 8000588:	ebb8 0e02 	subs.w	lr, r8, r2
 800058c:	eb69 0104 	sbc.w	r1, r9, r4
 8000590:	3801      	subs	r0, #1
 8000592:	e7df      	b.n	8000554 <__udivmoddi4+0x260>
 8000594:	4608      	mov	r0, r1
 8000596:	e7d2      	b.n	800053e <__udivmoddi4+0x24a>
 8000598:	4660      	mov	r0, ip
 800059a:	e78d      	b.n	80004b8 <__udivmoddi4+0x1c4>
 800059c:	4681      	mov	r9, r0
 800059e:	e7b9      	b.n	8000514 <__udivmoddi4+0x220>
 80005a0:	4666      	mov	r6, ip
 80005a2:	e775      	b.n	8000490 <__udivmoddi4+0x19c>
 80005a4:	4630      	mov	r0, r6
 80005a6:	e74a      	b.n	800043e <__udivmoddi4+0x14a>
 80005a8:	f1ac 0c02 	sub.w	ip, ip, #2
 80005ac:	4439      	add	r1, r7
 80005ae:	e713      	b.n	80003d8 <__udivmoddi4+0xe4>
 80005b0:	3802      	subs	r0, #2
 80005b2:	443c      	add	r4, r7
 80005b4:	e724      	b.n	8000400 <__udivmoddi4+0x10c>
 80005b6:	bf00      	nop

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005bc:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005f4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005c0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005c2:	e003      	b.n	80005cc <LoopCopyDataInit>

080005c4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005c4:	4b0c      	ldr	r3, [pc, #48]	; (80005f8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005c6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005c8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005ca:	3104      	adds	r1, #4

080005cc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005cc:	480b      	ldr	r0, [pc, #44]	; (80005fc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005ce:	4b0c      	ldr	r3, [pc, #48]	; (8000600 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005d0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005d2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005d4:	d3f6      	bcc.n	80005c4 <CopyDataInit>
  ldr  r2, =_sbss
 80005d6:	4a0b      	ldr	r2, [pc, #44]	; (8000604 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005d8:	e002      	b.n	80005e0 <LoopFillZerobss>

080005da <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005da:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005dc:	f842 3b04 	str.w	r3, [r2], #4

080005e0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005e0:	4b09      	ldr	r3, [pc, #36]	; (8000608 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005e2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005e4:	d3f9      	bcc.n	80005da <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005e6:	f009 fa9d 	bl	8009b24 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ea:	f022 fde1 	bl	80231b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ee:	f000 ff67 	bl	80014c0 <main>
  bx  lr    
 80005f2:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005f4:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005f8:	0802a12c 	.word	0x0802a12c
  ldr  r0, =_sdata
 80005fc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000600:	200001a8 	.word	0x200001a8
  ldr  r2, =_sbss
 8000604:	200001a8 	.word	0x200001a8
  ldr  r3, = _ebss
 8000608:	20020630 	.word	0x20020630

0800060c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800060c:	e7fe      	b.n	800060c <ADC_IRQHandler>

0800060e <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 800060e:	f000 bde1 	b.w	80011d4 <touchgfx_init>

08000612 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000612:	f000 be4f 	b.w	80012b4 <touchgfx_taskEntry>

08000616 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000616:	2100      	movs	r1, #0
 8000618:	4608      	mov	r0, r1
 800061a:	f008 bdeb 	b.w	80091f4 <BSP_PB_Init>

0800061e <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 800061e:	2000      	movs	r0, #0
 8000620:	f008 be22 	b.w	8009268 <BSP_PB_GetState>

08000624 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000624:	6840      	ldr	r0, [r0, #4]
    }
 8000626:	4770      	bx	lr

08000628 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000628:	6041      	str	r1, [r0, #4]
    }
 800062a:	4770      	bx	lr

0800062c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 800062c:	4a05      	ldr	r2, [pc, #20]	; (8000644 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800062e:	6813      	ldr	r3, [r2, #0]
 8000630:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000634:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000636:	4a04      	ldr	r2, [pc, #16]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000638:	6813      	ldr	r3, [r2, #0]
 800063a:	f043 0301 	orr.w	r3, r3, #1
 800063e:	6013      	str	r3, [r2, #0]
}
 8000640:	4770      	bx	lr
 8000642:	bf00      	nop
 8000644:	e000edfc 	.word	0xe000edfc
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 800064c:	1a51      	subs	r1, r2, r1
 800064e:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000652:	fbb1 f0f3 	udiv	r0, r1, r3
 8000656:	4770      	bx	lr

08000658 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000658:	4b01      	ldr	r3, [pc, #4]	; (8000660 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 800065a:	6818      	ldr	r0, [r3, #0]
}
 800065c:	4770      	bx	lr
 800065e:	bf00      	nop
 8000660:	e0001004 	.word	0xe0001004

08000664 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000664:	4770      	bx	lr

08000666 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000666:	b510      	push	{r4, lr}
 8000668:	210c      	movs	r1, #12
 800066a:	4604      	mov	r4, r0
 800066c:	f022 fc1e 	bl	8022eac <_ZdlPvj>
 8000670:	4620      	mov	r0, r4
 8000672:	bd10      	pop	{r4, pc}

08000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000674:	6803      	ldr	r3, [r0, #0]
{
 8000676:	b510      	push	{r4, lr}
 8000678:	691b      	ldr	r3, [r3, #16]
 800067a:	4604      	mov	r4, r0
    if (active) //idle task sched out
 800067c:	b131      	cbz	r1, 800068c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800067e:	4798      	blx	r3
 8000680:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000682:	6863      	ldr	r3, [r4, #4]
 8000684:	1a9b      	subs	r3, r3, r2
 8000686:	4418      	add	r0, r3
 8000688:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 800068a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 800068c:	4798      	blx	r3
 800068e:	60a0      	str	r0, [r4, #8]
}
 8000690:	e7fb      	b.n	800068a <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000692 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000692:	4770      	bx	lr

08000694 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000694:	4770      	bx	lr
	...

08000698 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000698:	b508      	push	{r3, lr}
    Buttons::init();
 800069a:	f7ff ffbc 	bl	8000616 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800069e:	4b02      	ldr	r3, [pc, #8]	; (80006a8 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 80006a0:	2200      	movs	r2, #0
 80006a2:	601a      	str	r2, [r3, #0]
}
 80006a4:	bd08      	pop	{r3, pc}
 80006a6:	bf00      	nop
 80006a8:	200001c4 	.word	0x200001c4

080006ac <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 80006ac:	b570      	push	{r4, r5, r6, lr}
 80006ae:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 80006b0:	f7ff ffb5 	bl	800061e <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 80006b4:	4a0b      	ldr	r2, [pc, #44]	; (80006e4 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 80006b6:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006b8:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006ba:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006bc:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006be:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006c0:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006c4:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006c6:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006c8:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006ca:	d00a      	beq.n	80006e2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006cc:	f016 0001 	ands.w	r0, r6, #1
 80006d0:	d007      	beq.n	80006e2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006d2:	f011 0001 	ands.w	r0, r1, #1
 80006d6:	d004      	beq.n	80006e2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006d8:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006da:	bf5a      	itte	pl
 80006dc:	2001      	movpl	r0, #1
 80006de:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006e0:	2000      	movmi	r0, #0
}
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	200001c4 	.word	0x200001c4

080006e8 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006e8:	b510      	push	{r4, lr}
 80006ea:	2104      	movs	r1, #4
 80006ec:	4604      	mov	r4, r0
 80006ee:	f022 fbdd 	bl	8022eac <_ZdlPvj>
 80006f2:	4620      	mov	r0, r4
 80006f4:	bd10      	pop	{r4, pc}

080006f6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006f6:	4770      	bx	lr

080006f8 <_ZN20STM32TouchControllerD0Ev>:
 80006f8:	b510      	push	{r4, lr}
 80006fa:	2104      	movs	r1, #4
 80006fc:	4604      	mov	r4, r0
 80006fe:	f022 fbd5 	bl	8022eac <_ZdlPvj>
 8000702:	4620      	mov	r0, r4
 8000704:	bd10      	pop	{r4, pc}
	...

08000708 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000708:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 800070a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800070e:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000712:	f009 f953 	bl	80099bc <BSP_TS_Init>
 8000716:	4b07      	ldr	r3, [pc, #28]	; (8000734 <_ZN20STM32TouchController4initEv+0x2c>)
 8000718:	b910      	cbnz	r0, 8000720 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 800071a:	2201      	movs	r2, #1
 800071c:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 800071e:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000720:	781b      	ldrb	r3, [r3, #0]
 8000722:	2b00      	cmp	r3, #0
 8000724:	d1fb      	bne.n	800071e <_ZN20STM32TouchController4initEv+0x16>
 8000726:	4b04      	ldr	r3, [pc, #16]	; (8000738 <_ZN20STM32TouchController4initEv+0x30>)
 8000728:	4a04      	ldr	r2, [pc, #16]	; (800073c <_ZN20STM32TouchController4initEv+0x34>)
 800072a:	4805      	ldr	r0, [pc, #20]	; (8000740 <_ZN20STM32TouchController4initEv+0x38>)
 800072c:	2126      	movs	r1, #38	; 0x26
 800072e:	f022 fbeb 	bl	8022f08 <__assert_func>
 8000732:	bf00      	nop
 8000734:	200001c8 	.word	0x200001c8
 8000738:	08025300 	.word	0x08025300
 800073c:	08025313 	.word	0x08025313
 8000740:	0802533d 	.word	0x0802533d

08000744 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000744:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000746:	4b0b      	ldr	r3, [pc, #44]	; (8000774 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000748:	781c      	ldrb	r4, [r3, #0]
{
 800074a:	460e      	mov	r6, r1
 800074c:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800074e:	b15c      	cbz	r4, 8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000750:	a801      	add	r0, sp, #4
 8000752:	f009 f971 	bl	8009a38 <BSP_TS_GetState>
        if (state.touchDetected)
 8000756:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800075a:	b143      	cbz	r3, 800076e <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 800075c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000760:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000762:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000766:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000768:	4620      	mov	r0, r4
 800076a:	b004      	add	sp, #16
 800076c:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800076e:	461c      	mov	r4, r3
 8000770:	e7fa      	b.n	8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000772:	bf00      	nop
 8000774:	200001c8 	.word	0x200001c8

08000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000778:	b110      	cbz	r0, 8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800077a:	2801      	cmp	r0, #1
 800077c:	d009      	beq.n	8000792 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800077e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000780:	4b08      	ldr	r3, [pc, #32]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	4809      	ldr	r0, [pc, #36]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000784:	681a      	ldr	r2, [r3, #0]
 8000786:	fab2 f282 	clz	r2, r2
 800078a:	0952      	lsrs	r2, r2, #5
 800078c:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800078e:	f00a b9eb 	b.w	800ab68 <HAL_GPIO_WritePin>
 8000792:	4b04      	ldr	r3, [pc, #16]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000794:	4805      	ldr	r0, [pc, #20]	; (80007ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000796:	685a      	ldr	r2, [r3, #4]
 8000798:	fab2 f282 	clz	r2, r2
 800079c:	0952      	lsrs	r2, r2, #5
 800079e:	2110      	movs	r1, #16
 80007a0:	e7f5      	b.n	800078e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 80007a2:	bf00      	nop
 80007a4:	200001cc 	.word	0x200001cc
 80007a8:	40021800 	.word	0x40021800
 80007ac:	40020c00 	.word	0x40020c00

080007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007b0:	b110      	cbz	r0, 80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 80007b2:	2801      	cmp	r0, #1
 80007b4:	d009      	beq.n	80007ca <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007b6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b8:	4b08      	ldr	r3, [pc, #32]	; (80007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007ba:	4809      	ldr	r0, [pc, #36]	; (80007e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 80007bc:	681a      	ldr	r2, [r3, #0]
 80007be:	3a00      	subs	r2, #0
 80007c0:	bf18      	it	ne
 80007c2:	2201      	movne	r2, #1
 80007c4:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c6:	f00a b9cf 	b.w	800ab68 <HAL_GPIO_WritePin>
 80007ca:	4b04      	ldr	r3, [pc, #16]	; (80007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007cc:	4805      	ldr	r0, [pc, #20]	; (80007e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007ce:	685a      	ldr	r2, [r3, #4]
 80007d0:	3a00      	subs	r2, #0
 80007d2:	bf18      	it	ne
 80007d4:	2201      	movne	r2, #1
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7f5      	b.n	80007c6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007da:	bf00      	nop
 80007dc:	200001cc 	.word	0x200001cc
 80007e0:	40021800 	.word	0x40021800
 80007e4:	40020c00 	.word	0x40020c00

080007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007e8:	b110      	cbz	r0, 80007f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ea:	2801      	cmp	r0, #1
 80007ec:	d004      	beq.n	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ee:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f0:	4803      	ldr	r0, [pc, #12]	; (8000800 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007f2:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007f4:	f00a b9bd 	b.w	800ab72 <HAL_GPIO_TogglePin>
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007fa:	2110      	movs	r1, #16
 80007fc:	e7fa      	b.n	80007f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007fe:	bf00      	nop
 8000800:	40021800 	.word	0x40021800
 8000804:	40020c00 	.word	0x40020c00

08000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000808:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800080a:	b130      	cbz	r0, 800081a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 800080c:	2801      	cmp	r0, #1
 800080e:	d009      	beq.n	8000824 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000810:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000812:	1e43      	subs	r3, r0, #1
 8000814:	4258      	negs	r0, r3
 8000816:	4158      	adcs	r0, r3
 8000818:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800081a:	4804      	ldr	r0, [pc, #16]	; (800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 800081c:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800081e:	f00a f99d 	bl	800ab5c <HAL_GPIO_ReadPin>
        break;
 8000822:	e7f6      	b.n	8000812 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000824:	4802      	ldr	r0, [pc, #8]	; (8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000826:	2110      	movs	r1, #16
 8000828:	e7f9      	b.n	800081e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800082a:	bf00      	nop
 800082c:	40021800 	.word	0x40021800
 8000830:	40020c00 	.word	0x40020c00

08000834 <_ZN8touchgfx4GPIO4initEv>:
{
 8000834:	b570      	push	{r4, r5, r6, lr}
 8000836:	4d08      	ldr	r5, [pc, #32]	; (8000858 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000838:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800083a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800083c:	b2e0      	uxtb	r0, r4
 800083e:	f7ff ffe3 	bl	8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000842:	b118      	cbz	r0, 800084c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000844:	682b      	ldr	r3, [r5, #0]
 8000846:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000848:	bf18      	it	ne
 800084a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800084c:	3401      	adds	r4, #1
 800084e:	2c05      	cmp	r4, #5
 8000850:	f105 0504 	add.w	r5, r5, #4
 8000854:	d1f2      	bne.n	800083c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	200001cc 	.word	0x200001cc

0800085c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800085c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800085e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000862:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000868:	2000      	movs	r0, #0
 800086a:	4770      	bx	lr

0800086c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800086c:	2000      	movs	r0, #0
 800086e:	4770      	bx	lr

08000870 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000870:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000872:	b10b      	cbz	r3, 8000878 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000874:	4608      	mov	r0, r1
 8000876:	4718      	bx	r3
        }
    }
 8000878:	4770      	bx	lr

0800087a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800087a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800087e:	4770      	bx	lr

08000880 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000880:	6840      	ldr	r0, [r0, #4]
 8000882:	6803      	ldr	r3, [r0, #0]
 8000884:	699b      	ldr	r3, [r3, #24]
 8000886:	4718      	bx	r3

08000888 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000888:	4770      	bx	lr

0800088a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800088a:	4770      	bx	lr

0800088c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 800088c:	4b01      	ldr	r3, [pc, #4]	; (8000894 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800088e:	6818      	ldr	r0, [r3, #0]
 8000890:	4770      	bx	lr
 8000892:	bf00      	nop
 8000894:	200001dc 	.word	0x200001dc

08000898 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000898:	4770      	bx	lr
	...

0800089c <_ZN11TouchGFXHAL10initializeEv>:
{
 800089c:	b538      	push	{r3, r4, r5, lr}
 800089e:	4604      	mov	r4, r0
    mcuInstr.init();
 80008a0:	4d09      	ldr	r5, [pc, #36]	; (80008c8 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008a2:	f7ff ffc7 	bl	8000834 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008a6:	4620      	mov	r0, r4
 80008a8:	f000 fd86 	bl	80013b8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008ac:	2300      	movs	r3, #0
 80008ae:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008b2:	4628      	mov	r0, r5
 80008b4:	f7ff feba 	bl	800062c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008b8:	2301      	movs	r3, #1
 80008ba:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008be:	4b03      	ldr	r3, [pc, #12]	; (80008cc <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008c0:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008c2:	6163      	str	r3, [r4, #20]
}
 80008c4:	bd38      	pop	{r3, r4, r5, pc}
 80008c6:	bf00      	nop
 80008c8:	200001e8 	.word	0x200001e8
 80008cc:	200001e4 	.word	0x200001e4

080008d0 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008d0:	6803      	ldr	r3, [r0, #0]
{
 80008d2:	4604      	mov	r4, r0
 80008d4:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80008d8:	4798      	blx	r3
    enableInterrupts();
 80008da:	6823      	ldr	r3, [r4, #0]
 80008dc:	4620      	mov	r0, r4
 80008de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80008e0:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008e2:	f000 fa2d 	bl	8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008e6:	6823      	ldr	r3, [r4, #0]
 80008e8:	4620      	mov	r0, r4
 80008ea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008ec:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ee:	2100      	movs	r1, #0
 80008f0:	4806      	ldr	r0, [pc, #24]	; (800090c <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008f2:	9100      	str	r1, [sp, #0]
 80008f4:	2329      	movs	r3, #41	; 0x29
 80008f6:	2215      	movs	r2, #21
 80008f8:	f009 ff1f 	bl	800a73a <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008fc:	f000 fa20 	bl	8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000900:	6823      	ldr	r3, [r4, #0]
 8000902:	4620      	mov	r0, r4
 8000904:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8000906:	4798      	blx	r3
    for (;;)
 8000908:	e7f8      	b.n	80008fc <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 800090a:	bf00      	nop
 800090c:	200203ac 	.word	0x200203ac

08000910 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000910:	b510      	push	{r4, lr}
 8000912:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000914:	f00f fef2 	bl	80106fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	4620      	mov	r0, r4
 800091c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 8000920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000924:	4718      	bx	r3

08000926 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000926:	f000 bd46 	b.w	80013b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800092a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800092a:	f000 bd5d 	b.w	80013e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800092e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800092e:	f000 bd5d 	b.w	80013ec <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000932 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000932:	f000 bd2f 	b.w	8001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000936 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000936:	f000 bd35 	b.w	80013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800093a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800093a:	f000 bd59 	b.w	80013f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000940 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000940:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000942:	4b09      	ldr	r3, [pc, #36]	; (8000968 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000944:	881b      	ldrh	r3, [r3, #0]
 8000946:	428b      	cmp	r3, r1
 8000948:	d803      	bhi.n	8000952 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800094a:	4b08      	ldr	r3, [pc, #32]	; (800096c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800094c:	881b      	ldrh	r3, [r3, #0]
 800094e:	4293      	cmp	r3, r2
 8000950:	d905      	bls.n	800095e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000952:	4b07      	ldr	r3, [pc, #28]	; (8000970 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000954:	4a07      	ldr	r2, [pc, #28]	; (8000974 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000956:	4808      	ldr	r0, [pc, #32]	; (8000978 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000958:	219e      	movs	r1, #158	; 0x9e
 800095a:	f022 fad5 	bl	8022f08 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800095e:	4b07      	ldr	r3, [pc, #28]	; (800097c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000960:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000962:	4b07      	ldr	r3, [pc, #28]	; (8000980 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000964:	801a      	strh	r2, [r3, #0]
    }
 8000966:	bd08      	pop	{r3, pc}
 8000968:	20020080 	.word	0x20020080
 800096c:	20020082 	.word	0x20020082
 8000970:	080253a4 	.word	0x080253a4
 8000974:	08025407 	.word	0x08025407
 8000978:	0802544a 	.word	0x0802544a
 800097c:	20020086 	.word	0x20020086
 8000980:	20020088 	.word	0x20020088

08000984 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000984:	4b02      	ldr	r3, [pc, #8]	; (8000990 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000986:	2200      	movs	r2, #0
 8000988:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800098a:	f00f b891 	b.w	800fab0 <_ZN8touchgfx3HAL10beginFrameEv>
 800098e:	bf00      	nop
 8000990:	20000014 	.word	0x20000014

08000994 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000994:	b510      	push	{r4, lr}
 8000996:	4604      	mov	r4, r0
    HAL::endFrame();
 8000998:	f00f f896 	bl	800fac8 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800099c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80009a0:	b113      	cbz	r3, 80009a8 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80009a2:	4b02      	ldr	r3, [pc, #8]	; (80009ac <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80009a4:	2201      	movs	r2, #1
 80009a6:	701a      	strb	r2, [r3, #0]
    }
}
 80009a8:	bd10      	pop	{r4, pc}
 80009aa:	bf00      	nop
 80009ac:	20000014 	.word	0x20000014

080009b0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009b0:	f00f b841 	b.w	800fa36 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009b4 <_ZN11TouchGFXHALD0Ev>:
 80009b4:	b510      	push	{r4, lr}
 80009b6:	217c      	movs	r1, #124	; 0x7c
 80009b8:	4604      	mov	r4, r0
 80009ba:	f022 fa77 	bl	8022eac <_ZdlPvj>
 80009be:	4620      	mov	r0, r4
 80009c0:	bd10      	pop	{r4, pc}

080009c2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009c2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009c6:	b11b      	cbz	r3, 80009d0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009c8:	6840      	ldr	r0, [r0, #4]
 80009ca:	6803      	ldr	r3, [r0, #0]
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	4718      	bx	r3
    }
 80009d0:	4618      	mov	r0, r3
 80009d2:	4770      	bx	lr

080009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009d4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009d6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009da:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80009de:	4b0c      	ldr	r3, [pc, #48]	; (8000a10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 80009e0:	428c      	cmp	r4, r1
 80009e2:	781a      	ldrb	r2, [r3, #0]
 80009e4:	d009      	beq.n	80009fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009e6:	b93a      	cbnz	r2, 80009f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e8:	4a0a      	ldr	r2, [pc, #40]	; (8000a14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ea:	490b      	ldr	r1, [pc, #44]	; (8000a18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ec:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ee:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009f0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009f4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009f6:	701a      	strb	r2, [r3, #0]
    }
 80009f8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009fa:	2a00      	cmp	r2, #0
 80009fc:	d0fc      	beq.n	80009f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	4a05      	ldr	r2, [pc, #20]	; (8000a14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a00:	4905      	ldr	r1, [pc, #20]	; (8000a18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a02:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a04:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a06:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a08:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	e7f3      	b.n	80009f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a0e:	bf00      	nop
 8000a10:	20020084 	.word	0x20020084
 8000a14:	20020080 	.word	0x20020080
 8000a18:	20020082 	.word	0x20020082

08000a1c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a1c:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 8000a1e:	4c0c      	ldr	r4, [pc, #48]	; (8000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a20:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a22:	b931      	cbnz	r1, 8000a32 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 8000a24:	4b0b      	ldr	r3, [pc, #44]	; (8000a54 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a26:	4a0c      	ldr	r2, [pc, #48]	; (8000a58 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a28:	480c      	ldr	r0, [pc, #48]	; (8000a5c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a2a:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8000a2e:	f022 fa6b 	bl	8022f08 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a32:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a36:	3a00      	subs	r2, #0
 8000a38:	4909      	ldr	r1, [pc, #36]	; (8000a60 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000a3a:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a3c:	bf18      	it	ne
 8000a3e:	2201      	movne	r2, #1
 8000a40:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000a42:	3b00      	subs	r3, #0
 8000a44:	4a07      	ldr	r2, [pc, #28]	; (8000a64 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 8000a46:	bf18      	it	ne
 8000a48:	2301      	movne	r3, #1
 8000a4a:	7013      	strb	r3, [r2, #0]
}
 8000a4c:	bd10      	pop	{r4, pc}
 8000a4e:	bf00      	nop
 8000a50:	200001dc 	.word	0x200001dc
 8000a54:	0802548f 	.word	0x0802548f
 8000a58:	080254c7 	.word	0x080254c7
 8000a5c:	0802544a 	.word	0x0802544a
 8000a60:	2002008a 	.word	0x2002008a
 8000a64:	2002008b 	.word	0x2002008b

08000a68 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a68:	2801      	cmp	r0, #1
    {
 8000a6a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a6c:	d80a      	bhi.n	8000a84 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a6e:	784b      	ldrb	r3, [r1, #1]
 8000a70:	9300      	str	r3, [sp, #0]
 8000a72:	780b      	ldrb	r3, [r1, #0]
 8000a74:	4808      	ldr	r0, [pc, #32]	; (8000a98 <DSI_IO_WriteCmd+0x30>)
 8000a76:	2215      	movs	r2, #21
 8000a78:	2100      	movs	r1, #0
 8000a7a:	f009 fe5e 	bl	800a73a <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a7e:	b003      	add	sp, #12
 8000a80:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a84:	9101      	str	r1, [sp, #4]
 8000a86:	5c0b      	ldrb	r3, [r1, r0]
 8000a88:	9300      	str	r3, [sp, #0]
 8000a8a:	2239      	movs	r2, #57	; 0x39
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2100      	movs	r1, #0
 8000a90:	4801      	ldr	r0, [pc, #4]	; (8000a98 <DSI_IO_WriteCmd+0x30>)
 8000a92:	f009 fe63 	bl	800a75c <HAL_DSI_LongWrite>
    }
 8000a96:	e7f2      	b.n	8000a7e <DSI_IO_WriteCmd+0x16>
 8000a98:	200203ac 	.word	0x200203ac

08000a9c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a9e:	4a0b      	ldr	r2, [pc, #44]	; (8000acc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000aa0:	4c0b      	ldr	r4, [pc, #44]	; (8000ad0 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000aa2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000aa4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000aa6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000aa8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000aaa:	9201      	str	r2, [sp, #4]
 8000aac:	2244      	movs	r2, #68	; 0x44
 8000aae:	9200      	str	r2, [sp, #0]
 8000ab0:	2100      	movs	r1, #0
 8000ab2:	2239      	movs	r2, #57	; 0x39
 8000ab4:	4620      	mov	r0, r4
 8000ab6:	f009 fe51 	bl	800a75c <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aba:	2100      	movs	r1, #0
 8000abc:	9100      	str	r1, [sp, #0]
 8000abe:	2335      	movs	r3, #53	; 0x35
 8000ac0:	462a      	mov	r2, r5
 8000ac2:	4620      	mov	r0, r4
 8000ac4:	f009 fe39 	bl	800a73a <HAL_DSI_ShortWrite>
    }
 8000ac8:	b003      	add	sp, #12
 8000aca:	bd30      	pop	{r4, r5, pc}
 8000acc:	200001f4 	.word	0x200001f4
 8000ad0:	200203ac 	.word	0x200203ac

08000ad4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000ad4:	b507      	push	{r0, r1, r2, lr}
 8000ad6:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000ad8:	f7ff ffe0 	bl	8000a9c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000adc:	9801      	ldr	r0, [sp, #4]
}
 8000ade:	b003      	add	sp, #12
 8000ae0:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ae4:	f000 bc66 	b.w	80013b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000ae8 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000ae8:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000aea:	4b07      	ldr	r3, [pc, #28]	; (8000b08 <LCD_SetUpdateRegion+0x20>)
 8000aec:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000af0:	232a      	movs	r3, #42	; 0x2a
 8000af2:	9001      	str	r0, [sp, #4]
 8000af4:	9300      	str	r3, [sp, #0]
 8000af6:	2239      	movs	r2, #57	; 0x39
 8000af8:	2304      	movs	r3, #4
 8000afa:	2100      	movs	r1, #0
 8000afc:	4803      	ldr	r0, [pc, #12]	; (8000b0c <LCD_SetUpdateRegion+0x24>)
 8000afe:	f009 fe2d 	bl	800a75c <HAL_DSI_LongWrite>
    }
 8000b02:	b003      	add	sp, #12
 8000b04:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b08:	20000004 	.word	0x20000004
 8000b0c:	200203ac 	.word	0x200203ac

08000b10 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b10:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b12:	4d15      	ldr	r5, [pc, #84]	; (8000b68 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b14:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b16:	2000      	movs	r0, #0
 8000b18:	f7ff fe2e 	bl	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b1c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b1e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b22:	3301      	adds	r3, #1
 8000b24:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b28:	f000 f8fe 	bl	8000d28 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b2c:	4b0f      	ldr	r3, [pc, #60]	; (8000b6c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b2e:	6828      	ldr	r0, [r5, #0]
 8000b30:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b32:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b34:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b38:	b123      	cbz	r3, 8000b44 <HAL_DSI_TearingEffectCallback+0x34>
 8000b3a:	4d0d      	ldr	r5, [pc, #52]	; (8000b70 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b3c:	782b      	ldrb	r3, [r5, #0]
 8000b3e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b42:	b123      	cbz	r3, 8000b4e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b48:	2000      	movs	r0, #0
 8000b4a:	f7ff be31 	b.w	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b4e:	f00f fdd5 	bl	80106fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b52:	4b08      	ldr	r3, [pc, #32]	; (8000b74 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b54:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b56:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b58:	f7ff ffc6 	bl	8000ae8 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b5c:	4620      	mov	r0, r4
 8000b5e:	f009 fddc 	bl	800a71a <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b62:	2301      	movs	r3, #1
 8000b64:	702b      	strb	r3, [r5, #0]
    }
 8000b66:	bd70      	pop	{r4, r5, r6, pc}
 8000b68:	2002008c 	.word	0x2002008c
 8000b6c:	20000014 	.word	0x20000014
 8000b70:	200001f6 	.word	0x200001f6
 8000b74:	200001e0 	.word	0x200001e0

08000b78 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b78:	4b30      	ldr	r3, [pc, #192]	; (8000c3c <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b7a:	4a31      	ldr	r2, [pc, #196]	; (8000c40 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b7c:	b570      	push	{r4, r5, r6, lr}
 8000b7e:	4605      	mov	r5, r0
        updateRegion++;
 8000b80:	6818      	ldr	r0, [r3, #0]
 8000b82:	4c30      	ldr	r4, [pc, #192]	; (8000c44 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b84:	3001      	adds	r0, #1
 8000b86:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b88:	4b2f      	ldr	r3, [pc, #188]	; (8000c48 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b8a:	2803      	cmp	r0, #3
 8000b8c:	681e      	ldr	r6, [r3, #0]
 8000b8e:	dc2a      	bgt.n	8000be6 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b90:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b94:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b98:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f021 0108 	bic.w	r1, r1, #8
 8000ba0:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000ba4:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000ba6:	bf0c      	ite	eq
 8000ba8:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000baa:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bac:	3302      	adds	r3, #2
 8000bae:	4927      	ldr	r1, [pc, #156]	; (8000c4c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb0:	041b      	lsls	r3, r3, #16
 8000bb2:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000bb6:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bb8:	4b25      	ldr	r3, [pc, #148]	; (8000c50 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bba:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bbc:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bc0:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bc2:	4b24      	ldr	r3, [pc, #144]	; (8000c54 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bc4:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bc6:	2301      	movs	r3, #1
 8000bc8:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000bca:	f7ff ff8d 	bl	8000ae8 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000bce:	4a1d      	ldr	r2, [pc, #116]	; (8000c44 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000bd0:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000bd4:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000bd8:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bda:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000be2:	f009 bd9a 	b.w	800a71a <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000be6:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bea:	491b      	ldr	r1, [pc, #108]	; (8000c58 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bec:	f023 0308 	bic.w	r3, r3, #8
 8000bf0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bf4:	4b15      	ldr	r3, [pc, #84]	; (8000c4c <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bf6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bf8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bfa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bfe:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c00:	4916      	ldr	r1, [pc, #88]	; (8000c5c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c02:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c04:	4913      	ldr	r1, [pc, #76]	; (8000c54 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000c06:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c08:	2201      	movs	r2, #1
 8000c0a:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c0c:	2000      	movs	r0, #0
 8000c0e:	f7ff ff6b 	bl	8000ae8 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c16:	f043 0308 	orr.w	r3, r3, #8
 8000c1a:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c1e:	2000      	movs	r0, #0
 8000c20:	f7ff fdc6 	bl	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c24:	4b0e      	ldr	r3, [pc, #56]	; (8000c60 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000c26:	2200      	movs	r2, #0
 8000c28:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c2a:	4b0e      	ldr	r3, [pc, #56]	; (8000c64 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c2c:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c2e:	b120      	cbz	r0, 8000c3a <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000c30:	6803      	ldr	r3, [r0, #0]
    }
 8000c32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c36:	6a1b      	ldr	r3, [r3, #32]
 8000c38:	4718      	bx	r3
 8000c3a:	bd70      	pop	{r4, r5, r6, pc}
 8000c3c:	200001e0 	.word	0x200001e0
 8000c40:	40016884 	.word	0x40016884
 8000c44:	40016c00 	.word	0x40016c00
 8000c48:	200001dc 	.word	0x200001dc
 8000c4c:	40016800 	.word	0x40016800
 8000c50:	00ca01e3 	.word	0x00ca01e3
 8000c54:	06800193 	.word	0x06800193
 8000c58:	00ca01e2 	.word	0x00ca01e2
 8000c5c:	00ca0003 	.word	0x00ca0003
 8000c60:	200001f6 	.word	0x200001f6
 8000c64:	2002008c 	.word	0x2002008c

08000c68 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c68:	b508      	push	{r3, lr}
 8000c6a:	4b04      	ldr	r3, [pc, #16]	; (8000c7c <IdleTaskHook+0x14>)
 8000c6c:	4601      	mov	r1, r0
 8000c6e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c70:	b101      	cbz	r1, 8000c74 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c72:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c74:	f00f fd5c 	bl	8010730 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c78:	2001      	movs	r0, #1
 8000c7a:	bd08      	pop	{r3, pc}
 8000c7c:	2002008c 	.word	0x2002008c

08000c80 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c80:	4b05      	ldr	r3, [pc, #20]	; (8000c98 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c82:	4806      	ldr	r0, [pc, #24]	; (8000c9c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c84:	2200      	movs	r2, #0
 8000c86:	605a      	str	r2, [r3, #4]
 8000c88:	609a      	str	r2, [r3, #8]
 8000c8a:	4a05      	ldr	r2, [pc, #20]	; (8000ca0 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c8c:	601a      	str	r2, [r3, #0]
 8000c8e:	4b05      	ldr	r3, [pc, #20]	; (8000ca4 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c90:	6003      	str	r3, [r0, #0]
        init();
 8000c92:	f7ff bd01 	b.w	8000698 <_ZN8touchgfx10KeySampler4initEv>
 8000c96:	bf00      	nop
 8000c98:	200001e8 	.word	0x200001e8
 8000c9c:	200001e4 	.word	0x200001e4
 8000ca0:	080252c4 	.word	0x080252c4
 8000ca4:	080252ec 	.word	0x080252ec

08000ca8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ca8:	2101      	movs	r1, #1
{
 8000caa:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000cac:	2200      	movs	r2, #0
 8000cae:	4608      	mov	r0, r1
 8000cb0:	f00b ffcb 	bl	800cc4a <osSemaphoreNew>
 8000cb4:	4b0a      	ldr	r3, [pc, #40]	; (8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cb6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cb8:	b928      	cbnz	r0, 8000cc6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cba:	4b0a      	ldr	r3, [pc, #40]	; (8000ce4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cbc:	4a0a      	ldr	r2, [pc, #40]	; (8000ce8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cbe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cc0:	480a      	ldr	r0, [pc, #40]	; (8000cec <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cc2:	f022 f921 	bl	8022f08 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	2104      	movs	r1, #4
 8000cca:	2001      	movs	r0, #1
 8000ccc:	f00c f85c 	bl	800cd88 <osMessageQueueNew>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	; (8000cf0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000cd2:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cd4:	b918      	cbnz	r0, 8000cde <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000cd6:	4b07      	ldr	r3, [pc, #28]	; (8000cf4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000cd8:	4a03      	ldr	r2, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cda:	212d      	movs	r1, #45	; 0x2d
 8000cdc:	e7f0      	b.n	8000cc0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000cde:	bd08      	pop	{r3, pc}
 8000ce0:	200001fc 	.word	0x200001fc
 8000ce4:	080255e8 	.word	0x080255e8
 8000ce8:	08025631 	.word	0x08025631
 8000cec:	08025660 	.word	0x08025660
 8000cf0:	200001f8 	.word	0x200001f8
 8000cf4:	080256af 	.word	0x080256af

08000cf8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cf8:	4b02      	ldr	r3, [pc, #8]	; (8000d04 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cfa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cfe:	6818      	ldr	r0, [r3, #0]
 8000d00:	f00b bfee 	b.w	800cce0 <osSemaphoreAcquire>
 8000d04:	200001fc 	.word	0x200001fc

08000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d08:	4b01      	ldr	r3, [pc, #4]	; (8000d10 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d0a:	6818      	ldr	r0, [r3, #0]
 8000d0c:	f00c b814 	b.w	800cd38 <osSemaphoreRelease>
 8000d10:	200001fc 	.word	0x200001fc

08000d14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d14:	4b02      	ldr	r3, [pc, #8]	; (8000d20 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d16:	2100      	movs	r1, #0
 8000d18:	6818      	ldr	r0, [r3, #0]
 8000d1a:	f00b bfe1 	b.w	800cce0 <osSemaphoreAcquire>
 8000d1e:	bf00      	nop
 8000d20:	200001fc 	.word	0x200001fc

08000d24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d24:	f7ff bff0 	b.w	8000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d28 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d28:	4803      	ldr	r0, [pc, #12]	; (8000d38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d2a:	4904      	ldr	r1, [pc, #16]	; (8000d3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d2c:	6800      	ldr	r0, [r0, #0]
 8000d2e:	2300      	movs	r3, #0
 8000d30:	461a      	mov	r2, r3
 8000d32:	f00c b865 	b.w	800ce00 <osMessageQueuePut>
 8000d36:	bf00      	nop
 8000d38:	200001f8 	.word	0x200001f8
 8000d3c:	20000018 	.word	0x20000018

08000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d40:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d42:	4c08      	ldr	r4, [pc, #32]	; (8000d64 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d44:	2300      	movs	r3, #0
 8000d46:	461a      	mov	r2, r3
 8000d48:	a901      	add	r1, sp, #4
 8000d4a:	6820      	ldr	r0, [r4, #0]
 8000d4c:	f00c f888 	bl	800ce60 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d50:	6820      	ldr	r0, [r4, #0]
 8000d52:	f04f 33ff 	mov.w	r3, #4294967295
 8000d56:	2200      	movs	r2, #0
 8000d58:	a901      	add	r1, sp, #4
 8000d5a:	f00c f881 	bl	800ce60 <osMessageQueueGet>
}
 8000d5e:	b002      	add	sp, #8
 8000d60:	bd10      	pop	{r4, pc}
 8000d62:	bf00      	nop
 8000d64:	200001f8 	.word	0x200001f8

08000d68 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d68:	6803      	ldr	r3, [r0, #0]
 8000d6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d6c:	4718      	bx	r3

08000d6e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d72:	6803      	ldr	r3, [r0, #0]
 8000d74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d76:	4718      	bx	r3

08000d78 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000d78:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	9301      	str	r3, [sp, #4]
 8000d7e:	4b0d      	ldr	r3, [pc, #52]	; (8000db4 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d82:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d86:	631a      	str	r2, [r3, #48]	; 0x30
 8000d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d8a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d8e:	9201      	str	r2, [sp, #4]
 8000d90:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d92:	691a      	ldr	r2, [r3, #16]
 8000d94:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d98:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d9a:	691a      	ldr	r2, [r3, #16]
 8000d9c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000da0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000da2:	4b05      	ldr	r3, [pc, #20]	; (8000db8 <_ZN8STM32DMA10initializeEv+0x40>)
 8000da4:	4a05      	ldr	r2, [pc, #20]	; (8000dbc <_ZN8STM32DMA10initializeEv+0x44>)
 8000da6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000da8:	4b05      	ldr	r3, [pc, #20]	; (8000dc0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000daa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000dae:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000db0:	b002      	add	sp, #8
 8000db2:	4770      	bx	lr
 8000db4:	40023800 	.word	0x40023800
 8000db8:	20020474 	.word	0x20020474
 8000dbc:	08000dcd 	.word	0x08000dcd
 8000dc0:	e000e100 	.word	0xe000e100

08000dc4 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dc4:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000dc8:	4770      	bx	lr
	...

08000dcc <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000dcc:	4b02      	ldr	r3, [pc, #8]	; (8000dd8 <DMA2D_XferCpltCallback+0xc>)
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000dd2:	6803      	ldr	r3, [r0, #0]
 8000dd4:	695b      	ldr	r3, [r3, #20]
 8000dd6:	4718      	bx	r3
 8000dd8:	2002008c 	.word	0x2002008c

08000ddc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000ddc:	b508      	push	{r3, lr}
 8000dde:	280b      	cmp	r0, #11
 8000de0:	d80b      	bhi.n	8000dfa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000de2:	e8df f000 	tbb	[pc, r0]
 8000de6:	0612      	.short	0x0612
 8000de8:	0a0a0a10 	.word	0x0a0a0a10
 8000dec:	0808080a 	.word	0x0808080a
 8000df0:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000df2:	2001      	movs	r0, #1
}
 8000df4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000df6:	2005      	movs	r0, #5
        break;
 8000df8:	e7fc      	b.n	8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dfa:	4b05      	ldr	r3, [pc, #20]	; (8000e10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dfc:	4a05      	ldr	r2, [pc, #20]	; (8000e14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dfe:	4806      	ldr	r0, [pc, #24]	; (8000e18 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000e00:	2167      	movs	r1, #103	; 0x67
 8000e02:	f022 f881 	bl	8022f08 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000e06:	2000      	movs	r0, #0
 8000e08:	e7f4      	b.n	8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000e0a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e0c:	e7f2      	b.n	8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e0e:	bf00      	nop
 8000e10:	080256f1 	.word	0x080256f1
 8000e14:	0802570c 	.word	0x0802570c
 8000e18:	08025756 	.word	0x08025756

08000e1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000e1c:	b508      	push	{r3, lr}
 8000e1e:	280a      	cmp	r0, #10
 8000e20:	d809      	bhi.n	8000e36 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000e22:	e8df f000 	tbb	[pc, r0]
 8000e26:	0610      	.short	0x0610
 8000e28:	0808080e 	.word	0x0808080e
 8000e2c:	06060608 	.word	0x06060608
 8000e30:	06          	.byte	0x06
 8000e31:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e32:	2001      	movs	r0, #1
}
 8000e34:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000e36:	4b05      	ldr	r3, [pc, #20]	; (8000e4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000e38:	4a05      	ldr	r2, [pc, #20]	; (8000e50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000e3a:	4806      	ldr	r0, [pc, #24]	; (8000e54 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000e3c:	2188      	movs	r1, #136	; 0x88
 8000e3e:	f022 f863 	bl	8022f08 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e42:	2000      	movs	r0, #0
 8000e44:	e7f6      	b.n	8000e34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000e46:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e48:	e7f4      	b.n	8000e34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e4a:	bf00      	nop
 8000e4c:	080256f1 	.word	0x080256f1
 8000e50:	080257a3 	.word	0x080257a3
 8000e54:	08025756 	.word	0x08025756

08000e58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e5c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e60:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e62:	4640      	mov	r0, r8
 8000e64:	f7ff ffba 	bl	8000ddc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e68:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e6a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e6c:	4638      	mov	r0, r7
 8000e6e:	f7ff ffb5 	bl	8000ddc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e72:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e74:	4638      	mov	r0, r7
 8000e76:	f7ff ffd1 	bl	8000e1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e7a:	8aa1      	ldrh	r1, [r4, #20]
 8000e7c:	8b62      	ldrh	r2, [r4, #26]
 8000e7e:	4b4b      	ldr	r3, [pc, #300]	; (8000fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000e80:	1a52      	subs	r2, r2, r1
 8000e82:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e84:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e86:	8b22      	ldrh	r2, [r4, #24]
 8000e88:	1a52      	subs	r2, r2, r1
 8000e8a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e8c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e8e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e90:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e94:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e96:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e98:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e9a:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e9c:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e9e:	f8d4 c000 	ldr.w	ip, [r4]
 8000ea2:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000ea6:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000eaa:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000eae:	469e      	mov	lr, r3
 8000eb0:	d030      	beq.n	8000f14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000eb2:	d814      	bhi.n	8000ede <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000eb4:	f1bc 0f20 	cmp.w	ip, #32
 8000eb8:	ea45 0002 	orr.w	r0, r5, r2
 8000ebc:	d068      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ebe:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000ec2:	d065      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ec4:	f1bc 0f04 	cmp.w	ip, #4
 8000ec8:	d020      	beq.n	8000f0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eca:	4b38      	ldr	r3, [pc, #224]	; (8000fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ecc:	432a      	orrs	r2, r5
 8000ece:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ed2:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed4:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ed6:	d148      	bne.n	8000f6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ed8:	f240 2201 	movw	r2, #513	; 0x201
 8000edc:	e014      	b.n	8000f08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000ede:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000ee2:	d007      	beq.n	8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000ee4:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000ee8:	d1ef      	bne.n	8000eca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eea:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eee:	f042 0209 	orr.w	r2, r2, #9
 8000ef2:	e003      	b.n	8000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ef8:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000efc:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000efe:	68e2      	ldr	r2, [r4, #12]
 8000f00:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f02:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f04:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f06:	4a2a      	ldr	r2, [pc, #168]	; (8000fb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000f08:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000f0a:	e04c      	b.n	8000fa6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f0c:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f10:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f12:	e7f6      	b.n	8000f02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000f14:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f16:	432a      	orrs	r2, r5
 8000f18:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000f1c:	1d04      	adds	r4, r0, #4
 8000f1e:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f20:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f22:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f24:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f26:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f28:	b142      	cbz	r2, 8000f3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000f2a:	2a01      	cmp	r2, #1
 8000f2c:	d01f      	beq.n	8000f6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000f2e:	4b21      	ldr	r3, [pc, #132]	; (8000fb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000f30:	4a21      	ldr	r2, [pc, #132]	; (8000fb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000f32:	4822      	ldr	r0, [pc, #136]	; (8000fbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000f34:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000f38:	f021 ffe6 	bl	8022f08 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f3c:	8842      	ldrh	r2, [r0, #2]
 8000f3e:	69d9      	ldr	r1, [r3, #28]
 8000f40:	1e50      	subs	r0, r2, #1
 8000f42:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f46:	f022 0210 	bic.w	r2, r2, #16
 8000f4a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f4e:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f50:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f52:	4b16      	ldr	r3, [pc, #88]	; (8000fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000f54:	69da      	ldr	r2, [r3, #28]
 8000f56:	f042 0220 	orr.w	r2, r2, #32
 8000f5a:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f5c:	69da      	ldr	r2, [r3, #28]
 8000f5e:	0692      	lsls	r2, r2, #26
 8000f60:	d4fc      	bmi.n	8000f5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f62:	2210      	movs	r2, #16
 8000f64:	609a      	str	r2, [r3, #8]
            if(blend)
 8000f66:	2c00      	cmp	r4, #0
 8000f68:	d1cd      	bne.n	8000f06 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f6a:	4a15      	ldr	r2, [pc, #84]	; (8000fc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f6c:	e7cc      	b.n	8000f08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f6e:	8842      	ldrh	r2, [r0, #2]
 8000f70:	69d9      	ldr	r1, [r3, #28]
 8000f72:	1e50      	subs	r0, r2, #1
 8000f74:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f78:	f022 0210 	bic.w	r2, r2, #16
 8000f7c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f80:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f84:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f88:	bf18      	it	ne
 8000f8a:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f8c:	61da      	str	r2, [r3, #28]
                break;
 8000f8e:	e7e0      	b.n	8000f52 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f90:	4b07      	ldr	r3, [pc, #28]	; (8000fb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f92:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f96:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9a:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f9e:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000fa2:	f8ce 3000 	str.w	r3, [lr]
}
 8000fa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000faa:	bf00      	nop
 8000fac:	4002b000 	.word	0x4002b000
 8000fb0:	00020201 	.word	0x00020201
 8000fb4:	080257ee 	.word	0x080257ee
 8000fb8:	08025808 	.word	0x08025808
 8000fbc:	08025756 	.word	0x08025756
 8000fc0:	00010201 	.word	0x00010201

08000fc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000fc4:	b538      	push	{r3, r4, r5, lr}
 8000fc6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000fc8:	7f88      	ldrb	r0, [r1, #30]
 8000fca:	f7ff ff27 	bl	8000e1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fce:	8aa5      	ldrh	r5, [r4, #20]
 8000fd0:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fd2:	4b16      	ldr	r3, [pc, #88]	; (800102c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fd4:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fd6:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fd8:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000fdc:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fde:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fe0:	6921      	ldr	r1, [r4, #16]
 8000fe2:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fe4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fe6:	6825      	ldr	r5, [r4, #0]
 8000fe8:	2d08      	cmp	r5, #8
 8000fea:	d10e      	bne.n	800100a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fec:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fee:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ff0:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000ff2:	7f20      	ldrb	r0, [r4, #28]
 8000ff4:	4a0e      	ldr	r2, [pc, #56]	; (8001030 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000ff6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000ffa:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ffc:	68e2      	ldr	r2, [r4, #12]
 8000ffe:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001000:	4a0c      	ldr	r2, [pc, #48]	; (8001034 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001002:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001004:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001006:	601a      	str	r2, [r3, #0]
    }
}
 8001008:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 800100a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800100c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800100e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001010:	68e1      	ldr	r1, [r4, #12]
 8001012:	0a0a      	lsrs	r2, r1, #8
 8001014:	0948      	lsrs	r0, r1, #5
 8001016:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 800101a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800101e:	4302      	orrs	r2, r0
 8001020:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001024:	430a      	orrs	r2, r1
 8001026:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001028:	4a03      	ldr	r2, [pc, #12]	; (8001038 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 800102a:	e7ec      	b.n	8001006 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800102c:	4002b000 	.word	0x4002b000
 8001030:	00010009 	.word	0x00010009
 8001034:	00020201 	.word	0x00020201
 8001038:	00030201 	.word	0x00030201

0800103c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800103c:	4b05      	ldr	r3, [pc, #20]	; (8001054 <_ZN8STM32DMAD1Ev+0x18>)
 800103e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001040:	4b05      	ldr	r3, [pc, #20]	; (8001058 <_ZN8STM32DMAD1Ev+0x1c>)
 8001042:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001046:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800104a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800104e:	f3bf 8f6f 	isb	sy
}
 8001052:	4770      	bx	lr
 8001054:	08025850 	.word	0x08025850
 8001058:	e000e100 	.word	0xe000e100

0800105c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800105c:	b510      	push	{r4, lr}
 800105e:	4604      	mov	r4, r0
}
 8001060:	f7ff ffec 	bl	800103c <_ZN8STM32DMAD1Ev>
 8001064:	4620      	mov	r0, r4
 8001066:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800106a:	f021 ff1f 	bl	8022eac <_ZdlPvj>
 800106e:	4620      	mov	r0, r4
 8001070:	bd10      	pop	{r4, pc}
	...

08001074 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001074:	b570      	push	{r4, r5, r6, lr}
 8001076:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001078:	4625      	mov	r5, r4
 800107a:	4b0a      	ldr	r3, [pc, #40]	; (80010a4 <_ZN8STM32DMAC1Ev+0x30>)
 800107c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800107e:	2600      	movs	r6, #0
 8001080:	6060      	str	r0, [r4, #4]
 8001082:	7226      	strb	r6, [r4, #8]
 8001084:	7266      	strb	r6, [r4, #9]
 8001086:	f845 3b20 	str.w	r3, [r5], #32
 800108a:	2260      	movs	r2, #96	; 0x60
 800108c:	4629      	mov	r1, r5
 800108e:	f00f fc83 	bl	8010998 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001092:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001096:	60ee      	str	r6, [r5, #12]
 8001098:	3520      	adds	r5, #32
 800109a:	42ab      	cmp	r3, r5
 800109c:	d1fb      	bne.n	8001096 <_ZN8STM32DMAC1Ev+0x22>
}
 800109e:	4620      	mov	r0, r4
 80010a0:	bd70      	pop	{r4, r5, r6, pc}
 80010a2:	bf00      	nop
 80010a4:	08025850 	.word	0x08025850

080010a8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010a8:	2001      	movs	r0, #1
 80010aa:	4770      	bx	lr

080010ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010ac:	200c      	movs	r0, #12
 80010ae:	4770      	bx	lr

080010b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010b0:	230c      	movs	r3, #12
 80010b2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b6:	3008      	adds	r0, #8
 80010b8:	4770      	bx	lr

080010ba <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010ba:	230c      	movs	r3, #12
 80010bc:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c0:	3008      	adds	r0, #8
 80010c2:	4770      	bx	lr

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c8:	f64d 7014 	movw	r0, #57108	; 0xdf14
 80010cc:	4770      	bx	lr

080010ce <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ce:	f64d 7314 	movw	r3, #57108	; 0xdf14
 80010d2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d6:	3008      	adds	r0, #8
 80010d8:	4770      	bx	lr

080010da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010da:	f64d 7314 	movw	r3, #57108	; 0xdf14
 80010de:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010e2:	3008      	adds	r0, #8
 80010e4:	4770      	bx	lr

080010e6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e6:	2001      	movs	r0, #1
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010ea:	2010      	movs	r0, #16
 80010ec:	4770      	bx	lr

080010ee <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ee:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010fa:	3008      	adds	r0, #8
 80010fc:	4770      	bx	lr

080010fe <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010fe:	4608      	mov	r0, r1
 8001100:	f003 bcc8 	b.w	8004a94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001104:	b510      	push	{r4, lr}
 8001106:	4b03      	ldr	r3, [pc, #12]	; (8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001108:	6003      	str	r3, [r0, #0]
 800110a:	4604      	mov	r4, r0
 800110c:	f00d fefa 	bl	800ef04 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001110:	4620      	mov	r0, r4
 8001112:	bd10      	pop	{r4, pc}
 8001114:	08025908 	.word	0x08025908

08001118 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001118:	b510      	push	{r4, lr}
 800111a:	4604      	mov	r4, r0
 800111c:	f7ff fff2 	bl	8001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	2114      	movs	r1, #20
 8001124:	f021 fec2 	bl	8022eac <_ZdlPvj>
 8001128:	4620      	mov	r0, r4
 800112a:	bd10      	pop	{r4, pc}

0800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800112c:	b510      	push	{r4, lr}
 800112e:	4b03      	ldr	r3, [pc, #12]	; (800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001130:	6003      	str	r3, [r0, #0]
 8001132:	4604      	mov	r4, r0
 8001134:	f00d fee6 	bl	800ef04 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}
 800113c:	080258d4 	.word	0x080258d4

08001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001140:	b510      	push	{r4, lr}
 8001142:	4604      	mov	r4, r0
 8001144:	f7ff fff2 	bl	800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001148:	4620      	mov	r0, r4
 800114a:	f64d 711c 	movw	r1, #57116	; 0xdf1c
 800114e:	f021 fead 	bl	8022eac <_ZdlPvj>
 8001152:	4620      	mov	r0, r4
 8001154:	bd10      	pop	{r4, pc}
	...

08001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001158:	b510      	push	{r4, lr}
 800115a:	4b03      	ldr	r3, [pc, #12]	; (8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800115c:	6003      	str	r3, [r0, #0]
 800115e:	4604      	mov	r4, r0
 8001160:	f00d fed0 	bl	800ef04 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001164:	4620      	mov	r0, r4
 8001166:	bd10      	pop	{r4, pc}
 8001168:	080258a0 	.word	0x080258a0

0800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800116c:	b510      	push	{r4, lr}
 800116e:	4604      	mov	r4, r0
 8001170:	f7ff fff2 	bl	8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001174:	4620      	mov	r0, r4
 8001176:	2118      	movs	r1, #24
 8001178:	f021 fe98 	bl	8022eac <_ZdlPvj>
 800117c:	4620      	mov	r0, r4
 800117e:	bd10      	pop	{r4, pc}

08001180 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001180:	b510      	push	{r4, lr}
 8001182:	4b09      	ldr	r3, [pc, #36]	; (80011a8 <_ZN12FrontendHeapD1Ev+0x28>)
 8001184:	6003      	str	r3, [r0, #0]
 8001186:	4604      	mov	r4, r0
 8001188:	f500 405f 	add.w	r0, r0, #57088	; 0xdf00
 800118c:	3048      	adds	r0, #72	; 0x48
 800118e:	f7ff ffb9 	bl	8001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001192:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001196:	f7ff ffc9 	bl	800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800119a:	f104 0014 	add.w	r0, r4, #20
 800119e:	f7ff ffdb 	bl	8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a2:	4620      	mov	r0, r4
 80011a4:	bd10      	pop	{r4, pc}
 80011a6:	bf00      	nop
 80011a8:	0802593c 	.word	0x0802593c

080011ac <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011ac:	b508      	push	{r3, lr}
 80011ae:	4802      	ldr	r0, [pc, #8]	; (80011b8 <__tcf_0+0xc>)
 80011b0:	f7ff ffe6 	bl	8001180 <_ZN12FrontendHeapD1Ev>
 80011b4:	bd08      	pop	{r3, pc}
 80011b6:	bf00      	nop
 80011b8:	20000204 	.word	0x20000204

080011bc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011bc:	b510      	push	{r4, lr}
 80011be:	4604      	mov	r4, r0
 80011c0:	f7ff ffde 	bl	8001180 <_ZN12FrontendHeapD1Ev>
 80011c4:	4620      	mov	r0, r4
 80011c6:	f24e 01b8 	movw	r1, #57528	; 0xe0b8
 80011ca:	f021 fe6f 	bl	8022eac <_ZdlPvj>
 80011ce:	4620      	mov	r0, r4
 80011d0:	bd10      	pop	{r4, pc}
	...

080011d4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011d8:	f000 ff0a 	bl	8001ff0 <_ZN14BitmapDatabase11getInstanceEv>
 80011dc:	4605      	mov	r5, r0
 80011de:	f000 ff0b 	bl	8001ff8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011e2:	2400      	movs	r4, #0
 80011e4:	4601      	mov	r1, r0
 80011e6:	4623      	mov	r3, r4
 80011e8:	4628      	mov	r0, r5
 80011ea:	4622      	mov	r2, r4
 80011ec:	9400      	str	r4, [sp, #0]
 80011ee:	f015 fded 	bl	8016dcc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011f2:	4b24      	ldr	r3, [pc, #144]	; (8001284 <touchgfx_init+0xb0>)
 80011f4:	4a24      	ldr	r2, [pc, #144]	; (8001288 <touchgfx_init+0xb4>)
        static FrontendHeap instance;
 80011f6:	4d25      	ldr	r5, [pc, #148]	; (800128c <touchgfx_init+0xb8>)
 80011f8:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011fa:	4620      	mov	r0, r4
 80011fc:	f005 fb5e 	bl	80068bc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001200:	4823      	ldr	r0, [pc, #140]	; (8001290 <touchgfx_init+0xbc>)
 8001202:	f015 fd25 	bl	8016c50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001206:	782b      	ldrb	r3, [r5, #0]
 8001208:	f3bf 8f5b 	dmb	ish
 800120c:	07db      	lsls	r3, r3, #31
 800120e:	d433      	bmi.n	8001278 <touchgfx_init+0xa4>
 8001210:	4628      	mov	r0, r5
 8001212:	f021 fe4d 	bl	8022eb0 <__cxa_guard_acquire>
 8001216:	b378      	cbz	r0, 8001278 <touchgfx_init+0xa4>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001218:	4c1e      	ldr	r4, [pc, #120]	; (8001294 <touchgfx_init+0xc0>)
 800121a:	4f1f      	ldr	r7, [pc, #124]	; (8001298 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800121c:	4b1f      	ldr	r3, [pc, #124]	; (800129c <touchgfx_init+0xc8>)
 800121e:	6023      	str	r3, [r4, #0]
 8001220:	f107 0618 	add.w	r6, r7, #24
 8001224:	f104 0014 	add.w	r0, r4, #20
 8001228:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800122c:	6060      	str	r0, [r4, #4]
 800122e:	f8c4 8008 	str.w	r8, [r4, #8]
 8001232:	60e7      	str	r7, [r4, #12]
 8001234:	6126      	str	r6, [r4, #16]
 8001236:	f00d fe67 	bl	800ef08 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800123a:	4b19      	ldr	r3, [pc, #100]	; (80012a0 <touchgfx_init+0xcc>)
 800123c:	6163      	str	r3, [r4, #20]
 800123e:	4640      	mov	r0, r8
 8001240:	f00d fe62 	bl	800ef08 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001244:	4b17      	ldr	r3, [pc, #92]	; (80012a4 <touchgfx_init+0xd0>)
 8001246:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001248:	4638      	mov	r0, r7
 800124a:	f00d fe5d 	bl	800ef08 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124e:	4b16      	ldr	r3, [pc, #88]	; (80012a8 <touchgfx_init+0xd4>)
 8001250:	603b      	str	r3, [r7, #0]
 8001252:	f107 0014 	add.w	r0, r7, #20
 8001256:	f006 f989 	bl	800756c <_ZN5ModelC1Ev>
 800125a:	4622      	mov	r2, r4
 800125c:	f107 0114 	add.w	r1, r7, #20
 8001260:	4630      	mov	r0, r6
 8001262:	f006 f979 	bl	8007558 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001266:	4630      	mov	r0, r6
 8001268:	f003 fc14 	bl	8004a94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800126c:	4628      	mov	r0, r5
 800126e:	f021 fe2b 	bl	8022ec8 <__cxa_guard_release>
 8001272:	480e      	ldr	r0, [pc, #56]	; (80012ac <touchgfx_init+0xd8>)
 8001274:	f021 fe66 	bl	8022f44 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001278:	480d      	ldr	r0, [pc, #52]	; (80012b0 <touchgfx_init+0xdc>)
}
 800127a:	b002      	add	sp, #8
 800127c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001280:	f7ff bb0c 	b.w	800089c <_ZN11TouchGFXHAL10initializeEv>
 8001284:	200200e8 	.word	0x200200e8
 8001288:	2000ef5c 	.word	0x2000ef5c
 800128c:	20000200 	.word	0x20000200
 8001290:	2000001c 	.word	0x2000001c
 8001294:	20000204 	.word	0x20000204
 8001298:	2000e14c 	.word	0x2000e14c
 800129c:	0802593c 	.word	0x0802593c
 80012a0:	080258a0 	.word	0x080258a0
 80012a4:	080258d4 	.word	0x080258d4
 80012a8:	08025908 	.word	0x08025908
 80012ac:	080011ad 	.word	0x080011ad
 80012b0:	2000eee0 	.word	0x2000eee0

080012b4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012b4:	4801      	ldr	r0, [pc, #4]	; (80012bc <touchgfx_taskEntry+0x8>)
 80012b6:	f7ff bb0b 	b.w	80008d0 <_ZN11TouchGFXHAL9taskEntryEv>
 80012ba:	bf00      	nop
 80012bc:	2000eee0 	.word	0x2000eee0

080012c0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012c0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012c2:	4e24      	ldr	r6, [pc, #144]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 80012c4:	4c24      	ldr	r4, [pc, #144]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 80012c6:	4d25      	ldr	r5, [pc, #148]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012c8:	4b25      	ldr	r3, [pc, #148]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012ca:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012cc:	4630      	mov	r0, r6
 80012ce:	f7ff fed1 	bl	8001074 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012d2:	4628      	mov	r0, r5
 80012d4:	f018 fe4a 	bl	8019f6c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012d8:	4b22      	ldr	r3, [pc, #136]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012da:	4823      	ldr	r0, [pc, #140]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 80012dc:	60dc      	str	r4, [r3, #12]
 80012de:	2200      	movs	r2, #0
 80012e0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012e4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012e8:	4920      	ldr	r1, [pc, #128]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xac>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012ea:	851a      	strh	r2, [r3, #40]	; 0x28
 80012ec:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012f0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012f4:	6759      	str	r1, [r3, #116]	; 0x74
 80012f6:	2101      	movs	r1, #1
 80012f8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012fc:	491c      	ldr	r1, [pc, #112]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80012fe:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8001302:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001304:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001308:	8001      	strh	r1, [r0, #0]
 800130a:	481a      	ldr	r0, [pc, #104]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800130c:	62da      	str	r2, [r3, #44]	; 0x2c
          lastRenderMethod(HARDWARE)
 800130e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              inProgress(false)
 8001312:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001316:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800131a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800131e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001322:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001326:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
        : drag(), listener(0), dragThresholdValue(0)
 800132a:	861a      	strh	r2, [r3, #48]	; 0x30
 800132c:	661a      	str	r2, [r3, #96]	; 0x60
 800132e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001332:	671a      	str	r2, [r3, #112]	; 0x70
 8001334:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001338:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800133a:	480f      	ldr	r0, [pc, #60]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800133c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001340:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001344:	8001      	strh	r1, [r0, #0]
 8001346:	480d      	ldr	r0, [pc, #52]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001348:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800134a:	490d      	ldr	r1, [pc, #52]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800134c:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800134e:	4a0d      	ldr	r2, [pc, #52]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001350:	601a      	str	r2, [r3, #0]
}
 8001352:	bd70      	pop	{r4, r5, r6, pc}
 8001354:	2000e2c0 	.word	0x2000e2c0
 8001358:	2000e2bc 	.word	0x2000e2bc
 800135c:	2000ef60 	.word	0x2000ef60
 8001360:	08025394 	.word	0x08025394
 8001364:	2000eee0 	.word	0x2000eee0
 8001368:	20020080 	.word	0x20020080
 800136c:	01000001 	.word	0x01000001
 8001370:	2002008c 	.word	0x2002008c
 8001374:	20020086 	.word	0x20020086
 8001378:	20020082 	.word	0x20020082
 800137c:	20020088 	.word	0x20020088
 8001380:	20020084 	.word	0x20020084
 8001384:	08025520 	.word	0x08025520

08001388 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001388:	4801      	ldr	r0, [pc, #4]	; (8001390 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800138a:	f7ff be57 	b.w	800103c <_ZN8STM32DMAD1Ev>
 800138e:	bf00      	nop
 8001390:	2000e2c0 	.word	0x2000e2c0

08001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001394:	4b02      	ldr	r3, [pc, #8]	; (80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001396:	2290      	movs	r2, #144	; 0x90
 8001398:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	e000e100 	.word	0xe000e100

080013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013a4:	4b02      	ldr	r3, [pc, #8]	; (80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013aa:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013ac:	4770      	bx	lr
 80013ae:	bf00      	nop
 80013b0:	e000e100 	.word	0xe000e100

080013b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013b4:	4770      	bx	lr

080013b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013b6:	4770      	bx	lr

080013b8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013b8:	b538      	push	{r3, r4, r5, lr}
 80013ba:	4604      	mov	r4, r0
    HAL::initialize();
 80013bc:	f00e fb91 	bl	800fae2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013c0:	6823      	ldr	r3, [r4, #0]
 80013c2:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80013c4:	f011 ff8e 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 80013c8:	4601      	mov	r1, r0
 80013ca:	4620      	mov	r0, r4
 80013cc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ce:	6823      	ldr	r3, [r4, #0]
 80013d0:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 80013d4:	2300      	movs	r3, #0
 80013d6:	461a      	mov	r2, r3
 80013d8:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013dc:	4620      	mov	r0, r4
 80013de:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013e0:	2301      	movs	r3, #1
 80013e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013e6:	bd38      	pop	{r3, r4, r5, pc}

080013e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013e8:	f00e bb2b 	b.w	800fa42 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013ec <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013ec:	f00e bc87 	b.w	800fcfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013f0:	4b04      	ldr	r3, [pc, #16]	; (8001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013f2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013fe:	f3bf 8f6f 	isb	sy
}
 8001402:	4770      	bx	lr
 8001404:	e000e100 	.word	0xe000e100

08001408 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001408:	4901      	ldr	r1, [pc, #4]	; (8001410 <vApplicationIdleHook+0x8>)
 800140a:	2000      	movs	r0, #0
 800140c:	f00d b882 	b.w	800e514 <vTaskSetApplicationTaskTag>
 8001410:	08000c69 	.word	0x08000c69

08001414 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001414:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001416:	2064      	movs	r0, #100	; 0x64
 8001418:	f00b fc0b 	bl	800cc32 <osDelay>
  for(;;)
 800141c:	e7fb      	b.n	8001416 <StartDefaultTask+0x2>
	...

08001420 <SystemClock_Config>:
{
 8001420:	b530      	push	{r4, r5, lr}
 8001422:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001424:	2210      	movs	r2, #16
 8001426:	2100      	movs	r1, #0
 8001428:	a809      	add	r0, sp, #36	; 0x24
 800142a:	f022 f813 	bl	8023454 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800142e:	2214      	movs	r2, #20
 8001430:	2100      	movs	r1, #0
 8001432:	a802      	add	r0, sp, #8
 8001434:	f022 f80e 	bl	8023454 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001438:	2400      	movs	r4, #0
 800143a:	4b1f      	ldr	r3, [pc, #124]	; (80014b8 <SystemClock_Config+0x98>)
 800143c:	9400      	str	r4, [sp, #0]
 800143e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001440:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001444:	641a      	str	r2, [r3, #64]	; 0x40
 8001446:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001448:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800144c:	9300      	str	r3, [sp, #0]
 800144e:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001450:	4b1a      	ldr	r3, [pc, #104]	; (80014bc <SystemClock_Config+0x9c>)
 8001452:	9401      	str	r4, [sp, #4]
 8001454:	681a      	ldr	r2, [r3, #0]
 8001456:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800145a:	601a      	str	r2, [r3, #0]
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001462:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001464:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001466:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001468:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800146c:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001470:	2502      	movs	r5, #2
 8001472:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001476:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001478:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 800147c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001480:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001484:	2004      	movs	r0, #4
 8001486:	2306      	movs	r3, #6
 8001488:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800148c:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800148e:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001490:	f00a ff1c 	bl	800c2cc <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001494:	f00a f96c 	bl	800b770 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001498:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800149a:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800149e:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014a4:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014a8:	2105      	movs	r1, #5
 80014aa:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014ac:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b0:	f00a fce0 	bl	800be74 <HAL_RCC_ClockConfig>
}
 80014b4:	b015      	add	sp, #84	; 0x54
 80014b6:	bd30      	pop	{r4, r5, pc}
 80014b8:	40023800 	.word	0x40023800
 80014bc:	40007000 	.word	0x40007000

080014c0 <main>:
{
 80014c0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014c4:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014c6:	f008 fb3b 	bl	8009b40 <HAL_Init>
  SystemClock_Config();
 80014ca:	f7ff ffa9 	bl	8001420 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ce:	2214      	movs	r2, #20
 80014d0:	2100      	movs	r1, #0
 80014d2:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014d4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014d6:	f021 ffbd 	bl	8023454 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014da:	4bc9      	ldr	r3, [pc, #804]	; (8001800 <main+0x340>)
 80014dc:	9402      	str	r4, [sp, #8]
 80014de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014e0:	48c8      	ldr	r0, [pc, #800]	; (8001804 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e2:	f042 0210 	orr.w	r2, r2, #16
 80014e6:	631a      	str	r2, [r3, #48]	; 0x30
 80014e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ea:	f002 0210 	and.w	r2, r2, #16
 80014ee:	9202      	str	r2, [sp, #8]
 80014f0:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014f2:	9403      	str	r4, [sp, #12]
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f042 0202 	orr.w	r2, r2, #2
 80014fa:	631a      	str	r2, [r3, #48]	; 0x30
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f002 0202 	and.w	r2, r2, #2
 8001502:	9203      	str	r2, [sp, #12]
 8001504:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001506:	9404      	str	r4, [sp, #16]
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800150e:	631a      	str	r2, [r3, #48]	; 0x30
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001516:	9204      	str	r2, [sp, #16]
 8001518:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800151a:	9405      	str	r4, [sp, #20]
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f042 0208 	orr.w	r2, r2, #8
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f002 0208 	and.w	r2, r2, #8
 800152a:	9205      	str	r2, [sp, #20]
 800152c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800152e:	9406      	str	r4, [sp, #24]
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001536:	631a      	str	r2, [r3, #48]	; 0x30
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800153e:	9206      	str	r2, [sp, #24]
 8001540:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001542:	9407      	str	r4, [sp, #28]
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f042 0220 	orr.w	r2, r2, #32
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f002 0220 	and.w	r2, r2, #32
 8001552:	9207      	str	r2, [sp, #28]
 8001554:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001556:	9408      	str	r4, [sp, #32]
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001566:	9208      	str	r2, [sp, #32]
 8001568:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800156a:	9409      	str	r4, [sp, #36]	; 0x24
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800157a:	9209      	str	r2, [sp, #36]	; 0x24
 800157c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800157e:	940a      	str	r4, [sp, #40]	; 0x28
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f042 0204 	orr.w	r2, r2, #4
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f002 0204 	and.w	r2, r2, #4
 800158e:	920a      	str	r2, [sp, #40]	; 0x28
 8001590:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001592:	940b      	str	r4, [sp, #44]	; 0x2c
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800159a:	631a      	str	r2, [r3, #48]	; 0x30
 800159c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800159e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80015a2:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015a4:	2201      	movs	r2, #1
 80015a6:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015aa:	f009 fadd 	bl	800ab68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015ae:	4896      	ldr	r0, [pc, #600]	; (8001808 <main+0x348>)
 80015b0:	4622      	mov	r2, r4
 80015b2:	2110      	movs	r1, #16
 80015b4:	f009 fad8 	bl	800ab68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015b8:	4894      	ldr	r0, [pc, #592]	; (800180c <main+0x34c>)
 80015ba:	4622      	mov	r2, r4
 80015bc:	2140      	movs	r1, #64	; 0x40
 80015be:	f009 fad3 	bl	800ab68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015c2:	4622      	mov	r2, r4
 80015c4:	4892      	ldr	r0, [pc, #584]	; (8001810 <main+0x350>)
 80015c6:	2180      	movs	r1, #128	; 0x80
 80015c8:	f009 face 	bl	800ab68 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015cc:	2611      	movs	r6, #17
 80015ce:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015d0:	488c      	ldr	r0, [pc, #560]	; (8001804 <main+0x344>)
 80015d2:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015da:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015de:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015e2:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015e6:	f009 f931 	bl	800a84c <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ea:	4887      	ldr	r0, [pc, #540]	; (8001808 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ec:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ee:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f4:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015f8:	f009 f928 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015fc:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015fe:	4883      	ldr	r0, [pc, #524]	; (800180c <main+0x34c>)
 8001600:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001602:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001604:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001608:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800160c:	f009 f91e 	bl	800a84c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001610:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001612:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001614:	487e      	ldr	r0, [pc, #504]	; (8001810 <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001616:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001618:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800161c:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800161e:	f009 f915 	bl	800a84c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001622:	487c      	ldr	r0, [pc, #496]	; (8001814 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001624:	4e7c      	ldr	r6, [pc, #496]	; (8001818 <main+0x358>)
  hcrc.Instance = CRC;
 8001626:	4b7d      	ldr	r3, [pc, #500]	; (800181c <main+0x35c>)
 8001628:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800162a:	f008 fb2f 	bl	8009c8c <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800162e:	4b7c      	ldr	r3, [pc, #496]	; (8001820 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001630:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001634:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001638:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800163a:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800163e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001642:	f008 fc37 	bl	8009eb4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001646:	4639      	mov	r1, r7
 8001648:	4630      	mov	r0, r6
 800164a:	f008 fceb 	bl	800a024 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800164e:	4629      	mov	r1, r5
 8001650:	4622      	mov	r2, r4
 8001652:	486f      	ldr	r0, [pc, #444]	; (8001810 <main+0x350>)
  hdsi.Instance = DSI;
 8001654:	4e73      	ldr	r6, [pc, #460]	; (8001824 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001656:	f009 fa87 	bl	800ab68 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800165a:	2014      	movs	r0, #20
 800165c:	f008 fa9c 	bl	8009b98 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001660:	4629      	mov	r1, r5
 8001662:	463a      	mov	r2, r7
 8001664:	486a      	ldr	r0, [pc, #424]	; (8001810 <main+0x350>)
 8001666:	f009 fa7f 	bl	800ab68 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800166a:	200a      	movs	r0, #10
 800166c:	f008 fa94 	bl	8009b98 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001670:	2224      	movs	r2, #36	; 0x24
 8001672:	4621      	mov	r1, r4
 8001674:	a815      	add	r0, sp, #84	; 0x54
 8001676:	f021 feed 	bl	8023454 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 800167a:	2218      	movs	r2, #24
 800167c:	4621      	mov	r1, r4
 800167e:	a80f      	add	r0, sp, #60	; 0x3c
 8001680:	f021 fee8 	bl	8023454 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001684:	2234      	movs	r2, #52	; 0x34
 8001686:	4621      	mov	r1, r4
 8001688:	a82b      	add	r0, sp, #172	; 0xac
 800168a:	f021 fee3 	bl	8023454 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800168e:	222c      	movs	r2, #44	; 0x2c
 8001690:	4621      	mov	r1, r4
 8001692:	a81e      	add	r0, sp, #120	; 0x78
 8001694:	f021 fede 	bl	8023454 <memset>
  hdsi.Instance = DSI;
 8001698:	4b63      	ldr	r3, [pc, #396]	; (8001828 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 800169a:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 800169c:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800169e:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a2:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 80016a4:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a6:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016a8:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016ac:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016b0:	f008 fd80 	bl	800a1b4 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016b4:	a915      	add	r1, sp, #84	; 0x54
 80016b6:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016b8:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016bc:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016c0:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016c4:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016c8:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ca:	f008 ff9d 	bl	800a608 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016ce:	221c      	movs	r2, #28
 80016d0:	2321      	movs	r3, #33	; 0x21
 80016d2:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016d6:	210f      	movs	r1, #15
 80016d8:	2319      	movs	r3, #25
 80016da:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016de:	4630      	mov	r0, r6
 80016e0:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016e2:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016e6:	f008 ff52 	bl	800a58e <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016ea:	4629      	mov	r1, r5
 80016ec:	4630      	mov	r0, r6
 80016ee:	f008 ff3d 	bl	800a56c <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016f2:	f242 7110 	movw	r1, #10000	; 0x2710
 80016f6:	4630      	mov	r0, r6
 80016f8:	f009 f891 	bl	800a81e <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016fc:	4621      	mov	r1, r4
 80016fe:	4630      	mov	r0, r6
 8001700:	f008 fcf5 	bl	800a0ee <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001704:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001708:	f44f 7300 	mov.w	r3, #512	; 0x200
 800170c:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001710:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001714:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001718:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 800171c:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001720:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001724:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001728:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 800172c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001730:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001734:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001738:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800173c:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001740:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001744:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001748:	a92b      	add	r1, sp, #172	; 0xac
 800174a:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800174c:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001750:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001754:	f008 fed6 	bl	800a504 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001758:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800175a:	a91e      	add	r1, sp, #120	; 0x78
 800175c:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800175e:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001762:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8001766:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800176a:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800176e:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001772:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001774:	f008 fe54 	bl	800a420 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001778:	4621      	mov	r1, r4
 800177a:	4630      	mov	r0, r6
 800177c:	f008 fe3f 	bl	800a3fe <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001780:	482a      	ldr	r0, [pc, #168]	; (800182c <main+0x36c>)
 8001782:	492b      	ldr	r1, [pc, #172]	; (8001830 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001784:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001786:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800178a:	2340      	movs	r3, #64	; 0x40
 800178c:	2120      	movs	r1, #32
 800178e:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001792:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001796:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800179a:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 800179c:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800179e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 80017a2:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 80017a6:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017a8:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 80017aa:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017ae:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017b2:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017b6:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017ba:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017be:	f00a ff3b 	bl	800c638 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017c2:	f008 f8e5 	bl	8009990 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017c6:	f008 f895 	bl	80098f4 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ca:	2234      	movs	r2, #52	; 0x34
 80017cc:	4621      	mov	r1, r4
 80017ce:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017d0:	4d18      	ldr	r5, [pc, #96]	; (8001834 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017d2:	f021 fe3f 	bl	8023454 <memset>
  hltdc.Instance = LTDC;
 80017d6:	4a18      	ldr	r2, [pc, #96]	; (8001838 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017d8:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017da:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017de:	23ca      	movs	r3, #202	; 0xca
 80017e0:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017e4:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017e8:	21cb      	movs	r1, #203	; 0xcb
 80017ea:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017ee:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017f0:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017f4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017f8:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017fc:	e01e      	b.n	800183c <main+0x37c>
 80017fe:	bf00      	nop
 8001800:	40023800 	.word	0x40023800
 8001804:	40022800 	.word	0x40022800
 8001808:	40020c00 	.word	0x40020c00
 800180c:	40021800 	.word	0x40021800
 8001810:	40021c00 	.word	0x40021c00
 8001814:	200203a4 	.word	0x200203a4
 8001818:	20020474 	.word	0x20020474
 800181c:	40023000 	.word	0x40023000
 8001820:	4002b000 	.word	0x4002b000
 8001824:	200203ac 	.word	0x200203ac
 8001828:	40016c00 	.word	0x40016c00
 800182c:	200204b4 	.word	0x200204b4
 8001830:	a0000140 	.word	0xa0000140
 8001834:	200203c8 	.word	0x200203c8
 8001838:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 800183c:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001840:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001844:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001848:	f009 fe5c 	bl	800b504 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800184c:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 800184e:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001850:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001854:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001858:	2005      	movs	r0, #5
 800185a:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800185e:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 8001862:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001866:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001868:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800186c:	4628      	mov	r0, r5
 800186e:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8001870:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001874:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001876:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 800187a:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 800187e:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001882:	f009 ff0b 	bl	800b69c <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001886:	682a      	ldr	r2, [r5, #0]
 8001888:	6993      	ldr	r3, [r2, #24]
 800188a:	f023 0301 	bic.w	r3, r3, #1
 800188e:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001890:	4630      	mov	r0, r6
 8001892:	f008 ff1f 	bl	800a6d4 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001896:	4639      	mov	r1, r7
 8001898:	4640      	mov	r0, r8
 800189a:	f007 f9ed 	bl	8008c78 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800189e:	2328      	movs	r3, #40	; 0x28
 80018a0:	2215      	movs	r2, #21
 80018a2:	4621      	mov	r1, r4
 80018a4:	4630      	mov	r0, r6
 80018a6:	9400      	str	r4, [sp, #0]
 80018a8:	f008 ff47 	bl	800a73a <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018ac:	a92b      	add	r1, sp, #172	; 0xac
 80018ae:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018b0:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018b4:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018b8:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018bc:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018c0:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018c4:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018c6:	f008 fe1d 	bl	800a504 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018ca:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018ce:	4622      	mov	r2, r4
 80018d0:	4628      	mov	r0, r5
 80018d2:	f009 ff11 	bl	800b6f8 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018d6:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018d8:	481e      	ldr	r0, [pc, #120]	; (8001954 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018da:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018dc:	4d1e      	ldr	r5, [pc, #120]	; (8001958 <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018de:	4e1f      	ldr	r6, [pc, #124]	; (800195c <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018e0:	433b      	orrs	r3, r7
 80018e2:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018e4:	4b1e      	ldr	r3, [pc, #120]	; (8001960 <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018e6:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018e8:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018ec:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018ee:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018f2:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018f6:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018fa:	f00a f851 	bl	800b9a0 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018fe:	f007 febf 	bl	8009680 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001902:	f007 fdf3 	bl	80094ec <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001906:	f007 fd69 	bl	80093dc <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 800190a:	4b16      	ldr	r3, [pc, #88]	; (8001964 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800190c:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800190e:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 8001910:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001914:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001918:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800191c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001920:	f009 fb0c 	bl	800af3c <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001924:	4628      	mov	r0, r5
 8001926:	f009 fbb1 	bl	800b08c <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800192a:	f7fe fe70 	bl	800060e <MX_TouchGFX_Init>
  osKernelInitialize();
 800192e:	f00b f90b 	bl	800cb48 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001932:	4a0d      	ldr	r2, [pc, #52]	; (8001968 <main+0x4a8>)
 8001934:	480d      	ldr	r0, [pc, #52]	; (800196c <main+0x4ac>)
 8001936:	4621      	mov	r1, r4
 8001938:	f00b f932 	bl	800cba0 <osThreadNew>
 800193c:	4b0c      	ldr	r3, [pc, #48]	; (8001970 <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800193e:	4a0d      	ldr	r2, [pc, #52]	; (8001974 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001940:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001942:	4621      	mov	r1, r4
 8001944:	480c      	ldr	r0, [pc, #48]	; (8001978 <main+0x4b8>)
 8001946:	f00b f92b 	bl	800cba0 <osThreadNew>
 800194a:	4b0c      	ldr	r3, [pc, #48]	; (800197c <main+0x4bc>)
 800194c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800194e:	f00b f90d 	bl	800cb6c <osKernelStart>
  while (1)
 8001952:	e7fe      	b.n	8001952 <main+0x492>
 8001954:	200204e8 	.word	0x200204e8
 8001958:	20020350 	.word	0x20020350
 800195c:	40005400 	.word	0x40005400
 8001960:	a0001000 	.word	0xa0001000
 8001964:	00061a80 	.word	0x00061a80
 8001968:	08025988 	.word	0x08025988
 800196c:	08001415 	.word	0x08001415
 8001970:	2002034c 	.word	0x2002034c
 8001974:	08025964 	.word	0x08025964
 8001978:	08000613 	.word	0x08000613
 800197c:	20020470 	.word	0x20020470

08001980 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001980:	6802      	ldr	r2, [r0, #0]
 8001982:	4b03      	ldr	r3, [pc, #12]	; (8001990 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001984:	429a      	cmp	r2, r3
 8001986:	d101      	bne.n	800198c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001988:	f008 b8f4 	b.w	8009b74 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800198c:	4770      	bx	lr
 800198e:	bf00      	nop
 8001990:	40001000 	.word	0x40001000

08001994 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001994:	4770      	bx	lr

08001996 <parce_found_logs>:
	f_mount(NULL, "", 0);
	return state_read;
#else
	return 1;
#endif
}
 8001996:	2001      	movs	r0, #1
 8001998:	4770      	bx	lr

0800199a <read_start_stop_state_archiv>:

//========================================================================================
// Чтение и начала и конца архива, содержащие время
void read_start_stop_state_archiv(uint32_t *time_start, uint32_t *time_stop)
{
	*time_start = open_read_state_file_archiv(TYPE_STATE_FILE_START);
 800199a:	2300      	movs	r3, #0
 800199c:	6003      	str	r3, [r0, #0]
	*time_stop = open_read_state_file_archiv(TYPE_STATE_FILE_STOP) + 1;
 800199e:	2301      	movs	r3, #1
 80019a0:	600b      	str	r3, [r1, #0]
}
 80019a2:	4770      	bx	lr

080019a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019a4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019a6:	4b0e      	ldr	r3, [pc, #56]	; (80019e0 <HAL_MspInit+0x3c>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	9200      	str	r2, [sp, #0]
 80019ac:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019b2:	6459      	str	r1, [r3, #68]	; 0x44
 80019b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019b6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019ba:	9100      	str	r1, [sp, #0]
 80019bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019be:	9201      	str	r2, [sp, #4]
 80019c0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019c2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019c6:	6419      	str	r1, [r3, #64]	; 0x40
 80019c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019ce:	9301      	str	r3, [sp, #4]
 80019d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019d2:	210f      	movs	r1, #15
 80019d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019da:	f008 b903 	b.w	8009be4 <HAL_NVIC_SetPriority>
 80019de:	bf00      	nop
 80019e0:	40023800 	.word	0x40023800

080019e4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019e4:	6802      	ldr	r2, [r0, #0]
 80019e6:	4b09      	ldr	r3, [pc, #36]	; (8001a0c <HAL_CRC_MspInit+0x28>)
 80019e8:	429a      	cmp	r2, r3
{
 80019ea:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019ec:	d10b      	bne.n	8001a06 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019ee:	2300      	movs	r3, #0
 80019f0:	9301      	str	r3, [sp, #4]
 80019f2:	4b07      	ldr	r3, [pc, #28]	; (8001a10 <HAL_CRC_MspInit+0x2c>)
 80019f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019f6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019fa:	631a      	str	r2, [r3, #48]	; 0x30
 80019fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019fe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a02:	9301      	str	r3, [sp, #4]
 8001a04:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a06:	b002      	add	sp, #8
 8001a08:	4770      	bx	lr
 8001a0a:	bf00      	nop
 8001a0c:	40023000 	.word	0x40023000
 8001a10:	40023800 	.word	0x40023800

08001a14 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a14:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a16:	4b0f      	ldr	r3, [pc, #60]	; (8001a54 <HAL_DMA2D_MspInit+0x40>)
 8001a18:	6802      	ldr	r2, [r0, #0]
 8001a1a:	429a      	cmp	r2, r3
 8001a1c:	d116      	bne.n	8001a4c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a1e:	2200      	movs	r2, #0
 8001a20:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a24:	9201      	str	r2, [sp, #4]
 8001a26:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a28:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a2c:	6319      	str	r1, [r3, #48]	; 0x30
 8001a2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a30:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a34:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a36:	2105      	movs	r1, #5
 8001a38:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a3a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a3c:	f008 f8d2 	bl	8009be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a40:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a42:	b003      	add	sp, #12
 8001a44:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a48:	f008 b8fe 	b.w	8009c48 <HAL_NVIC_EnableIRQ>
}
 8001a4c:	b003      	add	sp, #12
 8001a4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a52:	bf00      	nop
 8001a54:	4002b000 	.word	0x4002b000

08001a58 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a58:	b510      	push	{r4, lr}
 8001a5a:	4604      	mov	r4, r0
 8001a5c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a5e:	2214      	movs	r2, #20
 8001a60:	2100      	movs	r1, #0
 8001a62:	a803      	add	r0, sp, #12
 8001a64:	f021 fcf6 	bl	8023454 <memset>
  if(hdsi->Instance==DSI)
 8001a68:	6822      	ldr	r2, [r4, #0]
 8001a6a:	4b18      	ldr	r3, [pc, #96]	; (8001acc <HAL_DSI_MspInit+0x74>)
 8001a6c:	429a      	cmp	r2, r3
 8001a6e:	d12a      	bne.n	8001ac6 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a70:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a74:	2400      	movs	r4, #0
 8001a76:	9401      	str	r4, [sp, #4]
 8001a78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a7a:	4815      	ldr	r0, [pc, #84]	; (8001ad0 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a7c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a80:	645a      	str	r2, [r3, #68]	; 0x44
 8001a82:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a84:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a88:	9201      	str	r2, [sp, #4]
 8001a8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a8c:	9402      	str	r4, [sp, #8]
 8001a8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a90:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a94:	631a      	str	r2, [r3, #48]	; 0x30
 8001a96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a98:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a9c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a9e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001aa0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aa2:	2302      	movs	r3, #2
 8001aa4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001aa8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001aaa:	230d      	movs	r3, #13
 8001aac:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001aae:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ab2:	f008 fecb 	bl	800a84c <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001ab6:	205c      	movs	r0, #92	; 0x5c
 8001ab8:	4622      	mov	r2, r4
 8001aba:	2105      	movs	r1, #5
 8001abc:	f008 f892 	bl	8009be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001ac0:	205c      	movs	r0, #92	; 0x5c
 8001ac2:	f008 f8c1 	bl	8009c48 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001ac6:	b008      	add	sp, #32
 8001ac8:	bd10      	pop	{r4, pc}
 8001aca:	bf00      	nop
 8001acc:	40016c00 	.word	0x40016c00
 8001ad0:	40022400 	.word	0x40022400

08001ad4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ad4:	b530      	push	{r4, r5, lr}
 8001ad6:	4604      	mov	r4, r0
 8001ad8:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ada:	2214      	movs	r2, #20
 8001adc:	2100      	movs	r1, #0
 8001ade:	a803      	add	r0, sp, #12
 8001ae0:	f021 fcb8 	bl	8023454 <memset>
  if(hi2c->Instance==I2C1)
 8001ae4:	6822      	ldr	r2, [r4, #0]
 8001ae6:	4b1a      	ldr	r3, [pc, #104]	; (8001b50 <HAL_I2C_MspInit+0x7c>)
 8001ae8:	429a      	cmp	r2, r3
 8001aea:	d12f      	bne.n	8001b4c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001aec:	4c19      	ldr	r4, [pc, #100]	; (8001b54 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aee:	481a      	ldr	r0, [pc, #104]	; (8001b58 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001af0:	2500      	movs	r5, #0
 8001af2:	9501      	str	r5, [sp, #4]
 8001af4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001af6:	f043 0302 	orr.w	r3, r3, #2
 8001afa:	6323      	str	r3, [r4, #48]	; 0x30
 8001afc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001afe:	f003 0302 	and.w	r3, r3, #2
 8001b02:	9301      	str	r3, [sp, #4]
 8001b04:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b06:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b0a:	2312      	movs	r3, #18
 8001b0c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b10:	2101      	movs	r1, #1
 8001b12:	2303      	movs	r3, #3
 8001b14:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b18:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b1c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b1e:	f008 fe95 	bl	800a84c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b22:	9502      	str	r5, [sp, #8]
 8001b24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b26:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b2a:	6423      	str	r3, [r4, #64]	; 0x40
 8001b2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b2e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b32:	9302      	str	r3, [sp, #8]
 8001b34:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b36:	6a23      	ldr	r3, [r4, #32]
 8001b38:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b3c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b3e:	6a23      	ldr	r3, [r4, #32]
 8001b40:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b44:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b46:	2064      	movs	r0, #100	; 0x64
 8001b48:	f008 f826 	bl	8009b98 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b4c:	b009      	add	sp, #36	; 0x24
 8001b4e:	bd30      	pop	{r4, r5, pc}
 8001b50:	40005400 	.word	0x40005400
 8001b54:	40023800 	.word	0x40023800
 8001b58:	40020400 	.word	0x40020400

08001b5c <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b5c:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b5e:	6802      	ldr	r2, [r0, #0]
 8001b60:	4b0a      	ldr	r3, [pc, #40]	; (8001b8c <HAL_I2C_MspDeInit+0x30>)
 8001b62:	429a      	cmp	r2, r3
 8001b64:	d110      	bne.n	8001b88 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b66:	4a0a      	ldr	r2, [pc, #40]	; (8001b90 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b68:	480a      	ldr	r0, [pc, #40]	; (8001b94 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b6a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b6c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b70:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b72:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b76:	f008 ff4f 	bl	800aa18 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b7e:	4805      	ldr	r0, [pc, #20]	; (8001b94 <HAL_I2C_MspDeInit+0x38>)
 8001b80:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b84:	f008 bf48 	b.w	800aa18 <HAL_GPIO_DeInit>
}
 8001b88:	bd08      	pop	{r3, pc}
 8001b8a:	bf00      	nop
 8001b8c:	40005400 	.word	0x40005400
 8001b90:	40023800 	.word	0x40023800
 8001b94:	40020400 	.word	0x40020400

08001b98 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b98:	b510      	push	{r4, lr}
 8001b9a:	4604      	mov	r4, r0
 8001b9c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b9e:	223c      	movs	r2, #60	; 0x3c
 8001ba0:	2100      	movs	r1, #0
 8001ba2:	a801      	add	r0, sp, #4
 8001ba4:	f021 fc56 	bl	8023454 <memset>
  if(hltdc->Instance==LTDC)
 8001ba8:	6822      	ldr	r2, [r4, #0]
 8001baa:	4b13      	ldr	r3, [pc, #76]	; (8001bf8 <HAL_LTDC_MspInit+0x60>)
 8001bac:	429a      	cmp	r2, r3
 8001bae:	d121      	bne.n	8001bf4 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001bb0:	2308      	movs	r3, #8
 8001bb2:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001bb4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001bb8:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001bba:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bbc:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bbe:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bc0:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001bc2:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bc4:	f00a fa20 	bl	800c008 <HAL_RCCEx_PeriphCLKConfig>
 8001bc8:	b108      	cbz	r0, 8001bce <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001bca:	f7ff fee3 	bl	8001994 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bce:	4b0b      	ldr	r3, [pc, #44]	; (8001bfc <HAL_LTDC_MspInit+0x64>)
 8001bd0:	9400      	str	r4, [sp, #0]
 8001bd2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bd4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bd8:	645a      	str	r2, [r3, #68]	; 0x44
 8001bda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bdc:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001be0:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001be2:	2058      	movs	r0, #88	; 0x58
 8001be4:	2200      	movs	r2, #0
 8001be6:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001be8:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bea:	f007 fffb 	bl	8009be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bee:	2058      	movs	r0, #88	; 0x58
 8001bf0:	f008 f82a 	bl	8009c48 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bf4:	b010      	add	sp, #64	; 0x40
 8001bf6:	bd10      	pop	{r4, pc}
 8001bf8:	40016800 	.word	0x40016800
 8001bfc:	40023800 	.word	0x40023800

08001c00 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c02:	4604      	mov	r4, r0
 8001c04:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c06:	2214      	movs	r2, #20
 8001c08:	2100      	movs	r1, #0
 8001c0a:	a803      	add	r0, sp, #12
 8001c0c:	f021 fc22 	bl	8023454 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c10:	6822      	ldr	r2, [r4, #0]
 8001c12:	4b24      	ldr	r3, [pc, #144]	; (8001ca4 <HAL_QSPI_MspInit+0xa4>)
 8001c14:	429a      	cmp	r2, r3
 8001c16:	d143      	bne.n	8001ca0 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c18:	4b23      	ldr	r3, [pc, #140]	; (8001ca8 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c1a:	4824      	ldr	r0, [pc, #144]	; (8001cac <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c1c:	2400      	movs	r4, #0
 8001c1e:	9400      	str	r4, [sp, #0]
 8001c20:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c22:	f042 0202 	orr.w	r2, r2, #2
 8001c26:	639a      	str	r2, [r3, #56]	; 0x38
 8001c28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c2a:	f002 0202 	and.w	r2, r2, #2
 8001c2e:	9200      	str	r2, [sp, #0]
 8001c30:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c32:	9401      	str	r4, [sp, #4]
 8001c34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c36:	f042 0202 	orr.w	r2, r2, #2
 8001c3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3e:	f002 0202 	and.w	r2, r2, #2
 8001c42:	9201      	str	r2, [sp, #4]
 8001c44:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c46:	9402      	str	r4, [sp, #8]
 8001c48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4a:	f042 0220 	orr.w	r2, r2, #32
 8001c4e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c52:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c54:	f003 0320 	and.w	r3, r3, #32
 8001c58:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c5a:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c5c:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c5e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c60:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c62:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c64:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c66:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c6a:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c6e:	f008 fded 	bl	800a84c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c72:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c76:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7a:	480d      	ldr	r0, [pc, #52]	; (8001cb0 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c7c:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c80:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c82:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c86:	f008 fde1 	bl	800a84c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c8a:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c8e:	4808      	ldr	r0, [pc, #32]	; (8001cb0 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c90:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c92:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c98:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c9c:	f008 fdd6 	bl	800a84c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001ca0:	b009      	add	sp, #36	; 0x24
 8001ca2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ca4:	a0001000 	.word	0xa0001000
 8001ca8:	40023800 	.word	0x40023800
 8001cac:	40020400 	.word	0x40020400
 8001cb0:	40021400 	.word	0x40021400

08001cb4 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001cb4:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001cb6:	6802      	ldr	r2, [r0, #0]
 8001cb8:	4b09      	ldr	r3, [pc, #36]	; (8001ce0 <HAL_QSPI_MspDeInit+0x2c>)
 8001cba:	429a      	cmp	r2, r3
 8001cbc:	d10f      	bne.n	8001cde <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cbe:	4a09      	ldr	r2, [pc, #36]	; (8001ce4 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cc0:	4809      	ldr	r0, [pc, #36]	; (8001ce8 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cc2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cc4:	f023 0302 	bic.w	r3, r3, #2
 8001cc8:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cca:	2140      	movs	r1, #64	; 0x40
 8001ccc:	f008 fea4 	bl	800aa18 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001cd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001cd4:	4805      	ldr	r0, [pc, #20]	; (8001cec <HAL_QSPI_MspDeInit+0x38>)
 8001cd6:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001cda:	f008 be9d 	b.w	800aa18 <HAL_GPIO_DeInit>
}
 8001cde:	bd08      	pop	{r3, pc}
 8001ce0:	a0001000 	.word	0xa0001000
 8001ce4:	40023800 	.word	0x40023800
 8001ce8:	40020400 	.word	0x40020400
 8001cec:	40021400 	.word	0x40021400

08001cf0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001cf2:	4b31      	ldr	r3, [pc, #196]	; (8001db8 <HAL_SDRAM_MspInit+0xc8>)
 8001cf4:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cf6:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001cf8:	2c00      	cmp	r4, #0
 8001cfa:	d15b      	bne.n	8001db4 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001cfc:	2201      	movs	r2, #1
 8001cfe:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d00:	4b2e      	ldr	r3, [pc, #184]	; (8001dbc <HAL_SDRAM_MspInit+0xcc>)
 8001d02:	9400      	str	r4, [sp, #0]
 8001d04:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d06:	482e      	ldr	r0, [pc, #184]	; (8001dc0 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d08:	f042 0201 	orr.w	r2, r2, #1
 8001d0c:	639a      	str	r2, [r3, #56]	; 0x38
 8001d0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d10:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d12:	f003 0301 	and.w	r3, r3, #1
 8001d16:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d1a:	2603      	movs	r6, #3
 8001d1c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d1e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d20:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d22:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d26:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d2a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d2e:	f008 fd8d 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d32:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d36:	4823      	ldr	r0, [pc, #140]	; (8001dc4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d38:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d3a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d3c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d40:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d44:	f008 fd82 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d48:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d4c:	481e      	ldr	r0, [pc, #120]	; (8001dc8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d4e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d50:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d52:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d56:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d5a:	f008 fd77 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d5e:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d62:	481a      	ldr	r0, [pc, #104]	; (8001dcc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d64:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d66:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d68:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d6c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d70:	f008 fd6c 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d74:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d78:	4815      	ldr	r0, [pc, #84]	; (8001dd0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d7c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d7e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d82:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d86:	f008 fd61 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d8a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d8e:	4811      	ldr	r0, [pc, #68]	; (8001dd4 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d90:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d94:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d98:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d9c:	f008 fd56 	bl	800a84c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001da0:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001da2:	480d      	ldr	r0, [pc, #52]	; (8001dd8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001da6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dac:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001db0:	f008 fd4c 	bl	800a84c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001db4:	b007      	add	sp, #28
 8001db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001db8:	2000efdc 	.word	0x2000efdc
 8001dbc:	40023800 	.word	0x40023800
 8001dc0:	40021000 	.word	0x40021000
 8001dc4:	40021800 	.word	0x40021800
 8001dc8:	40020c00 	.word	0x40020c00
 8001dcc:	40022000 	.word	0x40022000
 8001dd0:	40021400 	.word	0x40021400
 8001dd4:	40021c00 	.word	0x40021c00
 8001dd8:	40020800 	.word	0x40020800

08001ddc <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001ddc:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001dde:	4b17      	ldr	r3, [pc, #92]	; (8001e3c <HAL_SDRAM_MspDeInit+0x60>)
 8001de0:	681a      	ldr	r2, [r3, #0]
 8001de2:	bb52      	cbnz	r2, 8001e3a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001de4:	2201      	movs	r2, #1
 8001de6:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001de8:	4a15      	ldr	r2, [pc, #84]	; (8001e40 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dea:	4816      	ldr	r0, [pc, #88]	; (8001e44 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dec:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dee:	f023 0301 	bic.w	r3, r3, #1
 8001df2:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001df4:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001df8:	f008 fe0e 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dfc:	4812      	ldr	r0, [pc, #72]	; (8001e48 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dfe:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e02:	f008 fe09 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e06:	4811      	ldr	r0, [pc, #68]	; (8001e4c <HAL_SDRAM_MspDeInit+0x70>)
 8001e08:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e0c:	f008 fe04 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e10:	480f      	ldr	r0, [pc, #60]	; (8001e50 <HAL_SDRAM_MspDeInit+0x74>)
 8001e12:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e16:	f008 fdff 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e1a:	480e      	ldr	r0, [pc, #56]	; (8001e54 <HAL_SDRAM_MspDeInit+0x78>)
 8001e1c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e20:	f008 fdfa 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e24:	480c      	ldr	r0, [pc, #48]	; (8001e58 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e26:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e2a:	f008 fdf5 	bl	800aa18 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e32:	480a      	ldr	r0, [pc, #40]	; (8001e5c <HAL_SDRAM_MspDeInit+0x80>)
 8001e34:	210d      	movs	r1, #13
 8001e36:	f008 bdef 	b.w	800aa18 <HAL_GPIO_DeInit>
}
 8001e3a:	bd08      	pop	{r3, pc}
 8001e3c:	2000efd8 	.word	0x2000efd8
 8001e40:	40023800 	.word	0x40023800
 8001e44:	40021000 	.word	0x40021000
 8001e48:	40021800 	.word	0x40021800
 8001e4c:	40020c00 	.word	0x40020c00
 8001e50:	40022000 	.word	0x40022000
 8001e54:	40021400 	.word	0x40021400
 8001e58:	40021c00 	.word	0x40021c00
 8001e5c:	40020800 	.word	0x40020800

08001e60 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e60:	b530      	push	{r4, r5, lr}
 8001e62:	4601      	mov	r1, r0
 8001e64:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e66:	2200      	movs	r2, #0
 8001e68:	2036      	movs	r0, #54	; 0x36
 8001e6a:	f007 febb 	bl	8009be4 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e6e:	2036      	movs	r0, #54	; 0x36
 8001e70:	f007 feea 	bl	8009c48 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e74:	2500      	movs	r5, #0
 8001e76:	4b15      	ldr	r3, [pc, #84]	; (8001ecc <HAL_InitTick+0x6c>)
 8001e78:	9502      	str	r5, [sp, #8]
 8001e7a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e7c:	4c14      	ldr	r4, [pc, #80]	; (8001ed0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e7e:	f042 0210 	orr.w	r2, r2, #16
 8001e82:	641a      	str	r2, [r3, #64]	; 0x40
 8001e84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e86:	f003 0310 	and.w	r3, r3, #16
 8001e8a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e8c:	a901      	add	r1, sp, #4
 8001e8e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e90:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e92:	f00a f89b 	bl	800bfcc <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e96:	f00a f889 	bl	800bfac <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e9a:	4b0e      	ldr	r3, [pc, #56]	; (8001ed4 <HAL_InitTick+0x74>)
 8001e9c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e9e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ea2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ea4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001ea6:	4b0c      	ldr	r3, [pc, #48]	; (8001ed8 <HAL_InitTick+0x78>)
 8001ea8:	fbb0 f0f3 	udiv	r0, r0, r3
 8001eac:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001eae:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eb0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001eb2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001eb4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eb6:	f00a fd5d 	bl	800c974 <HAL_TIM_Base_Init>
 8001eba:	b920      	cbnz	r0, 8001ec6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ebc:	4620      	mov	r0, r4
 8001ebe:	f00a fc13 	bl	800c6e8 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001ec2:	b009      	add	sp, #36	; 0x24
 8001ec4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001ec6:	2001      	movs	r0, #1
 8001ec8:	e7fb      	b.n	8001ec2 <HAL_InitTick+0x62>
 8001eca:	bf00      	nop
 8001ecc:	40023800 	.word	0x40023800
 8001ed0:	20020534 	.word	0x20020534
 8001ed4:	40001000 	.word	0x40001000
 8001ed8:	000f4240 	.word	0x000f4240

08001edc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001edc:	4770      	bx	lr

08001ede <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ede:	e7fe      	b.n	8001ede <HardFault_Handler>

08001ee0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ee0:	e7fe      	b.n	8001ee0 <MemManage_Handler>

08001ee2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ee2:	e7fe      	b.n	8001ee2 <BusFault_Handler>

08001ee4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ee4:	e7fe      	b.n	8001ee4 <UsageFault_Handler>

08001ee6 <DebugMon_Handler>:
 8001ee6:	4770      	bx	lr

08001ee8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ee8:	4801      	ldr	r0, [pc, #4]	; (8001ef0 <TIM6_DAC_IRQHandler+0x8>)
 8001eea:	f00a bc3b 	b.w	800c764 <HAL_TIM_IRQHandler>
 8001eee:	bf00      	nop
 8001ef0:	20020534 	.word	0x20020534

08001ef4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ef4:	4801      	ldr	r0, [pc, #4]	; (8001efc <LTDC_IRQHandler+0x8>)
 8001ef6:	f009 bb74 	b.w	800b5e2 <HAL_LTDC_IRQHandler>
 8001efa:	bf00      	nop
 8001efc:	200203c8 	.word	0x200203c8

08001f00 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f00:	4801      	ldr	r0, [pc, #4]	; (8001f08 <DMA2D_IRQHandler+0x8>)
 8001f02:	f008 b805 	b.w	8009f10 <HAL_DMA2D_IRQHandler>
 8001f06:	bf00      	nop
 8001f08:	20020474 	.word	0x20020474

08001f0c <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f0c:	4801      	ldr	r0, [pc, #4]	; (8001f14 <DSI_IRQHandler+0x8>)
 8001f0e:	f008 ba04 	b.w	800a31a <HAL_DSI_IRQHandler>
 8001f12:	bf00      	nop
 8001f14:	200203ac 	.word	0x200203ac

08001f18 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f18:	2001      	movs	r0, #1
 8001f1a:	4770      	bx	lr

08001f1c <_kill>:

int _kill(int pid, int sig)
{
 8001f1c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f1e:	f021 f839 	bl	8022f94 <__errno>
 8001f22:	2316      	movs	r3, #22
 8001f24:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f26:	f04f 30ff 	mov.w	r0, #4294967295
 8001f2a:	bd08      	pop	{r3, pc}

08001f2c <_exit>:

void _exit (int status)
{
 8001f2c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f2e:	f021 f831 	bl	8022f94 <__errno>
 8001f32:	2316      	movs	r3, #22
 8001f34:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f36:	e7fe      	b.n	8001f36 <_exit+0xa>

08001f38 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f38:	b570      	push	{r4, r5, r6, lr}
 8001f3a:	460e      	mov	r6, r1
 8001f3c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3e:	2500      	movs	r5, #0
 8001f40:	42a5      	cmp	r5, r4
 8001f42:	db01      	blt.n	8001f48 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f44:	4620      	mov	r0, r4
 8001f46:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f48:	f3af 8000 	nop.w
 8001f4c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f4e:	3501      	adds	r5, #1
 8001f50:	e7f6      	b.n	8001f40 <_read+0x8>

08001f52 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f52:	b570      	push	{r4, r5, r6, lr}
 8001f54:	460e      	mov	r6, r1
 8001f56:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f58:	2500      	movs	r5, #0
 8001f5a:	42a5      	cmp	r5, r4
 8001f5c:	db01      	blt.n	8001f62 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f5e:	4620      	mov	r0, r4
 8001f60:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f62:	5d70      	ldrb	r0, [r6, r5]
 8001f64:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f68:	3501      	adds	r5, #1
 8001f6a:	e7f6      	b.n	8001f5a <_write+0x8>

08001f6c <_close>:

int _close(int file)
{
	return -1;
}
 8001f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f70:	4770      	bx	lr

08001f72 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f72:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f76:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f78:	2000      	movs	r0, #0
 8001f7a:	4770      	bx	lr

08001f7c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f7c:	2001      	movs	r0, #1
 8001f7e:	4770      	bx	lr

08001f80 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f80:	2000      	movs	r0, #0
 8001f82:	4770      	bx	lr

08001f84 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f84:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f86:	4b0a      	ldr	r3, [pc, #40]	; (8001fb0 <_sbrk+0x2c>)
 8001f88:	6819      	ldr	r1, [r3, #0]
{
 8001f8a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f8c:	b909      	cbnz	r1, 8001f92 <_sbrk+0xe>
		heap_end = &end;
 8001f8e:	4909      	ldr	r1, [pc, #36]	; (8001fb4 <_sbrk+0x30>)
 8001f90:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f92:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f94:	4669      	mov	r1, sp
 8001f96:	4402      	add	r2, r0
 8001f98:	428a      	cmp	r2, r1
 8001f9a:	d906      	bls.n	8001faa <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f9c:	f020 fffa 	bl	8022f94 <__errno>
 8001fa0:	230c      	movs	r3, #12
 8001fa2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fa4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fa8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001faa:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001fac:	e7fc      	b.n	8001fa8 <_sbrk+0x24>
 8001fae:	bf00      	nop
 8001fb0:	2000efe4 	.word	0x2000efe4
 8001fb4:	20020630 	.word	0x20020630

08001fb8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fb8:	4770      	bx	lr

08001fba <_ZN23ApplicationFontProviderD0Ev>:
 8001fba:	b510      	push	{r4, lr}
 8001fbc:	2104      	movs	r1, #4
 8001fbe:	4604      	mov	r4, r0
 8001fc0:	f020 ff74 	bl	8022eac <_ZdlPvj>
 8001fc4:	4620      	mov	r0, r4
 8001fc6:	bd10      	pop	{r4, pc}

08001fc8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001fc8:	2901      	cmp	r1, #1
{
 8001fca:	b508      	push	{r3, lr}
    switch (typography)
 8001fcc:	d006      	beq.n	8001fdc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001fce:	2902      	cmp	r1, #2
 8001fd0:	d008      	beq.n	8001fe4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001fd2:	b959      	cbnz	r1, 8001fec <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fd4:	f004 fcbe 	bl	8006954 <_ZN17TypedTextDatabase8getFontsEv>
 8001fd8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001fda:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fdc:	f004 fcba 	bl	8006954 <_ZN17TypedTextDatabase8getFontsEv>
 8001fe0:	6840      	ldr	r0, [r0, #4]
 8001fe2:	e7fa      	b.n	8001fda <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fe4:	f004 fcb6 	bl	8006954 <_ZN17TypedTextDatabase8getFontsEv>
 8001fe8:	6880      	ldr	r0, [r0, #8]
 8001fea:	e7f6      	b.n	8001fda <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fec:	2000      	movs	r0, #0
 8001fee:	e7f4      	b.n	8001fda <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001ff0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001ff0:	4800      	ldr	r0, [pc, #0]	; (8001ff4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001ff2:	4770      	bx	lr
 8001ff4:	080259c0 	.word	0x080259c0

08001ff8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001ff8:	2009      	movs	r0, #9
 8001ffa:	4770      	bx	lr

08001ffc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001ffc:	b513      	push	{r0, r1, r4, lr}
 8001ffe:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002000:	b151      	cbz	r1, 8002018 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002002:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002004:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002006:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800200a:	aa01      	add	r2, sp, #4
 800200c:	689c      	ldr	r4, [r3, #8]
 800200e:	f10d 0303 	add.w	r3, sp, #3
 8002012:	47a0      	blx	r4
        return glyph;
    }
 8002014:	b002      	add	sp, #8
 8002016:	bd10      	pop	{r4, pc}
            return 0;
 8002018:	4608      	mov	r0, r1
 800201a:	e7fb      	b.n	8002014 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800201c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800201c:	8940      	ldrh	r0, [r0, #10]
 800201e:	4770      	bx	lr

08002020 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002020:	8980      	ldrh	r0, [r0, #12]
 8002022:	4770      	bx	lr

08002024 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002024:	8880      	ldrh	r0, [r0, #4]
 8002026:	4770      	bx	lr

08002028 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002028:	7983      	ldrb	r3, [r0, #6]
 800202a:	8880      	ldrh	r0, [r0, #4]
 800202c:	4418      	add	r0, r3
    }
 800202e:	b280      	uxth	r0, r0
 8002030:	4770      	bx	lr

08002032 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002032:	79c0      	ldrb	r0, [r0, #7]
    }
 8002034:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002038:	4770      	bx	lr

0800203a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800203a:	79c0      	ldrb	r0, [r0, #7]
    }
 800203c:	09c0      	lsrs	r0, r0, #7
 800203e:	4770      	bx	lr

08002040 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002040:	2000      	movs	r0, #0
 8002042:	4770      	bx	lr

08002044 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002044:	8081      	strh	r1, [r0, #4]
    }
 8002046:	4770      	bx	lr

08002048 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002048:	80c1      	strh	r1, [r0, #6]
    }
 800204a:	4770      	bx	lr

0800204c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800204c:	8101      	strh	r1, [r0, #8]
    }
 800204e:	4770      	bx	lr

08002050 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002050:	8141      	strh	r1, [r0, #10]
    }
 8002052:	4770      	bx	lr

08002054 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002054:	4770      	bx	lr

08002056 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002056:	4770      	bx	lr

08002058 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002058:	4770      	bx	lr

0800205a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800205a:	4770      	bx	lr

0800205c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800205c:	4770      	bx	lr

0800205e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800205e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002060:	88c4      	ldrh	r4, [r0, #6]
 8002062:	6803      	ldr	r3, [r0, #0]
 8002064:	1b12      	subs	r2, r2, r4
 8002066:	8884      	ldrh	r4, [r0, #4]
 8002068:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800206a:	1b09      	subs	r1, r1, r4
 800206c:	b212      	sxth	r2, r2
    }
 800206e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002072:	b209      	sxth	r1, r1
 8002074:	4718      	bx	r3

08002076 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002076:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800207a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800207c:	f04f 33ff 	mov.w	r3, #4294967295
 8002080:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002082:	6813      	ldr	r3, [r2, #0]
 8002084:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002086:	6010      	str	r0, [r2, #0]
    }
 8002088:	4770      	bx	lr

0800208a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800208a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800208c:	4770      	bx	lr

0800208e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 800208e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002092:	b11a      	cbz	r2, 800209c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002094:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002098:	b102      	cbz	r2, 800209c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800209a:	6018      	str	r0, [r3, #0]
        }
    }
 800209c:	4770      	bx	lr

0800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 800209e:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 80020a0:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 80020a2:	4604      	mov	r4, r0
        setWidth(width);
 80020a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 80020a6:	4615      	mov	r5, r2
        setWidth(width);
 80020a8:	4798      	blx	r3
        setHeight(height);
 80020aa:	6823      	ldr	r3, [r4, #0]
 80020ac:	4629      	mov	r1, r5
 80020ae:	4620      	mov	r0, r4
 80020b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80020b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80020b6:	4718      	bx	r3

080020b8 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80020b8:	4a09      	ldr	r2, [pc, #36]	; (80020e0 <_ZN8touchgfx3BoxC1Ev+0x28>)
 80020ba:	6002      	str	r2, [r0, #0]
          visible(true)
 80020bc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80020c0:	2200      	movs	r2, #0
 80020c2:	8481      	strh	r1, [r0, #36]	; 0x24
 80020c4:	21ff      	movs	r1, #255	; 0xff
 80020c6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80020ca:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80020ce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80020d2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80020d6:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 80020da:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 80020dc:	4770      	bx	lr
 80020de:	bf00      	nop
 80020e0:	08028068 	.word	0x08028068

080020e4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020e4:	4770      	bx	lr

080020e6 <_ZN29CustomContainerButton_keyBaseD1Ev>:

class CustomContainerButton_keyBase : public touchgfx::Container
{
public:
    CustomContainerButton_keyBase();
    virtual ~CustomContainerButton_keyBase() {}
 80020e6:	4770      	bx	lr

080020e8 <_ZN29CustomContainerButton_keyBase19functionButtonClickEv>:
     * Virtual Action Handlers
     */
    virtual void functionButtonClick()
    {
        // Override and implement this function in CustomContainerButton_key
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerButton_keyCallback()
 80020ea:	b510      	push	{r4, lr}
 80020ec:	4604      	mov	r4, r0
    {
        if (triggerButton_keyCallback && triggerButton_keyCallback->isValid())
 80020ee:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
 80020f2:	b150      	cbz	r0, 800210a <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
 80020f4:	6803      	ldr	r3, [r0, #0]
 80020f6:	68db      	ldr	r3, [r3, #12]
 80020f8:	4798      	blx	r3
 80020fa:	b130      	cbz	r0, 800210a <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
        {
            this->triggerButton_keyCallback->execute();
 80020fc:	f8d4 0110 	ldr.w	r0, [r4, #272]	; 0x110
 8002100:	6803      	ldr	r3, [r0, #0]
        }
    }
 8002102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->triggerButton_keyCallback->execute();
 8002106:	689b      	ldr	r3, [r3, #8]
 8002108:	4718      	bx	r3
    }
 800210a:	bd10      	pop	{r4, pc}

0800210c <_ZN29CustomContainerButton_keyBase10initializeEv>:
}

void CustomContainerButton_keyBase::initialize()
{

}
 800210c:	4770      	bx	lr

0800210e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002110:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002114:	b12b      	cbz	r3, 8002122 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x12>
 8002116:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002118:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800211a:	b123      	cbz	r3, 8002126 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x16>
 800211c:	6f43      	ldr	r3, [r0, #116]	; 0x74
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 800211e:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002120:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002122:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8002124:	e7f8      	b.n	8002118 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002126:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002128:	e7f9      	b.n	800211e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xe>

0800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithOneWildcard wildcardText; ///< The wildcard text
    colortype colorReleased;              ///< The color released
    colortype colorPressed;               ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800212a:	b508      	push	{r3, lr}
    {
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 800212c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002130:	b133      	cbz	r3, 8002140 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8002132:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002136:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 800213a:	f7ff ffe9 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800213e:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002140:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 8002144:	e7f7      	b.n	8002136 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002146 <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002146:	4770      	bx	lr

08002148 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class WildcardTextButtonStyle : public T
 8002148:	4770      	bx	lr

0800214a <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800214a:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 800214c:	68c2      	ldr	r2, [r0, #12]
 800214e:	6844      	ldr	r4, [r0, #4]
 8002150:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002152:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002154:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002158:	07d2      	lsls	r2, r2, #31
 800215a:	bf48      	it	mi
 800215c:	5962      	ldrmi	r2, [r4, r5]
 800215e:	689b      	ldr	r3, [r3, #8]
    }
 8002160:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002162:	bf48      	it	mi
 8002164:	58d3      	ldrmi	r3, [r2, r3]
 8002166:	4718      	bx	r3

08002168 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 8002168:	6843      	ldr	r3, [r0, #4]
 800216a:	b12b      	cbz	r3, 8002178 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800216c:	6883      	ldr	r3, [r0, #8]
 800216e:	b92b      	cbnz	r3, 800217c <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002170:	68c0      	ldr	r0, [r0, #12]
 8002172:	f000 0001 	and.w	r0, r0, #1
 8002176:	4770      	bx	lr
 8002178:	4618      	mov	r0, r3
 800217a:	4770      	bx	lr
 800217c:	2001      	movs	r0, #1
    }
 800217e:	4770      	bx	lr

08002180 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        wildcardText.setAlpha(T::getAlpha());
 8002180:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002184:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002188:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 800218c:	4770      	bx	lr

0800218e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 800218e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002192:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002196:	4770      	bx	lr

08002198 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002198:	b510      	push	{r4, lr}
    }
 800219a:	2108      	movs	r1, #8
    virtual ~TypedText()
 800219c:	4604      	mov	r4, r0
    }
 800219e:	f020 fe85 	bl	8022eac <_ZdlPvj>
 80021a2:	4620      	mov	r0, r4
 80021a4:	bd10      	pop	{r4, pc}

080021a6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 80021a6:	b510      	push	{r4, lr}
 80021a8:	2178      	movs	r1, #120	; 0x78
 80021aa:	4604      	mov	r4, r0
 80021ac:	f020 fe7e 	bl	8022eac <_ZdlPvj>
 80021b0:	4620      	mov	r0, r4
 80021b2:	bd10      	pop	{r4, pc}

080021b4 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class WildcardTextButtonStyle : public T
 80021b4:	b510      	push	{r4, lr}
 80021b6:	21c0      	movs	r1, #192	; 0xc0
 80021b8:	4604      	mov	r4, r0
 80021ba:	f020 fe77 	bl	8022eac <_ZdlPvj>
 80021be:	4620      	mov	r0, r4
 80021c0:	bd10      	pop	{r4, pc}

080021c2 <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80021c2:	b510      	push	{r4, lr}
 80021c4:	2110      	movs	r1, #16
 80021c6:	4604      	mov	r4, r0
 80021c8:	f020 fe70 	bl	8022eac <_ZdlPvj>
 80021cc:	4620      	mov	r0, r4
 80021ce:	bd10      	pop	{r4, pc}

080021d0 <_ZN29CustomContainerButton_keyBaseD0Ev>:
    virtual ~CustomContainerButton_keyBase() {}
 80021d0:	b510      	push	{r4, lr}
 80021d2:	f44f 718a 	mov.w	r1, #276	; 0x114
 80021d6:	4604      	mov	r4, r0
 80021d8:	f020 fe68 	bl	8022eac <_ZdlPvj>
 80021dc:	4620      	mov	r0, r4
 80021de:	bd10      	pop	{r4, pc}

080021e0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80021e0:	b510      	push	{r4, lr}
 80021e2:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80021e4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80021e6:	b150      	cbz	r0, 80021fe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80021e8:	6803      	ldr	r3, [r0, #0]
 80021ea:	68db      	ldr	r3, [r3, #12]
 80021ec:	4798      	blx	r3
 80021ee:	b130      	cbz	r0, 80021fe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80021f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	4621      	mov	r1, r4
 80021f6:	689b      	ldr	r3, [r3, #8]
        }
    }
 80021f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80021fc:	4718      	bx	r3
    }
 80021fe:	bd10      	pop	{r4, pc}

08002200 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

}

void CustomContainerButton_keyBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_keyboard)
 8002200:	f100 032c 	add.w	r3, r0, #44	; 0x2c
 8002204:	428b      	cmp	r3, r1
{
 8002206:	b510      	push	{r4, lr}
 8002208:	4604      	mov	r4, r0
    if (&src == &flexButton_keyboard)
 800220a:	d10a      	bne.n	8002222 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButton_keyboard clicked call virtual function
        //Call functionButtonClick
        functionButtonClick();
 800220c:	6803      	ldr	r3, [r0, #0]
 800220e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002212:	4798      	blx	r3

        //Interaction2
        //When flexButton_keyboard clicked emit triggerButton_key callback
        //Emit callback
        emitTriggerButton_keyCallback();
 8002214:	6823      	ldr	r3, [r4, #0]
 8002216:	4620      	mov	r0, r4
 8002218:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
}
 800221c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        emitTriggerButton_keyCallback();
 8002220:	4718      	bx	r3
}
 8002222:	bd10      	pop	{r4, pc}

08002224 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002224:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 8002226:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 8002228:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 800222c:	4604      	mov	r4, r0
 800222e:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002230:	b99b      	cbnz	r3, 800225a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002232:	b98e      	cbnz	r6, 8002258 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002234:	fab3 f383 	clz	r3, r3
 8002238:	095b      	lsrs	r3, r3, #5
 800223a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 800223e:	6823      	ldr	r3, [r4, #0]
 8002240:	4620      	mov	r0, r4
 8002242:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002246:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002248:	6823      	ldr	r3, [r4, #0]
 800224a:	4620      	mov	r0, r4
 800224c:	695b      	ldr	r3, [r3, #20]
 800224e:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002250:	b116      	cbz	r6, 8002258 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002252:	792b      	ldrb	r3, [r5, #4]
 8002254:	2b01      	cmp	r3, #1
 8002256:	d003      	beq.n	8002260 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002258:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800225a:	2e00      	cmp	r6, #0
 800225c:	d0fc      	beq.n	8002258 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 800225e:	e7e9      	b.n	8002234 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002260:	6823      	ldr	r3, [r4, #0]
 8002262:	4620      	mov	r0, r4
 8002264:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    }
 8002268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 800226c:	4718      	bx	r3
	...

08002270 <_ZN8touchgfx8DrawableC1Ev>:
 8002270:	4a07      	ldr	r2, [pc, #28]	; (8002290 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002272:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8002274:	2200      	movs	r2, #0
 8002276:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800227a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800227e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002282:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002286:	f44f 7280 	mov.w	r2, #256	; 0x100
 800228a:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 800228c:	4770      	bx	lr
 800228e:	bf00      	nop
 8002290:	0802866c 	.word	0x0802866c

08002294 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002294:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002296:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002298:	4604      	mov	r4, r0
        setX(x);
 800229a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 800229c:	4615      	mov	r5, r2
        setX(x);
 800229e:	4798      	blx	r3
        setY(y);
 80022a0:	6823      	ldr	r3, [r4, #0]
 80022a2:	4629      	mov	r1, r5
 80022a4:	4620      	mov	r0, r4
 80022a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80022a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80022ac:	4718      	bx	r3
	...

080022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    WildcardTextButtonStyle()
 80022b0:	b570      	push	{r4, r5, r6, lr}
 80022b2:	4604      	mov	r4, r0
          firstChild(0)
 80022b4:	f7ff ffdc 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 80022b8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 80022bc:	4626      	mov	r6, r4
 80022be:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80022c0:	2301      	movs	r3, #1
 80022c2:	2500      	movs	r5, #0
 80022c4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80022c8:	4b22      	ldr	r3, [pc, #136]	; (8002354 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa4>)
 80022ca:	62a5      	str	r5, [r4, #40]	; 0x28
 80022cc:	6325      	str	r5, [r4, #48]	; 0x30
 80022ce:	f846 3b34 	str.w	r3, [r6], #52
        : Widget(), alpha(255), color(0)
 80022d2:	2226      	movs	r2, #38	; 0x26
 80022d4:	4629      	mov	r1, r5
 80022d6:	4630      	mov	r0, r6
 80022d8:	f021 f8bc 	bl	8023454 <memset>
class Widget : public Drawable
 80022dc:	4630      	mov	r0, r6
 80022de:	f7ff ffc7 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80022e2:	23ff      	movs	r3, #255	; 0xff
 80022e4:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
        : Box(), borderColor(0), borderSize(0)
 80022e8:	4b1b      	ldr	r3, [pc, #108]	; (8002358 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa8>)
 80022ea:	6363      	str	r3, [r4, #52]	; 0x34
        T::add(borderBox);
 80022ec:	4631      	mov	r1, r6
 80022ee:	4620      	mov	r0, r4
        : T()
 80022f0:	4626      	mov	r6, r4
        : color(0)
 80022f2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80022f6:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 80022fa:	65e5      	str	r5, [r4, #92]	; 0x5c
 80022fc:	6625      	str	r5, [r4, #96]	; 0x60
 80022fe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        rect.x = x;
 8002302:	63a5      	str	r5, [r4, #56]	; 0x38
 8002304:	f00c ff66 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002308:	4b14      	ldr	r3, [pc, #80]	; (800235c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xac>)
 800230a:	f846 3b78 	str.w	r3, [r6], #120
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800230e:	2226      	movs	r2, #38	; 0x26
 8002310:	4629      	mov	r1, r5
 8002312:	4630      	mov	r0, r6
 8002314:	f021 f89e 	bl	8023454 <memset>
 8002318:	4630      	mov	r0, r6
 800231a:	f7ff ffa9 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 800231e:	4b10      	ldr	r3, [pc, #64]	; (8002360 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb0>)
 8002320:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8002324:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002328:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800232c:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002330:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002334:	4b0b      	ldr	r3, [pc, #44]	; (8002364 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb4>)
 8002336:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
        T::add(wildcardText);
 800233a:	4620      	mov	r0, r4
        : color(0)
 800233c:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 8002340:	f8a4 50b0 	strh.w	r5, [r4, #176]	; 0xb0
 8002344:	67a3      	str	r3, [r4, #120]	; 0x78
 8002346:	f8c4 50bc 	str.w	r5, [r4, #188]	; 0xbc
 800234a:	4631      	mov	r1, r6
 800234c:	f00c ff42 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002350:	4620      	mov	r0, r4
 8002352:	bd70      	pop	{r4, r5, r6, pc}
 8002354:	08025b98 	.word	0x08025b98
 8002358:	0802827c 	.word	0x0802827c
 800235c:	08025c30 	.word	0x08025c30
 8002360:	08025b88 	.word	0x08025b88
 8002364:	080281d4 	.word	0x080281d4

08002368 <_ZN29CustomContainerButton_keyBaseC1Ev>:
CustomContainerButton_keyBase::CustomContainerButton_keyBase() :
 8002368:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800236c:	4604      	mov	r4, r0
    triggerButton_keyCallback(0)
 800236e:	4625      	mov	r5, r4
 8002370:	f7ff ff7e 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8002374:	2600      	movs	r6, #0
 8002376:	4b49      	ldr	r3, [pc, #292]	; (800249c <_ZN29CustomContainerButton_keyBaseC1Ev+0x134>)
 8002378:	62a6      	str	r6, [r4, #40]	; 0x28
 800237a:	f845 3b2c 	str.w	r3, [r5], #44
 800237e:	4628      	mov	r0, r5
 8002380:	f7ff ff96 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002384:	4b46      	ldr	r3, [pc, #280]	; (80024a0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x138>)
 8002386:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 800238a:	e9c4 3440 	strd	r3, r4, [r4, #256]	; 0x100
 800238e:	4b45      	ldr	r3, [pc, #276]	; (80024a4 <_ZN29CustomContainerButton_keyBaseC1Ev+0x13c>)
 8002390:	e9c4 3642 	strd	r3, r6, [r4, #264]	; 0x108
        rect.width = width;
 8002394:	f04f 133c 	mov.w	r3, #3932220	; 0x3c003c
 8002398:	60a3      	str	r3, [r4, #8]
        borderBox.setPosition(x, y, width, height);
 800239a:	f104 0060 	add.w	r0, r4, #96	; 0x60
        setXY(x, y);
 800239e:	4632      	mov	r2, r6
 80023a0:	4631      	mov	r1, r6
 80023a2:	9001      	str	r0, [sp, #4]
 80023a4:	f7ff ff76 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80023a8:	223c      	movs	r2, #60	; 0x3c
 80023aa:	4611      	mov	r1, r2
 80023ac:	9801      	ldr	r0, [sp, #4]
 80023ae:	f7ff fe76 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80023b2:	2301      	movs	r3, #1
 80023b4:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        up = colorReleased;
 80023b8:	f1a3 1365 	sub.w	r3, r3, #6619237	; 0x650065
 80023bc:	f5a3 43c8 	sub.w	r3, r3, #25600	; 0x6400
 80023c0:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        down = colorPressed;
 80023c4:	f103 1335 	add.w	r3, r3, #3473461	; 0x350035
 80023c8:	f503 5358 	add.w	r3, r3, #13824	; 0x3600
 80023cc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        borderUp = borderColorReleased;
 80023d0:	4b35      	ldr	r3, [pc, #212]	; (80024a8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x140>)
 80023d2:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
 80023d6:	f503 2342 	add.w	r3, r3, #794624	; 0xc2000
 80023da:	f203 2339 	addw	r3, r3, #569	; 0x239
 80023de:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
        handlePressedUpdated();
 80023e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80023e4:	4628      	mov	r0, r5
 80023e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80023ea:	4798      	blx	r3
        wildcardText.setTypedText(t);
 80023ec:	f104 07a4 	add.w	r7, r4, #164	; 0xa4
 80023f0:	4b2e      	ldr	r3, [pc, #184]	; (80024ac <_ZN29CustomContainerButton_keyBaseC1Ev+0x144>)
 80023f2:	9302      	str	r3, [sp, #8]
 80023f4:	a902      	add	r1, sp, #8
 80023f6:	2313      	movs	r3, #19
 80023f8:	4638      	mov	r0, r7
 80023fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80023fe:	f00e fc80 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8002402:	f9b4 3036 	ldrsh.w	r3, [r4, #54]	; 0x36
        rect.height = height;
 8002406:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800240a:	4b29      	ldr	r3, [pc, #164]	; (80024b0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x148>)
        rect.width = width;
 800240c:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	f8a4 20ac 	strh.w	r2, [r4, #172]	; 0xac
    Unicode::snprintf(flexButton_keyboardBuffer, FLEXBUTTON_KEYBOARD_SIZE, "%s", TypedText(T_RESOURCEID11).getText());
 8002414:	f104 08ec 	add.w	r8, r4, #236	; 0xec
 8002418:	b92b      	cbnz	r3, 8002426 <_ZN29CustomContainerButton_keyBaseC1Ev+0xbe>
 800241a:	4b26      	ldr	r3, [pc, #152]	; (80024b4 <_ZN29CustomContainerButton_keyBaseC1Ev+0x14c>)
 800241c:	4a26      	ldr	r2, [pc, #152]	; (80024b8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 800241e:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002420:	4826      	ldr	r0, [pc, #152]	; (80024bc <_ZN29CustomContainerButton_keyBaseC1Ev+0x154>)
 8002422:	f020 fd71 	bl	8022f08 <__assert_func>
 8002426:	4b26      	ldr	r3, [pc, #152]	; (80024c0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x158>)
 8002428:	881b      	ldrh	r3, [r3, #0]
 800242a:	2b14      	cmp	r3, #20
 800242c:	d803      	bhi.n	8002436 <_ZN29CustomContainerButton_keyBaseC1Ev+0xce>
 800242e:	4b25      	ldr	r3, [pc, #148]	; (80024c4 <_ZN29CustomContainerButton_keyBaseC1Ev+0x15c>)
 8002430:	4a21      	ldr	r2, [pc, #132]	; (80024b8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 8002432:	21af      	movs	r1, #175	; 0xaf
 8002434:	e7f4      	b.n	8002420 <_ZN29CustomContainerButton_keyBaseC1Ev+0xb8>
        return texts->getText(typedTextId);
 8002436:	4b24      	ldr	r3, [pc, #144]	; (80024c8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x160>)
 8002438:	2114      	movs	r1, #20
 800243a:	6818      	ldr	r0, [r3, #0]
 800243c:	f004 fa7a 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8002440:	4a22      	ldr	r2, [pc, #136]	; (80024cc <_ZN29CustomContainerButton_keyBaseC1Ev+0x164>)
 8002442:	4603      	mov	r3, r0
 8002444:	210a      	movs	r1, #10
 8002446:	4640      	mov	r0, r8
 8002448:	f014 fbf4 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        setXY(x, y);
 800244c:	4631      	mov	r1, r6
 800244e:	4638      	mov	r0, r7
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002450:	f8c4 80e0 	str.w	r8, [r4, #224]	; 0xe0
 8002454:	2212      	movs	r2, #18
 8002456:	f7ff ff1d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800245a:	223c      	movs	r2, #60	; 0x3c
 800245c:	4611      	mov	r1, r2
 800245e:	4638      	mov	r0, r7
 8002460:	f7ff fe1d 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8002464:	4b1a      	ldr	r3, [pc, #104]	; (80024d0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x168>)
        handlePressedUpdated();
 8002466:	4628      	mov	r0, r5
        colorPressed = newColorPressed;
 8002468:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
        handlePressedUpdated();
 800246c:	f7ff fe5d 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 8002470:	4632      	mov	r2, r6
 8002472:	4631      	mov	r1, r6
 8002474:	4628      	mov	r0, r5
 8002476:	f7ff ff0d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800247a:	223c      	movs	r2, #60	; 0x3c
 800247c:	4611      	mov	r1, r2
 800247e:	4628      	mov	r0, r5
 8002480:	f7ff fe0d 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_keyboard.setAction(flexButtonCallback);
 8002484:	f504 7380 	add.w	r3, r4, #256	; 0x100
    add(flexButton_keyboard);
 8002488:	4620      	mov	r0, r4
        action = &callback;
 800248a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800248c:	4629      	mov	r1, r5
 800248e:	f00c fea1 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002492:	4620      	mov	r0, r4
 8002494:	b004      	add	sp, #16
 8002496:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800249a:	bf00      	nop
 800249c:	08025ce0 	.word	0x08025ce0
 80024a0:	08025cc8 	.word	0x08025cc8
 80024a4:	08002201 	.word	0x08002201
 80024a8:	ff626363 	.word	0xff626363
 80024ac:	08025b88 	.word	0x08025b88
 80024b0:	200200dc 	.word	0x200200dc
 80024b4:	08025a74 	.word	0x08025a74
 80024b8:	08025ab6 	.word	0x08025ab6
 80024bc:	08025ae4 	.word	0x08025ae4
 80024c0:	200200e0 	.word	0x200200e0
 80024c4:	08025b2b 	.word	0x08025b2b
 80024c8:	200200e8 	.word	0x200200e8
 80024cc:	08025b7d 	.word	0x08025b7d
 80024d0:	ff0a0a0a 	.word	0xff0a0a0a

080024d4 <_ZN27CustomContainerKeyboardBaseD1Ev>:

class CustomContainerKeyboardBase : public touchgfx::Container
{
public:
    CustomContainerKeyboardBase();
    virtual ~CustomContainerKeyboardBase() {}
 80024d4:	4770      	bx	lr

080024d6 <_ZN27CustomContainerKeyboardBase17ClickButtonDelPreEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024d6:	4770      	bx	lr

080024d8 <_ZN27CustomContainerKeyboardBase17ClickButtonDelAllEv>:

    virtual void ClickButtonDelAll()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024d8:	4770      	bx	lr

080024da <_ZN27CustomContainerKeyboardBase16ClickButtonShiftEv>:

    virtual void ClickButtonShift()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024da:	4770      	bx	lr

080024dc <_ZN27CustomContainerKeyboardBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024dc:	4770      	bx	lr

080024de <_ZN27CustomContainerKeyboardBase19ClickButtonLanguageEv>:

    virtual void ClickButtonLanguage()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024de:	4770      	bx	lr

080024e0 <_ZN27CustomContainerKeyboardBase16ClickButtonSpaceEv>:

    virtual void ClickButtonSpace()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024e0:	4770      	bx	lr

080024e2 <_ZN27CustomContainerKeyboardBase16ClickButtonEnterEv>:

    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024e2:	4770      	bx	lr

080024e4 <_ZN27CustomContainerKeyboardBase17ClickButtonABC123Ev>:

    virtual void ClickButtonABC123()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024e4:	4770      	bx	lr

080024e6 <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboardCallback()
 80024e6:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 80024e8:	f642 45e4 	movw	r5, #11492	; 0x2ce4
    virtual void emitTriggerKeyboardCallback()
 80024ec:	4604      	mov	r4, r0
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 80024ee:	5940      	ldr	r0, [r0, r5]
 80024f0:	b148      	cbz	r0, 8002506 <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
 80024f2:	6803      	ldr	r3, [r0, #0]
 80024f4:	68db      	ldr	r3, [r3, #12]
 80024f6:	4798      	blx	r3
 80024f8:	b128      	cbz	r0, 8002506 <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
        {
            this->triggerKeyboardCallback->execute();
 80024fa:	5960      	ldr	r0, [r4, r5]
 80024fc:	6803      	ldr	r3, [r0, #0]
        }
    }
 80024fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboardCallback->execute();
 8002502:	689b      	ldr	r3, [r3, #8]
 8002504:	4718      	bx	r3
    }
 8002506:	bd70      	pop	{r4, r5, r6, pc}

08002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboardBase::customContainer1TriggerButton_keyCallbackHandler()
{
    //Interaction8
    //When customContainer1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
 8002508:	6803      	ldr	r3, [r0, #0]
 800250a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800250e:	4718      	bx	r3

08002510 <_ZN27CustomContainerKeyboardBase48customContainer2TriggerButton_keyCallbackHandlerEv>:
 8002510:	f7ff bffa 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002514 <_ZN27CustomContainerKeyboardBase48customContainer3TriggerButton_keyCallbackHandlerEv>:
 8002514:	f7ff bff8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002518 <_ZN27CustomContainerKeyboardBase48customContainer4TriggerButton_keyCallbackHandlerEv>:
 8002518:	f7ff bff6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800251c <_ZN27CustomContainerKeyboardBase48customContainer5TriggerButton_keyCallbackHandlerEv>:
 800251c:	f7ff bff4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002520 <_ZN27CustomContainerKeyboardBase48customContainer6TriggerButton_keyCallbackHandlerEv>:
 8002520:	f7ff bff2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002524 <_ZN27CustomContainerKeyboardBase48customContainer7TriggerButton_keyCallbackHandlerEv>:
 8002524:	f7ff bff0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002528 <_ZN27CustomContainerKeyboardBase48customContainer8TriggerButton_keyCallbackHandlerEv>:
 8002528:	f7ff bfee 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800252c <_ZN27CustomContainerKeyboardBase48customContainer9TriggerButton_keyCallbackHandlerEv>:
 800252c:	f7ff bfec 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002530 <_ZN27CustomContainerKeyboardBase49customContainer10TriggerButton_keyCallbackHandlerEv>:
 8002530:	f7ff bfea 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002534 <_ZN27CustomContainerKeyboardBase49customContainer11TriggerButton_keyCallbackHandlerEv>:
 8002534:	f7ff bfe8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002538 <_ZN27CustomContainerKeyboardBase49customContainer12TriggerButton_keyCallbackHandlerEv>:
 8002538:	f7ff bfe6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800253c <_ZN27CustomContainerKeyboardBase50customContainer1_1TriggerButton_keyCallbackHandlerEv>:
 800253c:	f7ff bfe4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002540 <_ZN27CustomContainerKeyboardBase50customContainer2_1TriggerButton_keyCallbackHandlerEv>:
 8002540:	f7ff bfe2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002544 <_ZN27CustomContainerKeyboardBase50customContainer3_1TriggerButton_keyCallbackHandlerEv>:
 8002544:	f7ff bfe0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002548 <_ZN27CustomContainerKeyboardBase50customContainer4_1TriggerButton_keyCallbackHandlerEv>:
 8002548:	f7ff bfde 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800254c <_ZN27CustomContainerKeyboardBase50customContainer5_1TriggerButton_keyCallbackHandlerEv>:
 800254c:	f7ff bfdc 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002550 <_ZN27CustomContainerKeyboardBase50customContainer6_1TriggerButton_keyCallbackHandlerEv>:
 8002550:	f7ff bfda 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002554 <_ZN27CustomContainerKeyboardBase50customContainer7_1TriggerButton_keyCallbackHandlerEv>:
 8002554:	f7ff bfd8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002558 <_ZN27CustomContainerKeyboardBase50customContainer8_1TriggerButton_keyCallbackHandlerEv>:
 8002558:	f7ff bfd6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800255c <_ZN27CustomContainerKeyboardBase50customContainer9_1TriggerButton_keyCallbackHandlerEv>:
 800255c:	f7ff bfd4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002560 <_ZN27CustomContainerKeyboardBase51customContainer10_1TriggerButton_keyCallbackHandlerEv>:
 8002560:	f7ff bfd2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002564 <_ZN27CustomContainerKeyboardBase50customContainer1_2TriggerButton_keyCallbackHandlerEv>:
 8002564:	f7ff bfd0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002568 <_ZN27CustomContainerKeyboardBase50customContainer2_2TriggerButton_keyCallbackHandlerEv>:
 8002568:	f7ff bfce 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800256c <_ZN27CustomContainerKeyboardBase50customContainer3_2TriggerButton_keyCallbackHandlerEv>:
 800256c:	f7ff bfcc 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002570 <_ZN27CustomContainerKeyboardBase50customContainer4_2TriggerButton_keyCallbackHandlerEv>:
 8002570:	f7ff bfca 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002574 <_ZN27CustomContainerKeyboardBase50customContainer5_2TriggerButton_keyCallbackHandlerEv>:
 8002574:	f7ff bfc8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002578 <_ZN27CustomContainerKeyboardBase50customContainer6_2TriggerButton_keyCallbackHandlerEv>:
 8002578:	f7ff bfc6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800257c <_ZN27CustomContainerKeyboardBase50customContainer7_2TriggerButton_keyCallbackHandlerEv>:
 800257c:	f7ff bfc4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002580 <_ZN27CustomContainerKeyboardBase50customContainer8_2TriggerButton_keyCallbackHandlerEv>:
 8002580:	f7ff bfc2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002584 <_ZN27CustomContainerKeyboardBase50customContainer9_2TriggerButton_keyCallbackHandlerEv>:
 8002584:	f7ff bfc0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002588 <_ZN27CustomContainerKeyboardBase51customContainer10_2TriggerButton_keyCallbackHandlerEv>:
 8002588:	f7ff bfbe 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800258c <_ZN27CustomContainerKeyboardBase51customContainer11_1TriggerButton_keyCallbackHandlerEv>:
 800258c:	f7ff bfbc 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002590 <_ZN27CustomContainerKeyboardBase7action1Ev>:
}

void CustomContainerKeyboardBase::action1()
{

}
 8002590:	4770      	bx	lr

08002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8002592:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002594:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002598:	b133      	cbz	r3, 80025a8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 800259a:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
        this->color = color;
 800259e:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80025a2:	f7ff fdb5 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80025a6:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 80025a8:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 80025ac:	e7f7      	b.n	800259e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080025ae <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025ae:	4770      	bx	lr

080025b0 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80025b0:	4770      	bx	lr

080025b2 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 80025b2:	4770      	bx	lr

080025b4 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80025b4:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80025b6:	68c2      	ldr	r2, [r0, #12]
 80025b8:	6841      	ldr	r1, [r0, #4]
 80025ba:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80025bc:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80025be:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80025c2:	07d2      	lsls	r2, r2, #31
 80025c4:	bf48      	it	mi
 80025c6:	590a      	ldrmi	r2, [r1, r4]
 80025c8:	689b      	ldr	r3, [r3, #8]
    }
 80025ca:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80025ce:	bf48      	it	mi
 80025d0:	58d3      	ldrmi	r3, [r2, r3]
 80025d2:	4718      	bx	r3

080025d4 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80025d4:	6843      	ldr	r3, [r0, #4]
 80025d6:	b12b      	cbz	r3, 80025e4 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x10>
 80025d8:	6883      	ldr	r3, [r0, #8]
 80025da:	b92b      	cbnz	r3, 80025e8 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x14>
 80025dc:	68c0      	ldr	r0, [r0, #12]
 80025de:	f000 0001 	and.w	r0, r0, #1
 80025e2:	4770      	bx	lr
 80025e4:	4618      	mov	r0, r3
 80025e6:	4770      	bx	lr
 80025e8:	2001      	movs	r0, #1
    }
 80025ea:	4770      	bx	lr

080025ec <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80025ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80025ee:	68c2      	ldr	r2, [r0, #12]
 80025f0:	6844      	ldr	r4, [r0, #4]
 80025f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80025f4:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80025f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80025fa:	07d2      	lsls	r2, r2, #31
 80025fc:	bf48      	it	mi
 80025fe:	5962      	ldrmi	r2, [r4, r5]
 8002600:	689b      	ldr	r3, [r3, #8]
    }
 8002602:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002604:	bf48      	it	mi
 8002606:	58d3      	ldrmi	r3, [r2, r3]
 8002608:	4718      	bx	r3

0800260a <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800260a:	6843      	ldr	r3, [r0, #4]
 800260c:	b12b      	cbz	r3, 800261a <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800260e:	6883      	ldr	r3, [r0, #8]
 8002610:	b92b      	cbnz	r3, 800261e <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002612:	68c0      	ldr	r0, [r0, #12]
 8002614:	f000 0001 	and.w	r0, r0, #1
 8002618:	4770      	bx	lr
 800261a:	4618      	mov	r0, r3
 800261c:	4770      	bx	lr
 800261e:	2001      	movs	r0, #1
    }
 8002620:	4770      	bx	lr

08002622 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 8002622:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8002626:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 800262a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 800262e:	4770      	bx	lr

08002630 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002630:	b510      	push	{r4, lr}
 8002632:	2110      	movs	r1, #16
 8002634:	4604      	mov	r4, r0
 8002636:	f020 fc39 	bl	8022eac <_ZdlPvj>
 800263a:	4620      	mov	r0, r4
 800263c:	bd10      	pop	{r4, pc}

0800263e <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800263e:	b510      	push	{r4, lr}
 8002640:	2110      	movs	r1, #16
 8002642:	4604      	mov	r4, r0
 8002644:	f020 fc32 	bl	8022eac <_ZdlPvj>
 8002648:	4620      	mov	r0, r4
 800264a:	bd10      	pop	{r4, pc}

0800264c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 800264c:	b510      	push	{r4, lr}
 800264e:	21bc      	movs	r1, #188	; 0xbc
 8002650:	4604      	mov	r4, r0
 8002652:	f020 fc2b 	bl	8022eac <_ZdlPvj>
 8002656:	4620      	mov	r0, r4
 8002658:	bd10      	pop	{r4, pc}

0800265a <_ZN27CustomContainerKeyboardBaseD0Ev>:
    virtual ~CustomContainerKeyboardBase() {}
 800265a:	b510      	push	{r4, lr}
 800265c:	f642 41e8 	movw	r1, #11496	; 0x2ce8
 8002660:	4604      	mov	r4, r0
 8002662:	f020 fc23 	bl	8022eac <_ZdlPvj>
 8002666:	4620      	mov	r0, r4
 8002668:	bd10      	pop	{r4, pc}

0800266a <_ZN27CustomContainerKeyboardBase10initializeEv>:
{
 800266a:	b510      	push	{r4, lr}
 800266c:	4604      	mov	r4, r0
    customContainer1.initialize();
 800266e:	3060      	adds	r0, #96	; 0x60
 8002670:	f004 f990 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2.initialize();
 8002674:	f504 70ba 	add.w	r0, r4, #372	; 0x174
 8002678:	f004 f98c 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3.initialize();
 800267c:	f504 7022 	add.w	r0, r4, #648	; 0x288
 8002680:	f004 f988 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4.initialize();
 8002684:	f504 7067 	add.w	r0, r4, #924	; 0x39c
 8002688:	f004 f984 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5.initialize();
 800268c:	f504 6096 	add.w	r0, r4, #1200	; 0x4b0
 8002690:	f004 f980 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6.initialize();
 8002694:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8002698:	f004 f97c 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7.initialize();
 800269c:	f504 60db 	add.w	r0, r4, #1752	; 0x6d8
 80026a0:	f004 f978 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8.initialize();
 80026a4:	f204 70ec 	addw	r0, r4, #2028	; 0x7ec
 80026a8:	f004 f974 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9.initialize();
 80026ac:	f504 6010 	add.w	r0, r4, #2304	; 0x900
 80026b0:	f004 f970 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10.initialize();
 80026b4:	f604 2014 	addw	r0, r4, #2580	; 0xa14
 80026b8:	f004 f96c 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_1.initialize();
 80026bc:	f604 3028 	addw	r0, r4, #2856	; 0xb28
 80026c0:	f004 f968 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_1.initialize();
 80026c4:	f604 403c 	addw	r0, r4, #3132	; 0xc3c
 80026c8:	f004 f964 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_1.initialize();
 80026cc:	f504 6055 	add.w	r0, r4, #3408	; 0xd50
 80026d0:	f004 f960 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_1.initialize();
 80026d4:	f604 6064 	addw	r0, r4, #3684	; 0xe64
 80026d8:	f004 f95c 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_1.initialize();
 80026dc:	f604 7078 	addw	r0, r4, #3960	; 0xf78
 80026e0:	f004 f958 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_1.initialize();
 80026e4:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 80026e8:	300c      	adds	r0, #12
 80026ea:	f004 f953 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_1.initialize();
 80026ee:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 80026f2:	f004 f94f 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_1.initialize();
 80026f6:	f504 5095 	add.w	r0, r4, #4768	; 0x12a0
 80026fa:	3014      	adds	r0, #20
 80026fc:	f004 f94a 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_1.initialize();
 8002700:	f504 509e 	add.w	r0, r4, #5056	; 0x13c0
 8002704:	3008      	adds	r0, #8
 8002706:	f004 f945 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_1.initialize();
 800270a:	f504 50a6 	add.w	r0, r4, #5312	; 0x14c0
 800270e:	301c      	adds	r0, #28
 8002710:	f004 f940 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_2.initialize();
 8002714:	f504 50af 	add.w	r0, r4, #5600	; 0x15e0
 8002718:	3010      	adds	r0, #16
 800271a:	f004 f93b 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_2.initialize();
 800271e:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 8002722:	3004      	adds	r0, #4
 8002724:	f004 f936 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_2.initialize();
 8002728:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 800272c:	3018      	adds	r0, #24
 800272e:	f004 f931 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_2.initialize();
 8002732:	f504 50c9 	add.w	r0, r4, #6432	; 0x1920
 8002736:	300c      	adds	r0, #12
 8002738:	f004 f92c 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_2.initialize();
 800273c:	f504 50d2 	add.w	r0, r4, #6720	; 0x1a40
 8002740:	f004 f928 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_2.initialize();
 8002744:	f504 50da 	add.w	r0, r4, #6976	; 0x1b40
 8002748:	3014      	adds	r0, #20
 800274a:	f004 f923 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_2.initialize();
 800274e:	f504 50e3 	add.w	r0, r4, #7264	; 0x1c60
 8002752:	3008      	adds	r0, #8
 8002754:	f004 f91e 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_2.initialize();
 8002758:	f504 50eb 	add.w	r0, r4, #7520	; 0x1d60
 800275c:	301c      	adds	r0, #28
 800275e:	f004 f919 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_2.initialize();
 8002762:	f504 50f4 	add.w	r0, r4, #7808	; 0x1e80
 8002766:	3010      	adds	r0, #16
 8002768:	f004 f914 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_2.initialize();
 800276c:	f504 50fd 	add.w	r0, r4, #8096	; 0x1fa0
 8002770:	3004      	adds	r0, #4
 8002772:	f004 f90f 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11_1.initialize();
 8002776:	f504 500c 	add.w	r0, r4, #8960	; 0x2300
 800277a:	3034      	adds	r0, #52	; 0x34
 800277c:	f004 f90a 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11.initialize();
 8002780:	f504 5011 	add.w	r0, r4, #9280	; 0x2440
 8002784:	3008      	adds	r0, #8
 8002786:	f004 f905 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer12.initialize();
 800278a:	f504 5015 	add.w	r0, r4, #9536	; 0x2540
 800278e:	301c      	adds	r0, #28
}
 8002790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainer12.initialize();
 8002794:	f004 b8fe 	b.w	8006994 <_ZN25CustomContainerButton_key10initializeEv>

08002798 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboardBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_enter)
 8002798:	f500 5303 	add.w	r3, r0, #8384	; 0x20c0
 800279c:	3338      	adds	r3, #56	; 0x38
 800279e:	4299      	cmp	r1, r3
{
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
    if (&src == &flexButton_enter)
 80027a4:	d10a      	bne.n	80027bc <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //ClickButtonEnter
        //When flexButton_enter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 80027a6:	6803      	ldr	r3, [r0, #0]
 80027a8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80027ac:	4798      	blx	r3

        //Interaction42
        //When flexButton_enter clicked emit triggerKeyboard callback
        //Emit callback
        emitTriggerKeyboardCallback();
 80027ae:	6823      	ldr	r3, [r4, #0]
 80027b0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80027b4:	4620      	mov	r0, r4
        //Interaction43
        //When flexButton_ABC_123 clicked call virtual function
        //Call ClickButtonABC123
        ClickButtonABC123();
    }
}
 80027b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonABC123();
 80027ba:	4718      	bx	r3
    else if (&src == &flexButton_space)
 80027bc:	f500 5306 	add.w	r3, r0, #8576	; 0x2180
 80027c0:	3334      	adds	r3, #52	; 0x34
 80027c2:	4299      	cmp	r1, r3
 80027c4:	d103      	bne.n	80027ce <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        ClickButtonSpace();
 80027c6:	6803      	ldr	r3, [r0, #0]
 80027c8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80027cc:	e7f3      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_language)
 80027ce:	f500 5309 	add.w	r3, r0, #8768	; 0x2240
 80027d2:	3334      	adds	r3, #52	; 0x34
 80027d4:	4299      	cmp	r1, r3
 80027d6:	d103      	bne.n	80027e0 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x48>
        ClickButtonLanguage();
 80027d8:	6803      	ldr	r3, [r0, #0]
 80027da:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80027de:	e7ea      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_close)
 80027e0:	f500 5319 	add.w	r3, r0, #9792	; 0x2640
 80027e4:	3330      	adds	r3, #48	; 0x30
 80027e6:	4299      	cmp	r1, r3
 80027e8:	d103      	bne.n	80027f2 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
        ClickButtonCloseKeyboard();
 80027ea:	6803      	ldr	r3, [r0, #0]
 80027ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80027f0:	e7e1      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_shift)
 80027f2:	f500 531c 	add.w	r3, r0, #9984	; 0x2700
 80027f6:	3330      	adds	r3, #48	; 0x30
 80027f8:	4299      	cmp	r1, r3
 80027fa:	d103      	bne.n	8002804 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6c>
        ClickButtonShift();
 80027fc:	6803      	ldr	r3, [r0, #0]
 80027fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002802:	e7d8      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_all)
 8002804:	f500 531f 	add.w	r3, r0, #10176	; 0x27c0
 8002808:	332c      	adds	r3, #44	; 0x2c
 800280a:	4299      	cmp	r1, r3
 800280c:	d103      	bne.n	8002816 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7e>
        ClickButtonDelAll();
 800280e:	6803      	ldr	r3, [r0, #0]
 8002810:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002814:	e7cf      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_pre)
 8002816:	f500 5322 	add.w	r3, r0, #10368	; 0x2880
 800281a:	3328      	adds	r3, #40	; 0x28
 800281c:	4299      	cmp	r1, r3
 800281e:	d103      	bne.n	8002828 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>
        ClickButtonDelPre();
 8002820:	6803      	ldr	r3, [r0, #0]
 8002822:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002826:	e7c6      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_ABC_123)
 8002828:	f500 5325 	add.w	r3, r0, #10560	; 0x2940
 800282c:	3324      	adds	r3, #36	; 0x24
 800282e:	4299      	cmp	r1, r3
 8002830:	d103      	bne.n	800283a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
        ClickButtonABC123();
 8002832:	6803      	ldr	r3, [r0, #0]
 8002834:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8002838:	e7bd      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
}
 800283a:	bd10      	pop	{r4, pc}

0800283c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800283c:	b538      	push	{r3, r4, r5, lr}
 800283e:	4604      	mov	r4, r0
 8002840:	461d      	mov	r5, r3
        setXY(x, y);
 8002842:	f7ff fd27 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8002846:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800284a:	4629      	mov	r1, r5
 800284c:	4620      	mov	r0, r4
 800284e:	f7ff fc26 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002852:	bd38      	pop	{r3, r4, r5, pc}

08002854 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002854:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002856:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002858:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800285a:	2100      	movs	r1, #0
 800285c:	f020 fdfa 	bl	8023454 <memset>
 8002860:	4620      	mov	r0, r4
 8002862:	f7ff fd05 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8002866:	4b07      	ldr	r3, [pc, #28]	; (8002884 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 8002868:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800286a:	4b07      	ldr	r3, [pc, #28]	; (8002888 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 800286c:	62a3      	str	r3, [r4, #40]	; 0x28
 800286e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002872:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002874:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002878:	2300      	movs	r3, #0
 800287a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800287e:	8723      	strh	r3, [r4, #56]	; 0x38
    }
 8002880:	4620      	mov	r0, r4
 8002882:	bd10      	pop	{r4, pc}
 8002884:	08027fc0 	.word	0x08027fc0
 8002888:	08025b88 	.word	0x08025b88

0800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800288c:	b410      	push	{r4}
        borderUp = borderColorReleased;
 800288e:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002890:	9b01      	ldr	r3, [sp, #4]
 8002892:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002894:	6803      	ldr	r3, [r0, #0]
    }
 8002896:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 800289a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        down = colorPressed;
 800289e:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 80028a2:	4718      	bx	r3

080028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>:
    void setText(TypedText t)
 80028a4:	b513      	push	{r0, r1, r4, lr}
 80028a6:	4604      	mov	r4, r0
        text.setTypedText(t);
 80028a8:	3078      	adds	r0, #120	; 0x78
 80028aa:	9001      	str	r0, [sp, #4]
 80028ac:	f00e fa29 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 80028b0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80028b4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80028b8:	9801      	ldr	r0, [sp, #4]
 80028ba:	f7ff fbf0 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80028be:	b002      	add	sp, #8
 80028c0:	bd10      	pop	{r4, pc}

080028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>:
    void setWildcardText(TypedText t)
 80028c2:	b513      	push	{r0, r1, r4, lr}
 80028c4:	4604      	mov	r4, r0
        wildcardText.setTypedText(t);
 80028c6:	3078      	adds	r0, #120	; 0x78
 80028c8:	9001      	str	r0, [sp, #4]
 80028ca:	f00e fa1a 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80028ce:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80028d2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80028d6:	9801      	ldr	r0, [sp, #4]
 80028d8:	f7ff fbe1 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80028dc:	b002      	add	sp, #8
 80028de:	bd10      	pop	{r4, pc}

080028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 80028e0:	b570      	push	{r4, r5, r6, lr}
 80028e2:	4604      	mov	r4, r0
 80028e4:	f7ff fcc4 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 80028e8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 80028ec:	4626      	mov	r6, r4
 80028ee:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80028f0:	2301      	movs	r3, #1
 80028f2:	2500      	movs	r5, #0
 80028f4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80028f8:	4b0d      	ldr	r3, [pc, #52]	; (8002930 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 80028fa:	62a5      	str	r5, [r4, #40]	; 0x28
 80028fc:	6325      	str	r5, [r4, #48]	; 0x30
 80028fe:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002902:	4630      	mov	r0, r6
 8002904:	f7ff fbd8 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8002908:	4b0a      	ldr	r3, [pc, #40]	; (8002934 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
 800290a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 800290c:	462a      	mov	r2, r5
 800290e:	4629      	mov	r1, r5
 8002910:	4630      	mov	r0, r6
 8002912:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002916:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 800291a:	6625      	str	r5, [r4, #96]	; 0x60
 800291c:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002920:	f7ff fcb8 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002924:	4620      	mov	r0, r4
 8002926:	4631      	mov	r1, r6
 8002928:	f00c fc54 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800292c:	4620      	mov	r0, r4
 800292e:	bd70      	pop	{r4, r5, r6, pc}
 8002930:	08025b98 	.word	0x08025b98
 8002934:	0802827c 	.word	0x0802827c

08002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 8002938:	b538      	push	{r3, r4, r5, lr}
 800293a:	4604      	mov	r4, r0
        : T()
 800293c:	4625      	mov	r5, r4
 800293e:	f7ff ffcf 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002942:	4b07      	ldr	r3, [pc, #28]	; (8002960 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x28>)
 8002944:	f845 3b78 	str.w	r3, [r5], #120
 8002948:	4628      	mov	r0, r5
 800294a:	f7ff ff83 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
        : color(0)
 800294e:	2300      	movs	r3, #0
        T::add(text);
 8002950:	4620      	mov	r0, r4
 8002952:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
 8002956:	4629      	mov	r1, r5
 8002958:	f00c fc3c 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800295c:	4620      	mov	r0, r4
 800295e:	bd38      	pop	{r3, r4, r5, pc}
 8002960:	08025d7c 	.word	0x08025d7c

08002964 <_ZN27CustomContainerKeyboardBaseC1Ev>:
CustomContainerKeyboardBase::CustomContainerKeyboardBase() :
 8002964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002968:	ed2d 8b10 	vpush	{d8-d15}
 800296c:	4604      	mov	r4, r0
 800296e:	b0bd      	sub	sp, #244	; 0xf4
 8002970:	f7ff fc7e 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
    triggerKeyboardCallback(0)
 8002974:	4622      	mov	r2, r4
 8002976:	2500      	movs	r5, #0
 8002978:	4bd4      	ldr	r3, [pc, #848]	; (8002ccc <_ZN27CustomContainerKeyboardBaseC1Ev+0x368>)
 800297a:	62a5      	str	r5, [r4, #40]	; 0x28
 800297c:	f842 3b2c 	str.w	r3, [r2], #44
 8002980:	4610      	mov	r0, r2
 8002982:	ee0a 2a90 	vmov	s21, r2
 8002986:	f7ff fb97 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 800298a:	4bd1      	ldr	r3, [pc, #836]	; (8002cd0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x36c>)
 800298c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800298e:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8002992:	4618      	mov	r0, r3
        : color(col)
 8002994:	65a5      	str	r5, [r4, #88]	; 0x58
 8002996:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800299a:	930b      	str	r3, [sp, #44]	; 0x2c
 800299c:	f004 f804 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029a0:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80029a4:	4618      	mov	r0, r3
 80029a6:	930c      	str	r3, [sp, #48]	; 0x30
 80029a8:	f003 fffe 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029ac:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80029b0:	4618      	mov	r0, r3
 80029b2:	930d      	str	r3, [sp, #52]	; 0x34
 80029b4:	f003 fff8 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029b8:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 80029bc:	4618      	mov	r0, r3
 80029be:	930e      	str	r3, [sp, #56]	; 0x38
 80029c0:	f003 fff2 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029c4:	f504 6396 	add.w	r3, r4, #1200	; 0x4b0
 80029c8:	4618      	mov	r0, r3
 80029ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80029cc:	f003 ffec 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029d0:	f204 53c4 	addw	r3, r4, #1476	; 0x5c4
 80029d4:	4618      	mov	r0, r3
 80029d6:	9310      	str	r3, [sp, #64]	; 0x40
 80029d8:	f003 ffe6 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029dc:	f504 63db 	add.w	r3, r4, #1752	; 0x6d8
 80029e0:	4618      	mov	r0, r3
 80029e2:	9311      	str	r3, [sp, #68]	; 0x44
 80029e4:	f003 ffe0 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029e8:	f204 73ec 	addw	r3, r4, #2028	; 0x7ec
 80029ec:	4618      	mov	r0, r3
 80029ee:	9312      	str	r3, [sp, #72]	; 0x48
 80029f0:	f003 ffda 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 80029f4:	f504 6310 	add.w	r3, r4, #2304	; 0x900
 80029f8:	4618      	mov	r0, r3
 80029fa:	9313      	str	r3, [sp, #76]	; 0x4c
 80029fc:	f003 ffd4 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a00:	f604 2314 	addw	r3, r4, #2580	; 0xa14
 8002a04:	4618      	mov	r0, r3
 8002a06:	9314      	str	r3, [sp, #80]	; 0x50
 8002a08:	f003 ffce 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a0c:	f604 3328 	addw	r3, r4, #2856	; 0xb28
 8002a10:	4618      	mov	r0, r3
 8002a12:	9315      	str	r3, [sp, #84]	; 0x54
 8002a14:	f003 ffc8 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a18:	f604 433c 	addw	r3, r4, #3132	; 0xc3c
 8002a1c:	4618      	mov	r0, r3
 8002a1e:	9316      	str	r3, [sp, #88]	; 0x58
 8002a20:	f003 ffc2 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a24:	f504 6355 	add.w	r3, r4, #3408	; 0xd50
 8002a28:	4618      	mov	r0, r3
 8002a2a:	9317      	str	r3, [sp, #92]	; 0x5c
 8002a2c:	f003 ffbc 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a30:	f604 6364 	addw	r3, r4, #3684	; 0xe64
 8002a34:	4618      	mov	r0, r3
 8002a36:	9318      	str	r3, [sp, #96]	; 0x60
 8002a38:	f003 ffb6 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a3c:	f604 7378 	addw	r3, r4, #3960	; 0xf78
 8002a40:	4618      	mov	r0, r3
 8002a42:	9319      	str	r3, [sp, #100]	; 0x64
 8002a44:	f003 ffb0 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a48:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8002a4c:	330c      	adds	r3, #12
 8002a4e:	4618      	mov	r0, r3
 8002a50:	ee0b 3a10 	vmov	s22, r3
 8002a54:	f003 ffa8 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a58:	f504 538d 	add.w	r3, r4, #4512	; 0x11a0
 8002a5c:	4618      	mov	r0, r3
 8002a5e:	931a      	str	r3, [sp, #104]	; 0x68
 8002a60:	f003 ffa2 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a64:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 8002a68:	3314      	adds	r3, #20
 8002a6a:	4618      	mov	r0, r3
 8002a6c:	ee0b 3a90 	vmov	s23, r3
 8002a70:	f003 ff9a 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a74:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8002a78:	3308      	adds	r3, #8
 8002a7a:	4618      	mov	r0, r3
 8002a7c:	ee0c 3a10 	vmov	s24, r3
 8002a80:	f003 ff92 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a84:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
 8002a88:	331c      	adds	r3, #28
 8002a8a:	4618      	mov	r0, r3
 8002a8c:	ee0c 3a90 	vmov	s25, r3
 8002a90:	f003 ff8a 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002a94:	f504 53af 	add.w	r3, r4, #5600	; 0x15e0
 8002a98:	3310      	adds	r3, #16
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	ee0d 3a10 	vmov	s26, r3
 8002aa0:	f003 ff82 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002aa4:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8002aa8:	3304      	adds	r3, #4
 8002aaa:	4618      	mov	r0, r3
 8002aac:	ee0d 3a90 	vmov	s27, r3
 8002ab0:	f003 ff7a 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002ab4:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 8002ab8:	3318      	adds	r3, #24
 8002aba:	4618      	mov	r0, r3
 8002abc:	ee0e 3a10 	vmov	s28, r3
 8002ac0:	f003 ff72 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002ac4:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 8002ac8:	330c      	adds	r3, #12
 8002aca:	4618      	mov	r0, r3
 8002acc:	ee0e 3a90 	vmov	s29, r3
 8002ad0:	f003 ff6a 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002ad4:	f504 53d2 	add.w	r3, r4, #6720	; 0x1a40
 8002ad8:	4618      	mov	r0, r3
 8002ada:	931b      	str	r3, [sp, #108]	; 0x6c
 8002adc:	f003 ff64 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002ae0:	f504 53da 	add.w	r3, r4, #6976	; 0x1b40
 8002ae4:	3314      	adds	r3, #20
 8002ae6:	4618      	mov	r0, r3
 8002ae8:	ee0f 3a10 	vmov	s30, r3
 8002aec:	f003 ff5c 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002af0:	f504 53e3 	add.w	r3, r4, #7264	; 0x1c60
 8002af4:	3308      	adds	r3, #8
 8002af6:	4618      	mov	r0, r3
 8002af8:	ee0f 3a90 	vmov	s31, r3
 8002afc:	f003 ff54 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b00:	f504 53eb 	add.w	r3, r4, #7520	; 0x1d60
 8002b04:	331c      	adds	r3, #28
 8002b06:	4618      	mov	r0, r3
 8002b08:	9304      	str	r3, [sp, #16]
 8002b0a:	f003 ff4d 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b0e:	f504 53f4 	add.w	r3, r4, #7808	; 0x1e80
 8002b12:	3310      	adds	r3, #16
 8002b14:	4618      	mov	r0, r3
 8002b16:	9305      	str	r3, [sp, #20]
 8002b18:	f003 ff46 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b1c:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
 8002b20:	3304      	adds	r3, #4
 8002b22:	f242 06b8 	movw	r6, #8376	; 0x20b8
 8002b26:	4618      	mov	r0, r3
 8002b28:	9306      	str	r3, [sp, #24]
 8002b2a:	f003 ff3d 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b2e:	19a3      	adds	r3, r4, r6
 8002b30:	ee0a 3a10 	vmov	s20, r3
        : TextArea(), wildcard(0)
 8002b34:	4618      	mov	r0, r3
 8002b36:	f7ff fe8d 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8002b3a:	4b66      	ldr	r3, [pc, #408]	; (8002cd4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x370>)
 8002b3c:	51a3      	str	r3, [r4, r6]
 8002b3e:	ee1a 3a10 	vmov	r3, s20
 8002b42:	63dd      	str	r5, [r3, #60]	; 0x3c
 8002b44:	f504 5303 	add.w	r3, r4, #8384	; 0x20c0
 8002b48:	3338      	adds	r3, #56	; 0x38
 8002b4a:	4618      	mov	r0, r3
 8002b4c:	ee08 3a10 	vmov	s16, r3
 8002b50:	f7ff fef2 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002b54:	f504 5306 	add.w	r3, r4, #8576	; 0x2180
 8002b58:	3334      	adds	r3, #52	; 0x34
 8002b5a:	4618      	mov	r0, r3
 8002b5c:	ee08 3a90 	vmov	s17, r3
 8002b60:	f7ff fba6 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002b64:	f504 5309 	add.w	r3, r4, #8768	; 0x2240
 8002b68:	3334      	adds	r3, #52	; 0x34
 8002b6a:	4618      	mov	r0, r3
 8002b6c:	ee09 3a10 	vmov	s18, r3
 8002b70:	f7ff fb9e 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002b74:	f504 530c 	add.w	r3, r4, #8960	; 0x2300
 8002b78:	3334      	adds	r3, #52	; 0x34
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	9307      	str	r3, [sp, #28]
 8002b7e:	f003 ff13 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b82:	f504 5311 	add.w	r3, r4, #9280	; 0x2440
 8002b86:	3308      	adds	r3, #8
 8002b88:	4618      	mov	r0, r3
 8002b8a:	9308      	str	r3, [sp, #32]
 8002b8c:	f003 ff0c 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b90:	f504 5315 	add.w	r3, r4, #9536	; 0x2540
 8002b94:	331c      	adds	r3, #28
 8002b96:	4618      	mov	r0, r3
 8002b98:	9309      	str	r3, [sp, #36]	; 0x24
 8002b9a:	f003 ff05 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8002b9e:	f504 5319 	add.w	r3, r4, #9792	; 0x2640
 8002ba2:	3330      	adds	r3, #48	; 0x30
 8002ba4:	f504 5a1c 	add.w	sl, r4, #9984	; 0x2700
 8002ba8:	4618      	mov	r0, r3
 8002baa:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
 8002bae:	f504 591f 	add.w	r9, r4, #10176	; 0x27c0
 8002bb2:	ee09 3a90 	vmov	s19, r3
 8002bb6:	f109 092c 	add.w	r9, r9, #44	; 0x2c
 8002bba:	f7ff fb79 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002bbe:	f504 5822 	add.w	r8, r4, #10368	; 0x2880
 8002bc2:	4650      	mov	r0, sl
 8002bc4:	f7ff feb8 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002bc8:	f108 0828 	add.w	r8, r8, #40	; 0x28
 8002bcc:	4648      	mov	r0, r9
 8002bce:	f504 5b25 	add.w	fp, r4, #10560	; 0x2940
 8002bd2:	f7ff feb1 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002bd6:	f10b 0b24 	add.w	fp, fp, #36	; 0x24
 8002bda:	4640      	mov	r0, r8
 8002bdc:	f7ff feac 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002be0:	4658      	mov	r0, fp
 8002be2:	f7ff fb65 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002be6:	f642 23c4 	movw	r3, #10948	; 0x2ac4
 8002bea:	18e2      	adds	r2, r4, r3
 8002bec:	9203      	str	r2, [sp, #12]
 8002bee:	4a3a      	ldr	r2, [pc, #232]	; (8002cd8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x374>)
 8002bf0:	50e2      	str	r2, [r4, r3]
 8002bf2:	9b03      	ldr	r3, [sp, #12]
 8002bf4:	4a39      	ldr	r2, [pc, #228]	; (8002cdc <_ZN27CustomContainerKeyboardBaseC1Ev+0x378>)
 8002bf6:	605c      	str	r4, [r3, #4]
 8002bf8:	f642 23cc 	movw	r3, #10956	; 0x2acc
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002bfc:	4938      	ldr	r1, [pc, #224]	; (8002ce0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x37c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002bfe:	50e2      	str	r2, [r4, r3]
 8002c00:	f642 23d0 	movw	r3, #10960	; 0x2ad0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002c04:	f642 22d4 	movw	r2, #10964	; 0x2ad4
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002c08:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002c0a:	18a3      	adds	r3, r4, r2
 8002c0c:	930a      	str	r3, [sp, #40]	; 0x28
 8002c0e:	4b35      	ldr	r3, [pc, #212]	; (8002ce4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x380>)
 8002c10:	50a3      	str	r3, [r4, r2]
 8002c12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002c14:	6054      	str	r4, [r2, #4]
 8002c16:	f642 22dc 	movw	r2, #10972	; 0x2adc
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002c1a:	ee1a 0a90 	vmov	r0, s21
 8002c1e:	50a1      	str	r1, [r4, r2]
 8002c20:	f642 22e0 	movw	r2, #10976	; 0x2ae0
 8002c24:	50a5      	str	r5, [r4, r2]
 8002c26:	f642 22e4 	movw	r2, #10980	; 0x2ae4
 8002c2a:	18a1      	adds	r1, r4, r2
 8002c2c:	50a3      	str	r3, [r4, r2]
 8002c2e:	f642 22ec 	movw	r2, #10988	; 0x2aec
 8002c32:	604c      	str	r4, [r1, #4]
 8002c34:	911c      	str	r1, [sp, #112]	; 0x70
 8002c36:	492c      	ldr	r1, [pc, #176]	; (8002ce8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x384>)
 8002c38:	50a1      	str	r1, [r4, r2]
 8002c3a:	f642 22f0 	movw	r2, #10992	; 0x2af0
 8002c3e:	50a5      	str	r5, [r4, r2]
 8002c40:	f642 22f4 	movw	r2, #10996	; 0x2af4
 8002c44:	18a1      	adds	r1, r4, r2
 8002c46:	50a3      	str	r3, [r4, r2]
 8002c48:	f642 22fc 	movw	r2, #11004	; 0x2afc
 8002c4c:	604c      	str	r4, [r1, #4]
 8002c4e:	911d      	str	r1, [sp, #116]	; 0x74
 8002c50:	4926      	ldr	r1, [pc, #152]	; (8002cec <_ZN27CustomContainerKeyboardBaseC1Ev+0x388>)
 8002c52:	50a1      	str	r1, [r4, r2]
 8002c54:	f504 522c 	add.w	r2, r4, #11008	; 0x2b00
 8002c58:	6015      	str	r5, [r2, #0]
 8002c5a:	f642 3204 	movw	r2, #11012	; 0x2b04
 8002c5e:	18a1      	adds	r1, r4, r2
 8002c60:	50a3      	str	r3, [r4, r2]
 8002c62:	f642 320c 	movw	r2, #11020	; 0x2b0c
 8002c66:	604c      	str	r4, [r1, #4]
 8002c68:	911e      	str	r1, [sp, #120]	; 0x78
 8002c6a:	4921      	ldr	r1, [pc, #132]	; (8002cf0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x38c>)
 8002c6c:	50a1      	str	r1, [r4, r2]
 8002c6e:	f642 3210 	movw	r2, #11024	; 0x2b10
 8002c72:	50a5      	str	r5, [r4, r2]
 8002c74:	f642 3214 	movw	r2, #11028	; 0x2b14
 8002c78:	18a1      	adds	r1, r4, r2
 8002c7a:	50a3      	str	r3, [r4, r2]
 8002c7c:	f642 321c 	movw	r2, #11036	; 0x2b1c
 8002c80:	604c      	str	r4, [r1, #4]
 8002c82:	911f      	str	r1, [sp, #124]	; 0x7c
 8002c84:	491b      	ldr	r1, [pc, #108]	; (8002cf4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x390>)
 8002c86:	50a1      	str	r1, [r4, r2]
 8002c88:	f642 3220 	movw	r2, #11040	; 0x2b20
 8002c8c:	50a5      	str	r5, [r4, r2]
 8002c8e:	f642 3224 	movw	r2, #11044	; 0x2b24
 8002c92:	18a1      	adds	r1, r4, r2
 8002c94:	9120      	str	r1, [sp, #128]	; 0x80
 8002c96:	50a3      	str	r3, [r4, r2]
 8002c98:	f642 322c 	movw	r2, #11052	; 0x2b2c
 8002c9c:	604c      	str	r4, [r1, #4]
 8002c9e:	4916      	ldr	r1, [pc, #88]	; (8002cf8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x394>)
 8002ca0:	50a1      	str	r1, [r4, r2]
 8002ca2:	f642 3230 	movw	r2, #11056	; 0x2b30
 8002ca6:	50a5      	str	r5, [r4, r2]
 8002ca8:	f642 3234 	movw	r2, #11060	; 0x2b34
 8002cac:	18a1      	adds	r1, r4, r2
 8002cae:	50a3      	str	r3, [r4, r2]
 8002cb0:	f642 323c 	movw	r2, #11068	; 0x2b3c
 8002cb4:	604c      	str	r4, [r1, #4]
 8002cb6:	9121      	str	r1, [sp, #132]	; 0x84
 8002cb8:	4910      	ldr	r1, [pc, #64]	; (8002cfc <_ZN27CustomContainerKeyboardBaseC1Ev+0x398>)
 8002cba:	50a1      	str	r1, [r4, r2]
 8002cbc:	f504 522d 	add.w	r2, r4, #11072	; 0x2b40
 8002cc0:	6015      	str	r5, [r2, #0]
 8002cc2:	f642 3244 	movw	r2, #11076	; 0x2b44
 8002cc6:	18a1      	adds	r1, r4, r2
 8002cc8:	e01a      	b.n	8002d00 <_ZN27CustomContainerKeyboardBaseC1Ev+0x39c>
 8002cca:	bf00      	nop
 8002ccc:	08025e44 	.word	0x08025e44
 8002cd0:	0802827c 	.word	0x0802827c
 8002cd4:	080281d4 	.word	0x080281d4
 8002cd8:	08025e14 	.word	0x08025e14
 8002cdc:	08002799 	.word	0x08002799
 8002ce0:	08002509 	.word	0x08002509
 8002ce4:	08025e2c 	.word	0x08025e2c
 8002ce8:	08002511 	.word	0x08002511
 8002cec:	08002515 	.word	0x08002515
 8002cf0:	08002519 	.word	0x08002519
 8002cf4:	0800251d 	.word	0x0800251d
 8002cf8:	08002521 	.word	0x08002521
 8002cfc:	08002525 	.word	0x08002525
 8002d00:	50a3      	str	r3, [r4, r2]
 8002d02:	f642 324c 	movw	r2, #11084	; 0x2b4c
 8002d06:	604c      	str	r4, [r1, #4]
 8002d08:	9122      	str	r1, [sp, #136]	; 0x88
 8002d0a:	49af      	ldr	r1, [pc, #700]	; (8002fc8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x664>)
 8002d0c:	50a1      	str	r1, [r4, r2]
 8002d0e:	f642 3250 	movw	r2, #11088	; 0x2b50
 8002d12:	50a5      	str	r5, [r4, r2]
 8002d14:	f642 3254 	movw	r2, #11092	; 0x2b54
 8002d18:	18a1      	adds	r1, r4, r2
 8002d1a:	50a3      	str	r3, [r4, r2]
 8002d1c:	f642 325c 	movw	r2, #11100	; 0x2b5c
 8002d20:	604c      	str	r4, [r1, #4]
 8002d22:	9123      	str	r1, [sp, #140]	; 0x8c
 8002d24:	49a9      	ldr	r1, [pc, #676]	; (8002fcc <_ZN27CustomContainerKeyboardBaseC1Ev+0x668>)
 8002d26:	50a1      	str	r1, [r4, r2]
 8002d28:	f642 3260 	movw	r2, #11104	; 0x2b60
 8002d2c:	50a5      	str	r5, [r4, r2]
 8002d2e:	f642 3264 	movw	r2, #11108	; 0x2b64
 8002d32:	18a1      	adds	r1, r4, r2
 8002d34:	50a3      	str	r3, [r4, r2]
 8002d36:	f642 326c 	movw	r2, #11116	; 0x2b6c
 8002d3a:	604c      	str	r4, [r1, #4]
 8002d3c:	9124      	str	r1, [sp, #144]	; 0x90
 8002d3e:	49a4      	ldr	r1, [pc, #656]	; (8002fd0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x66c>)
 8002d40:	50a1      	str	r1, [r4, r2]
 8002d42:	f642 3270 	movw	r2, #11120	; 0x2b70
 8002d46:	50a5      	str	r5, [r4, r2]
 8002d48:	f642 3274 	movw	r2, #11124	; 0x2b74
 8002d4c:	18a1      	adds	r1, r4, r2
 8002d4e:	50a3      	str	r3, [r4, r2]
 8002d50:	f642 327c 	movw	r2, #11132	; 0x2b7c
 8002d54:	604c      	str	r4, [r1, #4]
 8002d56:	9125      	str	r1, [sp, #148]	; 0x94
 8002d58:	499e      	ldr	r1, [pc, #632]	; (8002fd4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x670>)
 8002d5a:	50a1      	str	r1, [r4, r2]
 8002d5c:	f504 522e 	add.w	r2, r4, #11136	; 0x2b80
 8002d60:	6015      	str	r5, [r2, #0]
 8002d62:	f642 3284 	movw	r2, #11140	; 0x2b84
 8002d66:	18a1      	adds	r1, r4, r2
 8002d68:	50a3      	str	r3, [r4, r2]
 8002d6a:	f642 328c 	movw	r2, #11148	; 0x2b8c
 8002d6e:	9126      	str	r1, [sp, #152]	; 0x98
 8002d70:	604c      	str	r4, [r1, #4]
 8002d72:	4999      	ldr	r1, [pc, #612]	; (8002fd8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x674>)
 8002d74:	50a1      	str	r1, [r4, r2]
 8002d76:	f642 3290 	movw	r2, #11152	; 0x2b90
 8002d7a:	50a5      	str	r5, [r4, r2]
 8002d7c:	f642 3294 	movw	r2, #11156	; 0x2b94
 8002d80:	18a1      	adds	r1, r4, r2
 8002d82:	50a3      	str	r3, [r4, r2]
 8002d84:	f642 329c 	movw	r2, #11164	; 0x2b9c
 8002d88:	604c      	str	r4, [r1, #4]
 8002d8a:	9127      	str	r1, [sp, #156]	; 0x9c
 8002d8c:	4993      	ldr	r1, [pc, #588]	; (8002fdc <_ZN27CustomContainerKeyboardBaseC1Ev+0x678>)
 8002d8e:	50a1      	str	r1, [r4, r2]
 8002d90:	f642 32a0 	movw	r2, #11168	; 0x2ba0
 8002d94:	50a5      	str	r5, [r4, r2]
 8002d96:	f642 32a4 	movw	r2, #11172	; 0x2ba4
 8002d9a:	18a1      	adds	r1, r4, r2
 8002d9c:	50a3      	str	r3, [r4, r2]
 8002d9e:	f642 32ac 	movw	r2, #11180	; 0x2bac
 8002da2:	604c      	str	r4, [r1, #4]
 8002da4:	9128      	str	r1, [sp, #160]	; 0xa0
 8002da6:	498e      	ldr	r1, [pc, #568]	; (8002fe0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x67c>)
 8002da8:	50a1      	str	r1, [r4, r2]
 8002daa:	f642 32b0 	movw	r2, #11184	; 0x2bb0
 8002dae:	50a5      	str	r5, [r4, r2]
 8002db0:	f642 32b4 	movw	r2, #11188	; 0x2bb4
 8002db4:	18a1      	adds	r1, r4, r2
 8002db6:	50a3      	str	r3, [r4, r2]
 8002db8:	f642 32bc 	movw	r2, #11196	; 0x2bbc
 8002dbc:	604c      	str	r4, [r1, #4]
 8002dbe:	9129      	str	r1, [sp, #164]	; 0xa4
 8002dc0:	4988      	ldr	r1, [pc, #544]	; (8002fe4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x680>)
 8002dc2:	50a1      	str	r1, [r4, r2]
 8002dc4:	f504 522f 	add.w	r2, r4, #11200	; 0x2bc0
 8002dc8:	6015      	str	r5, [r2, #0]
 8002dca:	f642 32c4 	movw	r2, #11204	; 0x2bc4
 8002dce:	18a1      	adds	r1, r4, r2
 8002dd0:	50a3      	str	r3, [r4, r2]
 8002dd2:	f642 32cc 	movw	r2, #11212	; 0x2bcc
 8002dd6:	604c      	str	r4, [r1, #4]
 8002dd8:	912a      	str	r1, [sp, #168]	; 0xa8
 8002dda:	4983      	ldr	r1, [pc, #524]	; (8002fe8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x684>)
 8002ddc:	50a1      	str	r1, [r4, r2]
 8002dde:	f642 32d0 	movw	r2, #11216	; 0x2bd0
 8002de2:	50a5      	str	r5, [r4, r2]
 8002de4:	f642 32d4 	movw	r2, #11220	; 0x2bd4
 8002de8:	18a1      	adds	r1, r4, r2
 8002dea:	50a3      	str	r3, [r4, r2]
 8002dec:	f642 32dc 	movw	r2, #11228	; 0x2bdc
 8002df0:	604c      	str	r4, [r1, #4]
 8002df2:	912b      	str	r1, [sp, #172]	; 0xac
 8002df4:	497d      	ldr	r1, [pc, #500]	; (8002fec <_ZN27CustomContainerKeyboardBaseC1Ev+0x688>)
 8002df6:	50a1      	str	r1, [r4, r2]
 8002df8:	f642 32e0 	movw	r2, #11232	; 0x2be0
 8002dfc:	50a5      	str	r5, [r4, r2]
 8002dfe:	f642 32e4 	movw	r2, #11236	; 0x2be4
 8002e02:	18a1      	adds	r1, r4, r2
 8002e04:	50a3      	str	r3, [r4, r2]
 8002e06:	f642 32ec 	movw	r2, #11244	; 0x2bec
 8002e0a:	604c      	str	r4, [r1, #4]
 8002e0c:	912c      	str	r1, [sp, #176]	; 0xb0
 8002e0e:	4978      	ldr	r1, [pc, #480]	; (8002ff0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x68c>)
 8002e10:	50a1      	str	r1, [r4, r2]
 8002e12:	f642 32f0 	movw	r2, #11248	; 0x2bf0
 8002e16:	50a5      	str	r5, [r4, r2]
 8002e18:	f642 32f4 	movw	r2, #11252	; 0x2bf4
 8002e1c:	18a1      	adds	r1, r4, r2
 8002e1e:	912d      	str	r1, [sp, #180]	; 0xb4
 8002e20:	50a3      	str	r3, [r4, r2]
 8002e22:	f642 32fc 	movw	r2, #11260	; 0x2bfc
 8002e26:	604c      	str	r4, [r1, #4]
 8002e28:	4972      	ldr	r1, [pc, #456]	; (8002ff4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x690>)
 8002e2a:	50a1      	str	r1, [r4, r2]
 8002e2c:	f504 5230 	add.w	r2, r4, #11264	; 0x2c00
 8002e30:	6015      	str	r5, [r2, #0]
 8002e32:	f642 4204 	movw	r2, #11268	; 0x2c04
 8002e36:	18a1      	adds	r1, r4, r2
 8002e38:	50a3      	str	r3, [r4, r2]
 8002e3a:	f642 420c 	movw	r2, #11276	; 0x2c0c
 8002e3e:	604c      	str	r4, [r1, #4]
 8002e40:	912e      	str	r1, [sp, #184]	; 0xb8
 8002e42:	496d      	ldr	r1, [pc, #436]	; (8002ff8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x694>)
 8002e44:	50a1      	str	r1, [r4, r2]
 8002e46:	f642 4210 	movw	r2, #11280	; 0x2c10
 8002e4a:	50a5      	str	r5, [r4, r2]
 8002e4c:	f642 4214 	movw	r2, #11284	; 0x2c14
 8002e50:	18a1      	adds	r1, r4, r2
 8002e52:	50a3      	str	r3, [r4, r2]
 8002e54:	f642 421c 	movw	r2, #11292	; 0x2c1c
 8002e58:	604c      	str	r4, [r1, #4]
 8002e5a:	912f      	str	r1, [sp, #188]	; 0xbc
 8002e5c:	4967      	ldr	r1, [pc, #412]	; (8002ffc <_ZN27CustomContainerKeyboardBaseC1Ev+0x698>)
 8002e5e:	50a1      	str	r1, [r4, r2]
 8002e60:	f642 4220 	movw	r2, #11296	; 0x2c20
 8002e64:	50a5      	str	r5, [r4, r2]
 8002e66:	f642 4224 	movw	r2, #11300	; 0x2c24
 8002e6a:	18a1      	adds	r1, r4, r2
 8002e6c:	50a3      	str	r3, [r4, r2]
 8002e6e:	f642 422c 	movw	r2, #11308	; 0x2c2c
 8002e72:	604c      	str	r4, [r1, #4]
 8002e74:	9130      	str	r1, [sp, #192]	; 0xc0
 8002e76:	4962      	ldr	r1, [pc, #392]	; (8003000 <_ZN27CustomContainerKeyboardBaseC1Ev+0x69c>)
 8002e78:	50a1      	str	r1, [r4, r2]
 8002e7a:	f642 4230 	movw	r2, #11312	; 0x2c30
 8002e7e:	50a5      	str	r5, [r4, r2]
 8002e80:	f642 4234 	movw	r2, #11316	; 0x2c34
 8002e84:	18a1      	adds	r1, r4, r2
 8002e86:	50a3      	str	r3, [r4, r2]
 8002e88:	f642 423c 	movw	r2, #11324	; 0x2c3c
 8002e8c:	604c      	str	r4, [r1, #4]
 8002e8e:	9131      	str	r1, [sp, #196]	; 0xc4
 8002e90:	495c      	ldr	r1, [pc, #368]	; (8003004 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a0>)
 8002e92:	50a1      	str	r1, [r4, r2]
 8002e94:	f504 5231 	add.w	r2, r4, #11328	; 0x2c40
 8002e98:	6015      	str	r5, [r2, #0]
 8002e9a:	f642 4244 	movw	r2, #11332	; 0x2c44
 8002e9e:	18a1      	adds	r1, r4, r2
 8002ea0:	50a3      	str	r3, [r4, r2]
 8002ea2:	f642 424c 	movw	r2, #11340	; 0x2c4c
 8002ea6:	604c      	str	r4, [r1, #4]
 8002ea8:	9132      	str	r1, [sp, #200]	; 0xc8
 8002eaa:	4957      	ldr	r1, [pc, #348]	; (8003008 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a4>)
 8002eac:	50a1      	str	r1, [r4, r2]
 8002eae:	f642 4250 	movw	r2, #11344	; 0x2c50
 8002eb2:	50a5      	str	r5, [r4, r2]
 8002eb4:	f642 4254 	movw	r2, #11348	; 0x2c54
 8002eb8:	18a1      	adds	r1, r4, r2
 8002eba:	50a3      	str	r3, [r4, r2]
 8002ebc:	f642 425c 	movw	r2, #11356	; 0x2c5c
 8002ec0:	604c      	str	r4, [r1, #4]
 8002ec2:	9133      	str	r1, [sp, #204]	; 0xcc
 8002ec4:	4951      	ldr	r1, [pc, #324]	; (800300c <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a8>)
 8002ec6:	50a1      	str	r1, [r4, r2]
 8002ec8:	f642 4260 	movw	r2, #11360	; 0x2c60
 8002ecc:	50a5      	str	r5, [r4, r2]
 8002ece:	f642 4264 	movw	r2, #11364	; 0x2c64
 8002ed2:	18a1      	adds	r1, r4, r2
 8002ed4:	50a3      	str	r3, [r4, r2]
 8002ed6:	f642 426c 	movw	r2, #11372	; 0x2c6c
 8002eda:	604c      	str	r4, [r1, #4]
 8002edc:	9134      	str	r1, [sp, #208]	; 0xd0
 8002ede:	494c      	ldr	r1, [pc, #304]	; (8003010 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6ac>)
 8002ee0:	50a1      	str	r1, [r4, r2]
 8002ee2:	f642 4270 	movw	r2, #11376	; 0x2c70
 8002ee6:	50a5      	str	r5, [r4, r2]
 8002ee8:	f642 4274 	movw	r2, #11380	; 0x2c74
 8002eec:	18a1      	adds	r1, r4, r2
 8002eee:	50a3      	str	r3, [r4, r2]
 8002ef0:	f642 427c 	movw	r2, #11388	; 0x2c7c
 8002ef4:	604c      	str	r4, [r1, #4]
 8002ef6:	9135      	str	r1, [sp, #212]	; 0xd4
 8002ef8:	4946      	ldr	r1, [pc, #280]	; (8003014 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b0>)
 8002efa:	50a1      	str	r1, [r4, r2]
 8002efc:	f504 5232 	add.w	r2, r4, #11392	; 0x2c80
 8002f00:	6015      	str	r5, [r2, #0]
 8002f02:	f642 4284 	movw	r2, #11396	; 0x2c84
 8002f06:	18a1      	adds	r1, r4, r2
 8002f08:	50a3      	str	r3, [r4, r2]
 8002f0a:	f642 428c 	movw	r2, #11404	; 0x2c8c
 8002f0e:	604c      	str	r4, [r1, #4]
 8002f10:	9136      	str	r1, [sp, #216]	; 0xd8
 8002f12:	4941      	ldr	r1, [pc, #260]	; (8003018 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b4>)
 8002f14:	50a1      	str	r1, [r4, r2]
 8002f16:	f642 4290 	movw	r2, #11408	; 0x2c90
 8002f1a:	50a5      	str	r5, [r4, r2]
 8002f1c:	f642 4294 	movw	r2, #11412	; 0x2c94
 8002f20:	18a1      	adds	r1, r4, r2
 8002f22:	50a3      	str	r3, [r4, r2]
 8002f24:	f642 429c 	movw	r2, #11420	; 0x2c9c
 8002f28:	604c      	str	r4, [r1, #4]
 8002f2a:	9137      	str	r1, [sp, #220]	; 0xdc
 8002f2c:	493b      	ldr	r1, [pc, #236]	; (800301c <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b8>)
 8002f2e:	50a1      	str	r1, [r4, r2]
 8002f30:	f642 42a0 	movw	r2, #11424	; 0x2ca0
 8002f34:	50a5      	str	r5, [r4, r2]
 8002f36:	f642 42a4 	movw	r2, #11428	; 0x2ca4
 8002f3a:	18a1      	adds	r1, r4, r2
 8002f3c:	50a3      	str	r3, [r4, r2]
 8002f3e:	f642 42ac 	movw	r2, #11436	; 0x2cac
 8002f42:	604c      	str	r4, [r1, #4]
 8002f44:	9138      	str	r1, [sp, #224]	; 0xe0
 8002f46:	4936      	ldr	r1, [pc, #216]	; (8003020 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6bc>)
 8002f48:	50a1      	str	r1, [r4, r2]
 8002f4a:	f642 42b0 	movw	r2, #11440	; 0x2cb0
 8002f4e:	4935      	ldr	r1, [pc, #212]	; (8003024 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c0>)
 8002f50:	50a5      	str	r5, [r4, r2]
 8002f52:	f642 42b4 	movw	r2, #11444	; 0x2cb4
 8002f56:	18a7      	adds	r7, r4, r2
 8002f58:	50a3      	str	r3, [r4, r2]
 8002f5a:	f642 42bc 	movw	r2, #11452	; 0x2cbc
 8002f5e:	607c      	str	r4, [r7, #4]
 8002f60:	50a1      	str	r1, [r4, r2]
 8002f62:	f504 5233 	add.w	r2, r4, #11456	; 0x2cc0
 8002f66:	4930      	ldr	r1, [pc, #192]	; (8003028 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c4>)
 8002f68:	6015      	str	r5, [r2, #0]
 8002f6a:	f642 42c4 	movw	r2, #11460	; 0x2cc4
 8002f6e:	18a6      	adds	r6, r4, r2
 8002f70:	50a3      	str	r3, [r4, r2]
 8002f72:	f642 42cc 	movw	r2, #11468	; 0x2ccc
 8002f76:	6074      	str	r4, [r6, #4]
 8002f78:	50a1      	str	r1, [r4, r2]
 8002f7a:	f642 42d0 	movw	r2, #11472	; 0x2cd0
 8002f7e:	50a5      	str	r5, [r4, r2]
 8002f80:	f642 42d4 	movw	r2, #11476	; 0x2cd4
 8002f84:	18a1      	adds	r1, r4, r2
 8002f86:	50a3      	str	r3, [r4, r2]
 8002f88:	f642 43dc 	movw	r3, #11484	; 0x2cdc
 8002f8c:	4a27      	ldr	r2, [pc, #156]	; (800302c <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c8>)
 8002f8e:	604c      	str	r4, [r1, #4]
 8002f90:	50e2      	str	r2, [r4, r3]
 8002f92:	f642 43e0 	movw	r3, #11488	; 0x2ce0
 8002f96:	9139      	str	r1, [sp, #228]	; 0xe4
 8002f98:	50e5      	str	r5, [r4, r3]
    triggerKeyboardCallback(0)
 8002f9a:	f642 43e4 	movw	r3, #11492	; 0x2ce4
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002f9e:	462a      	mov	r2, r5
    triggerKeyboardCallback(0)
 8002fa0:	50e5      	str	r5, [r4, r3]
        rect.width = width;
 8002fa2:	4b23      	ldr	r3, [pc, #140]	; (8003030 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6cc>)
 8002fa4:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002fa6:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8002faa:	9300      	str	r3, [sp, #0]
 8002fac:	f06f 0104 	mvn.w	r1, #4
 8002fb0:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002fb4:	f7ff fc42 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8002fb8:	4b1e      	ldr	r3, [pc, #120]	; (8003034 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d0>)
 8002fba:	6563      	str	r3, [r4, #84]	; 0x54
        borderColor = color;
 8002fbc:	f103 33c7 	add.w	r3, r3, #3351758791	; 0xc7c7c7c7
 8002fc0:	f103 5360 	add.w	r3, r3, #939524096	; 0x38000000
 8002fc4:	65a3      	str	r3, [r4, #88]	; 0x58
 8002fc6:	e037      	b.n	8003038 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d4>
 8002fc8:	08002529 	.word	0x08002529
 8002fcc:	0800252d 	.word	0x0800252d
 8002fd0:	08002531 	.word	0x08002531
 8002fd4:	08002535 	.word	0x08002535
 8002fd8:	08002539 	.word	0x08002539
 8002fdc:	0800253d 	.word	0x0800253d
 8002fe0:	08002541 	.word	0x08002541
 8002fe4:	08002545 	.word	0x08002545
 8002fe8:	08002549 	.word	0x08002549
 8002fec:	0800254d 	.word	0x0800254d
 8002ff0:	08002551 	.word	0x08002551
 8002ff4:	08002555 	.word	0x08002555
 8002ff8:	08002559 	.word	0x08002559
 8002ffc:	0800255d 	.word	0x0800255d
 8003000:	08002561 	.word	0x08002561
 8003004:	08002565 	.word	0x08002565
 8003008:	08002569 	.word	0x08002569
 800300c:	0800256d 	.word	0x0800256d
 8003010:	08002571 	.word	0x08002571
 8003014:	08002575 	.word	0x08002575
 8003018:	08002579 	.word	0x08002579
 800301c:	0800257d 	.word	0x0800257d
 8003020:	08002581 	.word	0x08002581
 8003024:	08002585 	.word	0x08002585
 8003028:	08002589 	.word	0x08002589
 800302c:	0800258d 	.word	0x0800258d
 8003030:	012c0320 	.word	0x012c0320
 8003034:	ff9a9b9c 	.word	0xff9a9b9c
        borderSize = size;
 8003038:	f04f 0306 	mov.w	r3, #6
    customContainer1.setXY(35, 51);
 800303c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800303e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8003042:	2233      	movs	r2, #51	; 0x33
 8003044:	2123      	movs	r1, #35	; 0x23
 8003046:	f7ff f925 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerButton_keyCallback = &callback;
 800304a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    customContainer2.setXY(96, 51);
 800304c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800304e:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 8003052:	2233      	movs	r2, #51	; 0x33
 8003054:	2160      	movs	r1, #96	; 0x60
 8003056:	f7ff f91d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800305a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    customContainer3.setXY(157, 51);
 800305c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800305e:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
 8003062:	2233      	movs	r2, #51	; 0x33
 8003064:	219d      	movs	r1, #157	; 0x9d
 8003066:	f7ff f915 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800306a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    customContainer4.setXY(218, 51);
 800306c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800306e:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8003072:	2233      	movs	r2, #51	; 0x33
 8003074:	21da      	movs	r1, #218	; 0xda
 8003076:	f7ff f90d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800307a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    customContainer5.setXY(279, 51);
 800307c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800307e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8003082:	2233      	movs	r2, #51	; 0x33
 8003084:	f240 1117 	movw	r1, #279	; 0x117
 8003088:	f7ff f904 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800308c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    customContainer6.setXY(340, 51);
 800308e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003090:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
 8003094:	2233      	movs	r2, #51	; 0x33
 8003096:	f44f 71aa 	mov.w	r1, #340	; 0x154
 800309a:	f7ff f8fb 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800309e:	9b20      	ldr	r3, [sp, #128]	; 0x80
    customContainer7.setXY(401, 51);
 80030a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80030a2:	f8c4 36d4 	str.w	r3, [r4, #1748]	; 0x6d4
 80030a6:	2233      	movs	r2, #51	; 0x33
 80030a8:	f240 1191 	movw	r1, #401	; 0x191
 80030ac:	f7ff f8f2 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
    customContainer8.setXY(462, 51);
 80030b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80030b4:	f8c4 37e8 	str.w	r3, [r4, #2024]	; 0x7e8
 80030b8:	2233      	movs	r2, #51	; 0x33
 80030ba:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 80030be:	f7ff f8e9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    customContainer9.setXY(523, 51);
 80030c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80030c6:	f8c4 38fc 	str.w	r3, [r4, #2300]	; 0x8fc
 80030ca:	2233      	movs	r2, #51	; 0x33
 80030cc:	f240 210b 	movw	r1, #523	; 0x20b
 80030d0:	f7ff f8e0 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    customContainer10.setXY(584, 51);
 80030d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80030d8:	f8c4 3a10 	str.w	r3, [r4, #2576]	; 0xa10
 80030dc:	2233      	movs	r2, #51	; 0x33
 80030de:	f44f 7112 	mov.w	r1, #584	; 0x248
 80030e2:	f7ff f8d7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
    customContainer1_1.setXY(35, 112);
 80030e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80030ea:	f8c4 3b24 	str.w	r3, [r4, #2852]	; 0xb24
 80030ee:	2270      	movs	r2, #112	; 0x70
 80030f0:	2123      	movs	r1, #35	; 0x23
 80030f2:	f7ff f8cf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    customContainer2_1.setXY(96, 112);
 80030f8:	9816      	ldr	r0, [sp, #88]	; 0x58
 80030fa:	f8c4 3c38 	str.w	r3, [r4, #3128]	; 0xc38
 80030fe:	2270      	movs	r2, #112	; 0x70
 8003100:	2160      	movs	r1, #96	; 0x60
 8003102:	f7ff f8c7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003106:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    customContainer3_1.setXY(157, 112);
 8003108:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800310a:	f8c4 3d4c 	str.w	r3, [r4, #3404]	; 0xd4c
 800310e:	2270      	movs	r2, #112	; 0x70
 8003110:	219d      	movs	r1, #157	; 0x9d
 8003112:	f7ff f8bf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003116:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    customContainer4_1.setXY(218, 112);
 8003118:	9818      	ldr	r0, [sp, #96]	; 0x60
 800311a:	f8c4 3e60 	str.w	r3, [r4, #3680]	; 0xe60
 800311e:	2270      	movs	r2, #112	; 0x70
 8003120:	21da      	movs	r1, #218	; 0xda
 8003122:	f7ff f8b7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003126:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    customContainer5_1.setXY(279, 112);
 8003128:	9819      	ldr	r0, [sp, #100]	; 0x64
 800312a:	f8c4 3f74 	str.w	r3, [r4, #3956]	; 0xf74
 800312e:	2270      	movs	r2, #112	; 0x70
 8003130:	f240 1117 	movw	r1, #279	; 0x117
 8003134:	f7ff f8ae 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003138:	f241 0388 	movw	r3, #4232	; 0x1088
 800313c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 800313e:	50e2      	str	r2, [r4, r3]
    customContainer6_1.setXY(340, 112);
 8003140:	ee1b 0a10 	vmov	r0, s22
 8003144:	2270      	movs	r2, #112	; 0x70
 8003146:	f44f 71aa 	mov.w	r1, #340	; 0x154
 800314a:	f7ff f8a3 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800314e:	f241 139c 	movw	r3, #4508	; 0x119c
 8003152:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8003154:	50e2      	str	r2, [r4, r3]
    customContainer7_1.setXY(401, 112);
 8003156:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003158:	2270      	movs	r2, #112	; 0x70
 800315a:	f240 1191 	movw	r1, #401	; 0x191
 800315e:	f7ff f899 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003162:	f241 23b0 	movw	r3, #4784	; 0x12b0
 8003166:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8003168:	50e2      	str	r2, [r4, r3]
    customContainer8_1.setXY(462, 112);
 800316a:	ee1b 0a90 	vmov	r0, s23
 800316e:	2270      	movs	r2, #112	; 0x70
 8003170:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8003174:	f7ff f88e 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003178:	f241 33c4 	movw	r3, #5060	; 0x13c4
 800317c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 800317e:	50e2      	str	r2, [r4, r3]
    customContainer9_1.setXY(523, 112);
 8003180:	ee1c 0a10 	vmov	r0, s24
 8003184:	2270      	movs	r2, #112	; 0x70
 8003186:	f240 210b 	movw	r1, #523	; 0x20b
 800318a:	f7ff f883 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800318e:	f241 43d8 	movw	r3, #5336	; 0x14d8
 8003192:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8003194:	50e2      	str	r2, [r4, r3]
    customContainer10_1.setXY(584, 112);
 8003196:	ee1c 0a90 	vmov	r0, s25
 800319a:	2270      	movs	r2, #112	; 0x70
 800319c:	f44f 7112 	mov.w	r1, #584	; 0x248
 80031a0:	f7ff f878 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031a4:	f241 53ec 	movw	r3, #5612	; 0x15ec
 80031a8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80031aa:	50e2      	str	r2, [r4, r3]
    customContainer1_2.setXY(96, 173);
 80031ac:	ee1d 0a10 	vmov	r0, s26
 80031b0:	22ad      	movs	r2, #173	; 0xad
 80031b2:	2160      	movs	r1, #96	; 0x60
 80031b4:	f7ff f86e 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031b8:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 80031bc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80031be:	601a      	str	r2, [r3, #0]
    customContainer2_2.setXY(157, 173);
 80031c0:	ee1d 0a90 	vmov	r0, s27
 80031c4:	22ad      	movs	r2, #173	; 0xad
 80031c6:	219d      	movs	r1, #157	; 0x9d
 80031c8:	f7ff f864 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031cc:	f641 0314 	movw	r3, #6164	; 0x1814
 80031d0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80031d2:	50e2      	str	r2, [r4, r3]
    customContainer3_2.setXY(218, 173);
 80031d4:	ee1e 0a10 	vmov	r0, s28
 80031d8:	22ad      	movs	r2, #173	; 0xad
 80031da:	21da      	movs	r1, #218	; 0xda
 80031dc:	f7ff f85a 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031e0:	f641 1328 	movw	r3, #6440	; 0x1928
 80031e4:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80031e6:	50e2      	str	r2, [r4, r3]
    customContainer4_2.setXY(279, 173);
 80031e8:	ee1e 0a90 	vmov	r0, s29
 80031ec:	22ad      	movs	r2, #173	; 0xad
 80031ee:	f240 1117 	movw	r1, #279	; 0x117
 80031f2:	f7ff f84f 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031f6:	f641 233c 	movw	r3, #6716	; 0x1a3c
 80031fa:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80031fc:	50e2      	str	r2, [r4, r3]
    customContainer5_2.setXY(340, 173);
 80031fe:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003200:	22ad      	movs	r2, #173	; 0xad
 8003202:	f44f 71aa 	mov.w	r1, #340	; 0x154
 8003206:	f7ff f845 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800320a:	f641 3350 	movw	r3, #6992	; 0x1b50
 800320e:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8003210:	50e2      	str	r2, [r4, r3]
    customContainer6_2.setXY(401, 173);
 8003212:	ee1f 0a10 	vmov	r0, s30
 8003216:	22ad      	movs	r2, #173	; 0xad
 8003218:	f240 1191 	movw	r1, #401	; 0x191
 800321c:	f7ff f83a 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003220:	f641 4364 	movw	r3, #7268	; 0x1c64
 8003224:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8003226:	50e2      	str	r2, [r4, r3]
    customContainer7_2.setXY(462, 173);
 8003228:	ee1f 0a90 	vmov	r0, s31
 800322c:	22ad      	movs	r2, #173	; 0xad
 800322e:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8003232:	f7ff f82f 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003236:	f641 5378 	movw	r3, #7544	; 0x1d78
 800323a:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 800323c:	50e2      	str	r2, [r4, r3]
    customContainer8_2.setXY(523, 173);
 800323e:	9804      	ldr	r0, [sp, #16]
 8003240:	22ad      	movs	r2, #173	; 0xad
 8003242:	f240 210b 	movw	r1, #523	; 0x20b
 8003246:	f7ff f825 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800324a:	f641 638c 	movw	r3, #7820	; 0x1e8c
 800324e:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8003250:	50e2      	str	r2, [r4, r3]
    customContainer9_2.setXY(584, 173);
 8003252:	9805      	ldr	r0, [sp, #20]
 8003254:	22ad      	movs	r2, #173	; 0xad
 8003256:	f44f 7112 	mov.w	r1, #584	; 0x248
 800325a:	f7ff f81b 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800325e:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
    customContainer10_2.setXY(645, 173);
 8003262:	9806      	ldr	r0, [sp, #24]
 8003264:	601f      	str	r7, [r3, #0]
 8003266:	22ad      	movs	r2, #173	; 0xad
 8003268:	f240 2185 	movw	r1, #645	; 0x285
 800326c:	f7ff f812 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003270:	f242 03b4 	movw	r3, #8372	; 0x20b4
    textArea1.setPosition(35, 21, 720, 30);
 8003274:	2215      	movs	r2, #21
 8003276:	50e6      	str	r6, [r4, r3]
 8003278:	231e      	movs	r3, #30
 800327a:	9300      	str	r3, [sp, #0]
 800327c:	ee1a 0a10 	vmov	r0, s20
 8003280:	f44f 7334 	mov.w	r3, #720	; 0x2d0
 8003284:	2123      	movs	r1, #35	; 0x23
 8003286:	f7ff fad9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800328a:	f242 03e8 	movw	r3, #8424	; 0x20e8
 800328e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003292:	50e2      	str	r2, [r4, r3]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003294:	ee1a 3a10 	vmov	r3, s20
 8003298:	869d      	strh	r5, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800329a:	4b0a      	ldr	r3, [pc, #40]	; (80032c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x960>)
 800329c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID2).getText());
 800329e:	f504 5628 	add.w	r6, r4, #10752	; 0x2a00
 80032a2:	3624      	adds	r6, #36	; 0x24
 80032a4:	b92b      	cbnz	r3, 80032b2 <_ZN27CustomContainerKeyboardBaseC1Ev+0x94e>
 80032a6:	4b08      	ldr	r3, [pc, #32]	; (80032c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x964>)
 80032a8:	4a08      	ldr	r2, [pc, #32]	; (80032cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 80032aa:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80032ac:	4808      	ldr	r0, [pc, #32]	; (80032d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x96c>)
 80032ae:	f01f fe2b 	bl	8022f08 <__assert_func>
 80032b2:	4b08      	ldr	r3, [pc, #32]	; (80032d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x970>)
 80032b4:	881b      	ldrh	r3, [r3, #0]
 80032b6:	2b02      	cmp	r3, #2
 80032b8:	d810      	bhi.n	80032dc <_ZN27CustomContainerKeyboardBaseC1Ev+0x978>
 80032ba:	4b07      	ldr	r3, [pc, #28]	; (80032d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x974>)
 80032bc:	4a03      	ldr	r2, [pc, #12]	; (80032cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 80032be:	21af      	movs	r1, #175	; 0xaf
 80032c0:	e7f4      	b.n	80032ac <_ZN27CustomContainerKeyboardBaseC1Ev+0x948>
 80032c2:	bf00      	nop
 80032c4:	200200dc 	.word	0x200200dc
 80032c8:	08025a74 	.word	0x08025a74
 80032cc:	08025ab6 	.word	0x08025ab6
 80032d0:	08025ae4 	.word	0x08025ae4
 80032d4:	200200e0 	.word	0x200200e0
 80032d8:	08025b2b 	.word	0x08025b2b
        return texts->getText(typedTextId);
 80032dc:	4bce      	ldr	r3, [pc, #824]	; (8003618 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 80032de:	2102      	movs	r1, #2
 80032e0:	6818      	ldr	r0, [r3, #0]
 80032e2:	f003 fb27 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80032e6:	4acd      	ldr	r2, [pc, #820]	; (800361c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 80032e8:	4603      	mov	r3, r0
 80032ea:	2128      	movs	r1, #40	; 0x28
 80032ec:	4630      	mov	r0, r6
 80032ee:	f013 fca1 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 80032f2:	f242 03f4 	movw	r3, #8436	; 0x20f4
        borderBox.setPosition(x, y, width, height);
 80032f6:	ee18 7a10 	vmov	r7, s16
 80032fa:	50e6      	str	r6, [r4, r3]
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID3));
 80032fc:	ee1a 0a10 	vmov	r0, s20
        : typedTextId(id)
 8003300:	4ec7      	ldr	r6, [pc, #796]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003302:	963a      	str	r6, [sp, #232]	; 0xe8
 8003304:	2303      	movs	r3, #3
 8003306:	a93a      	add	r1, sp, #232	; 0xe8
 8003308:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800330c:	f00d fcf9 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003310:	2279      	movs	r2, #121	; 0x79
 8003312:	f107 0034 	add.w	r0, r7, #52	; 0x34
 8003316:	9200      	str	r2, [sp, #0]
 8003318:	233c      	movs	r3, #60	; 0x3c
 800331a:	462a      	mov	r2, r5
 800331c:	4629      	mov	r1, r5
 800331e:	f7ff fa8d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003322:	f242 135c 	movw	r3, #8540	; 0x215c
 8003326:	f04f 0201 	mov.w	r2, #1
 800332a:	52e2      	strh	r2, [r4, r3]
    flexButton_enter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800332c:	4bbd      	ldr	r3, [pc, #756]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 800332e:	9300      	str	r3, [sp, #0]
 8003330:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003334:	4abc      	ldr	r2, [pc, #752]	; (8003628 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc4>)
 8003336:	49bd      	ldr	r1, [pc, #756]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003338:	ee18 0a10 	vmov	r0, s16
 800333c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003340:	f7ff faa4 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003344:	2309      	movs	r3, #9
    flexButton_enter.setText(TypedText(T___SINGLEUSE_CLAL));
 8003346:	ee18 0a10 	vmov	r0, s16
 800334a:	a93a      	add	r1, sp, #232	; 0xe8
 800334c:	963a      	str	r6, [sp, #232]	; 0xe8
 800334e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003352:	f7ff faa7 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003356:	2179      	movs	r1, #121	; 0x79
 8003358:	2234      	movs	r2, #52	; 0x34
 800335a:	f107 0078 	add.w	r0, r7, #120	; 0x78
 800335e:	9100      	str	r1, [sp, #0]
 8003360:	233c      	movs	r3, #60	; 0x3c
 8003362:	4629      	mov	r1, r5
 8003364:	f7ff fa6a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003368:	f242 13ac 	movw	r3, #8620	; 0x21ac
 800336c:	4fb0      	ldr	r7, [pc, #704]	; (8003630 <_ZN27CustomContainerKeyboardBaseC1Ev+0xccc>)
 800336e:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003370:	f242 13b0 	movw	r3, #8624	; 0x21b0
        handlePressedUpdated();
 8003374:	ee18 0a10 	vmov	r0, s16
        colorPressed = newColorPressed;
 8003378:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800337a:	f7ff f90a 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_enter.setPosition(706, 173, 60, 121);
 800337e:	2179      	movs	r1, #121	; 0x79
 8003380:	ee18 0a10 	vmov	r0, s16
 8003384:	9100      	str	r1, [sp, #0]
 8003386:	233c      	movs	r3, #60	; 0x3c
 8003388:	22ad      	movs	r2, #173	; 0xad
 800338a:	f240 21c2 	movw	r1, #706	; 0x2c2
 800338e:	f7ff fa55 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 8003392:	f242 1328 	movw	r3, #8488	; 0x2128
 8003396:	ee18 0a90 	vmov	r0, s17
 800339a:	263c      	movs	r6, #60	; 0x3c
 800339c:	9903      	ldr	r1, [sp, #12]
 800339e:	50e1      	str	r1, [r4, r3]
 80033a0:	462a      	mov	r2, r5
 80033a2:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 80033a6:	4629      	mov	r1, r5
 80033a8:	3034      	adds	r0, #52	; 0x34
 80033aa:	9600      	str	r6, [sp, #0]
 80033ac:	f7ff fa46 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_space.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033b0:	4a9c      	ldr	r2, [pc, #624]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80033b2:	9200      	str	r2, [sp, #0]
 80033b4:	f242 2318 	movw	r3, #8728	; 0x2218
 80033b8:	f04f 0101 	mov.w	r1, #1
 80033bc:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80033c0:	52e1      	strh	r1, [r4, r3]
 80033c2:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80033c6:	4b9b      	ldr	r3, [pc, #620]	; (8003634 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 80033c8:	4998      	ldr	r1, [pc, #608]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 80033ca:	ee18 0a90 	vmov	r0, s17
 80033ce:	f7ff fa5d 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_space.setWildcardText(TypedText(T_RESOURCEID15));
 80033d2:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 80033d6:	4b92      	ldr	r3, [pc, #584]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 80033d8:	933a      	str	r3, [sp, #232]	; 0xe8
 80033da:	4661      	mov	r1, ip
 80033dc:	230c      	movs	r3, #12
 80033de:	ee18 0a90 	vmov	r0, s17
 80033e2:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80033e6:	f7ff fa6c 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    flexButton_spaceBuffer[0] = 0;
 80033ea:	f642 2374 	movw	r3, #10868	; 0x2a74
 80033ee:	18e2      	adds	r2, r4, r3
 80033f0:	52e5      	strh	r5, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 80033f2:	ee18 0a90 	vmov	r0, s17
 80033f6:	f242 2368 	movw	r3, #8808	; 0x2268
 80033fa:	4629      	mov	r1, r5
 80033fc:	50e2      	str	r2, [r4, r3]
 80033fe:	3078      	adds	r0, #120	; 0x78
 8003400:	462a      	mov	r2, r5
 8003402:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 8003406:	9600      	str	r6, [sp, #0]
 8003408:	f7ff fa18 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800340c:	f242 236c 	movw	r3, #8812	; 0x226c
        handlePressedUpdated();
 8003410:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 8003414:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003416:	f242 2370 	movw	r3, #8816	; 0x2270
 800341a:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800341c:	f7fe fe85 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_space.setPosition(218, 234, 426, 60);
 8003420:	ee18 0a90 	vmov	r0, s17
 8003424:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 8003428:	22ea      	movs	r2, #234	; 0xea
 800342a:	21da      	movs	r1, #218	; 0xda
 800342c:	9600      	str	r6, [sp, #0]
 800342e:	f7ff fa05 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003432:	f242 13e4 	movw	r3, #8676	; 0x21e4
 8003436:	ee19 0a10 	vmov	r0, s18
 800343a:	9903      	ldr	r1, [sp, #12]
 800343c:	50e1      	str	r1, [r4, r3]
 800343e:	462a      	mov	r2, r5
 8003440:	4633      	mov	r3, r6
 8003442:	4629      	mov	r1, r5
 8003444:	3034      	adds	r0, #52	; 0x34
 8003446:	9600      	str	r6, [sp, #0]
 8003448:	f7ff f9f8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_language.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800344c:	4a75      	ldr	r2, [pc, #468]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 800344e:	9200      	str	r2, [sp, #0]
 8003450:	f242 23d8 	movw	r3, #8920	; 0x22d8
 8003454:	f04f 0101 	mov.w	r1, #1
 8003458:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800345c:	52e1      	strh	r1, [r4, r3]
 800345e:	ee19 0a10 	vmov	r0, s18
 8003462:	4b74      	ldr	r3, [pc, #464]	; (8003634 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 8003464:	4971      	ldr	r1, [pc, #452]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003466:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800346a:	f7ff fa0f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_language.setWildcardText(TypedText(T_RESOURCEID13));
 800346e:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003472:	4b6b      	ldr	r3, [pc, #428]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003474:	933a      	str	r3, [sp, #232]	; 0xe8
 8003476:	4671      	mov	r1, lr
 8003478:	2304      	movs	r3, #4
 800347a:	ee19 0a10 	vmov	r0, s18
 800347e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003482:	f7ff fa1e 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003486:	496c      	ldr	r1, [pc, #432]	; (8003638 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_languageBuffer, FLEXBUTTON_LANGUAGE_SIZE, "%s", TypedText(T_RESOURCEID4).getText());
 8003488:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 800348c:	680b      	ldr	r3, [r1, #0]
 800348e:	f10e 0e08 	add.w	lr, lr, #8
 8003492:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8003496:	2b00      	cmp	r3, #0
 8003498:	f43f af05 	beq.w	80032a6 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800349c:	4867      	ldr	r0, [pc, #412]	; (800363c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 800349e:	8803      	ldrh	r3, [r0, #0]
 80034a0:	2b05      	cmp	r3, #5
 80034a2:	f67f af0a 	bls.w	80032ba <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 80034a6:	485c      	ldr	r0, [pc, #368]	; (8003618 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 80034a8:	2105      	movs	r1, #5
 80034aa:	6800      	ldr	r0, [r0, #0]
 80034ac:	f003 fa42 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80034b0:	4a5a      	ldr	r2, [pc, #360]	; (800361c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 80034b2:	4603      	mov	r3, r0
 80034b4:	210a      	movs	r1, #10
 80034b6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80034b8:	f013 fbbc 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80034bc:	f242 3328 	movw	r3, #9000	; 0x2328
        wildcardText.setPosition(x, y, width, height);
 80034c0:	ee19 0a10 	vmov	r0, s18
 80034c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80034c6:	50e1      	str	r1, [r4, r3]
 80034c8:	2214      	movs	r2, #20
 80034ca:	4629      	mov	r1, r5
 80034cc:	4633      	mov	r3, r6
 80034ce:	3078      	adds	r0, #120	; 0x78
 80034d0:	9600      	str	r6, [sp, #0]
 80034d2:	f7ff f9b3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80034d6:	f242 332c 	movw	r3, #9004	; 0x232c
        handlePressedUpdated();
 80034da:	ee19 0a10 	vmov	r0, s18
        colorReleased = newColorReleased;
 80034de:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80034e0:	f242 3330 	movw	r3, #9008	; 0x2330
 80034e4:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80034e6:	f7fe fe20 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_language.setPosition(157, 234, 60, 60);
 80034ea:	ee19 0a10 	vmov	r0, s18
 80034ee:	4633      	mov	r3, r6
 80034f0:	22ea      	movs	r2, #234	; 0xea
 80034f2:	219d      	movs	r1, #157	; 0x9d
 80034f4:	9600      	str	r6, [sp, #0]
 80034f6:	f7ff f9a1 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80034fa:	f242 23a4 	movw	r3, #8868	; 0x22a4
 80034fe:	9903      	ldr	r1, [sp, #12]
 8003500:	50e1      	str	r1, [r4, r3]
    customContainer11_1.setXY(645, 112);
 8003502:	9807      	ldr	r0, [sp, #28]
 8003504:	2270      	movs	r2, #112	; 0x70
 8003506:	f240 2185 	movw	r1, #645	; 0x285
 800350a:	f7fe fec3 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800350e:	f242 4344 	movw	r3, #9284	; 0x2444
 8003512:	9939      	ldr	r1, [sp, #228]	; 0xe4
 8003514:	50e1      	str	r1, [r4, r3]
    customContainer11.setXY(645, 51);
 8003516:	9808      	ldr	r0, [sp, #32]
 8003518:	2233      	movs	r2, #51	; 0x33
 800351a:	f240 2185 	movw	r1, #645	; 0x285
 800351e:	f7fe feb9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003522:	f242 5358 	movw	r3, #9560	; 0x2558
 8003526:	9925      	ldr	r1, [sp, #148]	; 0x94
 8003528:	50e1      	str	r1, [r4, r3]
    customContainer12.setXY(706, 51);
 800352a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800352c:	2233      	movs	r2, #51	; 0x33
 800352e:	f240 21c2 	movw	r1, #706	; 0x2c2
 8003532:	f7fe feaf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003536:	f242 636c 	movw	r3, #9836	; 0x266c
 800353a:	ee19 0a90 	vmov	r0, s19
 800353e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8003540:	50e1      	str	r1, [r4, r3]
 8003542:	462a      	mov	r2, r5
 8003544:	4633      	mov	r3, r6
 8003546:	4629      	mov	r1, r5
 8003548:	3034      	adds	r0, #52	; 0x34
 800354a:	9600      	str	r6, [sp, #0]
 800354c:	f7ff f976 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_close.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003550:	4a34      	ldr	r2, [pc, #208]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 8003552:	9200      	str	r2, [sp, #0]
 8003554:	f242 63d4 	movw	r3, #9940	; 0x26d4
 8003558:	f04f 0c01 	mov.w	ip, #1
 800355c:	f824 c003 	strh.w	ip, [r4, r3]
 8003560:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003564:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003568:	4930      	ldr	r1, [pc, #192]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 800356a:	ee19 0a90 	vmov	r0, s19
 800356e:	f603 4392 	addw	r3, r3, #3218	; 0xc92
 8003572:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003576:	f7ff f989 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800357a:	f04f 0e06 	mov.w	lr, #6
 800357e:	f8ad e0ec 	strh.w	lr, [sp, #236]	; 0xec
    flexButton_close.setWildcardText(TypedText(T_RESOURCEID14));
 8003582:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003586:	4b26      	ldr	r3, [pc, #152]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003588:	933a      	str	r3, [sp, #232]	; 0xe8
 800358a:	4671      	mov	r1, lr
 800358c:	ee19 0a90 	vmov	r0, s19
 8003590:	f7ff f997 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003594:	4928      	ldr	r1, [pc, #160]	; (8003638 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_closeBuffer, FLEXBUTTON_CLOSE_SIZE, "%s", TypedText(T_RESOURCEID5).getText());
 8003596:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 800359a:	680b      	ldr	r3, [r1, #0]
 800359c:	f10e 0e1c 	add.w	lr, lr, #28
 80035a0:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	f43f ae7e 	beq.w	80032a6 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80035aa:	4824      	ldr	r0, [pc, #144]	; (800363c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 80035ac:	8803      	ldrh	r3, [r0, #0]
 80035ae:	2b07      	cmp	r3, #7
 80035b0:	f67f ae83 	bls.w	80032ba <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 80035b4:	4818      	ldr	r0, [pc, #96]	; (8003618 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 80035b6:	2107      	movs	r1, #7
 80035b8:	6800      	ldr	r0, [r0, #0]
 80035ba:	f003 f9bb 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80035be:	4a17      	ldr	r2, [pc, #92]	; (800361c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 80035c0:	4603      	mov	r3, r0
 80035c2:	210a      	movs	r1, #10
 80035c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80035c6:	f013 fb35 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80035ca:	f242 7324 	movw	r3, #10020	; 0x2724
        wildcardText.setPosition(x, y, width, height);
 80035ce:	ee19 0a90 	vmov	r0, s19
 80035d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80035d4:	50e1      	str	r1, [r4, r3]
 80035d6:	2214      	movs	r2, #20
 80035d8:	4629      	mov	r1, r5
 80035da:	4633      	mov	r3, r6
 80035dc:	3078      	adds	r0, #120	; 0x78
 80035de:	9600      	str	r6, [sp, #0]
 80035e0:	f7ff f92c 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80035e4:	f242 7328 	movw	r3, #10024	; 0x2728
        handlePressedUpdated();
 80035e8:	ee19 0a90 	vmov	r0, s19
        colorReleased = newColorReleased;
 80035ec:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80035ee:	f242 732c 	movw	r3, #10028	; 0x272c
 80035f2:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80035f4:	f7fe fd99 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_close.setPosition(96, 234, 60, 60);
 80035f8:	ee19 0a90 	vmov	r0, s19
 80035fc:	4633      	mov	r3, r6
 80035fe:	22ea      	movs	r2, #234	; 0xea
 8003600:	2160      	movs	r1, #96	; 0x60
 8003602:	9600      	str	r6, [sp, #0]
 8003604:	f7ff f91a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003608:	f242 63a0 	movw	r3, #9888	; 0x26a0
 800360c:	f04f 0e79 	mov.w	lr, #121	; 0x79
 8003610:	9903      	ldr	r1, [sp, #12]
 8003612:	50e1      	str	r1, [r4, r3]
 8003614:	e014      	b.n	8003640 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcdc>
 8003616:	bf00      	nop
 8003618:	200200e8 	.word	0x200200e8
 800361c:	08025b7d 	.word	0x08025b7d
 8003620:	08025b88 	.word	0x08025b88
 8003624:	ff336699 	.word	0xff336699
 8003628:	ff0099cc 	.word	0xff0099cc
 800362c:	ff006699 	.word	0xff006699
 8003630:	ff0a0a0a 	.word	0xff0a0a0a
 8003634:	ff003366 	.word	0xff003366
 8003638:	200200dc 	.word	0x200200dc
 800363c:	200200e0 	.word	0x200200e0
 8003640:	f8cd e000 	str.w	lr, [sp]
 8003644:	462a      	mov	r2, r5
 8003646:	4629      	mov	r1, r5
 8003648:	4633      	mov	r3, r6
 800364a:	f10a 0034 	add.w	r0, sl, #52	; 0x34
 800364e:	f7ff f8f5 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_shift.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003652:	4ad9      	ldr	r2, [pc, #868]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003654:	9200      	str	r2, [sp, #0]
 8003656:	f242 7394 	movw	r3, #10132	; 0x2794
 800365a:	f04f 0c01 	mov.w	ip, #1
 800365e:	f824 c003 	strh.w	ip, [r4, r3]
 8003662:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003666:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 800366a:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800366e:	49d3      	ldr	r1, [pc, #844]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003670:	f603 33d2 	addw	r3, r3, #3026	; 0xbd2
 8003674:	4650      	mov	r0, sl
 8003676:	f7ff f909 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_shift.setText(TypedText(T___SINGLEUSE_DBNX));
 800367a:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
        : typedTextId(id)
 800367e:	4bd0      	ldr	r3, [pc, #832]	; (80039c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 8003680:	933a      	str	r3, [sp, #232]	; 0xe8
 8003682:	4671      	mov	r1, lr
 8003684:	2308      	movs	r3, #8
 8003686:	4650      	mov	r0, sl
 8003688:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800368c:	f7ff f90a 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003690:	4629      	mov	r1, r5
 8003692:	2214      	movs	r2, #20
 8003694:	4633      	mov	r3, r6
 8003696:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800369a:	9600      	str	r6, [sp, #0]
 800369c:	f7ff f8ce 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80036a0:	f242 73e4 	movw	r3, #10212	; 0x27e4
        handlePressedUpdated();
 80036a4:	4650      	mov	r0, sl
        colorReleased = newColorReleased;
 80036a6:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80036a8:	f242 73e8 	movw	r3, #10216	; 0x27e8
 80036ac:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80036ae:	f7fe ff70 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_shift.setPosition(35, 173, 60, 60);
 80036b2:	4633      	mov	r3, r6
 80036b4:	22ad      	movs	r2, #173	; 0xad
 80036b6:	2123      	movs	r1, #35	; 0x23
 80036b8:	4650      	mov	r0, sl
 80036ba:	9600      	str	r6, [sp, #0]
 80036bc:	f7ff f8be 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80036c0:	f242 7360 	movw	r3, #10080	; 0x2760
 80036c4:	9903      	ldr	r1, [sp, #12]
 80036c6:	50e1      	str	r1, [r4, r3]
 80036c8:	462a      	mov	r2, r5
 80036ca:	4629      	mov	r1, r5
 80036cc:	4633      	mov	r3, r6
 80036ce:	f109 0034 	add.w	r0, r9, #52	; 0x34
 80036d2:	9600      	str	r6, [sp, #0]
 80036d4:	f7ff f8b2 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_all.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80036d8:	4ab7      	ldr	r2, [pc, #732]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80036da:	9200      	str	r2, [sp, #0]
 80036dc:	f642 0350 	movw	r3, #10320	; 0x2850
 80036e0:	f04f 0c01 	mov.w	ip, #1
 80036e4:	f824 c003 	strh.w	ip, [r4, r3]
 80036e8:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80036ec:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80036f0:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80036f4:	49b1      	ldr	r1, [pc, #708]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 80036f6:	4db2      	ldr	r5, [pc, #712]	; (80039c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 80036f8:	f603 3316 	addw	r3, r3, #2838	; 0xb16
 80036fc:	4648      	mov	r0, r9
 80036fe:	f7ff f8c5 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_all.setText(TypedText(T___SINGLEUSE_HLSL));
 8003702:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003706:	4671      	mov	r1, lr
 8003708:	230a      	movs	r3, #10
 800370a:	4648      	mov	r0, r9
 800370c:	953a      	str	r5, [sp, #232]	; 0xe8
 800370e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003712:	f7ff f8c7 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003716:	2214      	movs	r2, #20
 8003718:	2100      	movs	r1, #0
 800371a:	4633      	mov	r3, r6
 800371c:	f109 0078 	add.w	r0, r9, #120	; 0x78
 8003720:	9600      	str	r6, [sp, #0]
 8003722:	f7ff f88b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003726:	f642 03a0 	movw	r3, #10400	; 0x28a0
        handlePressedUpdated();
 800372a:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 800372c:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800372e:	f642 03a4 	movw	r3, #10404	; 0x28a4
 8003732:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003734:	f7fe ff2d 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_all.setPosition(645, 234, 60, 60);
 8003738:	4633      	mov	r3, r6
 800373a:	22ea      	movs	r2, #234	; 0xea
 800373c:	f240 2185 	movw	r1, #645	; 0x285
 8003740:	4648      	mov	r0, r9
 8003742:	9600      	str	r6, [sp, #0]
 8003744:	f7ff f87a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003748:	f642 031c 	movw	r3, #10268	; 0x281c
 800374c:	9903      	ldr	r1, [sp, #12]
 800374e:	50e1      	str	r1, [r4, r3]
 8003750:	2200      	movs	r2, #0
 8003752:	4611      	mov	r1, r2
 8003754:	4633      	mov	r3, r6
 8003756:	f108 0034 	add.w	r0, r8, #52	; 0x34
 800375a:	9600      	str	r6, [sp, #0]
 800375c:	f7ff f86e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_pre.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003760:	4a95      	ldr	r2, [pc, #596]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003762:	9200      	str	r2, [sp, #0]
 8003764:	f642 130c 	movw	r3, #10508	; 0x290c
 8003768:	f04f 0c01 	mov.w	ip, #1
 800376c:	f824 c003 	strh.w	ip, [r4, r3]
 8003770:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003774:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003778:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800377c:	498f      	ldr	r1, [pc, #572]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 800377e:	f603 235a 	addw	r3, r3, #2650	; 0xa5a
 8003782:	4640      	mov	r0, r8
 8003784:	f7ff f882 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_K2XR));
 8003788:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 800378c:	4671      	mov	r1, lr
 800378e:	230b      	movs	r3, #11
 8003790:	4640      	mov	r0, r8
 8003792:	953a      	str	r5, [sp, #232]	; 0xe8
 8003794:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003798:	f7ff f884 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800379c:	2214      	movs	r2, #20
 800379e:	2100      	movs	r1, #0
 80037a0:	4633      	mov	r3, r6
 80037a2:	f108 0078 	add.w	r0, r8, #120	; 0x78
 80037a6:	9600      	str	r6, [sp, #0]
 80037a8:	f7ff f848 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80037ac:	f642 135c 	movw	r3, #10588	; 0x295c
        handlePressedUpdated();
 80037b0:	4640      	mov	r0, r8
        colorReleased = newColorReleased;
 80037b2:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80037b4:	f642 1360 	movw	r3, #10592	; 0x2960
 80037b8:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80037ba:	f7fe feea 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(706, 112, 60, 60);
 80037be:	4633      	mov	r3, r6
 80037c0:	2270      	movs	r2, #112	; 0x70
 80037c2:	f240 21c2 	movw	r1, #706	; 0x2c2
 80037c6:	4640      	mov	r0, r8
 80037c8:	9600      	str	r6, [sp, #0]
 80037ca:	f7ff f837 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ce:	f642 03d8 	movw	r3, #10456	; 0x28d8
 80037d2:	9903      	ldr	r1, [sp, #12]
 80037d4:	50e1      	str	r1, [r4, r3]
 80037d6:	2200      	movs	r2, #0
 80037d8:	4611      	mov	r1, r2
 80037da:	4633      	mov	r3, r6
 80037dc:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 80037e0:	9600      	str	r6, [sp, #0]
 80037e2:	f7ff f82b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_ABC_123.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80037e6:	4a74      	ldr	r2, [pc, #464]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80037e8:	9200      	str	r2, [sp, #0]
 80037ea:	f642 13c8 	movw	r3, #10696	; 0x29c8
 80037ee:	f04f 0c01 	mov.w	ip, #1
 80037f2:	f824 c003 	strh.w	ip, [r4, r3]
 80037f6:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80037fa:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80037fe:	496f      	ldr	r1, [pc, #444]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003800:	f603 139e 	addw	r3, r3, #2462	; 0x99e
 8003804:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003808:	4658      	mov	r0, fp
 800380a:	f7ff f83f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 800380e:	953a      	str	r5, [sp, #232]	; 0xe8
    flexButton_ABC_123.setWildcardText(TypedText(T_RESOURCEID17));
 8003810:	ad3a      	add	r5, sp, #232	; 0xe8
 8003812:	230f      	movs	r3, #15
 8003814:	4629      	mov	r1, r5
 8003816:	4658      	mov	r0, fp
 8003818:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800381c:	f7ff f851 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003820:	4968      	ldr	r1, [pc, #416]	; (80039c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1060>)
 8003822:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "%s", TypedText(T_RESOURCEID7).getText());
 8003824:	f504 552a 	add.w	r5, r4, #10880	; 0x2a80
 8003828:	3530      	adds	r5, #48	; 0x30
 800382a:	2b00      	cmp	r3, #0
 800382c:	f43f ad3b 	beq.w	80032a6 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003830:	4a65      	ldr	r2, [pc, #404]	; (80039c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1064>)
 8003832:	8813      	ldrh	r3, [r2, #0]
 8003834:	2b10      	cmp	r3, #16
 8003836:	f67f ad40 	bls.w	80032ba <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 800383a:	4864      	ldr	r0, [pc, #400]	; (80039cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1068>)
 800383c:	2110      	movs	r1, #16
 800383e:	6800      	ldr	r0, [r0, #0]
 8003840:	f003 f878 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8003844:	4a62      	ldr	r2, [pc, #392]	; (80039d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x106c>)
 8003846:	4603      	mov	r3, r0
 8003848:	210a      	movs	r1, #10
 800384a:	4628      	mov	r0, r5
 800384c:	f013 f9f2 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003850:	f642 2318 	movw	r3, #10776	; 0x2a18
        wildcardText.setPosition(x, y, width, height);
 8003854:	2214      	movs	r2, #20
 8003856:	50e5      	str	r5, [r4, r3]
 8003858:	2100      	movs	r1, #0
 800385a:	4633      	mov	r3, r6
 800385c:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8003860:	9600      	str	r6, [sp, #0]
 8003862:	f7fe ffeb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003866:	f642 231c 	movw	r3, #10780	; 0x2a1c
        handlePressedUpdated();
 800386a:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 800386c:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800386e:	f642 2320 	movw	r3, #10784	; 0x2a20
 8003872:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003874:	f7fe fc59 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_ABC_123.setPosition(35, 234, 60, 60);
 8003878:	4633      	mov	r3, r6
 800387a:	4658      	mov	r0, fp
 800387c:	9600      	str	r6, [sp, #0]
 800387e:	22ea      	movs	r2, #234	; 0xea
 8003880:	2123      	movs	r1, #35	; 0x23
 8003882:	f7fe ffdb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003886:	f642 1394 	movw	r3, #10644	; 0x2994
 800388a:	9a03      	ldr	r2, [sp, #12]
 800388c:	50e2      	str	r2, [r4, r3]
    add(boxWithBorder1);
 800388e:	ee1a 1a90 	vmov	r1, s21
 8003892:	4620      	mov	r0, r4
 8003894:	f00b fc9e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1);
 8003898:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800389a:	4620      	mov	r0, r4
 800389c:	f00b fc9a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2);
 80038a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80038a2:	4620      	mov	r0, r4
 80038a4:	f00b fc96 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3);
 80038a8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80038aa:	4620      	mov	r0, r4
 80038ac:	f00b fc92 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4);
 80038b0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80038b2:	4620      	mov	r0, r4
 80038b4:	f00b fc8e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5);
 80038b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80038ba:	4620      	mov	r0, r4
 80038bc:	f00b fc8a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6);
 80038c0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80038c2:	4620      	mov	r0, r4
 80038c4:	f00b fc86 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7);
 80038c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80038ca:	4620      	mov	r0, r4
 80038cc:	f00b fc82 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8);
 80038d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80038d2:	4620      	mov	r0, r4
 80038d4:	f00b fc7e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9);
 80038d8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80038da:	4620      	mov	r0, r4
 80038dc:	f00b fc7a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10);
 80038e0:	9914      	ldr	r1, [sp, #80]	; 0x50
 80038e2:	4620      	mov	r0, r4
 80038e4:	f00b fc76 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_1);
 80038e8:	9915      	ldr	r1, [sp, #84]	; 0x54
 80038ea:	4620      	mov	r0, r4
 80038ec:	f00b fc72 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_1);
 80038f0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80038f2:	4620      	mov	r0, r4
 80038f4:	f00b fc6e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_1);
 80038f8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80038fa:	4620      	mov	r0, r4
 80038fc:	f00b fc6a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_1);
 8003900:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003902:	4620      	mov	r0, r4
 8003904:	f00b fc66 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_1);
 8003908:	9919      	ldr	r1, [sp, #100]	; 0x64
 800390a:	4620      	mov	r0, r4
 800390c:	f00b fc62 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_1);
 8003910:	ee1b 1a10 	vmov	r1, s22
 8003914:	4620      	mov	r0, r4
 8003916:	f00b fc5d 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_1);
 800391a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800391c:	4620      	mov	r0, r4
 800391e:	f00b fc59 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_1);
 8003922:	ee1b 1a90 	vmov	r1, s23
 8003926:	4620      	mov	r0, r4
 8003928:	f00b fc54 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_1);
 800392c:	ee1c 1a10 	vmov	r1, s24
 8003930:	4620      	mov	r0, r4
 8003932:	f00b fc4f 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_1);
 8003936:	ee1c 1a90 	vmov	r1, s25
 800393a:	4620      	mov	r0, r4
 800393c:	f00b fc4a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_2);
 8003940:	ee1d 1a10 	vmov	r1, s26
 8003944:	4620      	mov	r0, r4
 8003946:	f00b fc45 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_2);
 800394a:	ee1d 1a90 	vmov	r1, s27
 800394e:	4620      	mov	r0, r4
 8003950:	f00b fc40 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_2);
 8003954:	ee1e 1a10 	vmov	r1, s28
 8003958:	4620      	mov	r0, r4
 800395a:	f00b fc3b 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_2);
 800395e:	ee1e 1a90 	vmov	r1, s29
 8003962:	4620      	mov	r0, r4
 8003964:	f00b fc36 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_2);
 8003968:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800396a:	4620      	mov	r0, r4
 800396c:	f00b fc32 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_2);
 8003970:	ee1f 1a10 	vmov	r1, s30
 8003974:	4620      	mov	r0, r4
 8003976:	f00b fc2d 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_2);
 800397a:	ee1f 1a90 	vmov	r1, s31
 800397e:	4620      	mov	r0, r4
 8003980:	f00b fc28 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_2);
 8003984:	9904      	ldr	r1, [sp, #16]
 8003986:	4620      	mov	r0, r4
 8003988:	f00b fc24 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_2);
 800398c:	9905      	ldr	r1, [sp, #20]
 800398e:	4620      	mov	r0, r4
 8003990:	f00b fc20 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_2);
 8003994:	9906      	ldr	r1, [sp, #24]
 8003996:	4620      	mov	r0, r4
 8003998:	f00b fc1c 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 800399c:	ee1a 1a10 	vmov	r1, s20
 80039a0:	4620      	mov	r0, r4
 80039a2:	f00b fc17 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_enter);
 80039a6:	ee18 1a10 	vmov	r1, s16
 80039aa:	4620      	mov	r0, r4
 80039ac:	f00b fc12 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_space);
 80039b0:	ee18 1a90 	vmov	r1, s17
 80039b4:	e00e      	b.n	80039d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1070>
 80039b6:	bf00      	nop
 80039b8:	ff336699 	.word	0xff336699
 80039bc:	ff006699 	.word	0xff006699
 80039c0:	08025b88 	.word	0x08025b88
 80039c4:	200200dc 	.word	0x200200dc
 80039c8:	200200e0 	.word	0x200200e0
 80039cc:	200200e8 	.word	0x200200e8
 80039d0:	08025b7d 	.word	0x08025b7d
 80039d4:	4620      	mov	r0, r4
 80039d6:	f00b fbfd 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_language);
 80039da:	ee19 1a10 	vmov	r1, s18
 80039de:	4620      	mov	r0, r4
 80039e0:	f00b fbf8 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11_1);
 80039e4:	9907      	ldr	r1, [sp, #28]
 80039e6:	4620      	mov	r0, r4
 80039e8:	f00b fbf4 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11);
 80039ec:	9908      	ldr	r1, [sp, #32]
 80039ee:	4620      	mov	r0, r4
 80039f0:	f00b fbf0 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer12);
 80039f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80039f6:	4620      	mov	r0, r4
 80039f8:	f00b fbec 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_close);
 80039fc:	ee19 1a90 	vmov	r1, s19
 8003a00:	4620      	mov	r0, r4
 8003a02:	f00b fbe7 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_shift);
 8003a06:	4651      	mov	r1, sl
 8003a08:	4620      	mov	r0, r4
 8003a0a:	f00b fbe3 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_all);
 8003a0e:	4649      	mov	r1, r9
 8003a10:	4620      	mov	r0, r4
 8003a12:	f00b fbdf 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 8003a16:	4641      	mov	r1, r8
 8003a18:	4620      	mov	r0, r4
 8003a1a:	f00b fbdb 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_ABC_123);
 8003a1e:	4620      	mov	r0, r4
 8003a20:	4659      	mov	r1, fp
 8003a22:	f00b fbd7 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003a26:	4620      	mov	r0, r4
 8003a28:	b03d      	add	sp, #244	; 0xf4
 8003a2a:	ecbd 8b10 	vpop	{d8-d15}
 8003a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a32:	bf00      	nop

08003a34 <_ZN31CustomContainerKeyboard_NumBaseD1Ev>:

class CustomContainerKeyboard_NumBase : public touchgfx::Container
{
public:
    CustomContainerKeyboard_NumBase();
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003a34:	4770      	bx	lr

08003a36 <_ZN31CustomContainerKeyboard_NumBase16ClickButtonEnterEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003a36:	4770      	bx	lr

08003a38 <_ZN31CustomContainerKeyboard_NumBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003a38:	4770      	bx	lr

08003a3a <_ZN31CustomContainerKeyboard_NumBase17ClickButtonDelPreEv>:

    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003a3a:	4770      	bx	lr

08003a3c <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboard_NumCallback()
 8003a3c:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003a3e:	f241 05a8 	movw	r5, #4264	; 0x10a8
    virtual void emitTriggerKeyboard_NumCallback()
 8003a42:	4604      	mov	r4, r0
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003a44:	5940      	ldr	r0, [r0, r5]
 8003a46:	b148      	cbz	r0, 8003a5c <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
 8003a48:	6803      	ldr	r3, [r0, #0]
 8003a4a:	68db      	ldr	r3, [r3, #12]
 8003a4c:	4798      	blx	r3
 8003a4e:	b128      	cbz	r0, 8003a5c <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
        {
            this->triggerKeyboard_NumCallback->execute();
 8003a50:	5960      	ldr	r0, [r4, r5]
 8003a52:	6803      	ldr	r3, [r0, #0]
        }
    }
 8003a54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboard_NumCallback->execute();
 8003a58:	689b      	ldr	r3, [r3, #8]
 8003a5a:	4718      	bx	r3
    }
 8003a5c:	bd70      	pop	{r4, r5, r6, pc}

08003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboard_NumBase::customContainerButton_key1TriggerButton_keyCallbackHandler()
{
    //Interaction3
    //When customContainerButton_key1 triggerButton_key call action1 on CustomContainerKeyboard_Num
    //Call action1
    action1();
 8003a5e:	6803      	ldr	r3, [r0, #0]
 8003a60:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a64:	4718      	bx	r3

08003a66 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key2TriggerButton_keyCallbackHandlerEv>:
 8003a66:	f7ff bffa 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a6a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key3TriggerButton_keyCallbackHandlerEv>:
 8003a6a:	f7ff bff8 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a6e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key4TriggerButton_keyCallbackHandlerEv>:
 8003a6e:	f7ff bff6 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a72 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key5TriggerButton_keyCallbackHandlerEv>:
 8003a72:	f7ff bff4 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a76 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key6TriggerButton_keyCallbackHandlerEv>:
 8003a76:	f7ff bff2 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a7a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key7TriggerButton_keyCallbackHandlerEv>:
 8003a7a:	f7ff bff0 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a7e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key8TriggerButton_keyCallbackHandlerEv>:
 8003a7e:	f7ff bfee 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a82 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key9TriggerButton_keyCallbackHandlerEv>:
 8003a82:	f7ff bfec 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a86 <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key10TriggerButton_keyCallbackHandlerEv>:
 8003a86:	f7ff bfea 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a8a <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key11TriggerButton_keyCallbackHandlerEv>:
 8003a8a:	f7ff bfe8 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a8e <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key12TriggerButton_keyCallbackHandlerEv>:
 8003a8e:	f7ff bfe6 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a92 <_ZN31CustomContainerKeyboard_NumBase7action1Ev>:
}

void CustomContainerKeyboard_NumBase::action1()
{

}
 8003a92:	4770      	bx	lr

08003a94 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003a94:	4770      	bx	lr

08003a96 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a96:	4770      	bx	lr

08003a98 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7executeEv>:
    virtual void execute()
 8003a98:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8003a9a:	68c2      	ldr	r2, [r0, #12]
 8003a9c:	6841      	ldr	r1, [r0, #4]
 8003a9e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003aa0:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8003aa2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003aa6:	07d2      	lsls	r2, r2, #31
 8003aa8:	bf48      	it	mi
 8003aaa:	590a      	ldrmi	r2, [r1, r4]
 8003aac:	689b      	ldr	r3, [r3, #8]
    }
 8003aae:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8003ab2:	bf48      	it	mi
 8003ab4:	58d3      	ldrmi	r3, [r2, r3]
 8003ab6:	4718      	bx	r3

08003ab8 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8003ab8:	6843      	ldr	r3, [r0, #4]
 8003aba:	b12b      	cbz	r3, 8003ac8 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x10>
 8003abc:	6883      	ldr	r3, [r0, #8]
 8003abe:	b92b      	cbnz	r3, 8003acc <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x14>
 8003ac0:	68c0      	ldr	r0, [r0, #12]
 8003ac2:	f000 0001 	and.w	r0, r0, #1
 8003ac6:	4770      	bx	lr
 8003ac8:	4618      	mov	r0, r3
 8003aca:	4770      	bx	lr
 8003acc:	2001      	movs	r0, #1
    }
 8003ace:	4770      	bx	lr

08003ad0 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003ad0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ad2:	68c2      	ldr	r2, [r0, #12]
 8003ad4:	6844      	ldr	r4, [r0, #4]
 8003ad6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003ad8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003ada:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003ade:	07d2      	lsls	r2, r2, #31
 8003ae0:	bf48      	it	mi
 8003ae2:	5962      	ldrmi	r2, [r4, r5]
 8003ae4:	689b      	ldr	r3, [r3, #8]
    }
 8003ae6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ae8:	bf48      	it	mi
 8003aea:	58d3      	ldrmi	r3, [r2, r3]
 8003aec:	4718      	bx	r3

08003aee <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003aee:	6843      	ldr	r3, [r0, #4]
 8003af0:	b12b      	cbz	r3, 8003afe <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003af2:	6883      	ldr	r3, [r0, #8]
 8003af4:	b92b      	cbnz	r3, 8003b02 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003af6:	68c0      	ldr	r0, [r0, #12]
 8003af8:	f000 0001 	and.w	r0, r0, #1
 8003afc:	4770      	bx	lr
 8003afe:	4618      	mov	r0, r3
 8003b00:	4770      	bx	lr
 8003b02:	2001      	movs	r0, #1
    }
 8003b04:	4770      	bx	lr

08003b06 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003b06:	b510      	push	{r4, lr}
 8003b08:	2110      	movs	r1, #16
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	f01f f9ce 	bl	8022eac <_ZdlPvj>
 8003b10:	4620      	mov	r0, r4
 8003b12:	bd10      	pop	{r4, pc}

08003b14 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b14:	b510      	push	{r4, lr}
 8003b16:	2110      	movs	r1, #16
 8003b18:	4604      	mov	r4, r0
 8003b1a:	f01f f9c7 	bl	8022eac <_ZdlPvj>
 8003b1e:	4620      	mov	r0, r4
 8003b20:	bd10      	pop	{r4, pc}

08003b22 <_ZN31CustomContainerKeyboard_NumBaseD0Ev>:
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003b22:	b510      	push	{r4, lr}
 8003b24:	f241 01ac 	movw	r1, #4268	; 0x10ac
 8003b28:	4604      	mov	r4, r0
 8003b2a:	f01f f9bf 	bl	8022eac <_ZdlPvj>
 8003b2e:	4620      	mov	r0, r4
 8003b30:	bd10      	pop	{r4, pc}

08003b32 <_ZN31CustomContainerKeyboard_NumBase10initializeEv>:
{
 8003b32:	b510      	push	{r4, lr}
 8003b34:	4604      	mov	r4, r0
    customContainerButton_key1.initialize();
 8003b36:	f500 7006 	add.w	r0, r0, #536	; 0x218
 8003b3a:	f002 ff2b 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key2.initialize();
 8003b3e:	f504 704b 	add.w	r0, r4, #812	; 0x32c
 8003b42:	f002 ff27 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key3.initialize();
 8003b46:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8003b4a:	f002 ff23 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key4.initialize();
 8003b4e:	f204 5054 	addw	r0, r4, #1364	; 0x554
 8003b52:	f002 ff1f 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key5.initialize();
 8003b56:	f504 60cd 	add.w	r0, r4, #1640	; 0x668
 8003b5a:	f002 ff1b 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key6.initialize();
 8003b5e:	f204 707c 	addw	r0, r4, #1916	; 0x77c
 8003b62:	f002 ff17 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key7.initialize();
 8003b66:	f504 6009 	add.w	r0, r4, #2192	; 0x890
 8003b6a:	f002 ff13 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key8.initialize();
 8003b6e:	f604 10a4 	addw	r0, r4, #2468	; 0x9a4
 8003b72:	f002 ff0f 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key9.initialize();
 8003b76:	f604 20b8 	addw	r0, r4, #2744	; 0xab8
 8003b7a:	f002 ff0b 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key10.initialize();
 8003b7e:	f604 30cc 	addw	r0, r4, #3020	; 0xbcc
 8003b82:	f002 ff07 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key11.initialize();
 8003b86:	f504 604e 	add.w	r0, r4, #3296	; 0xce0
 8003b8a:	f002 ff03 	bl	8006994 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key12.initialize();
 8003b8e:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
}
 8003b92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerButton_key12.initialize();
 8003b96:	f002 befd 	b.w	8006994 <_ZN25CustomContainerButton_key10initializeEv>

08003b9a <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboard_NumBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonEnter)
 8003b9a:	f100 0360 	add.w	r3, r0, #96	; 0x60
 8003b9e:	4299      	cmp	r1, r3
{
 8003ba0:	b510      	push	{r4, lr}
 8003ba2:	4604      	mov	r4, r0
    if (&src == &flexButtonEnter)
 8003ba4:	d10a      	bne.n	8003bbc <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButtonEnter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 8003ba6:	6803      	ldr	r3, [r0, #0]
 8003ba8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003bac:	4798      	blx	r3

        //Interaction15
        //When flexButtonEnter clicked emit triggerKeyboard_Num callback
        //Emit callback
        emitTriggerKeyboard_NumCallback();
 8003bae:	6823      	ldr	r3, [r4, #0]
 8003bb0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8003bb4:	4620      	mov	r0, r4
        //Interaction16
        //When flexButton_del_pre clicked call virtual function
        //Call ClickButtonDelPre
        ClickButtonDelPre();
    }
}
 8003bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonDelPre();
 8003bba:	4718      	bx	r3
    else if (&src == &flexButtonClose)
 8003bbc:	f500 738e 	add.w	r3, r0, #284	; 0x11c
 8003bc0:	4299      	cmp	r1, r3
 8003bc2:	d103      	bne.n	8003bcc <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        ClickButtonCloseKeyboard();
 8003bc4:	6803      	ldr	r3, [r0, #0]
 8003bc6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003bca:	e7f4      	b.n	8003bb6 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
    else if (&src == &flexButton_del_pre)
 8003bcc:	f600 7308 	addw	r3, r0, #3848	; 0xf08
 8003bd0:	4299      	cmp	r1, r3
 8003bd2:	d103      	bne.n	8003bdc <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        ClickButtonDelPre();
 8003bd4:	6803      	ldr	r3, [r0, #0]
 8003bd6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003bda:	e7ec      	b.n	8003bb6 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
}
 8003bdc:	bd10      	pop	{r4, pc}
	...

08003be0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev>:
CustomContainerKeyboard_NumBase::CustomContainerKeyboard_NumBase() :
 8003be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003be4:	ed2d 8b0c 	vpush	{d8-d13}
 8003be8:	4604      	mov	r4, r0
 8003bea:	b091      	sub	sp, #68	; 0x44
    triggerKeyboard_NumCallback(0)
 8003bec:	46a3      	mov	fp, r4
 8003bee:	2500      	movs	r5, #0
 8003bf0:	f7fe fb3e 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8003bf4:	4bcd      	ldr	r3, [pc, #820]	; (8003f2c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x34c>)
 8003bf6:	62a5      	str	r5, [r4, #40]	; 0x28
 8003bf8:	f84b 3b2c 	str.w	r3, [fp], #44
        : Box(), borderColor(0), borderSize(0)
 8003bfc:	4658      	mov	r0, fp
 8003bfe:	f7fe fa5b 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8003c02:	f104 0960 	add.w	r9, r4, #96	; 0x60
 8003c06:	4bca      	ldr	r3, [pc, #808]	; (8003f30 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x350>)
 8003c08:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003c0a:	f504 788e 	add.w	r8, r4, #284	; 0x11c
 8003c0e:	65a5      	str	r5, [r4, #88]	; 0x58
 8003c10:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8003c14:	4648      	mov	r0, r9
 8003c16:	f7fe fe8f 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003c1a:	f504 7aec 	add.w	sl, r4, #472	; 0x1d8
 8003c1e:	4640      	mov	r0, r8
 8003c20:	f7fe fe8a 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea(), wildcard(0)
 8003c24:	4650      	mov	r0, sl
 8003c26:	f7fe fe15 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8003c2a:	4bc2      	ldr	r3, [pc, #776]	; (8003f34 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x354>)
 8003c2c:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
 8003c30:	f504 7306 	add.w	r3, r4, #536	; 0x218
 8003c34:	4618      	mov	r0, r3
 8003c36:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8003c3a:	ee08 3a10 	vmov	s16, r3
 8003c3e:	f002 feb3 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c42:	f504 734b 	add.w	r3, r4, #812	; 0x32c
 8003c46:	4618      	mov	r0, r3
 8003c48:	ee08 3a90 	vmov	s17, r3
 8003c4c:	f002 feac 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c50:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003c54:	4618      	mov	r0, r3
 8003c56:	ee09 3a10 	vmov	s18, r3
 8003c5a:	f002 fea5 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c5e:	f204 5354 	addw	r3, r4, #1364	; 0x554
 8003c62:	4618      	mov	r0, r3
 8003c64:	ee09 3a90 	vmov	s19, r3
 8003c68:	f002 fe9e 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c6c:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
 8003c70:	4618      	mov	r0, r3
 8003c72:	ee0a 3a10 	vmov	s20, r3
 8003c76:	f002 fe97 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c7a:	f204 737c 	addw	r3, r4, #1916	; 0x77c
 8003c7e:	4618      	mov	r0, r3
 8003c80:	ee0a 3a90 	vmov	s21, r3
 8003c84:	f002 fe90 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c88:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 8003c8c:	4618      	mov	r0, r3
 8003c8e:	ee0b 3a10 	vmov	s22, r3
 8003c92:	f002 fe89 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003c96:	f604 13a4 	addw	r3, r4, #2468	; 0x9a4
 8003c9a:	4618      	mov	r0, r3
 8003c9c:	ee0b 3a90 	vmov	s23, r3
 8003ca0:	f002 fe82 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003ca4:	f604 23b8 	addw	r3, r4, #2744	; 0xab8
 8003ca8:	4618      	mov	r0, r3
 8003caa:	ee0c 3a10 	vmov	s24, r3
 8003cae:	f002 fe7b 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003cb2:	f604 33cc 	addw	r3, r4, #3020	; 0xbcc
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	ee0c 3a90 	vmov	s25, r3
 8003cbc:	f002 fe74 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003cc0:	f504 634e 	add.w	r3, r4, #3296	; 0xce0
 8003cc4:	4618      	mov	r0, r3
 8003cc6:	ee0d 3a10 	vmov	s26, r3
 8003cca:	f002 fe6d 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003cce:	f604 53f4 	addw	r3, r4, #3572	; 0xdf4
 8003cd2:	4618      	mov	r0, r3
 8003cd4:	f604 7708 	addw	r7, r4, #3848	; 0xf08
 8003cd8:	ee0d 3a90 	vmov	s27, r3
 8003cdc:	f002 fe64 	bl	80069a8 <_ZN25CustomContainerButton_keyC1Ev>
 8003ce0:	4638      	mov	r0, r7
 8003ce2:	f7fe fe29 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003ce6:	4b94      	ldr	r3, [pc, #592]	; (8003f38 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x358>)
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003ce8:	4a94      	ldr	r2, [pc, #592]	; (8003f3c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x35c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003cea:	f8c4 3fd8 	str.w	r3, [r4, #4056]	; 0xfd8
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003cee:	f8c4 2ff0 	str.w	r2, [r4, #4080]	; 0xff0
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003cf2:	4b93      	ldr	r3, [pc, #588]	; (8003f40 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x360>)
 8003cf4:	f8c4 3fe0 	str.w	r3, [r4, #4064]	; 0xfe0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003cf8:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
 8003cfc:	4b91      	ldr	r3, [pc, #580]	; (8003f44 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x364>)
 8003cfe:	4992      	ldr	r1, [pc, #584]	; (8003f48 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x368>)
 8003d00:	f8c4 3fe8 	str.w	r3, [r4, #4072]	; 0xfe8
 8003d04:	f8c4 3ff8 	str.w	r3, [r4, #4088]	; 0xff8
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003d08:	f8c4 4fdc 	str.w	r4, [r4, #4060]	; 0xfdc
 8003d0c:	f8c4 5fe4 	str.w	r5, [r4, #4068]	; 0xfe4
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003d10:	f8c4 4fec 	str.w	r4, [r4, #4076]	; 0xfec
 8003d14:	f8c4 5ff4 	str.w	r5, [r4, #4084]	; 0xff4
 8003d18:	f8c4 4ffc 	str.w	r4, [r4, #4092]	; 0xffc
 8003d1c:	6011      	str	r1, [r2, #0]
 8003d1e:	f241 0204 	movw	r2, #4100	; 0x1004
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003d22:	4658      	mov	r0, fp
 8003d24:	50a5      	str	r5, [r4, r2]
 8003d26:	f241 0208 	movw	r2, #4104	; 0x1008
 8003d2a:	18a1      	adds	r1, r4, r2
 8003d2c:	50a3      	str	r3, [r4, r2]
 8003d2e:	f241 0210 	movw	r2, #4112	; 0x1010
 8003d32:	604c      	str	r4, [r1, #4]
 8003d34:	9104      	str	r1, [sp, #16]
 8003d36:	4985      	ldr	r1, [pc, #532]	; (8003f4c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x36c>)
 8003d38:	50a1      	str	r1, [r4, r2]
 8003d3a:	f241 0214 	movw	r2, #4116	; 0x1014
 8003d3e:	2679      	movs	r6, #121	; 0x79
 8003d40:	50a5      	str	r5, [r4, r2]
 8003d42:	f241 0218 	movw	r2, #4120	; 0x1018
 8003d46:	18a1      	adds	r1, r4, r2
 8003d48:	50a3      	str	r3, [r4, r2]
 8003d4a:	f504 5281 	add.w	r2, r4, #4128	; 0x1020
 8003d4e:	604c      	str	r4, [r1, #4]
 8003d50:	9105      	str	r1, [sp, #20]
 8003d52:	497f      	ldr	r1, [pc, #508]	; (8003f50 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x370>)
 8003d54:	6011      	str	r1, [r2, #0]
 8003d56:	f241 0224 	movw	r2, #4132	; 0x1024
 8003d5a:	50a5      	str	r5, [r4, r2]
 8003d5c:	f241 0228 	movw	r2, #4136	; 0x1028
 8003d60:	18a1      	adds	r1, r4, r2
 8003d62:	50a3      	str	r3, [r4, r2]
 8003d64:	f241 0230 	movw	r2, #4144	; 0x1030
 8003d68:	604c      	str	r4, [r1, #4]
 8003d6a:	9106      	str	r1, [sp, #24]
 8003d6c:	4979      	ldr	r1, [pc, #484]	; (8003f54 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x374>)
 8003d6e:	50a1      	str	r1, [r4, r2]
 8003d70:	f241 0234 	movw	r2, #4148	; 0x1034
 8003d74:	50a5      	str	r5, [r4, r2]
 8003d76:	f241 0238 	movw	r2, #4152	; 0x1038
 8003d7a:	18a1      	adds	r1, r4, r2
 8003d7c:	50a3      	str	r3, [r4, r2]
 8003d7e:	f504 5282 	add.w	r2, r4, #4160	; 0x1040
 8003d82:	604c      	str	r4, [r1, #4]
 8003d84:	9107      	str	r1, [sp, #28]
 8003d86:	4974      	ldr	r1, [pc, #464]	; (8003f58 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x378>)
 8003d88:	6011      	str	r1, [r2, #0]
 8003d8a:	f241 0244 	movw	r2, #4164	; 0x1044
 8003d8e:	50a5      	str	r5, [r4, r2]
 8003d90:	f241 0248 	movw	r2, #4168	; 0x1048
 8003d94:	18a1      	adds	r1, r4, r2
 8003d96:	9108      	str	r1, [sp, #32]
 8003d98:	50a3      	str	r3, [r4, r2]
 8003d9a:	f241 0250 	movw	r2, #4176	; 0x1050
 8003d9e:	604c      	str	r4, [r1, #4]
 8003da0:	496e      	ldr	r1, [pc, #440]	; (8003f5c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x37c>)
 8003da2:	50a1      	str	r1, [r4, r2]
 8003da4:	f241 0254 	movw	r2, #4180	; 0x1054
 8003da8:	50a5      	str	r5, [r4, r2]
 8003daa:	f241 0258 	movw	r2, #4184	; 0x1058
 8003dae:	18a1      	adds	r1, r4, r2
 8003db0:	50a3      	str	r3, [r4, r2]
 8003db2:	f504 5283 	add.w	r2, r4, #4192	; 0x1060
 8003db6:	604c      	str	r4, [r1, #4]
 8003db8:	9109      	str	r1, [sp, #36]	; 0x24
 8003dba:	4969      	ldr	r1, [pc, #420]	; (8003f60 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x380>)
 8003dbc:	6011      	str	r1, [r2, #0]
 8003dbe:	f241 0264 	movw	r2, #4196	; 0x1064
 8003dc2:	50a5      	str	r5, [r4, r2]
 8003dc4:	f241 0268 	movw	r2, #4200	; 0x1068
 8003dc8:	18a1      	adds	r1, r4, r2
 8003dca:	50a3      	str	r3, [r4, r2]
 8003dcc:	f241 0270 	movw	r2, #4208	; 0x1070
 8003dd0:	604c      	str	r4, [r1, #4]
 8003dd2:	910a      	str	r1, [sp, #40]	; 0x28
 8003dd4:	4963      	ldr	r1, [pc, #396]	; (8003f64 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x384>)
 8003dd6:	50a1      	str	r1, [r4, r2]
 8003dd8:	f241 0274 	movw	r2, #4212	; 0x1074
 8003ddc:	50a5      	str	r5, [r4, r2]
 8003dde:	f241 0278 	movw	r2, #4216	; 0x1078
 8003de2:	18a1      	adds	r1, r4, r2
 8003de4:	50a3      	str	r3, [r4, r2]
 8003de6:	f504 5284 	add.w	r2, r4, #4224	; 0x1080
 8003dea:	604c      	str	r4, [r1, #4]
 8003dec:	910b      	str	r1, [sp, #44]	; 0x2c
 8003dee:	495e      	ldr	r1, [pc, #376]	; (8003f68 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x388>)
 8003df0:	6011      	str	r1, [r2, #0]
 8003df2:	f241 0284 	movw	r2, #4228	; 0x1084
 8003df6:	50a5      	str	r5, [r4, r2]
 8003df8:	f241 0288 	movw	r2, #4232	; 0x1088
 8003dfc:	18a1      	adds	r1, r4, r2
 8003dfe:	50a3      	str	r3, [r4, r2]
 8003e00:	f241 0290 	movw	r2, #4240	; 0x1090
 8003e04:	604c      	str	r4, [r1, #4]
 8003e06:	910c      	str	r1, [sp, #48]	; 0x30
 8003e08:	4958      	ldr	r1, [pc, #352]	; (8003f6c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x38c>)
 8003e0a:	50a1      	str	r1, [r4, r2]
 8003e0c:	f241 0294 	movw	r2, #4244	; 0x1094
 8003e10:	50a5      	str	r5, [r4, r2]
 8003e12:	f241 0298 	movw	r2, #4248	; 0x1098
 8003e16:	18a1      	adds	r1, r4, r2
 8003e18:	50a3      	str	r3, [r4, r2]
 8003e1a:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8003e1e:	4a54      	ldr	r2, [pc, #336]	; (8003f70 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x390>)
 8003e20:	604c      	str	r4, [r1, #4]
 8003e22:	601a      	str	r2, [r3, #0]
 8003e24:	f241 03a4 	movw	r3, #4260	; 0x10a4
 8003e28:	910d      	str	r1, [sp, #52]	; 0x34
 8003e2a:	50e5      	str	r5, [r4, r3]
    triggerKeyboard_NumCallback(0)
 8003e2c:	f241 03a8 	movw	r3, #4264	; 0x10a8
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003e30:	462a      	mov	r2, r5
    triggerKeyboard_NumCallback(0)
 8003e32:	50e5      	str	r5, [r4, r3]
 8003e34:	4b4f      	ldr	r3, [pc, #316]	; (8003f74 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x394>)
 8003e36:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003e38:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8003e3c:	9300      	str	r3, [sp, #0]
 8003e3e:	4629      	mov	r1, r5
 8003e40:	f44f 7387 	mov.w	r3, #270	; 0x10e
 8003e44:	f7fe fcfa 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8003e48:	4a4b      	ldr	r2, [pc, #300]	; (8003f78 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x398>)
 8003e4a:	9600      	str	r6, [sp, #0]
 8003e4c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003e50:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 8003e54:	2305      	movs	r3, #5
 8003e56:	462a      	mov	r2, r5
 8003e58:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8003e5c:	4629      	mov	r1, r5
 8003e5e:	233c      	movs	r3, #60	; 0x3c
 8003e60:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8003e64:	f7fe fcea 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e68:	f04f 0301 	mov.w	r3, #1
        down = colorPressed;
 8003e6c:	4943      	ldr	r1, [pc, #268]	; (8003f7c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 8003e6e:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 8003e72:	4b43      	ldr	r3, [pc, #268]	; (8003f80 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        borderUp = borderColorReleased;
 8003e74:	4843      	ldr	r0, [pc, #268]	; (8003f84 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
 8003e76:	f8c4 00d0 	str.w	r0, [r4, #208]	; 0xd0
        down = colorPressed;
 8003e7a:	e9c4 3132 	strd	r3, r1, [r4, #200]	; 0xc8
        borderDown = borderColorPressed;
 8003e7e:	f503 134c 	add.w	r3, r3, #3342336	; 0x330000
 8003e82:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        handlePressedUpdated();
 8003e86:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8003e88:	4648      	mov	r0, r9
 8003e8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003e8e:	4798      	blx	r3
    flexButtonEnter.setText(TypedText(T___SINGLEUSE_O6I9));
 8003e90:	f10d 0e38 	add.w	lr, sp, #56	; 0x38
        : typedTextId(id)
 8003e94:	4b3c      	ldr	r3, [pc, #240]	; (8003f88 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 8003e96:	930e      	str	r3, [sp, #56]	; 0x38
 8003e98:	4671      	mov	r1, lr
 8003e9a:	231c      	movs	r3, #28
 8003e9c:	4648      	mov	r0, r9
 8003e9e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003ea2:	f7fe fcff 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003ea6:	2232      	movs	r2, #50	; 0x32
 8003ea8:	4629      	mov	r1, r5
 8003eaa:	9600      	str	r6, [sp, #0]
 8003eac:	233c      	movs	r3, #60	; 0x3c
 8003eae:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 8003eb2:	f7fe fcc3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003eb6:	4b35      	ldr	r3, [pc, #212]	; (8003f8c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3ac>)
        handlePressedUpdated();
 8003eb8:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 8003eba:	e9c4 3345 	strd	r3, r3, [r4, #276]	; 0x114
        handlePressedUpdated();
 8003ebe:	f7fe fb68 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonEnter.setPosition(196, 106, 60, 121);
 8003ec2:	9600      	str	r6, [sp, #0]
 8003ec4:	233c      	movs	r3, #60	; 0x3c
    flexButtonEnter.setAction(flexButtonCallback);
 8003ec6:	f604 76d8 	addw	r6, r4, #4056	; 0xfd8
    flexButtonEnter.setPosition(196, 106, 60, 121);
 8003eca:	226a      	movs	r2, #106	; 0x6a
 8003ecc:	21c4      	movs	r1, #196	; 0xc4
 8003ece:	4648      	mov	r0, r9
 8003ed0:	f7fe fcb4 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonEnter.setAction(flexButtonCallback);
 8003ed4:	9602      	str	r6, [sp, #8]
 8003ed6:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
        borderBox.setPosition(x, y, width, height);
 8003eda:	263c      	movs	r6, #60	; 0x3c
 8003edc:	4633      	mov	r3, r6
 8003ede:	462a      	mov	r2, r5
 8003ee0:	4629      	mov	r1, r5
 8003ee2:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8003ee6:	9600      	str	r6, [sp, #0]
 8003ee8:	f7fe fca8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003eec:	4923      	ldr	r1, [pc, #140]	; (8003f7c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 8003eee:	4a24      	ldr	r2, [pc, #144]	; (8003f80 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        handlePressedUpdated();
 8003ef0:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
        borderUp = borderColorReleased;
 8003ef4:	4823      	ldr	r0, [pc, #140]	; (8003f84 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
        handlePressedUpdated();
 8003ef6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        borderUp = borderColorReleased;
 8003efa:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
 8003efe:	f04f 0c01 	mov.w	ip, #1
        down = colorPressed;
 8003f02:	e9c4 2161 	strd	r2, r1, [r4, #388]	; 0x184
        borderDown = borderColorPressed;
 8003f06:	f502 124c 	add.w	r2, r2, #3342336	; 0x330000
 8003f0a:	f8a4 c180 	strh.w	ip, [r4, #384]	; 0x180
 8003f0e:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 8003f12:	4640      	mov	r0, r8
 8003f14:	4798      	blx	r3
 8003f16:	4a1c      	ldr	r2, [pc, #112]	; (8003f88 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 8003f18:	920e      	str	r2, [sp, #56]	; 0x38
 8003f1a:	231b      	movs	r3, #27
    flexButtonClose.setText(TypedText(T___SINGLEUSE_66SU));
 8003f1c:	a90e      	add	r1, sp, #56	; 0x38
 8003f1e:	4640      	mov	r0, r8
 8003f20:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003f24:	f7fe fcbe 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
 8003f28:	e032      	b.n	8003f90 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3b0>
 8003f2a:	bf00      	nop
 8003f2c:	08025f2c 	.word	0x08025f2c
 8003f30:	0802827c 	.word	0x0802827c
 8003f34:	080281d4 	.word	0x080281d4
 8003f38:	08025efc 	.word	0x08025efc
 8003f3c:	08003a5f 	.word	0x08003a5f
 8003f40:	08003b9b 	.word	0x08003b9b
 8003f44:	08025f14 	.word	0x08025f14
 8003f48:	08003a67 	.word	0x08003a67
 8003f4c:	08003a6b 	.word	0x08003a6b
 8003f50:	08003a6f 	.word	0x08003a6f
 8003f54:	08003a73 	.word	0x08003a73
 8003f58:	08003a77 	.word	0x08003a77
 8003f5c:	08003a7b 	.word	0x08003a7b
 8003f60:	08003a7f 	.word	0x08003a7f
 8003f64:	08003a83 	.word	0x08003a83
 8003f68:	08003a87 	.word	0x08003a87
 8003f6c:	08003a8b 	.word	0x08003a8b
 8003f70:	08003a8f 	.word	0x08003a8f
 8003f74:	012c010e 	.word	0x012c010e
 8003f78:	ff878787 	.word	0xff878787
 8003f7c:	ff0099cc 	.word	0xff0099cc
 8003f80:	ff006699 	.word	0xff006699
 8003f84:	ff003366 	.word	0xff003366
 8003f88:	08025b88 	.word	0x08025b88
 8003f8c:	ff0a0a0a 	.word	0xff0a0a0a
        text.setPosition(x, y, width, height);
 8003f90:	2214      	movs	r2, #20
 8003f92:	4629      	mov	r1, r5
 8003f94:	4633      	mov	r3, r6
 8003f96:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 8003f9a:	9600      	str	r6, [sp, #0]
 8003f9c:	f7fe fc4e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003fa0:	4baa      	ldr	r3, [pc, #680]	; (800424c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
        handlePressedUpdated();
 8003fa2:	4640      	mov	r0, r8
        colorPressed = newColorPressed;
 8003fa4:	e9c4 3374 	strd	r3, r3, [r4, #464]	; 0x1d0
        handlePressedUpdated();
 8003fa8:	f7fe faf3 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonClose.setPosition(196, 228, 60, 60);
 8003fac:	4633      	mov	r3, r6
 8003fae:	22e4      	movs	r2, #228	; 0xe4
 8003fb0:	21c4      	movs	r1, #196	; 0xc4
 8003fb2:	4640      	mov	r0, r8
 8003fb4:	9600      	str	r6, [sp, #0]
 8003fb6:	f7fe fc41 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fba:	9b02      	ldr	r3, [sp, #8]
 8003fbc:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    textArea1.setPosition(13, 14, 200, 25);
 8003fc0:	2319      	movs	r3, #25
 8003fc2:	9300      	str	r3, [sp, #0]
 8003fc4:	220e      	movs	r2, #14
 8003fc6:	23c8      	movs	r3, #200	; 0xc8
 8003fc8:	210d      	movs	r1, #13
 8003fca:	4650      	mov	r0, sl
 8003fcc:	f7fe fc36 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003fd0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003fd4:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4UB8).getText());
 8003fd8:	f604 73c4 	addw	r3, r4, #4036	; 0xfc4
 8003fdc:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fde:	4b9c      	ldr	r3, [pc, #624]	; (8004250 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x670>)
        linespace = space;
 8003fe0:	f8a4 520c 	strh.w	r5, [r4, #524]	; 0x20c
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	b92b      	cbnz	r3, 8003ff4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x414>
 8003fe8:	4b9a      	ldr	r3, [pc, #616]	; (8004254 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x674>)
 8003fea:	4a9b      	ldr	r2, [pc, #620]	; (8004258 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 8003fec:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003fee:	489b      	ldr	r0, [pc, #620]	; (800425c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x67c>)
 8003ff0:	f01e ff8a 	bl	8022f08 <__assert_func>
 8003ff4:	4b9a      	ldr	r3, [pc, #616]	; (8004260 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x680>)
 8003ff6:	881b      	ldrh	r3, [r3, #0]
 8003ff8:	2b1a      	cmp	r3, #26
 8003ffa:	d803      	bhi.n	8004004 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x424>
 8003ffc:	4b99      	ldr	r3, [pc, #612]	; (8004264 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x684>)
 8003ffe:	4a96      	ldr	r2, [pc, #600]	; (8004258 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 8004000:	21af      	movs	r1, #175	; 0xaf
 8004002:	e7f4      	b.n	8003fee <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x40e>
        return texts->getText(typedTextId);
 8004004:	4b98      	ldr	r3, [pc, #608]	; (8004268 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x688>)
 8004006:	211a      	movs	r1, #26
 8004008:	6818      	ldr	r0, [r3, #0]
 800400a:	f002 fc93 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 800400e:	4a97      	ldr	r2, [pc, #604]	; (800426c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x68c>)
 8004010:	4603      	mov	r3, r0
 8004012:	210a      	movs	r1, #10
 8004014:	9803      	ldr	r0, [sp, #12]
 8004016:	f012 fe0d 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 800401a:	9b03      	ldr	r3, [sp, #12]
 800401c:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        : typedTextId(id)
 8004020:	f04f 0219 	mov.w	r2, #25
 8004024:	4b92      	ldr	r3, [pc, #584]	; (8004270 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 8004026:	930e      	str	r3, [sp, #56]	; 0x38
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z4JY));
 8004028:	a90e      	add	r1, sp, #56	; 0x38
 800402a:	4650      	mov	r0, sl
 800402c:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8004030:	f00c fe67 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    customContainerButton_key1.setXY(13, 45);
 8004034:	ee18 0a10 	vmov	r0, s16
 8004038:	222d      	movs	r2, #45	; 0x2d
 800403a:	210d      	movs	r1, #13
 800403c:	f7fe f92a 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key1.setTriggerButton_keyCallback(customContainerButton_key1TriggerButton_keyCallback);
 8004040:	f604 73e8 	addw	r3, r4, #4072	; 0xfe8
    customContainerButton_key2.setXY(74, 45);
 8004044:	ee18 0a90 	vmov	r0, s17
 8004048:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
 800404c:	222d      	movs	r2, #45	; 0x2d
 800404e:	214a      	movs	r1, #74	; 0x4a
 8004050:	f7fe f920 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key2.setTriggerButton_keyCallback(customContainerButton_key2TriggerButton_keyCallback);
 8004054:	f604 73f8 	addw	r3, r4, #4088	; 0xff8
 8004058:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    customContainerButton_key3.setXY(135, 45);
 800405c:	ee19 0a10 	vmov	r0, s18
 8004060:	222d      	movs	r2, #45	; 0x2d
 8004062:	2187      	movs	r1, #135	; 0x87
 8004064:	f7fe f916 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8004068:	9a04      	ldr	r2, [sp, #16]
 800406a:	f8c4 2550 	str.w	r2, [r4, #1360]	; 0x550
    customContainerButton_key4.setXY(13, 106);
 800406e:	ee19 0a90 	vmov	r0, s19
 8004072:	226a      	movs	r2, #106	; 0x6a
 8004074:	210d      	movs	r1, #13
 8004076:	f7fe f90d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800407a:	9a05      	ldr	r2, [sp, #20]
 800407c:	f8c4 2664 	str.w	r2, [r4, #1636]	; 0x664
    customContainerButton_key5.setXY(74, 106);
 8004080:	ee1a 0a10 	vmov	r0, s20
 8004084:	226a      	movs	r2, #106	; 0x6a
 8004086:	214a      	movs	r1, #74	; 0x4a
 8004088:	f7fe f904 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800408c:	9a06      	ldr	r2, [sp, #24]
 800408e:	f8c4 2778 	str.w	r2, [r4, #1912]	; 0x778
    customContainerButton_key6.setXY(135, 106);
 8004092:	ee1a 0a90 	vmov	r0, s21
 8004096:	226a      	movs	r2, #106	; 0x6a
 8004098:	2187      	movs	r1, #135	; 0x87
 800409a:	f7fe f8fb 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800409e:	9a07      	ldr	r2, [sp, #28]
 80040a0:	f8c4 288c 	str.w	r2, [r4, #2188]	; 0x88c
    customContainerButton_key7.setXY(13, 167);
 80040a4:	ee1b 0a10 	vmov	r0, s22
 80040a8:	22a7      	movs	r2, #167	; 0xa7
 80040aa:	210d      	movs	r1, #13
 80040ac:	f7fe f8f2 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040b0:	9a08      	ldr	r2, [sp, #32]
 80040b2:	f8c4 29a0 	str.w	r2, [r4, #2464]	; 0x9a0
    customContainerButton_key8.setXY(74, 167);
 80040b6:	ee1b 0a90 	vmov	r0, s23
 80040ba:	22a7      	movs	r2, #167	; 0xa7
 80040bc:	214a      	movs	r1, #74	; 0x4a
 80040be:	f7fe f8e9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80040c4:	f8c4 2ab4 	str.w	r2, [r4, #2740]	; 0xab4
    customContainerButton_key9.setXY(135, 167);
 80040c8:	ee1c 0a10 	vmov	r0, s24
 80040cc:	22a7      	movs	r2, #167	; 0xa7
 80040ce:	2187      	movs	r1, #135	; 0x87
 80040d0:	f7fe f8e0 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80040d6:	f8c4 2bc8 	str.w	r2, [r4, #3016]	; 0xbc8
    customContainerButton_key10.setXY(13, 228);
 80040da:	ee1c 0a90 	vmov	r0, s25
 80040de:	22e4      	movs	r2, #228	; 0xe4
 80040e0:	210d      	movs	r1, #13
 80040e2:	f7fe f8d7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80040e8:	f8c4 2cdc 	str.w	r2, [r4, #3292]	; 0xcdc
    customContainerButton_key11.setXY(74, 228);
 80040ec:	ee1d 0a10 	vmov	r0, s26
 80040f0:	22e4      	movs	r2, #228	; 0xe4
 80040f2:	214a      	movs	r1, #74	; 0x4a
 80040f4:	f7fe f8ce 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80040fa:	f8c4 2df0 	str.w	r2, [r4, #3568]	; 0xdf0
    customContainerButton_key12.setXY(135, 228);
 80040fe:	ee1d 0a90 	vmov	r0, s27
 8004102:	22e4      	movs	r2, #228	; 0xe4
 8004104:	2187      	movs	r1, #135	; 0x87
 8004106:	f7fe f8c5 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800410a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800410c:	f8c4 2f04 	str.w	r2, [r4, #3844]	; 0xf04
        borderBox.setPosition(x, y, width, height);
 8004110:	4629      	mov	r1, r5
 8004112:	4633      	mov	r3, r6
 8004114:	462a      	mov	r2, r5
 8004116:	f604 703c 	addw	r0, r4, #3900	; 0xf3c
 800411a:	9600      	str	r6, [sp, #0]
 800411c:	f7fe fb8e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004120:	f04f 0201 	mov.w	r2, #1
 8004124:	f8a4 2f6c 	strh.w	r2, [r4, #3948]	; 0xf6c
        up = colorReleased;
 8004128:	4a52      	ldr	r2, [pc, #328]	; (8004274 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x694>)
 800412a:	f8c4 2f70 	str.w	r2, [r4, #3952]	; 0xf70
        down = colorPressed;
 800412e:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 8004132:	3233      	adds	r2, #51	; 0x33
 8004134:	f8c4 2f74 	str.w	r2, [r4, #3956]	; 0xf74
        borderUp = borderColorReleased;
 8004138:	f5a2 42cc 	sub.w	r2, r2, #26112	; 0x6600
 800413c:	3a66      	subs	r2, #102	; 0x66
        handlePressedUpdated();
 800413e:	f8d4 3f08 	ldr.w	r3, [r4, #3848]	; 0xf08
        borderUp = borderColorReleased;
 8004142:	f8c4 2f78 	str.w	r2, [r4, #3960]	; 0xf78
        borderDown = borderColorPressed;
 8004146:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 800414a:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 800414e:	f8c4 2f7c 	str.w	r2, [r4, #3964]	; 0xf7c
        handlePressedUpdated();
 8004152:	4638      	mov	r0, r7
 8004154:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004158:	4798      	blx	r3
 800415a:	4b45      	ldr	r3, [pc, #276]	; (8004270 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 800415c:	930e      	str	r3, [sp, #56]	; 0x38
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_TS12));
 800415e:	a90e      	add	r1, sp, #56	; 0x38
 8004160:	2316      	movs	r3, #22
 8004162:	4638      	mov	r0, r7
 8004164:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004168:	f7fe fb9c 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800416c:	4629      	mov	r1, r5
 800416e:	4633      	mov	r3, r6
 8004170:	2214      	movs	r2, #20
 8004172:	f504 6078 	add.w	r0, r4, #3968	; 0xf80
 8004176:	9600      	str	r6, [sp, #0]
 8004178:	f7fe fb60 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800417c:	4b33      	ldr	r3, [pc, #204]	; (800424c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
 800417e:	f8c4 3fbc 	str.w	r3, [r4, #4028]	; 0xfbc
        colorPressed = newColorPressed;
 8004182:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        handlePressedUpdated();
 8004186:	4638      	mov	r0, r7
 8004188:	f7fe fa03 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(196, 45, 60, 60);
 800418c:	222d      	movs	r2, #45	; 0x2d
 800418e:	4633      	mov	r3, r6
 8004190:	4638      	mov	r0, r7
 8004192:	9600      	str	r6, [sp, #0]
 8004194:	21c4      	movs	r1, #196	; 0xc4
 8004196:	f7fe fb51 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800419a:	9b02      	ldr	r3, [sp, #8]
 800419c:	f8c4 3f38 	str.w	r3, [r4, #3896]	; 0xf38
    add(boxWithBorder1);
 80041a0:	4659      	mov	r1, fp
 80041a2:	4620      	mov	r0, r4
 80041a4:	f00b f816 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonEnter);
 80041a8:	4649      	mov	r1, r9
 80041aa:	4620      	mov	r0, r4
 80041ac:	f00b f812 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonClose);
 80041b0:	4641      	mov	r1, r8
 80041b2:	4620      	mov	r0, r4
 80041b4:	f00b f80e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 80041b8:	4651      	mov	r1, sl
 80041ba:	4620      	mov	r0, r4
 80041bc:	f00b f80a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key1);
 80041c0:	ee18 1a10 	vmov	r1, s16
 80041c4:	4620      	mov	r0, r4
 80041c6:	f00b f805 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key2);
 80041ca:	ee18 1a90 	vmov	r1, s17
 80041ce:	4620      	mov	r0, r4
 80041d0:	f00b f800 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key3);
 80041d4:	ee19 1a10 	vmov	r1, s18
 80041d8:	4620      	mov	r0, r4
 80041da:	f00a fffb 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key4);
 80041de:	ee19 1a90 	vmov	r1, s19
 80041e2:	4620      	mov	r0, r4
 80041e4:	f00a fff6 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key5);
 80041e8:	ee1a 1a10 	vmov	r1, s20
 80041ec:	4620      	mov	r0, r4
 80041ee:	f00a fff1 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key6);
 80041f2:	ee1a 1a90 	vmov	r1, s21
 80041f6:	4620      	mov	r0, r4
 80041f8:	f00a ffec 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key7);
 80041fc:	ee1b 1a10 	vmov	r1, s22
 8004200:	4620      	mov	r0, r4
 8004202:	f00a ffe7 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key8);
 8004206:	ee1b 1a90 	vmov	r1, s23
 800420a:	4620      	mov	r0, r4
 800420c:	f00a ffe2 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key9);
 8004210:	ee1c 1a10 	vmov	r1, s24
 8004214:	4620      	mov	r0, r4
 8004216:	f00a ffdd 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key10);
 800421a:	ee1c 1a90 	vmov	r1, s25
 800421e:	4620      	mov	r0, r4
 8004220:	f00a ffd8 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key11);
 8004224:	ee1d 1a10 	vmov	r1, s26
 8004228:	4620      	mov	r0, r4
 800422a:	f00a ffd3 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key12);
 800422e:	ee1d 1a90 	vmov	r1, s27
 8004232:	4620      	mov	r0, r4
 8004234:	f00a ffce 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 8004238:	4620      	mov	r0, r4
 800423a:	4639      	mov	r1, r7
 800423c:	f00a ffca 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004240:	4620      	mov	r0, r4
 8004242:	b011      	add	sp, #68	; 0x44
 8004244:	ecbd 8b0c 	vpop	{d8-d13}
 8004248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800424c:	ff0a0a0a 	.word	0xff0a0a0a
 8004250:	200200dc 	.word	0x200200dc
 8004254:	08025a74 	.word	0x08025a74
 8004258:	08025ab6 	.word	0x08025ab6
 800425c:	08025ae4 	.word	0x08025ae4
 8004260:	200200e0 	.word	0x200200e0
 8004264:	08025b2b 	.word	0x08025b2b
 8004268:	200200e8 	.word	0x200200e8
 800426c:	08025b7d 	.word	0x08025b7d
 8004270:	08025b88 	.word	0x08025b88
 8004274:	ff006699 	.word	0xff006699

08004278 <_ZN27CustomContainerTableLogBaseD1Ev>:

class CustomContainerTableLogBase : public touchgfx::Container
{
public:
    CustomContainerTableLogBase();
    virtual ~CustomContainerTableLogBase() {}
 8004278:	4770      	bx	lr

0800427a <_ZN27CustomContainerTableLogBase10initializeEv>:
}

void CustomContainerTableLogBase::initialize()
{

}
 800427a:	4770      	bx	lr

0800427c <_ZN27CustomContainerTableLogBaseD0Ev>:
 800427c:	b510      	push	{r4, lr}
 800427e:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004282:	4604      	mov	r4, r0
 8004284:	f01e fe12 	bl	8022eac <_ZdlPvj>
 8004288:	4620      	mov	r0, r4
 800428a:	bd10      	pop	{r4, pc}

0800428c <_ZN8touchgfx13BoxWithBorderC1Ev>:
    BoxWithBorder()
 800428c:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 800428e:	2226      	movs	r2, #38	; 0x26
 8004290:	4604      	mov	r4, r0
 8004292:	2100      	movs	r1, #0
 8004294:	f01f f8de 	bl	8023454 <memset>
 8004298:	4620      	mov	r0, r4
 800429a:	f7fd ffe9 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800429e:	23ff      	movs	r3, #255	; 0xff
        : Box(), borderColor(0), borderSize(0)
 80042a0:	4a04      	ldr	r2, [pc, #16]	; (80042b4 <_ZN8touchgfx13BoxWithBorderC1Ev+0x28>)
 80042a2:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 80042a6:	2300      	movs	r3, #0
 80042a8:	62a3      	str	r3, [r4, #40]	; 0x28
 80042aa:	6022      	str	r2, [r4, #0]
 80042ac:	62e3      	str	r3, [r4, #44]	; 0x2c
 80042ae:	8623      	strh	r3, [r4, #48]	; 0x30
    }
 80042b0:	4620      	mov	r0, r4
 80042b2:	bd10      	pop	{r4, pc}
 80042b4:	0802827c 	.word	0x0802827c

080042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80042b8:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80042ba:	2226      	movs	r2, #38	; 0x26
 80042bc:	4604      	mov	r4, r0
 80042be:	2100      	movs	r1, #0
 80042c0:	f01f f8c8 	bl	8023454 <memset>
 80042c4:	4620      	mov	r0, r4
 80042c6:	f7fd ffd3 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80042ca:	4b08      	ldr	r3, [pc, #32]	; (80042ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x34>)
 80042cc:	62a3      	str	r3, [r4, #40]	; 0x28
 80042ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80042d2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80042d4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80042d8:	2300      	movs	r3, #0
 80042da:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextArea(), wildcard(0)
 80042de:	4a04      	ldr	r2, [pc, #16]	; (80042f0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x38>)
 80042e0:	8723      	strh	r3, [r4, #56]	; 0x38
 80042e2:	6022      	str	r2, [r4, #0]
 80042e4:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80042e6:	4620      	mov	r0, r4
 80042e8:	bd10      	pop	{r4, pc}
 80042ea:	bf00      	nop
 80042ec:	08025b88 	.word	0x08025b88
 80042f0:	080281d4 	.word	0x080281d4

080042f4 <_ZN27CustomContainerTableLogBaseC1Ev>:
CustomContainerTableLogBase::CustomContainerTableLogBase()
 80042f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042f8:	ed2d 8b10 	vpush	{d8-d15}
 80042fc:	4604      	mov	r4, r0
 80042fe:	b087      	sub	sp, #28
 8004300:	f7fd ffb6 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8004304:	4622      	mov	r2, r4
 8004306:	2500      	movs	r5, #0
 8004308:	4b8e      	ldr	r3, [pc, #568]	; (8004544 <_ZN27CustomContainerTableLogBaseC1Ev+0x250>)
 800430a:	62a5      	str	r5, [r4, #40]	; 0x28
 800430c:	f842 3b2c 	str.w	r3, [r2], #44
 8004310:	4610      	mov	r0, r2
 8004312:	ee08 2a10 	vmov	s16, r2
 8004316:	f7ff ffb9 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800431a:	f104 0360 	add.w	r3, r4, #96	; 0x60
 800431e:	4618      	mov	r0, r3
 8004320:	ee0d 3a10 	vmov	s26, r3
 8004324:	f7ff ffb2 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004328:	f104 0394 	add.w	r3, r4, #148	; 0x94
 800432c:	4618      	mov	r0, r3
 800432e:	ee0d 3a90 	vmov	s27, r3
 8004332:	f7ff ffab 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004336:	f104 03c8 	add.w	r3, r4, #200	; 0xc8
 800433a:	4618      	mov	r0, r3
 800433c:	ee0e 3a10 	vmov	s28, r3
 8004340:	f7ff ffa4 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004344:	f104 03fc 	add.w	r3, r4, #252	; 0xfc
 8004348:	4618      	mov	r0, r3
 800434a:	ee0e 3a90 	vmov	s29, r3
 800434e:	f7ff ff9d 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004352:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8004356:	4618      	mov	r0, r3
 8004358:	ee0f 3a10 	vmov	s30, r3
 800435c:	f7ff ff96 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004360:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8004364:	4618      	mov	r0, r3
 8004366:	ee0f 3a90 	vmov	s31, r3
 800436a:	f7ff ff8f 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800436e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8004372:	4618      	mov	r0, r3
 8004374:	9302      	str	r3, [sp, #8]
 8004376:	f7ff ff89 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800437a:	f504 73e6 	add.w	r3, r4, #460	; 0x1cc
 800437e:	4618      	mov	r0, r3
 8004380:	9303      	str	r3, [sp, #12]
 8004382:	f7ff ff83 	bl	800428c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004386:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800438a:	4618      	mov	r0, r3
 800438c:	ee08 3a90 	vmov	s17, r3
 8004390:	f7ff ff92 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004394:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004398:	4618      	mov	r0, r3
 800439a:	ee09 3a10 	vmov	s18, r3
 800439e:	f7ff ff8b 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043a2:	f504 7320 	add.w	r3, r4, #640	; 0x280
 80043a6:	4618      	mov	r0, r3
 80043a8:	ee09 3a90 	vmov	s19, r3
 80043ac:	f7ff ff84 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043b0:	f504 7330 	add.w	r3, r4, #704	; 0x2c0
 80043b4:	4618      	mov	r0, r3
 80043b6:	ee0a 3a10 	vmov	s20, r3
 80043ba:	f7ff ff7d 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043be:	f504 7340 	add.w	r3, r4, #768	; 0x300
 80043c2:	4618      	mov	r0, r3
 80043c4:	ee0a 3a90 	vmov	s21, r3
 80043c8:	f7ff ff76 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043cc:	f504 7350 	add.w	r3, r4, #832	; 0x340
 80043d0:	4618      	mov	r0, r3
 80043d2:	ee0b 3a10 	vmov	s22, r3
 80043d6:	f7ff ff6f 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043da:	f504 7360 	add.w	r3, r4, #896	; 0x380
 80043de:	4618      	mov	r0, r3
 80043e0:	ee0b 3a90 	vmov	s23, r3
 80043e4:	f7ff ff68 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043e8:	f504 7370 	add.w	r3, r4, #960	; 0x3c0
 80043ec:	4618      	mov	r0, r3
 80043ee:	ee0c 3a10 	vmov	s24, r3
 80043f2:	f7ff ff61 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043f6:	f504 6380 	add.w	r3, r4, #1024	; 0x400
 80043fa:	4618      	mov	r0, r3
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 80043fc:	2714      	movs	r7, #20
CustomContainerTableLogBase::CustomContainerTableLogBase()
 80043fe:	ee0c 3a90 	vmov	s25, r3
 8004402:	f7ff ff59 	bl	80042b8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004406:	4b50      	ldr	r3, [pc, #320]	; (8004548 <_ZN27CustomContainerTableLogBaseC1Ev+0x254>)
 8004408:	60a3      	str	r3, [r4, #8]
        borderColor = color;
 800440a:	f04f 39ff 	mov.w	r9, #4294967295
        borderSize = size;
 800440e:	f04f 0801 	mov.w	r8, #1
        borderColor = color;
 8004412:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 8004416:	ee18 0a10 	vmov	r0, s16
 800441a:	2396      	movs	r3, #150	; 0x96
 800441c:	462a      	mov	r2, r5
 800441e:	4629      	mov	r1, r5
 8004420:	9700      	str	r7, [sp, #0]
 8004422:	f7fe fa0b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004426:	e9c4 9615 	strd	r9, r6, [r4, #84]	; 0x54
    boxWithBorderChan.setPosition(150, 0, 50, 20);
 800442a:	ee1d 0a10 	vmov	r0, s26
 800442e:	2332      	movs	r3, #50	; 0x32
 8004430:	462a      	mov	r2, r5
 8004432:	2196      	movs	r1, #150	; 0x96
        borderSize = size;
 8004434:	f8a4 805c 	strh.w	r8, [r4, #92]	; 0x5c
 8004438:	9700      	str	r7, [sp, #0]
 800443a:	f7fe f9ff 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800443e:	e9c4 9622 	strd	r9, r6, [r4, #136]	; 0x88
    boxWithBorderTypeChan.setPosition(200, 0, 100, 20);
 8004442:	ee1d 0a90 	vmov	r0, s27
 8004446:	2364      	movs	r3, #100	; 0x64
 8004448:	462a      	mov	r2, r5
 800444a:	21c8      	movs	r1, #200	; 0xc8
        borderSize = size;
 800444c:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 8004450:	9700      	str	r7, [sp, #0]
 8004452:	f7fe f9f3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004456:	e9c4 962f 	strd	r9, r6, [r4, #188]	; 0xbc
    boxWithBorderStLoop.setPosition(300, 0, 100, 20);
 800445a:	ee1e 0a10 	vmov	r0, s28
 800445e:	2364      	movs	r3, #100	; 0x64
 8004460:	462a      	mov	r2, r5
 8004462:	f44f 7196 	mov.w	r1, #300	; 0x12c
        borderSize = size;
 8004466:	f8a4 80c4 	strh.w	r8, [r4, #196]	; 0xc4
 800446a:	9700      	str	r7, [sp, #0]
 800446c:	f7fe f9e6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004470:	e9c4 963c 	strd	r9, r6, [r4, #240]	; 0xf0
    boxWithBorderConc.setPosition(400, 0, 50, 20);
 8004474:	ee1e 0a90 	vmov	r0, s29
 8004478:	2332      	movs	r3, #50	; 0x32
 800447a:	462a      	mov	r2, r5
 800447c:	f44f 71c8 	mov.w	r1, #400	; 0x190
        borderSize = size;
 8004480:	f8a4 80f8 	strh.w	r8, [r4, #248]	; 0xf8
 8004484:	9700      	str	r7, [sp, #0]
 8004486:	f7fe f9d9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800448a:	e9c4 9649 	strd	r9, r6, [r4, #292]	; 0x124
    boxWithBorderUnit.setPosition(450, 0, 50, 20);
 800448e:	ee1f 0a10 	vmov	r0, s30
 8004492:	2332      	movs	r3, #50	; 0x32
 8004494:	462a      	mov	r2, r5
 8004496:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
        borderSize = size;
 800449a:	f8a4 812c 	strh.w	r8, [r4, #300]	; 0x12c
 800449e:	9700      	str	r7, [sp, #0]
 80044a0:	f7fe f9cc 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80044a4:	e9c4 9656 	strd	r9, r6, [r4, #344]	; 0x158
    boxWithBorderStCur.setPosition(500, 0, 100, 20);
 80044a8:	ee1f 0a90 	vmov	r0, s31
 80044ac:	2364      	movs	r3, #100	; 0x64
 80044ae:	462a      	mov	r2, r5
 80044b0:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
        borderSize = size;
 80044b4:	f8a4 8160 	strh.w	r8, [r4, #352]	; 0x160
 80044b8:	9700      	str	r7, [sp, #0]
 80044ba:	f7fe f9bf 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80044be:	e9c4 9663 	strd	r9, r6, [r4, #396]	; 0x18c
    boxWithBorderErr.setPosition(600, 0, 50, 20);
 80044c2:	9802      	ldr	r0, [sp, #8]
        borderSize = size;
 80044c4:	f8a4 8194 	strh.w	r8, [r4, #404]	; 0x194
 80044c8:	2332      	movs	r3, #50	; 0x32
 80044ca:	462a      	mov	r2, r5
 80044cc:	f44f 7116 	mov.w	r1, #600	; 0x258
 80044d0:	9700      	str	r7, [sp, #0]
 80044d2:	f7fe f9b3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    textAreaDataTime.setPosition(0, 0, 150, 19);
 80044d6:	f04f 0a13 	mov.w	sl, #19
        borderColor = color;
 80044da:	e9c4 9670 	strd	r9, r6, [r4, #448]	; 0x1c0
    boxWithBorderGas.setPosition(650, 0, 100, 20);
 80044de:	9803      	ldr	r0, [sp, #12]
        borderSize = size;
 80044e0:	f8a4 81c8 	strh.w	r8, [r4, #456]	; 0x1c8
 80044e4:	2364      	movs	r3, #100	; 0x64
 80044e6:	462a      	mov	r2, r5
 80044e8:	f240 218a 	movw	r1, #650	; 0x28a
 80044ec:	9700      	str	r7, [sp, #0]
 80044ee:	f7fe f9a5 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80044f2:	e9c4 967d 	strd	r9, r6, [r4, #500]	; 0x1f4
    textAreaDataTime.setPosition(0, 0, 150, 19);
 80044f6:	2396      	movs	r3, #150	; 0x96
 80044f8:	ee18 0a90 	vmov	r0, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044fc:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8004560 <_ZN27CustomContainerTableLogBaseC1Ev+0x26c>
        borderSize = size;
 8004500:	f8a4 81fc 	strh.w	r8, [r4, #508]	; 0x1fc
 8004504:	f8cd a000 	str.w	sl, [sp]
 8004508:	462a      	mov	r2, r5
 800450a:	4629      	mov	r1, r5
 800450c:	f7fe f996 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004510:	4b0e      	ldr	r3, [pc, #56]	; (800454c <_ZN27CustomContainerTableLogBaseC1Ev+0x258>)
 8004512:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
 8004516:	f8d9 3000 	ldr.w	r3, [r9]
        linespace = space;
 800451a:	f8a4 8234 	strh.w	r8, [r4, #564]	; 0x234
    Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WIXH).getText());
 800451e:	f504 6b88 	add.w	fp, r4, #1088	; 0x440
 8004522:	b92b      	cbnz	r3, 8004530 <_ZN27CustomContainerTableLogBaseC1Ev+0x23c>
 8004524:	4b0a      	ldr	r3, [pc, #40]	; (8004550 <_ZN27CustomContainerTableLogBaseC1Ev+0x25c>)
 8004526:	4a0b      	ldr	r2, [pc, #44]	; (8004554 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 8004528:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800452a:	480b      	ldr	r0, [pc, #44]	; (8004558 <_ZN27CustomContainerTableLogBaseC1Ev+0x264>)
 800452c:	f01e fcec 	bl	8022f08 <__assert_func>
 8004530:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004564 <_ZN27CustomContainerTableLogBaseC1Ev+0x270>
 8004534:	f8b8 3000 	ldrh.w	r3, [r8]
 8004538:	2b24      	cmp	r3, #36	; 0x24
 800453a:	d815      	bhi.n	8004568 <_ZN27CustomContainerTableLogBaseC1Ev+0x274>
 800453c:	4b07      	ldr	r3, [pc, #28]	; (800455c <_ZN27CustomContainerTableLogBaseC1Ev+0x268>)
 800453e:	4a05      	ldr	r2, [pc, #20]	; (8004554 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 8004540:	21af      	movs	r1, #175	; 0xaf
 8004542:	e7f2      	b.n	800452a <_ZN27CustomContainerTableLogBaseC1Ev+0x236>
 8004544:	08025fd0 	.word	0x08025fd0
 8004548:	001402ee 	.word	0x001402ee
 800454c:	ff030202 	.word	0xff030202
 8004550:	08025a74 	.word	0x08025a74
 8004554:	08025ab6 	.word	0x08025ab6
 8004558:	08025ae4 	.word	0x08025ae4
 800455c:	08025b2b 	.word	0x08025b2b
 8004560:	200200dc 	.word	0x200200dc
 8004564:	200200e0 	.word	0x200200e0
        return texts->getText(typedTextId);
 8004568:	4be2      	ldr	r3, [pc, #904]	; (80048f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 800456a:	2124      	movs	r1, #36	; 0x24
 800456c:	6818      	ldr	r0, [r3, #0]
 800456e:	f002 f9e1 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8004572:	4ae1      	ldr	r2, [pc, #900]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004574:	4603      	mov	r3, r0
 8004576:	4639      	mov	r1, r7
 8004578:	4658      	mov	r0, fp
 800457a:	f012 fb5b 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800457e:	4fdf      	ldr	r7, [pc, #892]	; (80048fc <_ZN27CustomContainerTableLogBaseC1Ev+0x608>)
        wildcard = value;
 8004580:	f8c4 b23c 	str.w	fp, [r4, #572]	; 0x23c
 8004584:	2323      	movs	r3, #35	; 0x23
    textAreaDataTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LBEI));
 8004586:	ee18 0a90 	vmov	r0, s17
 800458a:	a904      	add	r1, sp, #16
 800458c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004590:	9704      	str	r7, [sp, #16]
 8004592:	f00c fbb6 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaNumChan.setPosition(150, 0, 50, 19);
 8004596:	2332      	movs	r3, #50	; 0x32
 8004598:	ee19 0a10 	vmov	r0, s18
 800459c:	f8cd a000 	str.w	sl, [sp]
 80045a0:	462a      	mov	r2, r5
 80045a2:	2196      	movs	r1, #150	; 0x96
 80045a4:	f7fe f94a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80045a8:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 80045ac:	f8c4 6270 	str.w	r6, [r4, #624]	; 0x270
        linespace = space;
 80045b0:	f8a4 5274 	strh.w	r5, [r4, #628]	; 0x274
    Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_53KN).getText());
 80045b4:	f504 6b8d 	add.w	fp, r4, #1128	; 0x468
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d0b3      	beq.n	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80045bc:	f8b8 3000 	ldrh.w	r3, [r8]
 80045c0:	2b22      	cmp	r3, #34	; 0x22
 80045c2:	d9bb      	bls.n	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80045c4:	4bcb      	ldr	r3, [pc, #812]	; (80048f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 80045c6:	2122      	movs	r1, #34	; 0x22
 80045c8:	6818      	ldr	r0, [r3, #0]
 80045ca:	f002 f9b3 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80045ce:	4aca      	ldr	r2, [pc, #808]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80045d0:	4603      	mov	r3, r0
 80045d2:	2105      	movs	r1, #5
 80045d4:	4658      	mov	r0, fp
 80045d6:	f012 fb2d 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80045da:	2321      	movs	r3, #33	; 0x21
    textAreaNumChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L982));
 80045dc:	ee19 0a10 	vmov	r0, s18
 80045e0:	f8c4 b27c 	str.w	fp, [r4, #636]	; 0x27c
 80045e4:	a904      	add	r1, sp, #16
 80045e6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80045ea:	9704      	str	r7, [sp, #16]
 80045ec:	f00c fb89 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaTypeChan.setPosition(200, 0, 100, 19);
 80045f0:	2364      	movs	r3, #100	; 0x64
 80045f2:	ee19 0a90 	vmov	r0, s19
 80045f6:	f8cd a000 	str.w	sl, [sp]
 80045fa:	462a      	mov	r2, r5
 80045fc:	21c8      	movs	r1, #200	; 0xc8
 80045fe:	f7fe f91d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004602:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004606:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
        linespace = space;
 800460a:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
    Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P13T).getText());
 800460e:	f204 4b72 	addw	fp, r4, #1138	; 0x472
 8004612:	2b00      	cmp	r3, #0
 8004614:	d086      	beq.n	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004616:	f8b8 3000 	ldrh.w	r3, [r8]
 800461a:	2b26      	cmp	r3, #38	; 0x26
 800461c:	d98e      	bls.n	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800461e:	4bb5      	ldr	r3, [pc, #724]	; (80048f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004620:	2126      	movs	r1, #38	; 0x26
 8004622:	6818      	ldr	r0, [r3, #0]
 8004624:	f002 f986 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8004628:	4ab3      	ldr	r2, [pc, #716]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800462a:	4603      	mov	r3, r0
 800462c:	210a      	movs	r1, #10
 800462e:	4658      	mov	r0, fp
 8004630:	f012 fb00 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004634:	2325      	movs	r3, #37	; 0x25
    textAreaTypeChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOAO));
 8004636:	ee19 0a90 	vmov	r0, s19
 800463a:	f8c4 b2bc 	str.w	fp, [r4, #700]	; 0x2bc
 800463e:	a904      	add	r1, sp, #16
 8004640:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004644:	9704      	str	r7, [sp, #16]
 8004646:	f00c fb5c 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStLoop.setPosition(300, 0, 100, 19);
 800464a:	2364      	movs	r3, #100	; 0x64
 800464c:	ee1a 0a10 	vmov	r0, s20
 8004650:	f8cd a000 	str.w	sl, [sp]
 8004654:	462a      	mov	r2, r5
 8004656:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800465a:	f7fe f8ef 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800465e:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004662:	f8c4 62f0 	str.w	r6, [r4, #752]	; 0x2f0
        linespace = space;
 8004666:	f8a4 52f4 	strh.w	r5, [r4, #756]	; 0x2f4
    Unicode::snprintf(textAreaStLoopBuffer, TEXTAREASTLOOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A188).getText());
 800466a:	f204 4b86 	addw	fp, r4, #1158	; 0x486
 800466e:	2b00      	cmp	r3, #0
 8004670:	f43f af58 	beq.w	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004674:	f8b8 3000 	ldrh.w	r3, [r8]
 8004678:	2b28      	cmp	r3, #40	; 0x28
 800467a:	f67f af5f 	bls.w	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800467e:	4b9d      	ldr	r3, [pc, #628]	; (80048f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004680:	2128      	movs	r1, #40	; 0x28
 8004682:	6818      	ldr	r0, [r3, #0]
 8004684:	f002 f956 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8004688:	4a9b      	ldr	r2, [pc, #620]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800468a:	4603      	mov	r3, r0
 800468c:	210a      	movs	r1, #10
 800468e:	4658      	mov	r0, fp
 8004690:	f012 fad0 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004694:	2327      	movs	r3, #39	; 0x27
    textAreaStLoop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I04R));
 8004696:	ee1a 0a10 	vmov	r0, s20
 800469a:	a904      	add	r1, sp, #16
 800469c:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
 80046a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80046a4:	9704      	str	r7, [sp, #16]
 80046a6:	f00c fb2c 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaConc.setPosition(400, 0, 50, 19);
 80046aa:	2332      	movs	r3, #50	; 0x32
 80046ac:	462a      	mov	r2, r5
 80046ae:	ee1a 0a90 	vmov	r0, s21
 80046b2:	f8cd a000 	str.w	sl, [sp]
 80046b6:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80046ba:	f7fe f8bf 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046be:	f8d9 3000 	ldr.w	r3, [r9]
 80046c2:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        this->color = color;
 80046c6:	f8c4 6330 	str.w	r6, [r4, #816]	; 0x330
    Unicode::snprintf(textAreaConcBuffer, TEXTAREACONC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QS1C).getText());
 80046ca:	f204 459a 	addw	r5, r4, #1178	; 0x49a
 80046ce:	2b00      	cmp	r3, #0
 80046d0:	f43f af28 	beq.w	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80046d4:	f8b8 3000 	ldrh.w	r3, [r8]
 80046d8:	2b2a      	cmp	r3, #42	; 0x2a
 80046da:	f67f af2f 	bls.w	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80046de:	f8df 9214 	ldr.w	r9, [pc, #532]	; 80048f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046e2:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8004904 <_ZN27CustomContainerTableLogBaseC1Ev+0x610>
        return texts->getText(typedTextId);
 80046e6:	f8d9 0000 	ldr.w	r0, [r9]
 80046ea:	212a      	movs	r1, #42	; 0x2a
 80046ec:	f002 f922 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80046f0:	4a81      	ldr	r2, [pc, #516]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80046f2:	4603      	mov	r3, r0
 80046f4:	210a      	movs	r1, #10
 80046f6:	4628      	mov	r0, r5
 80046f8:	f012 fa9c 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaUnit.setPosition(450, 0, 50, 19);
 80046fc:	f04f 0a13 	mov.w	sl, #19
        : typedTextId(id)
 8004700:	2329      	movs	r3, #41	; 0x29
    textAreaConc.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q6FU));
 8004702:	ee1a 0a90 	vmov	r0, s21
 8004706:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
 800470a:	a904      	add	r1, sp, #16
 800470c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004710:	9704      	str	r7, [sp, #16]
 8004712:	f00c faf6 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaUnit.setPosition(450, 0, 50, 19);
 8004716:	2332      	movs	r3, #50	; 0x32
 8004718:	ee1b 0a10 	vmov	r0, s22
 800471c:	f8cd a000 	str.w	sl, [sp]
 8004720:	2200      	movs	r2, #0
 8004722:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 8004726:	f7fe f889 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800472a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800472e:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004732:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004736:	2500      	movs	r5, #0
        : typedTextId(id)
 8004738:	463e      	mov	r6, r7
 800473a:	f8a4 5374 	strh.w	r5, [r4, #884]	; 0x374
    Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LNEH).getText());
 800473e:	f204 4bae 	addw	fp, r4, #1198	; 0x4ae
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004742:	2b00      	cmp	r3, #0
 8004744:	f43f aeee 	beq.w	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004748:	4f6d      	ldr	r7, [pc, #436]	; (8004900 <_ZN27CustomContainerTableLogBaseC1Ev+0x60c>)
 800474a:	883b      	ldrh	r3, [r7, #0]
 800474c:	2b2c      	cmp	r3, #44	; 0x2c
 800474e:	f67f aef5 	bls.w	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004752:	212c      	movs	r1, #44	; 0x2c
 8004754:	f8d9 0000 	ldr.w	r0, [r9]
 8004758:	f002 f8ec 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 800475c:	4a66      	ldr	r2, [pc, #408]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800475e:	4603      	mov	r3, r0
 8004760:	210a      	movs	r1, #10
 8004762:	4658      	mov	r0, fp
 8004764:	f012 fa66 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004768:	232b      	movs	r3, #43	; 0x2b
    textAreaUnit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YDSR));
 800476a:	ee1b 0a10 	vmov	r0, s22
 800476e:	f8c4 b37c 	str.w	fp, [r4, #892]	; 0x37c
 8004772:	a904      	add	r1, sp, #16
 8004774:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004778:	9604      	str	r6, [sp, #16]
 800477a:	f00c fac2 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStCur.setPosition(500, 0, 100, 19);
 800477e:	2364      	movs	r3, #100	; 0x64
 8004780:	ee1b 0a90 	vmov	r0, s23
 8004784:	f8cd a000 	str.w	sl, [sp]
 8004788:	462a      	mov	r2, r5
 800478a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800478e:	f7fe f855 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004792:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004796:	f8c4 33b0 	str.w	r3, [r4, #944]	; 0x3b0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800479a:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 800479e:	f8a4 53b4 	strh.w	r5, [r4, #948]	; 0x3b4
    Unicode::snprintf(textAreaStCurBuffer, TEXTAREASTCUR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_83ZL).getText());
 80047a2:	f204 4bc2 	addw	fp, r4, #1218	; 0x4c2
 80047a6:	2b00      	cmp	r3, #0
 80047a8:	f43f aebc 	beq.w	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80047ac:	883b      	ldrh	r3, [r7, #0]
 80047ae:	2b2e      	cmp	r3, #46	; 0x2e
 80047b0:	f67f aec4 	bls.w	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80047b4:	212e      	movs	r1, #46	; 0x2e
 80047b6:	f8d9 0000 	ldr.w	r0, [r9]
 80047ba:	f002 f8bb 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80047be:	4a4e      	ldr	r2, [pc, #312]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80047c0:	4603      	mov	r3, r0
 80047c2:	210a      	movs	r1, #10
 80047c4:	4658      	mov	r0, fp
 80047c6:	f012 fa35 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80047ca:	232d      	movs	r3, #45	; 0x2d
    textAreaStCur.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJ1U));
 80047cc:	ee1b 0a90 	vmov	r0, s23
 80047d0:	f8c4 b3bc 	str.w	fp, [r4, #956]	; 0x3bc
 80047d4:	a904      	add	r1, sp, #16
 80047d6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80047da:	9604      	str	r6, [sp, #16]
 80047dc:	f00c fa91 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaErr.setPosition(600, 0, 50, 19);
 80047e0:	2332      	movs	r3, #50	; 0x32
 80047e2:	ee1c 0a10 	vmov	r0, s24
 80047e6:	f8cd a000 	str.w	sl, [sp]
 80047ea:	462a      	mov	r2, r5
 80047ec:	f44f 7116 	mov.w	r1, #600	; 0x258
 80047f0:	f7fe f824 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80047f4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047f8:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047fc:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004800:	f8a4 53f4 	strh.w	r5, [r4, #1012]	; 0x3f4
    Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_60JG).getText());
 8004804:	f204 4bd6 	addw	fp, r4, #1238	; 0x4d6
 8004808:	2b00      	cmp	r3, #0
 800480a:	f43f ae8b 	beq.w	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800480e:	883b      	ldrh	r3, [r7, #0]
 8004810:	2b30      	cmp	r3, #48	; 0x30
 8004812:	f67f ae93 	bls.w	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004816:	2130      	movs	r1, #48	; 0x30
 8004818:	f8d9 0000 	ldr.w	r0, [r9]
 800481c:	f002 f88a 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8004820:	4a35      	ldr	r2, [pc, #212]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004822:	4603      	mov	r3, r0
 8004824:	210a      	movs	r1, #10
 8004826:	4658      	mov	r0, fp
 8004828:	f012 fa04 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800482c:	232f      	movs	r3, #47	; 0x2f
    textAreaErr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXKK));
 800482e:	ee1c 0a10 	vmov	r0, s24
 8004832:	a904      	add	r1, sp, #16
 8004834:	f8c4 b3fc 	str.w	fp, [r4, #1020]	; 0x3fc
 8004838:	f8ad 3014 	strh.w	r3, [sp, #20]
 800483c:	9604      	str	r6, [sp, #16]
 800483e:	f00c fa60 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaGas.setPosition(650, 0, 100, 19);
 8004842:	2364      	movs	r3, #100	; 0x64
 8004844:	462a      	mov	r2, r5
 8004846:	ee1c 0a90 	vmov	r0, s25
 800484a:	f8cd a000 	str.w	sl, [sp]
 800484e:	f240 218a 	movw	r1, #650	; 0x28a
 8004852:	f7fd fff3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004856:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800485a:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800485e:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004862:	f8a4 5434 	strh.w	r5, [r4, #1076]	; 0x434
    Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A04E).getText());
 8004866:	f204 45ea 	addw	r5, r4, #1258	; 0x4ea
 800486a:	2b00      	cmp	r3, #0
 800486c:	f43f ae5a 	beq.w	8004524 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004870:	883b      	ldrh	r3, [r7, #0]
 8004872:	2b32      	cmp	r3, #50	; 0x32
 8004874:	f67f ae62 	bls.w	800453c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004878:	f8d9 0000 	ldr.w	r0, [r9]
 800487c:	2132      	movs	r1, #50	; 0x32
 800487e:	f002 f859 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8004882:	4a1d      	ldr	r2, [pc, #116]	; (80048f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004884:	4603      	mov	r3, r0
 8004886:	210a      	movs	r1, #10
 8004888:	4628      	mov	r0, r5
 800488a:	f012 f9d3 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800488e:	2331      	movs	r3, #49	; 0x31
    textAreaGas.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JQ77));
 8004890:	ee1c 0a90 	vmov	r0, s25
 8004894:	a904      	add	r1, sp, #16
 8004896:	f8c4 543c 	str.w	r5, [r4, #1084]	; 0x43c
 800489a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800489e:	9604      	str	r6, [sp, #16]
 80048a0:	f00c fa2f 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxWithBorderDataTime);
 80048a4:	ee18 1a10 	vmov	r1, s16
 80048a8:	4620      	mov	r0, r4
 80048aa:	f00a fc93 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderChan);
 80048ae:	ee1d 1a10 	vmov	r1, s26
 80048b2:	4620      	mov	r0, r4
 80048b4:	f00a fc8e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderTypeChan);
 80048b8:	ee1d 1a90 	vmov	r1, s27
 80048bc:	4620      	mov	r0, r4
 80048be:	f00a fc89 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStLoop);
 80048c2:	ee1e 1a10 	vmov	r1, s28
 80048c6:	4620      	mov	r0, r4
 80048c8:	f00a fc84 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderConc);
 80048cc:	ee1e 1a90 	vmov	r1, s29
 80048d0:	4620      	mov	r0, r4
 80048d2:	f00a fc7f 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderUnit);
 80048d6:	ee1f 1a10 	vmov	r1, s30
 80048da:	4620      	mov	r0, r4
 80048dc:	f00a fc7a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStCur);
 80048e0:	ee1f 1a90 	vmov	r1, s31
 80048e4:	4620      	mov	r0, r4
 80048e6:	f00a fc75 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderErr);
 80048ea:	9902      	ldr	r1, [sp, #8]
 80048ec:	4620      	mov	r0, r4
 80048ee:	f00a fc71 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80048f2:	e009      	b.n	8004908 <_ZN27CustomContainerTableLogBaseC1Ev+0x614>
 80048f4:	200200e8 	.word	0x200200e8
 80048f8:	08025b7d 	.word	0x08025b7d
 80048fc:	08025b88 	.word	0x08025b88
 8004900:	200200e0 	.word	0x200200e0
 8004904:	200200dc 	.word	0x200200dc
    add(boxWithBorderGas);
 8004908:	9903      	ldr	r1, [sp, #12]
 800490a:	4620      	mov	r0, r4
 800490c:	f00a fc62 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaDataTime);
 8004910:	ee18 1a90 	vmov	r1, s17
 8004914:	4620      	mov	r0, r4
 8004916:	f00a fc5d 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaNumChan);
 800491a:	ee19 1a10 	vmov	r1, s18
 800491e:	4620      	mov	r0, r4
 8004920:	f00a fc58 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaTypeChan);
 8004924:	ee19 1a90 	vmov	r1, s19
 8004928:	4620      	mov	r0, r4
 800492a:	f00a fc53 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStLoop);
 800492e:	ee1a 1a10 	vmov	r1, s20
 8004932:	4620      	mov	r0, r4
 8004934:	f00a fc4e 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaConc);
 8004938:	ee1a 1a90 	vmov	r1, s21
 800493c:	4620      	mov	r0, r4
 800493e:	f00a fc49 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaUnit);
 8004942:	ee1b 1a10 	vmov	r1, s22
 8004946:	4620      	mov	r0, r4
 8004948:	f00a fc44 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStCur);
 800494c:	ee1b 1a90 	vmov	r1, s23
 8004950:	4620      	mov	r0, r4
 8004952:	f00a fc3f 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaErr);
 8004956:	ee1c 1a10 	vmov	r1, s24
 800495a:	4620      	mov	r0, r4
 800495c:	f00a fc3a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaGas);
 8004960:	4620      	mov	r0, r4
 8004962:	ee1c 1a90 	vmov	r1, s25
 8004966:	f00a fc35 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800496a:	4620      	mov	r0, r4
 800496c:	b007      	add	sp, #28
 800496e:	ecbd 8b10 	vpop	{d8-d15}
 8004972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004976:	bf00      	nop

08004978 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8004978:	4770      	bx	lr

0800497a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800497a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800497e:	6808      	ldr	r0, [r1, #0]
 8004980:	6849      	ldr	r1, [r1, #4]
 8004982:	c303      	stmia	r3!, {r0, r1}
    }
 8004984:	4770      	bx	lr

08004986 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004986:	4770      	bx	lr

08004988 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004988:	4770      	bx	lr

0800498a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800498a:	6041      	str	r1, [r0, #4]
    }
 800498c:	4770      	bx	lr

0800498e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800498e:	4770      	bx	lr

08004990 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004990:	2301      	movs	r3, #1
 8004992:	7203      	strb	r3, [r0, #8]
    }
 8004994:	4770      	bx	lr

08004996 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004996:	4770      	bx	lr

08004998 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004998:	4770      	bx	lr

0800499a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
    virtual void execute()
 800499a:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 800499c:	68c2      	ldr	r2, [r0, #12]
 800499e:	6841      	ldr	r1, [r0, #4]
 80049a0:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80049a2:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80049a4:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80049a8:	07d2      	lsls	r2, r2, #31
 80049aa:	bf48      	it	mi
 80049ac:	590a      	ldrmi	r2, [r1, r4]
 80049ae:	689b      	ldr	r3, [r3, #8]
    }
 80049b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80049b4:	bf48      	it	mi
 80049b6:	58d3      	ldrmi	r3, [r2, r3]
 80049b8:	4718      	bx	r3

080049ba <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 80049ba:	6843      	ldr	r3, [r0, #4]
 80049bc:	b12b      	cbz	r3, 80049ca <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80049be:	6883      	ldr	r3, [r0, #8]
 80049c0:	b92b      	cbnz	r3, 80049ce <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80049c2:	68c0      	ldr	r0, [r0, #12]
 80049c4:	f000 0001 	and.w	r0, r0, #1
 80049c8:	4770      	bx	lr
 80049ca:	4618      	mov	r0, r3
 80049cc:	4770      	bx	lr
 80049ce:	2001      	movs	r0, #1
    }
 80049d0:	4770      	bx	lr

080049d2 <_ZN8touchgfx12NoTransitionD0Ev>:
 80049d2:	b510      	push	{r4, lr}
 80049d4:	210c      	movs	r1, #12
 80049d6:	4604      	mov	r4, r0
 80049d8:	f01e fa68 	bl	8022eac <_ZdlPvj>
 80049dc:	4620      	mov	r0, r4
 80049de:	bd10      	pop	{r4, pc}

080049e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80049e0:	b510      	push	{r4, lr}
 80049e2:	2110      	movs	r1, #16
 80049e4:	4604      	mov	r4, r0
 80049e6:	f01e fa61 	bl	8022eac <_ZdlPvj>
 80049ea:	4620      	mov	r0, r4
 80049ec:	bd10      	pop	{r4, pc}

080049ee <_ZN23FrontendApplicationBaseD0Ev>:
 80049ee:	b510      	push	{r4, lr}
 80049f0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80049f4:	4604      	mov	r4, r0
 80049f6:	f01e fa59 	bl	8022eac <_ZdlPvj>
 80049fa:	4620      	mov	r0, r4
 80049fc:	bd10      	pop	{r4, pc}

080049fe <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80049fe:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8004a00:	f00e fc70 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 8004a04:	6803      	ldr	r3, [r0, #0]
    }
 8004a06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8004a0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a0c:	4718      	bx	r3

08004a0e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004a0e:	b510      	push	{r4, lr}
 8004a10:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004a12:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8004a16:	b158      	cbz	r0, 8004a30 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004a18:	6803      	ldr	r3, [r0, #0]
 8004a1a:	68db      	ldr	r3, [r3, #12]
 8004a1c:	4798      	blx	r3
 8004a1e:	b138      	cbz	r0, 8004a30 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8004a20:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8004a24:	6803      	ldr	r3, [r0, #0]
 8004a26:	689b      	ldr	r3, [r3, #8]
 8004a28:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004a2a:	2300      	movs	r3, #0
 8004a2c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8004a30:	bd10      	pop	{r4, pc}
	...

08004a34 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a36:	4604      	mov	r4, r0
 8004a38:	4617      	mov	r7, r2
 8004a3a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004a3c:	f00e fcba 	bl	80133b4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004a40:	4b10      	ldr	r3, [pc, #64]	; (8004a84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8004a42:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8004a44:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8004a48:	4e0f      	ldr	r6, [pc, #60]	; (8004a88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8004a4a:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8004a4c:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8004a50:	4b0e      	ldr	r3, [pc, #56]	; (8004a8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8004a52:	6830      	ldr	r0, [r6, #0]
 8004a54:	6023      	str	r3, [r4, #0]
 8004a56:	4b0e      	ldr	r3, [pc, #56]	; (8004a90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004a58:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004a5c:	6803      	ldr	r3, [r0, #0]
 8004a5e:	4629      	mov	r1, r5
 8004a60:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004a62:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8004a66:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004a68:	4628      	mov	r0, r5
 8004a6a:	f001 ff27 	bl	80068bc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004a6e:	6833      	ldr	r3, [r6, #0]
 8004a70:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8004a74:	b10a      	cbz	r2, 8004a7a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8004a76:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004a78:	b900      	cbnz	r0, 8004a7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8004a7a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004a7c:	f017 f8c1 	bl	801bc02 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8004a80:	4620      	mov	r0, r4
 8004a82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a84:	200200d8 	.word	0x200200d8
 8004a88:	2002008c 	.word	0x2002008c
 8004a8c:	0802649c 	.word	0x0802649c
 8004a90:	08026484 	.word	0x08026484

08004a94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004a94:	4b06      	ldr	r3, [pc, #24]	; (8004ab0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8004a96:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004a9a:	2300      	movs	r3, #0
 8004a9c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004aa0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004aa4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004aa8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004aac:	4770      	bx	lr
 8004aae:	bf00      	nop
 8004ab0:	08004c15 	.word	0x08004c15

08004ab4 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8004ab4:	4b06      	ldr	r3, [pc, #24]	; (8004ad0 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8004ab6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004aba:	2300      	movs	r3, #0
 8004abc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004ac0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ac4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004ac8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004acc:	4770      	bx	lr
 8004ace:	bf00      	nop
 8004ad0:	08004d7d 	.word	0x08004d7d

08004ad4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004ad4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ad8:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ada:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004adc:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004ae0:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ae2:	6803      	ldr	r3, [r0, #0]
 8004ae4:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004ae6:	4688      	mov	r8, r1
 8004ae8:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004aea:	4798      	blx	r3
 8004aec:	f64d 7313 	movw	r3, #57107	; 0xdf13
 8004af0:	4298      	cmp	r0, r3
 8004af2:	d805      	bhi.n	8004b00 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8004af4:	4b41      	ldr	r3, [pc, #260]	; (8004bfc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8004af6:	4a42      	ldr	r2, [pc, #264]	; (8004c00 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004af8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004afa:	4842      	ldr	r0, [pc, #264]	; (8004c04 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004afc:	f01e fa04 	bl	8022f08 <__assert_func>
 8004b00:	6860      	ldr	r0, [r4, #4]
 8004b02:	6803      	ldr	r3, [r0, #0]
 8004b04:	6a1b      	ldr	r3, [r3, #32]
 8004b06:	4798      	blx	r3
 8004b08:	280f      	cmp	r0, #15
 8004b0a:	d803      	bhi.n	8004b14 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8004b0c:	4b3e      	ldr	r3, [pc, #248]	; (8004c08 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8004b0e:	4a3c      	ldr	r2, [pc, #240]	; (8004c00 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004b10:	21a4      	movs	r1, #164	; 0xa4
 8004b12:	e7f2      	b.n	8004afa <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b14:	68e0      	ldr	r0, [r4, #12]
 8004b16:	6803      	ldr	r3, [r0, #0]
 8004b18:	6a1b      	ldr	r3, [r3, #32]
 8004b1a:	4798      	blx	r3
 8004b1c:	280b      	cmp	r0, #11
 8004b1e:	d803      	bhi.n	8004b28 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8004b20:	4b3a      	ldr	r3, [pc, #232]	; (8004c0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004b22:	4a37      	ldr	r2, [pc, #220]	; (8004c00 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004b24:	21a5      	movs	r1, #165	; 0xa5
 8004b26:	e7e8      	b.n	8004afa <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8004b28:	f00e fbdc 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 8004b2c:	f00e fc28 	bl	8013380 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004b30:	f8d9 0000 	ldr.w	r0, [r9]
 8004b34:	b110      	cbz	r0, 8004b3c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8004b36:	6803      	ldr	r3, [r0, #0]
 8004b38:	68db      	ldr	r3, [r3, #12]
 8004b3a:	4798      	blx	r3
    if (*currentTrans)
 8004b3c:	f8d9 0000 	ldr.w	r0, [r9]
 8004b40:	b110      	cbz	r0, 8004b48 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8004b42:	6803      	ldr	r3, [r0, #0]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	4798      	blx	r3
    if (*currentScreen)
 8004b48:	6838      	ldr	r0, [r7, #0]
 8004b4a:	b110      	cbz	r0, 8004b52 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8004b4c:	6803      	ldr	r3, [r0, #0]
 8004b4e:	695b      	ldr	r3, [r3, #20]
 8004b50:	4798      	blx	r3
    if (*currentPresenter)
 8004b52:	f8d8 0000 	ldr.w	r0, [r8]
 8004b56:	b110      	cbz	r0, 8004b5e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8004b58:	6803      	ldr	r3, [r0, #0]
 8004b5a:	685b      	ldr	r3, [r3, #4]
 8004b5c:	4798      	blx	r3
    if (*currentScreen)
 8004b5e:	6838      	ldr	r0, [r7, #0]
 8004b60:	b110      	cbz	r0, 8004b68 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8004b62:	6803      	ldr	r3, [r0, #0]
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	4798      	blx	r3
    if (*currentPresenter)
 8004b68:	f8d8 0000 	ldr.w	r0, [r8]
 8004b6c:	b110      	cbz	r0, 8004b74 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8004b6e:	6803      	ldr	r3, [r0, #0]
 8004b70:	689b      	ldr	r3, [r3, #8]
 8004b72:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b74:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004b76:	6803      	ldr	r3, [r0, #0]
 8004b78:	2100      	movs	r1, #0
 8004b7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b7c:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004b7e:	f04f 0b00 	mov.w	fp, #0
 8004b82:	4b23      	ldr	r3, [pc, #140]	; (8004c10 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004b84:	6003      	str	r3, [r0, #0]
 8004b86:	4605      	mov	r5, r0
 8004b88:	f8c0 b004 	str.w	fp, [r0, #4]
 8004b8c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b90:	68a0      	ldr	r0, [r4, #8]
 8004b92:	6803      	ldr	r3, [r0, #0]
 8004b94:	4659      	mov	r1, fp
 8004b96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b98:	4798      	blx	r3
 8004b9a:	4606      	mov	r6, r0
 8004b9c:	f002 fdf4 	bl	8007788 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ba0:	6860      	ldr	r0, [r4, #4]
 8004ba2:	6803      	ldr	r3, [r0, #0]
 8004ba4:	4659      	mov	r1, fp
 8004ba6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ba8:	4798      	blx	r3
 8004baa:	4631      	mov	r1, r6
 8004bac:	4604      	mov	r4, r0
 8004bae:	f002 fcef 	bl	8007590 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8004bb2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bb6:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8004bba:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004bbc:	b1e4      	cbz	r4, 8004bf8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 8004bbe:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004bc0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bc4:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004bc6:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bca:	4630      	mov	r0, r6
 8004bcc:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8004bce:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bd0:	4798      	blx	r3
    newPresenter->activate();
 8004bd2:	6823      	ldr	r3, [r4, #0]
 8004bd4:	4620      	mov	r0, r4
 8004bd6:	681b      	ldr	r3, [r3, #0]
 8004bd8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bda:	4629      	mov	r1, r5
 8004bdc:	4630      	mov	r0, r6
 8004bde:	f00f ff73 	bl	8014ac8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004be2:	682b      	ldr	r3, [r5, #0]
 8004be4:	4628      	mov	r0, r5
 8004be6:	691b      	ldr	r3, [r3, #16]
 8004be8:	4798      	blx	r3
    newTransition->invalidate();
 8004bea:	682b      	ldr	r3, [r5, #0]
 8004bec:	4628      	mov	r0, r5
 8004bee:	695b      	ldr	r3, [r3, #20]
 8004bf0:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8004bf8:	4623      	mov	r3, r4
 8004bfa:	e7e1      	b.n	8004bc0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8004bfc:	08026058 	.word	0x08026058
 8004c00:	080260e6 	.word	0x080260e6
 8004c04:	080261ea 	.word	0x080261ea
 8004c08:	08026231 	.word	0x08026231
 8004c0c:	080262d4 	.word	0x080262d4
 8004c10:	080264e0 	.word	0x080264e0

08004c14 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8004c14:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c16:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8004c1a:	9300      	str	r3, [sp, #0]
 8004c1c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8004c20:	4b04      	ldr	r3, [pc, #16]	; (8004c34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 8004c22:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8004c26:	4804      	ldr	r0, [pc, #16]	; (8004c38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8004c28:	f7ff ff54 	bl	8004ad4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004c2c:	b003      	add	sp, #12
 8004c2e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004c32:	bf00      	nop
 8004c34:	200200cc 	.word	0x200200cc
 8004c38:	200200c8 	.word	0x200200c8

08004c3c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004c3c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c42:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004c44:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004c48:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c4a:	6803      	ldr	r3, [r0, #0]
 8004c4c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004c4e:	4688      	mov	r8, r1
 8004c50:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c52:	4798      	blx	r3
 8004c54:	f244 537b 	movw	r3, #17787	; 0x457b
 8004c58:	4298      	cmp	r0, r3
 8004c5a:	d805      	bhi.n	8004c68 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8004c5c:	4b41      	ldr	r3, [pc, #260]	; (8004d64 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8004c5e:	4a42      	ldr	r2, [pc, #264]	; (8004d68 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004c60:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c62:	4842      	ldr	r0, [pc, #264]	; (8004d6c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004c64:	f01e f950 	bl	8022f08 <__assert_func>
 8004c68:	6860      	ldr	r0, [r4, #4]
 8004c6a:	6803      	ldr	r3, [r0, #0]
 8004c6c:	6a1b      	ldr	r3, [r3, #32]
 8004c6e:	4798      	blx	r3
 8004c70:	280f      	cmp	r0, #15
 8004c72:	d803      	bhi.n	8004c7c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8004c74:	4b3e      	ldr	r3, [pc, #248]	; (8004d70 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8004c76:	4a3c      	ldr	r2, [pc, #240]	; (8004d68 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004c78:	21a4      	movs	r1, #164	; 0xa4
 8004c7a:	e7f2      	b.n	8004c62 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c7c:	68e0      	ldr	r0, [r4, #12]
 8004c7e:	6803      	ldr	r3, [r0, #0]
 8004c80:	6a1b      	ldr	r3, [r3, #32]
 8004c82:	4798      	blx	r3
 8004c84:	280b      	cmp	r0, #11
 8004c86:	d803      	bhi.n	8004c90 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8004c88:	4b3a      	ldr	r3, [pc, #232]	; (8004d74 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004c8a:	4a37      	ldr	r2, [pc, #220]	; (8004d68 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004c8c:	21a5      	movs	r1, #165	; 0xa5
 8004c8e:	e7e8      	b.n	8004c62 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8004c90:	f00e fb28 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 8004c94:	f00e fb74 	bl	8013380 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004c98:	f8d9 0000 	ldr.w	r0, [r9]
 8004c9c:	b110      	cbz	r0, 8004ca4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8004c9e:	6803      	ldr	r3, [r0, #0]
 8004ca0:	68db      	ldr	r3, [r3, #12]
 8004ca2:	4798      	blx	r3
    if (*currentTrans)
 8004ca4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca8:	b110      	cbz	r0, 8004cb0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8004caa:	6803      	ldr	r3, [r0, #0]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4798      	blx	r3
    if (*currentScreen)
 8004cb0:	6838      	ldr	r0, [r7, #0]
 8004cb2:	b110      	cbz	r0, 8004cba <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8004cb4:	6803      	ldr	r3, [r0, #0]
 8004cb6:	695b      	ldr	r3, [r3, #20]
 8004cb8:	4798      	blx	r3
    if (*currentPresenter)
 8004cba:	f8d8 0000 	ldr.w	r0, [r8]
 8004cbe:	b110      	cbz	r0, 8004cc6 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8004cc0:	6803      	ldr	r3, [r0, #0]
 8004cc2:	685b      	ldr	r3, [r3, #4]
 8004cc4:	4798      	blx	r3
    if (*currentScreen)
 8004cc6:	6838      	ldr	r0, [r7, #0]
 8004cc8:	b110      	cbz	r0, 8004cd0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8004cca:	6803      	ldr	r3, [r0, #0]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	4798      	blx	r3
    if (*currentPresenter)
 8004cd0:	f8d8 0000 	ldr.w	r0, [r8]
 8004cd4:	b110      	cbz	r0, 8004cdc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8004cd6:	6803      	ldr	r3, [r0, #0]
 8004cd8:	689b      	ldr	r3, [r3, #8]
 8004cda:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cdc:	68e0      	ldr	r0, [r4, #12]
 8004cde:	6803      	ldr	r3, [r0, #0]
 8004ce0:	2100      	movs	r1, #0
 8004ce2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ce4:	4798      	blx	r3
 8004ce6:	f04f 0b00 	mov.w	fp, #0
 8004cea:	4b23      	ldr	r3, [pc, #140]	; (8004d78 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004cec:	6003      	str	r3, [r0, #0]
 8004cee:	4605      	mov	r5, r0
 8004cf0:	f8c0 b004 	str.w	fp, [r0, #4]
 8004cf4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cf8:	68a0      	ldr	r0, [r4, #8]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	4659      	mov	r1, fp
 8004cfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d00:	4798      	blx	r3
 8004d02:	4606      	mov	r6, r0
 8004d04:	f003 f884 	bl	8007e10 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d08:	6860      	ldr	r0, [r4, #4]
 8004d0a:	6803      	ldr	r3, [r0, #0]
 8004d0c:	4659      	mov	r1, fp
 8004d0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d10:	4798      	blx	r3
 8004d12:	4631      	mov	r1, r6
 8004d14:	4604      	mov	r4, r0
 8004d16:	f002 ff7b 	bl	8007c10 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8004d1a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d1e:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8004d22:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004d24:	b1e4      	cbz	r4, 8004d60 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 8004d26:	1d23      	adds	r3, r4, #4
 8004d28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d2c:	6833      	ldr	r3, [r6, #0]
 8004d2e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d32:	4630      	mov	r0, r6
 8004d34:	68db      	ldr	r3, [r3, #12]
 8004d36:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d38:	4798      	blx	r3
    newPresenter->activate();
 8004d3a:	6823      	ldr	r3, [r4, #0]
 8004d3c:	4620      	mov	r0, r4
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d42:	4629      	mov	r1, r5
 8004d44:	4630      	mov	r0, r6
 8004d46:	f00f febf 	bl	8014ac8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d4a:	682b      	ldr	r3, [r5, #0]
 8004d4c:	4628      	mov	r0, r5
 8004d4e:	691b      	ldr	r3, [r3, #16]
 8004d50:	4798      	blx	r3
    newTransition->invalidate();
 8004d52:	682b      	ldr	r3, [r5, #0]
 8004d54:	4628      	mov	r0, r5
 8004d56:	695b      	ldr	r3, [r3, #20]
 8004d58:	4798      	blx	r3
}
 8004d5a:	4620      	mov	r0, r4
 8004d5c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8004d60:	4623      	mov	r3, r4
 8004d62:	e7e1      	b.n	8004d28 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8004d64:	08026058 	.word	0x08026058
 8004d68:	08026377 	.word	0x08026377
 8004d6c:	080261ea 	.word	0x080261ea
 8004d70:	08026231 	.word	0x08026231
 8004d74:	080262d4 	.word	0x080262d4
 8004d78:	080264e0 	.word	0x080264e0

08004d7c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 8004d7c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d7e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8004d82:	9300      	str	r3, [sp, #0]
 8004d84:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8004d88:	4b04      	ldr	r3, [pc, #16]	; (8004d9c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 8004d8a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8004d8e:	4804      	ldr	r0, [pc, #16]	; (8004da0 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 8004d90:	f7ff ff54 	bl	8004c3c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004d94:	b003      	add	sp, #12
 8004d96:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d9a:	bf00      	nop
 8004d9c:	200200cc 	.word	0x200200cc
 8004da0:	200200c8 	.word	0x200200c8

08004da4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004da4:	6a00      	ldr	r0, [r0, #32]
 8004da6:	4770      	bx	lr

08004da8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004da8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004daa:	4770      	bx	lr

08004dac <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004dac:	4770      	bx	lr

08004dae <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004dae:	888b      	ldrh	r3, [r1, #4]
 8004db0:	6980      	ldr	r0, [r0, #24]
 8004db2:	680a      	ldr	r2, [r1, #0]
 8004db4:	0adb      	lsrs	r3, r3, #11
 8004db6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004dba:	4410      	add	r0, r2
 8004dbc:	4770      	bx	lr

08004dbe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004dbe:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004dc0:	b1c2      	cbz	r2, 8004df4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004dc2:	7b13      	ldrb	r3, [r2, #12]
 8004dc4:	b1b3      	cbz	r3, 8004df4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004dc6:	7b54      	ldrb	r4, [r2, #13]
 8004dc8:	7ad2      	ldrb	r2, [r2, #11]
 8004dca:	0224      	lsls	r4, r4, #8
 8004dcc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004dd0:	4314      	orrs	r4, r2
 8004dd2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004dd4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004dd6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004dda:	8813      	ldrh	r3, [r2, #0]
 8004ddc:	428b      	cmp	r3, r1
 8004dde:	d102      	bne.n	8004de6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004de0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004de4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004de6:	d805      	bhi.n	8004df4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004de8:	3801      	subs	r0, #1
 8004dea:	b280      	uxth	r0, r0
 8004dec:	3204      	adds	r2, #4
 8004dee:	2800      	cmp	r0, #0
 8004df0:	d1f3      	bne.n	8004dda <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004df2:	e7f7      	b.n	8004de4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004df4:	2000      	movs	r0, #0
 8004df6:	e7f5      	b.n	8004de4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004df8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004df8:	b510      	push	{r4, lr}
 8004dfa:	2128      	movs	r1, #40	; 0x28
 8004dfc:	4604      	mov	r4, r0
 8004dfe:	f01e f855 	bl	8022eac <_ZdlPvj>
 8004e02:	4620      	mov	r0, r4
 8004e04:	bd10      	pop	{r4, pc}
	...

08004e08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004e08:	b530      	push	{r4, r5, lr}
 8004e0a:	b089      	sub	sp, #36	; 0x24
 8004e0c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004e0e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8004e12:	9506      	str	r5, [sp, #24]
 8004e14:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8004e18:	9505      	str	r5, [sp, #20]
 8004e1a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004e1e:	9504      	str	r5, [sp, #16]
 8004e20:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004e24:	9503      	str	r5, [sp, #12]
 8004e26:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8004e2a:	9502      	str	r5, [sp, #8]
 8004e2c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8004e30:	9501      	str	r5, [sp, #4]
 8004e32:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8004e36:	9500      	str	r5, [sp, #0]
 8004e38:	f00f faa6 	bl	8014388 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8004e3c:	4b06      	ldr	r3, [pc, #24]	; (8004e58 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8004e3e:	6023      	str	r3, [r4, #0]
 8004e40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e42:	61a3      	str	r3, [r4, #24]
 8004e44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004e46:	61e3      	str	r3, [r4, #28]
 8004e48:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004e4a:	6223      	str	r3, [r4, #32]
 8004e4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004e4e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8004e50:	4620      	mov	r0, r4
 8004e52:	b009      	add	sp, #36	; 0x24
 8004e54:	bd30      	pop	{r4, r5, pc}
 8004e56:	bf00      	nop
 8004e58:	08026504 	.word	0x08026504

08004e5c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8004e5c:	4770      	bx	lr

08004e5e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8004e5e:	4770      	bx	lr

08004e60 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8004e60:	4770      	bx	lr

08004e62 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8004e62:	4770      	bx	lr

08004e64 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8004e64:	4770      	bx	lr

08004e66 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8004e66:	4770      	bx	lr

08004e68 <_ZN15Screen1ViewBase18functionFilterDataEv>:
     * Virtual Action Handlers
     */
    virtual void functionFilterData()
    {
        // Override and implement this function in Screen1
    }
 8004e68:	4770      	bx	lr

08004e6a <_ZN15Screen1ViewBase15functionReadLogEv>:

    virtual void functionReadLog()
    {
        // Override and implement this function in Screen1
    }
 8004e6a:	4770      	bx	lr

08004e6c <_ZN15Screen1ViewBase16functionPageBackEv>:

    virtual void functionPageBack()
    {
        // Override and implement this function in Screen1
    }
 8004e6c:	4770      	bx	lr

08004e6e <_ZN15Screen1ViewBase19functionPageForwardEv>:

    virtual void functionPageForward()
    {
        // Override and implement this function in Screen1
    }
 8004e6e:	4770      	bx	lr

08004e70 <_ZN15Screen1ViewBase14functionPage_1Ev>:

    virtual void functionPage_1()
    {
        // Override and implement this function in Screen1
    }
 8004e70:	4770      	bx	lr

08004e72 <_ZN15Screen1ViewBase14functionPage_2Ev>:

    virtual void functionPage_2()
    {
        // Override and implement this function in Screen1
    }
 8004e72:	4770      	bx	lr

08004e74 <_ZN15Screen1ViewBase14functionPage_3Ev>:

    virtual void functionPage_3()
    {
        // Override and implement this function in Screen1
    }
 8004e74:	4770      	bx	lr

08004e76 <_ZN15Screen1ViewBase14functionPage_4Ev>:

    virtual void functionPage_4()
    {
        // Override and implement this function in Screen1
    }
 8004e76:	4770      	bx	lr

08004e78 <_ZN15Screen1ViewBase14functionPage_5Ev>:

    virtual void functionPage_5()
    {
        // Override and implement this function in Screen1
    }
 8004e78:	4770      	bx	lr

08004e7a <_ZN15Screen1ViewBase21functionOkFilDataTimeEv>:

    virtual void functionOkFilDataTime()
    {
        // Override and implement this function in Screen1
    }
 8004e7a:	4770      	bx	lr

08004e7c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e7c:	4770      	bx	lr

08004e7e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8004e7e:	4770      	bx	lr

08004e80 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004e80:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004e82:	68c2      	ldr	r2, [r0, #12]
 8004e84:	6844      	ldr	r4, [r0, #4]
 8004e86:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004e88:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8004e8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004e8e:	07d2      	lsls	r2, r2, #31
 8004e90:	bf48      	it	mi
 8004e92:	5962      	ldrmi	r2, [r4, r5]
 8004e94:	689b      	ldr	r3, [r3, #8]
    }
 8004e96:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004e98:	bf48      	it	mi
 8004e9a:	58d3      	ldrmi	r3, [r2, r3]
 8004e9c:	4718      	bx	r3

08004e9e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8004e9e:	6843      	ldr	r3, [r0, #4]
 8004ea0:	b12b      	cbz	r3, 8004eae <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8004ea2:	6883      	ldr	r3, [r0, #8]
 8004ea4:	b92b      	cbnz	r3, 8004eb2 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8004ea6:	68c0      	ldr	r0, [r0, #12]
 8004ea8:	f000 0001 	and.w	r0, r0, #1
 8004eac:	4770      	bx	lr
 8004eae:	4618      	mov	r0, r3
 8004eb0:	4770      	bx	lr
 8004eb2:	2001      	movs	r0, #1
    }
 8004eb4:	4770      	bx	lr

08004eb6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004eb6:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004eb8:	68c2      	ldr	r2, [r0, #12]
 8004eba:	6844      	ldr	r4, [r0, #4]
 8004ebc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004ebe:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8004ec0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004ec4:	07d2      	lsls	r2, r2, #31
 8004ec6:	bf48      	it	mi
 8004ec8:	5962      	ldrmi	r2, [r4, r5]
 8004eca:	689b      	ldr	r3, [r3, #8]
    }
 8004ecc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004ece:	bf48      	it	mi
 8004ed0:	58d3      	ldrmi	r3, [r2, r3]
 8004ed2:	4718      	bx	r3

08004ed4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8004ed4:	6843      	ldr	r3, [r0, #4]
 8004ed6:	b12b      	cbz	r3, 8004ee4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004ed8:	6883      	ldr	r3, [r0, #8]
 8004eda:	b92b      	cbnz	r3, 8004ee8 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004edc:	68c0      	ldr	r0, [r0, #12]
 8004ede:	f000 0001 	and.w	r0, r0, #1
 8004ee2:	4770      	bx	lr
 8004ee4:	4618      	mov	r0, r3
 8004ee6:	4770      	bx	lr
 8004ee8:	2001      	movs	r0, #1
    }
 8004eea:	4770      	bx	lr

08004eec <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004eec:	b510      	push	{r4, lr}
 8004eee:	2110      	movs	r1, #16
 8004ef0:	4604      	mov	r4, r0
 8004ef2:	f01d ffdb 	bl	8022eac <_ZdlPvj>
 8004ef6:	4620      	mov	r0, r4
 8004ef8:	bd10      	pop	{r4, pc}

08004efa <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8004efa:	b510      	push	{r4, lr}
 8004efc:	2110      	movs	r1, #16
 8004efe:	4604      	mov	r4, r0
 8004f00:	f01d ffd4 	bl	8022eac <_ZdlPvj>
 8004f04:	4620      	mov	r0, r4
 8004f06:	bd10      	pop	{r4, pc}

08004f08 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8004f08:	b510      	push	{r4, lr}
 8004f0a:	f244 515c 	movw	r1, #17756	; 0x455c
 8004f0e:	4604      	mov	r4, r0
 8004f10:	f01d ffcc 	bl	8022eac <_ZdlPvj>
 8004f14:	4620      	mov	r0, r4
 8004f16:	bd10      	pop	{r4, pc}

08004f18 <_ZN15Screen1ViewBase11setupScreenEv>:
    add(listLayoutPageButton);
    add(modalWindow1);
}

void Screen1ViewBase::setupScreen()
{
 8004f18:	b510      	push	{r4, lr}
 8004f1a:	4604      	mov	r4, r0
    customContainerTableLog_0.initialize();
 8004f1c:	30d0      	adds	r0, #208	; 0xd0
 8004f1e:	f001 ff3e 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_1.initialize();
 8004f22:	f504 60d4 	add.w	r0, r4, #1696	; 0x6a0
 8004f26:	f001 ff3a 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_2.initialize();
 8004f2a:	f504 6047 	add.w	r0, r4, #3184	; 0xc70
 8004f2e:	f001 ff36 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_3.initialize();
 8004f32:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
 8004f36:	f001 ff32 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_4.initialize();
 8004f3a:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 8004f3e:	3010      	adds	r0, #16
 8004f40:	f001 ff2d 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_5.initialize();
 8004f44:	f504 50ef 	add.w	r0, r4, #7648	; 0x1de0
 8004f48:	f001 ff29 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_6.initialize();
 8004f4c:	f504 500e 	add.w	r0, r4, #9088	; 0x2380
 8004f50:	3030      	adds	r0, #48	; 0x30
 8004f52:	f001 ff24 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_7.initialize();
 8004f56:	f504 5026 	add.w	r0, r4, #10624	; 0x2980
 8004f5a:	f001 ff20 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_8.initialize();
 8004f5e:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 8004f62:	3010      	adds	r0, #16
 8004f64:	f001 ff1b 	bl	8006d9e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_9.initialize();
 8004f68:	f504 5054 	add.w	r0, r4, #13568	; 0x3500
 8004f6c:	3020      	adds	r0, #32
}
 8004f6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerTableLog_9.initialize();
 8004f72:	f001 bf14 	b.w	8006d9e <_ZN23CustomContainerTableLog10initializeEv>

08004f76 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonReadLog)
 8004f76:	f500 526c 	add.w	r2, r0, #15104	; 0x3b00
 8004f7a:	3224      	adds	r2, #36	; 0x24
 8004f7c:	4291      	cmp	r1, r2
 8004f7e:	d102      	bne.n	8004f86 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    {
        //InteractionReadLog
        //When flexButtonReadLog clicked call virtual function
        //Call functionReadLog
        functionReadLog();
 8004f80:	6803      	ldr	r3, [r0, #0]
 8004f82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonFilterData)
    {
        //InteractionFilterData
        //When flexButtonFilterData clicked call virtual function
        //Call functionFilterData
        functionFilterData();
 8004f84:	4718      	bx	r3
    else if (&src == &flexButtonFilterData)
 8004f86:	f500 526f 	add.w	r2, r0, #15296	; 0x3bc0
 8004f8a:	3220      	adds	r2, #32
 8004f8c:	4291      	cmp	r1, r2
 8004f8e:	d102      	bne.n	8004f96 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
        functionFilterData();
 8004f90:	6803      	ldr	r3, [r0, #0]
 8004f92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f94:	e7f6      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPageBack)
 8004f96:	f500 5273 	add.w	r2, r0, #15552	; 0x3cc0
 8004f9a:	3210      	adds	r2, #16
 8004f9c:	4291      	cmp	r1, r2
 8004f9e:	d102      	bne.n	8004fa6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
    {
        //InteractionPageBack
        //When flexButtonPageBack clicked call virtual function
        //Call functionPageBack
        functionPageBack();
 8004fa0:	6803      	ldr	r3, [r0, #0]
 8004fa2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004fa4:	e7ee      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPage_1)
 8004fa6:	f500 5276 	add.w	r2, r0, #15744	; 0x3d80
 8004faa:	3210      	adds	r2, #16
 8004fac:	4291      	cmp	r1, r2
 8004fae:	d102      	bne.n	8004fb6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x40>
    {
        //InteractionPage_1
        //When flexButtonPage_1 clicked call virtual function
        //Call functionPage_1
        functionPage_1();
 8004fb0:	6803      	ldr	r3, [r0, #0]
 8004fb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fb4:	e7e6      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPage_2)
 8004fb6:	f500 5279 	add.w	r2, r0, #15936	; 0x3e40
 8004fba:	3210      	adds	r2, #16
 8004fbc:	4291      	cmp	r1, r2
 8004fbe:	d102      	bne.n	8004fc6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
    {
        //InteractionPage_2
        //When flexButtonPage_2 clicked call virtual function
        //Call functionPage_2
        functionPage_2();
 8004fc0:	6803      	ldr	r3, [r0, #0]
 8004fc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fc4:	e7de      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPage_3)
 8004fc6:	f500 527c 	add.w	r2, r0, #16128	; 0x3f00
 8004fca:	3210      	adds	r2, #16
 8004fcc:	4291      	cmp	r1, r2
 8004fce:	d102      	bne.n	8004fd6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x60>
    {
        //InteractionPage_3
        //When flexButtonPage_3 clicked call virtual function
        //Call functionPage_3
        functionPage_3();
 8004fd0:	6803      	ldr	r3, [r0, #0]
 8004fd2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004fd4:	e7d6      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPage_4)
 8004fd6:	f500 527f 	add.w	r2, r0, #16320	; 0x3fc0
 8004fda:	3210      	adds	r2, #16
 8004fdc:	4291      	cmp	r1, r2
 8004fde:	d102      	bne.n	8004fe6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x70>
    {
        //InteractionPage_4
        //When flexButtonPage_4 clicked call virtual function
        //Call functionPage_4
        functionPage_4();
 8004fe0:	6803      	ldr	r3, [r0, #0]
 8004fe2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004fe4:	e7ce      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPage_5)
 8004fe6:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 8004fea:	3210      	adds	r2, #16
 8004fec:	4291      	cmp	r1, r2
 8004fee:	d102      	bne.n	8004ff6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x80>
    {
        //InteractionPage_5
        //When flexButtonPage_5 clicked call virtual function
        //Call functionPage_5
        functionPage_5();
 8004ff0:	6803      	ldr	r3, [r0, #0]
 8004ff2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004ff4:	e7c6      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonPageForward)
 8004ff6:	f500 4282 	add.w	r2, r0, #16640	; 0x4100
 8004ffa:	3250      	adds	r2, #80	; 0x50
 8004ffc:	4291      	cmp	r1, r2
 8004ffe:	d102      	bne.n	8005006 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>
    {
        //InteractionPageForward
        //When flexButtonPageForward clicked call virtual function
        //Call functionPageForward
        functionPageForward();
 8005000:	6803      	ldr	r3, [r0, #0]
 8005002:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005004:	e7be      	b.n	8004f84 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    }
    else if (&src == &flexButtonOkFilDataTime)
 8005006:	f500 4285 	add.w	r2, r0, #17024	; 0x4280
 800500a:	3240      	adds	r2, #64	; 0x40
 800500c:	4291      	cmp	r1, r2
 800500e:	d102      	bne.n	8005016 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    {
        //InteractionOkFilDataTime
        //When flexButtonOkFilDataTime clicked call virtual function
        //Call functionOkFilDataTime
        functionOkFilDataTime();
 8005010:	6802      	ldr	r2, [r0, #0]
 8005012:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8005014:	4710      	bx	r2
    }
    else if (&src == &flexButtonExitFilDataTime)
 8005016:	f500 4286 	add.w	r2, r0, #17152	; 0x4300
 800501a:	327c      	adds	r2, #124	; 0x7c
 800501c:	4291      	cmp	r1, r2
 800501e:	d108      	bne.n	8005032 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xbc>
        visible = vis;
 8005020:	f244 2235 	movw	r2, #16949	; 0x4235
 8005024:	2100      	movs	r1, #0
 8005026:	5481      	strb	r1, [r0, r2]
    {
        //InteractionExitFilDataTime
        //When flexButtonExitFilDataTime clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
 8005028:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 800502c:	3010      	adds	r0, #16
 800502e:	f00f b901 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
}
 8005032:	4770      	bx	lr

08005034 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 8005034:	f500 506b 	add.w	r0, r0, #15040	; 0x3ac0
 8005038:	3030      	adds	r0, #48	; 0x30
 800503a:	4281      	cmp	r1, r0
{
 800503c:	b508      	push	{r3, lr}
    if (&src == &button1)
 800503e:	d105      	bne.n	800504c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005040:	f00e f950 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
}
 8005044:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 8005048:	f7ff bd34 	b.w	8004ab4 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 800504c:	bd08      	pop	{r3, pc}

0800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>:
 800504e:	6803      	ldr	r3, [r0, #0]
        colorPressed = newColorPressed;
 8005050:	e9c0 122e 	strd	r1, r2, [r0, #184]	; 0xb8
        handlePressedUpdated();
 8005054:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005058:	4718      	bx	r3
	...

0800505c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800505c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005060:	ed2d 8b10 	vpush	{d8-d15}
 8005064:	4604      	mov	r4, r0
 8005066:	b08f      	sub	sp, #60	; 0x3c
        : presenter(0)
 8005068:	f00f fb82 	bl	8014770 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800506c:	4622      	mov	r2, r4
 800506e:	2500      	movs	r5, #0
 8005070:	4be2      	ldr	r3, [pc, #904]	; (80053fc <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 8005072:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005074:	f842 3b40 	str.w	r3, [r2], #64
 8005078:	4610      	mov	r0, r2
 800507a:	ee0e 2a10 	vmov	s28, r2
 800507e:	f7fd f81b 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8005082:	f104 036c 	add.w	r3, r4, #108	; 0x6c
        : Box(), borderColor(0), borderSize(0)
 8005086:	4618      	mov	r0, r3
 8005088:	f104 08a0 	add.w	r8, r4, #160	; 0xa0
 800508c:	ee0e 3a90 	vmov	s29, r3
 8005090:	f7fd f812 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8005094:	4bda      	ldr	r3, [pc, #872]	; (8005400 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8005096:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005098:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 800509c:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 80050a0:	4640      	mov	r0, r8
 80050a2:	f7fd f8e5 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
     *           places the elements vertically, ::EAST places the elements horizontally.
     *
     * @see setDirection
     */
    ListLayout(const Direction d = SOUTH)
        : Container(), direction(d), offset(0)
 80050a6:	f8df a384 	ldr.w	sl, [pc, #900]	; 800542c <_ZN15Screen1ViewBaseC1Ev+0x3d0>
 80050aa:	f8c4 a0a0 	str.w	sl, [r4, #160]	; 0xa0
 80050ae:	f104 03d0 	add.w	r3, r4, #208	; 0xd0
 80050b2:	f04f 0901 	mov.w	r9, #1
 80050b6:	f884 90cc 	strb.w	r9, [r4, #204]	; 0xcc
 80050ba:	4618      	mov	r0, r3
 80050bc:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 80050c0:	f8a4 50ce 	strh.w	r5, [r4, #206]	; 0xce
 80050c4:	ee0f 3a10 	vmov	s30, r3
 80050c8:	f001 fe74 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 80050cc:	f504 63d4 	add.w	r3, r4, #1696	; 0x6a0
 80050d0:	4618      	mov	r0, r3
 80050d2:	ee0f 3a90 	vmov	s31, r3
 80050d6:	f001 fe6d 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 80050da:	f504 6347 	add.w	r3, r4, #3184	; 0xc70
 80050de:	4618      	mov	r0, r3
 80050e0:	9305      	str	r3, [sp, #20]
 80050e2:	f001 fe67 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 80050e6:	f504 5392 	add.w	r3, r4, #4672	; 0x1240
 80050ea:	4618      	mov	r0, r3
 80050ec:	9306      	str	r3, [sp, #24]
 80050ee:	f001 fe61 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 80050f2:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 80050f6:	3310      	adds	r3, #16
 80050f8:	4618      	mov	r0, r3
 80050fa:	9303      	str	r3, [sp, #12]
 80050fc:	f001 fe5a 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 8005100:	f504 53ef 	add.w	r3, r4, #7648	; 0x1de0
 8005104:	4618      	mov	r0, r3
 8005106:	9307      	str	r3, [sp, #28]
 8005108:	f001 fe54 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 800510c:	f504 530e 	add.w	r3, r4, #9088	; 0x2380
 8005110:	3330      	adds	r3, #48	; 0x30
 8005112:	4618      	mov	r0, r3
 8005114:	9304      	str	r3, [sp, #16]
 8005116:	f504 573d 	add.w	r7, r4, #12096	; 0x2f40
 800511a:	f001 fe4b 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 800511e:	f504 5326 	add.w	r3, r4, #10624	; 0x2980
 8005122:	4618      	mov	r0, r3
 8005124:	3710      	adds	r7, #16
 8005126:	f504 5654 	add.w	r6, r4, #13568	; 0x3500
 800512a:	9308      	str	r3, [sp, #32]
 800512c:	3620      	adds	r6, #32
 800512e:	f001 fe41 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 8005132:	4638      	mov	r0, r7
 8005134:	f001 fe3e 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 8005138:	f643 2bf0 	movw	fp, #15088	; 0x3af0
 800513c:	4630      	mov	r0, r6
 800513e:	f001 fe39 	bl	8006db4 <_ZN23CustomContainerTableLogC1Ev>
 8005142:	eb04 030b 	add.w	r3, r4, fp
 8005146:	ee0d 3a10 	vmov	s26, r3
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800514a:	4629      	mov	r1, r5
 800514c:	2226      	movs	r2, #38	; 0x26
 800514e:	4618      	mov	r0, r3
 8005150:	f01e f980 	bl	8023454 <memset>
 8005154:	ee1d 0a10 	vmov	r0, s26
 8005158:	f7fd f88a 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800515c:	ee1d 3a10 	vmov	r3, s26
 8005160:	629d      	str	r5, [r3, #40]	; 0x28
 8005162:	f883 502c 	strb.w	r5, [r3, #44]	; 0x2c
        touchable = touch;
 8005166:	f643 3314 	movw	r3, #15124	; 0x3b14
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800516a:	f643 321e 	movw	r2, #15134	; 0x3b1e
 800516e:	f804 9003 	strb.w	r9, [r4, r3]
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8005172:	4ba4      	ldr	r3, [pc, #656]	; (8005404 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8005174:	f844 300b 	str.w	r3, [r4, fp]
 8005178:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800517c:	52a3      	strh	r3, [r4, r2]
 800517e:	f643 3220 	movw	r2, #15136	; 0x3b20
 8005182:	f643 49a0 	movw	r9, #15520	; 0x3ca0
 8005186:	52a3      	strh	r3, [r4, r2]
 8005188:	ee1d 2a10 	vmov	r2, s26
 800518c:	f882 3032 	strb.w	r3, [r2, #50]	; 0x32
 8005190:	f504 536c 	add.w	r3, r4, #15104	; 0x3b00
 8005194:	3324      	adds	r3, #36	; 0x24
 8005196:	4618      	mov	r0, r3
 8005198:	ee08 3a10 	vmov	s16, r3
 800519c:	f7fd fbcc 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80051a0:	f504 536f 	add.w	r3, r4, #15296	; 0x3bc0
 80051a4:	3320      	adds	r3, #32
 80051a6:	eb04 0b09 	add.w	fp, r4, r9
 80051aa:	4618      	mov	r0, r3
 80051ac:	ee08 3a90 	vmov	s17, r3
 80051b0:	f7fd f87e 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80051b4:	4658      	mov	r0, fp
 80051b6:	f7fd f85b 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80051ba:	f8cb 5028 	str.w	r5, [fp, #40]	; 0x28
 80051be:	f844 a009 	str.w	sl, [r4, r9]
 80051c2:	f04f 0901 	mov.w	r9, #1
 80051c6:	f88b 902c 	strb.w	r9, [fp, #44]	; 0x2c
 80051ca:	f504 5973 	add.w	r9, r4, #15552	; 0x3cc0
 80051ce:	f109 0910 	add.w	r9, r9, #16
 80051d2:	f8ab 502e 	strh.w	r5, [fp, #46]	; 0x2e
 80051d6:	4648      	mov	r0, r9
 80051d8:	f7fd f86a 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80051dc:	f504 5376 	add.w	r3, r4, #15744	; 0x3d80
 80051e0:	3310      	adds	r3, #16
 80051e2:	4618      	mov	r0, r3
 80051e4:	ee0a 3a10 	vmov	s20, r3
 80051e8:	f7fd f862 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80051ec:	f504 5379 	add.w	r3, r4, #15936	; 0x3e40
 80051f0:	3310      	adds	r3, #16
 80051f2:	4618      	mov	r0, r3
 80051f4:	ee0a 3a90 	vmov	s21, r3
 80051f8:	f7fd f85a 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80051fc:	f504 537c 	add.w	r3, r4, #16128	; 0x3f00
 8005200:	3310      	adds	r3, #16
 8005202:	4618      	mov	r0, r3
 8005204:	ee0b 3a10 	vmov	s22, r3
 8005208:	f7fd f852 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800520c:	f504 537f 	add.w	r3, r4, #16320	; 0x3fc0
 8005210:	3310      	adds	r3, #16
 8005212:	4618      	mov	r0, r3
 8005214:	ee0b 3a90 	vmov	s23, r3
 8005218:	f7fd f84a 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800521c:	f504 4381 	add.w	r3, r4, #16512	; 0x4080
 8005220:	3310      	adds	r3, #16
 8005222:	4618      	mov	r0, r3
 8005224:	ee0c 3a10 	vmov	s24, r3
 8005228:	f7fd f842 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800522c:	f504 4382 	add.w	r3, r4, #16640	; 0x4100
 8005230:	3350      	adds	r3, #80	; 0x50
 8005232:	f504 4a84 	add.w	sl, r4, #16896	; 0x4200
 8005236:	4618      	mov	r0, r3
 8005238:	f10a 0a10 	add.w	sl, sl, #16
 800523c:	ee0c 3a90 	vmov	s25, r3
 8005240:	f7fd f836 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8005244:	4650      	mov	r0, sl
 8005246:	f009 fed5 	bl	800eff4 <_ZN8touchgfx11ModalWindowC1Ev>
 800524a:	f504 4385 	add.w	r3, r4, #17024	; 0x4280
 800524e:	3340      	adds	r3, #64	; 0x40
 8005250:	4618      	mov	r0, r3
 8005252:	ee09 3a10 	vmov	s18, r3
 8005256:	f7fd fb6f 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800525a:	f504 4386 	add.w	r3, r4, #17152	; 0x4300
 800525e:	337c      	adds	r3, #124	; 0x7c
 8005260:	4618      	mov	r0, r3
 8005262:	ee09 3a90 	vmov	s19, r3
 8005266:	f7fd fb67 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800526a:	f504 4388 	add.w	r3, r4, #17408	; 0x4400
 800526e:	3338      	adds	r3, #56	; 0x38
 8005270:	4618      	mov	r0, r3
 8005272:	ee0d 3a90 	vmov	s27, r3
 8005276:	f7fd fb33 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800527a:	f244 533c 	movw	r3, #17724	; 0x453c
 800527e:	18e2      	adds	r2, r4, r3
 8005280:	9209      	str	r2, [sp, #36]	; 0x24
 8005282:	4a61      	ldr	r2, [pc, #388]	; (8005408 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8005284:	50e2      	str	r2, [r4, r3]
 8005286:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005288:	4a60      	ldr	r2, [pc, #384]	; (800540c <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 800528a:	605c      	str	r4, [r3, #4]
 800528c:	f244 5344 	movw	r3, #17732	; 0x4544
    __background.setPosition(0, 0, 800, 480);
 8005290:	ee1e 0a10 	vmov	r0, s28
 8005294:	50e2      	str	r2, [r4, r3]
 8005296:	f244 5348 	movw	r3, #17736	; 0x4548
 800529a:	4629      	mov	r1, r5
 800529c:	50e5      	str	r5, [r4, r3]
 800529e:	f244 534c 	movw	r3, #17740	; 0x454c
 80052a2:	18e2      	adds	r2, r4, r3
 80052a4:	9202      	str	r2, [sp, #8]
 80052a6:	4a5a      	ldr	r2, [pc, #360]	; (8005410 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 80052a8:	50e2      	str	r2, [r4, r3]
 80052aa:	9b02      	ldr	r3, [sp, #8]
 80052ac:	4a59      	ldr	r2, [pc, #356]	; (8005414 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 80052ae:	605c      	str	r4, [r3, #4]
 80052b0:	f244 5354 	movw	r3, #17748	; 0x4554
 80052b4:	50e2      	str	r2, [r4, r3]
 80052b6:	f244 5358 	movw	r3, #17752	; 0x4558
 80052ba:	462a      	mov	r2, r5
 80052bc:	50e5      	str	r5, [r4, r3]
 80052be:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80052c2:	9300      	str	r3, [sp, #0]
 80052c4:	f44f 7348 	mov.w	r3, #800	; 0x320
 80052c8:	f7fd fab8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80052cc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80052d0:	66a3      	str	r3, [r4, #104]	; 0x68
    boxWithBorder1.setPosition(-2, 0, 800, 480);
 80052d2:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80052d6:	ee1e 0a90 	vmov	r0, s29
 80052da:	9300      	str	r3, [sp, #0]
 80052dc:	462a      	mov	r2, r5
 80052de:	f44f 7348 	mov.w	r3, #800	; 0x320
 80052e2:	f06f 0101 	mvn.w	r1, #1
 80052e6:	f7fd faa9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80052ea:	f04f 32ff 	mov.w	r2, #4294967295
 80052ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80052f2:	e9c4 2325 	strd	r2, r3, [r4, #148]	; 0x94
        borderSize = size;
 80052f6:	2303      	movs	r3, #3
 80052f8:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
    listLayoutLogTable.setDirection(touchgfx::SOUTH);
 80052fc:	2101      	movs	r1, #1
 80052fe:	4640      	mov	r0, r8
 8005300:	f00a fa72 	bl	800f7e8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutLogTable.setXY(32, 200);
 8005304:	22c8      	movs	r2, #200	; 0xc8
 8005306:	2120      	movs	r1, #32
 8005308:	4640      	mov	r0, r8
 800530a:	f7fc ffc3 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    listLayoutLogTable.add(customContainerTableLog_0);
 800530e:	ee1f 1a10 	vmov	r1, s30
 8005312:	4640      	mov	r0, r8
 8005314:	f00a fad2 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_1);
 8005318:	ee1f 1a90 	vmov	r1, s31
 800531c:	4640      	mov	r0, r8
 800531e:	f00a facd 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_2);
 8005322:	9905      	ldr	r1, [sp, #20]
 8005324:	4640      	mov	r0, r8
 8005326:	f00a fac9 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_3);
 800532a:	9906      	ldr	r1, [sp, #24]
 800532c:	4640      	mov	r0, r8
 800532e:	f00a fac5 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_4);
 8005332:	9903      	ldr	r1, [sp, #12]
 8005334:	4640      	mov	r0, r8
 8005336:	f00a fac1 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_5);
 800533a:	9907      	ldr	r1, [sp, #28]
 800533c:	4640      	mov	r0, r8
 800533e:	f00a fabd 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_6);
 8005342:	9904      	ldr	r1, [sp, #16]
 8005344:	4640      	mov	r0, r8
 8005346:	f00a fab9 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_7);
 800534a:	9908      	ldr	r1, [sp, #32]
 800534c:	4640      	mov	r0, r8
 800534e:	f00a fab5 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_8);
 8005352:	4639      	mov	r1, r7
 8005354:	4640      	mov	r0, r8
 8005356:	f00a fab1 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_9);
 800535a:	4631      	mov	r1, r6
 800535c:	4640      	mov	r0, r8
 800535e:	f00a faad 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    button1.setXY(18, 14);
 8005362:	ee1d 0a10 	vmov	r0, s26
 8005366:	220e      	movs	r2, #14
 8005368:	2112      	movs	r1, #18
 800536a:	f7fc ff93 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800536e:	f04f 0701 	mov.w	r7, #1
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8005372:	ee1d 0a10 	vmov	r0, s26
 8005376:	aa0c      	add	r2, sp, #48	; 0x30
 8005378:	a90b      	add	r1, sp, #44	; 0x2c
 800537a:	f8ad 7030 	strh.w	r7, [sp, #48]	; 0x30
 800537e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8005382:	f00b fd01 	bl	8010d88 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8005386:	f643 3318 	movw	r3, #15128	; 0x3b18
        borderBox.setPosition(x, y, width, height);
 800538a:	ee18 0a10 	vmov	r0, s16
 800538e:	261e      	movs	r6, #30
 8005390:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005392:	50e2      	str	r2, [r4, r3]
 8005394:	9600      	str	r6, [sp, #0]
 8005396:	23c4      	movs	r3, #196	; 0xc4
 8005398:	462a      	mov	r2, r5
 800539a:	4629      	mov	r1, r5
 800539c:	3034      	adds	r0, #52	; 0x34
 800539e:	f7fd fa4d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80053a2:	f643 3388 	movw	r3, #15240	; 0x3b88
    flexButtonReadLog.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80053a6:	4a1c      	ldr	r2, [pc, #112]	; (8005418 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 80053a8:	52e7      	strh	r7, [r4, r3]
 80053aa:	4b1c      	ldr	r3, [pc, #112]	; (800541c <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 80053ac:	9300      	str	r3, [sp, #0]
 80053ae:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80053b2:	491b      	ldr	r1, [pc, #108]	; (8005420 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        colorReleased = newColorReleased;
 80053b4:	4f1b      	ldr	r7, [pc, #108]	; (8005424 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80053b6:	ee18 0a10 	vmov	r0, s16
 80053ba:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80053be:	f7fd fa65 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80053c2:	4a19      	ldr	r2, [pc, #100]	; (8005428 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80053c4:	920c      	str	r2, [sp, #48]	; 0x30
 80053c6:	2333      	movs	r3, #51	; 0x33
    flexButtonReadLog.setText(TypedText(T___SINGLEUSE_Z9OO));
 80053c8:	ee18 0a10 	vmov	r0, s16
 80053cc:	a90c      	add	r1, sp, #48	; 0x30
 80053ce:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053d2:	f7fd fa67 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80053d6:	ee18 0a10 	vmov	r0, s16
 80053da:	2205      	movs	r2, #5
 80053dc:	4629      	mov	r1, r5
 80053de:	9600      	str	r6, [sp, #0]
 80053e0:	23c4      	movs	r3, #196	; 0xc4
 80053e2:	3078      	adds	r0, #120	; 0x78
 80053e4:	f7fd fa2a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80053e8:	f643 33d8 	movw	r3, #15320	; 0x3bd8
        handlePressedUpdated();
 80053ec:	ee18 0a10 	vmov	r0, s16
        colorReleased = newColorReleased;
 80053f0:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80053f2:	f643 33dc 	movw	r3, #15324	; 0x3bdc
 80053f6:	50e7      	str	r7, [r4, r3]
 80053f8:	e01a      	b.n	8005430 <_ZN15Screen1ViewBaseC1Ev+0x3d4>
 80053fa:	bf00      	nop
 80053fc:	0802658c 	.word	0x0802658c
 8005400:	0802827c 	.word	0x0802827c
 8005404:	08028130 	.word	0x08028130
 8005408:	0802655c 	.word	0x0802655c
 800540c:	08005035 	.word	0x08005035
 8005410:	08026574 	.word	0x08026574
 8005414:	08004f77 	.word	0x08004f77
 8005418:	ff0099cc 	.word	0xff0099cc
 800541c:	ff336699 	.word	0xff336699
 8005420:	ff006699 	.word	0xff006699
 8005424:	ff0a0a0a 	.word	0xff0a0a0a
 8005428:	08025b88 	.word	0x08025b88
 800542c:	0802772c 	.word	0x0802772c
        handlePressedUpdated();
 8005430:	f7fd f8af 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonReadLog.setPosition(585, 74, 196, 30);
 8005434:	ee18 0a10 	vmov	r0, s16
 8005438:	9600      	str	r6, [sp, #0]
 800543a:	23c4      	movs	r3, #196	; 0xc4
 800543c:	224a      	movs	r2, #74	; 0x4a
 800543e:	f240 2149 	movw	r1, #585	; 0x249
 8005442:	f7fd f9fb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005446:	f643 3354 	movw	r3, #15188	; 0x3b54
 800544a:	ee18 0a90 	vmov	r0, s17
 800544e:	9902      	ldr	r1, [sp, #8]
 8005450:	50e1      	str	r1, [r4, r3]
 8005452:	2623      	movs	r6, #35	; 0x23
 8005454:	2396      	movs	r3, #150	; 0x96
 8005456:	462a      	mov	r2, r5
 8005458:	4629      	mov	r1, r5
 800545a:	3034      	adds	r0, #52	; 0x34
 800545c:	9600      	str	r6, [sp, #0]
 800545e:	f7fd f9ed 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005462:	f643 4344 	movw	r3, #15428	; 0x3c44
 8005466:	f04f 0101 	mov.w	r1, #1
 800546a:	52e1      	strh	r1, [r4, r3]
    flexButtonFilterData.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800546c:	4b14      	ldr	r3, [pc, #80]	; (80054c0 <_ZN15Screen1ViewBaseC1Ev+0x464>)
 800546e:	9300      	str	r3, [sp, #0]
 8005470:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8005474:	4a13      	ldr	r2, [pc, #76]	; (80054c4 <_ZN15Screen1ViewBaseC1Ev+0x468>)
 8005476:	4914      	ldr	r1, [pc, #80]	; (80054c8 <_ZN15Screen1ViewBaseC1Ev+0x46c>)
 8005478:	ee18 0a90 	vmov	r0, s17
 800547c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8005480:	f7fd fa04 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005484:	4a11      	ldr	r2, [pc, #68]	; (80054cc <_ZN15Screen1ViewBaseC1Ev+0x470>)
 8005486:	920c      	str	r2, [sp, #48]	; 0x30
 8005488:	2342      	movs	r3, #66	; 0x42
    flexButtonFilterData.setWildcardText(TypedText(T___SINGLEUSE_ZX97));
 800548a:	ee18 0a90 	vmov	r0, s17
 800548e:	a90c      	add	r1, sp, #48	; 0x30
 8005490:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005494:	f7fd fa15 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005498:	4b0d      	ldr	r3, [pc, #52]	; (80054d0 <_ZN15Screen1ViewBaseC1Ev+0x474>)
 800549a:	4a09      	ldr	r2, [pc, #36]	; (80054c0 <_ZN15Screen1ViewBaseC1Ev+0x464>)
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	9203      	str	r2, [sp, #12]
 80054a0:	b92b      	cbnz	r3, 80054ae <_ZN15Screen1ViewBaseC1Ev+0x452>
 80054a2:	4b0c      	ldr	r3, [pc, #48]	; (80054d4 <_ZN15Screen1ViewBaseC1Ev+0x478>)
 80054a4:	4a0c      	ldr	r2, [pc, #48]	; (80054d8 <_ZN15Screen1ViewBaseC1Ev+0x47c>)
 80054a6:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80054a8:	480c      	ldr	r0, [pc, #48]	; (80054dc <_ZN15Screen1ViewBaseC1Ev+0x480>)
 80054aa:	f01d fd2d 	bl	8022f08 <__assert_func>
 80054ae:	4b0c      	ldr	r3, [pc, #48]	; (80054e0 <_ZN15Screen1ViewBaseC1Ev+0x484>)
 80054b0:	881b      	ldrh	r3, [r3, #0]
 80054b2:	2b43      	cmp	r3, #67	; 0x43
 80054b4:	d818      	bhi.n	80054e8 <_ZN15Screen1ViewBaseC1Ev+0x48c>
 80054b6:	4b0b      	ldr	r3, [pc, #44]	; (80054e4 <_ZN15Screen1ViewBaseC1Ev+0x488>)
 80054b8:	4a07      	ldr	r2, [pc, #28]	; (80054d8 <_ZN15Screen1ViewBaseC1Ev+0x47c>)
 80054ba:	21af      	movs	r1, #175	; 0xaf
 80054bc:	e7f4      	b.n	80054a8 <_ZN15Screen1ViewBaseC1Ev+0x44c>
 80054be:	bf00      	nop
 80054c0:	ff336699 	.word	0xff336699
 80054c4:	ff0099cc 	.word	0xff0099cc
 80054c8:	ff006699 	.word	0xff006699
 80054cc:	08025b88 	.word	0x08025b88
 80054d0:	200200dc 	.word	0x200200dc
 80054d4:	08025a74 	.word	0x08025a74
 80054d8:	08025ab6 	.word	0x08025ab6
 80054dc:	08025ae4 	.word	0x08025ae4
 80054e0:	200200e0 	.word	0x200200e0
 80054e4:	08025b2b 	.word	0x08025b2b
        return texts->getText(typedTextId);
 80054e8:	4bd3      	ldr	r3, [pc, #844]	; (8005838 <_ZN15Screen1ViewBaseC1Ev+0x7dc>)
 80054ea:	2143      	movs	r1, #67	; 0x43
 80054ec:	6818      	ldr	r0, [r3, #0]
 80054ee:	f001 fa21 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80054f2:	f643 4394 	movw	r3, #15508	; 0x3c94
        wildcardText.setPosition(x, y, width, height);
 80054f6:	9600      	str	r6, [sp, #0]
 80054f8:	50e0      	str	r0, [r4, r3]
 80054fa:	ee18 0a90 	vmov	r0, s17
 80054fe:	2396      	movs	r3, #150	; 0x96
 8005500:	462a      	mov	r2, r5
 8005502:	4629      	mov	r1, r5
 8005504:	3078      	adds	r0, #120	; 0x78
 8005506:	f7fd f999 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterData.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800550a:	ee18 0a90 	vmov	r0, s17
 800550e:	463a      	mov	r2, r7
 8005510:	4639      	mov	r1, r7
 8005512:	f7ff fd9c 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterData.setPosition(32, 157, 150, 35);
 8005516:	229d      	movs	r2, #157	; 0x9d
 8005518:	ee18 0a90 	vmov	r0, s17
 800551c:	9600      	str	r6, [sp, #0]
 800551e:	2396      	movs	r3, #150	; 0x96
 8005520:	2120      	movs	r1, #32
 8005522:	f7fd f98b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005526:	f643 4310 	movw	r3, #15376	; 0x3c10
 800552a:	9902      	ldr	r1, [sp, #8]
 800552c:	50e1      	str	r1, [r4, r3]
    listLayoutPageButton.setDirection(touchgfx::EAST);
 800552e:	4658      	mov	r0, fp
 8005530:	2102      	movs	r1, #2
 8005532:	f00a f959 	bl	800f7e8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
 8005536:	2632      	movs	r6, #50	; 0x32
    listLayoutPageButton.setXY(203, 413);
 8005538:	f240 129d 	movw	r2, #413	; 0x19d
 800553c:	21cb      	movs	r1, #203	; 0xcb
 800553e:	4658      	mov	r0, fp
 8005540:	f7fc fea8 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8005544:	4633      	mov	r3, r6
 8005546:	462a      	mov	r2, r5
 8005548:	4629      	mov	r1, r5
 800554a:	f109 0034 	add.w	r0, r9, #52	; 0x34
 800554e:	9600      	str	r6, [sp, #0]
 8005550:	f7fd f974 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005554:	f643 5334 	movw	r3, #15668	; 0x3d34
 8005558:	f04f 0101 	mov.w	r1, #1
 800555c:	52e1      	strh	r1, [r4, r3]
    flexButtonPageBack.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800555e:	49b7      	ldr	r1, [pc, #732]	; (800583c <_ZN15Screen1ViewBaseC1Ev+0x7e0>)
 8005560:	4ab7      	ldr	r2, [pc, #732]	; (8005840 <_ZN15Screen1ViewBaseC1Ev+0x7e4>)
 8005562:	9100      	str	r1, [sp, #0]
 8005564:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005568:	f6a3 13ce 	subw	r3, r3, #2510	; 0x9ce
 800556c:	f5a1 114c 	sub.w	r1, r1, #3342336	; 0x330000
 8005570:	4648      	mov	r0, r9
 8005572:	f7fd f98b 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005576:	4bb3      	ldr	r3, [pc, #716]	; (8005844 <_ZN15Screen1ViewBaseC1Ev+0x7e8>)
 8005578:	930c      	str	r3, [sp, #48]	; 0x30
    flexButtonPageBack.setWildcardText(TypedText(T___SINGLEUSE_IRA4));
 800557a:	a90c      	add	r1, sp, #48	; 0x30
 800557c:	2334      	movs	r3, #52	; 0x34
 800557e:	4648      	mov	r0, r9
 8005580:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005584:	f7fd f99d 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    Unicode::snprintf(flexButtonPageBackBuffer, FLEXBUTTONPAGEBACK_SIZE, "%s", TypedText(T___SINGLEUSE_EGRS).getText());
 8005588:	f504 4189 	add.w	r1, r4, #17536	; 0x4480
 800558c:	3130      	adds	r1, #48	; 0x30
 800558e:	9103      	str	r1, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005590:	49ad      	ldr	r1, [pc, #692]	; (8005848 <_ZN15Screen1ViewBaseC1Ev+0x7ec>)
 8005592:	680b      	ldr	r3, [r1, #0]
 8005594:	2b00      	cmp	r3, #0
 8005596:	d084      	beq.n	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005598:	48ac      	ldr	r0, [pc, #688]	; (800584c <_ZN15Screen1ViewBaseC1Ev+0x7f0>)
 800559a:	8803      	ldrh	r3, [r0, #0]
 800559c:	2b35      	cmp	r3, #53	; 0x35
 800559e:	d98a      	bls.n	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 80055a0:	4aa5      	ldr	r2, [pc, #660]	; (8005838 <_ZN15Screen1ViewBaseC1Ev+0x7dc>)
 80055a2:	2135      	movs	r1, #53	; 0x35
 80055a4:	6810      	ldr	r0, [r2, #0]
 80055a6:	f001 f9c5 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80055aa:	4aa9      	ldr	r2, [pc, #676]	; (8005850 <_ZN15Screen1ViewBaseC1Ev+0x7f4>)
 80055ac:	4603      	mov	r3, r0
 80055ae:	210a      	movs	r1, #10
 80055b0:	9803      	ldr	r0, [sp, #12]
 80055b2:	f011 fb3f 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80055b6:	f643 5384 	movw	r3, #15748	; 0x3d84
 80055ba:	9a03      	ldr	r2, [sp, #12]
 80055bc:	50e2      	str	r2, [r4, r3]
 80055be:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80055c2:	4633      	mov	r3, r6
 80055c4:	2205      	movs	r2, #5
 80055c6:	4629      	mov	r1, r5
 80055c8:	9600      	str	r6, [sp, #0]
 80055ca:	f7fd f937 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageBack.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80055ce:	4648      	mov	r0, r9
 80055d0:	463a      	mov	r2, r7
 80055d2:	4639      	mov	r1, r7
 80055d4:	f7ff fd3b 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
        rect.width = width;
 80055d8:	f643 43d8 	movw	r3, #15576	; 0x3cd8
 80055dc:	f04f 1e32 	mov.w	lr, #3276850	; 0x320032
 80055e0:	f844 e003 	str.w	lr, [r4, r3]
 80055e4:	f504 5374 	add.w	r3, r4, #15616	; 0x3d00
 80055e8:	9a02      	ldr	r2, [sp, #8]
 80055ea:	601a      	str	r2, [r3, #0]
    listLayoutPageButton.add(flexButtonPageBack);
 80055ec:	4649      	mov	r1, r9
 80055ee:	4658      	mov	r0, fp
 80055f0:	f00a f964 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80055f4:	ee1a 0a10 	vmov	r0, s20
 80055f8:	4633      	mov	r3, r6
 80055fa:	462a      	mov	r2, r5
 80055fc:	4629      	mov	r1, r5
 80055fe:	3034      	adds	r0, #52	; 0x34
 8005600:	9600      	str	r6, [sp, #0]
 8005602:	f7fd f91b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005606:	4a8d      	ldr	r2, [pc, #564]	; (800583c <_ZN15Screen1ViewBaseC1Ev+0x7e0>)
 8005608:	9200      	str	r2, [sp, #0]
 800560a:	f643 53f4 	movw	r3, #15860	; 0x3df4
 800560e:	f04f 0c01 	mov.w	ip, #1
 8005612:	f824 c003 	strh.w	ip, [r4, r3]
 8005616:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800561a:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 800561e:	498d      	ldr	r1, [pc, #564]	; (8005854 <_ZN15Screen1ViewBaseC1Ev+0x7f8>)
 8005620:	ee1a 0a10 	vmov	r0, s20
 8005624:	f6a3 238e 	subw	r3, r3, #2702	; 0xa8e
 8005628:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800562c:	f7fd f92e 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005630:	4b84      	ldr	r3, [pc, #528]	; (8005844 <_ZN15Screen1ViewBaseC1Ev+0x7e8>)
 8005632:	930c      	str	r3, [sp, #48]	; 0x30
    flexButtonPage_1.setWildcardText(TypedText(T___SINGLEUSE_WP7W));
 8005634:	f10d 0e30 	add.w	lr, sp, #48	; 0x30
 8005638:	2336      	movs	r3, #54	; 0x36
 800563a:	4671      	mov	r1, lr
 800563c:	ee1a 0a10 	vmov	r0, s20
 8005640:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005644:	f7fd f93d 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005648:	497f      	ldr	r1, [pc, #508]	; (8005848 <_ZN15Screen1ViewBaseC1Ev+0x7ec>)
 800564a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, "%s", TypedText(T___SINGLEUSE_IWNN).getText());
 800564c:	f504 4989 	add.w	r9, r4, #17536	; 0x4480
 8005650:	f109 0944 	add.w	r9, r9, #68	; 0x44
 8005654:	2b00      	cmp	r3, #0
 8005656:	f43f af24 	beq.w	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800565a:	487c      	ldr	r0, [pc, #496]	; (800584c <_ZN15Screen1ViewBaseC1Ev+0x7f0>)
 800565c:	8803      	ldrh	r3, [r0, #0]
 800565e:	2b37      	cmp	r3, #55	; 0x37
 8005660:	f67f af29 	bls.w	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 8005664:	4a74      	ldr	r2, [pc, #464]	; (8005838 <_ZN15Screen1ViewBaseC1Ev+0x7dc>)
 8005666:	2137      	movs	r1, #55	; 0x37
 8005668:	6810      	ldr	r0, [r2, #0]
 800566a:	f001 f963 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 800566e:	4a78      	ldr	r2, [pc, #480]	; (8005850 <_ZN15Screen1ViewBaseC1Ev+0x7f4>)
 8005670:	4603      	mov	r3, r0
 8005672:	210a      	movs	r1, #10
 8005674:	4648      	mov	r0, r9
 8005676:	f011 fadd 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800567a:	f643 6344 	movw	r3, #15940	; 0x3e44
 800567e:	ee1a 0a10 	vmov	r0, s20
 8005682:	f844 9003 	str.w	r9, [r4, r3]
 8005686:	2205      	movs	r2, #5
 8005688:	4633      	mov	r3, r6
 800568a:	4629      	mov	r1, r5
 800568c:	3078      	adds	r0, #120	; 0x78
 800568e:	9600      	str	r6, [sp, #0]
 8005690:	f7fd f8d4 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005694:	ee1a 0a10 	vmov	r0, s20
 8005698:	463a      	mov	r2, r7
 800569a:	4639      	mov	r1, r7
 800569c:	f7ff fcd7 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 80056a0:	f643 5398 	movw	r3, #15768	; 0x3d98
 80056a4:	f04f 1e32 	mov.w	lr, #3276850	; 0x320032
 80056a8:	f844 e003 	str.w	lr, [r4, r3]
 80056ac:	f504 5377 	add.w	r3, r4, #15808	; 0x3dc0
 80056b0:	9a02      	ldr	r2, [sp, #8]
 80056b2:	601a      	str	r2, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_1);
 80056b4:	ee1a 1a10 	vmov	r1, s20
 80056b8:	4658      	mov	r0, fp
 80056ba:	f00a f8ff 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80056be:	ee1a 0a90 	vmov	r0, s21
 80056c2:	4633      	mov	r3, r6
 80056c4:	462a      	mov	r2, r5
 80056c6:	4629      	mov	r1, r5
 80056c8:	3034      	adds	r0, #52	; 0x34
 80056ca:	9600      	str	r6, [sp, #0]
 80056cc:	f7fd f8b6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80056d0:	4a5a      	ldr	r2, [pc, #360]	; (800583c <_ZN15Screen1ViewBaseC1Ev+0x7e0>)
 80056d2:	9200      	str	r2, [sp, #0]
 80056d4:	f643 63b4 	movw	r3, #16052	; 0x3eb4
 80056d8:	f04f 0c01 	mov.w	ip, #1
 80056dc:	f824 c003 	strh.w	ip, [r4, r3]
 80056e0:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80056e4:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80056e8:	495a      	ldr	r1, [pc, #360]	; (8005854 <_ZN15Screen1ViewBaseC1Ev+0x7f8>)
 80056ea:	ee1a 0a90 	vmov	r0, s21
 80056ee:	f6a3 334e 	subw	r3, r3, #2894	; 0xb4e
 80056f2:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80056f6:	f7fd f8c9 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80056fa:	4b52      	ldr	r3, [pc, #328]	; (8005844 <_ZN15Screen1ViewBaseC1Ev+0x7e8>)
 80056fc:	930c      	str	r3, [sp, #48]	; 0x30
    flexButtonPage_2.setWildcardText(TypedText(T___SINGLEUSE_AKZM));
 80056fe:	f10d 0e30 	add.w	lr, sp, #48	; 0x30
 8005702:	2338      	movs	r3, #56	; 0x38
 8005704:	4671      	mov	r1, lr
 8005706:	ee1a 0a90 	vmov	r0, s21
 800570a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800570e:	f7fd f8d8 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005712:	494d      	ldr	r1, [pc, #308]	; (8005848 <_ZN15Screen1ViewBaseC1Ev+0x7ec>)
 8005714:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, "%s", TypedText(T___SINGLEUSE_G02N).getText());
 8005716:	f504 4989 	add.w	r9, r4, #17536	; 0x4480
 800571a:	f109 0958 	add.w	r9, r9, #88	; 0x58
 800571e:	2b00      	cmp	r3, #0
 8005720:	f43f aebf 	beq.w	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005724:	4849      	ldr	r0, [pc, #292]	; (800584c <_ZN15Screen1ViewBaseC1Ev+0x7f0>)
 8005726:	8803      	ldrh	r3, [r0, #0]
 8005728:	2b39      	cmp	r3, #57	; 0x39
 800572a:	f67f aec4 	bls.w	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 800572e:	4a42      	ldr	r2, [pc, #264]	; (8005838 <_ZN15Screen1ViewBaseC1Ev+0x7dc>)
 8005730:	2139      	movs	r1, #57	; 0x39
 8005732:	6810      	ldr	r0, [r2, #0]
 8005734:	f001 f8fe 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8005738:	4a45      	ldr	r2, [pc, #276]	; (8005850 <_ZN15Screen1ViewBaseC1Ev+0x7f4>)
 800573a:	4603      	mov	r3, r0
 800573c:	210a      	movs	r1, #10
 800573e:	4648      	mov	r0, r9
 8005740:	f011 fa78 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005744:	f643 7304 	movw	r3, #16132	; 0x3f04
 8005748:	ee1a 0a90 	vmov	r0, s21
 800574c:	4629      	mov	r1, r5
 800574e:	f844 9003 	str.w	r9, [r4, r3]
 8005752:	2205      	movs	r2, #5
 8005754:	4633      	mov	r3, r6
 8005756:	3078      	adds	r0, #120	; 0x78
 8005758:	9600      	str	r6, [sp, #0]
 800575a:	f7fd f86f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800575e:	463a      	mov	r2, r7
 8005760:	4639      	mov	r1, r7
 8005762:	ee1a 0a90 	vmov	r0, s21
 8005766:	f7ff fc72 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 800576a:	f643 6358 	movw	r3, #15960	; 0x3e58
 800576e:	f04f 1e32 	mov.w	lr, #3276850	; 0x320032
 8005772:	f844 e003 	str.w	lr, [r4, r3]
 8005776:	f504 537a 	add.w	r3, r4, #16000	; 0x3e80
 800577a:	9f02      	ldr	r7, [sp, #8]
 800577c:	601f      	str	r7, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_2);
 800577e:	ee1a 1a90 	vmov	r1, s21
 8005782:	4658      	mov	r0, fp
 8005784:	f00a f89a 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005788:	462a      	mov	r2, r5
 800578a:	4629      	mov	r1, r5
 800578c:	ee1b 5a10 	vmov	r5, s22
 8005790:	4633      	mov	r3, r6
 8005792:	f105 0034 	add.w	r0, r5, #52	; 0x34
 8005796:	9600      	str	r6, [sp, #0]
 8005798:	f7fd f850 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800579c:	f643 7374 	movw	r3, #16244	; 0x3f74
 80057a0:	f04f 0c01 	mov.w	ip, #1
 80057a4:	f824 c003 	strh.w	ip, [r4, r3]
    flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80057a8:	4d24      	ldr	r5, [pc, #144]	; (800583c <_ZN15Screen1ViewBaseC1Ev+0x7e0>)
 80057aa:	4a25      	ldr	r2, [pc, #148]	; (8005840 <_ZN15Screen1ViewBaseC1Ev+0x7e4>)
 80057ac:	4929      	ldr	r1, [pc, #164]	; (8005854 <_ZN15Screen1ViewBaseC1Ev+0x7f8>)
 80057ae:	9500      	str	r5, [sp, #0]
 80057b0:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80057b4:	ee1b 0a10 	vmov	r0, s22
 80057b8:	f6a3 430e 	subw	r3, r3, #3086	; 0xc0e
 80057bc:	f7fd f866 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80057c0:	233a      	movs	r3, #58	; 0x3a
 80057c2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
    flexButtonPage_3.setWildcardText(TypedText(T___SINGLEUSE_5HYA));
 80057c6:	ab0c      	add	r3, sp, #48	; 0x30
 80057c8:	4619      	mov	r1, r3
 80057ca:	4f1e      	ldr	r7, [pc, #120]	; (8005844 <_ZN15Screen1ViewBaseC1Ev+0x7e8>)
 80057cc:	970c      	str	r7, [sp, #48]	; 0x30
 80057ce:	ee1b 0a10 	vmov	r0, s22
 80057d2:	f7fd f876 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057d6:	491c      	ldr	r1, [pc, #112]	; (8005848 <_ZN15Screen1ViewBaseC1Ev+0x7ec>)
 80057d8:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, "%s", TypedText(T___SINGLEUSE_LYTH).getText());
 80057da:	f504 4589 	add.w	r5, r4, #17536	; 0x4480
 80057de:	356c      	adds	r5, #108	; 0x6c
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	f43f ae5e 	beq.w	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80057e6:	4819      	ldr	r0, [pc, #100]	; (800584c <_ZN15Screen1ViewBaseC1Ev+0x7f0>)
 80057e8:	8803      	ldrh	r3, [r0, #0]
 80057ea:	2b3b      	cmp	r3, #59	; 0x3b
 80057ec:	f67f ae63 	bls.w	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 80057f0:	4a11      	ldr	r2, [pc, #68]	; (8005838 <_ZN15Screen1ViewBaseC1Ev+0x7dc>)
 80057f2:	213b      	movs	r1, #59	; 0x3b
 80057f4:	6810      	ldr	r0, [r2, #0]
 80057f6:	f001 f89d 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80057fa:	4a15      	ldr	r2, [pc, #84]	; (8005850 <_ZN15Screen1ViewBaseC1Ev+0x7f4>)
 80057fc:	4603      	mov	r3, r0
 80057fe:	210a      	movs	r1, #10
 8005800:	4628      	mov	r0, r5
 8005802:	f011 fa17 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005806:	f643 73c4 	movw	r3, #16324	; 0x3fc4
 800580a:	9600      	str	r6, [sp, #0]
 800580c:	50e5      	str	r5, [r4, r3]
 800580e:	4633      	mov	r3, r6
 8005810:	4635      	mov	r5, r6
 8005812:	ee1b 6a10 	vmov	r6, s22
 8005816:	f106 0078 	add.w	r0, r6, #120	; 0x78
 800581a:	4e0f      	ldr	r6, [pc, #60]	; (8005858 <_ZN15Screen1ViewBaseC1Ev+0x7fc>)
 800581c:	2205      	movs	r2, #5
 800581e:	2100      	movs	r1, #0
 8005820:	f7fd f80c 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_3.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005824:	ee1b 0a10 	vmov	r0, s22
 8005828:	4632      	mov	r2, r6
 800582a:	4631      	mov	r1, r6
 800582c:	f7ff fc0f 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005830:	f643 7318 	movw	r3, #16152	; 0x3f18
 8005834:	e012      	b.n	800585c <_ZN15Screen1ViewBaseC1Ev+0x800>
 8005836:	bf00      	nop
 8005838:	200200e8 	.word	0x200200e8
 800583c:	ff336699 	.word	0xff336699
 8005840:	ff0099cc 	.word	0xff0099cc
 8005844:	08025b88 	.word	0x08025b88
 8005848:	200200dc 	.word	0x200200dc
 800584c:	200200e0 	.word	0x200200e0
 8005850:	08025b7d 	.word	0x08025b7d
 8005854:	ff006699 	.word	0xff006699
 8005858:	ff0a0a0a 	.word	0xff0a0a0a
 800585c:	f04f 1c32 	mov.w	ip, #3276850	; 0x320032
 8005860:	f844 c003 	str.w	ip, [r4, r3]
 8005864:	f504 537d 	add.w	r3, r4, #16192	; 0x3f40
 8005868:	9a02      	ldr	r2, [sp, #8]
 800586a:	601a      	str	r2, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_3);
 800586c:	ee1b 1a10 	vmov	r1, s22
 8005870:	4658      	mov	r0, fp
 8005872:	f00a f823 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005876:	ee1b 0a90 	vmov	r0, s23
 800587a:	2200      	movs	r2, #0
 800587c:	4611      	mov	r1, r2
 800587e:	462b      	mov	r3, r5
 8005880:	3034      	adds	r0, #52	; 0x34
 8005882:	9500      	str	r5, [sp, #0]
 8005884:	f7fc ffda 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005888:	f244 0334 	movw	r3, #16436	; 0x4034
 800588c:	f04f 0901 	mov.w	r9, #1
 8005890:	f824 9003 	strh.w	r9, [r4, r3]
    flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005894:	4bd3      	ldr	r3, [pc, #844]	; (8005be4 <_ZN15Screen1ViewBaseC1Ev+0xb88>)
 8005896:	9300      	str	r3, [sp, #0]
 8005898:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800589c:	4ad2      	ldr	r2, [pc, #840]	; (8005be8 <_ZN15Screen1ViewBaseC1Ev+0xb8c>)
 800589e:	49d3      	ldr	r1, [pc, #844]	; (8005bec <_ZN15Screen1ViewBaseC1Ev+0xb90>)
 80058a0:	ee1b 0a90 	vmov	r0, s23
 80058a4:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80058a8:	f7fc fff0 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80058ac:	233c      	movs	r3, #60	; 0x3c
 80058ae:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
    flexButtonPage_4.setWildcardText(TypedText(T___SINGLEUSE_IX3T));
 80058b2:	ab0c      	add	r3, sp, #48	; 0x30
 80058b4:	4619      	mov	r1, r3
 80058b6:	ee1b 0a90 	vmov	r0, s23
 80058ba:	970c      	str	r7, [sp, #48]	; 0x30
 80058bc:	f7fd f801 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80058c0:	49cb      	ldr	r1, [pc, #812]	; (8005bf0 <_ZN15Screen1ViewBaseC1Ev+0xb94>)
 80058c2:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, "%s", TypedText(T___SINGLEUSE_MKU4).getText());
 80058c4:	f504 478a 	add.w	r7, r4, #17664	; 0x4500
 80058c8:	2b00      	cmp	r3, #0
 80058ca:	f43f adea 	beq.w	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80058ce:	48c9      	ldr	r0, [pc, #804]	; (8005bf4 <_ZN15Screen1ViewBaseC1Ev+0xb98>)
 80058d0:	8803      	ldrh	r3, [r0, #0]
 80058d2:	2b3d      	cmp	r3, #61	; 0x3d
 80058d4:	f67f adef 	bls.w	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 80058d8:	4ac7      	ldr	r2, [pc, #796]	; (8005bf8 <_ZN15Screen1ViewBaseC1Ev+0xb9c>)
 80058da:	213d      	movs	r1, #61	; 0x3d
 80058dc:	6810      	ldr	r0, [r2, #0]
 80058de:	f001 f829 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 80058e2:	4ac6      	ldr	r2, [pc, #792]	; (8005bfc <_ZN15Screen1ViewBaseC1Ev+0xba0>)
 80058e4:	4603      	mov	r3, r0
 80058e6:	210a      	movs	r1, #10
 80058e8:	4638      	mov	r0, r7
 80058ea:	f011 f9a3 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80058ee:	f244 0384 	movw	r3, #16516	; 0x4084
 80058f2:	ee1b 0a90 	vmov	r0, s23
 80058f6:	50e7      	str	r7, [r4, r3]
 80058f8:	2205      	movs	r2, #5
 80058fa:	462b      	mov	r3, r5
 80058fc:	2100      	movs	r1, #0
 80058fe:	3078      	adds	r0, #120	; 0x78
 8005900:	9500      	str	r5, [sp, #0]
 8005902:	f7fc ff9b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_4.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005906:	ee1b 0a90 	vmov	r0, s23
 800590a:	4632      	mov	r2, r6
 800590c:	4631      	mov	r1, r6
 800590e:	f7ff fb9e 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005912:	f643 73d8 	movw	r3, #16344	; 0x3fd8
 8005916:	f04f 1c32 	mov.w	ip, #3276850	; 0x320032
 800591a:	f844 c003 	str.w	ip, [r4, r3]
 800591e:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
 8005922:	9a02      	ldr	r2, [sp, #8]
 8005924:	601a      	str	r2, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_4);
 8005926:	ee1b 1a90 	vmov	r1, s23
 800592a:	4658      	mov	r0, fp
 800592c:	f009 ffc6 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005930:	ee1c 0a10 	vmov	r0, s24
 8005934:	2200      	movs	r2, #0
 8005936:	4611      	mov	r1, r2
 8005938:	462b      	mov	r3, r5
 800593a:	3034      	adds	r0, #52	; 0x34
 800593c:	9500      	str	r5, [sp, #0]
 800593e:	f7fc ff7d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005942:	f244 03f4 	movw	r3, #16628	; 0x40f4
    flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005946:	4aa8      	ldr	r2, [pc, #672]	; (8005be8 <_ZN15Screen1ViewBaseC1Ev+0xb8c>)
 8005948:	f824 9003 	strh.w	r9, [r4, r3]
 800594c:	4ba5      	ldr	r3, [pc, #660]	; (8005be4 <_ZN15Screen1ViewBaseC1Ev+0xb88>)
 800594e:	9300      	str	r3, [sp, #0]
 8005950:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8005954:	49a5      	ldr	r1, [pc, #660]	; (8005bec <_ZN15Screen1ViewBaseC1Ev+0xb90>)
        : typedTextId(id)
 8005956:	4faa      	ldr	r7, [pc, #680]	; (8005c00 <_ZN15Screen1ViewBaseC1Ev+0xba4>)
 8005958:	ee1c 0a10 	vmov	r0, s24
 800595c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8005960:	f7fc ff94 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005964:	233e      	movs	r3, #62	; 0x3e
 8005966:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
    flexButtonPage_5.setWildcardText(TypedText(T___SINGLEUSE_I0UZ));
 800596a:	ab0c      	add	r3, sp, #48	; 0x30
 800596c:	4619      	mov	r1, r3
 800596e:	ee1c 0a10 	vmov	r0, s24
 8005972:	970c      	str	r7, [sp, #48]	; 0x30
 8005974:	f7fc ffa5 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005978:	499d      	ldr	r1, [pc, #628]	; (8005bf0 <_ZN15Screen1ViewBaseC1Ev+0xb94>)
 800597a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, "%s", TypedText(T___SINGLEUSE_ONOL).getText());
 800597c:	f504 478a 	add.w	r7, r4, #17664	; 0x4500
 8005980:	3714      	adds	r7, #20
 8005982:	2b00      	cmp	r3, #0
 8005984:	f43f ad8d 	beq.w	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005988:	489a      	ldr	r0, [pc, #616]	; (8005bf4 <_ZN15Screen1ViewBaseC1Ev+0xb98>)
 800598a:	8803      	ldrh	r3, [r0, #0]
 800598c:	2b3f      	cmp	r3, #63	; 0x3f
 800598e:	f67f ad92 	bls.w	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 8005992:	4a99      	ldr	r2, [pc, #612]	; (8005bf8 <_ZN15Screen1ViewBaseC1Ev+0xb9c>)
 8005994:	213f      	movs	r1, #63	; 0x3f
 8005996:	6810      	ldr	r0, [r2, #0]
 8005998:	f000 ffcc 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 800599c:	4a97      	ldr	r2, [pc, #604]	; (8005bfc <_ZN15Screen1ViewBaseC1Ev+0xba0>)
 800599e:	4603      	mov	r3, r0
 80059a0:	210a      	movs	r1, #10
 80059a2:	4638      	mov	r0, r7
 80059a4:	f011 f946 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80059a8:	f244 1344 	movw	r3, #16708	; 0x4144
 80059ac:	ee1c 0a10 	vmov	r0, s24
 80059b0:	50e7      	str	r7, [r4, r3]
 80059b2:	2205      	movs	r2, #5
 80059b4:	462b      	mov	r3, r5
 80059b6:	2100      	movs	r1, #0
 80059b8:	3078      	adds	r0, #120	; 0x78
 80059ba:	9500      	str	r5, [sp, #0]
 80059bc:	f7fc ff3e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_5.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80059c0:	ee1c 0a10 	vmov	r0, s24
 80059c4:	4632      	mov	r2, r6
 80059c6:	4631      	mov	r1, r6
 80059c8:	f7ff fb41 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 80059cc:	f244 0398 	movw	r3, #16536	; 0x4098
 80059d0:	f04f 1c32 	mov.w	ip, #3276850	; 0x320032
 80059d4:	f844 c003 	str.w	ip, [r4, r3]
 80059d8:	f244 03c0 	movw	r3, #16576	; 0x40c0
 80059dc:	9a02      	ldr	r2, [sp, #8]
 80059de:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_5);
 80059e0:	ee1c 1a10 	vmov	r1, s24
 80059e4:	4658      	mov	r0, fp
 80059e6:	f009 ff69 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80059ea:	ee1c 0a90 	vmov	r0, s25
 80059ee:	2200      	movs	r2, #0
 80059f0:	4611      	mov	r1, r2
 80059f2:	462b      	mov	r3, r5
 80059f4:	3034      	adds	r0, #52	; 0x34
 80059f6:	9500      	str	r5, [sp, #0]
 80059f8:	f7fc ff20 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80059fc:	f244 13b4 	movw	r3, #16820	; 0x41b4
    flexButtonPageForward.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005a00:	4a79      	ldr	r2, [pc, #484]	; (8005be8 <_ZN15Screen1ViewBaseC1Ev+0xb8c>)
 8005a02:	f824 9003 	strh.w	r9, [r4, r3]
 8005a06:	4b77      	ldr	r3, [pc, #476]	; (8005be4 <_ZN15Screen1ViewBaseC1Ev+0xb88>)
 8005a08:	9300      	str	r3, [sp, #0]
 8005a0a:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8005a0e:	4977      	ldr	r1, [pc, #476]	; (8005bec <_ZN15Screen1ViewBaseC1Ev+0xb90>)
        : typedTextId(id)
 8005a10:	4f7b      	ldr	r7, [pc, #492]	; (8005c00 <_ZN15Screen1ViewBaseC1Ev+0xba4>)
 8005a12:	ee1c 0a90 	vmov	r0, s25
 8005a16:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8005a1a:	f7fc ff37 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonPageForward.setWildcardText(TypedText(T___SINGLEUSE_A1TC));
 8005a1e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8005a22:	2340      	movs	r3, #64	; 0x40
 8005a24:	4661      	mov	r1, ip
 8005a26:	ee1c 0a90 	vmov	r0, s25
 8005a2a:	970c      	str	r7, [sp, #48]	; 0x30
 8005a2c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005a30:	f7fc ff47 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a34:	496e      	ldr	r1, [pc, #440]	; (8005bf0 <_ZN15Screen1ViewBaseC1Ev+0xb94>)
 8005a36:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButtonPageForwardBuffer, FLEXBUTTONPAGEFORWARD_SIZE, "%s", TypedText(T___SINGLEUSE_UI2S).getText());
 8005a38:	f504 478a 	add.w	r7, r4, #17664	; 0x4500
 8005a3c:	3728      	adds	r7, #40	; 0x28
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	f43f ad2f 	beq.w	80054a2 <_ZN15Screen1ViewBaseC1Ev+0x446>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005a44:	486b      	ldr	r0, [pc, #428]	; (8005bf4 <_ZN15Screen1ViewBaseC1Ev+0xb98>)
 8005a46:	8803      	ldrh	r3, [r0, #0]
 8005a48:	2b41      	cmp	r3, #65	; 0x41
 8005a4a:	f67f ad34 	bls.w	80054b6 <_ZN15Screen1ViewBaseC1Ev+0x45a>
        return texts->getText(typedTextId);
 8005a4e:	4a6a      	ldr	r2, [pc, #424]	; (8005bf8 <_ZN15Screen1ViewBaseC1Ev+0xb9c>)
 8005a50:	2141      	movs	r1, #65	; 0x41
 8005a52:	6810      	ldr	r0, [r2, #0]
 8005a54:	f000 ff6e 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8005a58:	4a68      	ldr	r2, [pc, #416]	; (8005bfc <_ZN15Screen1ViewBaseC1Ev+0xba0>)
 8005a5a:	4603      	mov	r3, r0
 8005a5c:	210a      	movs	r1, #10
 8005a5e:	4638      	mov	r0, r7
 8005a60:	f011 f8e8 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005a64:	ee1c 0a90 	vmov	r0, s25
 8005a68:	f244 2304 	movw	r3, #16900	; 0x4204
 8005a6c:	9500      	str	r5, [sp, #0]
 8005a6e:	50e7      	str	r7, [r4, r3]
 8005a70:	2205      	movs	r2, #5
 8005a72:	462b      	mov	r3, r5
 8005a74:	2100      	movs	r1, #0
 8005a76:	3078      	adds	r0, #120	; 0x78
 8005a78:	f7fc fee0 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageForward.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005a7c:	ee1c 0a90 	vmov	r0, s25
 8005a80:	4632      	mov	r2, r6
 8005a82:	4631      	mov	r1, r6
 8005a84:	f7ff fae3 	bl	800504e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005a88:	f244 1358 	movw	r3, #16728	; 0x4158
 8005a8c:	f04f 1232 	mov.w	r2, #3276850	; 0x320032
 8005a90:	50e2      	str	r2, [r4, r3]
 8005a92:	f504 4383 	add.w	r3, r4, #16768	; 0x4180
 8005a96:	9a02      	ldr	r2, [sp, #8]
 8005a98:	601a      	str	r2, [r3, #0]
    listLayoutPageButton.add(flexButtonPageForward);
 8005a9a:	ee1c 1a90 	vmov	r1, s25
 8005a9e:	4658      	mov	r0, fp
 8005aa0:	f009 ff0c 	bl	800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_480X272PX_ID), 160, 104);
 8005aa4:	2303      	movs	r3, #3
 8005aa6:	22a0      	movs	r2, #160	; 0xa0
 8005aa8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005aac:	a90c      	add	r1, sp, #48	; 0x30
 8005aae:	2368      	movs	r3, #104	; 0x68
 8005ab0:	4650      	mov	r0, sl
 8005ab2:	f009 fa5f 	bl	800ef74 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8005ab6:	4650      	mov	r0, sl
 8005ab8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8005abc:	f009 fa47 	bl	800ef4e <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8005ac0:	2196      	movs	r1, #150	; 0x96
 8005ac2:	4650      	mov	r0, sl
 8005ac4:	f009 fa47 	bl	800ef56 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8005ac8:	4650      	mov	r0, sl
 8005aca:	f009 fa36 	bl	800ef3a <_ZN8touchgfx11ModalWindow4hideEv>
 8005ace:	ee19 0a10 	vmov	r0, s18
 8005ad2:	2728      	movs	r7, #40	; 0x28
 8005ad4:	2200      	movs	r2, #0
 8005ad6:	462b      	mov	r3, r5
 8005ad8:	4611      	mov	r1, r2
 8005ada:	9700      	str	r7, [sp, #0]
 8005adc:	3034      	adds	r0, #52	; 0x34
 8005ade:	f7fc fead 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonOkFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005ae2:	4a40      	ldr	r2, [pc, #256]	; (8005be4 <_ZN15Screen1ViewBaseC1Ev+0xb88>)
 8005ae4:	9200      	str	r2, [sp, #0]
 8005ae6:	f244 3324 	movw	r3, #17188	; 0x4324
 8005aea:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8005aee:	f824 9003 	strh.w	r9, [r4, r3]
 8005af2:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005af6:	ee19 0a10 	vmov	r0, s18
 8005afa:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8005afe:	493b      	ldr	r1, [pc, #236]	; (8005bec <_ZN15Screen1ViewBaseC1Ev+0xb90>)
 8005b00:	f6a3 73be 	subw	r3, r3, #4030	; 0xfbe
 8005b04:	f7fc fec2 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005b08:	4b3d      	ldr	r3, [pc, #244]	; (8005c00 <_ZN15Screen1ViewBaseC1Ev+0xba4>)
 8005b0a:	930c      	str	r3, [sp, #48]	; 0x30
    flexButtonOkFilDataTime.setText(TypedText(T___SINGLEUSE_NY18));
 8005b0c:	ee19 0a10 	vmov	r0, s18
 8005b10:	2344      	movs	r3, #68	; 0x44
 8005b12:	a90c      	add	r1, sp, #48	; 0x30
 8005b14:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005b18:	f7fc fec4 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8005b1c:	ee19 0a10 	vmov	r0, s18
 8005b20:	2200      	movs	r2, #0
 8005b22:	4611      	mov	r1, r2
 8005b24:	462b      	mov	r3, r5
 8005b26:	9700      	str	r7, [sp, #0]
 8005b28:	3078      	adds	r0, #120	; 0x78
 8005b2a:	f7fc fe87 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8005b2e:	f244 3374 	movw	r3, #17268	; 0x4374
        handlePressedUpdated();
 8005b32:	ee19 0a10 	vmov	r0, s18
        colorReleased = newColorReleased;
 8005b36:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8005b38:	f244 3378 	movw	r3, #17272	; 0x4378
 8005b3c:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8005b3e:	f7fc fd28 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonOkFilDataTime.setPosition(143, 222, 50, 40);
 8005b42:	ee19 0a10 	vmov	r0, s18
 8005b46:	462b      	mov	r3, r5
 8005b48:	9700      	str	r7, [sp, #0]
 8005b4a:	22de      	movs	r2, #222	; 0xde
 8005b4c:	218f      	movs	r1, #143	; 0x8f
 8005b4e:	f7fc fe75 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b52:	f244 23f0 	movw	r3, #17136	; 0x42f0
 8005b56:	9a02      	ldr	r2, [sp, #8]
 8005b58:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonOkFilDataTime);
 8005b5a:	ee19 1a10 	vmov	r1, s18
 8005b5e:	4650      	mov	r0, sl
 8005b60:	f009 f9f2 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8005b64:	ee19 0a90 	vmov	r0, s19
 8005b68:	2200      	movs	r2, #0
 8005b6a:	462b      	mov	r3, r5
 8005b6c:	4611      	mov	r1, r2
 8005b6e:	9700      	str	r7, [sp, #0]
 8005b70:	3034      	adds	r0, #52	; 0x34
 8005b72:	f7fc fe63 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonExitFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005b76:	4a1b      	ldr	r2, [pc, #108]	; (8005be4 <_ZN15Screen1ViewBaseC1Ev+0xb88>)
 8005b78:	9200      	str	r2, [sp, #0]
 8005b7a:	f244 33e0 	movw	r3, #17376	; 0x43e0
 8005b7e:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8005b82:	f824 9003 	strh.w	r9, [r4, r3]
 8005b86:	ee19 0a90 	vmov	r0, s19
 8005b8a:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8005b8e:	4b1d      	ldr	r3, [pc, #116]	; (8005c04 <_ZN15Screen1ViewBaseC1Ev+0xba8>)
 8005b90:	4916      	ldr	r1, [pc, #88]	; (8005bec <_ZN15Screen1ViewBaseC1Ev+0xb90>)
 8005b92:	f7fc fe7b 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005b96:	4b1a      	ldr	r3, [pc, #104]	; (8005c00 <_ZN15Screen1ViewBaseC1Ev+0xba4>)
 8005b98:	930c      	str	r3, [sp, #48]	; 0x30
    flexButtonExitFilDataTime.setText(TypedText(T___SINGLEUSE_BK1O));
 8005b9a:	ee19 0a90 	vmov	r0, s19
 8005b9e:	2345      	movs	r3, #69	; 0x45
 8005ba0:	a90c      	add	r1, sp, #48	; 0x30
 8005ba2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005ba6:	f7fc fe7d 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8005baa:	ee19 0a90 	vmov	r0, s19
 8005bae:	2200      	movs	r2, #0
 8005bb0:	4611      	mov	r1, r2
 8005bb2:	462b      	mov	r3, r5
 8005bb4:	9700      	str	r7, [sp, #0]
 8005bb6:	3078      	adds	r0, #120	; 0x78
 8005bb8:	f7fc fe40 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8005bbc:	f244 4330 	movw	r3, #17456	; 0x4430
        handlePressedUpdated();
 8005bc0:	ee19 0a90 	vmov	r0, s19
        colorReleased = newColorReleased;
 8005bc4:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8005bc6:	f244 4334 	movw	r3, #17460	; 0x4434
 8005bca:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8005bcc:	f7fc fce1 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonExitFilDataTime.setPosition(279, 222, 50, 40);
 8005bd0:	ee19 0a90 	vmov	r0, s19
 8005bd4:	462b      	mov	r3, r5
 8005bd6:	9700      	str	r7, [sp, #0]
 8005bd8:	22de      	movs	r2, #222	; 0xde
 8005bda:	f240 1117 	movw	r1, #279	; 0x117
 8005bde:	f7fc fe2d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005be2:	e011      	b.n	8005c08 <_ZN15Screen1ViewBaseC1Ev+0xbac>
 8005be4:	ff336699 	.word	0xff336699
 8005be8:	ff0099cc 	.word	0xff0099cc
 8005bec:	ff006699 	.word	0xff006699
 8005bf0:	200200dc 	.word	0x200200dc
 8005bf4:	200200e0 	.word	0x200200e0
 8005bf8:	200200e8 	.word	0x200200e8
 8005bfc:	08025b7d 	.word	0x08025b7d
 8005c00:	08025b88 	.word	0x08025b88
 8005c04:	ff003366 	.word	0xff003366
 8005c08:	f244 33ac 	movw	r3, #17324	; 0x43ac
 8005c0c:	9a02      	ldr	r2, [sp, #8]
 8005c0e:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonExitFilDataTime);
 8005c10:	ee19 1a90 	vmov	r1, s19
 8005c14:	4650      	mov	r0, sl
 8005c16:	f009 f997 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8005c1a:	ee1d 0a90 	vmov	r0, s27
 8005c1e:	251f      	movs	r5, #31
 8005c20:	2200      	movs	r2, #0
 8005c22:	9500      	str	r5, [sp, #0]
 8005c24:	4611      	mov	r1, r2
 8005c26:	2347      	movs	r3, #71	; 0x47
 8005c28:	3034      	adds	r0, #52	; 0x34
 8005c2a:	f7fc fe07 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c2e:	f244 439c 	movw	r3, #17564	; 0x449c
 8005c32:	2205      	movs	r2, #5
 8005c34:	52e2      	strh	r2, [r4, r3]
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 7, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005c36:	4b21      	ldr	r3, [pc, #132]	; (8005cbc <_ZN15Screen1ViewBaseC1Ev+0xc60>)
 8005c38:	9300      	str	r3, [sp, #0]
 8005c3a:	ee1d 0a90 	vmov	r0, s27
 8005c3e:	4b20      	ldr	r3, [pc, #128]	; (8005cc0 <_ZN15Screen1ViewBaseC1Ev+0xc64>)
 8005c40:	4a20      	ldr	r2, [pc, #128]	; (8005cc4 <_ZN15Screen1ViewBaseC1Ev+0xc68>)
 8005c42:	4921      	ldr	r1, [pc, #132]	; (8005cc8 <_ZN15Screen1ViewBaseC1Ev+0xc6c>)
 8005c44:	f7fc fe22 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setPosition(375, 221, 71, 31);
 8005c48:	2347      	movs	r3, #71	; 0x47
 8005c4a:	22dd      	movs	r2, #221	; 0xdd
 8005c4c:	ee1d 0a90 	vmov	r0, s27
 8005c50:	9500      	str	r5, [sp, #0]
 8005c52:	f240 1177 	movw	r1, #375	; 0x177
 8005c56:	f7fc fdf1 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8005c5a:	1d25      	adds	r5, r4, #4
    modalWindow1.add(flexButton1);
 8005c5c:	ee1d 1a90 	vmov	r1, s27
 8005c60:	4650      	mov	r0, sl
 8005c62:	f009 f971 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8005c66:	ee1e 1a10 	vmov	r1, s28
 8005c6a:	4628      	mov	r0, r5
 8005c6c:	f009 fab2 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c70:	ee1e 1a90 	vmov	r1, s29
 8005c74:	4628      	mov	r0, r5
 8005c76:	f009 faad 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c7a:	4641      	mov	r1, r8
 8005c7c:	4628      	mov	r0, r5
 8005c7e:	f009 faa9 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c82:	ee1d 1a10 	vmov	r1, s26
 8005c86:	4628      	mov	r0, r5
 8005c88:	f009 faa4 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c8c:	ee18 1a10 	vmov	r1, s16
 8005c90:	4628      	mov	r0, r5
 8005c92:	f009 fa9f 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c96:	ee18 1a90 	vmov	r1, s17
 8005c9a:	4628      	mov	r0, r5
 8005c9c:	f009 fa9a 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ca0:	4659      	mov	r1, fp
 8005ca2:	4628      	mov	r0, r5
 8005ca4:	f009 fa96 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ca8:	4628      	mov	r0, r5
 8005caa:	4651      	mov	r1, sl
 8005cac:	f009 fa92 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005cb0:	4620      	mov	r0, r4
 8005cb2:	b00f      	add	sp, #60	; 0x3c
 8005cb4:	ecbd 8b10 	vpop	{d8-d15}
 8005cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cbc:	ff336699 	.word	0xff336699
 8005cc0:	ff000766 	.word	0xff000766
 8005cc4:	ff0099cc 	.word	0xff0099cc
 8005cc8:	ff006699 	.word	0xff006699

08005ccc <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8005ccc:	4770      	bx	lr

08005cce <_ZN15Screen2ViewBase31CallbackcustomContainerKeyboardEv>:
     * Virtual Action Handlers
     */
    virtual void CallbackcustomContainerKeyboard()
    {
        // Override and implement this function in Screen2
    }
 8005cce:	4770      	bx	lr

08005cd0 <_ZN15Screen2ViewBase9function2Ev>:

    virtual void function2()
    {
        // Override and implement this function in Screen2
    }
 8005cd0:	4770      	bx	lr

08005cd2 <_ZN15Screen2ViewBase9function3Ev>:

    virtual void function3()
    {
        // Override and implement this function in Screen2
    }
 8005cd2:	4770      	bx	lr

08005cd4 <_ZN15Screen2ViewBase35CallbackcustomContainerKeyboard_NumEv>:

    virtual void CallbackcustomContainerKeyboard_Num()
    {
        // Override and implement this function in Screen2
    }
 8005cd4:	4770      	bx	lr

08005cd6 <_ZN15Screen2ViewBase20functionSaveSettingsEv>:

    virtual void functionSaveSettings()
    {
        // Override and implement this function in Screen2
    }
 8005cd6:	4770      	bx	lr

08005cd8 <_ZN15Screen2ViewBase23functionSaveModalWindowEv>:

    virtual void functionSaveModalWindow()
    {
        // Override and implement this function in Screen2
    }
 8005cd8:	4770      	bx	lr

08005cda <_ZN15Screen2ViewBase54customContainerKeyboard1TriggerKeyboardCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard1TriggerKeyboardCallbackHandler()
{
    //Interaction1
    //When customContainerKeyboard1 triggerKeyboard call virtual function
    //Call CallbackcustomContainerKeyboard
    CallbackcustomContainerKeyboard();
 8005cda:	6803      	ldr	r3, [r0, #0]
 8005cdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005cde:	4718      	bx	r3

08005ce0 <_ZN15Screen2ViewBase62customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler()
{
    //Interaction4
    //When customContainerKeyboard_Num1 triggerKeyboard_Num call virtual function
    //Call CallbackcustomContainerKeyboard_Num
    CallbackcustomContainerKeyboard_Num();
 8005ce0:	6803      	ldr	r3, [r0, #0]
 8005ce2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005ce4:	4718      	bx	r3

08005ce6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8005ce6:	4770      	bx	lr

08005ce8 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005ce8:	4770      	bx	lr

08005cea <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005cea:	4770      	bx	lr

08005cec <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8005cec:	4770      	bx	lr

08005cee <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED1Ev>:
class WildcardTextButtonStyle : public T
 8005cee:	4770      	bx	lr

08005cf0 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvE7executeEv>:
    virtual void execute()
 8005cf0:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8005cf2:	68c2      	ldr	r2, [r0, #12]
 8005cf4:	6841      	ldr	r1, [r0, #4]
 8005cf6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005cf8:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8005cfa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8005cfe:	07d2      	lsls	r2, r2, #31
 8005d00:	bf48      	it	mi
 8005d02:	590a      	ldrmi	r2, [r1, r4]
 8005d04:	689b      	ldr	r3, [r3, #8]
    }
 8005d06:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8005d0a:	bf48      	it	mi
 8005d0c:	58d3      	ldrmi	r3, [r2, r3]
 8005d0e:	4718      	bx	r3

08005d10 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8005d10:	6843      	ldr	r3, [r0, #4]
 8005d12:	b12b      	cbz	r3, 8005d20 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x10>
 8005d14:	6883      	ldr	r3, [r0, #8]
 8005d16:	b92b      	cbnz	r3, 8005d24 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x14>
 8005d18:	68c0      	ldr	r0, [r0, #12]
 8005d1a:	f000 0001 	and.w	r0, r0, #1
 8005d1e:	4770      	bx	lr
 8005d20:	4618      	mov	r0, r3
 8005d22:	4770      	bx	lr
 8005d24:	2001      	movs	r0, #1
    }
 8005d26:	4770      	bx	lr

08005d28 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005d28:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005d2a:	68c2      	ldr	r2, [r0, #12]
 8005d2c:	6844      	ldr	r4, [r0, #4]
 8005d2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005d30:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8005d32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005d36:	07d2      	lsls	r2, r2, #31
 8005d38:	bf48      	it	mi
 8005d3a:	5962      	ldrmi	r2, [r4, r5]
 8005d3c:	689b      	ldr	r3, [r3, #8]
    }
 8005d3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005d40:	bf48      	it	mi
 8005d42:	58d3      	ldrmi	r3, [r2, r3]
 8005d44:	4718      	bx	r3

08005d46 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8005d46:	6843      	ldr	r3, [r0, #4]
 8005d48:	b12b      	cbz	r3, 8005d56 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8005d4a:	6883      	ldr	r3, [r0, #8]
 8005d4c:	b92b      	cbnz	r3, 8005d5a <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8005d4e:	68c0      	ldr	r0, [r0, #12]
 8005d50:	f000 0001 	and.w	r0, r0, #1
 8005d54:	4770      	bx	lr
 8005d56:	4618      	mov	r0, r3
 8005d58:	4770      	bx	lr
 8005d5a:	2001      	movs	r0, #1
    }
 8005d5c:	4770      	bx	lr

08005d5e <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005d5e:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005d60:	68c2      	ldr	r2, [r0, #12]
 8005d62:	6844      	ldr	r4, [r0, #4]
 8005d64:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005d66:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8005d68:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005d6c:	07d2      	lsls	r2, r2, #31
 8005d6e:	bf48      	it	mi
 8005d70:	5962      	ldrmi	r2, [r4, r5]
 8005d72:	689b      	ldr	r3, [r3, #8]
    }
 8005d74:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005d76:	bf48      	it	mi
 8005d78:	58d3      	ldrmi	r3, [r2, r3]
 8005d7a:	4718      	bx	r3

08005d7c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8005d7c:	6843      	ldr	r3, [r0, #4]
 8005d7e:	b12b      	cbz	r3, 8005d8c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005d80:	6883      	ldr	r3, [r0, #8]
 8005d82:	b92b      	cbnz	r3, 8005d90 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005d84:	68c0      	ldr	r0, [r0, #12]
 8005d86:	f000 0001 	and.w	r0, r0, #1
 8005d8a:	4770      	bx	lr
 8005d8c:	4618      	mov	r0, r3
 8005d8e:	4770      	bx	lr
 8005d90:	2001      	movs	r0, #1
    }
 8005d92:	4770      	bx	lr

08005d94 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE18handleAlphaUpdatedEv>:
        wildcardText.setAlpha(T::getAlpha());
 8005d94:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8005d98:	f880 30de 	strb.w	r3, [r0, #222]	; 0xde
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8005d9c:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
        alpha = newAlpha;
 8005da0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    }
 8005da4:	4770      	bx	lr

08005da6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
 8005da6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8005daa:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
 8005dae:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8005db2:	4770      	bx	lr

08005db4 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005db4:	b510      	push	{r4, lr}
 8005db6:	2110      	movs	r1, #16
 8005db8:	4604      	mov	r4, r0
 8005dba:	f01d f877 	bl	8022eac <_ZdlPvj>
 8005dbe:	4620      	mov	r0, r4
 8005dc0:	bd10      	pop	{r4, pc}

08005dc2 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005dc2:	b510      	push	{r4, lr}
 8005dc4:	2110      	movs	r1, #16
 8005dc6:	4604      	mov	r4, r0
 8005dc8:	f01d f870 	bl	8022eac <_ZdlPvj>
 8005dcc:	4620      	mov	r0, r4
 8005dce:	bd10      	pop	{r4, pc}

08005dd0 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8005dd0:	b510      	push	{r4, lr}
 8005dd2:	2110      	movs	r1, #16
 8005dd4:	4604      	mov	r4, r0
 8005dd6:	f01d f869 	bl	8022eac <_ZdlPvj>
 8005dda:	4620      	mov	r0, r4
 8005ddc:	bd10      	pop	{r4, pc}

08005dde <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8005dde:	b510      	push	{r4, lr}
 8005de0:	21a8      	movs	r1, #168	; 0xa8
 8005de2:	4604      	mov	r4, r0
 8005de4:	f01d f862 	bl	8022eac <_ZdlPvj>
 8005de8:	4620      	mov	r0, r4
 8005dea:	bd10      	pop	{r4, pc}

08005dec <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED0Ev>:
class WildcardTextButtonStyle : public T
 8005dec:	b510      	push	{r4, lr}
 8005dee:	21f0      	movs	r1, #240	; 0xf0
 8005df0:	4604      	mov	r4, r0
 8005df2:	f01d f85b 	bl	8022eac <_ZdlPvj>
 8005df6:	4620      	mov	r0, r4
 8005df8:	bd10      	pop	{r4, pc}

08005dfa <_ZN15Screen2ViewBaseD0Ev>:
    virtual ~Screen2ViewBase() {}
 8005dfa:	b510      	push	{r4, lr}
 8005dfc:	f244 5178 	movw	r1, #17784	; 0x4578
 8005e00:	4604      	mov	r4, r0
 8005e02:	f01d f853 	bl	8022eac <_ZdlPvj>
 8005e06:	4620      	mov	r0, r4
 8005e08:	bd10      	pop	{r4, pc}

08005e0a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8005e0a:	b510      	push	{r4, lr}
 8005e0c:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8005e0e:	307c      	adds	r0, #124	; 0x7c
 8005e10:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8005e14:	b13b      	cbz	r3, 8005e26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8005e16:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8005e1a:	f00b f9a7 	bl	801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8005e1e:	4620      	mov	r0, r4
 8005e20:	f7fc f976 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8005e24:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8005e26:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8005e2a:	e7f6      	b.n	8005e1a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08005e2c <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8005e2c:	b508      	push	{r3, lr}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8005e2e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8005e32:	b133      	cbz	r3, 8005e42 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x16>
 8005e34:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
        this->color = color;
 8005e38:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
        T::handlePressedUpdated();
 8005e3c:	f7ff ffe5 	bl	8005e0a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    }
 8005e40:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8005e42:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
 8005e46:	e7f7      	b.n	8005e38 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0xc>

08005e48 <_ZN15Screen2ViewBase11setupScreenEv>:
{
 8005e48:	b510      	push	{r4, lr}
 8005e4a:	4604      	mov	r4, r0
    customContainerKeyboard1.initialize();
 8005e4c:	30a0      	adds	r0, #160	; 0xa0
 8005e4e:	f000 fe69 	bl	8006b24 <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard_Num1.initialize();
 8005e52:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
 8005e56:	3038      	adds	r0, #56	; 0x38
}
 8005e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerKeyboard_Num1.initialize();
 8005e5c:	f000 bec8 	b.w	8006bf0 <_ZN27CustomContainerKeyboard_Num10initializeEv>

08005e60 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_text_out)
 8005e60:	f500 523d 	add.w	r2, r0, #12096	; 0x2f40
 8005e64:	3208      	adds	r2, #8
 8005e66:	4291      	cmp	r1, r2
{
 8005e68:	4603      	mov	r3, r0
    if (&src == &flexButton_text_out)
 8005e6a:	d102      	bne.n	8005e72 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12>
    {
        //Interaction2
        //When flexButton_text_out clicked call virtual function
        //Call function2
        function2();
 8005e6c:	6803      	ldr	r3, [r0, #0]
 8005e6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonSaveYes)
    {
        //Interaction6
        //When flexButtonSaveYes clicked call virtual function
        //Call functionSaveModalWindow
        functionSaveModalWindow();
 8005e70:	4718      	bx	r3
    else if (&src == &flexButton_text_out_Num)
 8005e72:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 8005e76:	3274      	adds	r2, #116	; 0x74
 8005e78:	4291      	cmp	r1, r2
 8005e7a:	d102      	bne.n	8005e82 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
        function3();
 8005e7c:	6803      	ldr	r3, [r0, #0]
 8005e7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e80:	e7f6      	b.n	8005e70 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSave)
 8005e82:	f500 4283 	add.w	r2, r0, #16768	; 0x4180
 8005e86:	3234      	adds	r2, #52	; 0x34
 8005e88:	4291      	cmp	r1, r2
 8005e8a:	d102      	bne.n	8005e92 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        functionSaveSettings();
 8005e8c:	6803      	ldr	r3, [r0, #0]
 8005e8e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005e90:	e7ee      	b.n	8005e70 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveNo)
 8005e92:	f500 4286 	add.w	r2, r0, #17152	; 0x4300
 8005e96:	3220      	adds	r2, #32
 8005e98:	4291      	cmp	r1, r2
 8005e9a:	d102      	bne.n	8005ea2 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        functionSaveModalWindow();
 8005e9c:	681b      	ldr	r3, [r3, #0]
 8005e9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ea0:	e7e6      	b.n	8005e70 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveYes)
 8005ea2:	f500 4287 	add.w	r2, r0, #17280	; 0x4380
 8005ea6:	325c      	adds	r2, #92	; 0x5c
 8005ea8:	4291      	cmp	r1, r2
 8005eaa:	d0f7      	beq.n	8005e9c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    }
}
 8005eac:	4770      	bx	lr

08005eae <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 8005eae:	306c      	adds	r0, #108	; 0x6c
 8005eb0:	4288      	cmp	r0, r1
{
 8005eb2:	b508      	push	{r3, lr}
    if (&src == &button1)
 8005eb4:	d105      	bne.n	8005ec2 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005eb6:	f00d fa15 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
}
 8005eba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8005ebe:	f7fe bde9 	b.w	8004a94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8005ec2:	bd08      	pop	{r3, pc}

08005ec4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8005ec4:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8005ec6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8005eca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8005ece:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8005ed2:	8813      	ldrh	r3, [r2, #0]
 8005ed4:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8005ed8:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8005eda:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005ede:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8005ee0:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8005ee2:	f3c1 054f 	ubfx	r5, r1, #1, #16
 8005ee6:	f010 ff85 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8005eea:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8005eee:	4680      	mov	r8, r0
 8005ef0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8005ef4:	4638      	mov	r0, r7
 8005ef6:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8005efa:	f010 ffb5 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8005efe:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 8005f02:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 8005f06:	b212      	sxth	r2, r2
 8005f08:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8005f0c:	b209      	sxth	r1, r1
 8005f0e:	f7fc f9c1 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8005f12:	6823      	ldr	r3, [r4, #0]
 8005f14:	4620      	mov	r0, r4
 8005f16:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8005f1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8005f1e:	4718      	bx	r3

08005f20 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 8005f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f24:	ed2d 8b08 	vpush	{d8-d11}
 8005f28:	4604      	mov	r4, r0
 8005f2a:	b08b      	sub	sp, #44	; 0x2c
 8005f2c:	f00e fc20 	bl	8014770 <_ZN8touchgfx6ScreenC1Ev>
    customContainerKeyboard_Num1TriggerKeyboard_NumCallback(this, &Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler)
 8005f30:	4622      	mov	r2, r4
 8005f32:	2500      	movs	r5, #0
 8005f34:	4bd8      	ldr	r3, [pc, #864]	; (8006298 <_ZN15Screen2ViewBaseC1Ev+0x378>)
 8005f36:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005f38:	f842 3b40 	str.w	r3, [r2], #64
 8005f3c:	4610      	mov	r0, r2
 8005f3e:	ee09 2a90 	vmov	s19, r2
 8005f42:	f7fc f8b9 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8005f46:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8005f4a:	ee0a 3a10 	vmov	s20, r3
        : Widget(), action(), pressed(false)
 8005f4e:	2226      	movs	r2, #38	; 0x26
 8005f50:	4629      	mov	r1, r5
 8005f52:	4618      	mov	r0, r3
 8005f54:	f01d fa7e 	bl	8023454 <memset>
 8005f58:	ee1a 0a10 	vmov	r0, s20
 8005f5c:	f7fc f988 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8005f60:	f04f 0301 	mov.w	r3, #1
 8005f64:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 8005f68:	4bcc      	ldr	r3, [pc, #816]	; (800629c <_ZN15Screen2ViewBaseC1Ev+0x37c>)
 8005f6a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005f6c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8005f70:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8005f74:	f642 7848 	movw	r8, #12104	; 0x2f48
 8005f78:	eb04 0608 	add.w	r6, r4, r8
 8005f7c:	4618      	mov	r0, r3
 8005f7e:	f8a4 709a 	strh.w	r7, [r4, #154]	; 0x9a
 8005f82:	f8a4 709c 	strh.w	r7, [r4, #156]	; 0x9c
 8005f86:	f884 709e 	strb.w	r7, [r4, #158]	; 0x9e
 8005f8a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8005f8e:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8005f92:	ee0b 3a10 	vmov	s22, r3
 8005f96:	f000 fd7d 	bl	8006a94 <_ZN23CustomContainerKeyboardC1Ev>
        : T()
 8005f9a:	4630      	mov	r0, r6
 8005f9c:	f7fc fca0 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8005fa0:	4bbf      	ldr	r3, [pc, #764]	; (80062a0 <_ZN15Screen2ViewBaseC1Ev+0x380>)
 8005fa2:	f844 3008 	str.w	r3, [r4, r8]
 8005fa6:	f504 533f 	add.w	r3, r4, #12224	; 0x2fc0
        : Widget(), bitmap(bitmap), alpha(255)
 8005faa:	f642 7bc4 	movw	fp, #12228	; 0x2fc4
 8005fae:	801f      	strh	r7, [r3, #0]
 8005fb0:	f642 73c2 	movw	r3, #12226	; 0x2fc2
 8005fb4:	eb04 0a0b 	add.w	sl, r4, fp
 8005fb8:	2226      	movs	r2, #38	; 0x26
 8005fba:	52e7      	strh	r7, [r4, r3]
 8005fbc:	f106 097c 	add.w	r9, r6, #124	; 0x7c
 8005fc0:	4629      	mov	r1, r5
 8005fc2:	4650      	mov	r0, sl
 8005fc4:	f8ad 7020 	strh.w	r7, [sp, #32]
 8005fc8:	f01d fa44 	bl	8023454 <memset>
 8005fcc:	4648      	mov	r0, r9
 8005fce:	f7fc f94f 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8005fd2:	4bb4      	ldr	r3, [pc, #720]	; (80062a4 <_ZN15Screen2ViewBaseC1Ev+0x384>)
 8005fd4:	f844 300b 	str.w	r3, [r4, fp]
 8005fd8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8005fdc:	f8aa 3026 	strh.w	r3, [sl, #38]	; 0x26
 8005fe0:	f88a 7028 	strb.w	r7, [sl, #40]	; 0x28
        Image::setBitmap(bitmap);
 8005fe4:	4648      	mov	r0, r9
 8005fe6:	a908      	add	r1, sp, #32
 8005fe8:	f00b f8c0 	bl	801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
 8005fec:	4649      	mov	r1, r9
 8005fee:	4630      	mov	r0, r6
 8005ff0:	f009 f8f0 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8005ff4:	4bac      	ldr	r3, [pc, #688]	; (80062a8 <_ZN15Screen2ViewBaseC1Ev+0x388>)
 8005ff6:	f844 3008 	str.w	r3, [r4, r8]
 8005ffa:	f106 08a8 	add.w	r8, r6, #168	; 0xa8
        : TextArea(), wildcard(0)
 8005ffe:	4640      	mov	r0, r8
 8006000:	f7fc fc28 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8006004:	f642 73f0 	movw	r3, #12272	; 0x2ff0
 8006008:	18e2      	adds	r2, r4, r3
 800600a:	f8df 92d8 	ldr.w	r9, [pc, #728]	; 80062e4 <_ZN15Screen2ViewBaseC1Ev+0x3c4>
 800600e:	f844 9003 	str.w	r9, [r4, r3]
 8006012:	63d5      	str	r5, [r2, #60]	; 0x3c
        : color(0)
 8006014:	f243 0330 	movw	r3, #12336	; 0x3030
 8006018:	f243 0234 	movw	r2, #12340	; 0x3034
        T::add(wildcardText);
 800601c:	4641      	mov	r1, r8
 800601e:	50e5      	str	r5, [r4, r3]
 8006020:	4630      	mov	r0, r6
 8006022:	50a5      	str	r5, [r4, r2]
 8006024:	f009 f8d6 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006028:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 800602c:	3338      	adds	r3, #56	; 0x38
 800602e:	f244 07f4 	movw	r7, #16628	; 0x40f4
 8006032:	4618      	mov	r0, r3
 8006034:	ee0a 3a90 	vmov	s21, r3
 8006038:	f000 fde4 	bl	8006c04 <_ZN27CustomContainerKeyboard_NumC1Ev>
 800603c:	19e3      	adds	r3, r4, r7
 800603e:	ee08 3a90 	vmov	s17, r3
        : T()
 8006042:	4618      	mov	r0, r3
 8006044:	f7fc fc4c 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006048:	4b98      	ldr	r3, [pc, #608]	; (80062ac <_ZN15Screen2ViewBaseC1Ev+0x38c>)
 800604a:	51e3      	str	r3, [r4, r7]
 800604c:	ee18 3a90 	vmov	r3, s17
 8006050:	f103 0778 	add.w	r7, r3, #120	; 0x78
 8006054:	4638      	mov	r0, r7
 8006056:	f7fc fbfd 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 800605a:	f244 136c 	movw	r3, #16748	; 0x416c
 800605e:	18e2      	adds	r2, r4, r3
 8006060:	f244 10ac 	movw	r0, #16812	; 0x41ac
 8006064:	f844 9003 	str.w	r9, [r4, r3]
 8006068:	63d5      	str	r5, [r2, #60]	; 0x3c
 800606a:	5025      	str	r5, [r4, r0]
 800606c:	f244 10b0 	movw	r0, #16816	; 0x41b0
 8006070:	f504 4983 	add.w	r9, r4, #16768	; 0x4180
        T::add(wildcardText);
 8006074:	4639      	mov	r1, r7
 8006076:	5025      	str	r5, [r4, r0]
 8006078:	f109 0934 	add.w	r9, r9, #52	; 0x34
 800607c:	ee18 0a90 	vmov	r0, s17
 8006080:	f504 4a84 	add.w	sl, r4, #16896	; 0x4200
 8006084:	f009 f8a6 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006088:	f10a 0a70 	add.w	sl, sl, #112	; 0x70
 800608c:	4648      	mov	r0, r9
 800608e:	f7fc fc53 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006092:	4650      	mov	r0, sl
 8006094:	f008 ffae 	bl	800eff4 <_ZN8touchgfx11ModalWindowC1Ev>
 8006098:	f504 4386 	add.w	r3, r4, #17152	; 0x4300
 800609c:	3320      	adds	r3, #32
 800609e:	f504 4b87 	add.w	fp, r4, #17280	; 0x4380
 80060a2:	4618      	mov	r0, r3
 80060a4:	f10b 0b5c 	add.w	fp, fp, #92	; 0x5c
 80060a8:	ee08 3a10 	vmov	s16, r3
 80060ac:	f7fc fc44 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060b0:	4658      	mov	r0, fp
 80060b2:	f7fc fc41 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060b6:	f504 4389 	add.w	r3, r4, #17536	; 0x4480
 80060ba:	3318      	adds	r3, #24
 80060bc:	4618      	mov	r0, r3
 80060be:	ee09 3a10 	vmov	s18, r3
 80060c2:	f7fc fbc7 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80060c6:	f244 5338 	movw	r3, #17720	; 0x4538
 80060ca:	18e2      	adds	r2, r4, r3
 80060cc:	9203      	str	r2, [sp, #12]
 80060ce:	4a78      	ldr	r2, [pc, #480]	; (80062b0 <_ZN15Screen2ViewBaseC1Ev+0x390>)
 80060d0:	50e2      	str	r2, [r4, r3]
 80060d2:	9b03      	ldr	r3, [sp, #12]
 80060d4:	4a77      	ldr	r2, [pc, #476]	; (80062b4 <_ZN15Screen2ViewBaseC1Ev+0x394>)
 80060d6:	605c      	str	r4, [r3, #4]
 80060d8:	f244 5340 	movw	r3, #17728	; 0x4540
        : pobject(pobject), pmemfun_0(pmemfun_0)
 80060dc:	4976      	ldr	r1, [pc, #472]	; (80062b8 <_ZN15Screen2ViewBaseC1Ev+0x398>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80060de:	50e2      	str	r2, [r4, r3]
 80060e0:	f244 5344 	movw	r3, #17732	; 0x4544
    __background.setPosition(0, 0, 800, 480);
 80060e4:	ee19 0a90 	vmov	r0, s19
 80060e8:	50e5      	str	r5, [r4, r3]
 80060ea:	f244 5348 	movw	r3, #17736	; 0x4548
 80060ee:	18e2      	adds	r2, r4, r3
 80060f0:	9202      	str	r2, [sp, #8]
 80060f2:	4a72      	ldr	r2, [pc, #456]	; (80062bc <_ZN15Screen2ViewBaseC1Ev+0x39c>)
 80060f4:	50e2      	str	r2, [r4, r3]
 80060f6:	9b02      	ldr	r3, [sp, #8]
 80060f8:	4a71      	ldr	r2, [pc, #452]	; (80062c0 <_ZN15Screen2ViewBaseC1Ev+0x3a0>)
 80060fa:	605c      	str	r4, [r3, #4]
 80060fc:	f244 5350 	movw	r3, #17744	; 0x4550
 8006100:	50e2      	str	r2, [r4, r3]
 8006102:	f244 5354 	movw	r3, #17748	; 0x4554
 8006106:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8006108:	f244 5358 	movw	r3, #17752	; 0x4558
 800610c:	18e2      	adds	r2, r4, r3
 800610e:	9204      	str	r2, [sp, #16]
 8006110:	4a6c      	ldr	r2, [pc, #432]	; (80062c4 <_ZN15Screen2ViewBaseC1Ev+0x3a4>)
 8006112:	50e2      	str	r2, [r4, r3]
 8006114:	9b04      	ldr	r3, [sp, #16]
 8006116:	605c      	str	r4, [r3, #4]
 8006118:	f244 5360 	movw	r3, #17760	; 0x4560
 800611c:	50e1      	str	r1, [r4, r3]
 800611e:	f244 5364 	movw	r3, #17764	; 0x4564
 8006122:	50e5      	str	r5, [r4, r3]
 8006124:	f244 5368 	movw	r3, #17768	; 0x4568
 8006128:	18e1      	adds	r1, r4, r3
 800612a:	50e2      	str	r2, [r4, r3]
 800612c:	f244 5370 	movw	r3, #17776	; 0x4570
 8006130:	4a65      	ldr	r2, [pc, #404]	; (80062c8 <_ZN15Screen2ViewBaseC1Ev+0x3a8>)
 8006132:	604c      	str	r4, [r1, #4]
 8006134:	50e2      	str	r2, [r4, r3]
 8006136:	f244 5374 	movw	r3, #17780	; 0x4574
 800613a:	9105      	str	r1, [sp, #20]
 800613c:	50e5      	str	r5, [r4, r3]
 800613e:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8006142:	9300      	str	r3, [sp, #0]
 8006144:	462a      	mov	r2, r5
 8006146:	f44f 7348 	mov.w	r3, #800	; 0x320
 800614a:	4629      	mov	r1, r5
 800614c:	f7fc fb76 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8006150:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006154:	66a3      	str	r3, [r4, #104]	; 0x68
    button1.setXY(0, 0);
 8006156:	ee1a 0a10 	vmov	r0, s20
 800615a:	462a      	mov	r2, r5
 800615c:	4629      	mov	r1, r5
 800615e:	f7fc f899 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8006162:	f10d 0c1c 	add.w	ip, sp, #28
 8006166:	f04f 0001 	mov.w	r0, #1
 800616a:	4661      	mov	r1, ip
 800616c:	f8ad 0020 	strh.w	r0, [sp, #32]
 8006170:	aa08      	add	r2, sp, #32
 8006172:	ee1a 0a10 	vmov	r0, s20
 8006176:	f8ad 501c 	strh.w	r5, [sp, #28]
 800617a:	f00a fe05 	bl	8010d88 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        action = &callback;
 800617e:	9b03      	ldr	r3, [sp, #12]
 8006180:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    customContainerKeyboard1.setXY(0, 480);
 8006184:	ee1b 0a10 	vmov	r0, s22
 8006188:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800618c:	4629      	mov	r1, r5
 800618e:	f7fc f881 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboardCallback = &callback;
 8006192:	f642 5384 	movw	r3, #11652	; 0x2d84
 8006196:	9a04      	ldr	r2, [sp, #16]
 8006198:	50e2      	str	r2, [r4, r3]
 800619a:	2332      	movs	r3, #50	; 0x32
 800619c:	9300      	str	r3, [sp, #0]
 800619e:	462a      	mov	r2, r5
 80061a0:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80061a4:	4629      	mov	r1, r5
 80061a6:	f106 0034 	add.w	r0, r6, #52	; 0x34
 80061aa:	f7fc fb47 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80061ae:	f642 73ac 	movw	r3, #12204	; 0x2fac
 80061b2:	f04f 0c05 	mov.w	ip, #5
 80061b6:	f824 c003 	strh.w	ip, [r4, r3]
    flexButton_text_out.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80061ba:	4b44      	ldr	r3, [pc, #272]	; (80062cc <_ZN15Screen2ViewBaseC1Ev+0x3ac>)
 80061bc:	9300      	str	r3, [sp, #0]
 80061be:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80061c2:	4a43      	ldr	r2, [pc, #268]	; (80062d0 <_ZN15Screen2ViewBaseC1Ev+0x3b0>)
 80061c4:	4943      	ldr	r1, [pc, #268]	; (80062d4 <_ZN15Screen2ViewBaseC1Ev+0x3b4>)
 80061c6:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80061ca:	4630      	mov	r0, r6
 80061cc:	f7fc fb5e 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_text_out.setIconBitmaps(Bitmap(BITMAP_KEYBOARD_ID), Bitmap(BITMAP_KEYBOARD_ID));
 80061d0:	f10d 0c1c 	add.w	ip, sp, #28
 80061d4:	2308      	movs	r3, #8
 80061d6:	4661      	mov	r1, ip
 80061d8:	aa08      	add	r2, sp, #32
 80061da:	4630      	mov	r0, r6
 80061dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80061e0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80061e4:	f7ff fe6e 	bl	8005ec4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 80061e8:	f642 73c8 	movw	r3, #12232	; 0x2fc8
        wildcardText.setTypedText(t);
 80061ec:	f10d 0c20 	add.w	ip, sp, #32
 80061f0:	4a39      	ldr	r2, [pc, #228]	; (80062d8 <_ZN15Screen2ViewBaseC1Ev+0x3b8>)
 80061f2:	50e2      	str	r2, [r4, r3]
 80061f4:	4661      	mov	r1, ip
 80061f6:	4a39      	ldr	r2, [pc, #228]	; (80062dc <_ZN15Screen2ViewBaseC1Ev+0x3bc>)
 80061f8:	9208      	str	r2, [sp, #32]
 80061fa:	230e      	movs	r3, #14
 80061fc:	4640      	mov	r0, r8
 80061fe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006202:	f00a fd7e 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8006206:	f642 7352 	movw	r3, #12114	; 0x2f52
 800620a:	4640      	mov	r0, r8
 800620c:	5ee2      	ldrsh	r2, [r4, r3]
 800620e:	f642 7350 	movw	r3, #12112	; 0x2f50
 8006212:	5ee1      	ldrsh	r1, [r4, r3]
 8006214:	f7fb ff43 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_text_outBuffer[0] = 0;
 8006218:	f244 43d4 	movw	r3, #17620	; 0x44d4
 800621c:	18e2      	adds	r2, r4, r3
 800621e:	52e5      	strh	r5, [r4, r3]
        wildcard = value;
 8006220:	f243 032c 	movw	r3, #12332	; 0x302c
        wildcardText.setPosition(x, y, width, height);
 8006224:	f04f 0c32 	mov.w	ip, #50	; 0x32
 8006228:	f8cd c000 	str.w	ip, [sp]
 800622c:	50e2      	str	r2, [r4, r3]
 800622e:	4640      	mov	r0, r8
 8006230:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8006234:	462a      	mov	r2, r5
 8006236:	4629      	mov	r1, r5
 8006238:	f7fc fb00 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800623c:	f243 0130 	movw	r1, #12336	; 0x3030
 8006240:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 80062e8 <_ZN15Screen2ViewBaseC1Ev+0x3c8>
 8006244:	f844 8001 	str.w	r8, [r4, r1]
        colorPressed = newColorPressed;
 8006248:	f243 0134 	movw	r1, #12340	; 0x3034
        handlePressedUpdated();
 800624c:	4630      	mov	r0, r6
        colorPressed = newColorPressed;
 800624e:	f844 8001 	str.w	r8, [r4, r1]
        handlePressedUpdated();
 8006252:	f7ff fdeb 	bl	8005e2c <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>
    flexButton_text_out.setPosition(407, 25, 384, 50);
 8006256:	2132      	movs	r1, #50	; 0x32
 8006258:	9100      	str	r1, [sp, #0]
 800625a:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800625e:	2219      	movs	r2, #25
 8006260:	f240 1197 	movw	r1, #407	; 0x197
 8006264:	4630      	mov	r0, r6
 8006266:	f7fc fae9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800626a:	f642 7378 	movw	r3, #12152	; 0x2f78
 800626e:	9902      	ldr	r1, [sp, #8]
 8006270:	50e1      	str	r1, [r4, r3]
    customContainerKeyboard_Num1.setXY(-270, 180);
 8006272:	ee1a 0a90 	vmov	r0, s21
 8006276:	491a      	ldr	r1, [pc, #104]	; (80062e0 <_ZN15Screen2ViewBaseC1Ev+0x3c0>)
 8006278:	22b4      	movs	r2, #180	; 0xb4
 800627a:	f7fc f80b 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboard_NumCallback = &callback;
 800627e:	f244 03e0 	movw	r3, #16608	; 0x40e0
 8006282:	9905      	ldr	r1, [sp, #20]
 8006284:	50e1      	str	r1, [r4, r3]
 8006286:	ee18 0a90 	vmov	r0, s17
 800628a:	212d      	movs	r1, #45	; 0x2d
 800628c:	9100      	str	r1, [sp, #0]
 800628e:	23c7      	movs	r3, #199	; 0xc7
 8006290:	462a      	mov	r2, r5
 8006292:	4629      	mov	r1, r5
 8006294:	3034      	adds	r0, #52	; 0x34
 8006296:	e029      	b.n	80062ec <_ZN15Screen2ViewBaseC1Ev+0x3cc>
 8006298:	08026768 	.word	0x08026768
 800629c:	08028130 	.word	0x08028130
 80062a0:	080265e8 	.word	0x080265e8
 80062a4:	080282e0 	.word	0x080282e0
 80062a8:	08026684 	.word	0x08026684
 80062ac:	08025c30 	.word	0x08025c30
 80062b0:	08026720 	.word	0x08026720
 80062b4:	08005eaf 	.word	0x08005eaf
 80062b8:	08005cdb 	.word	0x08005cdb
 80062bc:	08026738 	.word	0x08026738
 80062c0:	08005e61 	.word	0x08005e61
 80062c4:	08026750 	.word	0x08026750
 80062c8:	08005ce1 	.word	0x08005ce1
 80062cc:	ff336699 	.word	0xff336699
 80062d0:	ff0099cc 	.word	0xff0099cc
 80062d4:	ff006699 	.word	0xff006699
 80062d8:	000e0162 	.word	0x000e0162
 80062dc:	08025b88 	.word	0x08025b88
 80062e0:	fffffef2 	.word	0xfffffef2
 80062e4:	080281d4 	.word	0x080281d4
 80062e8:	ff0a0a0a 	.word	0xff0a0a0a
 80062ec:	f7fc faa6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80062f0:	f244 1358 	movw	r3, #16728	; 0x4158
 80062f4:	f04f 0001 	mov.w	r0, #1
 80062f8:	52e0      	strh	r0, [r4, r3]
    flexButton_text_out_Num.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80062fa:	4bc8      	ldr	r3, [pc, #800]	; (800661c <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80062fc:	9300      	str	r3, [sp, #0]
 80062fe:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006302:	4ac7      	ldr	r2, [pc, #796]	; (8006620 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 8006304:	49c7      	ldr	r1, [pc, #796]	; (8006624 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 8006306:	ee18 0a90 	vmov	r0, s17
 800630a:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800630e:	f7fc fabd 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006312:	4ac5      	ldr	r2, [pc, #788]	; (8006628 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8006314:	9208      	str	r2, [sp, #32]
 8006316:	2317      	movs	r3, #23
        wildcardText.setTypedText(t);
 8006318:	a908      	add	r1, sp, #32
 800631a:	4638      	mov	r0, r7
 800631c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006320:	f00a fcef 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8006324:	f244 03fe 	movw	r3, #16638	; 0x40fe
 8006328:	4638      	mov	r0, r7
 800632a:	5ee2      	ldrsh	r2, [r4, r3]
 800632c:	f244 03fc 	movw	r3, #16636	; 0x40fc
 8006330:	5ee1      	ldrsh	r1, [r4, r3]
 8006332:	f7fb feb4 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    Unicode::snprintf(flexButton_text_out_NumBuffer, FLEXBUTTON_TEXT_OUT_NUM_SIZE, "%s", TypedText(T___SINGLEUSE_D72U).getText());
 8006336:	f504 438a 	add.w	r3, r4, #17664	; 0x4500
 800633a:	3324      	adds	r3, #36	; 0x24
 800633c:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800633e:	4bbb      	ldr	r3, [pc, #748]	; (800662c <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 8006340:	681b      	ldr	r3, [r3, #0]
 8006342:	b92b      	cbnz	r3, 8006350 <_ZN15Screen2ViewBaseC1Ev+0x430>
 8006344:	4bba      	ldr	r3, [pc, #744]	; (8006630 <_ZN15Screen2ViewBaseC1Ev+0x710>)
 8006346:	4abb      	ldr	r2, [pc, #748]	; (8006634 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 8006348:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800634a:	48bb      	ldr	r0, [pc, #748]	; (8006638 <_ZN15Screen2ViewBaseC1Ev+0x718>)
 800634c:	f01c fddc 	bl	8022f08 <__assert_func>
 8006350:	4bba      	ldr	r3, [pc, #744]	; (800663c <_ZN15Screen2ViewBaseC1Ev+0x71c>)
 8006352:	881b      	ldrh	r3, [r3, #0]
 8006354:	2b18      	cmp	r3, #24
 8006356:	d803      	bhi.n	8006360 <_ZN15Screen2ViewBaseC1Ev+0x440>
 8006358:	4bb9      	ldr	r3, [pc, #740]	; (8006640 <_ZN15Screen2ViewBaseC1Ev+0x720>)
 800635a:	4ab6      	ldr	r2, [pc, #728]	; (8006634 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 800635c:	21af      	movs	r1, #175	; 0xaf
 800635e:	e7f4      	b.n	800634a <_ZN15Screen2ViewBaseC1Ev+0x42a>
        return texts->getText(typedTextId);
 8006360:	4bb8      	ldr	r3, [pc, #736]	; (8006644 <_ZN15Screen2ViewBaseC1Ev+0x724>)
 8006362:	2118      	movs	r1, #24
 8006364:	6818      	ldr	r0, [r3, #0]
 8006366:	f000 fae5 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 800636a:	4ab7      	ldr	r2, [pc, #732]	; (8006648 <_ZN15Screen2ViewBaseC1Ev+0x728>)
 800636c:	4603      	mov	r3, r0
 800636e:	210a      	movs	r1, #10
 8006370:	9803      	ldr	r0, [sp, #12]
 8006372:	f010 fc5f 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006376:	f244 13a8 	movw	r3, #16808	; 0x41a8
 800637a:	9a03      	ldr	r2, [sp, #12]
 800637c:	50e2      	str	r2, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 800637e:	232d      	movs	r3, #45	; 0x2d
 8006380:	4629      	mov	r1, r5
 8006382:	9300      	str	r3, [sp, #0]
 8006384:	2207      	movs	r2, #7
 8006386:	4638      	mov	r0, r7
 8006388:	23c7      	movs	r3, #199	; 0xc7
 800638a:	f7fc fa57 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800638e:	f244 13ac 	movw	r3, #16812	; 0x41ac
        handlePressedUpdated();
 8006392:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 8006396:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 800639a:	f244 13b0 	movw	r3, #16816	; 0x41b0
 800639e:	2746      	movs	r7, #70	; 0x46
 80063a0:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 80063a4:	f7fb fec1 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_text_out_Num.setPosition(178, 30, 199, 45);
 80063a8:	232d      	movs	r3, #45	; 0x2d
 80063aa:	ee18 0a90 	vmov	r0, s17
 80063ae:	9300      	str	r3, [sp, #0]
 80063b0:	221e      	movs	r2, #30
 80063b2:	23c7      	movs	r3, #199	; 0xc7
 80063b4:	21b2      	movs	r1, #178	; 0xb2
 80063b6:	f7fc fa41 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80063ba:	f244 1324 	movw	r3, #16676	; 0x4124
 80063be:	9a02      	ldr	r2, [sp, #8]
 80063c0:	50e2      	str	r2, [r4, r3]
 80063c2:	4629      	mov	r1, r5
 80063c4:	462a      	mov	r2, r5
 80063c6:	f109 0034 	add.w	r0, r9, #52	; 0x34
 80063ca:	9700      	str	r7, [sp, #0]
 80063cc:	23a0      	movs	r3, #160	; 0xa0
 80063ce:	f7fc fa35 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80063d2:	f244 2318 	movw	r3, #16920	; 0x4218
 80063d6:	f04f 0205 	mov.w	r2, #5
 80063da:	52e2      	strh	r2, [r4, r3]
    flexButtonSave.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80063dc:	4b8f      	ldr	r3, [pc, #572]	; (800661c <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80063de:	9300      	str	r3, [sp, #0]
 80063e0:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80063e4:	4a8e      	ldr	r2, [pc, #568]	; (8006620 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 80063e6:	498f      	ldr	r1, [pc, #572]	; (8006624 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 80063e8:	4648      	mov	r0, r9
 80063ea:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80063ee:	f7fc fa4d 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80063f2:	4b8d      	ldr	r3, [pc, #564]	; (8006628 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80063f4:	9308      	str	r3, [sp, #32]
    flexButtonSave.setText(TypedText(T___SINGLEUSE_QKLS));
 80063f6:	a908      	add	r1, sp, #32
 80063f8:	231d      	movs	r3, #29
 80063fa:	4648      	mov	r0, r9
 80063fc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006400:	f7fc fa50 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006404:	4629      	mov	r1, r5
 8006406:	220a      	movs	r2, #10
 8006408:	f109 0078 	add.w	r0, r9, #120	; 0x78
 800640c:	9700      	str	r7, [sp, #0]
 800640e:	23a0      	movs	r3, #160	; 0xa0
 8006410:	f7fc fa14 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006414:	f244 2368 	movw	r3, #17000	; 0x4268
        handlePressedUpdated();
 8006418:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 800641a:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 800641e:	f244 236c 	movw	r3, #17004	; 0x426c
 8006422:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8006426:	f7fc f8b4 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSave.setPosition(631, 368, 160, 70);
 800642a:	4648      	mov	r0, r9
 800642c:	9700      	str	r7, [sp, #0]
 800642e:	23a0      	movs	r3, #160	; 0xa0
 8006430:	f44f 72b8 	mov.w	r2, #368	; 0x170
 8006434:	f240 2177 	movw	r1, #631	; 0x277
 8006438:	f7fc fa00 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800643c:	f244 13e4 	movw	r3, #16868	; 0x41e4
 8006440:	9902      	ldr	r1, [sp, #8]
 8006442:	50e1      	str	r1, [r4, r3]
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_320X240PX_ID), 240, 120);
 8006444:	2302      	movs	r3, #2
 8006446:	22f0      	movs	r2, #240	; 0xf0
 8006448:	f8ad 3020 	strh.w	r3, [sp, #32]
 800644c:	a908      	add	r1, sp, #32
 800644e:	2378      	movs	r3, #120	; 0x78
 8006450:	4650      	mov	r0, sl
 8006452:	f008 fd8f 	bl	800ef74 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(28, 28, 28));
 8006456:	4650      	mov	r0, sl
 8006458:	497c      	ldr	r1, [pc, #496]	; (800664c <_ZN15Screen2ViewBaseC1Ev+0x72c>)
 800645a:	f008 fd78 	bl	800ef4e <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(149);
 800645e:	2195      	movs	r1, #149	; 0x95
 8006460:	4650      	mov	r0, sl
 8006462:	f008 fd78 	bl	800ef56 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8006466:	4650      	mov	r0, sl
 8006468:	f008 fd67 	bl	800ef3a <_ZN8touchgfx11ModalWindow4hideEv>
 800646c:	ee18 0a10 	vmov	r0, s16
 8006470:	462a      	mov	r2, r5
 8006472:	4629      	mov	r1, r5
 8006474:	9700      	str	r7, [sp, #0]
 8006476:	2364      	movs	r3, #100	; 0x64
 8006478:	3034      	adds	r0, #52	; 0x34
 800647a:	f7fc f9df 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveNo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800647e:	4a67      	ldr	r2, [pc, #412]	; (800661c <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 8006480:	9200      	str	r2, [sp, #0]
 8006482:	f244 3384 	movw	r3, #17284	; 0x4384
 8006486:	f04f 0105 	mov.w	r1, #5
 800648a:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800648e:	52e1      	strh	r1, [r4, r3]
 8006490:	ee18 0a10 	vmov	r0, s16
 8006494:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8006498:	4b6d      	ldr	r3, [pc, #436]	; (8006650 <_ZN15Screen2ViewBaseC1Ev+0x730>)
 800649a:	4962      	ldr	r1, [pc, #392]	; (8006624 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 800649c:	f7fc f9f6 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonSaveNo.setText(TypedText(T___SINGLEUSE_XFCU));
 80064a0:	a808      	add	r0, sp, #32
 80064a2:	4b61      	ldr	r3, [pc, #388]	; (8006628 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80064a4:	9308      	str	r3, [sp, #32]
 80064a6:	4601      	mov	r1, r0
 80064a8:	231e      	movs	r3, #30
 80064aa:	ee18 0a10 	vmov	r0, s16
 80064ae:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80064b2:	f7fc f9f7 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80064b6:	ee18 0a10 	vmov	r0, s16
 80064ba:	4629      	mov	r1, r5
 80064bc:	2214      	movs	r2, #20
 80064be:	9700      	str	r7, [sp, #0]
 80064c0:	2364      	movs	r3, #100	; 0x64
 80064c2:	3078      	adds	r0, #120	; 0x78
 80064c4:	f7fc f9ba 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80064c8:	f244 33d4 	movw	r3, #17364	; 0x43d4
        handlePressedUpdated();
 80064cc:	ee18 0a10 	vmov	r0, s16
        colorReleased = newColorReleased;
 80064d0:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 80064d4:	f244 33d8 	movw	r3, #17368	; 0x43d8
 80064d8:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 80064dc:	f7fc f859 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveNo.setPosition(196, 120, 100, 70);
 80064e0:	ee18 0a10 	vmov	r0, s16
 80064e4:	2278      	movs	r2, #120	; 0x78
 80064e6:	9700      	str	r7, [sp, #0]
 80064e8:	2364      	movs	r3, #100	; 0x64
 80064ea:	21c4      	movs	r1, #196	; 0xc4
 80064ec:	f7fc f9a6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80064f0:	f244 3350 	movw	r3, #17232	; 0x4350
 80064f4:	9902      	ldr	r1, [sp, #8]
 80064f6:	50e1      	str	r1, [r4, r3]
    modalWindow1.add(flexButtonSaveNo);
 80064f8:	4650      	mov	r0, sl
 80064fa:	ee18 1a10 	vmov	r1, s16
 80064fe:	f008 fd23 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8006502:	462a      	mov	r2, r5
 8006504:	4629      	mov	r1, r5
 8006506:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 800650a:	9700      	str	r7, [sp, #0]
 800650c:	2364      	movs	r3, #100	; 0x64
 800650e:	f7fc f995 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveYes.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006512:	4a42      	ldr	r2, [pc, #264]	; (800661c <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 8006514:	9200      	str	r2, [sp, #0]
 8006516:	f244 4340 	movw	r3, #17472	; 0x4440
 800651a:	f04f 0105 	mov.w	r1, #5
 800651e:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8006522:	52e1      	strh	r1, [r4, r3]
 8006524:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8006528:	4658      	mov	r0, fp
 800652a:	4b49      	ldr	r3, [pc, #292]	; (8006650 <_ZN15Screen2ViewBaseC1Ev+0x730>)
 800652c:	493d      	ldr	r1, [pc, #244]	; (8006624 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 800652e:	f7fc f9ad 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006532:	4b3d      	ldr	r3, [pc, #244]	; (8006628 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8006534:	9308      	str	r3, [sp, #32]
    flexButtonSaveYes.setText(TypedText(T___SINGLEUSE_KVEN));
 8006536:	a908      	add	r1, sp, #32
 8006538:	231f      	movs	r3, #31
 800653a:	4658      	mov	r0, fp
 800653c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006540:	f7fc f9b0 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006544:	4629      	mov	r1, r5
 8006546:	2214      	movs	r2, #20
 8006548:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 800654c:	9700      	str	r7, [sp, #0]
 800654e:	2364      	movs	r3, #100	; 0x64
 8006550:	f7fc f974 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006554:	f244 4390 	movw	r3, #17552	; 0x4490
        handlePressedUpdated();
 8006558:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 800655a:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 800655e:	f244 4394 	movw	r3, #17556	; 0x4494
 8006562:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8006566:	f7fc f814 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveYes.setPosition(37, 120, 100, 70);
 800656a:	4658      	mov	r0, fp
 800656c:	9700      	str	r7, [sp, #0]
 800656e:	2364      	movs	r3, #100	; 0x64
 8006570:	2278      	movs	r2, #120	; 0x78
 8006572:	2125      	movs	r1, #37	; 0x25
 8006574:	f7fc f962 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006578:	f244 430c 	movw	r3, #17420	; 0x440c
 800657c:	9a02      	ldr	r2, [sp, #8]
 800657e:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonSaveYes);
 8006580:	4659      	mov	r1, fp
 8006582:	4650      	mov	r0, sl
 8006584:	f008 fce0 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textArea1.setXY(50, 60);
 8006588:	ee19 0a10 	vmov	r0, s18
 800658c:	223c      	movs	r2, #60	; 0x3c
 800658e:	2132      	movs	r1, #50	; 0x32
 8006590:	f7fb fe80 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8006594:	f244 43c8 	movw	r3, #17608	; 0x44c8
 8006598:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800659c:	50e2      	str	r2, [r4, r3]
        linespace = space;
 800659e:	ee19 2a10 	vmov	r2, s18
 80065a2:	4b21      	ldr	r3, [pc, #132]	; (8006628 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80065a4:	9308      	str	r3, [sp, #32]
 80065a6:	2320      	movs	r3, #32
 80065a8:	8695      	strh	r5, [r2, #52]	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5CIK));
 80065aa:	eb0d 0103 	add.w	r1, sp, r3
 80065ae:	ee19 0a10 	vmov	r0, s18
 80065b2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80065b6:	1d25      	adds	r5, r4, #4
 80065b8:	f00a fba3 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textArea1);
 80065bc:	ee19 1a10 	vmov	r1, s18
 80065c0:	4650      	mov	r0, sl
 80065c2:	f008 fcc1 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 80065c6:	ee19 1a90 	vmov	r1, s19
 80065ca:	4628      	mov	r0, r5
 80065cc:	f008 fe02 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065d0:	ee1a 1a10 	vmov	r1, s20
 80065d4:	4628      	mov	r0, r5
 80065d6:	f008 fdfd 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065da:	ee1b 1a10 	vmov	r1, s22
 80065de:	4628      	mov	r0, r5
 80065e0:	f008 fdf8 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065e4:	4631      	mov	r1, r6
 80065e6:	4628      	mov	r0, r5
 80065e8:	f008 fdf4 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065ec:	ee1a 1a90 	vmov	r1, s21
 80065f0:	4628      	mov	r0, r5
 80065f2:	f008 fdef 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065f6:	ee18 1a90 	vmov	r1, s17
 80065fa:	4628      	mov	r0, r5
 80065fc:	f008 fdea 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006600:	4649      	mov	r1, r9
 8006602:	4628      	mov	r0, r5
 8006604:	f008 fde6 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006608:	4628      	mov	r0, r5
 800660a:	4651      	mov	r1, sl
 800660c:	f008 fde2 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006610:	4620      	mov	r0, r4
 8006612:	b00b      	add	sp, #44	; 0x2c
 8006614:	ecbd 8b08 	vpop	{d8-d11}
 8006618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800661c:	ff336699 	.word	0xff336699
 8006620:	ff0099cc 	.word	0xff0099cc
 8006624:	ff006699 	.word	0xff006699
 8006628:	08025b88 	.word	0x08025b88
 800662c:	200200dc 	.word	0x200200dc
 8006630:	08025a74 	.word	0x08025a74
 8006634:	08025ab6 	.word	0x08025ab6
 8006638:	08025ae4 	.word	0x08025ae4
 800663c:	200200e0 	.word	0x200200e0
 8006640:	08025b2b 	.word	0x08025b2b
 8006644:	200200e8 	.word	0x200200e8
 8006648:	08025b7d 	.word	0x08025b7d
 800664c:	ff1c1c1c 	.word	0xff1c1c1c
 8006650:	ff003366 	.word	0xff003366

08006654 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006654:	4770      	bx	lr
	...

08006658 <_Z23getFont_verdana_10_4bppv>:
{
 8006658:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800665a:	4d16      	ldr	r5, [pc, #88]	; (80066b4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800665c:	782c      	ldrb	r4, [r5, #0]
 800665e:	f3bf 8f5b 	dmb	ish
 8006662:	f014 0401 	ands.w	r4, r4, #1
{
 8006666:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006668:	d120      	bne.n	80066ac <_Z23getFont_verdana_10_4bppv+0x54>
 800666a:	4628      	mov	r0, r5
 800666c:	f01c fc20 	bl	8022eb0 <__cxa_guard_acquire>
 8006670:	b1e0      	cbz	r0, 80066ac <_Z23getFont_verdana_10_4bppv+0x54>
 8006672:	233f      	movs	r3, #63	; 0x3f
 8006674:	9307      	str	r3, [sp, #28]
 8006676:	4b10      	ldr	r3, [pc, #64]	; (80066b8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8006678:	9306      	str	r3, [sp, #24]
 800667a:	4b10      	ldr	r3, [pc, #64]	; (80066bc <_Z23getFont_verdana_10_4bppv+0x64>)
 800667c:	9305      	str	r3, [sp, #20]
 800667e:	2301      	movs	r3, #1
 8006680:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006684:	9302      	str	r3, [sp, #8]
 8006686:	2204      	movs	r2, #4
 8006688:	2302      	movs	r3, #2
 800668a:	e9cd 3200 	strd	r3, r2, [sp]
 800668e:	490c      	ldr	r1, [pc, #48]	; (80066c0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006690:	480c      	ldr	r0, [pc, #48]	; (80066c4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006692:	9408      	str	r4, [sp, #32]
 8006694:	230a      	movs	r3, #10
 8006696:	229b      	movs	r2, #155	; 0x9b
 8006698:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800669c:	f7fe fbb4 	bl	8004e08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80066a0:	4628      	mov	r0, r5
 80066a2:	f01c fc11 	bl	8022ec8 <__cxa_guard_release>
 80066a6:	4808      	ldr	r0, [pc, #32]	; (80066c8 <_Z23getFont_verdana_10_4bppv+0x70>)
 80066a8:	f01c fc4c 	bl	8022f44 <atexit>
    return verdana_10_4bpp;
}
 80066ac:	4805      	ldr	r0, [pc, #20]	; (80066c4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80066ae:	b00d      	add	sp, #52	; 0x34
 80066b0:	bd30      	pop	{r4, r5, pc}
 80066b2:	bf00      	nop
 80066b4:	2000efe8 	.word	0x2000efe8
 80066b8:	08029d08 	.word	0x08029d08
 80066bc:	0802a0f8 	.word	0x0802a0f8
 80066c0:	90124258 	.word	0x90124258
 80066c4:	2000efec 	.word	0x2000efec
 80066c8:	08006655 	.word	0x08006655

080066cc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80066cc:	4770      	bx	lr
	...

080066d0 <_Z23getFont_verdana_15_4bppv>:
{
 80066d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80066d2:	4d16      	ldr	r5, [pc, #88]	; (800672c <_Z23getFont_verdana_15_4bppv+0x5c>)
 80066d4:	782c      	ldrb	r4, [r5, #0]
 80066d6:	f3bf 8f5b 	dmb	ish
 80066da:	f014 0401 	ands.w	r4, r4, #1
{
 80066de:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80066e0:	d120      	bne.n	8006724 <_Z23getFont_verdana_15_4bppv+0x54>
 80066e2:	4628      	mov	r0, r5
 80066e4:	f01c fbe4 	bl	8022eb0 <__cxa_guard_acquire>
 80066e8:	b1e0      	cbz	r0, 8006724 <_Z23getFont_verdana_15_4bppv+0x54>
 80066ea:	233f      	movs	r3, #63	; 0x3f
 80066ec:	9307      	str	r3, [sp, #28]
 80066ee:	4b10      	ldr	r3, [pc, #64]	; (8006730 <_Z23getFont_verdana_15_4bppv+0x60>)
 80066f0:	9306      	str	r3, [sp, #24]
 80066f2:	4b10      	ldr	r3, [pc, #64]	; (8006734 <_Z23getFont_verdana_15_4bppv+0x64>)
 80066f4:	9305      	str	r3, [sp, #20]
 80066f6:	2301      	movs	r3, #1
 80066f8:	e9cd 3303 	strd	r3, r3, [sp, #12]
 80066fc:	9302      	str	r3, [sp, #8]
 80066fe:	2204      	movs	r2, #4
 8006700:	2303      	movs	r3, #3
 8006702:	e9cd 3200 	strd	r3, r2, [sp]
 8006706:	490c      	ldr	r1, [pc, #48]	; (8006738 <_Z23getFont_verdana_15_4bppv+0x68>)
 8006708:	480c      	ldr	r0, [pc, #48]	; (800673c <_Z23getFont_verdana_15_4bppv+0x6c>)
 800670a:	9408      	str	r4, [sp, #32]
 800670c:	230f      	movs	r3, #15
 800670e:	229b      	movs	r2, #155	; 0x9b
 8006710:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006714:	f7fe fb78 	bl	8004e08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006718:	4628      	mov	r0, r5
 800671a:	f01c fbd5 	bl	8022ec8 <__cxa_guard_release>
 800671e:	4808      	ldr	r0, [pc, #32]	; (8006740 <_Z23getFont_verdana_15_4bppv+0x70>)
 8006720:	f01c fc10 	bl	8022f44 <atexit>
    return verdana_15_4bpp;
}
 8006724:	4805      	ldr	r0, [pc, #20]	; (800673c <_Z23getFont_verdana_15_4bppv+0x6c>)
 8006726:	b00d      	add	sp, #52	; 0x34
 8006728:	bd30      	pop	{r4, r5, pc}
 800672a:	bf00      	nop
 800672c:	2000f014 	.word	0x2000f014
 8006730:	08029d3c 	.word	0x08029d3c
 8006734:	0802a0fc 	.word	0x0802a0fc
 8006738:	90124ad4 	.word	0x90124ad4
 800673c:	2000f018 	.word	0x2000f018
 8006740:	080066cd 	.word	0x080066cd

08006744 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006744:	4770      	bx	lr
	...

08006748 <_Z23getFont_verdana_40_4bppv>:
{
 8006748:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800674a:	4d16      	ldr	r5, [pc, #88]	; (80067a4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800674c:	782c      	ldrb	r4, [r5, #0]
 800674e:	f3bf 8f5b 	dmb	ish
 8006752:	f014 0401 	ands.w	r4, r4, #1
{
 8006756:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006758:	d121      	bne.n	800679e <_Z23getFont_verdana_40_4bppv+0x56>
 800675a:	4628      	mov	r0, r5
 800675c:	f01c fba8 	bl	8022eb0 <__cxa_guard_acquire>
 8006760:	b1e8      	cbz	r0, 800679e <_Z23getFont_verdana_40_4bppv+0x56>
 8006762:	233f      	movs	r3, #63	; 0x3f
 8006764:	9307      	str	r3, [sp, #28]
 8006766:	4b10      	ldr	r3, [pc, #64]	; (80067a8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8006768:	9306      	str	r3, [sp, #24]
 800676a:	4b10      	ldr	r3, [pc, #64]	; (80067ac <_Z23getFont_verdana_40_4bppv+0x64>)
 800676c:	9305      	str	r3, [sp, #20]
 800676e:	2302      	movs	r3, #2
 8006770:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006774:	2201      	movs	r2, #1
 8006776:	2304      	movs	r3, #4
 8006778:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800677c:	2308      	movs	r3, #8
 800677e:	490c      	ldr	r1, [pc, #48]	; (80067b0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006780:	9300      	str	r3, [sp, #0]
 8006782:	229a      	movs	r2, #154	; 0x9a
 8006784:	2328      	movs	r3, #40	; 0x28
 8006786:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800678a:	480a      	ldr	r0, [pc, #40]	; (80067b4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800678c:	9408      	str	r4, [sp, #32]
 800678e:	f7fe fb3b 	bl	8004e08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006792:	4628      	mov	r0, r5
 8006794:	f01c fb98 	bl	8022ec8 <__cxa_guard_release>
 8006798:	4807      	ldr	r0, [pc, #28]	; (80067b8 <_Z23getFont_verdana_40_4bppv+0x70>)
 800679a:	f01c fbd3 	bl	8022f44 <atexit>
    return verdana_40_4bpp;
}
 800679e:	4805      	ldr	r0, [pc, #20]	; (80067b4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80067a0:	b00d      	add	sp, #52	; 0x34
 80067a2:	bd30      	pop	{r4, r5, pc}
 80067a4:	2000f040 	.word	0x2000f040
 80067a8:	08029e18 	.word	0x08029e18
 80067ac:	0802a100 	.word	0x0802a100
 80067b0:	90125350 	.word	0x90125350
 80067b4:	2000f044 	.word	0x2000f044
 80067b8:	08006745 	.word	0x08006745

080067bc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80067bc:	2000      	movs	r0, #0
 80067be:	4770      	bx	lr

080067c0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80067c0:	2000      	movs	r0, #0
 80067c2:	4770      	bx	lr

080067c4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80067c4:	b40e      	push	{r1, r2, r3}
 80067c6:	b503      	push	{r0, r1, lr}
 80067c8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 80067ca:	2100      	movs	r1, #0
{
 80067cc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80067d0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 80067d2:	f00d fc31 	bl	8014038 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80067d6:	b002      	add	sp, #8
 80067d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80067dc:	b003      	add	sp, #12
 80067de:	4770      	bx	lr

080067e0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80067e0:	b40c      	push	{r2, r3}
 80067e2:	b507      	push	{r0, r1, r2, lr}
 80067e4:	ab04      	add	r3, sp, #16
 80067e6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80067ea:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
 80067ec:	f00d fc24 	bl	8014038 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80067f0:	b003      	add	sp, #12
 80067f2:	f85d eb04 	ldr.w	lr, [sp], #4
 80067f6:	b002      	add	sp, #8
 80067f8:	4770      	bx	lr
	...

080067fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 80067fc:	b510      	push	{r4, lr}
 80067fe:	4604      	mov	r4, r0
    nextCharacters.replaceAt0(unicodeConverter(direction));
 8006800:	f00e faae 	bl	8014d60 <_ZN8touchgfx12TextProvider16unicodeConverterEh>
            assert(used < size);
            replaceAt(++used - 1, newChar);
        }
        FORCE_INLINE_FUNCTION void replaceAt0(Unicode::UnicodeChar newChar)
        {
            buffer[pos] = newChar;
 8006804:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006806:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800680a:	8458      	strh	r0, [r3, #34]	; 0x22
    if (fontGsubTable && nextCharacters.peekChar())
 800680c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800680e:	b35b      	cbz	r3, 8006868 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
            assert(used > 0);
 8006810:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006812:	b92b      	cbnz	r3, 8006820 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x24>
 8006814:	4b17      	ldr	r3, [pc, #92]	; (8006874 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006816:	4a18      	ldr	r2, [pc, #96]	; (8006878 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006818:	21c0      	movs	r1, #192	; 0xc0
            assert(offset < used);
 800681a:	4818      	ldr	r0, [pc, #96]	; (800687c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800681c:	f01c fb74 	bl	8022f08 <__assert_func>
 8006820:	b310      	cbz	r0, 8006868 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
    {
        substituteGlyphs();
 8006822:	4620      	mov	r0, r4
 8006824:	f00f fc28 	bl	8016078 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 8006828:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800682a:	2b01      	cmp	r3, #1
 800682c:	d803      	bhi.n	8006836 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x3a>
 800682e:	4b14      	ldr	r3, [pc, #80]	; (8006880 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x84>)
 8006830:	4a14      	ldr	r2, [pc, #80]	; (8006884 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x88>)
 8006832:	21c5      	movs	r1, #197	; 0xc5
 8006834:	e7f1      	b.n	800681a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x1e>
            const uint16_t index = pos + offset;
 8006836:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006838:	1c53      	adds	r3, r2, #1
 800683a:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800683c:	2b09      	cmp	r3, #9
 800683e:	4619      	mov	r1, r3
 8006840:	bf88      	it	hi
 8006842:	f1a3 010a 	subhi.w	r1, r3, #10
 8006846:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800684a:	f640 103f 	movw	r0, #2367	; 0x93f
 800684e:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006850:	4281      	cmp	r1, r0
 8006852:	d109      	bne.n	8006868 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006854:	2b0a      	cmp	r3, #10
 8006856:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800685a:	bf28      	it	cs
 800685c:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800685e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006862:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006864:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006866:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006868:	4620      	mov	r0, r4
}
 800686a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800686e:	f00f bae7 	b.w	8015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006872:	bf00      	nop
 8006874:	080267ac 	.word	0x080267ac
 8006878:	080267b5 	.word	0x080267b5
 800687c:	08026860 	.word	0x08026860
 8006880:	080268aa 	.word	0x080268aa
 8006884:	080268b8 	.word	0x080268b8

08006888 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8006888:	b510      	push	{r4, lr}
 800688a:	4604      	mov	r4, r0
    fillInputBuffer();
 800688c:	f00f fa90 	bl	8015db0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
    unicodeConverterInit();
 8006890:	4620      	mov	r0, r4
}
 8006892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    unicodeConverterInit();
 8006896:	f00e ba5e 	b.w	8014d56 <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>

0800689a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800689a:	b510      	push	{r4, lr}
 800689c:	b086      	sub	sp, #24
 800689e:	ac02      	add	r4, sp, #8
 80068a0:	e884 0006 	stmia.w	r4, {r1, r2}
 80068a4:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80068a6:	ab0a      	add	r3, sp, #40	; 0x28
 80068a8:	9305      	str	r3, [sp, #20]
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80068aa:	9301      	str	r3, [sp, #4]
 80068ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80068ae:	9300      	str	r3, [sp, #0]
 80068b0:	4621      	mov	r1, r4
 80068b2:	9b08      	ldr	r3, [sp, #32]
 80068b4:	f00c f868 	bl	8012988 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80068b8:	b006      	add	sp, #24
 80068ba:	bd10      	pop	{r4, pc}

080068bc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80068bc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80068be:	bb18      	cbnz	r0, 8006908 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80068c0:	4b12      	ldr	r3, [pc, #72]	; (800690c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80068c2:	4813      	ldr	r0, [pc, #76]	; (8006910 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	4913      	ldr	r1, [pc, #76]	; (8006914 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80068c8:	b1b3      	cbz	r3, 80068f8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80068ca:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80068cc:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80068ce:	441a      	add	r2, r3
 80068d0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80068d2:	685a      	ldr	r2, [r3, #4]
 80068d4:	441a      	add	r2, r3
 80068d6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80068d8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80068da:	4b0f      	ldr	r3, [pc, #60]	; (8006918 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80068dc:	2200      	movs	r2, #0
 80068de:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80068e0:	f000 f838 	bl	8006954 <_ZN17TypedTextDatabase8getFontsEv>
 80068e4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80068e6:	f000 f833 	bl	8006950 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80068ea:	4b0c      	ldr	r3, [pc, #48]	; (800691c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80068ec:	601c      	str	r4, [r3, #0]
        fonts = f;
 80068ee:	4b0c      	ldr	r3, [pc, #48]	; (8006920 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80068f0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80068f2:	4b0c      	ldr	r3, [pc, #48]	; (8006924 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80068f4:	8018      	strh	r0, [r3, #0]
    }
}
 80068f6:	e007      	b.n	8006908 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80068f8:	4b0b      	ldr	r3, [pc, #44]	; (8006928 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80068fa:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80068fc:	4b0b      	ldr	r3, [pc, #44]	; (800692c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80068fe:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006900:	4b0b      	ldr	r3, [pc, #44]	; (8006930 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006902:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006904:	2c00      	cmp	r4, #0
 8006906:	d1e8      	bne.n	80068da <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006908:	bd38      	pop	{r3, r4, r5, pc}
 800690a:	bf00      	nop
 800690c:	2000f06c 	.word	0x2000f06c
 8006910:	2000f070 	.word	0x2000f070
 8006914:	2000f074 	.word	0x2000f074
 8006918:	2000f078 	.word	0x2000f078
 800691c:	200200dc 	.word	0x200200dc
 8006920:	200200e4 	.word	0x200200e4
 8006924:	200200e0 	.word	0x200200e0
 8006928:	90125ce0 	.word	0x90125ce0
 800692c:	90125bbc 	.word	0x90125bbc
 8006930:	90125f58 	.word	0x90125f58

08006934 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006934:	4b04      	ldr	r3, [pc, #16]	; (8006948 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800693c:	4b03      	ldr	r3, [pc, #12]	; (800694c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800693e:	681b      	ldr	r3, [r3, #0]
}
 8006940:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006944:	4770      	bx	lr
 8006946:	bf00      	nop
 8006948:	2000f074 	.word	0x2000f074
 800694c:	2000f070 	.word	0x2000f070

08006950 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006950:	2049      	movs	r0, #73	; 0x49
 8006952:	4770      	bx	lr

08006954 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006954:	4800      	ldr	r0, [pc, #0]	; (8006958 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006956:	4770      	bx	lr
 8006958:	2000f07c 	.word	0x2000f07c

0800695c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800695c:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 800695e:	f7ff feb7 	bl	80066d0 <_Z23getFont_verdana_15_4bppv>
};
 8006962:	4c04      	ldr	r4, [pc, #16]	; (8006974 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8006964:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006966:	f7ff feef 	bl	8006748 <_Z23getFont_verdana_40_4bppv>
};
 800696a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 800696c:	f7ff fe74 	bl	8006658 <_Z23getFont_verdana_10_4bppv>
};
 8006970:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8006972:	bd10      	pop	{r4, pc}
 8006974:	2000f07c 	.word	0x2000f07c

08006978 <_ZN25CustomContainerButton_keyD1Ev>:

class CustomContainerButton_key : public CustomContainerButton_keyBase
{
public:
    CustomContainerButton_key();
    virtual ~CustomContainerButton_key() {}
 8006978:	4770      	bx	lr
	...

0800697c <_ZN25CustomContainerButton_key19functionButtonClickEv>:
}

void CustomContainerButton_key::functionButtonClick()
{
	touchgfx_printf("function1 %s\n\r", flexButton_keyboardBuffer);
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_keyboardBuffer[0];
 800697c:	4b03      	ldr	r3, [pc, #12]	; (800698c <_ZN25CustomContainerButton_key19functionButtonClickEv+0x10>)
 800697e:	f8b0 10ec 	ldrh.w	r1, [r0, #236]	; 0xec
 8006982:	881a      	ldrh	r2, [r3, #0]
 8006984:	4b02      	ldr	r3, [pc, #8]	; (8006990 <_ZN25CustomContainerButton_key19functionButtonClickEv+0x14>)
 8006986:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
}
 800698a:	4770      	bx	lr
 800698c:	2000f088 	.word	0x2000f088
 8006990:	2000f08a 	.word	0x2000f08a

08006994 <_ZN25CustomContainerButton_key10initializeEv>:
    CustomContainerButton_keyBase::initialize();
 8006994:	f7fb bbba 	b.w	800210c <_ZN29CustomContainerButton_keyBase10initializeEv>

08006998 <_ZN25CustomContainerButton_keyD0Ev>:
 8006998:	b510      	push	{r4, lr}
 800699a:	f44f 718a 	mov.w	r1, #276	; 0x114
 800699e:	4604      	mov	r4, r0
 80069a0:	f01c fa84 	bl	8022eac <_ZdlPvj>
 80069a4:	4620      	mov	r0, r4
 80069a6:	bd10      	pop	{r4, pc}

080069a8 <_ZN25CustomContainerButton_keyC1Ev>:
CustomContainerButton_key::CustomContainerButton_key()
 80069a8:	b510      	push	{r4, lr}
 80069aa:	4604      	mov	r4, r0
 80069ac:	f7fb fcdc 	bl	8002368 <_ZN29CustomContainerButton_keyBaseC1Ev>
 80069b0:	4b01      	ldr	r3, [pc, #4]	; (80069b8 <_ZN25CustomContainerButton_keyC1Ev+0x10>)
 80069b2:	6023      	str	r3, [r4, #0]
}
 80069b4:	4620      	mov	r0, r4
 80069b6:	bd10      	pop	{r4, pc}
 80069b8:	08026994 	.word	0x08026994

080069bc <_ZN23CustomContainerKeyboardD1Ev>:

class CustomContainerKeyboard : public CustomContainerKeyboardBase
{
public:
    CustomContainerKeyboard();
    virtual ~CustomContainerKeyboard() {}
 80069bc:	4770      	bx	lr

080069be <_ZN23CustomContainerKeyboard16ClickButtonEnterEv>:
//	customContainer6_2.initialize_my(keyboard_mas[language_type][28]);
//	customContainer7_2.initialize_my(keyboard_mas[language_type][29]);
//	customContainer8_2.initialize_my(keyboard_mas[language_type][30]);
//	customContainer9_2.initialize_my(keyboard_mas[language_type][31]);
//	customContainer10_2.initialize_my(keyboard_mas[language_type][32]);
}
 80069be:	4770      	bx	lr

080069c0 <_ZN23CustomContainerKeyboard16ClickButtonShiftEv>:
}

//==================================================================================================================
//When flexButton_shift clicked call virtual function
void CustomContainerKeyboard::ClickButtonShift() {
	if (capital_letters) {
 80069c0:	f642 42eb 	movw	r2, #11499	; 0x2ceb
 80069c4:	5c83      	ldrb	r3, [r0, r2]
 80069c6:	fab3 f383 	clz	r3, r3
 80069ca:	095b      	lsrs	r3, r3, #5
 80069cc:	5483      	strb	r3, [r0, r2]
	}
	else {
		capital_letters = 1;
	}
	UpdateButtonKeyboard();
}
 80069ce:	4770      	bx	lr

080069d0 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv>:

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 80069d0:	4b0d      	ldr	r3, [pc, #52]	; (8006a08 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv+0x38>)
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 80069d2:	b570      	push	{r4, r5, r6, lr}
	count_ContainerTextArea = 0;
 80069d4:	2500      	movs	r5, #0
 80069d6:	801d      	strh	r5, [r3, #0]
	setVisible(false);
	invalidate();
 80069d8:	6803      	ldr	r3, [r0, #0]
        visible = vis;
 80069da:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 80069de:	4604      	mov	r4, r0
	invalidate();
 80069e0:	695b      	ldr	r3, [r3, #20]
 80069e2:	4798      	blx	r3
        setX(x);
 80069e4:	6823      	ldr	r3, [r4, #0]
 80069e6:	4629      	mov	r1, r5
 80069e8:	4620      	mov	r0, r4
 80069ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069ec:	4798      	blx	r3
        setY(y);
 80069ee:	6823      	ldr	r3, [r4, #0]
 80069f0:	4620      	mov	r0, r4
 80069f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069f4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80069f8:	4798      	blx	r3
	setXY(0, 480);
	invalidate();
 80069fa:	6823      	ldr	r3, [r4, #0]
 80069fc:	4620      	mov	r0, r4
 80069fe:	695b      	ldr	r3, [r3, #20]
}
 8006a00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 8006a04:	4718      	bx	r3
 8006a06:	bf00      	nop
 8006a08:	2000f088 	.word	0x2000f088

08006a0c <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv>:
}

//==================================================================================================================
//When flexButton_space clicked call virtual function
void CustomContainerKeyboard::ClickButtonSpace() {
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006a0c:	f642 2274 	movw	r2, #10868	; 0x2a74
void CustomContainerKeyboard::ClickButtonSpace() {
 8006a10:	b410      	push	{r4}
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006a12:	5a84      	ldrh	r4, [r0, r2]
 8006a14:	4a05      	ldr	r2, [pc, #20]	; (8006a2c <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x20>)
	action1();
 8006a16:	6803      	ldr	r3, [r0, #0]
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006a18:	8811      	ldrh	r1, [r2, #0]
 8006a1a:	4a05      	ldr	r2, [pc, #20]	; (8006a30 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x24>)
	action1();
 8006a1c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006a20:	f822 4011 	strh.w	r4, [r2, r1, lsl #1]
}
 8006a24:	f85d 4b04 	ldr.w	r4, [sp], #4
	action1();
 8006a28:	4718      	bx	r3
 8006a2a:	bf00      	nop
 8006a2c:	2000f088 	.word	0x2000f088
 8006a30:	2000f08a 	.word	0x2000f08a

08006a34 <_ZN23CustomContainerKeyboard19ClickButtonLanguageEv>:
	if (language_type == LANG_RUS) {
 8006a34:	f642 42e9 	movw	r2, #11497	; 0x2ce9
 8006a38:	5c83      	ldrb	r3, [r0, r2]
 8006a3a:	3b01      	subs	r3, #1
 8006a3c:	bf18      	it	ne
 8006a3e:	2301      	movne	r3, #1
 8006a40:	5483      	strb	r3, [r0, r2]
	flexButton_language.invalidate();
 8006a42:	f500 5009 	add.w	r0, r0, #8768	; 0x2240
 8006a46:	3034      	adds	r0, #52	; 0x34
 8006a48:	f00d bbf4 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

08006a4c <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev>:

}

//==================================================================================================================
//When flexButton_ABC_123 clicked call virtual function button_ABC_mas
void CustomContainerKeyboard::ClickButtonABC123() {
 8006a4c:	b510      	push	{r4, lr}
	if (keyboard_type == TYPE_ABC) {
 8006a4e:	f642 43ea 	movw	r3, #11498	; 0x2cea
void CustomContainerKeyboard::ClickButtonABC123() {
 8006a52:	4604      	mov	r4, r0
	if (keyboard_type == TYPE_ABC) {
 8006a54:	5cc2      	ldrb	r2, [r0, r3]
 8006a56:	2a01      	cmp	r2, #1
 8006a58:	d10f      	bne.n	8006a7a <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x2e>
		keyboard_type = TYPE_123;
 8006a5a:	2200      	movs	r2, #0
 8006a5c:	54c2      	strb	r2, [r0, r3]
		Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "123");
 8006a5e:	f500 502a 	add.w	r0, r0, #10880	; 0x2a80
 8006a62:	4a07      	ldr	r2, [pc, #28]	; (8006a80 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x34>)
 8006a64:	210a      	movs	r1, #10
 8006a66:	3030      	adds	r0, #48	; 0x30
 8006a68:	f010 f8e4 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}
	else {
		keyboard_type = TYPE_ABC;
		keyboard_mas_from_cp1251_to_utf8((char*) button_ABC_mas[language_type], &flexButton_ABC_123Buffer[0], sizeof(button_ABC_mas)/2);
	}
	flexButton_ABC_123.invalidate();
 8006a6c:	f504 5025 	add.w	r0, r4, #10560	; 0x2940
 8006a70:	3024      	adds	r0, #36	; 0x24
	UpdateButtonKeyboard();
}
 8006a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_ABC_123.invalidate();
 8006a76:	f00d bbdd 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
		keyboard_type = TYPE_ABC;
 8006a7a:	2201      	movs	r2, #1
 8006a7c:	54c2      	strb	r2, [r0, r3]
}
 8006a7e:	e7f5      	b.n	8006a6c <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x20>
 8006a80:	08026a28 	.word	0x08026a28

08006a84 <_ZN23CustomContainerKeyboardD0Ev>:
 8006a84:	b510      	push	{r4, lr}
 8006a86:	f642 61a8 	movw	r1, #11944	; 0x2ea8
 8006a8a:	4604      	mov	r4, r0
 8006a8c:	f01c fa0e 	bl	8022eac <_ZdlPvj>
 8006a90:	4620      	mov	r0, r4
 8006a92:	bd10      	pop	{r4, pc}

08006a94 <_ZN23CustomContainerKeyboardC1Ev>:
CustomContainerKeyboard::CustomContainerKeyboard() {
 8006a94:	b538      	push	{r3, r4, r5, lr}
 8006a96:	4604      	mov	r4, r0
 8006a98:	f7fb ff64 	bl	8002964 <_ZN27CustomContainerKeyboardBaseC1Ev>
 8006a9c:	4b13      	ldr	r3, [pc, #76]	; (8006aec <_ZN23CustomContainerKeyboardC1Ev+0x58>)
 8006a9e:	6023      	str	r3, [r4, #0]
 8006aa0:	f642 43e8 	movw	r3, #11496	; 0x2ce8
 8006aa4:	4a12      	ldr	r2, [pc, #72]	; (8006af0 <_ZN23CustomContainerKeyboardC1Ev+0x5c>)
 8006aa6:	50e2      	str	r2, [r4, r3]
 8006aa8:	f642 53f4 	movw	r3, #11764	; 0x2df4
 8006aac:	2500      	movs	r5, #0
 8006aae:	18e2      	adds	r2, r4, r3
 8006ab0:	50e5      	str	r5, [r4, r3]
 8006ab2:	f642 53fa 	movw	r3, #11770	; 0x2dfa
 8006ab6:	8095      	strh	r5, [r2, #4]
 8006ab8:	18e2      	adds	r2, r4, r3
 8006aba:	50e5      	str	r5, [r4, r3]
 8006abc:	4629      	mov	r1, r5
 8006abe:	8095      	strh	r5, [r2, #4]
 8006ac0:	f504 5038 	add.w	r0, r4, #11776	; 0x2e00
 8006ac4:	2242      	movs	r2, #66	; 0x42
 8006ac6:	f01c fcc5 	bl	8023454 <memset>
 8006aca:	f504 5039 	add.w	r0, r4, #11840	; 0x2e40
 8006ace:	4629      	mov	r1, r5
 8006ad0:	2242      	movs	r2, #66	; 0x42
 8006ad2:	3002      	adds	r0, #2
 8006ad4:	f01c fcbe 	bl	8023454 <memset>
 8006ad8:	f504 503a 	add.w	r0, r4, #11904	; 0x2e80
 8006adc:	2221      	movs	r2, #33	; 0x21
 8006ade:	4629      	mov	r1, r5
 8006ae0:	3004      	adds	r0, #4
 8006ae2:	f01c fcb7 	bl	8023454 <memset>
}
 8006ae6:	4620      	mov	r0, r4
 8006ae8:	bd38      	pop	{r3, r4, r5, pc}
 8006aea:	bf00      	nop
 8006aec:	08026a34 	.word	0x08026a34
 8006af0:	0101001e 	.word	0x0101001e

08006af4 <_ZN23CustomContainerKeyboard10UpdateTextEv>:
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8006af4:	4b09      	ldr	r3, [pc, #36]	; (8006b1c <_ZN23CustomContainerKeyboard10UpdateTextEv+0x28>)
 8006af6:	4a0a      	ldr	r2, [pc, #40]	; (8006b20 <_ZN23CustomContainerKeyboard10UpdateTextEv+0x2c>)
 8006af8:	8819      	ldrh	r1, [r3, #0]
void CustomContainerKeyboard::UpdateText() {
 8006afa:	b510      	push	{r4, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8006afc:	3101      	adds	r1, #1
void CustomContainerKeyboard::UpdateText() {
 8006afe:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8006b00:	f500 5028 	add.w	r0, r0, #10752	; 0x2a00
 8006b04:	b289      	uxth	r1, r1
 8006b06:	3024      	adds	r0, #36	; 0x24
 8006b08:	f010 f87e 	bl	8016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	textArea1.invalidate();
 8006b0c:	f504 5002 	add.w	r0, r4, #8320	; 0x2080
 8006b10:	3038      	adds	r0, #56	; 0x38
}
 8006b12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 8006b16:	f00d bb8d 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 8006b1a:	bf00      	nop
 8006b1c:	2000f088 	.word	0x2000f088
 8006b20:	2000f08a 	.word	0x2000f08a

08006b24 <_ZN23CustomContainerKeyboard10initializeEv>:
void CustomContainerKeyboard::initialize() {
 8006b24:	b510      	push	{r4, lr}
 8006b26:	4604      	mov	r4, r0
	CustomContainerKeyboardBase::initialize();
 8006b28:	f7fb fd9f 	bl	800266a <_ZN27CustomContainerKeyboardBase10initializeEv>
	count_ContainerTextArea = 0; // Очистка буфера обмена элемента контейнера CustomContainerKeyboard
 8006b2c:	4b05      	ldr	r3, [pc, #20]	; (8006b44 <_ZN23CustomContainerKeyboard10initializeEv+0x20>)
 8006b2e:	2200      	movs	r2, #0
 8006b30:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;			// Включение заглавных букв
 8006b32:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8006b36:	2201      	movs	r2, #1
 8006b38:	54e2      	strb	r2, [r4, r3]
	UpdateText();
 8006b3a:	4620      	mov	r0, r4
}
 8006b3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	UpdateText();
 8006b40:	f7ff bfd8 	b.w	8006af4 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8006b44:	2000f088 	.word	0x2000f088

08006b48 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv>:
void CustomContainerKeyboard::ClickButtonDelPre() {
 8006b48:	b538      	push	{r3, r4, r5, lr}
	if (count_ContainerTextArea) {
 8006b4a:	4d0a      	ldr	r5, [pc, #40]	; (8006b74 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x2c>)
 8006b4c:	882b      	ldrh	r3, [r5, #0]
void CustomContainerKeyboard::ClickButtonDelPre() {
 8006b4e:	4604      	mov	r4, r0
	if (count_ContainerTextArea) {
 8006b50:	b923      	cbnz	r3, 8006b5c <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x14>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 8006b52:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8006b56:	5ce2      	ldrb	r2, [r4, r3]
 8006b58:	b142      	cbz	r2, 8006b6c <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x24>
}
 8006b5a:	bd38      	pop	{r3, r4, r5, pc}
		count_ContainerTextArea -= 1;
 8006b5c:	3b01      	subs	r3, #1
 8006b5e:	802b      	strh	r3, [r5, #0]
		UpdateText();
 8006b60:	f7ff ffc8 	bl	8006af4 <_ZN23CustomContainerKeyboard10UpdateTextEv>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 8006b64:	882b      	ldrh	r3, [r5, #0]
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	d1f7      	bne.n	8006b5a <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 8006b6a:	e7f2      	b.n	8006b52 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0xa>
		capital_letters = 1;
 8006b6c:	2201      	movs	r2, #1
 8006b6e:	54e2      	strb	r2, [r4, r3]
}
 8006b70:	e7f3      	b.n	8006b5a <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 8006b72:	bf00      	nop
 8006b74:	2000f088 	.word	0x2000f088

08006b78 <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv>:
	count_ContainerTextArea = 0;
 8006b78:	4b04      	ldr	r3, [pc, #16]	; (8006b8c <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv+0x14>)
 8006b7a:	2200      	movs	r2, #0
 8006b7c:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;
 8006b7e:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8006b82:	2201      	movs	r2, #1
 8006b84:	54c2      	strb	r2, [r0, r3]
	UpdateText();
 8006b86:	f7ff bfb5 	b.w	8006af4 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8006b8a:	bf00      	nop
 8006b8c:	2000f088 	.word	0x2000f088

08006b90 <_ZN23CustomContainerKeyboard7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard::action1() {
//	textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8006b90:	4a06      	ldr	r2, [pc, #24]	; (8006bac <_ZN23CustomContainerKeyboard7action1Ev+0x1c>)
 8006b92:	8813      	ldrh	r3, [r2, #0]
 8006b94:	3301      	adds	r3, #1
 8006b96:	b29b      	uxth	r3, r3
	if (count_ContainerTextArea == 1) {
 8006b98:	2b01      	cmp	r3, #1
	count_ContainerTextArea++;
 8006b9a:	8013      	strh	r3, [r2, #0]
		capital_letters = 0;
 8006b9c:	bf02      	ittt	eq
 8006b9e:	f642 43eb 	movweq	r3, #11499	; 0x2ceb
 8006ba2:	2200      	moveq	r2, #0
 8006ba4:	54c2      	strbeq	r2, [r0, r3]
	if (count_ContainerTextArea == count_Container) {
		count_ContainerTextArea = (count_Container);
	}
	//-----------------------------------------------------------

	UpdateText();
 8006ba6:	f7ff bfa5 	b.w	8006af4 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8006baa:	bf00      	nop
 8006bac:	2000f088 	.word	0x2000f088

08006bb0 <_ZN27CustomContainerKeyboard_NumD1Ev>:

class CustomContainerKeyboard_Num : public CustomContainerKeyboard_NumBase
{
public:
    CustomContainerKeyboard_Num();
    virtual ~CustomContainerKeyboard_Num() {}
 8006bb0:	4770      	bx	lr

08006bb2 <_ZN27CustomContainerKeyboard_Num16ClickButtonEnterEv>:
//	customContainerButton_key8.initialize_my(keyboard_mas[7]);
//	customContainerButton_key9.initialize_my(keyboard_mas[8]);
//	customContainerButton_key10.initialize_my(keyboard_mas[9]);
//	customContainerButton_key11.initialize_my(keyboard_mas[10]);
//	customContainerButton_key12.initialize_my(keyboard_mas[11]);
}
 8006bb2:	4770      	bx	lr

08006bb4 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv>:
}

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 8006bb4:	4a0c      	ldr	r2, [pc, #48]	; (8006be8 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x34>)
 8006bb6:	2300      	movs	r3, #0
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 8006bb8:	b510      	push	{r4, lr}
	count_ContainerTextArea = 0;
 8006bba:	8013      	strh	r3, [r2, #0]
        visible = vis;
 8006bbc:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	setVisible(false);
	invalidate();
 8006bc0:	6803      	ldr	r3, [r0, #0]
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 8006bc2:	4604      	mov	r4, r0
	invalidate();
 8006bc4:	695b      	ldr	r3, [r3, #20]
 8006bc6:	4798      	blx	r3
        setX(x);
 8006bc8:	6823      	ldr	r3, [r4, #0]
 8006bca:	4908      	ldr	r1, [pc, #32]	; (8006bec <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x38>)
 8006bcc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006bce:	4620      	mov	r0, r4
 8006bd0:	4798      	blx	r3
        setY(y);
 8006bd2:	6823      	ldr	r3, [r4, #0]
 8006bd4:	4620      	mov	r0, r4
 8006bd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006bd8:	21b4      	movs	r1, #180	; 0xb4
 8006bda:	4798      	blx	r3
	setXY(-270, 180);
	invalidate();
 8006bdc:	6823      	ldr	r3, [r4, #0]
 8006bde:	4620      	mov	r0, r4
 8006be0:	695b      	ldr	r3, [r3, #20]
}
 8006be2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	invalidate();
 8006be6:	4718      	bx	r3
 8006be8:	2000f088 	.word	0x2000f088
 8006bec:	fffffef2 	.word	0xfffffef2

08006bf0 <_ZN27CustomContainerKeyboard_Num10initializeEv>:
    CustomContainerKeyboard_NumBase::initialize();
 8006bf0:	f7fc bf9f 	b.w	8003b32 <_ZN31CustomContainerKeyboard_NumBase10initializeEv>

08006bf4 <_ZN27CustomContainerKeyboard_NumD0Ev>:
 8006bf4:	b510      	push	{r4, lr}
 8006bf6:	f241 01bc 	movw	r1, #4284	; 0x10bc
 8006bfa:	4604      	mov	r4, r0
 8006bfc:	f01c f956 	bl	8022eac <_ZdlPvj>
 8006c00:	4620      	mov	r0, r4
 8006c02:	bd10      	pop	{r4, pc}

08006c04 <_ZN27CustomContainerKeyboard_NumC1Ev>:
CustomContainerKeyboard_Num::CustomContainerKeyboard_Num()
 8006c04:	b510      	push	{r4, lr}
 8006c06:	4604      	mov	r4, r0
 8006c08:	f7fc ffea 	bl	8003be0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev>
 8006c0c:	4b08      	ldr	r3, [pc, #32]	; (8006c30 <_ZN27CustomContainerKeyboard_NumC1Ev+0x2c>)
 8006c0e:	6023      	str	r3, [r4, #0]
 8006c10:	f241 03ac 	movw	r3, #4268	; 0x10ac
 8006c14:	2205      	movs	r2, #5
 8006c16:	54e2      	strb	r2, [r4, r3]
 8006c18:	4a06      	ldr	r2, [pc, #24]	; (8006c34 <_ZN27CustomContainerKeyboard_NumC1Ev+0x30>)
 8006c1a:	f241 00ad 	movw	r0, #4269	; 0x10ad
 8006c1e:	1821      	adds	r1, r4, r0
 8006c20:	6813      	ldr	r3, [r2, #0]
 8006c22:	5023      	str	r3, [r4, r0]
 8006c24:	6853      	ldr	r3, [r2, #4]
 8006c26:	604b      	str	r3, [r1, #4]
 8006c28:	6893      	ldr	r3, [r2, #8]
 8006c2a:	608b      	str	r3, [r1, #8]
}
 8006c2c:	4620      	mov	r0, r4
 8006c2e:	bd10      	pop	{r4, pc}
 8006c30:	08026aec 	.word	0x08026aec
 8006c34:	08025264 	.word	0x08025264

08006c38 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>:
void CustomContainerKeyboard_Num::UpdateText() {
 8006c38:	b538      	push	{r3, r4, r5, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8006c3a:	4d14      	ldr	r5, [pc, #80]	; (8006c8c <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x54>)
 8006c3c:	4a14      	ldr	r2, [pc, #80]	; (8006c90 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x58>)
 8006c3e:	8829      	ldrh	r1, [r5, #0]
 8006c40:	3101      	adds	r1, #1
void CustomContainerKeyboard_Num::UpdateText() {
 8006c42:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8006c44:	b289      	uxth	r1, r1
 8006c46:	f600 70c4 	addw	r0, r0, #4036	; 0xfc4
 8006c4a:	f00f ffdd 	bl	8016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	if(count_ContainerTextArea == 1){
 8006c4e:	882b      	ldrh	r3, [r5, #0]
 8006c50:	2b01      	cmp	r3, #1
 8006c52:	d113      	bne.n	8006c7c <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x44>
		if((textArea1Buffer[1] == button_123_mas[9]) || (textArea1Buffer[1] == button_123_mas[11])){
 8006c54:	f241 02b6 	movw	r2, #4278	; 0x10b6
 8006c58:	f8b4 3fc6 	ldrh.w	r3, [r4, #4038]	; 0xfc6
 8006c5c:	5ca2      	ldrb	r2, [r4, r2]
 8006c5e:	429a      	cmp	r2, r3
 8006c60:	d004      	beq.n	8006c6c <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x34>
 8006c62:	f241 02b8 	movw	r2, #4280	; 0x10b8
 8006c66:	5ca2      	ldrb	r2, [r4, r2]
 8006c68:	429a      	cmp	r2, r3
 8006c6a:	d109      	bne.n	8006c80 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
			count_ContainerTextArea = 0;
 8006c6c:	2300      	movs	r3, #0
 8006c6e:	802b      	strh	r3, [r5, #0]
		textArea1Buffer[0] = button_123_mas[10];
 8006c70:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8006c74:	5ce3      	ldrb	r3, [r4, r3]
 8006c76:	f8a4 3fc4 	strh.w	r3, [r4, #4036]	; 0xfc4
 8006c7a:	e001      	b.n	8006c80 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
	if(count_ContainerTextArea == 0){
 8006c7c:	2b00      	cmp	r3, #0
 8006c7e:	d0f7      	beq.n	8006c70 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x38>
	textArea1.invalidate();
 8006c80:	f504 70ec 	add.w	r0, r4, #472	; 0x1d8
}
 8006c84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	textArea1.invalidate();
 8006c88:	f00d bad4 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 8006c8c:	2000f088 	.word	0x2000f088
 8006c90:	2000f08a 	.word	0x2000f08a

08006c94 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv>:
	if (count_ContainerTextArea) {
 8006c94:	4a03      	ldr	r2, [pc, #12]	; (8006ca4 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0x10>)
 8006c96:	8813      	ldrh	r3, [r2, #0]
 8006c98:	b11b      	cbz	r3, 8006ca2 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0xe>
		count_ContainerTextArea -= 1;
 8006c9a:	3b01      	subs	r3, #1
 8006c9c:	8013      	strh	r3, [r2, #0]
		UpdateText();
 8006c9e:	f7ff bfcb 	b.w	8006c38 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
}
 8006ca2:	4770      	bx	lr
 8006ca4:	2000f088 	.word	0x2000f088

08006ca8 <_ZN27CustomContainerKeyboard_Num7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard_Num::action1() {
 8006ca8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
// textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8006caa:	4d3a      	ldr	r5, [pc, #232]	; (8006d94 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xec>)

	//------------------------------------------------------------------------------
	// Проверка на одну запятую
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8006cac:	4e3a      	ldr	r6, [pc, #232]	; (8006d98 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xf0>)
	count_ContainerTextArea++;
 8006cae:	882b      	ldrh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8006cb0:	f241 02b8 	movw	r2, #4280	; 0x10b8
	count_ContainerTextArea++;
 8006cb4:	3301      	adds	r3, #1
 8006cb6:	b29b      	uxth	r3, r3
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8006cb8:	5c81      	ldrb	r1, [r0, r2]
	count_ContainerTextArea++;
 8006cba:	802b      	strh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8006cbc:	1e5a      	subs	r2, r3, #1
void CustomContainerKeyboard_Num::action1() {
 8006cbe:	4604      	mov	r4, r0
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8006cc0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8006cc4:	428a      	cmp	r2, r1
 8006cc6:	460f      	mov	r7, r1
 8006cc8:	d116      	bne.n	8006cf8 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
		if(count_ContainerTextArea == 1){
 8006cca:	2b01      	cmp	r3, #1
 8006ccc:	d107      	bne.n	8006cde <_ZN27CustomContainerKeyboard_Num7action1Ev+0x36>
			data_ContainerTextArea[1] = data_ContainerTextArea[0];
 8006cce:	8833      	ldrh	r3, [r6, #0]
 8006cd0:	8073      	strh	r3, [r6, #2]
			data_ContainerTextArea[0] = button_123_mas[10];
 8006cd2:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8006cd6:	5cc3      	ldrb	r3, [r0, r3]
 8006cd8:	8033      	strh	r3, [r6, #0]
			count_ContainerTextArea += 1;
 8006cda:	2302      	movs	r3, #2
 8006cdc:	802b      	strh	r3, [r5, #0]
		}
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 8006cde:	220a      	movs	r2, #10
 8006ce0:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 8006ce4:	9101      	str	r1, [sp, #4]
 8006ce6:	f7f9 fa8b 	bl	8000200 <memchr>
		if(str_no != NULL){
 8006cea:	9901      	ldr	r1, [sp, #4]
 8006cec:	b120      	cbz	r0, 8006cf8 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
			count_ContainerTextArea -= 1;
 8006cee:	882b      	ldrh	r3, [r5, #0]
 8006cf0:	3b01      	subs	r3, #1
 8006cf2:	802b      	strh	r3, [r5, #0]
	}

	UpdateText();


}
 8006cf4:	b003      	add	sp, #12
 8006cf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if((textArea1Buffer[0] == button_123_mas[10]) &&
 8006cf8:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8006cfc:	5ce2      	ldrb	r2, [r4, r3]
 8006cfe:	f8b4 3fc4 	ldrh.w	r3, [r4, #4036]	; 0xfc4
 8006d02:	4293      	cmp	r3, r2
 8006d04:	d10b      	bne.n	8006d1e <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
 8006d06:	882b      	ldrh	r3, [r5, #0]
 8006d08:	1e58      	subs	r0, r3, #1
 8006d0a:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8006d0e:	42b8      	cmp	r0, r7
 8006d10:	d005      	beq.n	8006d1e <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
			(data_ContainerTextArea[count_ContainerTextArea - 1] != button_123_mas[11]) &&
 8006d12:	2b02      	cmp	r3, #2
			data_ContainerTextArea[0] = data_ContainerTextArea[1];
 8006d14:	bf01      	itttt	eq
 8006d16:	8873      	ldrheq	r3, [r6, #2]
 8006d18:	8033      	strheq	r3, [r6, #0]
		count_ContainerTextArea = 1;
 8006d1a:	2301      	moveq	r3, #1
 8006d1c:	802b      	strheq	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea == 1)){
 8006d1e:	8828      	ldrh	r0, [r5, #0]
 8006d20:	f241 03b6 	movw	r3, #4278	; 0x10b6
 8006d24:	1e47      	subs	r7, r0, #1
 8006d26:	5ce3      	ldrb	r3, [r4, r3]
 8006d28:	f836 7017 	ldrh.w	r7, [r6, r7, lsl #1]
 8006d2c:	429f      	cmp	r7, r3
 8006d2e:	d104      	bne.n	8006d3a <_ZN27CustomContainerKeyboard_Num7action1Ev+0x92>
 8006d30:	2801      	cmp	r0, #1
		data_ContainerTextArea[1] = button_123_mas[10];
 8006d32:	bf02      	ittt	eq
 8006d34:	8072      	strheq	r2, [r6, #2]
		count_ContainerTextArea += 1;
 8006d36:	2202      	moveq	r2, #2
 8006d38:	802a      	strheq	r2, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea > 1)){
 8006d3a:	882f      	ldrh	r7, [r5, #0]
 8006d3c:	1e7a      	subs	r2, r7, #1
 8006d3e:	f836 0012 	ldrh.w	r0, [r6, r2, lsl #1]
 8006d42:	4298      	cmp	r0, r3
 8006d44:	d103      	bne.n	8006d4e <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
 8006d46:	2f01      	cmp	r7, #1
 8006d48:	d901      	bls.n	8006d4e <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
		count_ContainerTextArea -= 1;
 8006d4a:	802a      	strh	r2, [r5, #0]
		return;
 8006d4c:	e7d2      	b.n	8006cf4 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x4c>
	count_Container = 5;
 8006d4e:	2005      	movs	r0, #5
 8006d50:	f241 02ac 	movw	r2, #4268	; 0x10ac
	if (count_ContainerTextArea > 5) {
 8006d54:	4287      	cmp	r7, r0
	count_Container = 5;
 8006d56:	54a0      	strb	r0, [r4, r2]
	if (count_ContainerTextArea > 5) {
 8006d58:	d915      	bls.n	8006d86 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xde>
		if(data_ContainerTextArea[0] == button_123_mas[9]){
 8006d5a:	8830      	ldrh	r0, [r6, #0]
 8006d5c:	4298      	cmp	r0, r3
			count_Container += 1;
 8006d5e:	bf04      	itt	eq
 8006d60:	2306      	moveq	r3, #6
 8006d62:	54a3      	strbeq	r3, [r4, r2]
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 8006d64:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 8006d68:	220a      	movs	r2, #10
 8006d6a:	f7f9 fa49 	bl	8000200 <memchr>
		if(str_no != NULL){
 8006d6e:	b120      	cbz	r0, 8006d7a <_ZN27CustomContainerKeyboard_Num7action1Ev+0xd2>
			count_Container += 1;
 8006d70:	f241 02ac 	movw	r2, #4268	; 0x10ac
 8006d74:	5ca3      	ldrb	r3, [r4, r2]
 8006d76:	3301      	adds	r3, #1
 8006d78:	54a3      	strb	r3, [r4, r2]
		if(count_ContainerTextArea >= count_Container){
 8006d7a:	f241 03ac 	movw	r3, #4268	; 0x10ac
 8006d7e:	5ce3      	ldrb	r3, [r4, r3]
 8006d80:	429f      	cmp	r7, r3
			count_ContainerTextArea = (count_Container);
 8006d82:	bf28      	it	cs
 8006d84:	802b      	strhcs	r3, [r5, #0]
	UpdateText();
 8006d86:	4620      	mov	r0, r4
}
 8006d88:	b003      	add	sp, #12
 8006d8a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	UpdateText();
 8006d8e:	f7ff bf53 	b.w	8006c38 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 8006d92:	bf00      	nop
 8006d94:	2000f088 	.word	0x2000f088
 8006d98:	2000f08a 	.word	0x2000f08a

08006d9c <_ZN23CustomContainerTableLogD1Ev>:

class CustomContainerTableLog : public CustomContainerTableLogBase
{
public:
    CustomContainerTableLog();
    virtual ~CustomContainerTableLog() {}
 8006d9c:	4770      	bx	lr

08006d9e <_ZN23CustomContainerTableLog10initializeEv>:

}

void CustomContainerTableLog::initialize()
{
    CustomContainerTableLogBase::initialize();
 8006d9e:	f7fd ba6c 	b.w	800427a <_ZN27CustomContainerTableLogBase10initializeEv>

08006da2 <_ZN23CustomContainerTableLogD0Ev>:
 8006da2:	b510      	push	{r4, lr}
 8006da4:	f44f 61ba 	mov.w	r1, #1488	; 0x5d0
 8006da8:	4604      	mov	r4, r0
 8006daa:	f01c f87f 	bl	8022eac <_ZdlPvj>
 8006dae:	4620      	mov	r0, r4
 8006db0:	bd10      	pop	{r4, pc}
	...

08006db4 <_ZN23CustomContainerTableLogC1Ev>:
CustomContainerTableLog::CustomContainerTableLog()
 8006db4:	b570      	push	{r4, r5, r6, lr}
 8006db6:	4604      	mov	r4, r0
 8006db8:	f7fd fa9c 	bl	80042f4 <_ZN27CustomContainerTableLogBaseC1Ev>
 8006dbc:	4b2b      	ldr	r3, [pc, #172]	; (8006e6c <_ZN23CustomContainerTableLogC1Ev+0xb8>)
 8006dbe:	6023      	str	r3, [r4, #0]
 8006dc0:	2228      	movs	r2, #40	; 0x28
 8006dc2:	2100      	movs	r1, #0
 8006dc4:	f204 40fe 	addw	r0, r4, #1278	; 0x4fe
 8006dc8:	f01c fb44 	bl	8023454 <memset>
 8006dcc:	f240 431f 	movw	r3, #1055	; 0x41f
 8006dd0:	f8a4 34fe 	strh.w	r3, [r4, #1278]	; 0x4fe
 8006dd4:	4b26      	ldr	r3, [pc, #152]	; (8006e70 <_ZN23CustomContainerTableLogC1Ev+0xbc>)
 8006dd6:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
 8006dda:	f503 2350 	add.w	r3, r3, #851968	; 0xd0000
 8006dde:	3306      	adds	r3, #6
 8006de0:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
 8006de4:	2228      	movs	r2, #40	; 0x28
 8006de6:	2100      	movs	r1, #0
 8006de8:	f204 5026 	addw	r0, r4, #1318	; 0x526
 8006dec:	f01c fb32 	bl	8023454 <memset>
 8006df0:	234b      	movs	r3, #75	; 0x4b
 8006df2:	f8a4 3528 	strh.w	r3, [r4, #1320]	; 0x528
 8006df6:	f240 431e 	movw	r3, #1054	; 0x41e
 8006dfa:	f8a4 353a 	strh.w	r3, [r4, #1338]	; 0x53a
 8006dfe:	4b1d      	ldr	r3, [pc, #116]	; (8006e74 <_ZN23CustomContainerTableLogC1Ev+0xc0>)
 8006e00:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
 8006e04:	f5a3 235f 	sub.w	r3, r3, #913408	; 0xdf000
 8006e08:	264f      	movs	r6, #79	; 0x4f
 8006e0a:	f6a3 73e6 	subw	r3, r3, #4070	; 0xfe6
 8006e0e:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
 8006e12:	f8a4 6526 	strh.w	r6, [r4, #1318]	; 0x526
 8006e16:	2228      	movs	r2, #40	; 0x28
 8006e18:	2100      	movs	r1, #0
 8006e1a:	f204 504e 	addw	r0, r4, #1358	; 0x54e
 8006e1e:	f01c fb19 	bl	8023454 <memset>
 8006e22:	234c      	movs	r3, #76	; 0x4c
 8006e24:	f8a4 354e 	strh.w	r3, [r4, #1358]	; 0x54e
 8006e28:	4b13      	ldr	r3, [pc, #76]	; (8006e78 <_ZN23CustomContainerTableLogC1Ev+0xc4>)
 8006e2a:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
 8006e2e:	2356      	movs	r3, #86	; 0x56
 8006e30:	f8a4 3562 	strh.w	r3, [r4, #1378]	; 0x562
 8006e34:	4b11      	ldr	r3, [pc, #68]	; (8006e7c <_ZN23CustomContainerTableLogC1Ev+0xc8>)
 8006e36:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8006e3a:	2500      	movs	r5, #0
 8006e3c:	234e      	movs	r3, #78	; 0x4e
 8006e3e:	f8a4 3576 	strh.w	r3, [r4, #1398]	; 0x576
 8006e42:	4629      	mov	r1, r5
 8006e44:	f8c4 557a 	str.w	r5, [r4, #1402]	; 0x57a
 8006e48:	f8a4 557e 	strh.w	r5, [r4, #1406]	; 0x57e
 8006e4c:	f8a4 6578 	strh.w	r6, [r4, #1400]	; 0x578
 8006e50:	2228      	movs	r2, #40	; 0x28
 8006e52:	f504 60b0 	add.w	r0, r4, #1408	; 0x580
 8006e56:	f01c fafd 	bl	8023454 <memset>
 8006e5a:	2228      	movs	r2, #40	; 0x28
 8006e5c:	4629      	mov	r1, r5
 8006e5e:	f504 60b5 	add.w	r0, r4, #1448	; 0x5a8
 8006e62:	f01c faf7 	bl	8023454 <memset>
}
 8006e66:	4620      	mov	r0, r4
 8006e68:	bd70      	pop	{r4, r5, r6, pc}
 8006e6a:	bf00      	nop
 8006e6c:	08026bac 	.word	0x08026bac
 8006e70:	04420435 	.word	0x04420435
 8006e74:	04400431 	.word	0x04400431
 8006e78:	004c0045 	.word	0x004c0045
 8006e7c:	004c004f 	.word	0x004c004f

08006e80 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef>:
}

void CustomContainerTableLog::UpdateLog_1(TileInfoTypeDef * data)
{
 8006e80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
        visible = vis;
 8006e82:	2601      	movs	r6, #1
 8006e84:	4604      	mov	r4, r0
 8006e86:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
	setVisible(true);
	tmp = data->working_hours_log;
 8006e8a:	481c      	ldr	r0, [pc, #112]	; (8006efc <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x7c>)
 8006e8c:	680b      	ldr	r3, [r1, #0]
 8006e8e:	6003      	str	r3, [r0, #0]
{
 8006e90:	460d      	mov	r5, r1
	tm_ptr = *gmtime(&tmp);
 8006e92:	f001 fd53 	bl	800893c <gmtime>
 8006e96:	4a1a      	ldr	r2, [pc, #104]	; (8006f00 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x80>)
 8006e98:	6803      	ldr	r3, [r0, #0]
 8006e9a:	6013      	str	r3, [r2, #0]
 8006e9c:	6843      	ldr	r3, [r0, #4]
 8006e9e:	6053      	str	r3, [r2, #4]
 8006ea0:	6883      	ldr	r3, [r0, #8]
	tm_ptr.tm_mon = 1;
	tm_ptr.tm_mday = 30;
//
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8006ea2:	7851      	ldrb	r1, [r2, #1]
	tm_ptr = *gmtime(&tmp);
 8006ea4:	6093      	str	r3, [r2, #8]
	tm_ptr.tm_mday = 30;
 8006ea6:	231e      	movs	r3, #30
	tm_ptr.tm_mon = 1;
 8006ea8:	7156      	strb	r6, [r2, #5]
	tm_ptr.tm_mday = 30;
 8006eaa:	70d3      	strb	r3, [r2, #3]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8006eac:	9103      	str	r1, [sp, #12]
 8006eae:	7891      	ldrb	r1, [r2, #2]
 8006eb0:	9102      	str	r1, [sp, #8]
	tm_ptr.tm_mday, tm_ptr.tm_mon, tm_ptr.tm_year + 1900, tm_ptr.tm_hour, tm_ptr.tm_min);
 8006eb2:	88d2      	ldrh	r2, [r2, #6]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8006eb4:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 8006eb8:	e9cd 6200 	strd	r6, r2, [sp]
 8006ebc:	2114      	movs	r1, #20
 8006ebe:	4a11      	ldr	r2, [pc, #68]	; (8006f04 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x84>)
 8006ec0:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8006ec4:	f00f feb6 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
	Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%d", data->channel_num);
 8006ec8:	7a2b      	ldrb	r3, [r5, #8]
 8006eca:	4a0f      	ldr	r2, [pc, #60]	; (8006f08 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x88>)
 8006ecc:	2105      	movs	r1, #5
 8006ece:	f504 608d 	add.w	r0, r4, #1128	; 0x468
 8006ed2:	f00f feaf 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
	Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", NamesTypeChannel[data->ch_type]);
 8006ed6:	7c6b      	ldrb	r3, [r5, #17]
 8006ed8:	2214      	movs	r2, #20
 8006eda:	fb02 4303 	mla	r3, r2, r3, r4
 8006ede:	f203 43fe 	addw	r3, r3, #1278	; 0x4fe
 8006ee2:	4a0a      	ldr	r2, [pc, #40]	; (8006f0c <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x8c>)
 8006ee4:	210a      	movs	r1, #10
 8006ee6:	f204 4072 	addw	r0, r4, #1138	; 0x472
 8006eea:	f00f fea3 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
//	Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", NamesErr[err]);
//
//	Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", NamesGas[gas]);

	invalidate();
 8006eee:	6823      	ldr	r3, [r4, #0]
 8006ef0:	695b      	ldr	r3, [r3, #20]
 8006ef2:	4620      	mov	r0, r4
}
 8006ef4:	b004      	add	sp, #16
 8006ef6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 8006efa:	4718      	bx	r3
 8006efc:	2000f0dc 	.word	0x2000f0dc
 8006f00:	2000f0e0 	.word	0x2000f0e0
 8006f04:	08026b88 	.word	0x08026b88
 8006f08:	08026ba0 	.word	0x08026ba0
 8006f0c:	08025b7d 	.word	0x08025b7d

08006f10 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8006f10:	4770      	bx	lr

08006f12 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7executeES4_S6_>:
    virtual void execute(T1 t1, T2 t2)
 8006f12:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8006f14:	68c4      	ldr	r4, [r0, #12]
 8006f16:	6845      	ldr	r5, [r0, #4]
 8006f18:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8006f1a:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8006f1c:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8006f20:	07e4      	lsls	r4, r4, #31
 8006f22:	bf48      	it	mi
 8006f24:	59ac      	ldrmi	r4, [r5, r6]
 8006f26:	689b      	ldr	r3, [r3, #8]
 8006f28:	bf48      	it	mi
 8006f2a:	58e3      	ldrmi	r3, [r4, r3]
    }
 8006f2c:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8006f2e:	4718      	bx	r3

08006f30 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8006f30:	6843      	ldr	r3, [r0, #4]
 8006f32:	b12b      	cbz	r3, 8006f40 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x10>
 8006f34:	6883      	ldr	r3, [r0, #8]
 8006f36:	b92b      	cbnz	r3, 8006f44 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x14>
 8006f38:	68c0      	ldr	r0, [r0, #12]
 8006f3a:	f000 0001 	and.w	r0, r0, #1
 8006f3e:	4770      	bx	lr
 8006f40:	4618      	mov	r0, r3
 8006f42:	4770      	bx	lr
 8006f44:	2001      	movs	r0, #1
    }
 8006f46:	4770      	bx	lr

08006f48 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8006f48:	b510      	push	{r4, lr}
 8006f4a:	2110      	movs	r1, #16
 8006f4c:	4604      	mov	r4, r0
 8006f4e:	f01b ffad 	bl	8022eac <_ZdlPvj>
 8006f52:	4620      	mov	r0, r4
 8006f54:	bd10      	pop	{r4, pc}
	...

08006f58 <_ZN10DatePickerC1Ev>:
#include <gui/settings_screen/DatePicker.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DatePicker::DatePicker() :
 8006f58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 8006f5c:	4681      	mov	r9, r0
        : x(0), y(0), width(0), height(0)
 8006f5e:	2500      	movs	r5, #0
 8006f60:	4ab5      	ldr	r2, [pc, #724]	; (8007238 <_ZN10DatePickerC1Ev+0x2e0>)
 8006f62:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8006f64:	f44f 7380 	mov.w	r3, #256	; 0x100
DatePicker::DatePicker() :
 8006f68:	4604      	mov	r4, r0
 8006f6a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8006f6e:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8006f72:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8006f76:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8006f7a:	8483      	strh	r3, [r0, #36]	; 0x24
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 8006f7c:	f849 2b2c 	str.w	r2, [r9], #44
 8006f80:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
        : Widget(), alpha(255), color(0)
 8006f84:	23ff      	movs	r3, #255	; 0xff
 8006f86:	f880 3052 	strb.w	r3, [r0, #82]	; 0x52
 8006f8a:	f100 0860 	add.w	r8, r0, #96	; 0x60
        : Box(), borderColor(0), borderSize(0)
 8006f8e:	4bab      	ldr	r3, [pc, #684]	; (800723c <_ZN10DatePickerC1Ev+0x2e4>)
 8006f90:	62c3      	str	r3, [r0, #44]	; 0x2c
 8006f92:	f504 56cd 	add.w	r6, r4, #6560	; 0x19a0
DatePicker::DatePicker() :
 8006f96:	b088      	sub	sp, #32
 8006f98:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 8006f9c:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8006fa0:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 8006fa4:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
        : color(col)
 8006fa8:	6545      	str	r5, [r0, #84]	; 0x54
 8006faa:	6585      	str	r5, [r0, #88]	; 0x58
 8006fac:	f8a0 505c 	strh.w	r5, [r0, #92]	; 0x5c
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 8006fb0:	360c      	adds	r6, #12
 8006fb2:	4640      	mov	r0, r8
 8006fb4:	f504 574b 	add.w	r7, r4, #12992	; 0x32c0
 8006fb8:	f001 f838 	bl	800802c <_ZN13WheelSelectorC1Ev>
 8006fbc:	3738      	adds	r7, #56	; 0x38
 8006fbe:	4630      	mov	r0, r6
 8006fc0:	f001 f834 	bl	800802c <_ZN13WheelSelectorC1Ev>
 8006fc4:	4638      	mov	r0, r7
 8006fc6:	f001 f831 	bl	800802c <_ZN13WheelSelectorC1Ev>
        : pobject(pobject), pmemfun_2(pmemfun_2)
 8006fca:	f644 4344 	movw	r3, #19524	; 0x4c44
 8006fce:	4a9c      	ldr	r2, [pc, #624]	; (8007240 <_ZN10DatePickerC1Ev+0x2e8>)
 8006fd0:	50e2      	str	r2, [r4, r3]
 8006fd2:	eb04 0a03 	add.w	sl, r4, r3
 8006fd6:	f644 434c 	movw	r3, #19532	; 0x4c4c
 8006fda:	4a9a      	ldr	r2, [pc, #616]	; (8007244 <_ZN10DatePickerC1Ev+0x2ec>)
 8006fdc:	f8ca 4004 	str.w	r4, [sl, #4]
 8006fe0:	50e2      	str	r2, [r4, r3]
 8006fe2:	f644 4350 	movw	r3, #19536	; 0x4c50
        setXY(x, y);
 8006fe6:	462a      	mov	r2, r5
 8006fe8:	50e5      	str	r5, [r4, r3]
 8006fea:	4629      	mov	r1, r5
 8006fec:	4648      	mov	r0, r9
 8006fee:	f7fb f951 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006ff2:	4648      	mov	r0, r9
 8006ff4:	21e6      	movs	r1, #230	; 0xe6
 8006ff6:	f7fb f829 	bl	800204c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8006ffa:	4648      	mov	r0, r9
 8006ffc:	2182      	movs	r1, #130	; 0x82
 8006ffe:	f7fb f827 	bl	8002050 <_ZN8touchgfx8Drawable9setHeightEs>
        borderColor = color;
 8007002:	4a91      	ldr	r2, [pc, #580]	; (8007248 <_ZN10DatePickerC1Ev+0x2f0>)
 8007004:	4b91      	ldr	r3, [pc, #580]	; (800724c <_ZN10DatePickerC1Ev+0x2f4>)
 8007006:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 800700a:	2303      	movs	r3, #3
 800700c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
//    add(background);
	background.setPosition(0, 0, 230, 130);
	background.setColor(touchgfx::Color::getColorFromRGB(0, 102, 53));
	background.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 102));
	background.setBorderSize(3);
	add(background);
 8007010:	4649      	mov	r1, r9
 8007012:	4620      	mov	r0, r4
 8007014:	f008 f8de 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

	months.setXY(10, 20);
 8007018:	2214      	movs	r2, #20
 800701a:	210a      	movs	r1, #10
 800701c:	4630      	mov	r0, r6
 800701e:	f7fb f939 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    virtual void handleDragEvent(const DragEvent& evt);
    virtual void handleGestureEvent(const GestureEvent& evt);

    void setElementSelectedCallback(touchgfx::GenericCallback<const WheelSelector&, const int&>& callback)
    {
        elementSelectedAction = &callback;
 8007022:	f243 23f0 	movw	r3, #13040	; 0x32f0
	months.setElementSelectedCallback(onSelectedElementChanged);
	add(months);
 8007026:	4631      	mov	r1, r6
 8007028:	f844 a003 	str.w	sl, [r4, r3]
 800702c:	4620      	mov	r0, r4
 800702e:	f008 f8d1 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    days.setXY(80, 20);
 8007032:	2214      	movs	r2, #20
 8007034:	2150      	movs	r1, #80	; 0x50
 8007036:	4640      	mov	r0, r8
 8007038:	f7fb f92c 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    add(days);
 800703c:	4641      	mov	r1, r8
 800703e:	4620      	mov	r0, r4
 8007040:	f008 f8c8 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    years.setXY(150, 20);
 8007044:	2214      	movs	r2, #20
 8007046:	2196      	movs	r1, #150	; 0x96
 8007048:	4638      	mov	r0, r7
 800704a:	f7fb f923 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800704e:	f644 433c 	movw	r3, #19516	; 0x4c3c
    years.setElementSelectedCallback(onSelectedElementChanged);
    add(years);
 8007052:	4639      	mov	r1, r7
 8007054:	f844 a003 	str.w	sl, [r4, r3]
 8007058:	4620      	mov	r0, r4
 800705a:	f008 f8bb 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
 800705e:	4b7c      	ldr	r3, [pc, #496]	; (8007250 <_ZN10DatePickerC1Ev+0x2f8>)
 8007060:	60a3      	str	r3, [r4, #8]
    setWidth(230);
    setHeight(130);

    // Setup the year wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    years.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 8007062:	f06f 020d 	mvn.w	r2, #13
 8007066:	231e      	movs	r3, #30
 8007068:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800706c:	2202      	movs	r2, #2
 800706e:	e9cd 3200 	strd	r3, r2, [sp]
 8007072:	2107      	movs	r1, #7
 8007074:	235a      	movs	r3, #90	; 0x5a
 8007076:	2246      	movs	r2, #70	; 0x46
 8007078:	4638      	mov	r0, r7
 800707a:	f001 f889 	bl	8008190 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
    {
        Unicode::UnicodeChar temp[6];
        Unicode::snprintf(temp, 6, "%d", i);
 800707e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8007258 <_ZN10DatePickerC1Ev+0x300>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 8007082:	f240 75e4 	movw	r5, #2020	; 0x7e4
        Unicode::snprintf(temp, 6, "%d", i);
 8007086:	462b      	mov	r3, r5
 8007088:	464a      	mov	r2, r9
 800708a:	2106      	movs	r1, #6
 800708c:	a805      	add	r0, sp, #20
 800708e:	f00f fdd1 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        years.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007092:	ab05      	add	r3, sp, #20
 8007094:	2247      	movs	r2, #71	; 0x47
 8007096:	2146      	movs	r1, #70	; 0x46
 8007098:	4638      	mov	r0, r7
 800709a:	f001 f8ff 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 800709e:	3501      	adds	r5, #1
 80070a0:	f640 0302 	movw	r3, #2050	; 0x802
 80070a4:	429d      	cmp	r5, r3
 80070a6:	d1ee      	bne.n	8007086 <_ZN10DatePickerC1Ev+0x12e>
    }
    years.setSelectedItem(1, 20);
 80070a8:	4638      	mov	r0, r7
 80070aa:	4b6a      	ldr	r3, [pc, #424]	; (8007254 <_ZN10DatePickerC1Ev+0x2fc>)
    // a negative x value is used to place the overlay correctly inside the wheel
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
    for (int i = 1; i < 32; i++)
    {
        Unicode::UnicodeChar temp[3];
        Unicode::snprintf(temp, 3, "%d", i);
 80070ac:	4f6a      	ldr	r7, [pc, #424]	; (8007258 <_ZN10DatePickerC1Ev+0x300>)
    years.setSelectedItem(1, 20);
 80070ae:	2214      	movs	r2, #20
 80070b0:	2101      	movs	r1, #1
 80070b2:	f001 fb8d 	bl	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 80070b6:	231e      	movs	r3, #30
 80070b8:	f06f 020d 	mvn.w	r2, #13
 80070bc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80070c0:	2202      	movs	r2, #2
 80070c2:	e9cd 3200 	strd	r3, r2, [sp]
 80070c6:	2107      	movs	r1, #7
 80070c8:	235a      	movs	r3, #90	; 0x5a
 80070ca:	2246      	movs	r2, #70	; 0x46
 80070cc:	4640      	mov	r0, r8
 80070ce:	f001 f85f 	bl	8008190 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = 1; i < 32; i++)
 80070d2:	2501      	movs	r5, #1
        Unicode::snprintf(temp, 3, "%d", i);
 80070d4:	462b      	mov	r3, r5
 80070d6:	463a      	mov	r2, r7
 80070d8:	2103      	movs	r1, #3
 80070da:	a805      	add	r0, sp, #20
 80070dc:	f00f fdaa 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    for (int i = 1; i < 32; i++)
 80070e0:	3501      	adds	r5, #1
        days.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80070e2:	ab05      	add	r3, sp, #20
 80070e4:	2247      	movs	r2, #71	; 0x47
 80070e6:	2146      	movs	r1, #70	; 0x46
 80070e8:	4640      	mov	r0, r8
 80070ea:	f001 f8d7 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>
    for (int i = 1; i < 32; i++)
 80070ee:	2d20      	cmp	r5, #32
 80070f0:	d1f0      	bne.n	80070d4 <_ZN10DatePickerC1Ev+0x17c>
    }
    days.setSelectedItem(1, 20);
 80070f2:	4640      	mov	r0, r8
 80070f4:	4b57      	ldr	r3, [pc, #348]	; (8007254 <_ZN10DatePickerC1Ev+0x2fc>)
 80070f6:	2214      	movs	r2, #20
 80070f8:	2101      	movs	r1, #1
 80070fa:	f001 fb69 	bl	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

    // Setup the month wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    months.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 80070fe:	231e      	movs	r3, #30
 8007100:	f06f 020d 	mvn.w	r2, #13
 8007104:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007108:	2202      	movs	r2, #2
 800710a:	e9cd 3200 	strd	r3, r2, [sp]
 800710e:	4630      	mov	r0, r6
 8007110:	235a      	movs	r3, #90	; 0x5a
 8007112:	2246      	movs	r2, #70	; 0x46
 8007114:	2107      	movs	r1, #7
 8007116:	f001 f83b 	bl	8008190 <_ZN13WheelSelector5setupEtiiiiii>
    Unicode::UnicodeChar temp[5];

    Unicode::snprintf(temp, 5, "JAN");
 800711a:	4a50      	ldr	r2, [pc, #320]	; (800725c <_ZN10DatePickerC1Ev+0x304>)
 800711c:	2105      	movs	r1, #5
 800711e:	a805      	add	r0, sp, #20
 8007120:	f00f fd88 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007124:	ab05      	add	r3, sp, #20
 8007126:	4630      	mov	r0, r6
 8007128:	2247      	movs	r2, #71	; 0x47
 800712a:	2146      	movs	r1, #70	; 0x46
 800712c:	f001 f8b6 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "FEB");
 8007130:	4a4b      	ldr	r2, [pc, #300]	; (8007260 <_ZN10DatePickerC1Ev+0x308>)
 8007132:	2105      	movs	r1, #5
 8007134:	a805      	add	r0, sp, #20
 8007136:	f00f fd7d 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800713a:	ab05      	add	r3, sp, #20
 800713c:	4630      	mov	r0, r6
 800713e:	2247      	movs	r2, #71	; 0x47
 8007140:	2146      	movs	r1, #70	; 0x46
 8007142:	f001 f8ab 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAR");
 8007146:	4a47      	ldr	r2, [pc, #284]	; (8007264 <_ZN10DatePickerC1Ev+0x30c>)
 8007148:	2105      	movs	r1, #5
 800714a:	a805      	add	r0, sp, #20
 800714c:	f00f fd72 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007150:	ab05      	add	r3, sp, #20
 8007152:	4630      	mov	r0, r6
 8007154:	2247      	movs	r2, #71	; 0x47
 8007156:	2146      	movs	r1, #70	; 0x46
 8007158:	f001 f8a0 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "APR");
 800715c:	4a42      	ldr	r2, [pc, #264]	; (8007268 <_ZN10DatePickerC1Ev+0x310>)
 800715e:	2105      	movs	r1, #5
 8007160:	a805      	add	r0, sp, #20
 8007162:	f00f fd67 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007166:	ab05      	add	r3, sp, #20
 8007168:	4630      	mov	r0, r6
 800716a:	2247      	movs	r2, #71	; 0x47
 800716c:	2146      	movs	r1, #70	; 0x46
 800716e:	f001 f895 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAY");
 8007172:	4a3e      	ldr	r2, [pc, #248]	; (800726c <_ZN10DatePickerC1Ev+0x314>)
 8007174:	2105      	movs	r1, #5
 8007176:	a805      	add	r0, sp, #20
 8007178:	f00f fd5c 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800717c:	ab05      	add	r3, sp, #20
 800717e:	4630      	mov	r0, r6
 8007180:	2247      	movs	r2, #71	; 0x47
 8007182:	2146      	movs	r1, #70	; 0x46
 8007184:	f001 f88a 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUN");
 8007188:	4a39      	ldr	r2, [pc, #228]	; (8007270 <_ZN10DatePickerC1Ev+0x318>)
 800718a:	2105      	movs	r1, #5
 800718c:	a805      	add	r0, sp, #20
 800718e:	f00f fd51 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007192:	ab05      	add	r3, sp, #20
 8007194:	4630      	mov	r0, r6
 8007196:	2247      	movs	r2, #71	; 0x47
 8007198:	2146      	movs	r1, #70	; 0x46
 800719a:	f001 f87f 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUL");
 800719e:	4a35      	ldr	r2, [pc, #212]	; (8007274 <_ZN10DatePickerC1Ev+0x31c>)
 80071a0:	2105      	movs	r1, #5
 80071a2:	a805      	add	r0, sp, #20
 80071a4:	f00f fd46 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80071a8:	ab05      	add	r3, sp, #20
 80071aa:	4630      	mov	r0, r6
 80071ac:	2247      	movs	r2, #71	; 0x47
 80071ae:	2146      	movs	r1, #70	; 0x46
 80071b0:	f001 f874 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "AUG");
 80071b4:	4a30      	ldr	r2, [pc, #192]	; (8007278 <_ZN10DatePickerC1Ev+0x320>)
 80071b6:	2105      	movs	r1, #5
 80071b8:	a805      	add	r0, sp, #20
 80071ba:	f00f fd3b 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80071be:	ab05      	add	r3, sp, #20
 80071c0:	4630      	mov	r0, r6
 80071c2:	2247      	movs	r2, #71	; 0x47
 80071c4:	2146      	movs	r1, #70	; 0x46
 80071c6:	f001 f869 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "SEP");
 80071ca:	4a2c      	ldr	r2, [pc, #176]	; (800727c <_ZN10DatePickerC1Ev+0x324>)
 80071cc:	2105      	movs	r1, #5
 80071ce:	a805      	add	r0, sp, #20
 80071d0:	f00f fd30 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80071d4:	ab05      	add	r3, sp, #20
 80071d6:	4630      	mov	r0, r6
 80071d8:	2247      	movs	r2, #71	; 0x47
 80071da:	2146      	movs	r1, #70	; 0x46
 80071dc:	f001 f85e 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "OCT");
 80071e0:	4a27      	ldr	r2, [pc, #156]	; (8007280 <_ZN10DatePickerC1Ev+0x328>)
 80071e2:	2105      	movs	r1, #5
 80071e4:	a805      	add	r0, sp, #20
 80071e6:	f00f fd25 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80071ea:	ab05      	add	r3, sp, #20
 80071ec:	4630      	mov	r0, r6
 80071ee:	2247      	movs	r2, #71	; 0x47
 80071f0:	2146      	movs	r1, #70	; 0x46
 80071f2:	f001 f853 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "NOV");
 80071f6:	4a23      	ldr	r2, [pc, #140]	; (8007284 <_ZN10DatePickerC1Ev+0x32c>)
 80071f8:	2105      	movs	r1, #5
 80071fa:	a805      	add	r0, sp, #20
 80071fc:	f00f fd1a 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007200:	ab05      	add	r3, sp, #20
 8007202:	4630      	mov	r0, r6
 8007204:	2247      	movs	r2, #71	; 0x47
 8007206:	2146      	movs	r1, #70	; 0x46
 8007208:	f001 f848 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "DEC");
 800720c:	4a1e      	ldr	r2, [pc, #120]	; (8007288 <_ZN10DatePickerC1Ev+0x330>)
 800720e:	2105      	movs	r1, #5
 8007210:	a805      	add	r0, sp, #20
 8007212:	f00f fd0f 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007216:	ab05      	add	r3, sp, #20
 8007218:	4630      	mov	r0, r6
 800721a:	2247      	movs	r2, #71	; 0x47
 800721c:	2146      	movs	r1, #70	; 0x46
 800721e:	f001 f83d 	bl	800829c <_ZN13WheelSelector7addTextEttPKt>

    months.setSelectedItem(1, 20);
 8007222:	4630      	mov	r0, r6
 8007224:	4b0b      	ldr	r3, [pc, #44]	; (8007254 <_ZN10DatePickerC1Ev+0x2fc>)
 8007226:	2214      	movs	r2, #20
 8007228:	2101      	movs	r1, #1
 800722a:	f001 fad1 	bl	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
}
 800722e:	4620      	mov	r0, r4
 8007230:	b008      	add	sp, #32
 8007232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007236:	bf00      	nop
 8007238:	08026c84 	.word	0x08026c84
 800723c:	0802827c 	.word	0x0802827c
 8007240:	08026c6c 	.word	0x08026c6c
 8007244:	08007321 	.word	0x08007321
 8007248:	ff006635 	.word	0xff006635
 800724c:	ff000066 	.word	0xff000066
 8007250:	008200e6 	.word	0x008200e6
 8007254:	08014ad5 	.word	0x08014ad5
 8007258:	08026ba0 	.word	0x08026ba0
 800725c:	08026c34 	.word	0x08026c34
 8007260:	08026c38 	.word	0x08026c38
 8007264:	08026c3c 	.word	0x08026c3c
 8007268:	08026c40 	.word	0x08026c40
 800726c:	08026c44 	.word	0x08026c44
 8007270:	08026c48 	.word	0x08026c48
 8007274:	08026c4c 	.word	0x08026c4c
 8007278:	08026c50 	.word	0x08026c50
 800727c:	08026c54 	.word	0x08026c54
 8007280:	08026c58 	.word	0x08026c58
 8007284:	08026c5c 	.word	0x08026c5c
 8007288:	08026c60 	.word	0x08026c60

0800728c <_ZN10DatePicker6setDayEiiPFstsstE>:
{
}

void DatePicker::setDay(int index, int duration, EasingEquation equation)
{
    days.setSelectedItem(index, duration, equation);
 800728c:	3060      	adds	r0, #96	; 0x60
 800728e:	f001 ba9f 	b.w	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08007292 <_ZN10DatePicker8setMonthEiiPFstsstE>:
}

void DatePicker::setMonth(int index, int duration, EasingEquation equation)
{
    months.setSelectedItem(index, duration, equation);
 8007292:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8007296:	300c      	adds	r0, #12
 8007298:	f001 ba9a 	b.w	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

0800729c <_ZN10DatePicker7setYearEiiPFstsstE>:
}

void DatePicker::setYear(int index, int duration, EasingEquation equation)
{
    years.setSelectedItem(index, duration, equation);
 800729c:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 80072a0:	3038      	adds	r0, #56	; 0x38
 80072a2:	f001 ba95 	b.w	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

080072a6 <_ZN10DatePicker6getDayEv>:
}

int DatePicker::getDay()
{
    return days.getSelectedItem();
 80072a6:	3060      	adds	r0, #96	; 0x60
 80072a8:	f001 b89c 	b.w	80083e4 <_ZN13WheelSelector15getSelectedItemEv>

080072ac <_ZN10DatePicker8getMonthEv>:
}

int DatePicker::getMonth()
{
    return months.getSelectedItem();
 80072ac:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 80072b0:	300c      	adds	r0, #12
 80072b2:	f001 b897 	b.w	80083e4 <_ZN13WheelSelector15getSelectedItemEv>

080072b6 <_ZN10DatePicker7getYearEv>:
}

int DatePicker::getYear()
{
    return years.getSelectedItem();
 80072b6:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 80072ba:	3038      	adds	r0, #56	; 0x38
 80072bc:	f001 b892 	b.w	80083e4 <_ZN13WheelSelector15getSelectedItemEv>

080072c0 <_ZN10DatePicker15getNumberOfDaysEtt>:
}

uint16_t DatePicker::getNumberOfDays(uint16_t month, uint16_t year)
{
    uint16_t result = 0;
    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
 80072c0:	290c      	cmp	r1, #12
 80072c2:	d804      	bhi.n	80072ce <_ZN10DatePicker15getNumberOfDaysEtt+0xe>
 80072c4:	f241 53aa 	movw	r3, #5546	; 0x15aa
 80072c8:	40cb      	lsrs	r3, r1
 80072ca:	07db      	lsls	r3, r3, #31
 80072cc:	d41d      	bmi.n	800730a <_ZN10DatePicker15getNumberOfDaysEtt+0x4a>
    {
        result = 31;
    }
    else if (month == 4 || month == 6 || month == 9 || month == 11)
 80072ce:	f021 0302 	bic.w	r3, r1, #2
 80072d2:	2b04      	cmp	r3, #4
 80072d4:	b298      	uxth	r0, r3
 80072d6:	d01a      	beq.n	800730e <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
 80072d8:	2809      	cmp	r0, #9
 80072da:	d018      	beq.n	800730e <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
    {
        result = 30;
    }
    else if (month == 2)
 80072dc:	2902      	cmp	r1, #2
 80072de:	d118      	bne.n	8007312 <_ZN10DatePicker15getNumberOfDaysEtt+0x52>
    {
        result = 28;
        if (year % 400 == 0)
 80072e0:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80072e4:	fbb2 f3f1 	udiv	r3, r2, r1
 80072e8:	fb01 2313 	mls	r3, r1, r3, r2
 80072ec:	b29b      	uxth	r3, r3
 80072ee:	b193      	cbz	r3, 8007316 <_ZN10DatePicker15getNumberOfDaysEtt+0x56>
        {
            result++;
        }
        else if (year % 100 == 0)
 80072f0:	2164      	movs	r1, #100	; 0x64
 80072f2:	fbb2 f3f1 	udiv	r3, r2, r1
 80072f6:	fb01 2313 	mls	r3, r1, r3, r2
 80072fa:	b29b      	uxth	r3, r3
 80072fc:	b16b      	cbz	r3, 800731a <_ZN10DatePicker15getNumberOfDaysEtt+0x5a>
        {
        }
        else if (year % 4 == 0)
 80072fe:	f012 0f03 	tst.w	r2, #3
            result++;
 8007302:	bf14      	ite	ne
 8007304:	201c      	movne	r0, #28
 8007306:	201d      	moveq	r0, #29
 8007308:	4770      	bx	lr
        result = 31;
 800730a:	201f      	movs	r0, #31
 800730c:	4770      	bx	lr
        result = 30;
 800730e:	201e      	movs	r0, #30
 8007310:	4770      	bx	lr
    uint16_t result = 0;
 8007312:	2000      	movs	r0, #0
 8007314:	4770      	bx	lr
            result++;
 8007316:	201d      	movs	r0, #29
 8007318:	4770      	bx	lr
        result = 28;
 800731a:	201c      	movs	r0, #28
        {
            result++;
        }
    }
    return result;
}
 800731c:	4770      	bx	lr
	...

08007320 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi>:
{
 8007320:	b570      	push	{r4, r5, r6, lr}
 8007322:	4604      	mov	r4, r0
    int numberOfDaysInMonth = getNumberOfDays(months.getSelectedItem() + 1, START_YEAR + years.getSelectedItem());
 8007324:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8007328:	300c      	adds	r0, #12
 800732a:	f001 f85b 	bl	80083e4 <_ZN13WheelSelector15getSelectedItemEv>
 800732e:	4605      	mov	r5, r0
 8007330:	f504 504b 	add.w	r0, r4, #12992	; 0x32c0
 8007334:	3038      	adds	r0, #56	; 0x38
 8007336:	f001 f855 	bl	80083e4 <_ZN13WheelSelector15getSelectedItemEv>
 800733a:	1c69      	adds	r1, r5, #1
 800733c:	f200 70e4 	addw	r0, r0, #2020	; 0x7e4
 8007340:	b282      	uxth	r2, r0
 8007342:	b289      	uxth	r1, r1
 8007344:	4620      	mov	r0, r4
 8007346:	f7ff ffbb 	bl	80072c0 <_ZN10DatePicker15getNumberOfDaysEtt>
    if (numberOfDaysInMonth == 28)
 800734a:	281c      	cmp	r0, #28
 800734c:	f104 0460 	add.w	r4, r4, #96	; 0x60
 8007350:	d110      	bne.n	8007374 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x54>
        days.hideBottomElements(3);
 8007352:	2103      	movs	r1, #3
 8007354:	4620      	mov	r0, r4
 8007356:	f001 f93d 	bl	80085d4 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 27)
 800735a:	4620      	mov	r0, r4
 800735c:	f001 f842 	bl	80083e4 <_ZN13WheelSelector15getSelectedItemEv>
 8007360:	281b      	cmp	r0, #27
 8007362:	dd2b      	ble.n	80073bc <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(27, 20);
 8007364:	4b16      	ldr	r3, [pc, #88]	; (80073c0 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 8007366:	2214      	movs	r2, #20
 8007368:	211b      	movs	r1, #27
            days.setSelectedItem(28, 20);
 800736a:	4620      	mov	r0, r4
}
 800736c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            days.setSelectedItem(28, 20);
 8007370:	f001 ba2e 	b.w	80087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    else if (numberOfDaysInMonth == 29)
 8007374:	281d      	cmp	r0, #29
 8007376:	d10c      	bne.n	8007392 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x72>
        days.hideBottomElements(2);
 8007378:	2102      	movs	r1, #2
 800737a:	4620      	mov	r0, r4
 800737c:	f001 f92a 	bl	80085d4 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 28)
 8007380:	4620      	mov	r0, r4
 8007382:	f001 f82f 	bl	80083e4 <_ZN13WheelSelector15getSelectedItemEv>
 8007386:	281c      	cmp	r0, #28
 8007388:	dd18      	ble.n	80073bc <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(28, 20);
 800738a:	4b0d      	ldr	r3, [pc, #52]	; (80073c0 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 800738c:	2214      	movs	r2, #20
 800738e:	211c      	movs	r1, #28
 8007390:	e7eb      	b.n	800736a <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
    else if (numberOfDaysInMonth == 30)
 8007392:	281e      	cmp	r0, #30
 8007394:	d10c      	bne.n	80073b0 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x90>
        days.hideBottomElements(1);
 8007396:	2101      	movs	r1, #1
 8007398:	4620      	mov	r0, r4
 800739a:	f001 f91b 	bl	80085d4 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 29)
 800739e:	4620      	mov	r0, r4
 80073a0:	f001 f820 	bl	80083e4 <_ZN13WheelSelector15getSelectedItemEv>
 80073a4:	281d      	cmp	r0, #29
 80073a6:	dd09      	ble.n	80073bc <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(29, 20);
 80073a8:	4b05      	ldr	r3, [pc, #20]	; (80073c0 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 80073aa:	2214      	movs	r2, #20
 80073ac:	211d      	movs	r1, #29
 80073ae:	e7dc      	b.n	800736a <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
        days.hideBottomElements(0);
 80073b0:	4620      	mov	r0, r4
 80073b2:	2100      	movs	r1, #0
}
 80073b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        days.hideBottomElements(0);
 80073b8:	f001 b90c 	b.w	80085d4 <_ZN13WheelSelector18hideBottomElementsEi>
}
 80073bc:	bd70      	pop	{r4, r5, r6, pc}
 80073be:	bf00      	nop
 80073c0:	08014ad5 	.word	0x08014ad5

080073c4 <_ZN13WheelSelectorD1Ev>:
class WheelSelector : public Container
 80073c4:	4b0c      	ldr	r3, [pc, #48]	; (80073f8 <_ZN13WheelSelectorD1Ev+0x34>)
 80073c6:	b570      	push	{r4, r5, r6, lr}
 80073c8:	4604      	mov	r4, r0
 80073ca:	6003      	str	r3, [r0, #0]
 80073cc:	f241 7518 	movw	r5, #5912	; 0x1718
 80073d0:	f640 4698 	movw	r6, #3224	; 0xc98
 80073d4:	5963      	ldr	r3, [r4, r5]
 80073d6:	1960      	adds	r0, r4, r5
 80073d8:	681b      	ldr	r3, [r3, #0]
 80073da:	3d54      	subs	r5, #84	; 0x54
 80073dc:	4798      	blx	r3
 80073de:	42b5      	cmp	r5, r6
 80073e0:	d1f8      	bne.n	80073d4 <_ZN13WheelSelectorD1Ev+0x10>
 80073e2:	f44f 652d 	mov.w	r5, #2768	; 0xad0
 80073e6:	5963      	ldr	r3, [r4, r5]
 80073e8:	1960      	adds	r0, r4, r5
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	3d54      	subs	r5, #84	; 0x54
 80073ee:	4798      	blx	r3
 80073f0:	2d50      	cmp	r5, #80	; 0x50
 80073f2:	d1f8      	bne.n	80073e6 <_ZN13WheelSelectorD1Ev+0x22>
 80073f4:	4620      	mov	r0, r4
 80073f6:	bd70      	pop	{r4, r5, r6, pc}
 80073f8:	08027004 	.word	0x08027004

080073fc <_ZN10DatePickerD1Ev>:
DatePicker::~DatePicker()
 80073fc:	4b09      	ldr	r3, [pc, #36]	; (8007424 <_ZN10DatePickerD1Ev+0x28>)
 80073fe:	b510      	push	{r4, lr}
 8007400:	4604      	mov	r4, r0
 8007402:	6003      	str	r3, [r0, #0]
 8007404:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8007408:	3038      	adds	r0, #56	; 0x38
 800740a:	f7ff ffdb 	bl	80073c4 <_ZN13WheelSelectorD1Ev>
 800740e:	f504 50cd 	add.w	r0, r4, #6560	; 0x19a0
 8007412:	300c      	adds	r0, #12
 8007414:	f7ff ffd6 	bl	80073c4 <_ZN13WheelSelectorD1Ev>
 8007418:	f104 0060 	add.w	r0, r4, #96	; 0x60
 800741c:	f7ff ffd2 	bl	80073c4 <_ZN13WheelSelectorD1Ev>
}
 8007420:	4620      	mov	r0, r4
 8007422:	bd10      	pop	{r4, pc}
 8007424:	08026c84 	.word	0x08026c84

08007428 <_ZN10DatePickerD0Ev>:
DatePicker::~DatePicker()
 8007428:	b510      	push	{r4, lr}
 800742a:	4604      	mov	r4, r0
}
 800742c:	f7ff ffe6 	bl	80073fc <_ZN10DatePickerD1Ev>
 8007430:	4620      	mov	r0, r4
 8007432:	f644 4154 	movw	r1, #19540	; 0x4c54
 8007436:	f01b fd39 	bl	8022eac <_ZdlPvj>
 800743a:	4620      	mov	r0, r4
 800743c:	bd10      	pop	{r4, pc}

0800743e <_ZN13WheelSelectorD0Ev>:
 800743e:	b510      	push	{r4, lr}
 8007440:	4604      	mov	r4, r0
 8007442:	f7ff ffbf 	bl	80073c4 <_ZN13WheelSelectorD1Ev>
 8007446:	4620      	mov	r0, r4
 8007448:	f641 114c 	movw	r1, #6476	; 0x194c
 800744c:	f01b fd2e 	bl	8022eac <_ZdlPvj>
 8007450:	4620      	mov	r0, r4
 8007452:	bd10      	pop	{r4, pc}

08007454 <_ZN21DateSelectorContainerC1Ev>:
#include <gui/settings_screen/DateSelectorContainer.hpp>

DateSelectorContainer::DateSelectorContainer()
 8007454:	b570      	push	{r4, r5, r6, lr}
          visible(true)
 8007456:	f44f 7380 	mov.w	r3, #256	; 0x100
 800745a:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 800745c:	2500      	movs	r5, #0
 800745e:	8483      	strh	r3, [r0, #36]	; 0x24
 8007460:	4b0b      	ldr	r3, [pc, #44]	; (8007490 <_ZN21DateSelectorContainerC1Ev+0x3c>)
 8007462:	6285      	str	r5, [r0, #40]	; 0x28
 8007464:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8007468:	e9c0 5503 	strd	r5, r5, [r0, #12]
 800746c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8007470:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8007474:	f846 3b2c 	str.w	r3, [r6], #44
 8007478:	4604      	mov	r4, r0
 800747a:	4630      	mov	r0, r6
 800747c:	f7ff fd6c 	bl	8006f58 <_ZN10DatePickerC1Ev>
{
    datePicker.setXY(0, 0);
    add(datePicker);
 8007480:	4620      	mov	r0, r4
        rect.x = x;
 8007482:	6325      	str	r5, [r4, #48]	; 0x30
 8007484:	4631      	mov	r1, r6
 8007486:	f007 fea5 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800748a:	4620      	mov	r0, r4
 800748c:	bd70      	pop	{r4, r5, r6, pc}
 800748e:	bf00      	nop
 8007490:	08026d10 	.word	0x08026d10

08007494 <_ZN21DateSelectorContainer7setDateEthh>:
DateSelectorContainer::~DateSelectorContainer()
{
}

void DateSelectorContainer::setDate(uint16_t year, uint8_t month, uint8_t day)
{
 8007494:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007496:	460c      	mov	r4, r1
 8007498:	4619      	mov	r1, r3
 800749a:	4615      	mov	r5, r2
    datePicker.setDay((day - 1), 16, EasingEquations::backEaseOut);
 800749c:	302c      	adds	r0, #44	; 0x2c
 800749e:	4b0d      	ldr	r3, [pc, #52]	; (80074d4 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 80074a0:	9001      	str	r0, [sp, #4]
 80074a2:	2210      	movs	r2, #16
 80074a4:	3901      	subs	r1, #1
 80074a6:	f7ff fef1 	bl	800728c <_ZN10DatePicker6setDayEiiPFstsstE>
    datePicker.setMonth(month, 16, EasingEquations::backEaseOut);
 80074aa:	4629      	mov	r1, r5
 80074ac:	9801      	ldr	r0, [sp, #4]
 80074ae:	4b09      	ldr	r3, [pc, #36]	; (80074d4 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 80074b0:	2210      	movs	r2, #16
 80074b2:	f7ff feee 	bl	8007292 <_ZN10DatePicker8setMonthEiiPFstsstE>
    if(year >= 120){
 80074b6:	2c77      	cmp	r4, #119	; 0x77
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 80074b8:	4b06      	ldr	r3, [pc, #24]	; (80074d4 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
    if(year >= 120){
 80074ba:	9801      	ldr	r0, [sp, #4]
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 80074bc:	f04f 0210 	mov.w	r2, #16
 80074c0:	bf8c      	ite	hi
 80074c2:	f1a4 0178 	subhi.w	r1, r4, #120	; 0x78
    }
    else{
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 80074c6:	2100      	movls	r1, #0
    }
}
 80074c8:	b003      	add	sp, #12
 80074ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 80074ce:	f7ff bee5 	b.w	800729c <_ZN10DatePicker7setYearEiiPFstsstE>
 80074d2:	bf00      	nop
 80074d4:	08014ad5 	.word	0x08014ad5

080074d8 <_ZN21DateSelectorContainer7getYearEv>:

uint16_t DateSelectorContainer::getYear()
{
 80074d8:	b508      	push	{r3, lr}
    return (datePicker.getYear() + 120);
 80074da:	302c      	adds	r0, #44	; 0x2c
 80074dc:	f7ff feeb 	bl	80072b6 <_ZN10DatePicker7getYearEv>
 80074e0:	3078      	adds	r0, #120	; 0x78
}
 80074e2:	b280      	uxth	r0, r0
 80074e4:	bd08      	pop	{r3, pc}

080074e6 <_ZN21DateSelectorContainer8getMonthEv>:

uint8_t DateSelectorContainer::getMonth()
{
 80074e6:	b508      	push	{r3, lr}
    return datePicker.getMonth();
 80074e8:	302c      	adds	r0, #44	; 0x2c
 80074ea:	f7ff fedf 	bl	80072ac <_ZN10DatePicker8getMonthEv>
}
 80074ee:	b2c0      	uxtb	r0, r0
 80074f0:	bd08      	pop	{r3, pc}

080074f2 <_ZN21DateSelectorContainer6getDayEv>:

uint8_t DateSelectorContainer::getDay()
{
 80074f2:	b508      	push	{r3, lr}
    return (datePicker.getDay() + 1);
 80074f4:	302c      	adds	r0, #44	; 0x2c
 80074f6:	f7ff fed6 	bl	80072a6 <_ZN10DatePicker6getDayEv>
 80074fa:	3001      	adds	r0, #1
}
 80074fc:	b2c0      	uxtb	r0, r0
 80074fe:	bd08      	pop	{r3, pc}

08007500 <_ZN21DateSelectorContainerD1Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8007500:	b510      	push	{r4, lr}
 8007502:	4b04      	ldr	r3, [pc, #16]	; (8007514 <_ZN21DateSelectorContainerD1Ev+0x14>)
 8007504:	4604      	mov	r4, r0
 8007506:	f840 3b2c 	str.w	r3, [r0], #44
 800750a:	f7ff ff77 	bl	80073fc <_ZN10DatePickerD1Ev>
}
 800750e:	4620      	mov	r0, r4
 8007510:	bd10      	pop	{r4, pc}
 8007512:	bf00      	nop
 8007514:	08026d10 	.word	0x08026d10

08007518 <_ZN21DateSelectorContainerD0Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8007518:	b510      	push	{r4, lr}
 800751a:	4604      	mov	r4, r0
}
 800751c:	f7ff fff0 	bl	8007500 <_ZN21DateSelectorContainerD1Ev>
 8007520:	4620      	mov	r0, r4
 8007522:	f44f 4199 	mov.w	r1, #19584	; 0x4c80
 8007526:	f01b fcc1 	bl	8022eac <_ZdlPvj>
 800752a:	4620      	mov	r0, r4
 800752c:	bd10      	pop	{r4, pc}

0800752e <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800752e:	4770      	bx	lr

08007530 <_ZN19FrontendApplicationD0Ev>:
 8007530:	b510      	push	{r4, lr}
 8007532:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8007536:	4604      	mov	r4, r0
 8007538:	f01b fcb8 	bl	8022eac <_ZdlPvj>
 800753c:	4620      	mov	r0, r4
 800753e:	bd10      	pop	{r4, pc}

08007540 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007540:	b510      	push	{r4, lr}
 8007542:	4604      	mov	r4, r0
    {
        model.tick();
 8007544:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8007548:	f000 f813 	bl	8007572 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800754c:	4620      	mov	r0, r4
    }
 800754e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007552:	f00b bd9b 	b.w	801308c <_ZN8touchgfx11Application15handleTickEventEv>
	...

08007558 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007558:	b510      	push	{r4, lr}
 800755a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800755c:	f7fd fa6a 	bl	8004a34 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007560:	4b01      	ldr	r3, [pc, #4]	; (8007568 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007562:	6023      	str	r3, [r4, #0]
{

}
 8007564:	4620      	mov	r0, r4
 8007566:	bd10      	pop	{r4, pc}
 8007568:	08026d9c 	.word	0x08026d9c

0800756c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800756c:	2200      	movs	r2, #0
 800756e:	6002      	str	r2, [r0, #0]
{

}
 8007570:	4770      	bx	lr

08007572 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8007572:	4770      	bx	lr

08007574 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8007574:	4770      	bx	lr

08007576 <_ZThn4_N16Screen1PresenterD1Ev>:
 8007576:	3804      	subs	r0, #4
 8007578:	4770      	bx	lr

0800757a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800757a:	4770      	bx	lr

0800757c <_ZN16Screen1PresenterD0Ev>:
 800757c:	b510      	push	{r4, lr}
 800757e:	2110      	movs	r1, #16
 8007580:	4604      	mov	r4, r0
 8007582:	f01b fc93 	bl	8022eac <_ZdlPvj>
 8007586:	4620      	mov	r0, r4
 8007588:	bd10      	pop	{r4, pc}

0800758a <_ZThn4_N16Screen1PresenterD0Ev>:
 800758a:	f1a0 0004 	sub.w	r0, r0, #4
 800758e:	e7f5      	b.n	800757c <_ZN16Screen1PresenterD0Ev>

08007590 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8007590:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007592:	2200      	movs	r2, #0
 8007594:	6082      	str	r2, [r0, #8]
    : view(v)
 8007596:	4a04      	ldr	r2, [pc, #16]	; (80075a8 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8007598:	60c1      	str	r1, [r0, #12]
 800759a:	f102 0408 	add.w	r4, r2, #8
 800759e:	3220      	adds	r2, #32
 80075a0:	6004      	str	r4, [r0, #0]
 80075a2:	6042      	str	r2, [r0, #4]
}
 80075a4:	bd10      	pop	{r4, pc}
 80075a6:	bf00      	nop
 80075a8:	08026dd8 	.word	0x08026dd8

080075ac <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80075ac:	4770      	bx	lr
	...

080075b0 <_ZN11Screen1View18functionFilterDataEv>:
	modalWindow1.setVisible(false);
	modalWindow1.invalidate();
}

void Screen1View::functionFilterData(void)
{
 80075b0:	b570      	push	{r4, r5, r6, lr}
	tmp = time_stop_fil;
 80075b2:	f64d 63d4 	movw	r3, #57044	; 0xded4
 80075b6:	4e1b      	ldr	r6, [pc, #108]	; (8007624 <_ZN11Screen1View18functionFilterDataEv+0x74>)
 80075b8:	58c3      	ldr	r3, [r0, r3]
 80075ba:	6033      	str	r3, [r6, #0]
{
 80075bc:	4605      	mov	r5, r0
	timeptr = *gmtime(&tmp);
 80075be:	4630      	mov	r0, r6
 80075c0:	f001 f9bc 	bl	800893c <gmtime>
 80075c4:	4c18      	ldr	r4, [pc, #96]	; (8007628 <_ZN11Screen1View18functionFilterDataEv+0x78>)
 80075c6:	6803      	ldr	r3, [r0, #0]
 80075c8:	6023      	str	r3, [r4, #0]
 80075ca:	6843      	ldr	r3, [r0, #4]
 80075cc:	6063      	str	r3, [r4, #4]
 80075ce:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 80075d0:	7962      	ldrb	r2, [r4, #5]
 80075d2:	88e1      	ldrh	r1, [r4, #6]
	timeptr = *gmtime(&tmp);
 80075d4:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 80075d6:	f505 4011 	add.w	r0, r5, #37120	; 0x9100
 80075da:	78e3      	ldrb	r3, [r4, #3]
 80075dc:	30dc      	adds	r0, #220	; 0xdc
 80075de:	f7ff ff59 	bl	8007494 <_ZN21DateSelectorContainer7setDateEthh>

	tmp = time_start_fil;
 80075e2:	f64d 63d0 	movw	r3, #57040	; 0xded0
	timeptr = *gmtime(&tmp);
 80075e6:	4630      	mov	r0, r6
	tmp = time_start_fil;
 80075e8:	58eb      	ldr	r3, [r5, r3]
 80075ea:	6033      	str	r3, [r6, #0]
	timeptr = *gmtime(&tmp);
 80075ec:	f001 f9a6 	bl	800893c <gmtime>
 80075f0:	6803      	ldr	r3, [r0, #0]
 80075f2:	6023      	str	r3, [r4, #0]
 80075f4:	6843      	ldr	r3, [r0, #4]
 80075f6:	6063      	str	r3, [r4, #4]
 80075f8:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 80075fa:	7962      	ldrb	r2, [r4, #5]
	timeptr = *gmtime(&tmp);
 80075fc:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 80075fe:	f505 408a 	add.w	r0, r5, #17664	; 0x4500
 8007602:	78e3      	ldrb	r3, [r4, #3]
 8007604:	88e1      	ldrh	r1, [r4, #6]
 8007606:	305c      	adds	r0, #92	; 0x5c
 8007608:	f7ff ff44 	bl	8007494 <_ZN21DateSelectorContainer7setDateEthh>
        visible = vis;
 800760c:	f244 2335 	movw	r3, #16949	; 0x4235


	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 8007610:	f505 4084 	add.w	r0, r5, #16896	; 0x4200
 8007614:	2201      	movs	r2, #1
 8007616:	54ea      	strb	r2, [r5, r3]
 8007618:	3010      	adds	r0, #16
}
 800761a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modalWindow1.invalidate();
 800761e:	f00c be09 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007622:	bf00      	nop
 8007624:	2000f0ec 	.word	0x2000f0ec
 8007628:	2000f0f0 	.word	0x2000f0f0

0800762c <_ZN11Screen1View21functionOkFilDataTimeEv>:
{
 800762c:	b570      	push	{r4, r5, r6, lr}
	timeptr1.tm_year = dateSelectorContainerStart.getYear();
 800762e:	f500 458a 	add.w	r5, r0, #17664	; 0x4500
 8007632:	355c      	adds	r5, #92	; 0x5c
{
 8007634:	4604      	mov	r4, r0
	timeptr1.tm_year = dateSelectorContainerStart.getYear();
 8007636:	4628      	mov	r0, r5
 8007638:	f7ff ff4e 	bl	80074d8 <_ZN21DateSelectorContainer7getYearEv>
 800763c:	4e18      	ldr	r6, [pc, #96]	; (80076a0 <_ZN11Screen1View21functionOkFilDataTimeEv+0x74>)
 800763e:	80f0      	strh	r0, [r6, #6]
	timeptr1.tm_mon 	= dateSelectorContainerStart.getMonth();
 8007640:	4628      	mov	r0, r5
 8007642:	f7ff ff50 	bl	80074e6 <_ZN21DateSelectorContainer8getMonthEv>
 8007646:	7170      	strb	r0, [r6, #5]
	timeptr1.tm_mday = dateSelectorContainerStart.getDay();
 8007648:	4628      	mov	r0, r5
 800764a:	f7ff ff52 	bl	80074f2 <_ZN21DateSelectorContainer6getDayEv>
 800764e:	70f0      	strb	r0, [r6, #3]
	time_start_fil 	= (uint32_t)mktime(&timeptr1);
 8007650:	4630      	mov	r0, r6
 8007652:	f001 fa67 	bl	8008b24 <mktime>
	timeptr2.tm_year = dateSelectorContainerStop.getYear();
 8007656:	f504 4511 	add.w	r5, r4, #37120	; 0x9100
	time_start_fil 	= (uint32_t)mktime(&timeptr1);
 800765a:	f64d 63d0 	movw	r3, #57040	; 0xded0
	timeptr2.tm_year = dateSelectorContainerStop.getYear();
 800765e:	35dc      	adds	r5, #220	; 0xdc
	time_start_fil 	= (uint32_t)mktime(&timeptr1);
 8007660:	50e0      	str	r0, [r4, r3]
	timeptr2.tm_year = dateSelectorContainerStop.getYear();
 8007662:	4628      	mov	r0, r5
 8007664:	f7ff ff38 	bl	80074d8 <_ZN21DateSelectorContainer7getYearEv>
 8007668:	4e0e      	ldr	r6, [pc, #56]	; (80076a4 <_ZN11Screen1View21functionOkFilDataTimeEv+0x78>)
 800766a:	80f0      	strh	r0, [r6, #6]
	timeptr2.tm_mon 	= dateSelectorContainerStop.getMonth();
 800766c:	4628      	mov	r0, r5
 800766e:	f7ff ff3a 	bl	80074e6 <_ZN21DateSelectorContainer8getMonthEv>
 8007672:	7170      	strb	r0, [r6, #5]
	timeptr2.tm_mday = dateSelectorContainerStop.getDay();
 8007674:	4628      	mov	r0, r5
 8007676:	f7ff ff3c 	bl	80074f2 <_ZN21DateSelectorContainer6getDayEv>
 800767a:	70f0      	strb	r0, [r6, #3]
	time_stop_fil 	= (uint32_t)mktime(&timeptr2);
 800767c:	4630      	mov	r0, r6
 800767e:	f001 fa51 	bl	8008b24 <mktime>
 8007682:	f64d 63d4 	movw	r3, #57044	; 0xded4
 8007686:	2200      	movs	r2, #0
 8007688:	50e0      	str	r0, [r4, r3]
 800768a:	f244 2335 	movw	r3, #16949	; 0x4235
	modalWindow1.invalidate();
 800768e:	f504 4084 	add.w	r0, r4, #16896	; 0x4200
 8007692:	54e2      	strb	r2, [r4, r3]
 8007694:	3010      	adds	r0, #16
}
 8007696:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modalWindow1.invalidate();
 800769a:	f00c bdcb 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 800769e:	bf00      	nop
 80076a0:	2000f0fc 	.word	0x2000f0fc
 80076a4:	2000f108 	.word	0x2000f108

080076a8 <_ZN11Screen1View11setupScreenEv>:
{
 80076a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076ac:	4604      	mov	r4, r0
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 80076ae:	f64d 6bd0 	movw	fp, #57040	; 0xded0
 80076b2:	f64d 65d4 	movw	r5, #57044	; 0xded4
    Screen1ViewBase::setupScreen();
 80076b6:	f7fd fc2f 	bl	8004f18 <_ZN15Screen1ViewBase11setupScreenEv>
    tmp = time_stop_fil;
 80076ba:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007784 <_ZN11Screen1View11setupScreenEv+0xdc>
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 80076be:	1961      	adds	r1, r4, r5
 80076c0:	eb04 000b 	add.w	r0, r4, fp
 80076c4:	f7fa f969 	bl	800199a <read_start_stop_state_archiv>
    time_stop_fil = 1735039935;
 80076c8:	4b2b      	ldr	r3, [pc, #172]	; (8007778 <_ZN11Screen1View11setupScreenEv+0xd0>)
 80076ca:	5163      	str	r3, [r4, r5]
	timeptr = *gmtime(&tmp);
 80076cc:	4650      	mov	r0, sl
    time_start_fil = time_stop_fil;
 80076ce:	f844 300b 	str.w	r3, [r4, fp]
    tmp = time_stop_fil;
 80076d2:	f8ca 3000 	str.w	r3, [sl]
	timeptr = *gmtime(&tmp);
 80076d6:	f001 f931 	bl	800893c <gmtime>
 80076da:	4d28      	ldr	r5, [pc, #160]	; (800777c <_ZN11Screen1View11setupScreenEv+0xd4>)
 80076dc:	6803      	ldr	r3, [r0, #0]
 80076de:	602b      	str	r3, [r5, #0]
 80076e0:	6843      	ldr	r3, [r0, #4]
 80076e2:	606b      	str	r3, [r5, #4]
 80076e4:	6883      	ldr	r3, [r0, #8]
 80076e6:	60ab      	str	r3, [r5, #8]
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 80076e8:	f244 2918 	movw	r9, #16920	; 0x4218
 80076ec:	f244 281a 	movw	r8, #16922	; 0x421a
        rect.x = x;
 80076f0:	f249 13e0 	movw	r3, #37344	; 0x91e0
 80076f4:	f504 4611 	add.w	r6, r4, #37120	; 0x9100
 80076f8:	36dc      	adds	r6, #220	; 0xdc
 80076fa:	4821      	ldr	r0, [pc, #132]	; (8007780 <_ZN11Screen1View11setupScreenEv+0xd8>)
 80076fc:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8007700:	f934 2008 	ldrsh.w	r2, [r4, r8]
 8007704:	50e0      	str	r0, [r4, r3]
	modalWindow1.add(dateSelectorContainerStop);
 8007706:	f504 4784 	add.w	r7, r4, #16896	; 0x4200
        setWidthHeight(width, height);
 800770a:	4630      	mov	r0, r6
 800770c:	f7fa fcc7 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8007710:	3710      	adds	r7, #16
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007712:	796a      	ldrb	r2, [r5, #5]
 8007714:	78eb      	ldrb	r3, [r5, #3]
 8007716:	88e9      	ldrh	r1, [r5, #6]
 8007718:	4630      	mov	r0, r6
 800771a:	f7ff febb 	bl	8007494 <_ZN21DateSelectorContainer7setDateEthh>
	modalWindow1.add(dateSelectorContainerStop);
 800771e:	4631      	mov	r1, r6
 8007720:	4638      	mov	r0, r7
 8007722:	f007 fc11 	bl	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    tmp = time_start_fil;
 8007726:	f854 300b 	ldr.w	r3, [r4, fp]
 800772a:	f8ca 3000 	str.w	r3, [sl]
    timeptr = *gmtime(&tmp);
 800772e:	4650      	mov	r0, sl
 8007730:	f001 f904 	bl	800893c <gmtime>
 8007734:	6803      	ldr	r3, [r0, #0]
 8007736:	602b      	str	r3, [r5, #0]
 8007738:	6843      	ldr	r3, [r0, #4]
 800773a:	606b      	str	r3, [r5, #4]
 800773c:	6883      	ldr	r3, [r0, #8]
 800773e:	60ab      	str	r3, [r5, #8]
    dateSelectorContainerStart.setPosition(0, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 8007740:	f504 468a 	add.w	r6, r4, #17664	; 0x4500
        rect.x = x;
 8007744:	f244 5360 	movw	r3, #17760	; 0x4560
 8007748:	365c      	adds	r6, #92	; 0x5c
 800774a:	f44f 1048 	mov.w	r0, #3276800	; 0x320000
 800774e:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8007752:	f934 2008 	ldrsh.w	r2, [r4, r8]
 8007756:	50e0      	str	r0, [r4, r3]
        setWidthHeight(width, height);
 8007758:	4630      	mov	r0, r6
 800775a:	f7fa fca0 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 800775e:	88e9      	ldrh	r1, [r5, #6]
 8007760:	78eb      	ldrb	r3, [r5, #3]
 8007762:	796a      	ldrb	r2, [r5, #5]
 8007764:	4630      	mov	r0, r6
 8007766:	f7ff fe95 	bl	8007494 <_ZN21DateSelectorContainer7setDateEthh>
    modalWindow1.add(dateSelectorContainerStart);
 800776a:	4631      	mov	r1, r6
 800776c:	4638      	mov	r0, r7
}
 800776e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    modalWindow1.add(dateSelectorContainerStart);
 8007772:	f007 bbe9 	b.w	800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8007776:	bf00      	nop
 8007778:	676a9bbf 	.word	0x676a9bbf
 800777c:	2000f0f0 	.word	0x2000f0f0
 8007780:	003200fa 	.word	0x003200fa
 8007784:	2000f0ec 	.word	0x2000f0ec

08007788 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8007788:	b510      	push	{r4, lr}
 800778a:	4604      	mov	r4, r0
 800778c:	f7fd fc66 	bl	800505c <_ZN15Screen1ViewBaseC1Ev>
 8007790:	4b2a      	ldr	r3, [pc, #168]	; (800783c <_ZN11Screen1ViewC1Ev+0xb4>)
 8007792:	6023      	str	r3, [r4, #0]
 8007794:	f504 408a 	add.w	r0, r4, #17664	; 0x4500
 8007798:	305c      	adds	r0, #92	; 0x5c
 800779a:	f7ff fe5b 	bl	8007454 <_ZN21DateSelectorContainerC1Ev>
 800779e:	f504 4011 	add.w	r0, r4, #37120	; 0x9100
 80077a2:	30dc      	adds	r0, #220	; 0xdc
 80077a4:	f7ff fe56 	bl	8007454 <_ZN21DateSelectorContainerC1Ev>
 80077a8:	f64d 63c0 	movw	r3, #57024	; 0xdec0
 80077ac:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 80077b0:	50e2      	str	r2, [r4, r3]
 80077b2:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 80077b6:	2201      	movs	r2, #1
 80077b8:	52e2      	strh	r2, [r4, r3]
 80077ba:	f504 435e 	add.w	r3, r4, #56832	; 0xde00
 80077be:	f64d 62e4 	movw	r2, #57060	; 0xdee4
 80077c2:	335c      	adds	r3, #92	; 0x5c
 80077c4:	50a3      	str	r3, [r4, r2]
 80077c6:	f64d 62e8 	movw	r2, #57064	; 0xdee8
}
 80077ca:	4620      	mov	r0, r4
Screen1View::Screen1View()
 80077cc:	50a3      	str	r3, [r4, r2]
 80077ce:	f64d 63ec 	movw	r3, #57068	; 0xdeec
 80077d2:	f104 02d0 	add.w	r2, r4, #208	; 0xd0
 80077d6:	50e2      	str	r2, [r4, r3]
 80077d8:	f64d 63f0 	movw	r3, #57072	; 0xdef0
 80077dc:	f504 62d4 	add.w	r2, r4, #1696	; 0x6a0
 80077e0:	50e2      	str	r2, [r4, r3]
 80077e2:	f64d 63f4 	movw	r3, #57076	; 0xdef4
 80077e6:	f504 6247 	add.w	r2, r4, #3184	; 0xc70
 80077ea:	50e2      	str	r2, [r4, r3]
 80077ec:	f64d 63f8 	movw	r3, #57080	; 0xdef8
 80077f0:	f504 5292 	add.w	r2, r4, #4672	; 0x1240
 80077f4:	50e2      	str	r2, [r4, r3]
 80077f6:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 80077fa:	f64d 62fc 	movw	r2, #57084	; 0xdefc
 80077fe:	3310      	adds	r3, #16
 8007800:	50a3      	str	r3, [r4, r2]
 8007802:	f504 435f 	add.w	r3, r4, #57088	; 0xdf00
 8007806:	f504 52ef 	add.w	r2, r4, #7648	; 0x1de0
 800780a:	601a      	str	r2, [r3, #0]
 800780c:	f504 530e 	add.w	r3, r4, #9088	; 0x2380
 8007810:	f64d 7204 	movw	r2, #57092	; 0xdf04
 8007814:	3330      	adds	r3, #48	; 0x30
 8007816:	50a3      	str	r3, [r4, r2]
 8007818:	f64d 7308 	movw	r3, #57096	; 0xdf08
 800781c:	f504 5226 	add.w	r2, r4, #10624	; 0x2980
 8007820:	50e2      	str	r2, [r4, r3]
 8007822:	f504 533d 	add.w	r3, r4, #12096	; 0x2f40
 8007826:	f64d 720c 	movw	r2, #57100	; 0xdf0c
 800782a:	3310      	adds	r3, #16
 800782c:	50a3      	str	r3, [r4, r2]
 800782e:	f504 5354 	add.w	r3, r4, #13568	; 0x3500
 8007832:	f64d 7210 	movw	r2, #57104	; 0xdf10
 8007836:	3320      	adds	r3, #32
 8007838:	50a3      	str	r3, [r4, r2]
}
 800783a:	bd10      	pop	{r4, pc}
 800783c:	08026e08 	.word	0x08026e08

08007840 <_ZN11Screen1View11PageRefreshEv>:
{
 8007840:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 8007844:	f64d 65c2 	movw	r5, #57026	; 0xdec2
{
 8007848:	4604      	mov	r4, r0
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 800784a:	230a      	movs	r3, #10
 800784c:	f500 4189 	add.w	r1, r0, #17536	; 0x4480
 8007850:	461a      	mov	r2, r3
 8007852:	5b40      	ldrh	r0, [r0, r5]
 8007854:	3144      	adds	r1, #68	; 0x44
 8007856:	f00e fe91 	bl	801657c <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 1), 	flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, 10);
 800785a:	5b60      	ldrh	r0, [r4, r5]
 800785c:	230a      	movs	r3, #10
 800785e:	f504 4189 	add.w	r1, r4, #17536	; 0x4480
 8007862:	461a      	mov	r2, r3
 8007864:	3158      	adds	r1, #88	; 0x58
 8007866:	3001      	adds	r0, #1
 8007868:	f00e fe88 	bl	801657c <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 2), 	flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, 10);
 800786c:	5b60      	ldrh	r0, [r4, r5]
 800786e:	230a      	movs	r3, #10
 8007870:	f504 4189 	add.w	r1, r4, #17536	; 0x4480
 8007874:	461a      	mov	r2, r3
 8007876:	316c      	adds	r1, #108	; 0x6c
 8007878:	3002      	adds	r0, #2
 800787a:	f00e fe7f 	bl	801657c <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 3), 	flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, 10);
 800787e:	5b60      	ldrh	r0, [r4, r5]
 8007880:	230a      	movs	r3, #10
 8007882:	461a      	mov	r2, r3
 8007884:	f504 418a 	add.w	r1, r4, #17664	; 0x4500
 8007888:	3003      	adds	r0, #3
 800788a:	f00e fe77 	bl	801657c <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 4), 	flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, 10);
 800788e:	5b60      	ldrh	r0, [r4, r5]
 8007890:	230a      	movs	r3, #10
 8007892:	f504 418a 	add.w	r1, r4, #17664	; 0x4500
 8007896:	461a      	mov	r2, r3
 8007898:	3114      	adds	r1, #20
 800789a:	3004      	adds	r0, #4
 800789c:	f00e fe6e 	bl	801657c <_ZN8touchgfx7Unicode4itoaElPtti>
	if(current_page_table == 1){
 80078a0:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 80078a4:	f643 42f5 	movw	r2, #15605	; 0x3cf5
 80078a8:	5ae3      	ldrh	r3, [r4, r3]
 80078aa:	1e59      	subs	r1, r3, #1
 80078ac:	bf18      	it	ne
 80078ae:	2101      	movne	r1, #1
 80078b0:	54a1      	strb	r1, [r4, r2]
	if((current_page_table*10) > search_count_log){
 80078b2:	f64d 61c6 	movw	r1, #57030	; 0xdec6
 80078b6:	220a      	movs	r2, #10
 80078b8:	435a      	muls	r2, r3
 80078ba:	5a63      	ldrh	r3, [r4, r1]
 80078bc:	429a      	cmp	r2, r3
 80078be:	dd49      	ble.n	8007954 <_ZN11Screen1View11PageRefreshEv+0x114>
		search_count_log += 10;
 80078c0:	330a      	adds	r3, #10
 80078c2:	b29b      	uxth	r3, r3
		if((current_page_table*10) != search_count_log){
 80078c4:	429a      	cmp	r2, r3
		search_count_log += 10;
 80078c6:	5263      	strh	r3, [r4, r1]
		if((current_page_table*10) != search_count_log){
 80078c8:	d044      	beq.n	8007954 <_ZN11Screen1View11PageRefreshEv+0x114>
        visible = vis;
 80078ca:	f244 1375 	movw	r3, #16757	; 0x4175
 80078ce:	2200      	movs	r2, #0
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078d0:	f504 5a76 	add.w	sl, r4, #15744	; 0x3d80
 80078d4:	4d4f      	ldr	r5, [pc, #316]	; (8007a14 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 80078d6:	54e2      	strb	r2, [r4, r3]
 80078d8:	f10a 0a10 	add.w	sl, sl, #16
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078dc:	f504 5979 	add.w	r9, r4, #15936	; 0x3e40
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078e0:	4b4d      	ldr	r3, [pc, #308]	; (8007a18 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 80078e2:	4a4e      	ldr	r2, [pc, #312]	; (8007a1c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 80078e4:	494e      	ldr	r1, [pc, #312]	; (8007a20 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 80078e6:	9500      	str	r5, [sp, #0]
 80078e8:	4650      	mov	r0, sl
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078ea:	f109 0910 	add.w	r9, r9, #16
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078ee:	f504 587c 	add.w	r8, r4, #16128	; 0x3f00
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078f2:	f7fa ffcb 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078f6:	f108 0810 	add.w	r8, r8, #16
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80078fa:	4b47      	ldr	r3, [pc, #284]	; (8007a18 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 80078fc:	4a47      	ldr	r2, [pc, #284]	; (8007a1c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 80078fe:	4948      	ldr	r1, [pc, #288]	; (8007a20 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007900:	9500      	str	r5, [sp, #0]
 8007902:	4648      	mov	r0, r9
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007904:	f504 577f 	add.w	r7, r4, #16320	; 0x3fc0
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007908:	f7fa ffc0 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800790c:	3710      	adds	r7, #16
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800790e:	4b42      	ldr	r3, [pc, #264]	; (8007a18 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007910:	4a42      	ldr	r2, [pc, #264]	; (8007a1c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007912:	4943      	ldr	r1, [pc, #268]	; (8007a20 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007914:	9500      	str	r5, [sp, #0]
 8007916:	4640      	mov	r0, r8
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007918:	f504 4681 	add.w	r6, r4, #16512	; 0x4080
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800791c:	f7fa ffb6 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007920:	3610      	adds	r6, #16
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007922:	4b3d      	ldr	r3, [pc, #244]	; (8007a18 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007924:	4a3d      	ldr	r2, [pc, #244]	; (8007a1c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007926:	493e      	ldr	r1, [pc, #248]	; (8007a20 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007928:	9500      	str	r5, [sp, #0]
 800792a:	4638      	mov	r0, r7
 800792c:	f7fa ffae 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007930:	4b39      	ldr	r3, [pc, #228]	; (8007a18 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007932:	4a3a      	ldr	r2, [pc, #232]	; (8007a1c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007934:	493a      	ldr	r1, [pc, #232]	; (8007a20 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007936:	9500      	str	r5, [sp, #0]
 8007938:	4630      	mov	r0, r6
 800793a:	f7fa ffa7 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	switch(current_button_table){
 800793e:	f64d 63c0 	movw	r3, #57024	; 0xdec0
 8007942:	5ae3      	ldrh	r3, [r4, r3]
 8007944:	3b01      	subs	r3, #1
 8007946:	2b04      	cmp	r3, #4
 8007948:	d810      	bhi.n	800796c <_ZN11Screen1View11PageRefreshEv+0x12c>
 800794a:	e8df f003 	tbb	[pc, r3]
 800794e:	3b07      	.short	0x3b07
 8007950:	4942      	.short	0x4942
 8007952:	50          	.byte	0x50
 8007953:	00          	.byte	0x00
 8007954:	f244 1375 	movw	r3, #16757	; 0x4175
 8007958:	2201      	movs	r2, #1
 800795a:	e7b9      	b.n	80078d0 <_ZN11Screen1View11PageRefreshEv+0x90>
    colortype(uint32_t col)
 800795c:	4b31      	ldr	r3, [pc, #196]	; (8007a24 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800795e:	9300      	str	r3, [sp, #0]
 8007960:	4a31      	ldr	r2, [pc, #196]	; (8007a28 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 8007962:	4b32      	ldr	r3, [pc, #200]	; (8007a2c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 8007964:	4932      	ldr	r1, [pc, #200]	; (8007a30 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 8007966:	4650      	mov	r0, sl
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007968:	f7fa ff90 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 800796c:	f504 475e 	add.w	r7, r4, #56832	; 0xde00
 8007970:	f504 485e 	add.w	r8, r4, #56832	; 0xde00
 8007974:	f504 465e 	add.w	r6, r4, #56832	; 0xde00
{
 8007978:	2500      	movs	r5, #0
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 800797a:	37c4      	adds	r7, #196	; 0xc4
 800797c:	f108 085c 	add.w	r8, r8, #92	; 0x5c
 8007980:	36c8      	adds	r6, #200	; 0xc8
 8007982:	8839      	ldrh	r1, [r7, #0]
 8007984:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007988:	eb05 0141 	add.w	r1, r5, r1, lsl #1
 800798c:	390a      	subs	r1, #10
 800798e:	b289      	uxth	r1, r1
 8007990:	4640      	mov	r0, r8
 8007992:	f7fa f800 	bl	8001996 <parce_found_logs>
 8007996:	2800      	cmp	r0, #0
 8007998:	d030      	beq.n	80079fc <_ZN11Screen1View11PageRefreshEv+0x1bc>
			if(type_log_fil == TYPE_LOG_READINGS){
 800799a:	7833      	ldrb	r3, [r6, #0]
 800799c:	b94b      	cbnz	r3, 80079b2 <_ZN11Screen1View11PageRefreshEv+0x172>
				mas_ContainerTableLog[i]->UpdateLog_1(Event_log_readings_ptr);
 800799e:	f504 435e 	add.w	r3, r4, #56832	; 0xde00
 80079a2:	33ec      	adds	r3, #236	; 0xec
 80079a4:	f64d 62e4 	movw	r2, #57060	; 0xdee4
 80079a8:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80079ac:	58a1      	ldr	r1, [r4, r2]
 80079ae:	f7ff fa67 	bl	8006e80 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef>
	for(uint8_t i = 0; i < 10; i++){
 80079b2:	3501      	adds	r5, #1
 80079b4:	2d0a      	cmp	r5, #10
 80079b6:	d1e4      	bne.n	8007982 <_ZN11Screen1View11PageRefreshEv+0x142>
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 80079b8:	1d20      	adds	r0, r4, #4
}
 80079ba:	b002      	add	sp, #8
 80079bc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80079c0:	f00c bc38 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 80079c4:	4b17      	ldr	r3, [pc, #92]	; (8007a24 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80079c6:	9300      	str	r3, [sp, #0]
 80079c8:	4a17      	ldr	r2, [pc, #92]	; (8007a28 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 80079ca:	4b18      	ldr	r3, [pc, #96]	; (8007a2c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 80079cc:	4918      	ldr	r1, [pc, #96]	; (8007a30 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 80079ce:	4648      	mov	r0, r9
 80079d0:	e7ca      	b.n	8007968 <_ZN11Screen1View11PageRefreshEv+0x128>
 80079d2:	4b14      	ldr	r3, [pc, #80]	; (8007a24 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80079d4:	9300      	str	r3, [sp, #0]
 80079d6:	4a14      	ldr	r2, [pc, #80]	; (8007a28 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 80079d8:	4b14      	ldr	r3, [pc, #80]	; (8007a2c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 80079da:	4915      	ldr	r1, [pc, #84]	; (8007a30 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 80079dc:	4640      	mov	r0, r8
 80079de:	e7c3      	b.n	8007968 <_ZN11Screen1View11PageRefreshEv+0x128>
 80079e0:	4b10      	ldr	r3, [pc, #64]	; (8007a24 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80079e2:	9300      	str	r3, [sp, #0]
 80079e4:	4a10      	ldr	r2, [pc, #64]	; (8007a28 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 80079e6:	4b11      	ldr	r3, [pc, #68]	; (8007a2c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 80079e8:	4911      	ldr	r1, [pc, #68]	; (8007a30 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 80079ea:	4638      	mov	r0, r7
 80079ec:	e7bc      	b.n	8007968 <_ZN11Screen1View11PageRefreshEv+0x128>
 80079ee:	4b0d      	ldr	r3, [pc, #52]	; (8007a24 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80079f0:	9300      	str	r3, [sp, #0]
 80079f2:	4a0d      	ldr	r2, [pc, #52]	; (8007a28 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 80079f4:	4b0d      	ldr	r3, [pc, #52]	; (8007a2c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 80079f6:	490e      	ldr	r1, [pc, #56]	; (8007a30 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 80079f8:	4630      	mov	r0, r6
 80079fa:	e7b5      	b.n	8007968 <_ZN11Screen1View11PageRefreshEv+0x128>
			if(type_log_fil == TYPE_LOG_READINGS){
 80079fc:	7832      	ldrb	r2, [r6, #0]
 80079fe:	2a00      	cmp	r2, #0
 8007a00:	d1d7      	bne.n	80079b2 <_ZN11Screen1View11PageRefreshEv+0x172>
				mas_ContainerTableLog[i]->setVisible(false);
 8007a02:	f504 435e 	add.w	r3, r4, #56832	; 0xde00
 8007a06:	33ec      	adds	r3, #236	; 0xec
 8007a08:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8007a0c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    }
 8007a10:	e7cf      	b.n	80079b2 <_ZN11Screen1View11PageRefreshEv+0x172>
 8007a12:	bf00      	nop
 8007a14:	ff336699 	.word	0xff336699
 8007a18:	ff003366 	.word	0xff003366
 8007a1c:	ff0099cc 	.word	0xff0099cc
 8007a20:	ff006699 	.word	0xff006699
 8007a24:	ff993535 	.word	0xff993535
 8007a28:	ffcc0000 	.word	0xffcc0000
 8007a2c:	ff660000 	.word	0xff660000
 8007a30:	ff990000 	.word	0xff990000

08007a34 <_ZN11Screen1View15functionReadLogEv>:
	position = 0;
 8007a34:	f64d 62d8 	movw	r2, #57048	; 0xded8
 8007a38:	2100      	movs	r1, #0
 8007a3a:	5281      	strh	r1, [r0, r2]
	time_start_back = time_start_fil;
 8007a3c:	f64d 62d0 	movw	r2, #57040	; 0xded0
{
 8007a40:	b410      	push	{r4}
	time_start_back = time_start_fil;
 8007a42:	5884      	ldr	r4, [r0, r2]
 8007a44:	f64d 62cc 	movw	r2, #57036	; 0xdecc
 8007a48:	5084      	str	r4, [r0, r2]
	current_button_table = 1;
 8007a4a:	f64d 62c0 	movw	r2, #57024	; 0xdec0
 8007a4e:	f04f 1401 	mov.w	r4, #65537	; 0x10001
 8007a52:	5084      	str	r4, [r0, r2]
	current_page_table = 1;
 8007a54:	f64d 62c4 	movw	r2, #57028	; 0xdec4
 8007a58:	f504 1444 	add.w	r4, r4, #3211264	; 0x310000
 8007a5c:	5084      	str	r4, [r0, r2]
        visible = vis;
 8007a5e:	f643 44c5 	movw	r4, #15557	; 0x3cc5
 8007a62:	2201      	movs	r2, #1
 8007a64:	5502      	strb	r2, [r0, r4]
 8007a66:	f643 44f5 	movw	r4, #15605	; 0x3cf5
 8007a6a:	f880 20c5 	strb.w	r2, [r0, #197]	; 0xc5
 8007a6e:	5501      	strb	r1, [r0, r4]
 8007a70:	f244 1475 	movw	r4, #16757	; 0x4175
 8007a74:	5501      	strb	r1, [r0, r4]
 8007a76:	f244 01b5 	movw	r1, #16565	; 0x40b5
}
 8007a7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007a7e:	5442      	strb	r2, [r0, r1]
 8007a80:	f643 71f5 	movw	r1, #16373	; 0x3ff5
 8007a84:	5442      	strb	r2, [r0, r1]
 8007a86:	f643 7135 	movw	r1, #16181	; 0x3f35
 8007a8a:	5442      	strb	r2, [r0, r1]
 8007a8c:	f643 6175 	movw	r1, #15989	; 0x3e75
 8007a90:	5442      	strb	r2, [r0, r1]
		PageRefresh();
 8007a92:	f7ff bed5 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007a96 <_ZN11Screen1View16functionPageBackEv>:
	if(current_page_table > 1){
 8007a96:	f64d 62c4 	movw	r2, #57028	; 0xdec4
 8007a9a:	5a83      	ldrh	r3, [r0, r2]
 8007a9c:	2b01      	cmp	r3, #1
		current_page_table--;
 8007a9e:	bf84      	itt	hi
 8007aa0:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8007aa4:	5283      	strhhi	r3, [r0, r2]
	if(current_button_table > 1){
 8007aa6:	f64d 62c0 	movw	r2, #57024	; 0xdec0
 8007aaa:	5a83      	ldrh	r3, [r0, r2]
 8007aac:	2b01      	cmp	r3, #1
		current_button_table--;
 8007aae:	bf84      	itt	hi
 8007ab0:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8007ab4:	5283      	strhhi	r3, [r0, r2]
	if(first_page_table > current_page_table){
 8007ab6:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 8007aba:	5ac2      	ldrh	r2, [r0, r3]
 8007abc:	f64d 63c2 	movw	r3, #57026	; 0xdec2
 8007ac0:	5ac1      	ldrh	r1, [r0, r3]
 8007ac2:	4291      	cmp	r1, r2
		first_page_table = current_page_table;
 8007ac4:	bf88      	it	hi
 8007ac6:	52c2      	strhhi	r2, [r0, r3]
	PageRefresh();
 8007ac8:	f7ff beba 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007acc <_ZN11Screen1View19functionPageForwardEv>:
	current_page_table++;
 8007acc:	f64d 62c4 	movw	r2, #57028	; 0xdec4
	if(current_button_table < 5){
 8007ad0:	f64d 61c0 	movw	r1, #57024	; 0xdec0
	current_page_table++;
 8007ad4:	5a83      	ldrh	r3, [r0, r2]
 8007ad6:	3301      	adds	r3, #1
 8007ad8:	b29b      	uxth	r3, r3
 8007ada:	5283      	strh	r3, [r0, r2]
	if(current_button_table < 5){
 8007adc:	5a42      	ldrh	r2, [r0, r1]
 8007ade:	2a04      	cmp	r2, #4
		current_button_table++;
 8007ae0:	bf9c      	itt	ls
 8007ae2:	3201      	addls	r2, #1
 8007ae4:	5242      	strhls	r2, [r0, r1]
	if((current_page_table - first_page_table) >= 5){
 8007ae6:	f64d 61c2 	movw	r1, #57026	; 0xdec2
 8007aea:	5a42      	ldrh	r2, [r0, r1]
 8007aec:	1a9b      	subs	r3, r3, r2
 8007aee:	2b04      	cmp	r3, #4
		first_page_table += 1;
 8007af0:	bfc4      	itt	gt
 8007af2:	3201      	addgt	r2, #1
 8007af4:	5242      	strhgt	r2, [r0, r1]
	PageRefresh();
 8007af6:	f7ff bea3 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007afa <_ZN11Screen1View14functionPage_1Ev>:
	current_button_table = 1;
 8007afa:	f64d 63c0 	movw	r3, #57024	; 0xdec0
 8007afe:	2201      	movs	r2, #1
{
 8007b00:	b510      	push	{r4, lr}
 8007b02:	4604      	mov	r4, r0
	current_button_table = 1;
 8007b04:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_1Buffer);
 8007b06:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 8007b0a:	3044      	adds	r0, #68	; 0x44
 8007b0c:	f00e fd68 	bl	80165e0 <_ZN8touchgfx7Unicode4atoiEPKt>
 8007b10:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 8007b14:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8007b16:	4620      	mov	r0, r4
}
 8007b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8007b1c:	f7ff be90 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007b20 <_ZN11Screen1View14functionPage_2Ev>:
	current_button_table = 2;
 8007b20:	f64d 63c0 	movw	r3, #57024	; 0xdec0
 8007b24:	2202      	movs	r2, #2
{
 8007b26:	b510      	push	{r4, lr}
 8007b28:	4604      	mov	r4, r0
	current_button_table = 2;
 8007b2a:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_2Buffer);
 8007b2c:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 8007b30:	3058      	adds	r0, #88	; 0x58
 8007b32:	f00e fd55 	bl	80165e0 <_ZN8touchgfx7Unicode4atoiEPKt>
 8007b36:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 8007b3a:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8007b3c:	4620      	mov	r0, r4
}
 8007b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8007b42:	f7ff be7d 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007b46 <_ZN11Screen1View14functionPage_3Ev>:
	current_button_table = 3;
 8007b46:	f64d 63c0 	movw	r3, #57024	; 0xdec0
 8007b4a:	2203      	movs	r2, #3
{
 8007b4c:	b510      	push	{r4, lr}
 8007b4e:	4604      	mov	r4, r0
	current_button_table = 3;
 8007b50:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_3Buffer);
 8007b52:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 8007b56:	306c      	adds	r0, #108	; 0x6c
 8007b58:	f00e fd42 	bl	80165e0 <_ZN8touchgfx7Unicode4atoiEPKt>
 8007b5c:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 8007b60:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8007b62:	4620      	mov	r0, r4
}
 8007b64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8007b68:	f7ff be6a 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007b6c <_ZN11Screen1View14functionPage_4Ev>:
	current_button_table = 4;
 8007b6c:	f64d 63c0 	movw	r3, #57024	; 0xdec0
{
 8007b70:	b510      	push	{r4, lr}
	current_button_table = 4;
 8007b72:	2204      	movs	r2, #4
{
 8007b74:	4604      	mov	r4, r0
	current_button_table = 4;
 8007b76:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_4Buffer);
 8007b78:	f500 408a 	add.w	r0, r0, #17664	; 0x4500
 8007b7c:	f00e fd30 	bl	80165e0 <_ZN8touchgfx7Unicode4atoiEPKt>
 8007b80:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 8007b84:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8007b86:	4620      	mov	r0, r4
}
 8007b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8007b8c:	f7ff be58 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>

08007b90 <_ZN11Screen1View14functionPage_5Ev>:
	current_button_table = 5;
 8007b90:	f64d 63c0 	movw	r3, #57024	; 0xdec0
 8007b94:	2205      	movs	r2, #5
{
 8007b96:	b510      	push	{r4, lr}
 8007b98:	4604      	mov	r4, r0
	current_button_table = 5;
 8007b9a:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_5Buffer);
 8007b9c:	f500 408a 	add.w	r0, r0, #17664	; 0x4500
 8007ba0:	3014      	adds	r0, #20
 8007ba2:	f00e fd1d 	bl	80165e0 <_ZN8touchgfx7Unicode4atoiEPKt>
 8007ba6:	f64d 63c4 	movw	r3, #57028	; 0xdec4
 8007baa:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8007bac:	4620      	mov	r0, r4
}
 8007bae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8007bb2:	f7ff be45 	b.w	8007840 <_ZN11Screen1View11PageRefreshEv>
	...

08007bb8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8007bb8:	b510      	push	{r4, lr}
 8007bba:	4b07      	ldr	r3, [pc, #28]	; (8007bd8 <_ZN11Screen1ViewD1Ev+0x20>)
 8007bbc:	6003      	str	r3, [r0, #0]
 8007bbe:	4604      	mov	r4, r0
 8007bc0:	f500 4011 	add.w	r0, r0, #37120	; 0x9100
 8007bc4:	30dc      	adds	r0, #220	; 0xdc
 8007bc6:	f7ff fc9b 	bl	8007500 <_ZN21DateSelectorContainerD1Ev>
 8007bca:	f504 408a 	add.w	r0, r4, #17664	; 0x4500
 8007bce:	305c      	adds	r0, #92	; 0x5c
 8007bd0:	f7ff fc96 	bl	8007500 <_ZN21DateSelectorContainerD1Ev>
 8007bd4:	4620      	mov	r0, r4
 8007bd6:	bd10      	pop	{r4, pc}
 8007bd8:	08026e08 	.word	0x08026e08

08007bdc <_ZN11Screen1ViewD0Ev>:
 8007bdc:	b510      	push	{r4, lr}
 8007bde:	4604      	mov	r4, r0
 8007be0:	f7ff ffea 	bl	8007bb8 <_ZN11Screen1ViewD1Ev>
 8007be4:	4620      	mov	r0, r4
 8007be6:	f64d 7114 	movw	r1, #57108	; 0xdf14
 8007bea:	f01b f95f 	bl	8022eac <_ZdlPvj>
 8007bee:	4620      	mov	r0, r4
 8007bf0:	bd10      	pop	{r4, pc}

08007bf2 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 8007bf2:	4770      	bx	lr

08007bf4 <_ZThn4_N16Screen2PresenterD1Ev>:
 8007bf4:	3804      	subs	r0, #4
 8007bf6:	4770      	bx	lr

08007bf8 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8007bf8:	4770      	bx	lr

08007bfa <_ZN16Screen2PresenterD0Ev>:
 8007bfa:	b510      	push	{r4, lr}
 8007bfc:	2110      	movs	r1, #16
 8007bfe:	4604      	mov	r4, r0
 8007c00:	f01b f954 	bl	8022eac <_ZdlPvj>
 8007c04:	4620      	mov	r0, r4
 8007c06:	bd10      	pop	{r4, pc}

08007c08 <_ZThn4_N16Screen2PresenterD0Ev>:
 8007c08:	f1a0 0004 	sub.w	r0, r0, #4
 8007c0c:	e7f5      	b.n	8007bfa <_ZN16Screen2PresenterD0Ev>
	...

08007c10 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8007c10:	b510      	push	{r4, lr}
 8007c12:	2200      	movs	r2, #0
 8007c14:	6082      	str	r2, [r0, #8]
    : view(v)
 8007c16:	4a04      	ldr	r2, [pc, #16]	; (8007c28 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8007c18:	60c1      	str	r1, [r0, #12]
 8007c1a:	f102 0408 	add.w	r4, r2, #8
 8007c1e:	3220      	adds	r2, #32
 8007c20:	6004      	str	r4, [r0, #0]
 8007c22:	6042      	str	r2, [r0, #4]
}
 8007c24:	bd10      	pop	{r4, pc}
 8007c26:	bf00      	nop
 8007c28:	08026e5c 	.word	0x08026e5c

08007c2c <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8007c2c:	4770      	bx	lr

08007c2e <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8007c2e:	4770      	bx	lr

08007c30 <_ZN11Screen2View20functionSaveSettingsEv>:
 8007c30:	f244 2395 	movw	r3, #17045	; 0x4295
 8007c34:	2201      	movs	r2, #1
 8007c36:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить
void Screen2View::functionSaveSettings()
{
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 8007c38:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 8007c3c:	3070      	adds	r0, #112	; 0x70
 8007c3e:	f00c baf9 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

08007c42 <_ZN11Screen2View23functionSaveModalWindowEv>:
 8007c42:	f244 2395 	movw	r3, #17045	; 0x4295
 8007c46:	2200      	movs	r2, #0
 8007c48:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить (да\нет)
void Screen2View::functionSaveModalWindow()
{
	modalWindow1.setVisible(false);
	modalWindow1.invalidate();
 8007c4a:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 8007c4e:	3070      	adds	r0, #112	; 0x70
 8007c50:	f00c baf0 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

08007c54 <_ZN11Screen2View11setupScreenEv>:
{
 8007c54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007c56:	4604      	mov	r4, r0
 8007c58:	2600      	movs	r6, #0
    Screen2ViewBase::setupScreen();
 8007c5a:	f7fe f8f5 	bl	8005e48 <_ZN15Screen2ViewBase11setupScreenEv>
    customContainerKeyboard_Num1.initialize();
 8007c5e:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
    customContainerKeyboard1.initialize();
 8007c62:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
 8007c66:	9001      	str	r0, [sp, #4]
    customContainerKeyboard_Num1.initialize();
 8007c68:	3538      	adds	r5, #56	; 0x38
    customContainerKeyboard1.initialize();
 8007c6a:	f7fe ff5b 	bl	8006b24 <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard1.invalidate();
 8007c6e:	9801      	ldr	r0, [sp, #4]
 8007c70:	f884 60c5 	strb.w	r6, [r4, #197]	; 0xc5
 8007c74:	f00c fade 	bl	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
    customContainerKeyboard_Num1.initialize();
 8007c78:	4628      	mov	r0, r5
 8007c7a:	f7fe ffb9 	bl	8006bf0 <_ZN27CustomContainerKeyboard_Num10initializeEv>
 8007c7e:	f243 035d 	movw	r3, #12381	; 0x305d
    customContainerKeyboard_Num1.invalidate();
 8007c82:	4628      	mov	r0, r5
 8007c84:	54e6      	strb	r6, [r4, r3]
 8007c86:	f00c fad5 	bl	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007c8a:	f244 2395 	movw	r3, #17045	; 0x4295
    modalWindow1.invalidate();
 8007c8e:	f504 4084 	add.w	r0, r4, #16896	; 0x4200
 8007c92:	3070      	adds	r0, #112	; 0x70
 8007c94:	54e6      	strb	r6, [r4, r3]
}
 8007c96:	b002      	add	sp, #8
 8007c98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    modalWindow1.invalidate();
 8007c9c:	f00c baca 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

08007ca0 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv>:
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8007ca0:	4b0a      	ldr	r3, [pc, #40]	; (8007ccc <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x2c>)
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 8007ca2:	4a0b      	ldr	r2, [pc, #44]	; (8007cd0 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x30>)
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8007ca4:	8819      	ldrh	r1, [r3, #0]
{
 8007ca6:	b510      	push	{r4, lr}
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8007ca8:	f244 5378 	movw	r3, #17784	; 0x4578
{
 8007cac:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8007cae:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 8007cb0:	3101      	adds	r1, #1
 8007cb2:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 8007cb6:	b289      	uxth	r1, r1
 8007cb8:	3054      	adds	r0, #84	; 0x54
 8007cba:	f00e ffa5 	bl	8016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out.invalidate();
 8007cbe:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 8007cc2:	3008      	adds	r0, #8
}
 8007cc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out.invalidate();
 8007cc8:	f00c bab4 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007ccc:	2000f088 	.word	0x2000f088
 8007cd0:	2000f08a 	.word	0x2000f08a

08007cd4 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv>:
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 8007cd4:	4b0e      	ldr	r3, [pc, #56]	; (8007d10 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x3c>)
 8007cd6:	490f      	ldr	r1, [pc, #60]	; (8007d14 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
 8007cd8:	881a      	ldrh	r2, [r3, #0]
 8007cda:	3a01      	subs	r2, #1
{
 8007cdc:	b510      	push	{r4, lr}
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 8007cde:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 8007ce2:	292e      	cmp	r1, #46	; 0x2e
		count_ContainerTextArea -= 1;
 8007ce4:	bf08      	it	eq
 8007ce6:	801a      	strheq	r2, [r3, #0]
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 8007ce8:	8819      	ldrh	r1, [r3, #0]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 8007cea:	4a0a      	ldr	r2, [pc, #40]	; (8007d14 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 8007cec:	f244 537a 	movw	r3, #17786	; 0x457a
{
 8007cf0:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 8007cf2:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 8007cf4:	3101      	adds	r1, #1
 8007cf6:	f500 408a 	add.w	r0, r0, #17664	; 0x4500
 8007cfa:	b289      	uxth	r1, r1
 8007cfc:	3024      	adds	r0, #36	; 0x24
 8007cfe:	f00e ff83 	bl	8016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out_Num.invalidate();
 8007d02:	f504 4081 	add.w	r0, r4, #16512	; 0x4080
 8007d06:	3074      	adds	r0, #116	; 0x74
}
 8007d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out_Num.invalidate();
 8007d0c:	f00c ba92 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007d10:	2000f088 	.word	0x2000f088
 8007d14:	2000f08a 	.word	0x2000f08a

08007d18 <_ZN11Screen2ViewD0Ev>:
 8007d18:	b510      	push	{r4, lr}
 8007d1a:	f244 517c 	movw	r1, #17788	; 0x457c
 8007d1e:	4604      	mov	r4, r0
 8007d20:	f01b f8c4 	bl	8022eac <_ZdlPvj>
 8007d24:	4620      	mov	r0, r4
 8007d26:	bd10      	pop	{r4, pc}

08007d28 <_ZN11Screen2View9function3Ev>:
{
 8007d28:	b570      	push	{r4, r5, r6, lr}
	customContainerKeyboard_Num1.initialize();
 8007d2a:	f500 5540 	add.w	r5, r0, #12288	; 0x3000
{
 8007d2e:	4604      	mov	r4, r0
	customContainerKeyboard_Num1.initialize();
 8007d30:	3538      	adds	r5, #56	; 0x38
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 8007d32:	f244 567a 	movw	r6, #17786	; 0x457a
	customContainerKeyboard_Num1.initialize();
 8007d36:	4628      	mov	r0, r5
 8007d38:	f7fe ff5a 	bl	8006bf0 <_ZN27CustomContainerKeyboard_Num10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 8007d3c:	5ba1      	ldrh	r1, [r4, r6]
 8007d3e:	4815      	ldr	r0, [pc, #84]	; (8007d94 <_ZN11Screen2View9function3Ev+0x6c>)
 8007d40:	3101      	adds	r1, #1
 8007d42:	f504 428a 	add.w	r2, r4, #17664	; 0x4500
 8007d46:	b289      	uxth	r1, r1
 8007d48:	3224      	adds	r2, #36	; 0x24
 8007d4a:	f00e ff5d 	bl	8016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard_Num1.count_Container = 5;				// Установка максимальной длины контейнера
 8007d4e:	f244 03e4 	movw	r3, #16612	; 0x40e4
 8007d52:	2205      	movs	r2, #5
 8007d54:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer_num; 	// Установка длины буффера обмена элемента экрана
 8007d56:	4b10      	ldr	r3, [pc, #64]	; (8007d98 <_ZN11Screen2View9function3Ev+0x70>)
 8007d58:	5ba2      	ldrh	r2, [r4, r6]
 8007d5a:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard_Num1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 8007d5c:	4628      	mov	r0, r5
 8007d5e:	f7fe ff6b 	bl	8006c38 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 8007d62:	f243 035d 	movw	r3, #12381	; 0x305d
 8007d66:	2201      	movs	r2, #1
 8007d68:	54e2      	strb	r2, [r4, r3]
        rect.x = x;
 8007d6a:	f243 033c 	movw	r3, #12348	; 0x303c
 8007d6e:	4a0b      	ldr	r2, [pc, #44]	; (8007d9c <_ZN11Screen2View9function3Ev+0x74>)
 8007d70:	50e2      	str	r2, [r4, r3]
	customContainerKeyboard_Num1.invalidate();
 8007d72:	4628      	mov	r0, r5
 8007d74:	f00c fa5e 	bl	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard1.isVisible()){
 8007d78:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 8007d7c:	b143      	cbz	r3, 8007d90 <_ZN11Screen2View9function3Ev+0x68>
        visible = vis;
 8007d7e:	2300      	movs	r3, #0
 8007d80:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
		customContainerKeyboard1.invalidate();
 8007d84:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
}
 8007d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard1.invalidate();
 8007d8c:	f00c ba52 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8007d90:	bd70      	pop	{r4, r5, r6, pc}
 8007d92:	bf00      	nop
 8007d94:	2000f08a 	.word	0x2000f08a
 8007d98:	2000f088 	.word	0x2000f088
 8007d9c:	00b40104 	.word	0x00b40104

08007da0 <_ZN11Screen2View9function2Ev>:
{
 8007da0:	b570      	push	{r4, r5, r6, lr}
 8007da2:	4604      	mov	r4, r0
	customContainerKeyboard1.initialize();
 8007da4:	f100 05a0 	add.w	r5, r0, #160	; 0xa0
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 8007da8:	f244 5678 	movw	r6, #17784	; 0x4578
	customContainerKeyboard1.initialize();
 8007dac:	4628      	mov	r0, r5
 8007dae:	f7fe feb9 	bl	8006b24 <_ZN23CustomContainerKeyboard10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 8007db2:	5ba1      	ldrh	r1, [r4, r6]
 8007db4:	4814      	ldr	r0, [pc, #80]	; (8007e08 <_ZN11Screen2View9function2Ev+0x68>)
 8007db6:	3101      	adds	r1, #1
 8007db8:	f504 4289 	add.w	r2, r4, #17536	; 0x4480
 8007dbc:	b289      	uxth	r1, r1
 8007dbe:	3254      	adds	r2, #84	; 0x54
 8007dc0:	f00e ff22 	bl	8016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard1.count_Container = 30;				// Установка максимальной длины контейнера
 8007dc4:	f642 5388 	movw	r3, #11656	; 0x2d88
 8007dc8:	221e      	movs	r2, #30
 8007dca:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer; 	// Установка длины буффера обмена элемента экрана
 8007dcc:	4b0f      	ldr	r3, [pc, #60]	; (8007e0c <_ZN11Screen2View9function2Ev+0x6c>)
 8007dce:	5ba2      	ldrh	r2, [r4, r6]
 8007dd0:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 8007dd2:	4628      	mov	r0, r5
 8007dd4:	f7fe fe8e 	bl	8006af4 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8007dd8:	2301      	movs	r3, #1
 8007dda:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
        rect.x = x;
 8007dde:	f44f 0334 	mov.w	r3, #11796480	; 0xb40000
 8007de2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
	customContainerKeyboard1.invalidate();
 8007de6:	4628      	mov	r0, r5
 8007de8:	f00c fa24 	bl	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard_Num1.isVisible()){
 8007dec:	f243 035d 	movw	r3, #12381	; 0x305d
 8007df0:	5ce2      	ldrb	r2, [r4, r3]
 8007df2:	b142      	cbz	r2, 8007e06 <_ZN11Screen2View9function2Ev+0x66>
		customContainerKeyboard_Num1.invalidate();
 8007df4:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
        visible = vis;
 8007df8:	2200      	movs	r2, #0
 8007dfa:	54e2      	strb	r2, [r4, r3]
 8007dfc:	3038      	adds	r0, #56	; 0x38
}
 8007dfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard_Num1.invalidate();
 8007e02:	f00c ba17 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8007e06:	bd70      	pop	{r4, r5, r6, pc}
 8007e08:	2000f08a 	.word	0x2000f08a
 8007e0c:	2000f088 	.word	0x2000f088

08007e10 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8007e10:	b510      	push	{r4, lr}
 8007e12:	4604      	mov	r4, r0
 8007e14:	f7fe f884 	bl	8005f20 <_ZN15Screen2ViewBaseC1Ev>
 8007e18:	4b03      	ldr	r3, [pc, #12]	; (8007e28 <_ZN11Screen2ViewC1Ev+0x18>)
 8007e1a:	6023      	str	r3, [r4, #0]
 8007e1c:	f244 5378 	movw	r3, #17784	; 0x4578
 8007e20:	2200      	movs	r2, #0
 8007e22:	50e2      	str	r2, [r4, r3]
}
 8007e24:	4620      	mov	r0, r4
 8007e26:	bd10      	pop	{r4, pc}
 8007e28:	08026e8c 	.word	0x08026e8c

08007e2c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8007e2c:	2200      	movs	r2, #0
 8007e2e:	8002      	strh	r2, [r0, #0]
 8007e30:	8042      	strh	r2, [r0, #2]
 8007e32:	8082      	strh	r2, [r0, #4]
 8007e34:	80c2      	strh	r2, [r0, #6]
    }
 8007e36:	4770      	bx	lr

08007e38 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8007e38:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8007e3a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8007e3c:	4604      	mov	r4, r0
        setX(x);
 8007e3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8007e40:	4615      	mov	r5, r2
        setX(x);
 8007e42:	4798      	blx	r3
        setBaselineY(baselineY);
 8007e44:	6823      	ldr	r3, [r4, #0]
 8007e46:	4629      	mov	r1, r5
 8007e48:	4620      	mov	r0, r4
 8007e4a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    }
 8007e4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8007e50:	4718      	bx	r3

08007e52 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e52:	4770      	bx	lr

08007e54 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED1Ev>:
 * 'uint8_t getAlpha()' method.
 *
 * @tparam T specifies the type to extend with the FadeAnimator behavior.
 */
template <class T>
class FadeAnimator : public T
 8007e54:	4770      	bx	lr

08007e56 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 8007e56:	4770      	bx	lr

08007e58 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7executeES6_>:
    virtual void execute(T1 t1)
 8007e58:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007e5a:	68c2      	ldr	r2, [r0, #12]
 8007e5c:	6844      	ldr	r4, [r0, #4]
 8007e5e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e60:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8007e62:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e66:	07d2      	lsls	r2, r2, #31
 8007e68:	bf48      	it	mi
 8007e6a:	5962      	ldrmi	r2, [r4, r5]
 8007e6c:	689b      	ldr	r3, [r3, #8]
    }
 8007e6e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007e70:	bf48      	it	mi
 8007e72:	58d3      	ldrmi	r3, [r2, r3]
 8007e74:	4718      	bx	r3

08007e76 <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8007e76:	6843      	ldr	r3, [r0, #4]
 8007e78:	b12b      	cbz	r3, 8007e86 <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x10>
 8007e7a:	6883      	ldr	r3, [r0, #8]
 8007e7c:	b92b      	cbnz	r3, 8007e8a <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x14>
 8007e7e:	68c0      	ldr	r0, [r0, #12]
 8007e80:	f000 0001 	and.w	r0, r0, #1
 8007e84:	4770      	bx	lr
 8007e86:	4618      	mov	r0, r3
 8007e88:	4770      	bx	lr
 8007e8a:	2001      	movs	r0, #1
    }
 8007e8c:	4770      	bx	lr

08007e8e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21setFadeAnimationDelayEt>:
     *
     * @see getFadeAnimationDelay
     */
    virtual void setFadeAnimationDelay(uint16_t delay)
    {
        fadeAnimationDelay = delay;
 8007e8e:	f8a0 1044 	strh.w	r1, [r0, #68]	; 0x44
    }
 8007e92:	4770      	bx	lr

08007e94 <_ZNK8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21getFadeAnimationDelayEv>:
     * @see setFadeAnimationDelay
     */
    virtual uint16_t getFadeAnimationDelay() const
    {
        return fadeAnimationDelay;
    }
 8007e94:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 8007e98:	4770      	bx	lr

08007e9a <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 8007e9a:	8601      	strh	r1, [r0, #48]	; 0x30
    }
 8007e9c:	4770      	bx	lr

08007e9e <_ZNK8touchgfx12MoveAnimatorINS_9ContainerEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 8007e9e:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 8007ea0:	4770      	bx	lr

08007ea2 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED0Ev>:
class MoveAnimator : public T
 8007ea2:	b510      	push	{r4, lr}
 8007ea4:	2148      	movs	r1, #72	; 0x48
 8007ea6:	4604      	mov	r4, r0
 8007ea8:	f01b f800 	bl	8022eac <_ZdlPvj>
 8007eac:	4620      	mov	r0, r4
 8007eae:	bd10      	pop	{r4, pc}

08007eb0 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED0Ev>:
class FadeAnimator : public T
 8007eb0:	b510      	push	{r4, lr}
 8007eb2:	2154      	movs	r1, #84	; 0x54
 8007eb4:	4604      	mov	r4, r0
 8007eb6:	f01a fff9 	bl	8022eac <_ZdlPvj>
 8007eba:	4620      	mov	r0, r4
 8007ebc:	bd10      	pop	{r4, pc}

08007ebe <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007ebe:	b510      	push	{r4, lr}
 8007ec0:	2110      	movs	r1, #16
 8007ec2:	4604      	mov	r4, r0
 8007ec4:	f01a fff2 	bl	8022eac <_ZdlPvj>
 8007ec8:	4620      	mov	r0, r4
 8007eca:	bd10      	pop	{r4, pc}

08007ecc <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8007ecc:	6803      	ldr	r3, [r0, #0]
class TypedText
 8007ece:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 8007ed0:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8007ed2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007ed4:	4b11      	ldr	r3, [pc, #68]	; (8007f1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8007ed6:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8007ed8:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8007eda:	b28d      	uxth	r5, r1
 8007edc:	b92b      	cbnz	r3, 8007eea <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 8007ede:	4b10      	ldr	r3, [pc, #64]	; (8007f20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8007ee0:	4a10      	ldr	r2, [pc, #64]	; (8007f24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8007ee2:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007ee4:	4810      	ldr	r0, [pc, #64]	; (8007f28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8007ee6:	f01b f80f 	bl	8022f08 <__assert_func>
 8007eea:	4910      	ldr	r1, [pc, #64]	; (8007f2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8007eec:	8809      	ldrh	r1, [r1, #0]
 8007eee:	4291      	cmp	r1, r2
 8007ef0:	d803      	bhi.n	8007efa <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8007ef2:	4b0f      	ldr	r3, [pc, #60]	; (8007f30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8007ef4:	4a0b      	ldr	r2, [pc, #44]	; (8007f24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8007ef6:	21af      	movs	r1, #175	; 0xaf
 8007ef8:	e7f4      	b.n	8007ee4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007efa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8007efe:	4b0d      	ldr	r3, [pc, #52]	; (8007f34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8007f00:	681b      	ldr	r3, [r3, #0]
 8007f02:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007f06:	6803      	ldr	r3, [r0, #0]
 8007f08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f0a:	4798      	blx	r3
 8007f0c:	1a28      	subs	r0, r5, r0
 8007f0e:	b201      	sxth	r1, r0
 8007f10:	4633      	mov	r3, r6
 8007f12:	4620      	mov	r0, r4
    }
 8007f14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8007f18:	4718      	bx	r3
 8007f1a:	bf00      	nop
 8007f1c:	200200dc 	.word	0x200200dc
 8007f20:	08025a74 	.word	0x08025a74
 8007f24:	08025ab6 	.word	0x08025ab6
 8007f28:	08025ae4 	.word	0x08025ae4
 8007f2c:	200200e0 	.word	0x200200e0
 8007f30:	08025b2b 	.word	0x08025b2b
 8007f34:	200200e4 	.word	0x200200e4

08007f38 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
    const Unicode::UnicodeChar* getWildcard() const
    {
        return wildcard;
    }

    virtual uint16_t getTextWidth() const
 8007f38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 8007f3a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
    {
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8007f3c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f40:	4299      	cmp	r1, r3
    virtual uint16_t getTextWidth() const
 8007f42:	4604      	mov	r4, r0
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8007f44:	d02a      	beq.n	8007f9c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007f46:	4b16      	ldr	r3, [pc, #88]	; (8007fa0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 8007f48:	681b      	ldr	r3, [r3, #0]
 8007f4a:	b92b      	cbnz	r3, 8007f58 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 8007f4c:	4b15      	ldr	r3, [pc, #84]	; (8007fa4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 8007f4e:	4a16      	ldr	r2, [pc, #88]	; (8007fa8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8007f50:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007f52:	4816      	ldr	r0, [pc, #88]	; (8007fac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 8007f54:	f01a ffd8 	bl	8022f08 <__assert_func>
 8007f58:	4a15      	ldr	r2, [pc, #84]	; (8007fb0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 8007f5a:	8812      	ldrh	r2, [r2, #0]
 8007f5c:	428a      	cmp	r2, r1
 8007f5e:	d803      	bhi.n	8007f68 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 8007f60:	4b14      	ldr	r3, [pc, #80]	; (8007fb4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 8007f62:	4a11      	ldr	r2, [pc, #68]	; (8007fa8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8007f64:	21af      	movs	r1, #175	; 0xaf
 8007f66:	e7f4      	b.n	8007f52 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007f68:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8007f6c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8007f70:	4b11      	ldr	r3, [pc, #68]	; (8007fb8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
        return typedTexts[typedTextId].direction;
 8007f72:	7855      	ldrb	r5, [r2, #1]
        return fonts[typedTexts[typedTextId].fontIdx];
 8007f74:	681b      	ldr	r3, [r3, #0]
 8007f76:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8007f7a:	6833      	ldr	r3, [r6, #0]
 8007f7c:	69df      	ldr	r7, [r3, #28]
        return texts->getText(typedTextId);
 8007f7e:	4b0f      	ldr	r3, [pc, #60]	; (8007fbc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 8007f80:	6818      	ldr	r0, [r3, #0]
 8007f82:	f7fe fcd7 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
        return typedTexts[typedTextId].direction;
 8007f86:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8007f8a:	2300      	movs	r3, #0
        return texts->getText(typedTextId);
 8007f8c:	4602      	mov	r2, r0
 8007f8e:	9300      	str	r3, [sp, #0]
 8007f90:	4629      	mov	r1, r5
 8007f92:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f94:	4630      	mov	r0, r6
 8007f96:	47b8      	blx	r7
    }
 8007f98:	b003      	add	sp, #12
 8007f9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8007f9c:	2000      	movs	r0, #0
 8007f9e:	e7fb      	b.n	8007f98 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 8007fa0:	200200dc 	.word	0x200200dc
 8007fa4:	08025a74 	.word	0x08025a74
 8007fa8:	08025ab6 	.word	0x08025ab6
 8007fac:	08025ae4 	.word	0x08025ae4
 8007fb0:	200200e0 	.word	0x200200e0
 8007fb4:	08025b2b 	.word	0x08025b2b
 8007fb8:	200200e4 	.word	0x200200e4
 8007fbc:	200200e8 	.word	0x200200e8

08007fc0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
        return typedTextId != TYPED_TEXT_INVALID;
 8007fc0:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 8007fc2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007fc6:	4299      	cmp	r1, r3
    virtual int16_t getTextHeight()
 8007fc8:	b570      	push	{r4, r5, r6, lr}
 8007fca:	4604      	mov	r4, r0
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 8007fcc:	d01e      	beq.n	800800c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 8007fce:	6803      	ldr	r3, [r0, #0]
 8007fd0:	6edd      	ldr	r5, [r3, #108]	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007fd2:	4b0f      	ldr	r3, [pc, #60]	; (8008010 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 8007fd4:	681b      	ldr	r3, [r3, #0]
 8007fd6:	b92b      	cbnz	r3, 8007fe4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 8007fd8:	4b0e      	ldr	r3, [pc, #56]	; (8008014 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 8007fda:	4a0f      	ldr	r2, [pc, #60]	; (8008018 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 8007fdc:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007fde:	480f      	ldr	r0, [pc, #60]	; (800801c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 8007fe0:	f01a ff92 	bl	8022f08 <__assert_func>
 8007fe4:	4b0e      	ldr	r3, [pc, #56]	; (8008020 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 8007fe6:	881b      	ldrh	r3, [r3, #0]
 8007fe8:	428b      	cmp	r3, r1
 8007fea:	d803      	bhi.n	8007ff4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 8007fec:	4b0d      	ldr	r3, [pc, #52]	; (8008024 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 8007fee:	4a0a      	ldr	r2, [pc, #40]	; (8008018 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 8007ff0:	21af      	movs	r1, #175	; 0xaf
 8007ff2:	e7f4      	b.n	8007fde <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
        return texts->getText(typedTextId);
 8007ff4:	4b0c      	ldr	r3, [pc, #48]	; (8008028 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 8007ff6:	6818      	ldr	r0, [r3, #0]
 8007ff8:	f7fe fc9c 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8007ffc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007ffe:	4601      	mov	r1, r0
 8008000:	46ac      	mov	ip, r5
 8008002:	4620      	mov	r0, r4
 8008004:	2300      	movs	r3, #0
    }
 8008006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 800800a:	4760      	bx	ip
    }
 800800c:	2000      	movs	r0, #0
 800800e:	bd70      	pop	{r4, r5, r6, pc}
 8008010:	200200dc 	.word	0x200200dc
 8008014:	08025a74 	.word	0x08025a74
 8008018:	08025ab6 	.word	0x08025ab6
 800801c:	08025ae4 	.word	0x08025ae4
 8008020:	200200e0 	.word	0x200200e0
 8008024:	08025b2b 	.word	0x08025b2b
 8008028:	200200e8 	.word	0x200200e8

0800802c <_ZN13WheelSelectorC1Ev>:
#include <touchgfx/events/ClickEvent.hpp>
#include <touchgfx/events/GestureEvent.hpp>
#include <touchgfx/events/DragEvent.hpp>
#include <stdlib.h>

WheelSelector::WheelSelector() :
 800802c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008030:	4604      	mov	r4, r0
 8008032:	f7fa f91d 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
    currentAnimationState(NO_ANIMATION),
    textsIndex(0),
    animationEndedCallback(this, &WheelSelector::animationEndedHandler),
    elementSelectedAction(0)
 8008036:	4b4f      	ldr	r3, [pc, #316]	; (8008174 <_ZN13WheelSelectorC1Ev+0x148>)
 8008038:	6023      	str	r3, [r4, #0]
 800803a:	2500      	movs	r5, #0
 800803c:	2303      	movs	r3, #3
 800803e:	f104 0630 	add.w	r6, r4, #48	; 0x30
        : Widget(), bitmap(bitmap), alpha(255)
 8008042:	2226      	movs	r2, #38	; 0x26
 8008044:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8008048:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800804c:	4629      	mov	r1, r5
 800804e:	4630      	mov	r0, r6
 8008050:	62a5      	str	r5, [r4, #40]	; 0x28
 8008052:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008056:	f01b f9fd 	bl	8023454 <memset>
 800805a:	4630      	mov	r0, r6
 800805c:	f7fa f908 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8008060:	4b45      	ldr	r3, [pc, #276]	; (8008178 <_ZN13WheelSelectorC1Ev+0x14c>)
 8008062:	6323      	str	r3, [r4, #48]	; 0x30
 8008064:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8008068:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
        Image::setBitmap(bitmap);
 800806c:	4630      	mov	r0, r6
        : Widget(), bitmap(bitmap), alpha(255)
 800806e:	f884 7058 	strb.w	r7, [r4, #88]	; 0x58
        Image::setBitmap(bitmap);
 8008072:	a901      	add	r1, sp, #4
 8008074:	f009 f87a 	bl	801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008078:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800807c:	f7fa f8f8 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
          fadeAnimationEndedCallback(0)
 8008080:	f8df 9108 	ldr.w	r9, [pc, #264]	; 800818c <_ZN13WheelSelectorC1Ev+0x160>
          moveAnimationEndedCallback(0)
 8008084:	4f3d      	ldr	r7, [pc, #244]	; (800817c <_ZN13WheelSelectorC1Ev+0x150>)
 8008086:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
 800808a:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 800808e:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8008092:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8008096:	65e7      	str	r7, [r4, #92]	; 0x5c
 8008098:	f884 5088 	strb.w	r5, [r4, #136]	; 0x88
 800809c:	f8a4 508a 	strh.w	r5, [r4, #138]	; 0x8a
 80080a0:	f104 06a4 	add.w	r6, r4, #164	; 0xa4
 80080a4:	f604 3a24 	addw	sl, r4, #2852	; 0xb24
 80080a8:	46c8      	mov	r8, r9
        : TextArea(), wildcard(0)
 80080aa:	4630      	mov	r0, r6
 80080ac:	f7fa fbd2 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 80080b0:	3654      	adds	r6, #84	; 0x54
 80080b2:	f846 5c18 	str.w	r5, [r6, #-24]
 80080b6:	f846 9c54 	str.w	r9, [r6, #-84]
 80080ba:	f806 5c14 	strb.w	r5, [r6, #-20]
 80080be:	f826 5c12 	strh.w	r5, [r6, #-18]
 80080c2:	f826 5c10 	strh.w	r5, [r6, #-16]
 80080c6:	f846 5c04 	str.w	r5, [r6, #-4]
 80080ca:	4556      	cmp	r6, sl
 80080cc:	d1ed      	bne.n	80080aa <_ZN13WheelSelectorC1Ev+0x7e>
 80080ce:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 80080d2:	f7fa f8cd 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80080d6:	f8c4 7ca4 	str.w	r7, [r4, #3236]	; 0xca4
 80080da:	f04f 0300 	mov.w	r3, #0
 80080de:	f504 57bb 	add.w	r7, r4, #5984	; 0x1760
 80080e2:	f8c4 5ccc 	str.w	r5, [r4, #3276]	; 0xccc
 80080e6:	f8a4 5cd2 	strh.w	r5, [r4, #3282]	; 0xcd2
 80080ea:	f8c4 5cd4 	str.w	r5, [r4, #3284]	; 0xcd4
 80080ee:	f8c4 5cd8 	str.w	r5, [r4, #3288]	; 0xcd8
 80080f2:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
 80080f6:	f8c4 5ce0 	str.w	r5, [r4, #3296]	; 0xce0
 80080fa:	f8c4 5ce4 	str.w	r5, [r4, #3300]	; 0xce4
 80080fe:	f8c4 5ce8 	str.w	r5, [r4, #3304]	; 0xce8
 8008102:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
 8008106:	f604 45ec 	addw	r5, r4, #3308	; 0xcec
 800810a:	370c      	adds	r7, #12
 800810c:	2600      	movs	r6, #0
 800810e:	4628      	mov	r0, r5
 8008110:	f7fa fba0 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8008114:	3554      	adds	r5, #84	; 0x54
 8008116:	f845 6c18 	str.w	r6, [r5, #-24]
 800811a:	f845 8c54 	str.w	r8, [r5, #-84]
 800811e:	f805 6c14 	strb.w	r6, [r5, #-20]
 8008122:	f825 6c12 	strh.w	r6, [r5, #-18]
 8008126:	f825 6c10 	strh.w	r6, [r5, #-16]
 800812a:	f845 6c04 	str.w	r6, [r5, #-4]
 800812e:	42bd      	cmp	r5, r7
 8008130:	d1ed      	bne.n	800810e <_ZN13WheelSelectorC1Ev+0xe2>
 8008132:	f641 07ec 	movw	r7, #6380	; 0x18ec
 8008136:	19e5      	adds	r5, r4, r7
 8008138:	4628      	mov	r0, r5
 800813a:	f7fa f899 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800813e:	4b10      	ldr	r3, [pc, #64]	; (8008180 <_ZN13WheelSelectorC1Ev+0x154>)
 8008140:	51e3      	str	r3, [r4, r7]
 8008142:	f641 1324 	movw	r3, #6436	; 0x1924
 8008146:	62ae      	str	r6, [r5, #40]	; 0x28
 8008148:	50e6      	str	r6, [r4, r3]
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800814a:	f641 1334 	movw	r3, #6452	; 0x1934
 800814e:	18e2      	adds	r2, r4, r3
 8008150:	490c      	ldr	r1, [pc, #48]	; (8008184 <_ZN13WheelSelectorC1Ev+0x158>)
 8008152:	50e1      	str	r1, [r4, r3]
 8008154:	f641 133c 	movw	r3, #6460	; 0x193c
 8008158:	6054      	str	r4, [r2, #4]
 800815a:	4a0b      	ldr	r2, [pc, #44]	; (8008188 <_ZN13WheelSelectorC1Ev+0x15c>)
 800815c:	50e2      	str	r2, [r4, r3]
 800815e:	f504 53ca 	add.w	r3, r4, #6464	; 0x1940
{
}
 8008162:	4620      	mov	r0, r4
 8008164:	601e      	str	r6, [r3, #0]
    elementSelectedAction(0)
 8008166:	f641 1344 	movw	r3, #6468	; 0x1944
 800816a:	50e6      	str	r6, [r4, r3]
}
 800816c:	b002      	add	sp, #8
 800816e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008172:	bf00      	nop
 8008174:	08027004 	.word	0x08027004
 8008178:	080282e0 	.word	0x080282e0
 800817c:	08026ed8 	.word	0x08026ed8
 8008180:	080275c0 	.word	0x080275c0
 8008184:	08026fec 	.word	0x08026fec
 8008188:	08008403 	.word	0x08008403
 800818c:	08026f6c 	.word	0x08026f6c

08008190 <_ZN13WheelSelector5setupEtiiiiii>:

void WheelSelector::setup(BitmapId overlay_, int width, int height, int textHeight_, int textYOffsetInOffset_, int overlayX, int overlayY)
{
 8008190:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008194:	461f      	mov	r7, r3
        touchable = touch;
 8008196:	2301      	movs	r3, #1
 8008198:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
    setTouchable(true);

    textYOffsetInOffset = textYOffsetInOffset_;
 800819c:	f641 131c 	movw	r3, #6428	; 0x191c
{
 80081a0:	4616      	mov	r6, r2

    centerOverlay.setBitmap(Bitmap(overlay_));
 80081a2:	f100 0530 	add.w	r5, r0, #48	; 0x30
    textYOffsetInOffset = textYOffsetInOffset_;
 80081a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80081a8:	50c2      	str	r2, [r0, r3]
{
 80081aa:	4604      	mov	r4, r0
    textsWidth = width;
 80081ac:	f641 1828 	movw	r8, #6440	; 0x1928
 80081b0:	f8ad 1004 	strh.w	r1, [sp, #4]
    centerOverlay.setBitmap(Bitmap(overlay_));
 80081b4:	4628      	mov	r0, r5
 80081b6:	a901      	add	r1, sp, #4
    textsHeight = textHeight_;
 80081b8:	f641 1a2c 	movw	sl, #6444	; 0x192c
    centerOverlay.setBitmap(Bitmap(overlay_));
 80081bc:	f008 ffd6 	bl	801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textsHeight = textHeight_;
 80081c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    textsWidth = width;
 80081c2:	f844 6008 	str.w	r6, [r4, r8]
    centerOverlay.setXY(overlayX, overlayY);
 80081c6:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
    textsHeight = textHeight_;
 80081ca:	f844 300a 	str.w	r3, [r4, sl]
    centerOverlay.setXY(overlayX, overlayY);
 80081ce:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80081d2:	4628      	mov	r0, r5
 80081d4:	f7fa f85e 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>

    textContainer.setPosition(0, 0, textsWidth, 0);
 80081d8:	f104 095c 	add.w	r9, r4, #92	; 0x5c
 80081dc:	f934 b008 	ldrsh.w	fp, [r4, r8]
        setXY(x, y);
 80081e0:	2200      	movs	r2, #0
 80081e2:	4611      	mov	r1, r2
 80081e4:	4648      	mov	r0, r9
 80081e6:	f7fa f855 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80081ea:	2200      	movs	r2, #0
 80081ec:	4659      	mov	r1, fp
 80081ee:	4648      	mov	r0, r9
 80081f0:	f7f9 ff55 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    textContainer.setMoveAnimationEndedAction(animationEndedCallback);
 80081f4:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 80081f8:	3314      	adds	r3, #20
        moveAnimationEndedCallback = &callback;
 80081fa:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
    add(textContainer);
 80081fe:	6823      	ldr	r3, [r4, #0]
 8008200:	4649      	mov	r1, r9
 8008202:	4620      	mov	r0, r4
 8008204:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008206:	4798      	blx	r3

    add(centerOverlay);
 8008208:	6823      	ldr	r3, [r4, #0]
 800820a:	4629      	mov	r1, r5
 800820c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800820e:	4620      	mov	r0, r4

    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 8008210:	f504 55c7 	add.w	r5, r4, #6368	; 0x18e0
    add(centerOverlay);
 8008214:	4798      	blx	r3
    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 8008216:	350c      	adds	r5, #12
 8008218:	f9b4 9038 	ldrsh.w	r9, [r4, #56]	; 0x38
 800821c:	f934 a00a 	ldrsh.w	sl, [r4, sl]
        setXY(x, y);
 8008220:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8008224:	4628      	mov	r0, r5
 8008226:	2100      	movs	r1, #0
 8008228:	f7fa f834 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800822c:	4652      	mov	r2, sl
 800822e:	4649      	mov	r1, r9
 8008230:	4628      	mov	r0, r5
 8008232:	f7f9 ff34 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    add(centerTextViewPort);
 8008236:	6823      	ldr	r3, [r4, #0]
 8008238:	4629      	mov	r1, r5
 800823a:	4620      	mov	r0, r4
 800823c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800823e:	4798      	blx	r3

    centerTextContainerYOffset = centerTextViewPort.getY();
 8008240:	f641 03f2 	movw	r3, #6386	; 0x18f2
 8008244:	f641 1218 	movw	r2, #6424	; 0x1918
 8008248:	5ee3      	ldrsh	r3, [r4, r3]
 800824a:	50a3      	str	r3, [r4, r2]

    centerTextContainer.setXY(textContainer.getX(), textContainer.getY() - centerTextContainerYOffset);
 800824c:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 8008250:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 8008254:	f604 49a4 	addw	r9, r4, #3236	; 0xca4
 8008258:	1ad2      	subs	r2, r2, r3
 800825a:	b212      	sxth	r2, r2
 800825c:	4648      	mov	r0, r9
 800825e:	f7fa f819 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    centerTextContainer.setWidth(textsWidth);
 8008262:	f854 3008 	ldr.w	r3, [r4, r8]
 8008266:	f8a4 3cac 	strh.w	r3, [r4, #3244]	; 0xcac
        rect.height = height;
 800826a:	f04f 0800 	mov.w	r8, #0
    centerTextContainer.setHeight(0);
    centerTextViewPort.add(centerTextContainer);
 800826e:	4649      	mov	r1, r9
 8008270:	4628      	mov	r0, r5
 8008272:	f8a4 8cae 	strh.w	r8, [r4, #3246]	; 0xcae
 8008276:	f006 ffad 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    hiddenElements = 0;
 800827a:	f641 1330 	movw	r3, #6448	; 0x1930

    setWidth(width);
 800827e:	b231      	sxth	r1, r6
    hiddenElements = 0;
 8008280:	f844 8003 	str.w	r8, [r4, r3]
    setWidth(width);
 8008284:	6823      	ldr	r3, [r4, #0]
 8008286:	4620      	mov	r0, r4
 8008288:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800828a:	4798      	blx	r3
    setHeight(height);
 800828c:	6823      	ldr	r3, [r4, #0]
 800828e:	b239      	sxth	r1, r7
 8008290:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008292:	4620      	mov	r0, r4
 8008294:	4798      	blx	r3
}
 8008296:	b003      	add	sp, #12
 8008298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800829c <_ZN13WheelSelector7addTextEttPKt>:

void WheelSelector::addText(TypedTextId textId, TypedTextId selectedTextId, const Unicode::UnicodeChar* newText)
{
 800829c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80082a0:	f641 1524 	movw	r5, #6436	; 0x1924
{
 80082a4:	4604      	mov	r4, r0
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80082a6:	5940      	ldr	r0, [r0, r5]
{
 80082a8:	b085      	sub	sp, #20
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80082aa:	270c      	movs	r7, #12
 80082ac:	fb07 4000 	mla	r0, r7, r0, r4
{
 80082b0:	4688      	mov	r8, r1
 80082b2:	9201      	str	r2, [sp, #4]
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80082b4:	2106      	movs	r1, #6
 80082b6:	4a49      	ldr	r2, [pc, #292]	; (80083dc <_ZN13WheelSelector7addTextEttPKt+0x140>)
 80082b8:	f600 3024 	addw	r0, r0, #2852	; 0xb24
 80082bc:	f00e fcba 	bl	8016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    texts[textsIndex].setTypedText(TypedText(textId));
 80082c0:	5960      	ldr	r0, [r4, r5]
        : typedTextId(id)
 80082c2:	4b47      	ldr	r3, [pc, #284]	; (80083e0 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 80082c4:	9302      	str	r3, [sp, #8]
 80082c6:	2654      	movs	r6, #84	; 0x54
 80082c8:	fb06 4000 	mla	r0, r6, r0, r4
 80082cc:	a902      	add	r1, sp, #8
 80082ce:	30a4      	adds	r0, #164	; 0xa4
 80082d0:	f8ad 800c 	strh.w	r8, [sp, #12]
 80082d4:	f008 fd15 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 80082d8:	f854 c005 	ldr.w	ip, [r4, r5]
 80082dc:	fb06 f10c 	mul.w	r1, r6, ip
 80082e0:	f101 00a4 	add.w	r0, r1, #164	; 0xa4
 80082e4:	fb07 420c 	mla	r2, r7, ip, r4
    texts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 80082e8:	f641 182c 	movw	r8, #6444	; 0x192c
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 80082ec:	4420      	add	r0, r4
        this->color = color;
 80082ee:	4421      	add	r1, r4
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 80082f0:	f641 1a1c 	movw	sl, #6428	; 0x191c
 80082f4:	f04f 3bff 	mov.w	fp, #4294967295
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 80082f8:	f602 3224 	addw	r2, r2, #2852	; 0xb24
        wildcard = value;
 80082fc:	63c2      	str	r2, [r0, #60]	; 0x3c
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 80082fe:	f854 2008 	ldr.w	r2, [r4, r8]
 8008302:	f8c1 b0d4 	str.w	fp, [r1, #212]	; 0xd4
 8008306:	f854 100a 	ldr.w	r1, [r4, sl]
 800830a:	fb12 120c 	smlabb	r2, r2, ip, r1
 800830e:	b212      	sxth	r2, r2
 8008310:	2100      	movs	r1, #0
 8008312:	f7f9 ffbf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    texts[textsIndex].setWidth(textsWidth);
 8008316:	5962      	ldr	r2, [r4, r5]
 8008318:	4372      	muls	r2, r6
 800831a:	f102 00a4 	add.w	r0, r2, #164	; 0xa4
 800831e:	4422      	add	r2, r4
 8008320:	f641 1928 	movw	r9, #6440	; 0x1928
 8008324:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 8008328:	f934 1009 	ldrsh.w	r1, [r4, r9]
 800832c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800832e:	4420      	add	r0, r4
 8008330:	4790      	blx	r2
    textContainer.add(texts[textsIndex]);
 8008332:	5961      	ldr	r1, [r4, r5]
 8008334:	fb06 4101 	mla	r1, r6, r1, r4
 8008338:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800833c:	31a4      	adds	r1, #164	; 0xa4
 800833e:	f006 ff49 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textContainer.setHeight((textsIndex + 1) * textsHeight);
 8008342:	5960      	ldr	r0, [r4, r5]
 8008344:	f854 1008 	ldr.w	r1, [r4, r8]
 8008348:	4b25      	ldr	r3, [pc, #148]	; (80083e0 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 800834a:	9302      	str	r3, [sp, #8]
 800834c:	1c42      	adds	r2, r0, #1
 800834e:	fb12 f201 	smulbb	r2, r2, r1

    centerTexts[textsIndex].setTypedText(TypedText(selectedTextId));
 8008352:	fb06 4000 	mla	r0, r6, r0, r4
 8008356:	9b01      	ldr	r3, [sp, #4]
 8008358:	f8a4 2066 	strh.w	r2, [r4, #102]	; 0x66
 800835c:	a902      	add	r1, sp, #8
 800835e:	f600 40ec 	addw	r0, r0, #3308	; 0xcec
 8008362:	f8ad 300c 	strh.w	r3, [sp, #12]
 8008366:	f008 fccc 	bl	8010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 800836a:	5962      	ldr	r2, [r4, r5]
    centerTexts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800836c:	f854 100a 	ldr.w	r1, [r4, sl]
 8008370:	fb06 f302 	mul.w	r3, r6, r2
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 8008374:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 8008378:	4420      	add	r0, r4
 800837a:	fb07 4702 	mla	r7, r7, r2, r4
 800837e:	4423      	add	r3, r4
 8008380:	f607 3724 	addw	r7, r7, #2852	; 0xb24
 8008384:	63c7      	str	r7, [r0, #60]	; 0x3c
 8008386:	f8c3 bd1c 	str.w	fp, [r3, #3356]	; 0xd1c
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800838a:	f854 3008 	ldr.w	r3, [r4, r8]
 800838e:	fb13 1202 	smlabb	r2, r3, r2, r1
 8008392:	b212      	sxth	r2, r2
 8008394:	2100      	movs	r1, #0
 8008396:	f7f9 ff7d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    centerTexts[textsIndex].setWidth(textsWidth);
 800839a:	5963      	ldr	r3, [r4, r5]
 800839c:	f934 1009 	ldrsh.w	r1, [r4, r9]
 80083a0:	4373      	muls	r3, r6
 80083a2:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 80083a6:	4423      	add	r3, r4
 80083a8:	4420      	add	r0, r4
 80083aa:	f8d3 3cec 	ldr.w	r3, [r3, #3308]	; 0xcec
 80083ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80083b0:	4798      	blx	r3
    centerTextContainer.add(centerTexts[textsIndex]);
 80083b2:	5961      	ldr	r1, [r4, r5]
 80083b4:	fb06 4101 	mla	r1, r6, r1, r4
 80083b8:	f601 41ec 	addw	r1, r1, #3308	; 0xcec
 80083bc:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 80083c0:	f006 ff08 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    centerTextContainer.setHeight((textsIndex + 1) * textsHeight);
 80083c4:	5963      	ldr	r3, [r4, r5]
 80083c6:	f854 2008 	ldr.w	r2, [r4, r8]
 80083ca:	3301      	adds	r3, #1
 80083cc:	fb12 f203 	smulbb	r2, r2, r3
 80083d0:	f8a4 2cae 	strh.w	r2, [r4, #3246]	; 0xcae

    textsIndex++;
 80083d4:	5163      	str	r3, [r4, r5]
}
 80083d6:	b005      	add	sp, #20
 80083d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80083dc:	08025b7d 	.word	0x08025b7d
 80083e0:	08025b88 	.word	0x08025b88

080083e4 <_ZN13WheelSelector15getSelectedItemEv>:
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
}

int WheelSelector::getSelectedItem()
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80083e4:	f641 132c 	movw	r3, #6444	; 0x192c
 80083e8:	58c2      	ldr	r2, [r0, r3]
 80083ea:	f9b0 3036 	ldrsh.w	r3, [r0, #54]	; 0x36
    int foo = centerTextCenter - textContainer.getY();
 80083ee:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80083f2:	eb02 71d2 	add.w	r1, r2, r2, lsr #31
 80083f6:	eb03 0361 	add.w	r3, r3, r1, asr #1
    int foo = centerTextCenter - textContainer.getY();
 80083fa:	1a18      	subs	r0, r3, r0
    return foo / textsHeight;
}
 80083fc:	fb90 f0f2 	sdiv	r0, r0, r2
 8008400:	4770      	bx	lr

08008402 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE>:

    hiddenElements = numberOfElementsToHide;
}

void WheelSelector::animationEndedHandler(const MoveAnimator<Container>& source)
{
 8008402:	b573      	push	{r0, r1, r4, r5, r6, lr}
    currentAnimationState = NO_ANIMATION;

    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 8008404:	f641 1544 	movw	r5, #6468	; 0x1944
    currentAnimationState = NO_ANIMATION;
 8008408:	2303      	movs	r3, #3
{
 800840a:	4604      	mov	r4, r0
    currentAnimationState = NO_ANIMATION;
 800840c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 8008410:	5940      	ldr	r0, [r0, r5]
 8008412:	b170      	cbz	r0, 8008432 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
 8008414:	6803      	ldr	r3, [r0, #0]
 8008416:	68db      	ldr	r3, [r3, #12]
 8008418:	4798      	blx	r3
 800841a:	b150      	cbz	r0, 8008432 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
    {
        elementSelectedAction->execute(*this, getSelectedItem());
 800841c:	5965      	ldr	r5, [r4, r5]
 800841e:	682b      	ldr	r3, [r5, #0]
 8008420:	4620      	mov	r0, r4
 8008422:	689e      	ldr	r6, [r3, #8]
 8008424:	f7ff ffde 	bl	80083e4 <_ZN13WheelSelector15getSelectedItemEv>
 8008428:	aa01      	add	r2, sp, #4
 800842a:	9001      	str	r0, [sp, #4]
 800842c:	4621      	mov	r1, r4
 800842e:	4628      	mov	r0, r5
 8008430:	47b0      	blx	r6
    }
}
 8008432:	b002      	add	sp, #8
 8008434:	bd70      	pop	{r4, r5, r6, pc}

08008436 <_ZN13WheelSelector21calculateSnapPositionEi>:
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
}

int WheelSelector::calculateSnapPosition(int newYPosition)
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008436:	f641 132c 	movw	r3, #6444	; 0x192c
{
 800843a:	b510      	push	{r4, lr}
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800843c:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 8008440:	58c0      	ldr	r0, [r0, r3]
 8008442:	eb00 73d0 	add.w	r3, r0, r0, lsr #31
 8008446:	eb04 0363 	add.w	r3, r4, r3, asr #1
    int index = (centerTextCenter - newYPosition) / textsHeight;
 800844a:	1a59      	subs	r1, r3, r1
 800844c:	fb91 f1f0 	sdiv	r1, r1, r0
    return centerTextCenter - (textsHeight * index + textsHeight / 2);
}
 8008450:	fb00 4011 	mls	r0, r0, r1, r4
 8008454:	bd10      	pop	{r4, pc}

08008456 <_ZN13WheelSelector29getTextContainerVisibleHeightEv>:
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
}

int WheelSelector::getTextContainerVisibleHeight()
{
    return (textsHeight * (textsIndex - hiddenElements - 1));
 8008456:	f641 1324 	movw	r3, #6436	; 0x1924
 800845a:	f641 1230 	movw	r2, #6448	; 0x1930
 800845e:	58c3      	ldr	r3, [r0, r3]
 8008460:	5882      	ldr	r2, [r0, r2]
 8008462:	1a9b      	subs	r3, r3, r2
 8008464:	f641 122c 	movw	r2, #6444	; 0x192c
 8008468:	3b01      	subs	r3, #1
 800846a:	5880      	ldr	r0, [r0, r2]
}
 800846c:	4358      	muls	r0, r3
 800846e:	4770      	bx	lr

08008470 <_ZN13WheelSelector19adjustForBoundariesERi>:
    if (newYPosition > centerOverlay.getY() + cutoff)
 8008470:	680b      	ldr	r3, [r1, #0]
{
 8008472:	b510      	push	{r4, lr}
    if (newYPosition > centerOverlay.getY() + cutoff)
 8008474:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 8008478:	42a3      	cmp	r3, r4
        newYPosition = centerOverlay.getY() + cutoff;
 800847a:	bfc8      	it	gt
 800847c:	600c      	strgt	r4, [r1, #0]
    if (newYPosition < centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff))
 800847e:	f7ff ffea 	bl	8008456 <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 8008482:	680b      	ldr	r3, [r1, #0]
 8008484:	1a20      	subs	r0, r4, r0
 8008486:	4283      	cmp	r3, r0
        newYPosition = centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff);
 8008488:	bfb8      	it	lt
 800848a:	6008      	strlt	r0, [r1, #0]
}
 800848c:	bd10      	pop	{r4, pc}

0800848e <_ZN13WheelSelector8moveTextEi>:
{
 800848e:	b513      	push	{r0, r1, r4, lr}
 8008490:	4604      	mov	r4, r0
 8008492:	9101      	str	r1, [sp, #4]
    adjustForBoundaries(newYPosition);
 8008494:	a901      	add	r1, sp, #4
 8008496:	f7ff ffeb 	bl	8008470 <_ZN13WheelSelector19adjustForBoundariesERi>
    textContainer.moveTo(textContainer.getX(), newYPosition);
 800849a:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800849e:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 80084a2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80084a6:	f7f9 fdda 	bl	800205e <_ZN8touchgfx8Drawable6moveToEss>
    centerTextContainer.moveTo(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset);
 80084aa:	f641 1318 	movw	r3, #6424	; 0x1918
 80084ae:	9a01      	ldr	r2, [sp, #4]
 80084b0:	58e3      	ldr	r3, [r4, r3]
 80084b2:	f9b4 1ca8 	ldrsh.w	r1, [r4, #3240]	; 0xca8
 80084b6:	1ad2      	subs	r2, r2, r3
 80084b8:	b212      	sxth	r2, r2
 80084ba:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 80084be:	f7f9 fdce 	bl	800205e <_ZN8touchgfx8Drawable6moveToEss>
}
 80084c2:	b002      	add	sp, #8
 80084c4:	bd10      	pop	{r4, pc}

080084c6 <_ZN13WheelSelector15handleDragEventERKN8touchgfx9DragEventE>:
    currentAnimationState = ANIMATING_DRAG;
 80084c6:	2202      	movs	r2, #2
 80084c8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragToY - dragFromY;
 80084cc:	898a      	ldrh	r2, [r1, #12]
 80084ce:	8909      	ldrh	r1, [r1, #8]
 80084d0:	1a52      	subs	r2, r2, r1
    moveText(textContainer.getY() + evt.getDeltaY());
 80084d2:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
 80084d6:	fa01 f182 	sxtah	r1, r1, r2
 80084da:	f7ff bfd8 	b.w	800848e <_ZN13WheelSelector8moveTextEi>

080084de <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>:
     * Cancel move animation and leave the Drawable in its current position. If the
     * animation is not running, nothing is done.
     */
    void cancelMoveAnimation()
    {
        if (moveAnimationRunning)
 80084de:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void cancelMoveAnimation()
 80084e2:	b510      	push	{r4, lr}
 80084e4:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 80084e6:	b13b      	cbz	r3, 80084f8 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv+0x1a>
        {
            Application::getInstance()->unregisterTimerWidget(this);
 80084e8:	f00a fefc 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 80084ec:	4621      	mov	r1, r4
 80084ee:	f00a ff31 	bl	8013354 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
            moveAnimationRunning = false;
 80084f2:	2300      	movs	r3, #0
 80084f4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        }
    }
 80084f8:	bd10      	pop	{r4, pc}

080084fa <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>:

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
    {
        if (fadeAnimationRunning)
 80084fa:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void nextFadeAnimationStep()
 80084fe:	b570      	push	{r4, r5, r6, lr}
 8008500:	4604      	mov	r4, r0
        if (fadeAnimationRunning)
 8008502:	2b00      	cmp	r3, #0
 8008504:	d03e      	beq.n	8008584 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
        {
            fadeAnimationCounter++;
 8008506:	f8b0 0042 	ldrh.w	r0, [r0, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800850a:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
            fadeAnimationCounter++;
 800850e:	3001      	adds	r0, #1
 8008510:	b280      	uxth	r0, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8008512:	4298      	cmp	r0, r3
            fadeAnimationCounter++;
 8008514:	f8a4 0042 	strh.w	r0, [r4, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8008518:	d334      	bcc.n	8008584 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;

                int16_t deltaAlpha = (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 800851a:	f8b4 1048 	ldrh.w	r1, [r4, #72]	; 0x48
 800851e:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 8008522:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8008524:	1a52      	subs	r2, r2, r1
 8008526:	1ac0      	subs	r0, r0, r3
 8008528:	b212      	sxth	r2, r2
 800852a:	2100      	movs	r1, #0
 800852c:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8008530:	b280      	uxth	r0, r0
 8008532:	47a8      	blx	r5

                T::setAlpha(fadeAnimationStartAlpha + deltaAlpha);
 8008534:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8008538:	4418      	add	r0, r3
        alpha = newAlpha;
 800853a:	f884 0036 	strb.w	r0, [r4, #54]	; 0x36
                T::invalidate();
 800853e:	4620      	mov	r0, r4
 8008540:	f00b fe78 	bl	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8008544:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8008548:	f8b4 1046 	ldrh.w	r1, [r4, #70]	; 0x46
 800854c:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8008550:	440b      	add	r3, r1
 8008552:	429a      	cmp	r2, r3
 8008554:	d316      	bcc.n	8008584 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 8008556:	2300      	movs	r3, #0
 8008558:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
                    fadeAnimationDuration = 0;
 800855c:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
                    Application::getInstance()->unregisterTimerWidget(this);
 8008560:	f00a fec0 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 8008564:	4621      	mov	r1, r4
 8008566:	f00a fef5 	bl	8013354 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 800856a:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800856c:	b150      	cbz	r0, 8008584 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
 800856e:	6803      	ldr	r3, [r0, #0]
 8008570:	68db      	ldr	r3, [r3, #12]
 8008572:	4798      	blx	r3
 8008574:	b130      	cbz	r0, 8008584 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 8008576:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8008578:	6803      	ldr	r3, [r0, #0]
 800857a:	4621      	mov	r1, r4
 800857c:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 800857e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        fadeAnimationEndedCallback->execute(*this);
 8008582:	4718      	bx	r3
    }
 8008584:	bd70      	pop	{r4, r5, r6, pc}

08008586 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8008586:	b508      	push	{r3, lr}
        nextFadeAnimationStep();
 8008588:	f7ff ffb7 	bl	80084fa <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 800858c:	bd08      	pop	{r3, pc}

0800858e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 800858e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008590:	461d      	mov	r5, r3
        if (!fadeAnimationRunning)
 8008592:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8008596:	4604      	mov	r4, r0
 8008598:	460f      	mov	r7, r1
 800859a:	4616      	mov	r6, r2
        if (!fadeAnimationRunning)
 800859c:	b923      	cbnz	r3, 80085a8 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x1a>
            Application::getInstance()->registerTimerWidget(this);
 800859e:	f00a fea1 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 80085a2:	4621      	mov	r1, r4
 80085a4:	f00a fea4 	bl	80132f0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 80085a8:	2300      	movs	r3, #0
 80085aa:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
        fadeAnimationStartAlpha = T::getAlpha();
 80085ae:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 80085b2:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
        fadeAnimationDuration = duration;
 80085b6:	f8a4 6046 	strh.w	r6, [r4, #70]	; 0x46
        fadeAnimationRunning = true;
 80085ba:	2301      	movs	r3, #1
 80085bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 80085c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
        fadeAnimationEndAlpha = endAlpha;
 80085c2:	f8a4 704a 	strh.w	r7, [r4, #74]	; 0x4a
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 80085c6:	64e5      	str	r5, [r4, #76]	; 0x4c
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 80085c8:	b913      	cbnz	r3, 80085d0 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x42>
            nextFadeAnimationStep(); // Set end alpha and shut down
 80085ca:	4620      	mov	r0, r4
 80085cc:	f7ff ff95 	bl	80084fa <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 80085d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080085d4 <_ZN13WheelSelector18hideBottomElementsEi>:
{
 80085d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 80085d8:	f500 58c9 	add.w	r8, r0, #6432	; 0x1920
            texts[i].startFadeAnimation(255, 12);
 80085dc:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800866c <_ZN13WheelSelector18hideBottomElementsEi+0x98>
{
 80085e0:	4606      	mov	r6, r0
 80085e2:	460f      	mov	r7, r1
 80085e4:	f100 04a4 	add.w	r4, r0, #164	; 0xa4
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 80085e8:	f04f 0900 	mov.w	r9, #0
 80085ec:	f108 0804 	add.w	r8, r8, #4
 80085f0:	f8d8 5000 	ldr.w	r5, [r8]
 80085f4:	1bed      	subs	r5, r5, r7
 80085f6:	454d      	cmp	r5, r9
 80085f8:	dc1d      	bgt.n	8008636 <_ZN13WheelSelector18hideBottomElementsEi+0x62>
 80085fa:	2454      	movs	r4, #84	; 0x54
            texts[i].startFadeAnimation(0, 12);
 80085fc:	f8df 906c 	ldr.w	r9, [pc, #108]	; 800866c <_ZN13WheelSelector18hideBottomElementsEi+0x98>
 8008600:	fb04 6405 	mla	r4, r4, r5, r6
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 8008604:	f8d8 3000 	ldr.w	r3, [r8]
 8008608:	42ab      	cmp	r3, r5
 800860a:	dd29      	ble.n	8008660 <_ZN13WheelSelector18hideBottomElementsEi+0x8c>
        if (texts[i].getAlpha() == 255)
 800860c:	f894 30da 	ldrb.w	r3, [r4, #218]	; 0xda
 8008610:	2bff      	cmp	r3, #255	; 0xff
 8008612:	f104 00a4 	add.w	r0, r4, #164	; 0xa4
 8008616:	d10b      	bne.n	8008630 <_ZN13WheelSelector18hideBottomElementsEi+0x5c>
            texts[i].startFadeAnimation(0, 12);
 8008618:	464b      	mov	r3, r9
 800861a:	220c      	movs	r2, #12
 800861c:	2100      	movs	r1, #0
 800861e:	f7ff ffb6 	bl	800858e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(0, 12);
 8008622:	464b      	mov	r3, r9
 8008624:	220c      	movs	r2, #12
 8008626:	2100      	movs	r1, #0
 8008628:	f604 40ec 	addw	r0, r4, #3308	; 0xcec
 800862c:	f7ff ffaf 	bl	800858e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 8008630:	3501      	adds	r5, #1
 8008632:	3454      	adds	r4, #84	; 0x54
 8008634:	e7e6      	b.n	8008604 <_ZN13WheelSelector18hideBottomElementsEi+0x30>
        if (texts[i].getAlpha() != 255)
 8008636:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800863a:	2bff      	cmp	r3, #255	; 0xff
 800863c:	d00c      	beq.n	8008658 <_ZN13WheelSelector18hideBottomElementsEi+0x84>
            texts[i].startFadeAnimation(255, 12);
 800863e:	4653      	mov	r3, sl
 8008640:	220c      	movs	r2, #12
 8008642:	21ff      	movs	r1, #255	; 0xff
 8008644:	4620      	mov	r0, r4
 8008646:	f7ff ffa2 	bl	800858e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(255, 12);
 800864a:	4653      	mov	r3, sl
 800864c:	220c      	movs	r2, #12
 800864e:	21ff      	movs	r1, #255	; 0xff
 8008650:	f604 4048 	addw	r0, r4, #3144	; 0xc48
 8008654:	f7ff ff9b 	bl	800858e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 8008658:	f109 0901 	add.w	r9, r9, #1
 800865c:	3454      	adds	r4, #84	; 0x54
 800865e:	e7c7      	b.n	80085f0 <_ZN13WheelSelector18hideBottomElementsEi+0x1c>
    hiddenElements = numberOfElementsToHide;
 8008660:	f641 1330 	movw	r3, #6448	; 0x1930
 8008664:	50f7      	str	r7, [r6, r3]
}
 8008666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800866a:	bf00      	nop
 800866c:	08014bfd 	.word	0x08014bfd

08008670 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 8008670:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void nextMoveAnimationStep()
 8008674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008678:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 800867a:	2b00      	cmp	r3, #0
 800867c:	d040      	beq.n	8008700 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 800867e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 8008680:	8e05      	ldrh	r5, [r0, #48]	; 0x30
            moveAnimationCounter++;
 8008682:	3301      	adds	r3, #1
 8008684:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8008686:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8008688:	85c3      	strh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 800868a:	d339      	bcc.n	8008700 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800868c:	1b5b      	subs	r3, r3, r5
 800868e:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8008690:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8008692:	b29d      	uxth	r5, r3
 8008694:	8e83      	ldrh	r3, [r0, #52]	; 0x34
 8008696:	1ad2      	subs	r2, r2, r3
 8008698:	b212      	sxth	r2, r2
 800869a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800869c:	2100      	movs	r1, #0
 800869e:	4628      	mov	r0, r5
 80086a0:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80086a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80086a4:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
 80086a6:	6c27      	ldr	r7, [r4, #64]	; 0x40
 80086a8:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80086aa:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80086ac:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80086ae:	b212      	sxth	r2, r2
 80086b0:	2100      	movs	r1, #0
 80086b2:	4628      	mov	r0, r5
 80086b4:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 80086b6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80086b8:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 80086ba:	4402      	add	r2, r0
 80086bc:	4431      	add	r1, r6
 80086be:	b212      	sxth	r2, r2
 80086c0:	b209      	sxth	r1, r1
 80086c2:	4620      	mov	r0, r4
 80086c4:	f7f9 fccb 	bl	800205e <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 80086c8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80086ca:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 80086cc:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80086ce:	440b      	add	r3, r1
 80086d0:	429a      	cmp	r2, r3
 80086d2:	d315      	bcc.n	8008700 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 80086d4:	2300      	movs	r3, #0
 80086d6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
                    moveAnimationCounter = 0;
 80086da:	85e3      	strh	r3, [r4, #46]	; 0x2e
                    Application::getInstance()->unregisterTimerWidget(this);
 80086dc:	f00a fe02 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 80086e0:	4621      	mov	r1, r4
 80086e2:	f00a fe37 	bl	8013354 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 80086e6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80086e8:	b150      	cbz	r0, 8008700 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
 80086ea:	6803      	ldr	r3, [r0, #0]
 80086ec:	68db      	ldr	r3, [r3, #12]
 80086ee:	4798      	blx	r3
 80086f0:	b130      	cbz	r0, 8008700 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 80086f2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80086f4:	6803      	ldr	r3, [r0, #0]
 80086f6:	4621      	mov	r1, r4
 80086f8:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 80086fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 80086fe:	4718      	bx	r3
    }
 8008700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008704 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8008704:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8008706:	f7ff ffb3 	bl	8008670 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    }
 800870a:	bd08      	pop	{r3, pc}

0800870c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>:
{
 800870c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008710:	461e      	mov	r6, r3
        if (!moveAnimationRunning)
 8008712:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 8008716:	f9b0 a060 	ldrsh.w	sl, [r0, #96]	; 0x60
{
 800871a:	4604      	mov	r4, r0
 800871c:	460d      	mov	r5, r1
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 800871e:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 8008722:	fa0f f981 	sxth.w	r9, r1
 8008726:	b297      	uxth	r7, r2
 8008728:	b923      	cbnz	r3, 8008734 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x28>
            Application::getInstance()->registerTimerWidget(this);
 800872a:	f00a fddb 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 800872e:	4641      	mov	r1, r8
 8008730:	f00a fdde 	bl	80132f0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 8008734:	2300      	movs	r3, #0
 8008736:	f8a4 308a 	strh.w	r3, [r4, #138]	; 0x8a
        moveAnimationStartX = T::getX();
 800873a:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 800873e:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        moveAnimationStartY = T::getY();
 8008742:	f8b4 3062 	ldrh.w	r3, [r4, #98]	; 0x62
 8008746:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        moveAnimationDuration = duration;
 800874a:	f8a4 708e 	strh.w	r7, [r4, #142]	; 0x8e
        moveAnimationRunning = true;
 800874e:	2301      	movs	r3, #1
 8008750:	f884 3088 	strb.w	r3, [r4, #136]	; 0x88
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8008754:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
        moveAnimationEndX = endX;
 8008758:	f8a4 a094 	strh.w	sl, [r4, #148]	; 0x94
        moveAnimationYEquation = yProgressionEquation;
 800875c:	e9c4 6626 	strd	r6, r6, [r4, #152]	; 0x98
        moveAnimationEndY = endY;
 8008760:	f8a4 9096 	strh.w	r9, [r4, #150]	; 0x96
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8008764:	b913      	cbnz	r3, 800876c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x60>
            nextMoveAnimationStep(); // Set end position and shut down
 8008766:	4640      	mov	r0, r8
 8008768:	f7ff ff82 	bl	8008670 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
 800876c:	f641 1318 	movw	r3, #6424	; 0x1918
 8008770:	f9b4 9ca8 	ldrsh.w	r9, [r4, #3240]	; 0xca8
 8008774:	58e1      	ldr	r1, [r4, r3]
        if (!moveAnimationRunning)
 8008776:	f894 3cd0 	ldrb.w	r3, [r4, #3280]	; 0xcd0
 800877a:	1a6d      	subs	r5, r5, r1
 800877c:	f604 48a4 	addw	r8, r4, #3236	; 0xca4
 8008780:	b22d      	sxth	r5, r5
 8008782:	b923      	cbnz	r3, 800878e <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x82>
            Application::getInstance()->registerTimerWidget(this);
 8008784:	f00a fdae 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 8008788:	4641      	mov	r1, r8
 800878a:	f00a fdb1 	bl	80132f0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 800878e:	2300      	movs	r3, #0
 8008790:	f8a4 3cd2 	strh.w	r3, [r4, #3282]	; 0xcd2
        moveAnimationStartX = T::getX();
 8008794:	f8b4 3ca8 	ldrh.w	r3, [r4, #3240]	; 0xca8
 8008798:	f8a4 3cd8 	strh.w	r3, [r4, #3288]	; 0xcd8
        moveAnimationStartY = T::getY();
 800879c:	f8b4 3caa 	ldrh.w	r3, [r4, #3242]	; 0xcaa
 80087a0:	f8a4 3cda 	strh.w	r3, [r4, #3290]	; 0xcda
        moveAnimationDuration = duration;
 80087a4:	f8a4 7cd6 	strh.w	r7, [r4, #3286]	; 0xcd6
        moveAnimationRunning = true;
 80087a8:	2301      	movs	r3, #1
 80087aa:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 80087ae:	f8d4 3cd4 	ldr.w	r3, [r4, #3284]	; 0xcd4
        moveAnimationEndX = endX;
 80087b2:	f8a4 9cdc 	strh.w	r9, [r4, #3292]	; 0xcdc
        moveAnimationEndY = endY;
 80087b6:	f8a4 5cde 	strh.w	r5, [r4, #3294]	; 0xcde
        moveAnimationXEquation = xProgressionEquation;
 80087ba:	f8c4 6ce0 	str.w	r6, [r4, #3296]	; 0xce0
        moveAnimationYEquation = yProgressionEquation;
 80087be:	f8c4 6ce4 	str.w	r6, [r4, #3300]	; 0xce4
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 80087c2:	b913      	cbnz	r3, 80087ca <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0xbe>
            nextMoveAnimationStep(); // Set end position and shut down
 80087c4:	4640      	mov	r0, r8
 80087c6:	f7ff ff53 	bl	8008670 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
}
 80087ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080087d0 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>:
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80087d0:	f641 132c 	movw	r3, #6444	; 0x192c
{
 80087d4:	b570      	push	{r4, r5, r6, lr}
    int accumHeight = textsHeight * index + textsHeight / 2;
 80087d6:	58c3      	ldr	r3, [r0, r3]
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80087d8:	f9b0 5036 	ldrsh.w	r5, [r0, #54]	; 0x36
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 80087dc:	fb03 5111 	mls	r1, r3, r1, r5
{
 80087e0:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 80087e2:	f7ff fe28 	bl	8008436 <_ZN13WheelSelector21calculateSnapPositionEi>
 80087e6:	4b03      	ldr	r3, [pc, #12]	; (80087f4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE+0x24>)
 80087e8:	4601      	mov	r1, r0
 80087ea:	4620      	mov	r0, r4
}
 80087ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 80087f0:	f7ff bf8c 	b.w	800870c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 80087f4:	08014ad5 	.word	0x08014ad5

080087f8 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE>:
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 80087f8:	790b      	ldrb	r3, [r1, #4]
 80087fa:	2b01      	cmp	r3, #1
{
 80087fc:	b513      	push	{r0, r1, r4, lr}
 80087fe:	4604      	mov	r4, r0
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 8008800:	d121      	bne.n	8008846 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x4e>
        currentAnimationState = ANIMATING_GESTURE;
 8008802:	2300      	movs	r3, #0
        int newYPosition = textContainer.getY() + delta;
 8008804:	f9b0 2062 	ldrsh.w	r2, [r0, #98]	; 0x62
        currentAnimationState = ANIMATING_GESTURE;
 8008808:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        int newYPosition = textContainer.getY() + delta;
 800880c:	88cb      	ldrh	r3, [r1, #6]
 800880e:	2105      	movs	r1, #5
 8008810:	fb13 2301 	smlabb	r3, r3, r1, r2
        adjustForBoundaries(newYPosition);
 8008814:	a901      	add	r1, sp, #4
        int newYPosition = textContainer.getY() + delta;
 8008816:	9301      	str	r3, [sp, #4]
        adjustForBoundaries(newYPosition);
 8008818:	f7ff fe2a 	bl	8008470 <_ZN13WheelSelector19adjustForBoundariesERi>
        int distanceToMove = newYPosition - textContainer.getY();
 800881c:	9901      	ldr	r1, [sp, #4]
 800881e:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8008822:	1a8a      	subs	r2, r1, r2
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 8008824:	2a00      	cmp	r2, #0
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 8008826:	4620      	mov	r0, r4
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 8008828:	bfb8      	it	lt
 800882a:	4252      	neglt	r2, r2
        int duration = distanceToMoveABS / 10;
 800882c:	230a      	movs	r3, #10
 800882e:	fbb2 f2f3 	udiv	r2, r2, r3
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 8008832:	f7ff fe00 	bl	8008436 <_ZN13WheelSelector21calculateSnapPositionEi>
 8008836:	2a03      	cmp	r2, #3
 8008838:	4601      	mov	r1, r0
 800883a:	4b04      	ldr	r3, [pc, #16]	; (800884c <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x54>)
 800883c:	bfb8      	it	lt
 800883e:	2203      	movlt	r2, #3
 8008840:	4620      	mov	r0, r4
 8008842:	f7ff ff63 	bl	800870c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
}
 8008846:	b002      	add	sp, #8
 8008848:	bd10      	pop	{r4, pc}
 800884a:	bf00      	nop
 800884c:	08014ad5 	.word	0x08014ad5

08008850 <_ZN13WheelSelector4snapEv>:
{
 8008850:	b510      	push	{r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 8008852:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
{
 8008856:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 8008858:	f7ff fded 	bl	8008436 <_ZN13WheelSelector21calculateSnapPositionEi>
 800885c:	4b03      	ldr	r3, [pc, #12]	; (800886c <_ZN13WheelSelector4snapEv+0x1c>)
 800885e:	4601      	mov	r1, r0
 8008860:	2218      	movs	r2, #24
 8008862:	4620      	mov	r0, r4
}
 8008864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 8008868:	f7ff bf50 	b.w	800870c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 800886c:	08014b51 	.word	0x08014b51

08008870 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED)
 8008870:	790b      	ldrb	r3, [r1, #4]
{
 8008872:	b570      	push	{r4, r5, r6, lr}
 8008874:	4604      	mov	r4, r0
 8008876:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED)
 8008878:	b9c3      	cbnz	r3, 80088ac <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3c>
        if (currentAnimationState != NO_ANIMATION)
 800887a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800887e:	2b03      	cmp	r3, #3
 8008880:	d006      	beq.n	8008890 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x20>
            textContainer.cancelMoveAnimation();
 8008882:	305c      	adds	r0, #92	; 0x5c
 8008884:	f7ff fe2b 	bl	80084de <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
            centerTextContainer.cancelMoveAnimation();
 8008888:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 800888c:	f7ff fe27 	bl	80084de <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
        xClick = evt.getX();
 8008890:	f641 1348 	movw	r3, #6472	; 0x1948
 8008894:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8008898:	52e2      	strh	r2, [r4, r3]
        yClick = evt.getY();
 800889a:	f641 134a 	movw	r3, #6474	; 0x194a
 800889e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80088a2:	52e2      	strh	r2, [r4, r3]
        currentAnimationState = NO_ANIMATION;
 80088a4:	2303      	movs	r3, #3
 80088a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 80088aa:	bd70      	pop	{r4, r5, r6, pc}
    else if (evt.getType() == ClickEvent::RELEASED)
 80088ac:	2b01      	cmp	r3, #1
 80088ae:	d1fc      	bne.n	80088aa <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
        if ((currentAnimationState == NO_ANIMATION) ||
 80088b0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80088b4:	2b03      	cmp	r3, #3
 80088b6:	d017      	beq.n	80088e8 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x78>
 80088b8:	2b02      	cmp	r3, #2
 80088ba:	d1f6      	bne.n	80088aa <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                (currentAnimationState == ANIMATING_DRAG && abs(xClick - evt.getX()) < 10 && abs(yClick - evt.getY()) < 10))
 80088bc:	f641 1348 	movw	r3, #6472	; 0x1948
 80088c0:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 80088c4:	5ec3      	ldrsh	r3, [r0, r3]
 80088c6:	1a9b      	subs	r3, r3, r2
 80088c8:	2b00      	cmp	r3, #0
 80088ca:	bfb8      	it	lt
 80088cc:	425b      	neglt	r3, r3
 80088ce:	2b09      	cmp	r3, #9
 80088d0:	dc2d      	bgt.n	800892e <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
 80088d2:	f641 134a 	movw	r3, #6474	; 0x194a
 80088d6:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
 80088da:	5ec3      	ldrsh	r3, [r0, r3]
 80088dc:	1a9b      	subs	r3, r3, r2
 80088de:	2b00      	cmp	r3, #0
 80088e0:	bfb8      	it	lt
 80088e2:	425b      	neglt	r3, r3
 80088e4:	2b09      	cmp	r3, #9
 80088e6:	dc22      	bgt.n	800892e <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80088e8:	f641 132c 	movw	r3, #6444	; 0x192c
 80088ec:	f9b4 5036 	ldrsh.w	r5, [r4, #54]	; 0x36
 80088f0:	58e3      	ldr	r3, [r4, r3]
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 80088f2:	f9b4 1062 	ldrsh.w	r1, [r4, #98]	; 0x62
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80088f6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80088fa:	eb05 0563 	add.w	r5, r5, r3, asr #1
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 80088fe:	f641 134a 	movw	r3, #6474	; 0x194a
 8008902:	4620      	mov	r0, r4
 8008904:	5ee3      	ldrsh	r3, [r4, r3]
 8008906:	1b5b      	subs	r3, r3, r5
 8008908:	1ac9      	subs	r1, r1, r3
 800890a:	f7ff fd94 	bl	8008436 <_ZN13WheelSelector21calculateSnapPositionEi>
 800890e:	4601      	mov	r1, r0
            if (newYPosition + getTextContainerVisibleHeight() < centerTextCenter ||
 8008910:	4620      	mov	r0, r4
 8008912:	f7ff fda0 	bl	8008456 <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 8008916:	4408      	add	r0, r1
 8008918:	4285      	cmp	r5, r0
 800891a:	dcc6      	bgt.n	80088aa <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
 800891c:	428d      	cmp	r5, r1
 800891e:	dbc4      	blt.n	80088aa <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 8008920:	4620      	mov	r0, r4
 8008922:	4b05      	ldr	r3, [pc, #20]	; (8008938 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xc8>)
}
 8008924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 8008928:	221a      	movs	r2, #26
 800892a:	f7ff beef 	b.w	800870c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
            snap();
 800892e:	4620      	mov	r0, r4
}
 8008930:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            snap();
 8008934:	f7ff bf8c 	b.w	8008850 <_ZN13WheelSelector4snapEv>
 8008938:	08014ad5 	.word	0x08014ad5

0800893c <gmtime>:
#include "time.h"

extern struct tm __tm_store;

struct tm * gmtime(const time_p * timeptr)
{
 800893c:	b510      	push	{r4, lr}
	gmtime_r(timeptr, &__tm_store);
 800893e:	4c03      	ldr	r4, [pc, #12]	; (800894c <gmtime+0x10>)
 8008940:	4621      	mov	r1, r4
 8008942:	f000 f805 	bl	8008950 <gmtime_r>
	return &__tm_store;
}
 8008946:	4620      	mov	r0, r4
 8008948:	bd10      	pop	{r4, pc}
 800894a:	bf00      	nop
 800894c:	20020580 	.word	0x20020580

08008950 <gmtime_r>:

#include "time.h"

void
gmtime_r(const time_p * timer, struct tm * timeptr)
{
 8008950:	b530      	push	{r4, r5, lr}
    ldiv_t          lresult;
    div_t           result;
    uint16_t        days, n, leapyear, years;

    /* break down timer into whole and fractional parts of 1 day */
    days = *timer / 86400UL;
 8008952:	4b44      	ldr	r3, [pc, #272]	; (8008a64 <gmtime_r+0x114>)
{
 8008954:	460d      	mov	r5, r1
    days = *timer / 86400UL;
 8008956:	6801      	ldr	r1, [r0, #0]
 8008958:	fbb1 f4f3 	udiv	r4, r1, r3
{
 800895c:	b085      	sub	sp, #20
    fract = *timer % 86400UL;

    /*
            Extract hour, minute, and second from the fractional day
        */
    lresult = ldiv(fract, 60L);
 800895e:	fb03 1114 	mls	r1, r3, r4, r1
 8008962:	223c      	movs	r2, #60	; 0x3c
 8008964:	4668      	mov	r0, sp
 8008966:	f01a fd3d 	bl	80233e4 <ldiv>
    timeptr->tm_sec = lresult.rem;
 800896a:	9b01      	ldr	r3, [sp, #4]
    result = div(lresult.quot, 60);
 800896c:	9900      	ldr	r1, [sp, #0]
    timeptr->tm_sec = lresult.rem;
 800896e:	702b      	strb	r3, [r5, #0]
    result = div(lresult.quot, 60);
 8008970:	223c      	movs	r2, #60	; 0x3c
 8008972:	a802      	add	r0, sp, #8
 8008974:	f01a fafa 	bl	8022f6c <div>
    timeptr->tm_min = result.rem;
 8008978:	9b03      	ldr	r3, [sp, #12]
 800897a:	706b      	strb	r3, [r5, #1]
    timeptr->tm_hour = result.quot;
 800897c:	9b02      	ldr	r3, [sp, #8]
 800897e:	70ab      	strb	r3, [r5, #2]

    /* Determine day of week ( the epoch was a Saturday ) */
    n = days + SATURDAY;
 8008980:	1da3      	adds	r3, r4, #6
 8008982:	b29b      	uxth	r3, r3
    n %= 7;
 8008984:	2207      	movs	r2, #7
 8008986:	fbb3 f2f2 	udiv	r2, r3, r2
 800898a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 800898e:	1a9b      	subs	r3, r3, r2
    timeptr->tm_wday = n;
 8008990:	712b      	strb	r3, [r5, #4]
        * Using this property, we can easily 'map' the time stamp into the leap cycles, quickly
        * deriving the year and day of year, along with the fact of whether it is a leap year.
        */

    /* map into a 100 year cycle */
    lresult = ldiv((long) days, 36525L);
 8008992:	4621      	mov	r1, r4
 8008994:	f648 62ad 	movw	r2, #36525	; 0x8ead
 8008998:	4668      	mov	r0, sp
 800899a:	f01a fd23 	bl	80233e4 <ldiv>
    years = 100 * lresult.quot;
 800899e:	9c00      	ldr	r4, [sp, #0]

    /* map into a 4 year cycle */
    lresult = ldiv(lresult.rem, 1461L);
 80089a0:	9901      	ldr	r1, [sp, #4]
    years = 100 * lresult.quot;
 80089a2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80089a6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    lresult = ldiv(lresult.rem, 1461L);
 80089aa:	f240 52b5 	movw	r2, #1461	; 0x5b5
 80089ae:	4668      	mov	r0, sp
 80089b0:	f01a fd18 	bl	80233e4 <ldiv>
    years = 100 * lresult.quot;
 80089b4:	00a4      	lsls	r4, r4, #2
    years += 4 * lresult.quot;
 80089b6:	9b00      	ldr	r3, [sp, #0]
    days = lresult.rem;
 80089b8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
    years = 100 * lresult.quot;
 80089bc:	b2a4      	uxth	r4, r4
    years += 4 * lresult.quot;
 80089be:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80089c2:	b2a4      	uxth	r4, r4
    if (years > 100)
 80089c4:	2c64      	cmp	r4, #100	; 0x64
 80089c6:	d92b      	bls.n	8008a20 <gmtime_r+0xd0>
        days++;
 80089c8:	3101      	adds	r1, #1
 80089ca:	b289      	uxth	r1, r1

    /*
         * 'years' is now at the first year of a 4 year leap cycle, which will always be a leap year,
         * unless it is 100. 'days' is now an index into that cycle.
         */
    leapyear = 1;
 80089cc:	2301      	movs	r3, #1
    if (years == 100)
        leapyear = 0;

    /* compute length, in days, of first year of this cycle */
    n = 364 + leapyear;
 80089ce:	2b00      	cmp	r3, #0
 80089d0:	f240 126d 	movw	r2, #365	; 0x16d

    /*
     * if the number of days remaining is greater than the length of the
     * first year, we make one more division.
     */
    if (days > n) {
 80089d4:	bf14      	ite	ne
 80089d6:	4610      	movne	r0, r2
 80089d8:	f44f 70b6 	moveq.w	r0, #364	; 0x16c
 80089dc:	4288      	cmp	r0, r1
 80089de:	d20a      	bcs.n	80089f6 <gmtime_r+0xa6>
        days -= leapyear;
 80089e0:	1ac9      	subs	r1, r1, r3
        leapyear = 0;
        result = div(days, 365);
 80089e2:	b289      	uxth	r1, r1
 80089e4:	a802      	add	r0, sp, #8
 80089e6:	f01a fac1 	bl	8022f6c <div>
        years += result.quot;
 80089ea:	9b02      	ldr	r3, [sp, #8]
        days = result.rem;
 80089ec:	f8bd 100c 	ldrh.w	r1, [sp, #12]
        years += result.quot;
 80089f0:	441c      	add	r4, r3
 80089f2:	b2a4      	uxth	r4, r4
        leapyear = 0;
 80089f4:	2300      	movs	r3, #0
    /*
            Given the year, day of year, and leap year indicator, we can break down the
            month and day of month. If the day of year is less than 59 (or 60 if a leap year), then
            we handle the Jan/Feb month pair as an exception.
        */
    n = 59 + leapyear;
 80089f6:	333b      	adds	r3, #59	; 0x3b
    timeptr->tm_year = 100 + years;
 80089f8:	3464      	adds	r4, #100	; 0x64
    if (days < n) {
 80089fa:	4299      	cmp	r1, r3
    timeptr->tm_year = 100 + years;
 80089fc:	80ec      	strh	r4, [r5, #6]
    timeptr->tm_yday = days;
 80089fe:	8129      	strh	r1, [r5, #8]
    if (days < n) {
 8008a00:	d212      	bcs.n	8008a28 <gmtime_r+0xd8>
        /* special case: Jan/Feb month pair */
        result = div(days, 31);
 8008a02:	221f      	movs	r2, #31
 8008a04:	a802      	add	r0, sp, #8
 8008a06:	f01a fab1 	bl	8022f6c <div>
        timeptr->tm_mon = result.quot;
 8008a0a:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
        timeptr->tm_mon += result.quot * 2;

        /* map into a month */
        result = div(result.rem, 31);
        timeptr->tm_mon += result.quot;
 8008a0c:	716b      	strb	r3, [r5, #5]
        timeptr->tm_mday = result.rem;
 8008a0e:	9b03      	ldr	r3, [sp, #12]
 8008a10:	70eb      	strb	r3, [r5, #3]
    }

    /*
            Cleanup and return
        */
    timeptr->tm_isdst = 0;  /* gmt is never in DST */
 8008a12:	2300      	movs	r3, #0
 8008a14:	816b      	strh	r3, [r5, #10]
    timeptr->tm_mday++; /* tm_mday is 1 based */
 8008a16:	78eb      	ldrb	r3, [r5, #3]
 8008a18:	3301      	adds	r3, #1
 8008a1a:	70eb      	strb	r3, [r5, #3]

}
 8008a1c:	b005      	add	sp, #20
 8008a1e:	bd30      	pop	{r4, r5, pc}
        leapyear = 0;
 8008a20:	bf14      	ite	ne
 8008a22:	2301      	movne	r3, #1
 8008a24:	2300      	moveq	r3, #0
 8008a26:	e7d2      	b.n	80089ce <gmtime_r+0x7e>
        days -= n;
 8008a28:	1ac9      	subs	r1, r1, r3
        result = div(days, 153);
 8008a2a:	2299      	movs	r2, #153	; 0x99
 8008a2c:	b289      	uxth	r1, r1
 8008a2e:	a802      	add	r0, sp, #8
 8008a30:	f01a fa9c 	bl	8022f6c <div>
        timeptr->tm_mon = 2 + result.quot * 5;
 8008a34:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
 8008a36:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon = 2 + result.quot * 5;
 8008a38:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008a3c:	3302      	adds	r3, #2
 8008a3e:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 61);
 8008a40:	223d      	movs	r2, #61	; 0x3d
 8008a42:	a802      	add	r0, sp, #8
 8008a44:	f01a fa92 	bl	8022f6c <div>
        timeptr->tm_mon += result.quot * 2;
 8008a48:	796b      	ldrb	r3, [r5, #5]
 8008a4a:	9a02      	ldr	r2, [sp, #8]
        result = div(result.rem, 31);
 8008a4c:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon += result.quot * 2;
 8008a4e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8008a52:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 31);
 8008a54:	221f      	movs	r2, #31
 8008a56:	a802      	add	r0, sp, #8
 8008a58:	f01a fa88 	bl	8022f6c <div>
        timeptr->tm_mon += result.quot;
 8008a5c:	796b      	ldrb	r3, [r5, #5]
 8008a5e:	9a02      	ldr	r2, [sp, #8]
 8008a60:	4413      	add	r3, r2
 8008a62:	e7d3      	b.n	8008a0c <gmtime_r+0xbc>
 8008a64:	00015180 	.word	0x00015180

08008a68 <mk_gmtime>:

#include "time.h"

time_p
mk_gmtime(const struct tm * timeptr)
{
 8008a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    /*
        Determine elapsed whole days since the epoch to the beginning of this year. Since our epoch is
        at a conjunction of the leap cycles, we can do this rather quickly.
        */
    n = timeptr->tm_year - 100;
 8008a6a:	88c7      	ldrh	r7, [r0, #6]
 8008a6c:	f1a7 0364 	sub.w	r3, r7, #100	; 0x64
 8008a70:	b21b      	sxth	r3, r3
{
 8008a72:	4605      	mov	r5, r0
    leaps = 0;
    if (n) {
 8008a74:	b1cb      	cbz	r3, 8008aaa <mk_gmtime+0x42>
        m = n - 1;
 8008a76:	f1a7 0465 	sub.w	r4, r7, #101	; 0x65
 8008a7a:	b224      	sxth	r4, r4
        leaps = m / 4;
 8008a7c:	2c00      	cmp	r4, #0
 8008a7e:	4621      	mov	r1, r4
 8008a80:	bfb8      	it	lt
 8008a82:	1ce1      	addlt	r1, r4, #3
 8008a84:	108a      	asrs	r2, r1, #2
        leaps -= m / (100);
        leaps++;
 8008a86:	3201      	adds	r2, #1
        leaps -= m / (100);
 8008a88:	2664      	movs	r6, #100	; 0x64
 8008a8a:	fb94 f4f6 	sdiv	r4, r4, r6
        leaps++;
 8008a8e:	1b12      	subs	r2, r2, r4
 8008a90:	b212      	sxth	r2, r2
    }
    tmp = 365UL * n + leaps;
 8008a92:	f240 166d 	movw	r6, #365	; 0x16d
 8008a96:	fb13 2606 	smlabb	r6, r3, r6, r2
                account for a 'phase change' between July and August (153 days after March 1).
            */
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */

    /* handle Jan/Feb as a special case */
    if (timeptr->tm_mon < 2) {
 8008a9a:	796b      	ldrb	r3, [r5, #5]
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 8008a9c:	78ec      	ldrb	r4, [r5, #3]
    if (timeptr->tm_mon < 2) {
 8008a9e:	2b01      	cmp	r3, #1
 8008aa0:	d816      	bhi.n	8008ad0 <mk_gmtime+0x68>
        if (timeptr->tm_mon)
 8008aa2:	b923      	cbnz	r3, 8008aae <mk_gmtime+0x46>
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 8008aa4:	1e63      	subs	r3, r4, #1
        /*
         * if n is odd, we are in the second half of the
         * month pair
         */
        if (n & 1)
            d += 31;
 8008aa6:	b21b      	sxth	r3, r3
 8008aa8:	e003      	b.n	8008ab2 <mk_gmtime+0x4a>
    leaps = 0;
 8008aaa:	461a      	mov	r2, r3
 8008aac:	e7f1      	b.n	8008a92 <mk_gmtime+0x2a>
            d += 31;
 8008aae:	f104 031e 	add.w	r3, r4, #30
    tmp += d;
    tmp *= ONE_DAY;
    ret = tmp;

    /* compute 'fractional' day */
    tmp = timeptr->tm_hour;
 8008ab2:	78a8      	ldrb	r0, [r5, #2]
    tmp *= ONE_HOUR;
    tmp += timeptr->tm_min * 60UL;
 8008ab4:	7869      	ldrb	r1, [r5, #1]
    tmp *= ONE_HOUR;
 8008ab6:	f44f 6261 	mov.w	r2, #3600	; 0xe10
 8008aba:	4342      	muls	r2, r0
    tmp += timeptr->tm_min * 60UL;
 8008abc:	203c      	movs	r0, #60	; 0x3c
 8008abe:	fb10 2001 	smlabb	r0, r0, r1, r2
    tmp += timeptr->tm_sec;
 8008ac2:	782a      	ldrb	r2, [r5, #0]
 8008ac4:	4402      	add	r2, r0

    ret += tmp;

    return ret;
}
 8008ac6:	4816      	ldr	r0, [pc, #88]	; (8008b20 <mk_gmtime+0xb8>)
    tmp += d;
 8008ac8:	4433      	add	r3, r6
}
 8008aca:	fb00 2003 	mla	r0, r0, r3, r2
 8008ace:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        n = 59 + is_leap_year(timeptr->tm_year + 1900);
 8008ad0:	f207 706c 	addw	r0, r7, #1900	; 0x76c
 8008ad4:	b280      	uxth	r0, r0
 8008ad6:	f006 f97b 	bl	800edd0 <is_leap_year>
        d += n;
 8008ada:	f104 033a 	add.w	r3, r4, #58	; 0x3a
 8008ade:	181c      	adds	r4, r3, r0
        n = timeptr->tm_mon - MARCH;
 8008ae0:	796b      	ldrb	r3, [r5, #5]
 8008ae2:	3b02      	subs	r3, #2
        if (n > (JULY - MARCH))
 8008ae4:	2b04      	cmp	r3, #4
        n = timeptr->tm_mon - MARCH;
 8008ae6:	b21a      	sxth	r2, r3
        n %= 5;
 8008ae8:	f04f 0305 	mov.w	r3, #5
 8008aec:	fb92 f3f3 	sdiv	r3, r2, r3
 8008af0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008af4:	eba2 0203 	sub.w	r2, r2, r3
        m = n / 2;
 8008af8:	eb02 73d2 	add.w	r3, r2, r2, lsr #31
        d += n;
 8008afc:	b2a4      	uxth	r4, r4
        m = n / 2;
 8008afe:	ea4f 0363 	mov.w	r3, r3, asr #1
            d += 153;
 8008b02:	bfc8      	it	gt
 8008b04:	3499      	addgt	r4, #153	; 0x99
        m *= 61;
 8008b06:	ebc3 1103 	rsb	r1, r3, r3, lsl #4
            d += 153;
 8008b0a:	bfc8      	it	gt
 8008b0c:	b2a4      	uxthgt	r4, r4
        m *= 61;
 8008b0e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
        d += m;
 8008b12:	4423      	add	r3, r4
 8008b14:	b29b      	uxth	r3, r3
        if (n & 1)
 8008b16:	07d2      	lsls	r2, r2, #31
            d += 31;
 8008b18:	bf48      	it	mi
 8008b1a:	331f      	addmi	r3, #31
 8008b1c:	e7c3      	b.n	8008aa6 <mk_gmtime+0x3e>
 8008b1e:	bf00      	nop
 8008b20:	00015180 	.word	0x00015180

08008b24 <mktime>:

extern int16_t      (*__dst_ptr) (const time_p *, int32_t *);

time_p
mktime(struct tm * timeptr)
{
 8008b24:	b513      	push	{r0, r1, r4, lr}
 8008b26:	4604      	mov	r4, r0
	time_p          ret;

	ret = mk_gmtime(timeptr);
 8008b28:	f7ff ff9e 	bl	8008a68 <mk_gmtime>

	if (timeptr->tm_isdst < 0) {
 8008b2c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
	ret = mk_gmtime(timeptr);
 8008b30:	9001      	str	r0, [sp, #4]
	if (timeptr->tm_isdst < 0) {
 8008b32:	2b00      	cmp	r3, #0
 8008b34:	da06      	bge.n	8008b44 <mktime+0x20>
		if (__dst_ptr)
 8008b36:	4b0d      	ldr	r3, [pc, #52]	; (8008b6c <mktime+0x48>)
 8008b38:	681b      	ldr	r3, [r3, #0]
 8008b3a:	b11b      	cbz	r3, 8008b44 <mktime+0x20>
			timeptr->tm_isdst = __dst_ptr(&ret, &__utc_offset);
 8008b3c:	490c      	ldr	r1, [pc, #48]	; (8008b70 <mktime+0x4c>)
 8008b3e:	a801      	add	r0, sp, #4
 8008b40:	4798      	blx	r3
 8008b42:	8160      	strh	r0, [r4, #10]
	}
	if (timeptr->tm_isdst > 0)
 8008b44:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8008b48:	2a00      	cmp	r2, #0
		ret -= timeptr->tm_isdst;
 8008b4a:	bfc2      	ittt	gt
 8008b4c:	9b01      	ldrgt	r3, [sp, #4]
 8008b4e:	1a9b      	subgt	r3, r3, r2
 8008b50:	9301      	strgt	r3, [sp, #4]

	ret -= __utc_offset;
 8008b52:	4b07      	ldr	r3, [pc, #28]	; (8008b70 <mktime+0x4c>)
 8008b54:	681a      	ldr	r2, [r3, #0]
 8008b56:	9b01      	ldr	r3, [sp, #4]

	localtime_r(&ret, timeptr);
 8008b58:	a801      	add	r0, sp, #4
	ret -= __utc_offset;
 8008b5a:	1a9b      	subs	r3, r3, r2
	localtime_r(&ret, timeptr);
 8008b5c:	4621      	mov	r1, r4
	ret -= __utc_offset;
 8008b5e:	9301      	str	r3, [sp, #4]
	localtime_r(&ret, timeptr);
 8008b60:	f01a fb4a 	bl	80231f8 <localtime_r>

	return ret;
}
 8008b64:	9801      	ldr	r0, [sp, #4]
 8008b66:	b002      	add	sp, #8
 8008b68:	bd10      	pop	{r4, pc}
 8008b6a:	bf00      	nop
 8008b6c:	2002057c 	.word	0x2002057c
 8008b70:	2002058c 	.word	0x2002058c

08008b74 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8008b74:	4770      	bx	lr

08008b76 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8008b76:	2000      	movs	r0, #0
 8008b78:	4770      	bx	lr

08008b7a <ft6x06_ReadID>:
{
 8008b7a:	b510      	push	{r4, lr}
 8008b7c:	4604      	mov	r4, r0
  TS_IO_Init();
 8008b7e:	f000 fb7d 	bl	800927c <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8008b82:	21a8      	movs	r1, #168	; 0xa8
 8008b84:	b2e0      	uxtb	r0, r4
 8008b86:	f000 fb93 	bl	80092b0 <TS_IO_Read>
}
 8008b8a:	b280      	uxth	r0, r0
 8008b8c:	bd10      	pop	{r4, pc}
	...

08008b90 <ft6x06_TS_DetectTouch>:
{
 8008b90:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8008b92:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8008b94:	2102      	movs	r1, #2
 8008b96:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8008b98:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8008b9c:	f000 fb88 	bl	80092b0 <TS_IO_Read>
 8008ba0:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8008ba4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8008ba8:	f003 030f 	and.w	r3, r3, #15
 8008bac:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8008bb0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8008bb4:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8008bb6:	bf88      	it	hi
 8008bb8:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8008bbc:	4b04      	ldr	r3, [pc, #16]	; (8008bd0 <ft6x06_TS_DetectTouch+0x40>)
 8008bbe:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8008bc2:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8008bc6:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8008bc8:	2200      	movs	r2, #0
 8008bca:	709a      	strb	r2, [r3, #2]
}
 8008bcc:	b002      	add	sp, #8
 8008bce:	bd10      	pop	{r4, pc}
 8008bd0:	2000f116 	.word	0x2000f116

08008bd4 <ft6x06_TS_GetXY>:
{
 8008bd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8008bd6:	4c15      	ldr	r4, [pc, #84]	; (8008c2c <ft6x06_TS_GetXY+0x58>)
{
 8008bd8:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8008bda:	78a3      	ldrb	r3, [r4, #2]
 8008bdc:	7862      	ldrb	r2, [r4, #1]
 8008bde:	429a      	cmp	r2, r3
{
 8008be0:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8008be2:	d91f      	bls.n	8008c24 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8008be4:	b303      	cbz	r3, 8008c28 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8008be6:	2b01      	cmp	r3, #1
 8008be8:	bf14      	ite	ne
 8008bea:	2100      	movne	r1, #0
 8008bec:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8008bee:	2304      	movs	r3, #4
 8008bf0:	eb0d 0203 	add.w	r2, sp, r3
 8008bf4:	b2c0      	uxtb	r0, r0
 8008bf6:	f000 fb77 	bl	80092e8 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8008bfa:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8008bfe:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8008c02:	021b      	lsls	r3, r3, #8
 8008c04:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8008c08:	4313      	orrs	r3, r2
 8008c0a:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8008c0c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8008c10:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8008c14:	021b      	lsls	r3, r3, #8
 8008c16:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8008c1a:	4313      	orrs	r3, r2
 8008c1c:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8008c1e:	78a3      	ldrb	r3, [r4, #2]
 8008c20:	3301      	adds	r3, #1
 8008c22:	70a3      	strb	r3, [r4, #2]
}
 8008c24:	b002      	add	sp, #8
 8008c26:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8008c28:	2103      	movs	r1, #3
 8008c2a:	e7e0      	b.n	8008bee <ft6x06_TS_GetXY+0x1a>
 8008c2c:	2000f116 	.word	0x2000f116

08008c30 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8008c30:	2201      	movs	r2, #1
 8008c32:	21a4      	movs	r1, #164	; 0xa4
 8008c34:	b2c0      	uxtb	r0, r0
 8008c36:	f000 bb23 	b.w	8009280 <TS_IO_Write>

08008c3a <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8008c3a:	2200      	movs	r2, #0
 8008c3c:	21a4      	movs	r1, #164	; 0xa4
 8008c3e:	b2c0      	uxtb	r0, r0
 8008c40:	f000 bb1e 	b.w	8009280 <TS_IO_Write>

08008c44 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8008c44:	f7ff bff9 	b.w	8008c3a <ft6x06_TS_DisableIT>

08008c48 <ft6x06_TS_ClearIT>:
 8008c48:	4770      	bx	lr
	...

08008c4c <ft6x06_Init>:
{  
 8008c4c:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8008c4e:	4b09      	ldr	r3, [pc, #36]	; (8008c74 <ft6x06_Init+0x28>)
 8008c50:	781a      	ldrb	r2, [r3, #0]
 8008c52:	4290      	cmp	r0, r2
 8008c54:	d00a      	beq.n	8008c6c <ft6x06_Init+0x20>
 8008c56:	7859      	ldrb	r1, [r3, #1]
 8008c58:	4288      	cmp	r0, r1
 8008c5a:	d007      	beq.n	8008c6c <ft6x06_Init+0x20>
 8008c5c:	b10a      	cbz	r2, 8008c62 <ft6x06_Init+0x16>
 8008c5e:	b929      	cbnz	r1, 8008c6c <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8008c60:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8008c62:	5498      	strb	r0, [r3, r2]
}
 8008c64:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8008c68:	f000 bb08 	b.w	800927c <TS_IO_Init>
}
 8008c6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008c70:	4770      	bx	lr
 8008c72:	bf00      	nop
 8008c74:	2000f114 	.word	0x2000f114

08008c78 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8008c78:	b538      	push	{r3, r4, r5, lr}
 8008c7a:	4604      	mov	r4, r0
 8008c7c:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008c7e:	2000      	movs	r0, #0
 8008c80:	49cb      	ldr	r1, [pc, #812]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008c82:	f7f7 fef1 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8008c86:	49cb      	ldr	r1, [pc, #812]	; (8008fb4 <OTM8009A_Init+0x33c>)
 8008c88:	2003      	movs	r0, #3
 8008c8a:	f7f7 feed 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8008c8e:	49ca      	ldr	r1, [pc, #808]	; (8008fb8 <OTM8009A_Init+0x340>)
 8008c90:	2000      	movs	r0, #0
 8008c92:	f7f7 fee9 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8008c96:	49c9      	ldr	r1, [pc, #804]	; (8008fbc <OTM8009A_Init+0x344>)
 8008c98:	2002      	movs	r0, #2
 8008c9a:	f7f7 fee5 	bl	8000a68 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8008c9e:	49c6      	ldr	r1, [pc, #792]	; (8008fb8 <OTM8009A_Init+0x340>)
 8008ca0:	2000      	movs	r0, #0
 8008ca2:	f7f7 fee1 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8008ca6:	49c6      	ldr	r1, [pc, #792]	; (8008fc0 <OTM8009A_Init+0x348>)
 8008ca8:	2000      	movs	r0, #0
 8008caa:	f7f7 fedd 	bl	8000a68 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8008cae:	200a      	movs	r0, #10
 8008cb0:	f000 fb30 	bl	8009314 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8008cb4:	49c3      	ldr	r1, [pc, #780]	; (8008fc4 <OTM8009A_Init+0x34c>)
 8008cb6:	2000      	movs	r0, #0
 8008cb8:	f7f7 fed6 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8008cbc:	49c2      	ldr	r1, [pc, #776]	; (8008fc8 <OTM8009A_Init+0x350>)
 8008cbe:	2000      	movs	r0, #0
 8008cc0:	f7f7 fed2 	bl	8000a68 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8008cc4:	200a      	movs	r0, #10
 8008cc6:	f000 fb25 	bl	8009314 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8008cca:	49c0      	ldr	r1, [pc, #768]	; (8008fcc <OTM8009A_Init+0x354>)
 8008ccc:	2000      	movs	r0, #0
 8008cce:	f7f7 fecb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8008cd2:	49bf      	ldr	r1, [pc, #764]	; (8008fd0 <OTM8009A_Init+0x358>)
 8008cd4:	2000      	movs	r0, #0
 8008cd6:	f7f7 fec7 	bl	8000a68 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8008cda:	49be      	ldr	r1, [pc, #760]	; (8008fd4 <OTM8009A_Init+0x35c>)
 8008cdc:	2000      	movs	r0, #0
 8008cde:	f7f7 fec3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8008ce2:	49bd      	ldr	r1, [pc, #756]	; (8008fd8 <OTM8009A_Init+0x360>)
 8008ce4:	2000      	movs	r0, #0
 8008ce6:	f7f7 febf 	bl	8000a68 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8008cea:	49bc      	ldr	r1, [pc, #752]	; (8008fdc <OTM8009A_Init+0x364>)
 8008cec:	2000      	movs	r0, #0
 8008cee:	f7f7 febb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8008cf2:	49bb      	ldr	r1, [pc, #748]	; (8008fe0 <OTM8009A_Init+0x368>)
 8008cf4:	2000      	movs	r0, #0
 8008cf6:	f7f7 feb7 	bl	8000a68 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008cfa:	49ad      	ldr	r1, [pc, #692]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008cfc:	2000      	movs	r0, #0
 8008cfe:	f7f7 feb3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8008d02:	49b8      	ldr	r1, [pc, #736]	; (8008fe4 <OTM8009A_Init+0x36c>)
 8008d04:	2000      	movs	r0, #0
 8008d06:	f7f7 feaf 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8008d0a:	49b7      	ldr	r1, [pc, #732]	; (8008fe8 <OTM8009A_Init+0x370>)
 8008d0c:	2000      	movs	r0, #0
 8008d0e:	f7f7 feab 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8008d12:	49b6      	ldr	r1, [pc, #728]	; (8008fec <OTM8009A_Init+0x374>)
 8008d14:	2000      	movs	r0, #0
 8008d16:	f7f7 fea7 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8008d1a:	49b5      	ldr	r1, [pc, #724]	; (8008ff0 <OTM8009A_Init+0x378>)
 8008d1c:	2000      	movs	r0, #0
 8008d1e:	f7f7 fea3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8008d22:	49b4      	ldr	r1, [pc, #720]	; (8008ff4 <OTM8009A_Init+0x37c>)
 8008d24:	2000      	movs	r0, #0
 8008d26:	f7f7 fe9f 	bl	8000a68 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8008d2a:	49b3      	ldr	r1, [pc, #716]	; (8008ff8 <OTM8009A_Init+0x380>)
 8008d2c:	2000      	movs	r0, #0
 8008d2e:	f7f7 fe9b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8008d32:	49b2      	ldr	r1, [pc, #712]	; (8008ffc <OTM8009A_Init+0x384>)
 8008d34:	2000      	movs	r0, #0
 8008d36:	f7f7 fe97 	bl	8000a68 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8008d3a:	49b1      	ldr	r1, [pc, #708]	; (8009000 <OTM8009A_Init+0x388>)
 8008d3c:	2000      	movs	r0, #0
 8008d3e:	f7f7 fe93 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8008d42:	49a5      	ldr	r1, [pc, #660]	; (8008fd8 <OTM8009A_Init+0x360>)
 8008d44:	2000      	movs	r0, #0
 8008d46:	f7f7 fe8f 	bl	8000a68 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008d4a:	4999      	ldr	r1, [pc, #612]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008d4c:	2000      	movs	r0, #0
 8008d4e:	f7f7 fe8b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8008d52:	49ac      	ldr	r1, [pc, #688]	; (8009004 <OTM8009A_Init+0x38c>)
 8008d54:	2002      	movs	r0, #2
 8008d56:	f7f7 fe87 	bl	8000a68 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8008d5a:	49ab      	ldr	r1, [pc, #684]	; (8009008 <OTM8009A_Init+0x390>)
 8008d5c:	2000      	movs	r0, #0
 8008d5e:	f7f7 fe83 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8008d62:	49aa      	ldr	r1, [pc, #680]	; (800900c <OTM8009A_Init+0x394>)
 8008d64:	2000      	movs	r0, #0
 8008d66:	f7f7 fe7f 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8008d6a:	49a9      	ldr	r1, [pc, #676]	; (8009010 <OTM8009A_Init+0x398>)
 8008d6c:	2000      	movs	r0, #0
 8008d6e:	f7f7 fe7b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8008d72:	49a8      	ldr	r1, [pc, #672]	; (8009014 <OTM8009A_Init+0x39c>)
 8008d74:	2000      	movs	r0, #0
 8008d76:	f7f7 fe77 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8008d7a:	49a7      	ldr	r1, [pc, #668]	; (8009018 <OTM8009A_Init+0x3a0>)
 8008d7c:	2000      	movs	r0, #0
 8008d7e:	f7f7 fe73 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8008d82:	49a6      	ldr	r1, [pc, #664]	; (800901c <OTM8009A_Init+0x3a4>)
 8008d84:	2000      	movs	r0, #0
 8008d86:	f7f7 fe6f 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8008d8a:	4997      	ldr	r1, [pc, #604]	; (8008fe8 <OTM8009A_Init+0x370>)
 8008d8c:	2000      	movs	r0, #0
 8008d8e:	f7f7 fe6b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8008d92:	49a3      	ldr	r1, [pc, #652]	; (8009020 <OTM8009A_Init+0x3a8>)
 8008d94:	2000      	movs	r0, #0
 8008d96:	f7f7 fe67 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8008d9a:	4995      	ldr	r1, [pc, #596]	; (8008ff0 <OTM8009A_Init+0x378>)
 8008d9c:	2000      	movs	r0, #0
 8008d9e:	f7f7 fe63 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8008da2:	49a0      	ldr	r1, [pc, #640]	; (8009024 <OTM8009A_Init+0x3ac>)
 8008da4:	2000      	movs	r0, #0
 8008da6:	f7f7 fe5f 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8008daa:	499f      	ldr	r1, [pc, #636]	; (8009028 <OTM8009A_Init+0x3b0>)
 8008dac:	2000      	movs	r0, #0
 8008dae:	f7f7 fe5b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8008db2:	499e      	ldr	r1, [pc, #632]	; (800902c <OTM8009A_Init+0x3b4>)
 8008db4:	2002      	movs	r0, #2
 8008db6:	f7f7 fe57 	bl	8000a68 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8008dba:	497f      	ldr	r1, [pc, #508]	; (8008fb8 <OTM8009A_Init+0x340>)
 8008dbc:	2000      	movs	r0, #0
 8008dbe:	f7f7 fe53 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8008dc2:	499b      	ldr	r1, [pc, #620]	; (8009030 <OTM8009A_Init+0x3b8>)
 8008dc4:	2006      	movs	r0, #6
 8008dc6:	f7f7 fe4f 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8008dca:	499a      	ldr	r1, [pc, #616]	; (8009034 <OTM8009A_Init+0x3bc>)
 8008dcc:	2000      	movs	r0, #0
 8008dce:	f7f7 fe4b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8008dd2:	4999      	ldr	r1, [pc, #612]	; (8009038 <OTM8009A_Init+0x3c0>)
 8008dd4:	200e      	movs	r0, #14
 8008dd6:	f7f7 fe47 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8008dda:	4998      	ldr	r1, [pc, #608]	; (800903c <OTM8009A_Init+0x3c4>)
 8008ddc:	2000      	movs	r0, #0
 8008dde:	f7f7 fe43 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8008de2:	4997      	ldr	r1, [pc, #604]	; (8009040 <OTM8009A_Init+0x3c8>)
 8008de4:	200e      	movs	r0, #14
 8008de6:	f7f7 fe3f 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8008dea:	4996      	ldr	r1, [pc, #600]	; (8009044 <OTM8009A_Init+0x3cc>)
 8008dec:	2000      	movs	r0, #0
 8008dee:	f7f7 fe3b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8008df2:	4995      	ldr	r1, [pc, #596]	; (8009048 <OTM8009A_Init+0x3d0>)
 8008df4:	200a      	movs	r0, #10
 8008df6:	f7f7 fe37 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8008dfa:	4994      	ldr	r1, [pc, #592]	; (800904c <OTM8009A_Init+0x3d4>)
 8008dfc:	2000      	movs	r0, #0
 8008dfe:	f7f7 fe33 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8008e02:	4993      	ldr	r1, [pc, #588]	; (8009050 <OTM8009A_Init+0x3d8>)
 8008e04:	2000      	movs	r0, #0
 8008e06:	f7f7 fe2f 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8008e0a:	496b      	ldr	r1, [pc, #428]	; (8008fb8 <OTM8009A_Init+0x340>)
 8008e0c:	2000      	movs	r0, #0
 8008e0e:	f7f7 fe2b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8008e12:	4990      	ldr	r1, [pc, #576]	; (8009054 <OTM8009A_Init+0x3dc>)
 8008e14:	200a      	movs	r0, #10
 8008e16:	f7f7 fe27 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8008e1a:	498f      	ldr	r1, [pc, #572]	; (8009058 <OTM8009A_Init+0x3e0>)
 8008e1c:	2000      	movs	r0, #0
 8008e1e:	f7f7 fe23 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8008e22:	498e      	ldr	r1, [pc, #568]	; (800905c <OTM8009A_Init+0x3e4>)
 8008e24:	200f      	movs	r0, #15
 8008e26:	f7f7 fe1f 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8008e2a:	4982      	ldr	r1, [pc, #520]	; (8009034 <OTM8009A_Init+0x3bc>)
 8008e2c:	2000      	movs	r0, #0
 8008e2e:	f7f7 fe1b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8008e32:	498b      	ldr	r1, [pc, #556]	; (8009060 <OTM8009A_Init+0x3e8>)
 8008e34:	200f      	movs	r0, #15
 8008e36:	f7f7 fe17 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8008e3a:	4980      	ldr	r1, [pc, #512]	; (800903c <OTM8009A_Init+0x3c4>)
 8008e3c:	2000      	movs	r0, #0
 8008e3e:	f7f7 fe13 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8008e42:	4988      	ldr	r1, [pc, #544]	; (8009064 <OTM8009A_Init+0x3ec>)
 8008e44:	200a      	movs	r0, #10
 8008e46:	f7f7 fe0f 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8008e4a:	497e      	ldr	r1, [pc, #504]	; (8009044 <OTM8009A_Init+0x3cc>)
 8008e4c:	2000      	movs	r0, #0
 8008e4e:	f7f7 fe0b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8008e52:	4985      	ldr	r1, [pc, #532]	; (8009068 <OTM8009A_Init+0x3f0>)
 8008e54:	200f      	movs	r0, #15
 8008e56:	f7f7 fe07 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8008e5a:	497c      	ldr	r1, [pc, #496]	; (800904c <OTM8009A_Init+0x3d4>)
 8008e5c:	2000      	movs	r0, #0
 8008e5e:	f7f7 fe03 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8008e62:	4982      	ldr	r1, [pc, #520]	; (800906c <OTM8009A_Init+0x3f4>)
 8008e64:	200f      	movs	r0, #15
 8008e66:	f7f7 fdff 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8008e6a:	4981      	ldr	r1, [pc, #516]	; (8009070 <OTM8009A_Init+0x3f8>)
 8008e6c:	2000      	movs	r0, #0
 8008e6e:	f7f7 fdfb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8008e72:	4980      	ldr	r1, [pc, #512]	; (8009074 <OTM8009A_Init+0x3fc>)
 8008e74:	200a      	movs	r0, #10
 8008e76:	f7f7 fdf7 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8008e7a:	497f      	ldr	r1, [pc, #508]	; (8009078 <OTM8009A_Init+0x400>)
 8008e7c:	2000      	movs	r0, #0
 8008e7e:	f7f7 fdf3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8008e82:	497e      	ldr	r1, [pc, #504]	; (800907c <OTM8009A_Init+0x404>)
 8008e84:	200a      	movs	r0, #10
 8008e86:	f7f7 fdef 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8008e8a:	494b      	ldr	r1, [pc, #300]	; (8008fb8 <OTM8009A_Init+0x340>)
 8008e8c:	2000      	movs	r0, #0
 8008e8e:	f7f7 fdeb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8008e92:	497b      	ldr	r1, [pc, #492]	; (8009080 <OTM8009A_Init+0x408>)
 8008e94:	200a      	movs	r0, #10
 8008e96:	f7f7 fde7 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8008e9a:	496f      	ldr	r1, [pc, #444]	; (8009058 <OTM8009A_Init+0x3e0>)
 8008e9c:	2000      	movs	r0, #0
 8008e9e:	f7f7 fde3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8008ea2:	4978      	ldr	r1, [pc, #480]	; (8009084 <OTM8009A_Init+0x40c>)
 8008ea4:	200f      	movs	r0, #15
 8008ea6:	f7f7 fddf 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8008eaa:	4962      	ldr	r1, [pc, #392]	; (8009034 <OTM8009A_Init+0x3bc>)
 8008eac:	2000      	movs	r0, #0
 8008eae:	f7f7 fddb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8008eb2:	4975      	ldr	r1, [pc, #468]	; (8009088 <OTM8009A_Init+0x410>)
 8008eb4:	200f      	movs	r0, #15
 8008eb6:	f7f7 fdd7 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8008eba:	4960      	ldr	r1, [pc, #384]	; (800903c <OTM8009A_Init+0x3c4>)
 8008ebc:	2000      	movs	r0, #0
 8008ebe:	f7f7 fdd3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8008ec2:	4972      	ldr	r1, [pc, #456]	; (800908c <OTM8009A_Init+0x414>)
 8008ec4:	200a      	movs	r0, #10
 8008ec6:	f7f7 fdcf 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8008eca:	495e      	ldr	r1, [pc, #376]	; (8009044 <OTM8009A_Init+0x3cc>)
 8008ecc:	2000      	movs	r0, #0
 8008ece:	f7f7 fdcb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8008ed2:	496f      	ldr	r1, [pc, #444]	; (8009090 <OTM8009A_Init+0x418>)
 8008ed4:	200f      	movs	r0, #15
 8008ed6:	f7f7 fdc7 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8008eda:	495c      	ldr	r1, [pc, #368]	; (800904c <OTM8009A_Init+0x3d4>)
 8008edc:	2000      	movs	r0, #0
 8008ede:	f7f7 fdc3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8008ee2:	496c      	ldr	r1, [pc, #432]	; (8009094 <OTM8009A_Init+0x41c>)
 8008ee4:	200f      	movs	r0, #15
 8008ee6:	f7f7 fdbf 	bl	8000a68 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8008eea:	493f      	ldr	r1, [pc, #252]	; (8008fe8 <OTM8009A_Init+0x370>)
 8008eec:	2000      	movs	r0, #0
 8008eee:	f7f7 fdbb 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8008ef2:	4969      	ldr	r1, [pc, #420]	; (8009098 <OTM8009A_Init+0x420>)
 8008ef4:	2000      	movs	r0, #0
 8008ef6:	f7f7 fdb7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8008efa:	4968      	ldr	r1, [pc, #416]	; (800909c <OTM8009A_Init+0x424>)
 8008efc:	2000      	movs	r0, #0
 8008efe:	f7f7 fdb3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8008f02:	4967      	ldr	r1, [pc, #412]	; (80090a0 <OTM8009A_Init+0x428>)
 8008f04:	2000      	movs	r0, #0
 8008f06:	f7f7 fdaf 	bl	8000a68 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8008f0a:	4966      	ldr	r1, [pc, #408]	; (80090a4 <OTM8009A_Init+0x42c>)
 8008f0c:	2000      	movs	r0, #0
 8008f0e:	f7f7 fdab 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8008f12:	4965      	ldr	r1, [pc, #404]	; (80090a8 <OTM8009A_Init+0x430>)
 8008f14:	2000      	movs	r0, #0
 8008f16:	f7f7 fda7 	bl	8000a68 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008f1a:	4925      	ldr	r1, [pc, #148]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008f1c:	2000      	movs	r0, #0
 8008f1e:	f7f7 fda3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8008f22:	4962      	ldr	r1, [pc, #392]	; (80090ac <OTM8009A_Init+0x434>)
 8008f24:	2003      	movs	r0, #3
 8008f26:	f7f7 fd9f 	bl	8000a68 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008f2a:	4921      	ldr	r1, [pc, #132]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008f2c:	2000      	movs	r0, #0
 8008f2e:	f7f7 fd9b 	bl	8000a68 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008f32:	491f      	ldr	r1, [pc, #124]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008f34:	2000      	movs	r0, #0
 8008f36:	f7f7 fd97 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8008f3a:	495d      	ldr	r1, [pc, #372]	; (80090b0 <OTM8009A_Init+0x438>)
 8008f3c:	2010      	movs	r0, #16
 8008f3e:	f7f7 fd93 	bl	8000a68 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8008f42:	491b      	ldr	r1, [pc, #108]	; (8008fb0 <OTM8009A_Init+0x338>)
 8008f44:	2000      	movs	r0, #0
 8008f46:	f7f7 fd8f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8008f4a:	495a      	ldr	r1, [pc, #360]	; (80090b4 <OTM8009A_Init+0x43c>)
 8008f4c:	2010      	movs	r0, #16
 8008f4e:	f7f7 fd8b 	bl	8000a68 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8008f52:	2000      	movs	r0, #0
 8008f54:	4958      	ldr	r1, [pc, #352]	; (80090b8 <OTM8009A_Init+0x440>)
 8008f56:	f7f7 fd87 	bl	8000a68 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8008f5a:	2078      	movs	r0, #120	; 0x78
 8008f5c:	f000 f9da 	bl	8009314 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8008f60:	2c00      	cmp	r4, #0
 8008f62:	f000 80c9 	beq.w	80090f8 <OTM8009A_Init+0x480>
 8008f66:	2c02      	cmp	r4, #2
 8008f68:	d103      	bne.n	8008f72 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8008f6a:	4954      	ldr	r1, [pc, #336]	; (80090bc <OTM8009A_Init+0x444>)
 8008f6c:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8008f6e:	f7f7 fd7b 	bl	8000a68 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8008f72:	2d01      	cmp	r5, #1
 8008f74:	d10b      	bne.n	8008f8e <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8008f76:	4952      	ldr	r1, [pc, #328]	; (80090c0 <OTM8009A_Init+0x448>)
 8008f78:	2000      	movs	r0, #0
 8008f7a:	f7f7 fd75 	bl	8000a68 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8008f7e:	4951      	ldr	r1, [pc, #324]	; (80090c4 <OTM8009A_Init+0x44c>)
 8008f80:	2004      	movs	r0, #4
 8008f82:	f7f7 fd71 	bl	8000a68 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8008f86:	4950      	ldr	r1, [pc, #320]	; (80090c8 <OTM8009A_Init+0x450>)
 8008f88:	2004      	movs	r0, #4
 8008f8a:	f7f7 fd6d 	bl	8000a68 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8008f8e:	494f      	ldr	r1, [pc, #316]	; (80090cc <OTM8009A_Init+0x454>)
 8008f90:	2000      	movs	r0, #0
 8008f92:	f7f7 fd69 	bl	8000a68 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8008f96:	494e      	ldr	r1, [pc, #312]	; (80090d0 <OTM8009A_Init+0x458>)
 8008f98:	2000      	movs	r0, #0
 8008f9a:	f7f7 fd65 	bl	8000a68 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8008f9e:	494d      	ldr	r1, [pc, #308]	; (80090d4 <OTM8009A_Init+0x45c>)
 8008fa0:	2000      	movs	r0, #0
 8008fa2:	f7f7 fd61 	bl	8000a68 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8008fa6:	494c      	ldr	r1, [pc, #304]	; (80090d8 <OTM8009A_Init+0x460>)
 8008fa8:	2000      	movs	r0, #0
 8008faa:	f7f7 fd5d 	bl	8000a68 <DSI_IO_WriteCmd>
 8008fae:	e095      	b.n	80090dc <OTM8009A_Init+0x464>
 8008fb0:	08027088 	.word	0x08027088
 8008fb4:	080270ee 	.word	0x080270ee
 8008fb8:	0802709e 	.word	0x0802709e
 8008fbc:	08027174 	.word	0x08027174
 8008fc0:	080270b4 	.word	0x080270b4
 8008fc4:	080270ca 	.word	0x080270ca
 8008fc8:	080270e0 	.word	0x080270e0
 8008fcc:	080270e6 	.word	0x080270e6
 8008fd0:	080270e8 	.word	0x080270e8
 8008fd4:	080270ea 	.word	0x080270ea
 8008fd8:	080270ec 	.word	0x080270ec
 8008fdc:	0802708a 	.word	0x0802708a
 8008fe0:	0802708c 	.word	0x0802708c
 8008fe4:	0802708e 	.word	0x0802708e
 8008fe8:	08027090 	.word	0x08027090
 8008fec:	08027092 	.word	0x08027092
 8008ff0:	08027094 	.word	0x08027094
 8008ff4:	08027096 	.word	0x08027096
 8008ff8:	08027098 	.word	0x08027098
 8008ffc:	0802709a 	.word	0x0802709a
 8009000:	0802709c 	.word	0x0802709c
 8009004:	080271f2 	.word	0x080271f2
 8009008:	080270a0 	.word	0x080270a0
 800900c:	080270a2 	.word	0x080270a2
 8009010:	080270a4 	.word	0x080270a4
 8009014:	080270a6 	.word	0x080270a6
 8009018:	080270a8 	.word	0x080270a8
 800901c:	080270aa 	.word	0x080270aa
 8009020:	080270ac 	.word	0x080270ac
 8009024:	080270ae 	.word	0x080270ae
 8009028:	080270b0 	.word	0x080270b0
 800902c:	080271f5 	.word	0x080271f5
 8009030:	080271f8 	.word	0x080271f8
 8009034:	080270b2 	.word	0x080270b2
 8009038:	080271ff 	.word	0x080271ff
 800903c:	080270b6 	.word	0x080270b6
 8009040:	0802720e 	.word	0x0802720e
 8009044:	080270b8 	.word	0x080270b8
 8009048:	080270f2 	.word	0x080270f2
 800904c:	080270ba 	.word	0x080270ba
 8009050:	080270d8 	.word	0x080270d8
 8009054:	080270fd 	.word	0x080270fd
 8009058:	080270bc 	.word	0x080270bc
 800905c:	08027108 	.word	0x08027108
 8009060:	08027118 	.word	0x08027118
 8009064:	08027128 	.word	0x08027128
 8009068:	08027133 	.word	0x08027133
 800906c:	08027143 	.word	0x08027143
 8009070:	080270be 	.word	0x080270be
 8009074:	08027153 	.word	0x08027153
 8009078:	080270c0 	.word	0x080270c0
 800907c:	0802715e 	.word	0x0802715e
 8009080:	08027169 	.word	0x08027169
 8009084:	08027177 	.word	0x08027177
 8009088:	08027187 	.word	0x08027187
 800908c:	08027197 	.word	0x08027197
 8009090:	080271a2 	.word	0x080271a2
 8009094:	080271b2 	.word	0x080271b2
 8009098:	080270da 	.word	0x080270da
 800909c:	080270dc 	.word	0x080270dc
 80090a0:	080270de 	.word	0x080270de
 80090a4:	080270e2 	.word	0x080270e2
 80090a8:	080270e4 	.word	0x080270e4
 80090ac:	080271c2 	.word	0x080271c2
 80090b0:	080271d0 	.word	0x080271d0
 80090b4:	080271e1 	.word	0x080271e1
 80090b8:	080270c2 	.word	0x080270c2
 80090bc:	080270c4 	.word	0x080270c4
 80090c0:	080270c8 	.word	0x080270c8
 80090c4:	080271c6 	.word	0x080271c6
 80090c8:	080271cb 	.word	0x080271cb
 80090cc:	080270cc 	.word	0x080270cc
 80090d0:	080270ce 	.word	0x080270ce
 80090d4:	080270d0 	.word	0x080270d0
 80090d8:	080270d2 	.word	0x080270d2

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 80090dc:	4908      	ldr	r1, [pc, #32]	; (8009100 <OTM8009A_Init+0x488>)
 80090de:	2000      	movs	r0, #0
 80090e0:	f7f7 fcc2 	bl	8000a68 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80090e4:	4907      	ldr	r1, [pc, #28]	; (8009104 <OTM8009A_Init+0x48c>)
 80090e6:	2000      	movs	r0, #0
 80090e8:	f7f7 fcbe 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 80090ec:	4906      	ldr	r1, [pc, #24]	; (8009108 <OTM8009A_Init+0x490>)
 80090ee:	2000      	movs	r0, #0
 80090f0:	f7f7 fcba 	bl	8000a68 <DSI_IO_WriteCmd>

  return 0;
}
 80090f4:	2000      	movs	r0, #0
 80090f6:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80090f8:	4904      	ldr	r1, [pc, #16]	; (800910c <OTM8009A_Init+0x494>)
 80090fa:	4620      	mov	r0, r4
 80090fc:	e737      	b.n	8008f6e <OTM8009A_Init+0x2f6>
 80090fe:	bf00      	nop
 8009100:	080270d4 	.word	0x080270d4
 8009104:	08027088 	.word	0x08027088
 8009108:	080270d6 	.word	0x080270d6
 800910c:	080270c6 	.word	0x080270c6

08009110 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8009110:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009112:	4d2e      	ldr	r5, [pc, #184]	; (80091cc <I2C1_Init+0xbc>)
{
 8009114:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009116:	4628      	mov	r0, r5
 8009118:	f002 f96a 	bl	800b3f0 <HAL_I2C_GetState>
 800911c:	4604      	mov	r4, r0
 800911e:	2800      	cmp	r0, #0
 8009120:	d151      	bne.n	80091c6 <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009122:	4a2b      	ldr	r2, [pc, #172]	; (80091d0 <I2C1_Init+0xc0>)
 8009124:	4b2b      	ldr	r3, [pc, #172]	; (80091d4 <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009126:	4e2c      	ldr	r6, [pc, #176]	; (80091d8 <I2C1_Init+0xc8>)
 8009128:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800912a:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 800912e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8009132:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8009136:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800913a:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 800913e:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009140:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8009142:	f043 0302 	orr.w	r3, r3, #2
 8009146:	6333      	str	r3, [r6, #48]	; 0x30
 8009148:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 800914a:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800914c:	f003 0302 	and.w	r3, r3, #2
 8009150:	9301      	str	r3, [sp, #4]
 8009152:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8009154:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009158:	2312      	movs	r3, #18
 800915a:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 800915e:	2002      	movs	r0, #2
 8009160:	2304      	movs	r3, #4
 8009162:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009166:	a903      	add	r1, sp, #12
 8009168:	481c      	ldr	r0, [pc, #112]	; (80091dc <I2C1_Init+0xcc>)
 800916a:	f001 fb6f 	bl	800a84c <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800916e:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009172:	481a      	ldr	r0, [pc, #104]	; (80091dc <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8009174:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009176:	a903      	add	r1, sp, #12
 8009178:	f001 fb68 	bl	800a84c <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 800917c:	9402      	str	r4, [sp, #8]
 800917e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009180:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009184:	6433      	str	r3, [r6, #64]	; 0x40
 8009186:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009188:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800918c:	9302      	str	r3, [sp, #8]
 800918e:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8009190:	6a33      	ldr	r3, [r6, #32]
 8009192:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009196:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8009198:	6a33      	ldr	r3, [r6, #32]
 800919a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800919e:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 80091a0:	4622      	mov	r2, r4
 80091a2:	2105      	movs	r1, #5
 80091a4:	201f      	movs	r0, #31
 80091a6:	f000 fd1d 	bl	8009be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80091aa:	201f      	movs	r0, #31
 80091ac:	f000 fd4c 	bl	8009c48 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80091b0:	4622      	mov	r2, r4
 80091b2:	2105      	movs	r1, #5
 80091b4:	2020      	movs	r0, #32
 80091b6:	f000 fd15 	bl	8009be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80091ba:	2020      	movs	r0, #32
 80091bc:	f000 fd44 	bl	8009c48 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80091c0:	4628      	mov	r0, r5
 80091c2:	f001 febb 	bl	800af3c <HAL_I2C_Init>
  }
}
 80091c6:	b008      	add	sp, #32
 80091c8:	bd70      	pop	{r4, r5, r6, pc}
 80091ca:	bf00      	nop
 80091cc:	2000f11c 	.word	0x2000f11c
 80091d0:	40005400 	.word	0x40005400
 80091d4:	00061a80 	.word	0x00061a80
 80091d8:	40023800 	.word	0x40023800
 80091dc:	40020400 	.word	0x40020400

080091e0 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 80091e0:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 80091e2:	4803      	ldr	r0, [pc, #12]	; (80091f0 <I2C1_Error.isra.0+0x10>)
 80091e4:	f001 ff52 	bl	800b08c <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 80091e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 80091ec:	f7ff bf90 	b.w	8009110 <I2C1_Init>
 80091f0:	2000f11c 	.word	0x2000f11c

080091f4 <BSP_PB_Init>:
{
 80091f4:	b510      	push	{r4, lr}
 80091f6:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80091f8:	4b19      	ldr	r3, [pc, #100]	; (8009260 <BSP_PB_Init+0x6c>)
 80091fa:	2400      	movs	r4, #0
 80091fc:	9400      	str	r4, [sp, #0]
 80091fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009200:	f042 0201 	orr.w	r2, r2, #1
 8009204:	631a      	str	r2, [r3, #48]	; 0x30
 8009206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009208:	f003 0301 	and.w	r3, r3, #1
 800920c:	9300      	str	r3, [sp, #0]
 800920e:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8009210:	b969      	cbnz	r1, 800922e <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009212:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8009214:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009218:	2302      	movs	r3, #2
 800921a:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800921c:	4b11      	ldr	r3, [pc, #68]	; (8009264 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 800921e:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009220:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009224:	a901      	add	r1, sp, #4
 8009226:	f001 fb11 	bl	800a84c <HAL_GPIO_Init>
}
 800922a:	b006      	add	sp, #24
 800922c:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 800922e:	2901      	cmp	r1, #1
 8009230:	d1fb      	bne.n	800922a <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009232:	2302      	movs	r3, #2
 8009234:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8009236:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800923a:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800923c:	4b09      	ldr	r3, [pc, #36]	; (8009264 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800923e:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009240:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8009244:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009246:	a901      	add	r1, sp, #4
 8009248:	f001 fb00 	bl	800a84c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 800924c:	4622      	mov	r2, r4
 800924e:	210f      	movs	r1, #15
 8009250:	2006      	movs	r0, #6
 8009252:	f000 fcc7 	bl	8009be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8009256:	2006      	movs	r0, #6
 8009258:	f000 fcf6 	bl	8009c48 <HAL_NVIC_EnableIRQ>
}
 800925c:	e7e5      	b.n	800922a <BSP_PB_Init+0x36>
 800925e:	bf00      	nop
 8009260:	40023800 	.word	0x40023800
 8009264:	2000004c 	.word	0x2000004c

08009268 <BSP_PB_GetState>:
{
 8009268:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800926a:	4b03      	ldr	r3, [pc, #12]	; (8009278 <BSP_PB_GetState+0x10>)
 800926c:	2101      	movs	r1, #1
 800926e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009272:	f001 fc73 	bl	800ab5c <HAL_GPIO_ReadPin>
}
 8009276:	bd08      	pop	{r3, pc}
 8009278:	2000004c 	.word	0x2000004c

0800927c <TS_IO_Init>:
 800927c:	f7ff bf48 	b.w	8009110 <I2C1_Init>

08009280 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8009280:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8009282:	2301      	movs	r3, #1
 8009284:	f88d 2017 	strb.w	r2, [sp, #23]
 8009288:	2264      	movs	r2, #100	; 0x64
 800928a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800928e:	f10d 0217 	add.w	r2, sp, #23
 8009292:	9200      	str	r2, [sp, #0]
 8009294:	460a      	mov	r2, r1
 8009296:	4601      	mov	r1, r0
 8009298:	4804      	ldr	r0, [pc, #16]	; (80092ac <TS_IO_Write+0x2c>)
 800929a:	f001 ff11 	bl	800b0c0 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800929e:	b108      	cbz	r0, 80092a4 <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 80092a0:	f7ff ff9e 	bl	80091e0 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 80092a4:	b007      	add	sp, #28
 80092a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80092aa:	bf00      	nop
 80092ac:	2000f11c 	.word	0x2000f11c

080092b0 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80092b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80092b2:	2300      	movs	r3, #0
{
 80092b4:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80092b6:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80092ba:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80092be:	2301      	movs	r3, #1
 80092c0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80092c4:	f10d 0117 	add.w	r1, sp, #23
 80092c8:	9100      	str	r1, [sp, #0]
 80092ca:	4601      	mov	r1, r0
 80092cc:	4805      	ldr	r0, [pc, #20]	; (80092e4 <TS_IO_Read+0x34>)
 80092ce:	f001 ff87 	bl	800b1e0 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80092d2:	b108      	cbz	r0, 80092d8 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 80092d4:	f7ff ff84 	bl	80091e0 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 80092d8:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80092dc:	b007      	add	sp, #28
 80092de:	f85d fb04 	ldr.w	pc, [sp], #4
 80092e2:	bf00      	nop
 80092e4:	2000f11c 	.word	0x2000f11c

080092e8 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80092e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80092ea:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80092ee:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80092f2:	9200      	str	r2, [sp, #0]
 80092f4:	2301      	movs	r3, #1
 80092f6:	460a      	mov	r2, r1
 80092f8:	4601      	mov	r1, r0
 80092fa:	4805      	ldr	r0, [pc, #20]	; (8009310 <TS_IO_ReadMultiple+0x28>)
 80092fc:	f001 ff70 	bl	800b1e0 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009300:	4604      	mov	r4, r0
 8009302:	b108      	cbz	r0, 8009308 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 8009304:	f7ff ff6c 	bl	80091e0 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8009308:	b2a0      	uxth	r0, r4
 800930a:	b004      	add	sp, #16
 800930c:	bd10      	pop	{r4, pc}
 800930e:	bf00      	nop
 8009310:	2000f11c 	.word	0x2000f11c

08009314 <OTM8009A_IO_Delay>:
 8009314:	f000 bc40 	b.w	8009b98 <HAL_Delay>

08009318 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009318:	b500      	push	{lr}
 800931a:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800931c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009320:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009322:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8009326:	2205      	movs	r2, #5
 8009328:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800932a:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800932c:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800932e:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8009330:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009334:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009338:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 800933c:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800933e:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8009340:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8009342:	2210      	movs	r2, #16
 8009344:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8009346:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800934a:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 800934c:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800934e:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8009350:	a906      	add	r1, sp, #24
 8009352:	466a      	mov	r2, sp
 8009354:	4804      	ldr	r0, [pc, #16]	; (8009368 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8009356:	f002 fbce 	bl	800baf6 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800935a:	3800      	subs	r0, #0
 800935c:	bf18      	it	ne
 800935e:	2001      	movne	r0, #1
 8009360:	b015      	add	sp, #84	; 0x54
 8009362:	f85d fb04 	ldr.w	pc, [sp], #4
 8009366:	bf00      	nop
 8009368:	20020590 	.word	0x20020590

0800936c <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800936c:	b500      	push	{lr}
 800936e:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009370:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009374:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8009376:	2306      	movs	r3, #6
 8009378:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800937a:	4817      	ldr	r0, [pc, #92]	; (80093d8 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800937c:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800937e:	f241 3288 	movw	r2, #5000	; 0x1388
 8009382:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009384:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009388:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 800938c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800938e:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009390:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009392:	f002 fb6c 	bl	800ba6e <HAL_QSPI_Command>
 8009396:	b9e0      	cbnz	r0, 80093d2 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8009398:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800939a:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800939e:	2201      	movs	r2, #1
 80093a0:	2310      	movs	r3, #16
 80093a2:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80093a6:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80093aa:	2305      	movs	r3, #5
 80093ac:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80093b0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80093b4:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80093b6:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80093b8:	4807      	ldr	r0, [pc, #28]	; (80093d8 <QSPI_WriteEnable.constprop.0+0x6c>)
 80093ba:	f241 3388 	movw	r3, #5000	; 0x1388
 80093be:	466a      	mov	r2, sp
 80093c0:	a906      	add	r1, sp, #24
 80093c2:	f002 fb98 	bl	800baf6 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80093c6:	3800      	subs	r0, #0
 80093c8:	bf18      	it	ne
 80093ca:	2001      	movne	r0, #1
}
 80093cc:	b015      	add	sp, #84	; 0x54
 80093ce:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80093d2:	2001      	movs	r0, #1
 80093d4:	e7fa      	b.n	80093cc <QSPI_WriteEnable.constprop.0+0x60>
 80093d6:	bf00      	nop
 80093d8:	20020590 	.word	0x20020590

080093dc <BSP_QSPI_EnableMemoryMappedMode>:
{
 80093dc:	b500      	push	{lr}
 80093de:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80093e0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80093e4:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80093e6:	23eb      	movs	r3, #235	; 0xeb
 80093e8:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80093ea:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80093ee:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80093f0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80093f4:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80093f6:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80093fa:	2300      	movs	r3, #0
 80093fc:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8009400:	220a      	movs	r2, #10
 8009402:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009404:	a902      	add	r1, sp, #8
 8009406:	466a      	mov	r2, sp
 8009408:	4806      	ldr	r0, [pc, #24]	; (8009424 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800940a:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800940c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8009410:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009412:	f002 fbc0 	bl	800bb96 <HAL_QSPI_MemoryMapped>
}
 8009416:	3800      	subs	r0, #0
 8009418:	bf18      	it	ne
 800941a:	2001      	movne	r0, #1
 800941c:	b011      	add	sp, #68	; 0x44
 800941e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009422:	bf00      	nop
 8009424:	20020590 	.word	0x20020590

08009428 <BSP_QSPI_MspInit>:
{
 8009428:	b570      	push	{r4, r5, r6, lr}
 800942a:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 800942c:	4b2c      	ldr	r3, [pc, #176]	; (80094e0 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800942e:	482d      	ldr	r0, [pc, #180]	; (80094e4 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8009430:	2400      	movs	r4, #0
 8009432:	9400      	str	r4, [sp, #0]
 8009434:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009436:	f042 0202 	orr.w	r2, r2, #2
 800943a:	639a      	str	r2, [r3, #56]	; 0x38
 800943c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800943e:	f002 0202 	and.w	r2, r2, #2
 8009442:	9200      	str	r2, [sp, #0]
 8009444:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8009446:	699a      	ldr	r2, [r3, #24]
 8009448:	f042 0202 	orr.w	r2, r2, #2
 800944c:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800944e:	699a      	ldr	r2, [r3, #24]
 8009450:	f022 0202 	bic.w	r2, r2, #2
 8009454:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8009456:	9401      	str	r4, [sp, #4]
 8009458:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800945a:	f042 0202 	orr.w	r2, r2, #2
 800945e:	631a      	str	r2, [r3, #48]	; 0x30
 8009460:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009462:	f002 0202 	and.w	r2, r2, #2
 8009466:	9201      	str	r2, [sp, #4]
 8009468:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800946a:	9402      	str	r4, [sp, #8]
 800946c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800946e:	f042 0220 	orr.w	r2, r2, #32
 8009472:	631a      	str	r2, [r3, #48]	; 0x30
 8009474:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009476:	f003 0320 	and.w	r3, r3, #32
 800947a:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800947c:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800947e:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8009480:	2302      	movs	r3, #2
 8009482:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8009486:	2101      	movs	r1, #1
 8009488:	2303      	movs	r3, #3
 800948a:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800948e:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009490:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009492:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009494:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009496:	f001 f9d9 	bl	800a84c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800949a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800949e:	a903      	add	r1, sp, #12
 80094a0:	4811      	ldr	r0, [pc, #68]	; (80094e8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80094a2:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80094a4:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80094a6:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80094a8:	f001 f9d0 	bl	800a84c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80094ac:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80094b0:	a903      	add	r1, sp, #12
 80094b2:	480d      	ldr	r0, [pc, #52]	; (80094e8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80094b4:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80094b6:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80094b8:	f001 f9c8 	bl	800a84c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80094bc:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80094be:	a903      	add	r1, sp, #12
 80094c0:	4809      	ldr	r0, [pc, #36]	; (80094e8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80094c2:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80094c4:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80094c6:	f001 f9c1 	bl	800a84c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80094ca:	4622      	mov	r2, r4
 80094cc:	210f      	movs	r1, #15
 80094ce:	205b      	movs	r0, #91	; 0x5b
 80094d0:	f000 fb88 	bl	8009be4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80094d4:	205b      	movs	r0, #91	; 0x5b
 80094d6:	f000 fbb7 	bl	8009c48 <HAL_NVIC_EnableIRQ>
}
 80094da:	b008      	add	sp, #32
 80094dc:	bd70      	pop	{r4, r5, r6, pc}
 80094de:	bf00      	nop
 80094e0:	40023800 	.word	0x40023800
 80094e4:	40020400 	.word	0x40020400
 80094e8:	40021400 	.word	0x40021400

080094ec <BSP_QSPI_Init>:
{
 80094ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80094ee:	4c48      	ldr	r4, [pc, #288]	; (8009610 <BSP_QSPI_Init+0x124>)
 80094f0:	4b48      	ldr	r3, [pc, #288]	; (8009614 <BSP_QSPI_Init+0x128>)
 80094f2:	6023      	str	r3, [r4, #0]
{
 80094f4:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80094f6:	4620      	mov	r0, r4
 80094f8:	f002 faa6 	bl	800ba48 <HAL_QSPI_DeInit>
 80094fc:	4605      	mov	r5, r0
 80094fe:	b110      	cbz	r0, 8009506 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8009500:	2001      	movs	r0, #1
}
 8009502:	b011      	add	sp, #68	; 0x44
 8009504:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8009506:	4601      	mov	r1, r0
 8009508:	4620      	mov	r0, r4
 800950a:	f7ff ff8d 	bl	8009428 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800950e:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009510:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8009512:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009516:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009518:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 800951c:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8009520:	fab3 f383 	clz	r3, r3
 8009524:	3b01      	subs	r3, #1
 8009526:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009528:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800952a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800952e:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8009532:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009536:	f002 fa33 	bl	800b9a0 <HAL_QSPI_Init>
 800953a:	2800      	cmp	r0, #0
 800953c:	d1e0      	bne.n	8009500 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800953e:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009542:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009546:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800954a:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 800954c:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 800954e:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009550:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009552:	f241 3288 	movw	r2, #5000	; 0x1388
 8009556:	a902      	add	r1, sp, #8
 8009558:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800955a:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 800955c:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800955e:	f002 fa86 	bl	800ba6e <HAL_QSPI_Command>
 8009562:	b108      	cbz	r0, 8009568 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8009564:	2004      	movs	r0, #4
 8009566:	e7cc      	b.n	8009502 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8009568:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800956a:	f241 3288 	movw	r2, #5000	; 0x1388
 800956e:	a902      	add	r1, sp, #8
 8009570:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8009572:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009574:	f002 fa7b 	bl	800ba6e <HAL_QSPI_Command>
 8009578:	2800      	cmp	r0, #0
 800957a:	d1f3      	bne.n	8009564 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 800957c:	f241 3088 	movw	r0, #5000	; 0x1388
 8009580:	f7ff feca 	bl	8009318 <QSPI_AutoPollingMemReady.constprop.0>
 8009584:	2800      	cmp	r0, #0
 8009586:	d1ed      	bne.n	8009564 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009588:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800958c:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009590:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8009594:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8009596:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009598:	f241 3288 	movw	r2, #5000	; 0x1388
 800959c:	a902      	add	r1, sp, #8
 800959e:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80095a0:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80095a2:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80095a4:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095a6:	f002 fa62 	bl	800ba6e <HAL_QSPI_Command>
 80095aa:	2800      	cmp	r0, #0
 80095ac:	d1da      	bne.n	8009564 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095ae:	f241 3288 	movw	r2, #5000	; 0x1388
 80095b2:	f10d 0107 	add.w	r1, sp, #7
 80095b6:	4620      	mov	r0, r4
 80095b8:	f002 fbcc 	bl	800bd54 <HAL_QSPI_Receive>
 80095bc:	2800      	cmp	r0, #0
 80095be:	d1d1      	bne.n	8009564 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80095c0:	f7ff fed4 	bl	800936c <QSPI_WriteEnable.constprop.0>
 80095c4:	2800      	cmp	r0, #0
 80095c6:	d1cd      	bne.n	8009564 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80095c8:	2381      	movs	r3, #129	; 0x81
 80095ca:	9302      	str	r3, [sp, #8]
 80095cc:	22f0      	movs	r2, #240	; 0xf0
 80095ce:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80095d2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80095d6:	210a      	movs	r1, #10
 80095d8:	fab2 f282 	clz	r2, r2
 80095dc:	fa01 f202 	lsl.w	r2, r1, r2
 80095e0:	f003 030f 	and.w	r3, r3, #15
 80095e4:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095e6:	a902      	add	r1, sp, #8
 80095e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80095ec:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80095ee:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095f2:	f002 fa3c 	bl	800ba6e <HAL_QSPI_Command>
 80095f6:	2800      	cmp	r0, #0
 80095f8:	d1b4      	bne.n	8009564 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095fa:	f241 3288 	movw	r2, #5000	; 0x1388
 80095fe:	f10d 0107 	add.w	r1, sp, #7
 8009602:	4620      	mov	r0, r4
 8009604:	f002 fb4a 	bl	800bc9c <HAL_QSPI_Transmit>
 8009608:	2800      	cmp	r0, #0
 800960a:	f43f af7a 	beq.w	8009502 <BSP_QSPI_Init+0x16>
 800960e:	e7a9      	b.n	8009564 <BSP_QSPI_Init+0x78>
 8009610:	20020590 	.word	0x20020590
 8009614:	a0001000 	.word	0xa0001000

08009618 <BSP_QSPI_MspDeInit>:
{
 8009618:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800961a:	205b      	movs	r0, #91	; 0x5b
 800961c:	f000 fb22 	bl	8009c64 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8009620:	4814      	ldr	r0, [pc, #80]	; (8009674 <BSP_QSPI_MspDeInit+0x5c>)
 8009622:	2140      	movs	r1, #64	; 0x40
 8009624:	f001 f9f8 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8009628:	4813      	ldr	r0, [pc, #76]	; (8009678 <BSP_QSPI_MspDeInit+0x60>)
 800962a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800962e:	f001 f9f3 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8009632:	4811      	ldr	r0, [pc, #68]	; (8009678 <BSP_QSPI_MspDeInit+0x60>)
 8009634:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009638:	f001 f9ee 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800963c:	480e      	ldr	r0, [pc, #56]	; (8009678 <BSP_QSPI_MspDeInit+0x60>)
 800963e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8009642:	f001 f9e9 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8009646:	480c      	ldr	r0, [pc, #48]	; (8009678 <BSP_QSPI_MspDeInit+0x60>)
 8009648:	2180      	movs	r1, #128	; 0x80
 800964a:	f001 f9e5 	bl	800aa18 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800964e:	480a      	ldr	r0, [pc, #40]	; (8009678 <BSP_QSPI_MspDeInit+0x60>)
 8009650:	2140      	movs	r1, #64	; 0x40
 8009652:	f001 f9e1 	bl	800aa18 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8009656:	4b09      	ldr	r3, [pc, #36]	; (800967c <BSP_QSPI_MspDeInit+0x64>)
 8009658:	699a      	ldr	r2, [r3, #24]
 800965a:	f042 0202 	orr.w	r2, r2, #2
 800965e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8009660:	699a      	ldr	r2, [r3, #24]
 8009662:	f022 0202 	bic.w	r2, r2, #2
 8009666:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8009668:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800966a:	f022 0202 	bic.w	r2, r2, #2
 800966e:	639a      	str	r2, [r3, #56]	; 0x38
}
 8009670:	bd08      	pop	{r3, pc}
 8009672:	bf00      	nop
 8009674:	40020400 	.word	0x40020400
 8009678:	40021400 	.word	0x40021400
 800967c:	40023800 	.word	0x40023800

08009680 <BSP_QSPI_DeInit>:
{
 8009680:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8009682:	4d08      	ldr	r5, [pc, #32]	; (80096a4 <BSP_QSPI_DeInit+0x24>)
 8009684:	4b08      	ldr	r3, [pc, #32]	; (80096a8 <BSP_QSPI_DeInit+0x28>)
 8009686:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009688:	4628      	mov	r0, r5
 800968a:	f002 f9dd 	bl	800ba48 <HAL_QSPI_DeInit>
 800968e:	4604      	mov	r4, r0
 8009690:	b928      	cbnz	r0, 800969e <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8009692:	4601      	mov	r1, r0
 8009694:	4628      	mov	r0, r5
 8009696:	f7ff ffbf 	bl	8009618 <BSP_QSPI_MspDeInit>
}
 800969a:	4620      	mov	r0, r4
 800969c:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800969e:	2401      	movs	r4, #1
 80096a0:	e7fb      	b.n	800969a <BSP_QSPI_DeInit+0x1a>
 80096a2:	bf00      	nop
 80096a4:	20020590 	.word	0x20020590
 80096a8:	a0001000 	.word	0xa0001000

080096ac <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80096ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80096b0:	4c21      	ldr	r4, [pc, #132]	; (8009738 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096b2:	4d22      	ldr	r5, [pc, #136]	; (800973c <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80096b4:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80096b6:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80096ba:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096bc:	4621      	mov	r1, r4
{
 80096be:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80096c4:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80096c6:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80096ca:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80096ce:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096d2:	f002 ffdf 	bl	800c694 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80096d6:	4630      	mov	r0, r6
 80096d8:	f000 fa5e 	bl	8009b98 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80096dc:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096de:	4621      	mov	r1, r4
 80096e0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80096e4:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80096e6:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80096ea:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096ee:	f002 ffd1 	bl	800c694 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80096f2:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80096f4:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096f8:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 80096fa:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80096fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009700:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8009702:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009706:	f002 ffc5 	bl	800c694 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800970a:	f44f 730c 	mov.w	r3, #560	; 0x230
 800970e:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8009710:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009712:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009716:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8009718:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800971a:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800971c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009720:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8009722:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009724:	f002 ffb6 	bl	800c694 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009728:	4649      	mov	r1, r9
 800972a:	4628      	mov	r0, r5
}
 800972c:	b003      	add	sp, #12
 800972e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009732:	f002 bfc6 	b.w	800c6c2 <HAL_SDRAM_ProgramRefreshRate>
 8009736:	bf00      	nop
 8009738:	2000f170 	.word	0x2000f170
 800973c:	2000f25c 	.word	0x2000f25c

08009740 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009740:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009742:	4606      	mov	r6, r0
{
 8009744:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009746:	2800      	cmp	r0, #0
 8009748:	f000 80bd 	beq.w	80098c6 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800974c:	4b5f      	ldr	r3, [pc, #380]	; (80098cc <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800974e:	4860      	ldr	r0, [pc, #384]	; (80098d0 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009750:	4c60      	ldr	r4, [pc, #384]	; (80098d4 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8009752:	2500      	movs	r5, #0
 8009754:	9500      	str	r5, [sp, #0]
 8009756:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009758:	f042 0201 	orr.w	r2, r2, #1
 800975c:	639a      	str	r2, [r3, #56]	; 0x38
 800975e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009760:	f002 0201 	and.w	r2, r2, #1
 8009764:	9200      	str	r2, [sp, #0]
 8009766:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8009768:	9501      	str	r5, [sp, #4]
 800976a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800976c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8009770:	631a      	str	r2, [r3, #48]	; 0x30
 8009772:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009774:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8009778:	9201      	str	r2, [sp, #4]
 800977a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800977c:	9502      	str	r5, [sp, #8]
 800977e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009780:	f042 0204 	orr.w	r2, r2, #4
 8009784:	631a      	str	r2, [r3, #48]	; 0x30
 8009786:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009788:	f002 0204 	and.w	r2, r2, #4
 800978c:	9202      	str	r2, [sp, #8]
 800978e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8009790:	9503      	str	r5, [sp, #12]
 8009792:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009794:	f042 0208 	orr.w	r2, r2, #8
 8009798:	631a      	str	r2, [r3, #48]	; 0x30
 800979a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800979c:	f002 0208 	and.w	r2, r2, #8
 80097a0:	9203      	str	r2, [sp, #12]
 80097a2:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80097a4:	9504      	str	r5, [sp, #16]
 80097a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097a8:	f042 0210 	orr.w	r2, r2, #16
 80097ac:	631a      	str	r2, [r3, #48]	; 0x30
 80097ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097b0:	f002 0210 	and.w	r2, r2, #16
 80097b4:	9204      	str	r2, [sp, #16]
 80097b6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80097b8:	9505      	str	r5, [sp, #20]
 80097ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097bc:	f042 0220 	orr.w	r2, r2, #32
 80097c0:	631a      	str	r2, [r3, #48]	; 0x30
 80097c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097c4:	f002 0220 	and.w	r2, r2, #32
 80097c8:	9205      	str	r2, [sp, #20]
 80097ca:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80097cc:	9506      	str	r5, [sp, #24]
 80097ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80097d4:	631a      	str	r2, [r3, #48]	; 0x30
 80097d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097d8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80097dc:	9206      	str	r2, [sp, #24]
 80097de:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80097e0:	9507      	str	r5, [sp, #28]
 80097e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097e4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80097e8:	631a      	str	r2, [r3, #48]	; 0x30
 80097ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097ec:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80097f0:	9207      	str	r2, [sp, #28]
 80097f2:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80097f4:	9508      	str	r5, [sp, #32]
 80097f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097f8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80097fc:	631a      	str	r2, [r3, #48]	; 0x30
 80097fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009800:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009804:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009806:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009808:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800980a:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800980c:	2301      	movs	r3, #1
 800980e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009812:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8009814:	220c      	movs	r2, #12
 8009816:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8009818:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800981a:	f001 f817 	bl	800a84c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800981e:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009822:	482d      	ldr	r0, [pc, #180]	; (80098d8 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009824:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009826:	a909      	add	r1, sp, #36	; 0x24
 8009828:	f001 f810 	bl	800a84c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800982c:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009830:	482a      	ldr	r0, [pc, #168]	; (80098dc <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009832:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009834:	a909      	add	r1, sp, #36	; 0x24
 8009836:	f001 f809 	bl	800a84c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800983a:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800983e:	4828      	ldr	r0, [pc, #160]	; (80098e0 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009840:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009842:	a909      	add	r1, sp, #36	; 0x24
 8009844:	f001 f802 	bl	800a84c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009848:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800984c:	4825      	ldr	r0, [pc, #148]	; (80098e4 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800984e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009850:	a909      	add	r1, sp, #36	; 0x24
 8009852:	f000 fffb 	bl	800a84c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009856:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800985a:	4823      	ldr	r0, [pc, #140]	; (80098e8 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800985c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800985e:	a909      	add	r1, sp, #36	; 0x24
 8009860:	f000 fff4 	bl	800a84c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009864:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009868:	4820      	ldr	r0, [pc, #128]	; (80098ec <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800986a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800986c:	a909      	add	r1, sp, #36	; 0x24
 800986e:	f000 ffed 	bl	800a84c <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8009872:	2280      	movs	r2, #128	; 0x80
 8009874:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009878:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800987c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009880:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009884:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8009888:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 800988c:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8009890:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8009894:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009898:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800989a:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800989e:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80098a0:	4b13      	ldr	r3, [pc, #76]	; (80098f0 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80098a2:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80098a4:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80098a6:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80098a8:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80098aa:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80098ac:	f000 fa94 	bl	8009dd8 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80098b0:	4620      	mov	r0, r4
 80098b2:	f000 fa11 	bl	8009cd8 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80098b6:	2038      	movs	r0, #56	; 0x38
 80098b8:	462a      	mov	r2, r5
 80098ba:	2105      	movs	r1, #5
 80098bc:	f000 f992 	bl	8009be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80098c0:	2038      	movs	r0, #56	; 0x38
 80098c2:	f000 f9c1 	bl	8009c48 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80098c6:	b00e      	add	sp, #56	; 0x38
 80098c8:	bd70      	pop	{r4, r5, r6, pc}
 80098ca:	bf00      	nop
 80098cc:	40023800 	.word	0x40023800
 80098d0:	40020800 	.word	0x40020800
 80098d4:	2000f19c 	.word	0x2000f19c
 80098d8:	40020c00 	.word	0x40020c00
 80098dc:	40021000 	.word	0x40021000
 80098e0:	40021400 	.word	0x40021400
 80098e4:	40021800 	.word	0x40021800
 80098e8:	40021c00 	.word	0x40021c00
 80098ec:	40022000 	.word	0x40022000
 80098f0:	40026410 	.word	0x40026410

080098f4 <BSP_SDRAM_Init>:
{
 80098f4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80098f6:	4c19      	ldr	r4, [pc, #100]	; (800995c <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 80098f8:	4d19      	ldr	r5, [pc, #100]	; (8009960 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80098fa:	4b1a      	ldr	r3, [pc, #104]	; (8009964 <BSP_SDRAM_Init+0x70>)
 80098fc:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 80098fe:	2107      	movs	r1, #7
 8009900:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8009902:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8009904:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8009908:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 800990c:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8009910:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8009912:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8009914:	2340      	movs	r3, #64	; 0x40
 8009916:	2220      	movs	r2, #32
 8009918:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800991c:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800991e:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8009922:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8009926:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800992a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800992e:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009932:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8009934:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8009938:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800993a:	f7ff ff01 	bl	8009740 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800993e:	4629      	mov	r1, r5
 8009940:	4620      	mov	r0, r4
 8009942:	f002 fe79 	bl	800c638 <HAL_SDRAM_Init>
 8009946:	4c08      	ldr	r4, [pc, #32]	; (8009968 <BSP_SDRAM_Init+0x74>)
 8009948:	3800      	subs	r0, #0
 800994a:	bf18      	it	ne
 800994c:	2001      	movne	r0, #1
 800994e:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8009950:	f240 5069 	movw	r0, #1385	; 0x569
 8009954:	f7ff feaa 	bl	80096ac <BSP_SDRAM_Initialization_sequence>
}
 8009958:	7820      	ldrb	r0, [r4, #0]
 800995a:	bd38      	pop	{r3, r4, r5, pc}
 800995c:	2000f25c 	.word	0x2000f25c
 8009960:	2000f180 	.word	0x2000f180
 8009964:	a0000140 	.word	0xa0000140
 8009968:	20000050 	.word	0x20000050

0800996c <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800996c:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800996e:	b148      	cbz	r0, 8009984 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8009970:	2038      	movs	r0, #56	; 0x38
 8009972:	f000 f977 	bl	8009c64 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009976:	4804      	ldr	r0, [pc, #16]	; (8009988 <BSP_SDRAM_MspDeInit+0x1c>)
 8009978:	4b04      	ldr	r3, [pc, #16]	; (800998c <BSP_SDRAM_MspDeInit+0x20>)
 800997a:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800997c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8009980:	f000 ba2a 	b.w	8009dd8 <HAL_DMA_DeInit>
}
 8009984:	bd08      	pop	{r3, pc}
 8009986:	bf00      	nop
 8009988:	2000f1fc 	.word	0x2000f1fc
 800998c:	40026410 	.word	0x40026410

08009990 <BSP_SDRAM_DeInit>:
{
 8009990:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009992:	4c07      	ldr	r4, [pc, #28]	; (80099b0 <BSP_SDRAM_DeInit+0x20>)
 8009994:	4b07      	ldr	r3, [pc, #28]	; (80099b4 <BSP_SDRAM_DeInit+0x24>)
 8009996:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8009998:	4620      	mov	r0, r4
 800999a:	f002 fe6d 	bl	800c678 <HAL_SDRAM_DeInit>
 800999e:	4d06      	ldr	r5, [pc, #24]	; (80099b8 <BSP_SDRAM_DeInit+0x28>)
 80099a0:	4601      	mov	r1, r0
 80099a2:	b918      	cbnz	r0, 80099ac <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80099a4:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80099a6:	4620      	mov	r0, r4
 80099a8:	f7ff ffe0 	bl	800996c <BSP_SDRAM_MspDeInit>
}
 80099ac:	7828      	ldrb	r0, [r5, #0]
 80099ae:	bd38      	pop	{r3, r4, r5, pc}
 80099b0:	2000f25c 	.word	0x2000f25c
 80099b4:	a0000140 	.word	0xa0000140
 80099b8:	20000051 	.word	0x20000051

080099bc <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80099bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80099c0:	4d19      	ldr	r5, [pc, #100]	; (8009a28 <BSP_TS_Init+0x6c>)
 80099c2:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8009a34 <BSP_TS_Init+0x78>
 80099c6:	682b      	ldr	r3, [r5, #0]
{
 80099c8:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80099ca:	f898 0000 	ldrb.w	r0, [r8]
{
 80099ce:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80099d0:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80099d2:	686b      	ldr	r3, [r5, #4]
 80099d4:	2054      	movs	r0, #84	; 0x54
 80099d6:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80099d8:	b2c0      	uxtb	r0, r0
 80099da:	2811      	cmp	r0, #17
 80099dc:	4646      	mov	r6, r8
 80099de:	46a9      	mov	r9, r5
 80099e0:	d00b      	beq.n	80099fa <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 80099e2:	686b      	ldr	r3, [r5, #4]
 80099e4:	2070      	movs	r0, #112	; 0x70
 80099e6:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80099e8:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80099ea:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80099ec:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80099ee:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80099f2:	d005      	beq.n	8009a00 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 80099f4:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 80099f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 80099fa:	2354      	movs	r3, #84	; 0x54
 80099fc:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8009a00:	4b0a      	ldr	r3, [pc, #40]	; (8009a2c <BSP_TS_Init+0x70>)
 8009a02:	4d0b      	ldr	r5, [pc, #44]	; (8009a30 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8009a04:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 8009a06:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8009a0a:	42bc      	cmp	r4, r7
 8009a0c:	bf34      	ite	cc
 8009a0e:	2101      	movcc	r1, #1
 8009a10:	210c      	movcs	r1, #12
 8009a12:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8009a14:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8009a18:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8009a1a:	682b      	ldr	r3, [r5, #0]
 8009a1c:	7830      	ldrb	r0, [r6, #0]
 8009a1e:	68db      	ldr	r3, [r3, #12]
 8009a20:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8009a22:	2000      	movs	r0, #0
 8009a24:	e7e7      	b.n	80099f6 <BSP_TS_Init+0x3a>
 8009a26:	bf00      	nop
 8009a28:	20000024 	.word	0x20000024
 8009a2c:	2000f2a8 	.word	0x2000f2a8
 8009a30:	2000f2a4 	.word	0x2000f2a4
 8009a34:	2000f290 	.word	0x2000f290

08009a38 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8009a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009a3c:	4c34      	ldr	r4, [pc, #208]	; (8009b10 <BSP_TS_GetState+0xd8>)
 8009a3e:	4d35      	ldr	r5, [pc, #212]	; (8009b14 <BSP_TS_GetState+0xdc>)
 8009a40:	6823      	ldr	r3, [r4, #0]
{
 8009a42:	b085      	sub	sp, #20
 8009a44:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009a46:	691b      	ldr	r3, [r3, #16]
 8009a48:	7828      	ldrb	r0, [r5, #0]
 8009a4a:	4798      	blx	r3
 8009a4c:	46a1      	mov	r9, r4
 8009a4e:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8009a50:	9501      	str	r5, [sp, #4]
 8009a52:	b158      	cbz	r0, 8009a6c <BSP_TS_GetState+0x34>
 8009a54:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8009b20 <BSP_TS_GetState+0xe8>
 8009a58:	4f2f      	ldr	r7, [pc, #188]	; (8009b18 <BSP_TS_GetState+0xe0>)
 8009a5a:	f106 0b02 	add.w	fp, r6, #2
 8009a5e:	ad03      	add	r5, sp, #12
 8009a60:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8009a62:	f04f 0a00 	mov.w	sl, #0
 8009a66:	7833      	ldrb	r3, [r6, #0]
 8009a68:	4553      	cmp	r3, sl
 8009a6a:	d803      	bhi.n	8009a74 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8009a6c:	2000      	movs	r0, #0
 8009a6e:	b005      	add	sp, #20
 8009a70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8009a74:	f8d9 3000 	ldr.w	r3, [r9]
 8009a78:	9801      	ldr	r0, [sp, #4]
 8009a7a:	695b      	ldr	r3, [r3, #20]
 8009a7c:	7800      	ldrb	r0, [r0, #0]
 8009a7e:	9100      	str	r1, [sp, #0]
 8009a80:	462a      	mov	r2, r5
 8009a82:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8009a84:	4b25      	ldr	r3, [pc, #148]	; (8009b1c <BSP_TS_GetState+0xe4>)
 8009a86:	9900      	ldr	r1, [sp, #0]
 8009a88:	781b      	ldrb	r3, [r3, #0]
 8009a8a:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8009a8e:	bf1f      	itttt	ne
 8009a90:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8009a92:	8828      	ldrhne	r0, [r5, #0]
 8009a94:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8009a96:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8009a98:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8009a9a:	bf41      	itttt	mi
 8009a9c:	880a      	ldrhmi	r2, [r1, #0]
 8009a9e:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8009aa2:	3203      	addmi	r2, #3
 8009aa4:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8009aa6:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009aa8:	bf48      	it	mi
 8009aaa:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009aac:	f8d8 2000 	ldr.w	r2, [r8]
 8009ab0:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009ab4:	bf42      	ittt	mi
 8009ab6:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8009aba:	3301      	addmi	r3, #1
 8009abc:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009abe:	b293      	uxth	r3, r2
 8009ac0:	4290      	cmp	r0, r2
 8009ac2:	bf8c      	ite	hi
 8009ac4:	1ac3      	subhi	r3, r0, r3
 8009ac6:	1a1b      	subls	r3, r3, r0
 8009ac8:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009aca:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009ace:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009ad0:	683b      	ldr	r3, [r7, #0]
 8009ad2:	b29c      	uxth	r4, r3
 8009ad4:	429a      	cmp	r2, r3
 8009ad6:	bf88      	it	hi
 8009ad8:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8009ada:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009adc:	bf98      	it	ls
 8009ade:	1aa4      	subls	r4, r4, r2
 8009ae0:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8009ae2:	441c      	add	r4, r3
 8009ae4:	46c4      	mov	ip, r8
 8009ae6:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8009ae8:	bfc8      	it	gt
 8009aea:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8009aee:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8009af2:	bfc8      	it	gt
 8009af4:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8009af6:	46be      	mov	lr, r7
 8009af8:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8009afc:	f8de 3000 	ldr.w	r3, [lr]
 8009b00:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8009b04:	f108 0804 	add.w	r8, r8, #4
 8009b08:	3704      	adds	r7, #4
 8009b0a:	f10a 0a01 	add.w	sl, sl, #1
 8009b0e:	e7aa      	b.n	8009a66 <BSP_TS_GetState+0x2e>
 8009b10:	2000f2a4 	.word	0x2000f2a4
 8009b14:	2000f290 	.word	0x2000f290
 8009b18:	2000f29c 	.word	0x2000f29c
 8009b1c:	2000f2a8 	.word	0x2000f2a8
 8009b20:	2000f294 	.word	0x2000f294

08009b24 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009b24:	4b05      	ldr	r3, [pc, #20]	; (8009b3c <SystemInit+0x18>)
 8009b26:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009b2a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009b2e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009b32:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8009b36:	609a      	str	r2, [r3, #8]
#endif
}
 8009b38:	4770      	bx	lr
 8009b3a:	bf00      	nop
 8009b3c:	e000ed00 	.word	0xe000ed00

08009b40 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009b40:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009b42:	4b0b      	ldr	r3, [pc, #44]	; (8009b70 <HAL_Init+0x30>)
 8009b44:	681a      	ldr	r2, [r3, #0]
 8009b46:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009b4a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009b4c:	681a      	ldr	r2, [r3, #0]
 8009b4e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009b52:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009b54:	681a      	ldr	r2, [r3, #0]
 8009b56:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009b5a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009b5c:	2003      	movs	r0, #3
 8009b5e:	f000 f82f 	bl	8009bc0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009b62:	2000      	movs	r0, #0
 8009b64:	f7f8 f97c 	bl	8001e60 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009b68:	f7f7 ff1c 	bl	80019a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009b6c:	2000      	movs	r0, #0
 8009b6e:	bd08      	pop	{r3, pc}
 8009b70:	40023c00 	.word	0x40023c00

08009b74 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009b74:	4a03      	ldr	r2, [pc, #12]	; (8009b84 <HAL_IncTick+0x10>)
 8009b76:	4b04      	ldr	r3, [pc, #16]	; (8009b88 <HAL_IncTick+0x14>)
 8009b78:	6811      	ldr	r1, [r2, #0]
 8009b7a:	781b      	ldrb	r3, [r3, #0]
 8009b7c:	440b      	add	r3, r1
 8009b7e:	6013      	str	r3, [r2, #0]
}
 8009b80:	4770      	bx	lr
 8009b82:	bf00      	nop
 8009b84:	200205dc 	.word	0x200205dc
 8009b88:	20000058 	.word	0x20000058

08009b8c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009b8c:	4b01      	ldr	r3, [pc, #4]	; (8009b94 <HAL_GetTick+0x8>)
 8009b8e:	6818      	ldr	r0, [r3, #0]
}
 8009b90:	4770      	bx	lr
 8009b92:	bf00      	nop
 8009b94:	200205dc 	.word	0x200205dc

08009b98 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009b98:	b538      	push	{r3, r4, r5, lr}
 8009b9a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009b9c:	f7ff fff6 	bl	8009b8c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009ba0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8009ba2:	bf1c      	itt	ne
 8009ba4:	4b05      	ldrne	r3, [pc, #20]	; (8009bbc <HAL_Delay+0x24>)
 8009ba6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8009ba8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8009baa:	bf18      	it	ne
 8009bac:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009bae:	f7ff ffed 	bl	8009b8c <HAL_GetTick>
 8009bb2:	1b43      	subs	r3, r0, r5
 8009bb4:	42a3      	cmp	r3, r4
 8009bb6:	d3fa      	bcc.n	8009bae <HAL_Delay+0x16>
  {
  }
}
 8009bb8:	bd38      	pop	{r3, r4, r5, pc}
 8009bba:	bf00      	nop
 8009bbc:	20000058 	.word	0x20000058

08009bc0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009bc0:	4907      	ldr	r1, [pc, #28]	; (8009be0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009bc2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009bc4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009bc8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009bca:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009bcc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009bd0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009bd2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009bd4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009bd8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009bdc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009bde:	4770      	bx	lr
 8009be0:	e000ed00 	.word	0xe000ed00

08009be4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009be4:	4b16      	ldr	r3, [pc, #88]	; (8009c40 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009be6:	b530      	push	{r4, r5, lr}
 8009be8:	68dc      	ldr	r4, [r3, #12]
 8009bea:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009bee:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009bf2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009bf4:	2d04      	cmp	r5, #4
 8009bf6:	bf28      	it	cs
 8009bf8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009bfa:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009bfc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009c00:	bf8c      	ite	hi
 8009c02:	3c03      	subhi	r4, #3
 8009c04:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c06:	fa03 f505 	lsl.w	r5, r3, r5
 8009c0a:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009c0e:	40a3      	lsls	r3, r4
 8009c10:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c14:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8009c16:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c18:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c1c:	bfac      	ite	ge
 8009c1e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c22:	4a08      	ldrlt	r2, [pc, #32]	; (8009c44 <HAL_NVIC_SetPriority+0x60>)
 8009c24:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8009c28:	bfb8      	it	lt
 8009c2a:	f000 000f 	andlt.w	r0, r0, #15
 8009c2e:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c30:	bfaa      	itet	ge
 8009c32:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c36:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c38:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009c3c:	bd30      	pop	{r4, r5, pc}
 8009c3e:	bf00      	nop
 8009c40:	e000ed00 	.word	0xe000ed00
 8009c44:	e000ed14 	.word	0xe000ed14

08009c48 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009c48:	2800      	cmp	r0, #0
 8009c4a:	db08      	blt.n	8009c5e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009c4c:	0942      	lsrs	r2, r0, #5
 8009c4e:	2301      	movs	r3, #1
 8009c50:	f000 001f 	and.w	r0, r0, #31
 8009c54:	fa03 f000 	lsl.w	r0, r3, r0
 8009c58:	4b01      	ldr	r3, [pc, #4]	; (8009c60 <HAL_NVIC_EnableIRQ+0x18>)
 8009c5a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009c5e:	4770      	bx	lr
 8009c60:	e000e100 	.word	0xe000e100

08009c64 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009c64:	2800      	cmp	r0, #0
 8009c66:	db0d      	blt.n	8009c84 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009c68:	0943      	lsrs	r3, r0, #5
 8009c6a:	2201      	movs	r2, #1
 8009c6c:	f000 001f 	and.w	r0, r0, #31
 8009c70:	fa02 f000 	lsl.w	r0, r2, r0
 8009c74:	3320      	adds	r3, #32
 8009c76:	4a04      	ldr	r2, [pc, #16]	; (8009c88 <HAL_NVIC_DisableIRQ+0x24>)
 8009c78:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8009c7c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8009c80:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8009c84:	4770      	bx	lr
 8009c86:	bf00      	nop
 8009c88:	e000e100 	.word	0xe000e100

08009c8c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8009c8c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009c8e:	4604      	mov	r4, r0
 8009c90:	b150      	cbz	r0, 8009ca8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009c92:	7943      	ldrb	r3, [r0, #5]
 8009c94:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009c98:	b913      	cbnz	r3, 8009ca0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8009c9a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8009c9c:	f7f7 fea2 	bl	80019e4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009ca0:	2301      	movs	r3, #1
 8009ca2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009ca4:	2000      	movs	r0, #0
}
 8009ca6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009ca8:	2001      	movs	r0, #1
 8009caa:	e7fc      	b.n	8009ca6 <HAL_CRC_Init+0x1a>

08009cac <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009cac:	6803      	ldr	r3, [r0, #0]
{
 8009cae:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009cb0:	4c08      	ldr	r4, [pc, #32]	; (8009cd4 <DMA_CalcBaseAndBitshift+0x28>)
{
 8009cb2:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009cb4:	b2d9      	uxtb	r1, r3
 8009cb6:	3910      	subs	r1, #16
 8009cb8:	2018      	movs	r0, #24
 8009cba:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009cbe:	5c20      	ldrb	r0, [r4, r0]
 8009cc0:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 8009cc2:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8009cc6:	f020 0003 	bic.w	r0, r0, #3
 8009cca:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009ccc:	bf88      	it	hi
 8009cce:	3004      	addhi	r0, #4
 8009cd0:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8009cd2:	bd10      	pop	{r4, pc}
 8009cd4:	08027235 	.word	0x08027235

08009cd8 <HAL_DMA_Init>:
{
 8009cd8:	b570      	push	{r4, r5, r6, lr}
 8009cda:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009cdc:	f7ff ff56 	bl	8009b8c <HAL_GetTick>
 8009ce0:	4605      	mov	r5, r0
  if(hdma == NULL)
 8009ce2:	2c00      	cmp	r4, #0
 8009ce4:	d073      	beq.n	8009dce <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8009ce6:	2302      	movs	r3, #2
 8009ce8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8009cec:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009cee:	2300      	movs	r3, #0
 8009cf0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8009cf4:	6813      	ldr	r3, [r2, #0]
 8009cf6:	f023 0301 	bic.w	r3, r3, #1
 8009cfa:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009cfc:	6821      	ldr	r1, [r4, #0]
 8009cfe:	680b      	ldr	r3, [r1, #0]
 8009d00:	07d8      	lsls	r0, r3, #31
 8009d02:	d42f      	bmi.n	8009d64 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8009d04:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009d06:	4d33      	ldr	r5, [pc, #204]	; (8009dd4 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009d08:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009d0a:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009d0c:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8009d10:	4313      	orrs	r3, r2
 8009d12:	68e2      	ldr	r2, [r4, #12]
 8009d14:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009d16:	6922      	ldr	r2, [r4, #16]
 8009d18:	4313      	orrs	r3, r2
 8009d1a:	6962      	ldr	r2, [r4, #20]
 8009d1c:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009d1e:	69e2      	ldr	r2, [r4, #28]
 8009d20:	4303      	orrs	r3, r0
 8009d22:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8009d24:	6a22      	ldr	r2, [r4, #32]
 8009d26:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009d28:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d2a:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009d2c:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8009d30:	bf02      	ittt	eq
 8009d32:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8009d36:	4335      	orreq	r5, r6
 8009d38:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8009d3a:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8009d3c:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009d3e:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8009d40:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8009d44:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009d48:	d133      	bne.n	8009db2 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8009d4a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8009d4c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8009d4e:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8009d50:	b37d      	cbz	r5, 8009db2 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8009d52:	b990      	cbnz	r0, 8009d7a <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8009d54:	2a01      	cmp	r2, #1
 8009d56:	d021      	beq.n	8009d9c <HAL_DMA_Init+0xc4>
 8009d58:	f032 0202 	bics.w	r2, r2, #2
 8009d5c:	d129      	bne.n	8009db2 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8009d5e:	01ea      	lsls	r2, r5, #7
 8009d60:	d527      	bpl.n	8009db2 <HAL_DMA_Init+0xda>
 8009d62:	e01e      	b.n	8009da2 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8009d64:	f7ff ff12 	bl	8009b8c <HAL_GetTick>
 8009d68:	1b40      	subs	r0, r0, r5
 8009d6a:	2805      	cmp	r0, #5
 8009d6c:	d9c6      	bls.n	8009cfc <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8009d6e:	2320      	movs	r3, #32
 8009d70:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009d72:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8009d74:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8009d78:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8009d7a:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8009d7e:	d114      	bne.n	8009daa <HAL_DMA_Init+0xd2>
    switch (tmp)
 8009d80:	2a03      	cmp	r2, #3
 8009d82:	d816      	bhi.n	8009db2 <HAL_DMA_Init+0xda>
 8009d84:	a001      	add	r0, pc, #4	; (adr r0, 8009d8c <HAL_DMA_Init+0xb4>)
 8009d86:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8009d8a:	bf00      	nop
 8009d8c:	08009da3 	.word	0x08009da3
 8009d90:	08009d5f 	.word	0x08009d5f
 8009d94:	08009da3 	.word	0x08009da3
 8009d98:	08009d9d 	.word	0x08009d9d
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8009d9c:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8009da0:	d107      	bne.n	8009db2 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8009da2:	2340      	movs	r3, #64	; 0x40
 8009da4:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8009da6:	2001      	movs	r0, #1
 8009da8:	e7e4      	b.n	8009d74 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8009daa:	2a02      	cmp	r2, #2
 8009dac:	d9f9      	bls.n	8009da2 <HAL_DMA_Init+0xca>
 8009dae:	2a03      	cmp	r2, #3
 8009db0:	d0d5      	beq.n	8009d5e <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8009db2:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8009db4:	4620      	mov	r0, r4
 8009db6:	f7ff ff79 	bl	8009cac <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009dba:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8009dbc:	233f      	movs	r3, #63	; 0x3f
 8009dbe:	4093      	lsls	r3, r2
 8009dc0:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009dc2:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8009dc4:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009dc6:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8009dc8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8009dcc:	e7d4      	b.n	8009d78 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8009dce:	2001      	movs	r0, #1
 8009dd0:	e7d2      	b.n	8009d78 <HAL_DMA_Init+0xa0>
 8009dd2:	bf00      	nop
 8009dd4:	f010803f 	.word	0xf010803f

08009dd8 <HAL_DMA_DeInit>:
{
 8009dd8:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8009dda:	4605      	mov	r5, r0
 8009ddc:	b320      	cbz	r0, 8009e28 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8009dde:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009de2:	2b02      	cmp	r3, #2
 8009de4:	b2dc      	uxtb	r4, r3
 8009de6:	d01d      	beq.n	8009e24 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8009de8:	6803      	ldr	r3, [r0, #0]
 8009dea:	681a      	ldr	r2, [r3, #0]
 8009dec:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8009df0:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8009df2:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8009df4:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8009df6:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8009df8:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8009dfa:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8009dfc:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8009dfe:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8009e00:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8009e02:	f7ff ff53 	bl	8009cac <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009e06:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8009e08:	233f      	movs	r3, #63	; 0x3f
 8009e0a:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8009e0c:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8009e10:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8009e14:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009e18:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009e1a:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8009e1c:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8009e20:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8009e24:	4620      	mov	r0, r4
 8009e26:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009e28:	2401      	movs	r4, #1
 8009e2a:	e7fb      	b.n	8009e24 <HAL_DMA_DeInit+0x4c>

08009e2c <HAL_DMA_Abort>:
{
 8009e2c:	b570      	push	{r4, r5, r6, lr}
 8009e2e:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8009e30:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8009e32:	f7ff feab 	bl	8009b8c <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009e36:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8009e3a:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8009e3c:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009e3e:	d006      	beq.n	8009e4e <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009e40:	2380      	movs	r3, #128	; 0x80
 8009e42:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8009e44:	2300      	movs	r3, #0
 8009e46:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8009e4a:	2001      	movs	r0, #1
}
 8009e4c:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8009e4e:	6823      	ldr	r3, [r4, #0]
 8009e50:	681a      	ldr	r2, [r3, #0]
 8009e52:	f022 0216 	bic.w	r2, r2, #22
 8009e56:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8009e58:	695a      	ldr	r2, [r3, #20]
 8009e5a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009e5e:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009e60:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009e62:	b90a      	cbnz	r2, 8009e68 <HAL_DMA_Abort+0x3c>
 8009e64:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8009e66:	b11a      	cbz	r2, 8009e70 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009e68:	681a      	ldr	r2, [r3, #0]
 8009e6a:	f022 0208 	bic.w	r2, r2, #8
 8009e6e:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8009e70:	681a      	ldr	r2, [r3, #0]
 8009e72:	f022 0201 	bic.w	r2, r2, #1
 8009e76:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009e78:	6823      	ldr	r3, [r4, #0]
 8009e7a:	681b      	ldr	r3, [r3, #0]
 8009e7c:	f013 0301 	ands.w	r3, r3, #1
 8009e80:	d10a      	bne.n	8009e98 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009e82:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8009e84:	223f      	movs	r2, #63	; 0x3f
 8009e86:	408a      	lsls	r2, r1
 8009e88:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8009e8a:	2201      	movs	r2, #1
 8009e8c:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8009e90:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8009e94:	4618      	mov	r0, r3
 8009e96:	e7d9      	b.n	8009e4c <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8009e98:	f7ff fe78 	bl	8009b8c <HAL_GetTick>
 8009e9c:	1b40      	subs	r0, r0, r5
 8009e9e:	2805      	cmp	r0, #5
 8009ea0:	d9ea      	bls.n	8009e78 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8009ea2:	2320      	movs	r3, #32
 8009ea4:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009ea6:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8009ea8:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009eaa:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8009eae:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8009eb2:	e7cb      	b.n	8009e4c <HAL_DMA_Abort+0x20>

08009eb4 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8009eb4:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8009eb6:	4604      	mov	r4, r0
 8009eb8:	b330      	cbz	r0, 8009f08 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8009eba:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8009ebe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009ec2:	b91b      	cbnz	r3, 8009ecc <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8009ec4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8009ec8:	f7f7 fda4 	bl	8001a14 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009ecc:	6822      	ldr	r2, [r4, #0]
 8009ece:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009ed0:	2302      	movs	r3, #2
 8009ed2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009ed6:	6813      	ldr	r3, [r2, #0]
 8009ed8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8009edc:	430b      	orrs	r3, r1
 8009ede:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8009ee0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009ee2:	68a1      	ldr	r1, [r4, #8]
 8009ee4:	f023 0307 	bic.w	r3, r3, #7
 8009ee8:	430b      	orrs	r3, r1
 8009eea:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8009eec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009eee:	68e1      	ldr	r1, [r4, #12]
 8009ef0:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009ef4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8009ef8:	430b      	orrs	r3, r1
 8009efa:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009efc:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009efe:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009f00:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009f02:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8009f06:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009f08:	2001      	movs	r0, #1
 8009f0a:	e7fc      	b.n	8009f06 <HAL_DMA2D_Init+0x52>

08009f0c <HAL_DMA2D_LineEventCallback>:
 8009f0c:	4770      	bx	lr

08009f0e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8009f0e:	4770      	bx	lr

08009f10 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8009f10:	6803      	ldr	r3, [r0, #0]
{
 8009f12:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8009f14:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8009f16:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8009f18:	07f2      	lsls	r2, r6, #31
{
 8009f1a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8009f1c:	d514      	bpl.n	8009f48 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8009f1e:	05e9      	lsls	r1, r5, #23
 8009f20:	d512      	bpl.n	8009f48 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8009f22:	681a      	ldr	r2, [r3, #0]
 8009f24:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009f28:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8009f2a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8009f2c:	f042 0201 	orr.w	r2, r2, #1
 8009f30:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8009f32:	2201      	movs	r2, #1
 8009f34:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009f36:	2304      	movs	r3, #4
 8009f38:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009f3c:	2300      	movs	r3, #0
 8009f3e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8009f42:	6943      	ldr	r3, [r0, #20]
 8009f44:	b103      	cbz	r3, 8009f48 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8009f46:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8009f48:	06b2      	lsls	r2, r6, #26
 8009f4a:	d516      	bpl.n	8009f7a <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8009f4c:	04ab      	lsls	r3, r5, #18
 8009f4e:	d514      	bpl.n	8009f7a <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8009f50:	6823      	ldr	r3, [r4, #0]
 8009f52:	681a      	ldr	r2, [r3, #0]
 8009f54:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009f58:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8009f5a:	2220      	movs	r2, #32
 8009f5c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8009f5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009f60:	f043 0302 	orr.w	r3, r3, #2
 8009f64:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009f66:	2304      	movs	r3, #4
 8009f68:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009f6c:	2300      	movs	r3, #0
 8009f6e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8009f72:	6963      	ldr	r3, [r4, #20]
 8009f74:	b10b      	cbz	r3, 8009f7a <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8009f76:	4620      	mov	r0, r4
 8009f78:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8009f7a:	0730      	lsls	r0, r6, #28
 8009f7c:	d516      	bpl.n	8009fac <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8009f7e:	0529      	lsls	r1, r5, #20
 8009f80:	d514      	bpl.n	8009fac <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8009f82:	6823      	ldr	r3, [r4, #0]
 8009f84:	681a      	ldr	r2, [r3, #0]
 8009f86:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009f8a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8009f8c:	2208      	movs	r2, #8
 8009f8e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8009f90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009f92:	f043 0304 	orr.w	r3, r3, #4
 8009f96:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009f98:	2304      	movs	r3, #4
 8009f9a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009f9e:	2300      	movs	r3, #0
 8009fa0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8009fa4:	6963      	ldr	r3, [r4, #20]
 8009fa6:	b10b      	cbz	r3, 8009fac <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8009fa8:	4620      	mov	r0, r4
 8009faa:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8009fac:	0772      	lsls	r2, r6, #29
 8009fae:	d50b      	bpl.n	8009fc8 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8009fb0:	056b      	lsls	r3, r5, #21
 8009fb2:	d509      	bpl.n	8009fc8 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8009fb4:	6823      	ldr	r3, [r4, #0]
 8009fb6:	681a      	ldr	r2, [r3, #0]
 8009fb8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009fbc:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8009fbe:	2204      	movs	r2, #4
 8009fc0:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8009fc2:	4620      	mov	r0, r4
 8009fc4:	f7ff ffa2 	bl	8009f0c <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8009fc8:	07b0      	lsls	r0, r6, #30
 8009fca:	d514      	bpl.n	8009ff6 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8009fcc:	05a9      	lsls	r1, r5, #22
 8009fce:	d512      	bpl.n	8009ff6 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8009fd0:	6823      	ldr	r3, [r4, #0]
 8009fd2:	681a      	ldr	r2, [r3, #0]
 8009fd4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009fd8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8009fda:	2202      	movs	r2, #2
 8009fdc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8009fde:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009fe0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8009fe2:	2301      	movs	r3, #1
 8009fe4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009fe8:	2300      	movs	r3, #0
 8009fea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8009fee:	6923      	ldr	r3, [r4, #16]
 8009ff0:	b10b      	cbz	r3, 8009ff6 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8009ff2:	4620      	mov	r0, r4
 8009ff4:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8009ff6:	06f2      	lsls	r2, r6, #27
 8009ff8:	d513      	bpl.n	800a022 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8009ffa:	04eb      	lsls	r3, r5, #19
 8009ffc:	d511      	bpl.n	800a022 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8009ffe:	6823      	ldr	r3, [r4, #0]
 800a000:	681a      	ldr	r2, [r3, #0]
 800a002:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a006:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800a008:	2210      	movs	r2, #16
 800a00a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a00c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a00e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a010:	2301      	movs	r3, #1
 800a012:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a016:	2300      	movs	r3, #0
 800a018:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800a01c:	4620      	mov	r0, r4
 800a01e:	f7ff ff76 	bl	8009f0e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800a022:	bd70      	pop	{r4, r5, r6, pc}

0800a024 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800a024:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800a026:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800a02a:	2b01      	cmp	r3, #1
 800a02c:	f04f 0302 	mov.w	r3, #2
 800a030:	d02b      	beq.n	800a08a <HAL_DMA2D_ConfigLayer+0x66>
 800a032:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a034:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800a038:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a03c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800a040:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800a044:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800a046:	4f18      	ldr	r7, [pc, #96]	; (800a0a8 <HAL_DMA2D_ConfigLayer+0x84>)
 800a048:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a04c:	3c09      	subs	r4, #9
 800a04e:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800a050:	bf9c      	itt	ls
 800a052:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800a056:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a058:	ea4f 1601 	mov.w	r6, r1, lsl #4
 800a05c:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800a05e:	bf88      	it	hi
 800a060:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800a064:	b999      	cbnz	r1, 800a08e <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a066:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a068:	4039      	ands	r1, r7
 800a06a:	430a      	orrs	r2, r1
 800a06c:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a06e:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800a070:	6982      	ldr	r2, [r0, #24]
 800a072:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a074:	d803      	bhi.n	800a07e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800a076:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800a078:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800a07c:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a07e:	2301      	movs	r3, #1
 800a080:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800a084:	2300      	movs	r3, #0
 800a086:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800a08a:	4618      	mov	r0, r3

  return HAL_OK;
}
 800a08c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800a08e:	69d9      	ldr	r1, [r3, #28]
 800a090:	4039      	ands	r1, r7
 800a092:	430a      	orrs	r2, r1
 800a094:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a096:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a098:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a09a:	6992      	ldr	r2, [r2, #24]
 800a09c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800a09e:	bf9c      	itt	ls
 800a0a0:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800a0a4:	621d      	strls	r5, [r3, #32]
 800a0a6:	e7ea      	b.n	800a07e <HAL_DMA2D_ConfigLayer+0x5a>
 800a0a8:	00fcfff0 	.word	0x00fcfff0

0800a0ac <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800a0ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0b0:	4607      	mov	r7, r0
 800a0b2:	460d      	mov	r5, r1
 800a0b4:	4614      	mov	r4, r2
 800a0b6:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800a0b8:	f7ff fd68 	bl	8009b8c <HAL_GetTick>
 800a0bc:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a0be:	683a      	ldr	r2, [r7, #0]
 800a0c0:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800a0c2:	07db      	lsls	r3, r3, #31
 800a0c4:	d50a      	bpl.n	800a0dc <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800a0c6:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 800a0ca:	9c06      	ldr	r4, [sp, #24]
 800a0cc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800a0d0:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800a0d4:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 800a0d6:	2000      	movs	r0, #0
}
 800a0d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 800a0dc:	f7ff fd56 	bl	8009b8c <HAL_GetTick>
 800a0e0:	eba0 0008 	sub.w	r0, r0, r8
 800a0e4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a0e8:	d9e9      	bls.n	800a0be <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800a0ea:	2003      	movs	r0, #3
 800a0ec:	e7f4      	b.n	800a0d8 <DSI_ShortWrite+0x2c>

0800a0ee <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a0ee:	7c03      	ldrb	r3, [r0, #16]
 800a0f0:	2b01      	cmp	r3, #1
 800a0f2:	d05d      	beq.n	800a1b0 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800a0f4:	6803      	ldr	r3, [r0, #0]
 800a0f6:	2200      	movs	r2, #0
 800a0f8:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a0fc:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800a100:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a102:	bf48      	it	mi
 800a104:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800a108:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a10a:	bf42      	ittt	mi
 800a10c:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800a110:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800a114:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800a118:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800a11a:	bf42      	ittt	mi
 800a11c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800a120:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800a124:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800a128:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800a12a:	bf42      	ittt	mi
 800a12c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a130:	f042 0201 	orrmi.w	r2, r2, #1
 800a134:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800a138:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800a13a:	bf42      	ittt	mi
 800a13c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a140:	f042 0202 	orrmi.w	r2, r2, #2
 800a144:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800a148:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800a14a:	bf42      	ittt	mi
 800a14c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a150:	f042 020c 	orrmi.w	r2, r2, #12
 800a154:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800a158:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800a15a:	bf42      	ittt	mi
 800a15c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a160:	f042 0210 	orrmi.w	r2, r2, #16
 800a164:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800a168:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800a16a:	bf42      	ittt	mi
 800a16c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a170:	f042 0220 	orrmi.w	r2, r2, #32
 800a174:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800a178:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800a17a:	bf42      	ittt	mi
 800a17c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a180:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a184:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800a188:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800a18a:	bf42      	ittt	mi
 800a18c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a190:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a194:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800a198:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800a19a:	bf42      	ittt	mi
 800a19c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1a0:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800a1a4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800a1a8:	2300      	movs	r3, #0
 800a1aa:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a1ac:	4618      	mov	r0, r3
 800a1ae:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a1b0:	2002      	movs	r0, #2
}
 800a1b2:	4770      	bx	lr

0800a1b4 <HAL_DSI_Init>:
{
 800a1b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1b6:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800a1b8:	4604      	mov	r4, r0
 800a1ba:	2800      	cmp	r0, #0
 800a1bc:	f000 80a7 	beq.w	800a30e <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800a1c0:	7c43      	ldrb	r3, [r0, #17]
 800a1c2:	b90b      	cbnz	r3, 800a1c8 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800a1c4:	f7f7 fc48 	bl	8001a58 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800a1c8:	2303      	movs	r3, #3
 800a1ca:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800a1cc:	2300      	movs	r3, #0
 800a1ce:	9300      	str	r3, [sp, #0]
 800a1d0:	6823      	ldr	r3, [r4, #0]
 800a1d2:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800a1d6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800a1da:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800a1de:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800a1e2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800a1e6:	9300      	str	r3, [sp, #0]
 800a1e8:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800a1ea:	f7ff fccf 	bl	8009b8c <HAL_GetTick>
 800a1ee:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800a1f0:	6822      	ldr	r2, [r4, #0]
 800a1f2:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a1f6:	04d9      	lsls	r1, r3, #19
 800a1f8:	d578      	bpl.n	800a2ec <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800a1fa:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a1fe:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800a202:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800a206:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800a20a:	e9d5 0300 	ldrd	r0, r3, [r5]
 800a20e:	02db      	lsls	r3, r3, #11
 800a210:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 800a214:	68a8      	ldr	r0, [r5, #8]
 800a216:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800a21a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800a21e:	430b      	orrs	r3, r1
 800a220:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a224:	2300      	movs	r3, #0
 800a226:	9301      	str	r3, [sp, #4]
 800a228:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a22c:	f043 0301 	orr.w	r3, r3, #1
 800a230:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800a234:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a238:	f003 0301 	and.w	r3, r3, #1
 800a23c:	9301      	str	r3, [sp, #4]
 800a23e:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 800a240:	f7ff fca4 	bl	8009b8c <HAL_GetTick>
 800a244:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800a246:	6823      	ldr	r3, [r4, #0]
 800a248:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a24c:	05d2      	lsls	r2, r2, #23
 800a24e:	d557      	bpl.n	800a300 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a250:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a254:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a256:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a258:	f042 0206 	orr.w	r2, r2, #6
 800a25c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800a260:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a264:	f022 0203 	bic.w	r2, r2, #3
 800a268:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a26c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a270:	430a      	orrs	r2, r1
 800a272:	f042 0201 	orr.w	r2, r2, #1
 800a276:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a27a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a27e:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a280:	f022 0203 	bic.w	r2, r2, #3
 800a284:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a288:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a28c:	430a      	orrs	r2, r1
 800a28e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a292:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a294:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a296:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800a29a:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a29c:	689a      	ldr	r2, [r3, #8]
 800a29e:	430a      	orrs	r2, r1
 800a2a0:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a2a2:	686a      	ldr	r2, [r5, #4]
 800a2a4:	2a01      	cmp	r2, #1
 800a2a6:	bf38      	it	cc
 800a2a8:	2201      	movcc	r2, #1
 800a2aa:	4611      	mov	r1, r2
 800a2ac:	4a19      	ldr	r2, [pc, #100]	; (800a314 <HAL_DSI_Init+0x160>)
 800a2ae:	434a      	muls	r2, r1
 800a2b0:	68a9      	ldr	r1, [r5, #8]
 800a2b2:	f001 0103 	and.w	r1, r1, #3
 800a2b6:	408a      	lsls	r2, r1
 800a2b8:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800a2bc:	4341      	muls	r1, r0
 800a2be:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800a2c2:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800a2c6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a2ca:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a2ce:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a2d2:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a2d4:	430a      	orrs	r2, r1
 800a2d6:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a2da:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a2de:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800a2e2:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800a2e4:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800a2e6:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800a2e8:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800a2ea:	e007      	b.n	800a2fc <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a2ec:	f7ff fc4e 	bl	8009b8c <HAL_GetTick>
 800a2f0:	1b80      	subs	r0, r0, r6
 800a2f2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a2f6:	f67f af7b 	bls.w	800a1f0 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800a2fa:	2003      	movs	r0, #3
}
 800a2fc:	b002      	add	sp, #8
 800a2fe:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a300:	f7ff fc44 	bl	8009b8c <HAL_GetTick>
 800a304:	1b80      	subs	r0, r0, r6
 800a306:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a30a:	d99c      	bls.n	800a246 <HAL_DSI_Init+0x92>
 800a30c:	e7f5      	b.n	800a2fa <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 800a30e:	2001      	movs	r0, #1
 800a310:	e7f4      	b.n	800a2fc <HAL_DSI_Init+0x148>
 800a312:	bf00      	nop
 800a314:	003d0900 	.word	0x003d0900

0800a318 <HAL_DSI_ErrorCallback>:
 800a318:	4770      	bx	lr

0800a31a <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a31a:	6803      	ldr	r3, [r0, #0]
 800a31c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a320:	07d1      	lsls	r1, r2, #31
{
 800a322:	b510      	push	{r4, lr}
 800a324:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a326:	d508      	bpl.n	800a33a <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800a328:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a32c:	07d2      	lsls	r2, r2, #31
 800a32e:	d504      	bpl.n	800a33a <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800a330:	2201      	movs	r2, #1
 800a332:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800a336:	f7f6 fbeb 	bl	8000b10 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800a33a:	6823      	ldr	r3, [r4, #0]
 800a33c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a340:	0791      	lsls	r1, r2, #30
 800a342:	d509      	bpl.n	800a358 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800a344:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a348:	0792      	lsls	r2, r2, #30
 800a34a:	d505      	bpl.n	800a358 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800a34c:	2202      	movs	r2, #2
 800a34e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800a352:	4620      	mov	r0, r4
 800a354:	f7f6 fc10 	bl	8000b78 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800a358:	69a3      	ldr	r3, [r4, #24]
 800a35a:	2b00      	cmp	r3, #0
 800a35c:	d04e      	beq.n	800a3fc <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800a35e:	6821      	ldr	r1, [r4, #0]
 800a360:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a364:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800a368:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a36c:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a36e:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a372:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a374:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a376:	b119      	cbz	r1, 800a380 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800a378:	6961      	ldr	r1, [r4, #20]
 800a37a:	f041 0101 	orr.w	r1, r1, #1
 800a37e:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800a380:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800a384:	bf1e      	ittt	ne
 800a386:	6962      	ldrne	r2, [r4, #20]
 800a388:	f042 0202 	orrne.w	r2, r2, #2
 800a38c:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800a38e:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800a390:	bf42      	ittt	mi
 800a392:	6962      	ldrmi	r2, [r4, #20]
 800a394:	f042 0204 	orrmi.w	r2, r2, #4
 800a398:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800a39a:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800a39c:	bf42      	ittt	mi
 800a39e:	6962      	ldrmi	r2, [r4, #20]
 800a3a0:	f042 0208 	orrmi.w	r2, r2, #8
 800a3a4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800a3a6:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800a3aa:	bf1e      	ittt	ne
 800a3ac:	6962      	ldrne	r2, [r4, #20]
 800a3ae:	f042 0210 	orrne.w	r2, r2, #16
 800a3b2:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800a3b4:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800a3b6:	bf42      	ittt	mi
 800a3b8:	6962      	ldrmi	r2, [r4, #20]
 800a3ba:	f042 0220 	orrmi.w	r2, r2, #32
 800a3be:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800a3c0:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800a3c2:	bf42      	ittt	mi
 800a3c4:	6962      	ldrmi	r2, [r4, #20]
 800a3c6:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a3ca:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800a3cc:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800a3ce:	bf42      	ittt	mi
 800a3d0:	6962      	ldrmi	r2, [r4, #20]
 800a3d2:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a3d6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800a3d8:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800a3da:	bf42      	ittt	mi
 800a3dc:	6962      	ldrmi	r2, [r4, #20]
 800a3de:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800a3e2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800a3e4:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800a3e8:	bf1e      	ittt	ne
 800a3ea:	6963      	ldrne	r3, [r4, #20]
 800a3ec:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800a3f0:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800a3f2:	6963      	ldr	r3, [r4, #20]
 800a3f4:	b113      	cbz	r3, 800a3fc <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800a3f6:	4620      	mov	r0, r4
 800a3f8:	f7ff ff8e 	bl	800a318 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800a3fc:	bd10      	pop	{r4, pc}

0800a3fe <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a3fe:	7c03      	ldrb	r3, [r0, #16]
 800a400:	2b01      	cmp	r3, #1
 800a402:	d00b      	beq.n	800a41c <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800a404:	6803      	ldr	r3, [r0, #0]
 800a406:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a408:	f022 0203 	bic.w	r2, r2, #3
 800a40c:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800a40e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a410:	4311      	orrs	r1, r2
 800a412:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a414:	2300      	movs	r3, #0
 800a416:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a418:	4618      	mov	r0, r3
 800a41a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a41c:	2002      	movs	r0, #2
}
 800a41e:	4770      	bx	lr

0800a420 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800a420:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a422:	7c03      	ldrb	r3, [r0, #16]
 800a424:	2b01      	cmp	r3, #1
 800a426:	d06a      	beq.n	800a4fe <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a428:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a42a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a42c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a42e:	f042 0201 	orr.w	r2, r2, #1
 800a432:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800a434:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a438:	f022 0201 	bic.w	r2, r2, #1
 800a43c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800a440:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a444:	f042 0201 	orr.w	r2, r2, #1
 800a448:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800a44c:	68da      	ldr	r2, [r3, #12]
 800a44e:	f022 0203 	bic.w	r2, r2, #3
 800a452:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a454:	68da      	ldr	r2, [r3, #12]
 800a456:	4322      	orrs	r2, r4
 800a458:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800a45a:	695a      	ldr	r2, [r3, #20]
 800a45c:	f022 0207 	bic.w	r2, r2, #7
 800a460:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800a462:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800a466:	432a      	orrs	r2, r5
 800a468:	694d      	ldr	r5, [r1, #20]
 800a46a:	695c      	ldr	r4, [r3, #20]
 800a46c:	432a      	orrs	r2, r5
 800a46e:	4322      	orrs	r2, r4
 800a470:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a472:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a474:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a476:	f022 020f 	bic.w	r2, r2, #15
 800a47a:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a47c:	691c      	ldr	r4, [r3, #16]
 800a47e:	432c      	orrs	r4, r5
 800a480:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800a482:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a486:	f024 040e 	bic.w	r4, r4, #14
 800a48a:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a48e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a492:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a494:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800a498:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800a49c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a49e:	0c12      	lsrs	r2, r2, #16
 800a4a0:	0412      	lsls	r2, r2, #16
 800a4a2:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a4a4:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a4a6:	4322      	orrs	r2, r4
 800a4a8:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800a4aa:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a4ae:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a4b2:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a4b6:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800a4ba:	432a      	orrs	r2, r5
 800a4bc:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a4be:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a4c2:	432a      	orrs	r2, r5
 800a4c4:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a4c6:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a4c8:	432a      	orrs	r2, r5
 800a4ca:	4322      	orrs	r2, r4
 800a4cc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800a4d0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a4d2:	f022 0201 	bic.w	r2, r2, #1
 800a4d6:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a4d8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a4da:	430a      	orrs	r2, r1
 800a4dc:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800a4de:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a4e2:	f042 0201 	orr.w	r2, r2, #1
 800a4e6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800a4ea:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a4ee:	f042 0202 	orr.w	r2, r2, #2
 800a4f2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a4f6:	2300      	movs	r3, #0
 800a4f8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a4fa:	4618      	mov	r0, r3
}
 800a4fc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a4fe:	2002      	movs	r0, #2
 800a500:	e7fc      	b.n	800a4fc <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800a504 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800a504:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a506:	7c03      	ldrb	r3, [r0, #16]
 800a508:	2b01      	cmp	r3, #1
 800a50a:	d02a      	beq.n	800a562 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800a50c:	6802      	ldr	r2, [r0, #0]
 800a50e:	4b16      	ldr	r3, [pc, #88]	; (800a568 <HAL_DSI_ConfigCommand+0x64>)
 800a510:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800a512:	4023      	ands	r3, r4
 800a514:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a516:	e9d1 3500 	ldrd	r3, r5, [r1]
 800a51a:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800a51c:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a51e:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800a520:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800a522:	68cd      	ldr	r5, [r1, #12]
 800a524:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800a526:	690d      	ldr	r5, [r1, #16]
 800a528:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800a52a:	694d      	ldr	r5, [r1, #20]
 800a52c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800a52e:	698d      	ldr	r5, [r1, #24]
 800a530:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800a532:	69cd      	ldr	r5, [r1, #28]
 800a534:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800a536:	6a0d      	ldr	r5, [r1, #32]
 800a538:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800a53a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a53c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800a53e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a540:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800a542:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a544:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800a546:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a548:	4323      	orrs	r3, r4
 800a54a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800a54c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a54e:	f023 0302 	bic.w	r3, r3, #2
 800a552:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a554:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a556:	430b      	orrs	r3, r1
 800a558:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a55a:	2300      	movs	r3, #0
 800a55c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a55e:	4618      	mov	r0, r3
}
 800a560:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a562:	2002      	movs	r0, #2
 800a564:	e7fc      	b.n	800a560 <HAL_DSI_ConfigCommand+0x5c>
 800a566:	bf00      	nop
 800a568:	fef080ff 	.word	0xfef080ff

0800a56c <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a56c:	7c03      	ldrb	r3, [r0, #16]
 800a56e:	2b01      	cmp	r3, #1
 800a570:	d00b      	beq.n	800a58a <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800a572:	6803      	ldr	r3, [r0, #0]
 800a574:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a576:	f022 021f 	bic.w	r2, r2, #31
 800a57a:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800a57c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a57e:	4311      	orrs	r1, r2
 800a580:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a582:	2300      	movs	r3, #0
 800a584:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a586:	4618      	mov	r0, r3
 800a588:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a58a:	2002      	movs	r0, #2
}
 800a58c:	4770      	bx	lr

0800a58e <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800a58e:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a590:	7c03      	ldrb	r3, [r0, #16]
 800a592:	2b01      	cmp	r3, #1
 800a594:	d035      	beq.n	800a602 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a596:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a59a:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a59c:	4294      	cmp	r4, r2
 800a59e:	bf38      	it	cc
 800a5a0:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a5a2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a5a6:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800a5aa:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800a5ae:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a5b2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a5b6:	4322      	orrs	r2, r4
 800a5b8:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800a5bc:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800a5c0:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800a5c4:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800a5c8:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800a5cc:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a5ce:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800a5d2:	690d      	ldr	r5, [r1, #16]
 800a5d4:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a5d8:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a5da:	432a      	orrs	r2, r5
 800a5dc:	4322      	orrs	r2, r4
 800a5de:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800a5e2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a5e6:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a5ea:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a5ee:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a5f2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a5f6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a5fa:	2300      	movs	r3, #0
 800a5fc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a5fe:	4618      	mov	r0, r3
}
 800a600:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a602:	2002      	movs	r0, #2
 800a604:	e7fc      	b.n	800a600 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800a608 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800a608:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a60a:	7c03      	ldrb	r3, [r0, #16]
 800a60c:	2b01      	cmp	r3, #1
 800a60e:	d05c      	beq.n	800a6ca <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a610:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a612:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a614:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a616:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a618:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a61c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a61e:	689a      	ldr	r2, [r3, #8]
 800a620:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800a624:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a626:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a628:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a62a:	b292      	uxth	r2, r2
 800a62c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a62e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800a630:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a634:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800a636:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a638:	4a25      	ldr	r2, [pc, #148]	; (800a6d0 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800a63a:	4014      	ands	r4, r2
 800a63c:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a63e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a640:	432c      	orrs	r4, r5
 800a642:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a644:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a646:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a648:	4014      	ands	r4, r2
 800a64a:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a64c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800a64e:	432c      	orrs	r4, r5
 800a650:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a652:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a656:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a658:	4014      	ands	r4, r2
 800a65a:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a65e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800a662:	432c      	orrs	r4, r5
 800a664:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a668:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a66c:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a66e:	4014      	ands	r4, r2
 800a670:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a674:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a678:	432c      	orrs	r4, r5
 800a67a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800a67e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a682:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800a686:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800a68a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a68e:	698d      	ldr	r5, [r1, #24]
 800a690:	432c      	orrs	r4, r5
 800a692:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a696:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a69a:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a69c:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a69e:	4014      	ands	r4, r2
 800a6a0:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a6a4:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800a6a8:	432c      	orrs	r4, r5
 800a6aa:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800a6ae:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800a6b2:	4022      	ands	r2, r4
 800a6b4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a6b8:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800a6bc:	430a      	orrs	r2, r1
 800a6be:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a6c2:	2300      	movs	r3, #0
 800a6c4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a6c6:	4618      	mov	r0, r3
}
 800a6c8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a6ca:	2002      	movs	r0, #2
 800a6cc:	e7fc      	b.n	800a6c8 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800a6ce:	bf00      	nop
 800a6d0:	ffff0000 	.word	0xffff0000

0800a6d4 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a6d4:	7c03      	ldrb	r3, [r0, #16]
 800a6d6:	2b01      	cmp	r3, #1
{
 800a6d8:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800a6da:	d01c      	beq.n	800a716 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800a6dc:	6802      	ldr	r2, [r0, #0]
 800a6de:	2300      	movs	r3, #0
 800a6e0:	9300      	str	r3, [sp, #0]
 800a6e2:	6851      	ldr	r1, [r2, #4]
 800a6e4:	f041 0101 	orr.w	r1, r1, #1
 800a6e8:	6051      	str	r1, [r2, #4]
 800a6ea:	6851      	ldr	r1, [r2, #4]
 800a6ec:	f001 0101 	and.w	r1, r1, #1
 800a6f0:	9100      	str	r1, [sp, #0]
 800a6f2:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800a6f4:	9301      	str	r3, [sp, #4]
 800a6f6:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800a6fa:	f041 0108 	orr.w	r1, r1, #8
 800a6fe:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800a702:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a706:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800a708:	f002 0208 	and.w	r2, r2, #8
 800a70c:	9201      	str	r2, [sp, #4]
 800a70e:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800a710:	4618      	mov	r0, r3
}
 800a712:	b002      	add	sp, #8
 800a714:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a716:	2002      	movs	r0, #2
 800a718:	e7fb      	b.n	800a712 <HAL_DSI_Start+0x3e>

0800a71a <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a71a:	7c03      	ldrb	r3, [r0, #16]
 800a71c:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800a71e:	bf1f      	itttt	ne
 800a720:	6802      	ldrne	r2, [r0, #0]
 800a722:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800a726:	f043 0304 	orrne.w	r3, r3, #4
 800a72a:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a72e:	bf1d      	ittte	ne
 800a730:	2300      	movne	r3, #0
 800a732:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800a734:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800a736:	2002      	moveq	r0, #2
}
 800a738:	4770      	bx	lr

0800a73a <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800a73a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800a73c:	7c05      	ldrb	r5, [r0, #16]
 800a73e:	2d01      	cmp	r5, #1
{
 800a740:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800a742:	d009      	beq.n	800a758 <HAL_DSI_ShortWrite+0x1e>
 800a744:	2501      	movs	r5, #1
 800a746:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800a748:	9d06      	ldr	r5, [sp, #24]
 800a74a:	9500      	str	r5, [sp, #0]
 800a74c:	f7ff fcae 	bl	800a0ac <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a750:	2300      	movs	r3, #0
 800a752:	7423      	strb	r3, [r4, #16]

  return status;
}
 800a754:	b003      	add	sp, #12
 800a756:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a758:	2002      	movs	r0, #2
 800a75a:	e7fb      	b.n	800a754 <HAL_DSI_ShortWrite+0x1a>

0800a75c <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800a75c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a760:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800a762:	7c03      	ldrb	r3, [r0, #16]
 800a764:	2b01      	cmp	r3, #1
{
 800a766:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800a76a:	4606      	mov	r6, r0
 800a76c:	460f      	mov	r7, r1
 800a76e:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800a770:	d053      	beq.n	800a81a <HAL_DSI_LongWrite+0xbe>
 800a772:	2301      	movs	r3, #1
 800a774:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800a776:	f7ff fa09 	bl	8009b8c <HAL_GetTick>
 800a77a:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a77c:	6832      	ldr	r2, [r6, #0]
 800a77e:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800a780:	f013 0a01 	ands.w	sl, r3, #1
 800a784:	d01a      	beq.n	800a7bc <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800a786:	2c03      	cmp	r4, #3
 800a788:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 800a78a:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800a78e:	bf28      	it	cs
 800a790:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 800a792:	4288      	cmp	r0, r1
 800a794:	d11e      	bne.n	800a7d4 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800a796:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 800a798:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 800a79c:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800a79e:	bb1b      	cbnz	r3, 800a7e8 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800a7a0:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800a7a2:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 800a7a6:	0225      	lsls	r5, r4, #8
 800a7a8:	b2ad      	uxth	r5, r5
 800a7aa:	0224      	lsls	r4, r4, #8
 800a7ac:	430d      	orrs	r5, r1
 800a7ae:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800a7b2:	432c      	orrs	r4, r5
 800a7b4:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800a7b6:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800a7b8:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800a7ba:	e009      	b.n	800a7d0 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a7bc:	f7ff f9e6 	bl	8009b8c <HAL_GetTick>
 800a7c0:	eba0 000b 	sub.w	r0, r0, fp
 800a7c4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a7c8:	d9d8      	bls.n	800a77c <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800a7ca:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800a7ce:	2003      	movs	r0, #3
}
 800a7d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800a7d4:	f818 3000 	ldrb.w	r3, [r8, r0]
 800a7d8:	3001      	adds	r0, #1
 800a7da:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 800a7de:	fa03 f30c 	lsl.w	r3, r3, ip
 800a7e2:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800a7e6:	e7d4      	b.n	800a792 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800a7e8:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800a7ea:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800a7ee:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800a7f0:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800a7f2:	bf28      	it	cs
 800a7f4:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800a7f8:	f810 8001 	ldrb.w	r8, [r0, r1]
 800a7fc:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800a800:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800a802:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800a806:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800a808:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800a80c:	d1f4      	bne.n	800a7f8 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800a80e:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 800a812:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800a816:	4470      	add	r0, lr
 800a818:	e7c1      	b.n	800a79e <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800a81a:	2002      	movs	r0, #2
 800a81c:	e7d8      	b.n	800a7d0 <HAL_DSI_LongWrite+0x74>

0800a81e <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a81e:	7c03      	ldrb	r3, [r0, #16]
 800a820:	2b01      	cmp	r3, #1
 800a822:	d010      	beq.n	800a846 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800a824:	6803      	ldr	r3, [r0, #0]
 800a826:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800a82a:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800a82e:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800a832:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800a836:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800a83a:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a83e:	2300      	movs	r3, #0
 800a840:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a842:	4618      	mov	r0, r3
 800a844:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a846:	2002      	movs	r0, #2
}
 800a848:	4770      	bx	lr
	...

0800a84c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a84c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a850:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800aa14 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a854:	4a6d      	ldr	r2, [pc, #436]	; (800aa0c <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a856:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a858:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800a85a:	2401      	movs	r4, #1
 800a85c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a85e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800a862:	43ac      	bics	r4, r5
 800a864:	f040 80b9 	bne.w	800a9da <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a868:	684d      	ldr	r5, [r1, #4]
 800a86a:	f005 0403 	and.w	r4, r5, #3
 800a86e:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800a872:	2603      	movs	r6, #3
 800a874:	1e67      	subs	r7, r4, #1
 800a876:	fa06 f608 	lsl.w	r6, r6, r8
 800a87a:	2f01      	cmp	r7, #1
 800a87c:	ea6f 0606 	mvn.w	r6, r6
 800a880:	d834      	bhi.n	800a8ec <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800a882:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a884:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a888:	68cf      	ldr	r7, [r1, #12]
 800a88a:	fa07 f708 	lsl.w	r7, r7, r8
 800a88e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a892:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a894:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a896:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a89a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800a89e:	409f      	lsls	r7, r3
 800a8a0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800a8a4:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a8a6:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a8a8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a8ac:	688f      	ldr	r7, [r1, #8]
 800a8ae:	fa07 f708 	lsl.w	r7, r7, r8
 800a8b2:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a8b6:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800a8b8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a8ba:	d119      	bne.n	800a8f0 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800a8bc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800a8c0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a8c4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a8c8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a8cc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800a8d0:	f04f 0e0f 	mov.w	lr, #15
 800a8d4:	fa0e fe0b 	lsl.w	lr, lr, fp
 800a8d8:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a8dc:	690f      	ldr	r7, [r1, #16]
 800a8de:	fa07 f70b 	lsl.w	r7, r7, fp
 800a8e2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800a8e6:	f8ca 7020 	str.w	r7, [sl, #32]
 800a8ea:	e001      	b.n	800a8f0 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a8ec:	2c03      	cmp	r4, #3
 800a8ee:	d1da      	bne.n	800a8a6 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800a8f0:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a8f2:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a8f6:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a8f8:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a8fa:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a8fe:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a900:	d06b      	beq.n	800a9da <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a902:	f04f 0a00 	mov.w	sl, #0
 800a906:	f8cd a004 	str.w	sl, [sp, #4]
 800a90a:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a90e:	4c40      	ldr	r4, [pc, #256]	; (800aa10 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a910:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800a914:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800a918:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800a91c:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800a920:	9601      	str	r6, [sp, #4]
 800a922:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a924:	f023 0603 	bic.w	r6, r3, #3
 800a928:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800a92c:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a930:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a934:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a938:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800a93c:	270f      	movs	r7, #15
 800a93e:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a942:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a944:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a948:	d04e      	beq.n	800a9e8 <HAL_GPIO_Init+0x19c>
 800a94a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a94e:	42a0      	cmp	r0, r4
 800a950:	d04c      	beq.n	800a9ec <HAL_GPIO_Init+0x1a0>
 800a952:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a956:	42a0      	cmp	r0, r4
 800a958:	d04a      	beq.n	800a9f0 <HAL_GPIO_Init+0x1a4>
 800a95a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a95e:	42a0      	cmp	r0, r4
 800a960:	d048      	beq.n	800a9f4 <HAL_GPIO_Init+0x1a8>
 800a962:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a966:	42a0      	cmp	r0, r4
 800a968:	d046      	beq.n	800a9f8 <HAL_GPIO_Init+0x1ac>
 800a96a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a96e:	42a0      	cmp	r0, r4
 800a970:	d044      	beq.n	800a9fc <HAL_GPIO_Init+0x1b0>
 800a972:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a976:	42a0      	cmp	r0, r4
 800a978:	d042      	beq.n	800aa00 <HAL_GPIO_Init+0x1b4>
 800a97a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a97e:	42a0      	cmp	r0, r4
 800a980:	d040      	beq.n	800aa04 <HAL_GPIO_Init+0x1b8>
 800a982:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a986:	42a0      	cmp	r0, r4
 800a988:	d03e      	beq.n	800aa08 <HAL_GPIO_Init+0x1bc>
 800a98a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a98e:	42a0      	cmp	r0, r4
 800a990:	bf0c      	ite	eq
 800a992:	2409      	moveq	r4, #9
 800a994:	240a      	movne	r4, #10
 800a996:	fa04 f40e 	lsl.w	r4, r4, lr
 800a99a:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a99c:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 800a99e:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800a9a0:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a9a4:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800a9a6:	bf54      	ite	pl
 800a9a8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800a9aa:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800a9ae:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 800a9b0:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a9b2:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800a9b4:	bf54      	ite	pl
 800a9b6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800a9b8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800a9bc:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a9be:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a9c0:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800a9c2:	bf54      	ite	pl
 800a9c4:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800a9c6:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800a9ca:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800a9cc:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a9ce:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800a9d0:	bf54      	ite	pl
 800a9d2:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800a9d4:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800a9d8:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a9da:	3301      	adds	r3, #1
 800a9dc:	2b10      	cmp	r3, #16
 800a9de:	f47f af3b 	bne.w	800a858 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800a9e2:	b003      	add	sp, #12
 800a9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a9e8:	4654      	mov	r4, sl
 800a9ea:	e7d4      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800a9ec:	2401      	movs	r4, #1
 800a9ee:	e7d2      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800a9f0:	2402      	movs	r4, #2
 800a9f2:	e7d0      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800a9f4:	2403      	movs	r4, #3
 800a9f6:	e7ce      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800a9f8:	2404      	movs	r4, #4
 800a9fa:	e7cc      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800a9fc:	2405      	movs	r4, #5
 800a9fe:	e7ca      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800aa00:	2406      	movs	r4, #6
 800aa02:	e7c8      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800aa04:	2407      	movs	r4, #7
 800aa06:	e7c6      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800aa08:	2408      	movs	r4, #8
 800aa0a:	e7c4      	b.n	800a996 <HAL_GPIO_Init+0x14a>
 800aa0c:	40013c00 	.word	0x40013c00
 800aa10:	40020000 	.word	0x40020000
 800aa14:	40023800 	.word	0x40023800

0800aa18 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800aa18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800aa1c:	4c4a      	ldr	r4, [pc, #296]	; (800ab48 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aa1e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ab50 <HAL_GPIO_DeInit+0x138>
 800aa22:	f8df a130 	ldr.w	sl, [pc, #304]	; 800ab54 <HAL_GPIO_DeInit+0x13c>
 800aa26:	f8df b130 	ldr.w	fp, [pc, #304]	; 800ab58 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800aa2a:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800aa2c:	2301      	movs	r3, #1
 800aa2e:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800aa32:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800aa36:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800aa3a:	d16e      	bne.n	800ab1a <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800aa3c:	f022 0503 	bic.w	r5, r2, #3
 800aa40:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800aa44:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aa48:	4b40      	ldr	r3, [pc, #256]	; (800ab4c <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800aa4a:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800aa4e:	f002 0c03 	and.w	ip, r2, #3
 800aa52:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800aa56:	260f      	movs	r6, #15
 800aa58:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aa5c:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800aa5e:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aa62:	d05f      	beq.n	800ab24 <HAL_GPIO_DeInit+0x10c>
 800aa64:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aa68:	4298      	cmp	r0, r3
 800aa6a:	d05d      	beq.n	800ab28 <HAL_GPIO_DeInit+0x110>
 800aa6c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aa70:	4298      	cmp	r0, r3
 800aa72:	d05b      	beq.n	800ab2c <HAL_GPIO_DeInit+0x114>
 800aa74:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aa78:	4298      	cmp	r0, r3
 800aa7a:	d059      	beq.n	800ab30 <HAL_GPIO_DeInit+0x118>
 800aa7c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aa80:	4298      	cmp	r0, r3
 800aa82:	d057      	beq.n	800ab34 <HAL_GPIO_DeInit+0x11c>
 800aa84:	4548      	cmp	r0, r9
 800aa86:	d057      	beq.n	800ab38 <HAL_GPIO_DeInit+0x120>
 800aa88:	4550      	cmp	r0, sl
 800aa8a:	d057      	beq.n	800ab3c <HAL_GPIO_DeInit+0x124>
 800aa8c:	4558      	cmp	r0, fp
 800aa8e:	d057      	beq.n	800ab40 <HAL_GPIO_DeInit+0x128>
 800aa90:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800aa94:	4298      	cmp	r0, r3
 800aa96:	d055      	beq.n	800ab44 <HAL_GPIO_DeInit+0x12c>
 800aa98:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aa9c:	4298      	cmp	r0, r3
 800aa9e:	bf0c      	ite	eq
 800aaa0:	2309      	moveq	r3, #9
 800aaa2:	230a      	movne	r3, #10
 800aaa4:	fa03 f30c 	lsl.w	r3, r3, ip
 800aaa8:	4543      	cmp	r3, r8
 800aaaa:	d113      	bne.n	800aad4 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800aaac:	6823      	ldr	r3, [r4, #0]
 800aaae:	ea23 0307 	bic.w	r3, r3, r7
 800aab2:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800aab4:	6863      	ldr	r3, [r4, #4]
 800aab6:	ea23 0307 	bic.w	r3, r3, r7
 800aaba:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800aabc:	68a3      	ldr	r3, [r4, #8]
 800aabe:	ea23 0307 	bic.w	r3, r3, r7
 800aac2:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800aac4:	68e3      	ldr	r3, [r4, #12]
 800aac6:	ea23 0707 	bic.w	r7, r3, r7
 800aaca:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800aacc:	68ab      	ldr	r3, [r5, #8]
 800aace:	ea23 0606 	bic.w	r6, r3, r6
 800aad2:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800aad4:	6805      	ldr	r5, [r0, #0]
 800aad6:	2603      	movs	r6, #3
 800aad8:	0053      	lsls	r3, r2, #1
 800aada:	fa06 f303 	lsl.w	r3, r6, r3
 800aade:	ea25 0503 	bic.w	r5, r5, r3
 800aae2:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800aae4:	fa22 f506 	lsr.w	r5, r2, r6
 800aae8:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800aaec:	f002 0c07 	and.w	ip, r2, #7
 800aaf0:	6a2e      	ldr	r6, [r5, #32]
 800aaf2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800aaf6:	270f      	movs	r7, #15
 800aaf8:	fa07 f70c 	lsl.w	r7, r7, ip
 800aafc:	ea26 0707 	bic.w	r7, r6, r7
 800ab00:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ab02:	68c5      	ldr	r5, [r0, #12]
 800ab04:	ea25 0503 	bic.w	r5, r5, r3
 800ab08:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ab0a:	6845      	ldr	r5, [r0, #4]
 800ab0c:	ea25 050e 	bic.w	r5, r5, lr
 800ab10:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab12:	6885      	ldr	r5, [r0, #8]
 800ab14:	ea25 0303 	bic.w	r3, r5, r3
 800ab18:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab1a:	3201      	adds	r2, #1
 800ab1c:	2a10      	cmp	r2, #16
 800ab1e:	d185      	bne.n	800aa2c <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800ab20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ab24:	2300      	movs	r3, #0
 800ab26:	e7bd      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab28:	2301      	movs	r3, #1
 800ab2a:	e7bb      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab2c:	2302      	movs	r3, #2
 800ab2e:	e7b9      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab30:	2303      	movs	r3, #3
 800ab32:	e7b7      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab34:	2304      	movs	r3, #4
 800ab36:	e7b5      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab38:	2305      	movs	r3, #5
 800ab3a:	e7b3      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab3c:	2306      	movs	r3, #6
 800ab3e:	e7b1      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab40:	2307      	movs	r3, #7
 800ab42:	e7af      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab44:	2308      	movs	r3, #8
 800ab46:	e7ad      	b.n	800aaa4 <HAL_GPIO_DeInit+0x8c>
 800ab48:	40013c00 	.word	0x40013c00
 800ab4c:	40020000 	.word	0x40020000
 800ab50:	40021400 	.word	0x40021400
 800ab54:	40021800 	.word	0x40021800
 800ab58:	40021c00 	.word	0x40021c00

0800ab5c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800ab5c:	6903      	ldr	r3, [r0, #16]
 800ab5e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800ab60:	bf14      	ite	ne
 800ab62:	2001      	movne	r0, #1
 800ab64:	2000      	moveq	r0, #0
 800ab66:	4770      	bx	lr

0800ab68 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ab68:	b10a      	cbz	r2, 800ab6e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ab6a:	6181      	str	r1, [r0, #24]
  }
}
 800ab6c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ab6e:	0409      	lsls	r1, r1, #16
 800ab70:	e7fb      	b.n	800ab6a <HAL_GPIO_WritePin+0x2>

0800ab72 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 800ab72:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800ab74:	ea01 0203 	and.w	r2, r1, r3
 800ab78:	ea21 0103 	bic.w	r1, r1, r3
 800ab7c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ab80:	6181      	str	r1, [r0, #24]
}
 800ab82:	4770      	bx	lr

0800ab84 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab84:	6801      	ldr	r1, [r0, #0]
 800ab86:	694b      	ldr	r3, [r1, #20]
 800ab88:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800ab8c:	f04f 0200 	mov.w	r2, #0
 800ab90:	d010      	beq.n	800abb4 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ab92:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800ab96:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab98:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ab9a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab9c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aba0:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aba4:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800aba6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800abaa:	f043 0304 	orr.w	r3, r3, #4
 800abae:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800abb0:	2001      	movs	r0, #1
 800abb2:	4770      	bx	lr
  }
  return HAL_OK;
 800abb4:	4618      	mov	r0, r3
}
 800abb6:	4770      	bx	lr

0800abb8 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800abb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abbc:	4604      	mov	r4, r0
 800abbe:	460f      	mov	r7, r1
 800abc0:	4616      	mov	r6, r2
 800abc2:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800abc4:	6825      	ldr	r5, [r4, #0]
 800abc6:	6968      	ldr	r0, [r5, #20]
 800abc8:	ea27 0000 	bic.w	r0, r7, r0
 800abcc:	b280      	uxth	r0, r0
 800abce:	b1b8      	cbz	r0, 800ac00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800abd0:	696b      	ldr	r3, [r5, #20]
 800abd2:	055a      	lsls	r2, r3, #21
 800abd4:	d516      	bpl.n	800ac04 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abd6:	682b      	ldr	r3, [r5, #0]
 800abd8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800abdc:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800abde:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800abe2:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800abe4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800abe6:	2300      	movs	r3, #0
 800abe8:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800abea:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800abee:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800abf2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800abf4:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800abf8:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800abfa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800abfe:	2001      	movs	r0, #1
}
 800ac00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800ac04:	1c73      	adds	r3, r6, #1
 800ac06:	d0de      	beq.n	800abc6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac08:	f7fe ffc0 	bl	8009b8c <HAL_GetTick>
 800ac0c:	eba0 0008 	sub.w	r0, r0, r8
 800ac10:	42b0      	cmp	r0, r6
 800ac12:	d801      	bhi.n	800ac18 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800ac14:	2e00      	cmp	r6, #0
 800ac16:	d1d5      	bne.n	800abc4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ac18:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800ac1a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ac1c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ac1e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac22:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac26:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ac28:	f042 0220 	orr.w	r2, r2, #32
 800ac2c:	e7e4      	b.n	800abf8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800ac2e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800ac2e:	b570      	push	{r4, r5, r6, lr}
 800ac30:	4604      	mov	r4, r0
 800ac32:	460d      	mov	r5, r1
 800ac34:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ac36:	6823      	ldr	r3, [r4, #0]
 800ac38:	695b      	ldr	r3, [r3, #20]
 800ac3a:	075b      	lsls	r3, r3, #29
 800ac3c:	d501      	bpl.n	800ac42 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800ac3e:	2000      	movs	r0, #0
}
 800ac40:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800ac42:	4620      	mov	r0, r4
 800ac44:	f7ff ff9e 	bl	800ab84 <I2C_IsAcknowledgeFailed>
 800ac48:	b9a8      	cbnz	r0, 800ac76 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800ac4a:	1c6a      	adds	r2, r5, #1
 800ac4c:	d0f3      	beq.n	800ac36 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac4e:	f7fe ff9d 	bl	8009b8c <HAL_GetTick>
 800ac52:	1b80      	subs	r0, r0, r6
 800ac54:	42a8      	cmp	r0, r5
 800ac56:	d801      	bhi.n	800ac5c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800ac58:	2d00      	cmp	r5, #0
 800ac5a:	d1ec      	bne.n	800ac36 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac5c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac5e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac60:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac62:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac66:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac6a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac6c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac70:	f042 0220 	orr.w	r2, r2, #32
 800ac74:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ac76:	2001      	movs	r0, #1
 800ac78:	e7e2      	b.n	800ac40 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800ac7a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800ac7a:	b570      	push	{r4, r5, r6, lr}
 800ac7c:	4604      	mov	r4, r0
 800ac7e:	460d      	mov	r5, r1
 800ac80:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac82:	6821      	ldr	r1, [r4, #0]
 800ac84:	694b      	ldr	r3, [r1, #20]
 800ac86:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800ac8a:	d001      	beq.n	800ac90 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800ac8c:	2000      	movs	r0, #0
 800ac8e:	e010      	b.n	800acb2 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac90:	694a      	ldr	r2, [r1, #20]
 800ac92:	06d2      	lsls	r2, r2, #27
 800ac94:	d50e      	bpl.n	800acb4 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac96:	f06f 0210 	mvn.w	r2, #16
 800ac9a:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac9c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac9e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800aca0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aca4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800aca8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800acaa:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800acac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800acb0:	2001      	movs	r0, #1
}
 800acb2:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acb4:	f7fe ff6a 	bl	8009b8c <HAL_GetTick>
 800acb8:	1b80      	subs	r0, r0, r6
 800acba:	42a8      	cmp	r0, r5
 800acbc:	d801      	bhi.n	800acc2 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800acbe:	2d00      	cmp	r5, #0
 800acc0:	d1df      	bne.n	800ac82 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800acc2:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800acc4:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800acc6:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800acc8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800accc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800acd0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800acd2:	f042 0220 	orr.w	r2, r2, #32
 800acd6:	e7e8      	b.n	800acaa <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800acd8 <I2C_WaitOnFlagUntilTimeout>:
{
 800acd8:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800acdc:	4606      	mov	r6, r0
 800acde:	460f      	mov	r7, r1
 800ace0:	4691      	mov	r9, r2
 800ace2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ace4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800ace8:	6833      	ldr	r3, [r6, #0]
 800acea:	f1ba 0f01 	cmp.w	sl, #1
 800acee:	bf0c      	ite	eq
 800acf0:	695c      	ldreq	r4, [r3, #20]
 800acf2:	699c      	ldrne	r4, [r3, #24]
 800acf4:	ea27 0404 	bic.w	r4, r7, r4
 800acf8:	b2a4      	uxth	r4, r4
 800acfa:	fab4 f484 	clz	r4, r4
 800acfe:	0964      	lsrs	r4, r4, #5
 800ad00:	45a1      	cmp	r9, r4
 800ad02:	d001      	beq.n	800ad08 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800ad04:	2000      	movs	r0, #0
 800ad06:	e017      	b.n	800ad38 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800ad08:	1c6a      	adds	r2, r5, #1
 800ad0a:	d0ee      	beq.n	800acea <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad0c:	f7fe ff3e 	bl	8009b8c <HAL_GetTick>
 800ad10:	9b08      	ldr	r3, [sp, #32]
 800ad12:	1ac0      	subs	r0, r0, r3
 800ad14:	42a8      	cmp	r0, r5
 800ad16:	d801      	bhi.n	800ad1c <I2C_WaitOnFlagUntilTimeout+0x44>
 800ad18:	2d00      	cmp	r5, #0
 800ad1a:	d1e5      	bne.n	800ace8 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad1c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad1e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad20:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad22:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad26:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad2a:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad2c:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad30:	f042 0220 	orr.w	r2, r2, #32
 800ad34:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad36:	2001      	movs	r0, #1
}
 800ad38:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800ad3c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800ad3c:	b570      	push	{r4, r5, r6, lr}
 800ad3e:	4604      	mov	r4, r0
 800ad40:	460d      	mov	r5, r1
 800ad42:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ad44:	6823      	ldr	r3, [r4, #0]
 800ad46:	695b      	ldr	r3, [r3, #20]
 800ad48:	061b      	lsls	r3, r3, #24
 800ad4a:	d501      	bpl.n	800ad50 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800ad4c:	2000      	movs	r0, #0
}
 800ad4e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800ad50:	4620      	mov	r0, r4
 800ad52:	f7ff ff17 	bl	800ab84 <I2C_IsAcknowledgeFailed>
 800ad56:	b9a8      	cbnz	r0, 800ad84 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800ad58:	1c6a      	adds	r2, r5, #1
 800ad5a:	d0f3      	beq.n	800ad44 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad5c:	f7fe ff16 	bl	8009b8c <HAL_GetTick>
 800ad60:	1b80      	subs	r0, r0, r6
 800ad62:	42a8      	cmp	r0, r5
 800ad64:	d801      	bhi.n	800ad6a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800ad66:	2d00      	cmp	r5, #0
 800ad68:	d1ec      	bne.n	800ad44 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad6a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad6c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad6e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad70:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad74:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad78:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad7a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad7e:	f042 0220 	orr.w	r2, r2, #32
 800ad82:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ad84:	2001      	movs	r0, #1
 800ad86:	e7e2      	b.n	800ad4e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800ad88 <I2C_RequestMemoryWrite>:
{
 800ad88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad8c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ad8e:	6802      	ldr	r2, [r0, #0]
{
 800ad90:	b085      	sub	sp, #20
 800ad92:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800ad96:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ad98:	6813      	ldr	r3, [r2, #0]
 800ad9a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ad9e:	6013      	str	r3, [r2, #0]
{
 800ada0:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ada2:	463b      	mov	r3, r7
 800ada4:	f8cd 8000 	str.w	r8, [sp]
 800ada8:	2200      	movs	r2, #0
 800adaa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800adae:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800adb0:	f7ff ff92 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800adb4:	6823      	ldr	r3, [r4, #0]
 800adb6:	b138      	cbz	r0, 800adc8 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800adb8:	681b      	ldr	r3, [r3, #0]
 800adba:	05db      	lsls	r3, r3, #23
 800adbc:	d502      	bpl.n	800adc4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800adbe:	f44f 7300 	mov.w	r3, #512	; 0x200
 800adc2:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800adc4:	2003      	movs	r0, #3
 800adc6:	e00a      	b.n	800adde <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800adc8:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800adcc:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800adce:	4919      	ldr	r1, [pc, #100]	; (800ae34 <I2C_RequestMemoryWrite+0xac>)
 800add0:	4643      	mov	r3, r8
 800add2:	463a      	mov	r2, r7
 800add4:	4620      	mov	r0, r4
 800add6:	f7ff feef 	bl	800abb8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800adda:	b118      	cbz	r0, 800ade4 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800addc:	2001      	movs	r0, #1
}
 800adde:	b005      	add	sp, #20
 800ade0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ade4:	6823      	ldr	r3, [r4, #0]
 800ade6:	9003      	str	r0, [sp, #12]
 800ade8:	695a      	ldr	r2, [r3, #20]
 800adea:	9203      	str	r2, [sp, #12]
 800adec:	699b      	ldr	r3, [r3, #24]
 800adee:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800adf0:	4642      	mov	r2, r8
 800adf2:	4639      	mov	r1, r7
 800adf4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adf6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800adf8:	f7ff ffa0 	bl	800ad3c <I2C_WaitOnTXEFlagUntilTimeout>
 800adfc:	b140      	cbz	r0, 800ae10 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800adfe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ae00:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae02:	bf01      	itttt	eq
 800ae04:	6822      	ldreq	r2, [r4, #0]
 800ae06:	6813      	ldreq	r3, [r2, #0]
 800ae08:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800ae0c:	6013      	streq	r3, [r2, #0]
 800ae0e:	e7e5      	b.n	800addc <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ae10:	f1b9 0f01 	cmp.w	r9, #1
 800ae14:	6823      	ldr	r3, [r4, #0]
 800ae16:	d102      	bne.n	800ae1e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae18:	b2ed      	uxtb	r5, r5
 800ae1a:	611d      	str	r5, [r3, #16]
 800ae1c:	e7df      	b.n	800adde <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800ae1e:	0a2a      	lsrs	r2, r5, #8
 800ae20:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae22:	4639      	mov	r1, r7
 800ae24:	4642      	mov	r2, r8
 800ae26:	4620      	mov	r0, r4
 800ae28:	f7ff ff88 	bl	800ad3c <I2C_WaitOnTXEFlagUntilTimeout>
 800ae2c:	2800      	cmp	r0, #0
 800ae2e:	d1e6      	bne.n	800adfe <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae30:	6823      	ldr	r3, [r4, #0]
 800ae32:	e7f1      	b.n	800ae18 <I2C_RequestMemoryWrite+0x90>
 800ae34:	00010002 	.word	0x00010002

0800ae38 <I2C_RequestMemoryRead>:
{
 800ae38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ae3c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae3e:	6803      	ldr	r3, [r0, #0]
{
 800ae40:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae42:	681a      	ldr	r2, [r3, #0]
 800ae44:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ae48:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae4a:	681a      	ldr	r2, [r3, #0]
{
 800ae4c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae50:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ae54:	601a      	str	r2, [r3, #0]
{
 800ae56:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ae58:	463b      	mov	r3, r7
 800ae5a:	f8cd 8000 	str.w	r8, [sp]
 800ae5e:	2200      	movs	r2, #0
 800ae60:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800ae64:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ae66:	f7ff ff37 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800ae6a:	6823      	ldr	r3, [r4, #0]
 800ae6c:	b148      	cbz	r0, 800ae82 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800ae6e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800ae70:	05db      	lsls	r3, r3, #23
 800ae72:	d502      	bpl.n	800ae7a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800ae74:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ae78:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800ae7a:	2003      	movs	r0, #3
}
 800ae7c:	b004      	add	sp, #16
 800ae7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ae82:	fa5f f986 	uxtb.w	r9, r6
 800ae86:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800ae8a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800ae8c:	492a      	ldr	r1, [pc, #168]	; (800af38 <I2C_RequestMemoryRead+0x100>)
 800ae8e:	4643      	mov	r3, r8
 800ae90:	463a      	mov	r2, r7
 800ae92:	4620      	mov	r0, r4
 800ae94:	f7ff fe90 	bl	800abb8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800ae98:	b108      	cbz	r0, 800ae9e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800ae9a:	2001      	movs	r0, #1
 800ae9c:	e7ee      	b.n	800ae7c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae9e:	6823      	ldr	r3, [r4, #0]
 800aea0:	9003      	str	r0, [sp, #12]
 800aea2:	695a      	ldr	r2, [r3, #20]
 800aea4:	9203      	str	r2, [sp, #12]
 800aea6:	699b      	ldr	r3, [r3, #24]
 800aea8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800aeaa:	4642      	mov	r2, r8
 800aeac:	4639      	mov	r1, r7
 800aeae:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aeb0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800aeb2:	f7ff ff43 	bl	800ad3c <I2C_WaitOnTXEFlagUntilTimeout>
 800aeb6:	b140      	cbz	r0, 800aeca <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aeb8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aeba:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aebc:	bf01      	itttt	eq
 800aebe:	6822      	ldreq	r2, [r4, #0]
 800aec0:	6813      	ldreq	r3, [r2, #0]
 800aec2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800aec6:	6013      	streq	r3, [r2, #0]
 800aec8:	e7e7      	b.n	800ae9a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800aeca:	f1ba 0f01 	cmp.w	sl, #1
 800aece:	6823      	ldr	r3, [r4, #0]
 800aed0:	d11a      	bne.n	800af08 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800aed2:	b2ed      	uxtb	r5, r5
 800aed4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800aed6:	4642      	mov	r2, r8
 800aed8:	4639      	mov	r1, r7
 800aeda:	4620      	mov	r0, r4
 800aedc:	f7ff ff2e 	bl	800ad3c <I2C_WaitOnTXEFlagUntilTimeout>
 800aee0:	2800      	cmp	r0, #0
 800aee2:	d1e9      	bne.n	800aeb8 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aee4:	6822      	ldr	r2, [r4, #0]
 800aee6:	6813      	ldr	r3, [r2, #0]
 800aee8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800aeec:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800aeee:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800aef2:	4602      	mov	r2, r0
 800aef4:	f8cd 8000 	str.w	r8, [sp]
 800aef8:	463b      	mov	r3, r7
 800aefa:	4620      	mov	r0, r4
 800aefc:	f7ff feec 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800af00:	6822      	ldr	r2, [r4, #0]
 800af02:	b160      	cbz	r0, 800af1e <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800af04:	6813      	ldr	r3, [r2, #0]
 800af06:	e7b3      	b.n	800ae70 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800af08:	0a2a      	lsrs	r2, r5, #8
 800af0a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800af0c:	4639      	mov	r1, r7
 800af0e:	4642      	mov	r2, r8
 800af10:	4620      	mov	r0, r4
 800af12:	f7ff ff13 	bl	800ad3c <I2C_WaitOnTXEFlagUntilTimeout>
 800af16:	2800      	cmp	r0, #0
 800af18:	d1ce      	bne.n	800aeb8 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800af1a:	6823      	ldr	r3, [r4, #0]
 800af1c:	e7d9      	b.n	800aed2 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800af1e:	f049 0301 	orr.w	r3, r9, #1
 800af22:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800af24:	4904      	ldr	r1, [pc, #16]	; (800af38 <I2C_RequestMemoryRead+0x100>)
 800af26:	4643      	mov	r3, r8
 800af28:	463a      	mov	r2, r7
 800af2a:	4620      	mov	r0, r4
 800af2c:	f7ff fe44 	bl	800abb8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800af30:	3800      	subs	r0, #0
 800af32:	bf18      	it	ne
 800af34:	2001      	movne	r0, #1
 800af36:	e7a1      	b.n	800ae7c <I2C_RequestMemoryRead+0x44>
 800af38:	00010002 	.word	0x00010002

0800af3c <HAL_I2C_Init>:
{
 800af3c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800af3e:	4604      	mov	r4, r0
 800af40:	b908      	cbnz	r0, 800af46 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800af42:	2001      	movs	r0, #1
}
 800af44:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800af46:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800af4a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800af4e:	b91b      	cbnz	r3, 800af58 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800af50:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800af54:	f7f6 fdbe 	bl	8001ad4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800af58:	2324      	movs	r3, #36	; 0x24
 800af5a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800af5e:	6823      	ldr	r3, [r4, #0]
 800af60:	681a      	ldr	r2, [r3, #0]
 800af62:	f022 0201 	bic.w	r2, r2, #1
 800af66:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800af68:	681a      	ldr	r2, [r3, #0]
 800af6a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800af6e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800af70:	681a      	ldr	r2, [r3, #0]
 800af72:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800af76:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800af78:	f001 f818 	bl	800bfac <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800af7c:	4a3f      	ldr	r2, [pc, #252]	; (800b07c <HAL_I2C_Init+0x140>)
 800af7e:	6863      	ldr	r3, [r4, #4]
 800af80:	4293      	cmp	r3, r2
 800af82:	bf94      	ite	ls
 800af84:	4a3e      	ldrls	r2, [pc, #248]	; (800b080 <HAL_I2C_Init+0x144>)
 800af86:	4a3f      	ldrhi	r2, [pc, #252]	; (800b084 <HAL_I2C_Init+0x148>)
 800af88:	4290      	cmp	r0, r2
 800af8a:	bf8c      	ite	hi
 800af8c:	2200      	movhi	r2, #0
 800af8e:	2201      	movls	r2, #1
 800af90:	2a00      	cmp	r2, #0
 800af92:	d1d6      	bne.n	800af42 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800af94:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800af96:	4e3c      	ldr	r6, [pc, #240]	; (800b088 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800af98:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800af9a:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800af9e:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800afa2:	4332      	orrs	r2, r6
 800afa4:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800afa6:	4a35      	ldr	r2, [pc, #212]	; (800b07c <HAL_I2C_Init+0x140>)
 800afa8:	6a0d      	ldr	r5, [r1, #32]
 800afaa:	4293      	cmp	r3, r2
 800afac:	bf84      	itt	hi
 800afae:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 800afb2:	4372      	mulhi	r2, r6
 800afb4:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800afb8:	bf91      	iteee	ls
 800afba:	1c72      	addls	r2, r6, #1
 800afbc:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800afc0:	fbb2 f2f6 	udivhi	r2, r2, r6
 800afc4:	3201      	addhi	r2, #1
 800afc6:	432a      	orrs	r2, r5
 800afc8:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800afca:	69cd      	ldr	r5, [r1, #28]
 800afcc:	1e42      	subs	r2, r0, #1
 800afce:	482b      	ldr	r0, [pc, #172]	; (800b07c <HAL_I2C_Init+0x140>)
 800afd0:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 800afd4:	4283      	cmp	r3, r0
 800afd6:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800afda:	d832      	bhi.n	800b042 <HAL_I2C_Init+0x106>
 800afdc:	005b      	lsls	r3, r3, #1
 800afde:	fbb2 f3f3 	udiv	r3, r2, r3
 800afe2:	f640 72fc 	movw	r2, #4092	; 0xffc
 800afe6:	3301      	adds	r3, #1
 800afe8:	4213      	tst	r3, r2
 800afea:	d042      	beq.n	800b072 <HAL_I2C_Init+0x136>
 800afec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aff0:	432b      	orrs	r3, r5
 800aff2:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800aff4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800aff8:	680a      	ldr	r2, [r1, #0]
 800affa:	4303      	orrs	r3, r0
 800affc:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800b000:	4313      	orrs	r3, r2
 800b002:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b004:	688a      	ldr	r2, [r1, #8]
 800b006:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b00a:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 800b00e:	4303      	orrs	r3, r0
 800b010:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800b014:	4313      	orrs	r3, r2
 800b016:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b018:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b01c:	68ca      	ldr	r2, [r1, #12]
 800b01e:	4303      	orrs	r3, r0
 800b020:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800b024:	4313      	orrs	r3, r2
 800b026:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b028:	680b      	ldr	r3, [r1, #0]
 800b02a:	f043 0301 	orr.w	r3, r3, #1
 800b02e:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b030:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800b032:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b034:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b036:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b03a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b03c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800b040:	e780      	b.n	800af44 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b042:	68a0      	ldr	r0, [r4, #8]
 800b044:	b950      	cbnz	r0, 800b05c <HAL_I2C_Init+0x120>
 800b046:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800b04a:	fbb2 f3f3 	udiv	r3, r2, r3
 800b04e:	3301      	adds	r3, #1
 800b050:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b054:	b17b      	cbz	r3, 800b076 <HAL_I2C_Init+0x13a>
 800b056:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b05a:	e7c9      	b.n	800aff0 <HAL_I2C_Init+0xb4>
 800b05c:	2019      	movs	r0, #25
 800b05e:	4343      	muls	r3, r0
 800b060:	fbb2 f3f3 	udiv	r3, r2, r3
 800b064:	3301      	adds	r3, #1
 800b066:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b06a:	b123      	cbz	r3, 800b076 <HAL_I2C_Init+0x13a>
 800b06c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800b070:	e7be      	b.n	800aff0 <HAL_I2C_Init+0xb4>
 800b072:	2304      	movs	r3, #4
 800b074:	e7bc      	b.n	800aff0 <HAL_I2C_Init+0xb4>
 800b076:	2301      	movs	r3, #1
 800b078:	e7ba      	b.n	800aff0 <HAL_I2C_Init+0xb4>
 800b07a:	bf00      	nop
 800b07c:	000186a0 	.word	0x000186a0
 800b080:	001e847f 	.word	0x001e847f
 800b084:	003d08ff 	.word	0x003d08ff
 800b088:	000f4240 	.word	0x000f4240

0800b08c <HAL_I2C_DeInit>:
{
 800b08c:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800b08e:	4604      	mov	r4, r0
 800b090:	b198      	cbz	r0, 800b0ba <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800b092:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b094:	2324      	movs	r3, #36	; 0x24
 800b096:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b09a:	6813      	ldr	r3, [r2, #0]
 800b09c:	f023 0301 	bic.w	r3, r3, #1
 800b0a0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800b0a2:	f7f6 fd5b 	bl	8001b5c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b0a6:	2000      	movs	r0, #0
 800b0a8:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800b0aa:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800b0ae:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b0b2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b0b4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800b0b8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b0ba:	2001      	movs	r0, #1
 800b0bc:	e7fc      	b.n	800b0b8 <HAL_I2C_DeInit+0x2c>
	...

0800b0c0 <HAL_I2C_Mem_Write>:
{
 800b0c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b0c4:	4604      	mov	r4, r0
 800b0c6:	4699      	mov	r9, r3
 800b0c8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b0ca:	460f      	mov	r7, r1
 800b0cc:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b0ce:	f7fe fd5d 	bl	8009b8c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b0d2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b0d6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b0d8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b0da:	d003      	beq.n	800b0e4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800b0dc:	2002      	movs	r0, #2
}
 800b0de:	b003      	add	sp, #12
 800b0e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b0e4:	9000      	str	r0, [sp, #0]
 800b0e6:	493c      	ldr	r1, [pc, #240]	; (800b1d8 <HAL_I2C_Mem_Write+0x118>)
 800b0e8:	2319      	movs	r3, #25
 800b0ea:	2201      	movs	r2, #1
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	f7ff fdf3 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800b0f2:	2800      	cmp	r0, #0
 800b0f4:	d1f2      	bne.n	800b0dc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800b0f6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b0fa:	2b01      	cmp	r3, #1
 800b0fc:	d0ee      	beq.n	800b0dc <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b0fe:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b100:	2301      	movs	r3, #1
 800b102:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b106:	6803      	ldr	r3, [r0, #0]
 800b108:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b10a:	bf5e      	ittt	pl
 800b10c:	6803      	ldrpl	r3, [r0, #0]
 800b10e:	f043 0301 	orrpl.w	r3, r3, #1
 800b112:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b114:	6803      	ldr	r3, [r0, #0]
 800b116:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b11a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b11c:	2321      	movs	r3, #33	; 0x21
 800b11e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b122:	2340      	movs	r3, #64	; 0x40
 800b124:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b128:	2300      	movs	r3, #0
 800b12a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b12c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b12e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b130:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800b134:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b136:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b138:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b13a:	4b28      	ldr	r3, [pc, #160]	; (800b1dc <HAL_I2C_Mem_Write+0x11c>)
 800b13c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b13e:	e9cd 6500 	strd	r6, r5, [sp]
 800b142:	464b      	mov	r3, r9
 800b144:	4642      	mov	r2, r8
 800b146:	4639      	mov	r1, r7
 800b148:	4620      	mov	r0, r4
 800b14a:	f7ff fe1d 	bl	800ad88 <I2C_RequestMemoryWrite>
 800b14e:	2800      	cmp	r0, #0
 800b150:	d02a      	beq.n	800b1a8 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800b152:	2001      	movs	r0, #1
 800b154:	e7c3      	b.n	800b0de <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b156:	f7ff fdf1 	bl	800ad3c <I2C_WaitOnTXEFlagUntilTimeout>
 800b15a:	b140      	cbz	r0, 800b16e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b15c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b15e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b160:	bf01      	itttt	eq
 800b162:	6822      	ldreq	r2, [r4, #0]
 800b164:	6813      	ldreq	r3, [r2, #0]
 800b166:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b16a:	6013      	streq	r3, [r2, #0]
 800b16c:	e7f1      	b.n	800b152 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b16e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b170:	6827      	ldr	r7, [r4, #0]
 800b172:	461a      	mov	r2, r3
 800b174:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b178:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800b17a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b17c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800b17e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800b180:	3a01      	subs	r2, #1
 800b182:	b292      	uxth	r2, r2
 800b184:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b186:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800b188:	1e48      	subs	r0, r1, #1
 800b18a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b18c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800b18e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b190:	d50a      	bpl.n	800b1a8 <HAL_I2C_Mem_Write+0xe8>
 800b192:	b148      	cbz	r0, 800b1a8 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b194:	785a      	ldrb	r2, [r3, #1]
 800b196:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800b198:	3302      	adds	r3, #2
 800b19a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b19c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b19e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800b1a0:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800b1a2:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800b1a4:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b1a6:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b1a8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b1aa:	462a      	mov	r2, r5
 800b1ac:	4631      	mov	r1, r6
 800b1ae:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800b1b0:	2b00      	cmp	r3, #0
 800b1b2:	d1d0      	bne.n	800b156 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b1b4:	f7ff fd3b 	bl	800ac2e <I2C_WaitOnBTFFlagUntilTimeout>
 800b1b8:	2800      	cmp	r0, #0
 800b1ba:	d1cf      	bne.n	800b15c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1bc:	6822      	ldr	r2, [r4, #0]
 800b1be:	6813      	ldr	r3, [r2, #0]
 800b1c0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b1c4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b1c6:	2320      	movs	r3, #32
 800b1c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b1cc:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b1d0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800b1d4:	e783      	b.n	800b0de <HAL_I2C_Mem_Write+0x1e>
 800b1d6:	bf00      	nop
 800b1d8:	00100002 	.word	0x00100002
 800b1dc:	ffff0000 	.word	0xffff0000

0800b1e0 <HAL_I2C_Mem_Read>:
{
 800b1e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1e4:	4604      	mov	r4, r0
 800b1e6:	b087      	sub	sp, #28
 800b1e8:	4699      	mov	r9, r3
 800b1ea:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b1ec:	460d      	mov	r5, r1
 800b1ee:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b1f0:	f7fe fccc 	bl	8009b8c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b1f4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b1f8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b1fa:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b1fc:	d004      	beq.n	800b208 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800b1fe:	2502      	movs	r5, #2
}
 800b200:	4628      	mov	r0, r5
 800b202:	b007      	add	sp, #28
 800b204:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b208:	9000      	str	r0, [sp, #0]
 800b20a:	4976      	ldr	r1, [pc, #472]	; (800b3e4 <HAL_I2C_Mem_Read+0x204>)
 800b20c:	2319      	movs	r3, #25
 800b20e:	2201      	movs	r2, #1
 800b210:	4620      	mov	r0, r4
 800b212:	f7ff fd61 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800b216:	2800      	cmp	r0, #0
 800b218:	d1f1      	bne.n	800b1fe <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800b21a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b21e:	2b01      	cmp	r3, #1
 800b220:	d0ed      	beq.n	800b1fe <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b222:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b224:	2301      	movs	r3, #1
 800b226:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b22a:	6803      	ldr	r3, [r0, #0]
 800b22c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b22e:	bf5e      	ittt	pl
 800b230:	6803      	ldrpl	r3, [r0, #0]
 800b232:	f043 0301 	orrpl.w	r3, r3, #1
 800b236:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b238:	6803      	ldr	r3, [r0, #0]
 800b23a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b23e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b240:	2322      	movs	r3, #34	; 0x22
 800b242:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b246:	2340      	movs	r3, #64	; 0x40
 800b248:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b24c:	2300      	movs	r3, #0
 800b24e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b250:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b252:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b254:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b258:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b25a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b25c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b25e:	4b62      	ldr	r3, [pc, #392]	; (800b3e8 <HAL_I2C_Mem_Read+0x208>)
 800b260:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b262:	4629      	mov	r1, r5
 800b264:	e9cd 7600 	strd	r7, r6, [sp]
 800b268:	464b      	mov	r3, r9
 800b26a:	4642      	mov	r2, r8
 800b26c:	4620      	mov	r0, r4
 800b26e:	f7ff fde3 	bl	800ae38 <I2C_RequestMemoryRead>
 800b272:	4605      	mov	r5, r0
 800b274:	b108      	cbz	r0, 800b27a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800b276:	2501      	movs	r5, #1
 800b278:	e7c2      	b.n	800b200 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800b27a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800b27c:	6823      	ldr	r3, [r4, #0]
 800b27e:	b9b2      	cbnz	r2, 800b2ae <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b280:	9002      	str	r0, [sp, #8]
 800b282:	695a      	ldr	r2, [r3, #20]
 800b284:	9202      	str	r2, [sp, #8]
 800b286:	699a      	ldr	r2, [r3, #24]
 800b288:	9202      	str	r2, [sp, #8]
 800b28a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b28c:	681a      	ldr	r2, [r3, #0]
 800b28e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b292:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b294:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800b3ec <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800b298:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b29a:	2b00      	cmp	r3, #0
 800b29c:	d12c      	bne.n	800b2f8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800b29e:	2220      	movs	r2, #32
 800b2a0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b2a4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800b2ac:	e7a8      	b.n	800b200 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800b2ae:	2a01      	cmp	r2, #1
 800b2b0:	d10a      	bne.n	800b2c8 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2b2:	681a      	ldr	r2, [r3, #0]
 800b2b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b2b8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2ba:	9003      	str	r0, [sp, #12]
 800b2bc:	695a      	ldr	r2, [r3, #20]
 800b2be:	9203      	str	r2, [sp, #12]
 800b2c0:	699a      	ldr	r2, [r3, #24]
 800b2c2:	9203      	str	r2, [sp, #12]
 800b2c4:	9a03      	ldr	r2, [sp, #12]
 800b2c6:	e7e1      	b.n	800b28c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800b2c8:	2a02      	cmp	r2, #2
 800b2ca:	d10e      	bne.n	800b2ea <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2cc:	681a      	ldr	r2, [r3, #0]
 800b2ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b2d2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b2d4:	681a      	ldr	r2, [r3, #0]
 800b2d6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b2da:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2dc:	9004      	str	r0, [sp, #16]
 800b2de:	695a      	ldr	r2, [r3, #20]
 800b2e0:	9204      	str	r2, [sp, #16]
 800b2e2:	699b      	ldr	r3, [r3, #24]
 800b2e4:	9304      	str	r3, [sp, #16]
 800b2e6:	9b04      	ldr	r3, [sp, #16]
 800b2e8:	e7d4      	b.n	800b294 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2ea:	9005      	str	r0, [sp, #20]
 800b2ec:	695a      	ldr	r2, [r3, #20]
 800b2ee:	9205      	str	r2, [sp, #20]
 800b2f0:	699b      	ldr	r3, [r3, #24]
 800b2f2:	9305      	str	r3, [sp, #20]
 800b2f4:	9b05      	ldr	r3, [sp, #20]
 800b2f6:	e7cd      	b.n	800b294 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800b2f8:	2b03      	cmp	r3, #3
 800b2fa:	d856      	bhi.n	800b3aa <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800b2fc:	2b01      	cmp	r3, #1
 800b2fe:	d115      	bne.n	800b32c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b300:	4632      	mov	r2, r6
 800b302:	4639      	mov	r1, r7
 800b304:	4620      	mov	r0, r4
 800b306:	f7ff fcb8 	bl	800ac7a <I2C_WaitOnRXNEFlagUntilTimeout>
 800b30a:	2800      	cmp	r0, #0
 800b30c:	d1b3      	bne.n	800b276 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b30e:	6823      	ldr	r3, [r4, #0]
 800b310:	691a      	ldr	r2, [r3, #16]
 800b312:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b314:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b316:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b318:	3301      	adds	r3, #1
 800b31a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b31c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b31e:	3b01      	subs	r3, #1
 800b320:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b322:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b324:	3b01      	subs	r3, #1
 800b326:	b29b      	uxth	r3, r3
 800b328:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b32a:	e7b5      	b.n	800b298 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800b32c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b32e:	9600      	str	r6, [sp, #0]
 800b330:	463b      	mov	r3, r7
 800b332:	f04f 0200 	mov.w	r2, #0
 800b336:	4641      	mov	r1, r8
 800b338:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800b33a:	d119      	bne.n	800b370 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b33c:	f7ff fccc 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800b340:	2800      	cmp	r0, #0
 800b342:	d198      	bne.n	800b276 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b344:	6823      	ldr	r3, [r4, #0]
 800b346:	681a      	ldr	r2, [r3, #0]
 800b348:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b34c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b34e:	691a      	ldr	r2, [r3, #16]
 800b350:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b352:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b354:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b356:	1c53      	adds	r3, r2, #1
 800b358:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b35a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b35c:	3b01      	subs	r3, #1
 800b35e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b360:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b362:	3b01      	subs	r3, #1
 800b364:	b29b      	uxth	r3, r3
 800b366:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b368:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b36a:	691b      	ldr	r3, [r3, #16]
 800b36c:	7053      	strb	r3, [r2, #1]
 800b36e:	e7d2      	b.n	800b316 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b370:	f7ff fcb2 	bl	800acd8 <I2C_WaitOnFlagUntilTimeout>
 800b374:	2800      	cmp	r0, #0
 800b376:	f47f af7e 	bne.w	800b276 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b37a:	6823      	ldr	r3, [r4, #0]
 800b37c:	681a      	ldr	r2, [r3, #0]
 800b37e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b382:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b384:	691a      	ldr	r2, [r3, #16]
 800b386:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b388:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b38a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b38c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800b38e:	3301      	adds	r3, #1
 800b390:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b392:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b394:	3b01      	subs	r3, #1
 800b396:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b398:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b39a:	3b01      	subs	r3, #1
 800b39c:	b29b      	uxth	r3, r3
 800b39e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b3a0:	4602      	mov	r2, r0
 800b3a2:	463b      	mov	r3, r7
 800b3a4:	4641      	mov	r1, r8
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	e7c8      	b.n	800b33c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b3aa:	4632      	mov	r2, r6
 800b3ac:	4639      	mov	r1, r7
 800b3ae:	4620      	mov	r0, r4
 800b3b0:	f7ff fc63 	bl	800ac7a <I2C_WaitOnRXNEFlagUntilTimeout>
 800b3b4:	2800      	cmp	r0, #0
 800b3b6:	f47f af5e 	bne.w	800b276 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3ba:	6823      	ldr	r3, [r4, #0]
 800b3bc:	691a      	ldr	r2, [r3, #16]
 800b3be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b3c0:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800b3c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3c4:	1c53      	adds	r3, r2, #1
 800b3c6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800b3c8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b3ca:	3b01      	subs	r3, #1
 800b3cc:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b3ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b3d0:	3b01      	subs	r3, #1
 800b3d2:	b29b      	uxth	r3, r3
 800b3d4:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b3d6:	6823      	ldr	r3, [r4, #0]
 800b3d8:	6959      	ldr	r1, [r3, #20]
 800b3da:	0749      	lsls	r1, r1, #29
 800b3dc:	f57f af5c 	bpl.w	800b298 <HAL_I2C_Mem_Read+0xb8>
 800b3e0:	e7c3      	b.n	800b36a <HAL_I2C_Mem_Read+0x18a>
 800b3e2:	bf00      	nop
 800b3e4:	00100002 	.word	0x00100002
 800b3e8:	ffff0000 	.word	0xffff0000
 800b3ec:	00010004 	.word	0x00010004

0800b3f0 <HAL_I2C_GetState>:
  return hi2c->State;
 800b3f0:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800b3f4:	4770      	bx	lr

0800b3f6 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800b3f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b3fa:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b3fc:	6804      	ldr	r4, [r0, #0]
 800b3fe:	684f      	ldr	r7, [r1, #4]
 800b400:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b402:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b406:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b40a:	3284      	adds	r2, #132	; 0x84
 800b40c:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b40e:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b412:	6858      	ldr	r0, [r3, #4]
 800b414:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800b418:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b41a:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b41c:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b420:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800b424:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b426:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b428:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800b42c:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b42e:	68e0      	ldr	r0, [r4, #12]
 800b430:	68cd      	ldr	r5, [r1, #12]
 800b432:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b436:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b438:	6898      	ldr	r0, [r3, #8]
 800b43a:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800b43e:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b440:	68e6      	ldr	r6, [r4, #12]
 800b442:	6888      	ldr	r0, [r1, #8]
 800b444:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800b448:	3001      	adds	r0, #1
 800b44a:	4430      	add	r0, r6
 800b44c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800b450:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b452:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b454:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b456:	f020 0007 	bic.w	r0, r0, #7
 800b45a:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800b45c:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b460:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800b462:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b464:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b468:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800b46c:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b470:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800b474:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800b478:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800b47c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800b480:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b482:	6958      	ldr	r0, [r3, #20]
 800b484:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800b488:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b48a:	6948      	ldr	r0, [r1, #20]
 800b48c:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b48e:	69d8      	ldr	r0, [r3, #28]
 800b490:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800b494:	f020 0007 	bic.w	r0, r0, #7
 800b498:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b49a:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 800b49e:	4305      	orrs	r5, r0
 800b4a0:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b4a2:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b4a4:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b4a6:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b4aa:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b4ac:	b31e      	cbz	r6, 800b4f6 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b4ae:	2e01      	cmp	r6, #1
 800b4b0:	d023      	beq.n	800b4fa <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800b4b2:	1eb0      	subs	r0, r6, #2
 800b4b4:	2802      	cmp	r0, #2
 800b4b6:	d922      	bls.n	800b4fe <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800b4b8:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800b4ba:	bf0c      	ite	eq
 800b4bc:	2002      	moveq	r0, #2
 800b4be:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b4c0:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b4c2:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800b4c6:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b4c8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b4ca:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b4cc:	eba7 070c 	sub.w	r7, r7, ip
 800b4d0:	4345      	muls	r5, r0
 800b4d2:	4378      	muls	r0, r7
 800b4d4:	3003      	adds	r0, #3
 800b4d6:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800b4da:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b4dc:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800b4de:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 800b4e2:	f020 0007 	bic.w	r0, r0, #7
 800b4e6:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b4e8:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b4ea:	58a3      	ldr	r3, [r4, r2]
 800b4ec:	f043 0301 	orr.w	r3, r3, #1
 800b4f0:	50a3      	str	r3, [r4, r2]
}
 800b4f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800b4f6:	2004      	movs	r0, #4
 800b4f8:	e7e2      	b.n	800b4c0 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800b4fa:	2003      	movs	r0, #3
 800b4fc:	e7e0      	b.n	800b4c0 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800b4fe:	2002      	movs	r0, #2
 800b500:	e7de      	b.n	800b4c0 <LTDC_SetConfig+0xca>
	...

0800b504 <HAL_LTDC_Init>:
{
 800b504:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800b506:	4604      	mov	r4, r0
 800b508:	2800      	cmp	r0, #0
 800b50a:	d063      	beq.n	800b5d4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b50c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b510:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b514:	b91b      	cbnz	r3, 800b51e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800b516:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b51a:	f7f6 fb3d 	bl	8001b98 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b51e:	2302      	movs	r3, #2
 800b520:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b524:	6823      	ldr	r3, [r4, #0]
 800b526:	699a      	ldr	r2, [r3, #24]
 800b528:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800b52c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b52e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800b532:	4302      	orrs	r2, r0
 800b534:	68e0      	ldr	r0, [r4, #12]
 800b536:	6999      	ldr	r1, [r3, #24]
 800b538:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b53a:	6920      	ldr	r0, [r4, #16]
 800b53c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b53e:	430a      	orrs	r2, r1
 800b540:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b542:	689a      	ldr	r2, [r3, #8]
 800b544:	4924      	ldr	r1, [pc, #144]	; (800b5d8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b546:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b548:	400a      	ands	r2, r1
 800b54a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b54c:	689a      	ldr	r2, [r3, #8]
 800b54e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b552:	69a0      	ldr	r0, [r4, #24]
 800b554:	4302      	orrs	r2, r0
 800b556:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b558:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b55a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b55c:	400a      	ands	r2, r1
 800b55e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b560:	68da      	ldr	r2, [r3, #12]
 800b562:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b566:	6a20      	ldr	r0, [r4, #32]
 800b568:	4302      	orrs	r2, r0
 800b56a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b56c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b56e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b570:	400a      	ands	r2, r1
 800b572:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b574:	691a      	ldr	r2, [r3, #16]
 800b576:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b57a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b57c:	4302      	orrs	r2, r0
 800b57e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b580:	695a      	ldr	r2, [r3, #20]
 800b582:	4011      	ands	r1, r2
 800b584:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b586:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b588:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b58a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b58e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b590:	430a      	orrs	r2, r1
 800b592:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b594:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b596:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b59a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b59e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800b5a2:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b5a4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800b5a6:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b5aa:	430a      	orrs	r2, r1
 800b5ac:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b5b0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5b4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b5b6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b5b8:	f042 0206 	orr.w	r2, r2, #6
 800b5bc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800b5be:	699a      	ldr	r2, [r3, #24]
 800b5c0:	f042 0201 	orr.w	r2, r2, #1
 800b5c4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b5c6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800b5c8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b5ca:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b5ce:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800b5d2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b5d4:	2001      	movs	r0, #1
 800b5d6:	e7fc      	b.n	800b5d2 <HAL_LTDC_Init+0xce>
 800b5d8:	f000f800 	.word	0xf000f800

0800b5dc <HAL_LTDC_ErrorCallback>:
 800b5dc:	4770      	bx	lr

0800b5de <HAL_LTDC_LineEventCallback>:
 800b5de:	4770      	bx	lr

0800b5e0 <HAL_LTDC_ReloadEventCallback>:
 800b5e0:	4770      	bx	lr

0800b5e2 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b5e2:	6803      	ldr	r3, [r0, #0]
{
 800b5e4:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b5e6:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b5e8:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b5ea:	0772      	lsls	r2, r6, #29
{
 800b5ec:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b5ee:	d514      	bpl.n	800b61a <HAL_LTDC_IRQHandler+0x38>
 800b5f0:	0769      	lsls	r1, r5, #29
 800b5f2:	d512      	bpl.n	800b61a <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b5f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b5f6:	f022 0204 	bic.w	r2, r2, #4
 800b5fa:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b5fc:	2204      	movs	r2, #4
 800b5fe:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b600:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b604:	f043 0301 	orr.w	r3, r3, #1
 800b608:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b60c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b60e:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b612:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b616:	f7ff ffe1 	bl	800b5dc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b61a:	07b2      	lsls	r2, r6, #30
 800b61c:	d516      	bpl.n	800b64c <HAL_LTDC_IRQHandler+0x6a>
 800b61e:	07ab      	lsls	r3, r5, #30
 800b620:	d514      	bpl.n	800b64c <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b622:	6823      	ldr	r3, [r4, #0]
 800b624:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b626:	f022 0202 	bic.w	r2, r2, #2
 800b62a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b62c:	2202      	movs	r2, #2
 800b62e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b630:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b634:	4313      	orrs	r3, r2
 800b636:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b63a:	2304      	movs	r3, #4
 800b63c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b640:	2300      	movs	r3, #0
 800b642:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b646:	4620      	mov	r0, r4
 800b648:	f7ff ffc8 	bl	800b5dc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b64c:	07f0      	lsls	r0, r6, #31
 800b64e:	d510      	bpl.n	800b672 <HAL_LTDC_IRQHandler+0x90>
 800b650:	07e9      	lsls	r1, r5, #31
 800b652:	d50e      	bpl.n	800b672 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b654:	6823      	ldr	r3, [r4, #0]
 800b656:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b658:	f022 0201 	bic.w	r2, r2, #1
 800b65c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b65e:	2201      	movs	r2, #1
 800b660:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b662:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b664:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b668:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b66c:	4620      	mov	r0, r4
 800b66e:	f7ff ffb6 	bl	800b5de <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b672:	0732      	lsls	r2, r6, #28
 800b674:	d511      	bpl.n	800b69a <HAL_LTDC_IRQHandler+0xb8>
 800b676:	072b      	lsls	r3, r5, #28
 800b678:	d50f      	bpl.n	800b69a <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b67a:	6823      	ldr	r3, [r4, #0]
 800b67c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b67e:	f022 0208 	bic.w	r2, r2, #8
 800b682:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b684:	2208      	movs	r2, #8
 800b686:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800b688:	2301      	movs	r3, #1
 800b68a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b68e:	2300      	movs	r3, #0
 800b690:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b694:	4620      	mov	r0, r4
 800b696:	f7ff ffa3 	bl	800b5e0 <HAL_LTDC_ReloadEventCallback>
}
 800b69a:	bd70      	pop	{r4, r5, r6, pc}

0800b69c <HAL_LTDC_ConfigLayer>:
{
 800b69c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800b6a0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b6a4:	2b01      	cmp	r3, #1
{
 800b6a6:	4606      	mov	r6, r0
 800b6a8:	460f      	mov	r7, r1
 800b6aa:	4694      	mov	ip, r2
 800b6ac:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800b6b0:	d01f      	beq.n	800b6f2 <HAL_LTDC_ConfigLayer+0x56>
 800b6b2:	f04f 0801 	mov.w	r8, #1
 800b6b6:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b6ba:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b6be:	2434      	movs	r4, #52	; 0x34
 800b6c0:	460d      	mov	r5, r1
 800b6c2:	fb04 6402 	mla	r4, r4, r2, r6
 800b6c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b6c8:	3438      	adds	r4, #56	; 0x38
 800b6ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b6cc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b6ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b6d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b6d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b6d4:	682b      	ldr	r3, [r5, #0]
 800b6d6:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800b6d8:	4630      	mov	r0, r6
 800b6da:	4662      	mov	r2, ip
 800b6dc:	4639      	mov	r1, r7
 800b6de:	f7ff fe8a 	bl	800b3f6 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b6e2:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800b6e4:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b6e6:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b6ea:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b6ee:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800b6f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800b6f8 <HAL_LTDC_SetPitch>:
{
 800b6f8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800b6fa:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b6fe:	2b01      	cmp	r3, #1
 800b700:	f04f 0302 	mov.w	r3, #2
 800b704:	d02c      	beq.n	800b760 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800b706:	2434      	movs	r4, #52	; 0x34
 800b708:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b70c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800b710:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b712:	b33c      	cbz	r4, 800b764 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b714:	2c01      	cmp	r4, #1
 800b716:	d027      	beq.n	800b768 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800b718:	1ea5      	subs	r5, r4, #2
 800b71a:	429d      	cmp	r5, r3
 800b71c:	d902      	bls.n	800b724 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800b71e:	2c07      	cmp	r4, #7
 800b720:	bf18      	it	ne
 800b722:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800b724:	6804      	ldr	r4, [r0, #0]
 800b726:	01d2      	lsls	r2, r2, #7
 800b728:	3284      	adds	r2, #132	; 0x84
 800b72a:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800b72c:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800b72e:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800b730:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800b734:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800b738:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800b73a:	4c0c      	ldr	r4, [pc, #48]	; (800b76c <HAL_LTDC_SetPitch+0x74>)
 800b73c:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800b73e:	f045 0501 	orr.w	r5, r5, #1
 800b742:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800b744:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800b746:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800b74a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800b74c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b74e:	f043 0301 	orr.w	r3, r3, #1
 800b752:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800b754:	2301      	movs	r3, #1
 800b756:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b75a:	2300      	movs	r3, #0
 800b75c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b760:	4618      	mov	r0, r3
 800b762:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800b764:	2304      	movs	r3, #4
 800b766:	e7dd      	b.n	800b724 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800b768:	2303      	movs	r3, #3
 800b76a:	e7db      	b.n	800b724 <HAL_LTDC_SetPitch+0x2c>
 800b76c:	40016800 	.word	0x40016800

0800b770 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800b770:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800b772:	2300      	movs	r3, #0
 800b774:	9301      	str	r3, [sp, #4]
 800b776:	4b18      	ldr	r3, [pc, #96]	; (800b7d8 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800b778:	4d18      	ldr	r5, [pc, #96]	; (800b7dc <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800b77a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b77c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b780:	641a      	str	r2, [r3, #64]	; 0x40
 800b782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b784:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b788:	9301      	str	r3, [sp, #4]
 800b78a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800b78c:	4b14      	ldr	r3, [pc, #80]	; (800b7e0 <HAL_PWREx_EnableOverDrive+0x70>)
 800b78e:	2201      	movs	r2, #1
 800b790:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800b792:	f7fe f9fb 	bl	8009b8c <HAL_GetTick>
 800b796:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800b798:	686b      	ldr	r3, [r5, #4]
 800b79a:	03da      	lsls	r2, r3, #15
 800b79c:	d50b      	bpl.n	800b7b6 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800b79e:	4b11      	ldr	r3, [pc, #68]	; (800b7e4 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800b7a0:	4d0e      	ldr	r5, [pc, #56]	; (800b7dc <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800b7a2:	2201      	movs	r2, #1
 800b7a4:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800b7a6:	f7fe f9f1 	bl	8009b8c <HAL_GetTick>
 800b7aa:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800b7ac:	686b      	ldr	r3, [r5, #4]
 800b7ae:	039b      	lsls	r3, r3, #14
 800b7b0:	d50a      	bpl.n	800b7c8 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800b7b2:	2000      	movs	r0, #0
 800b7b4:	e006      	b.n	800b7c4 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800b7b6:	f7fe f9e9 	bl	8009b8c <HAL_GetTick>
 800b7ba:	1b00      	subs	r0, r0, r4
 800b7bc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b7c0:	d9ea      	bls.n	800b798 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800b7c2:	2003      	movs	r0, #3
}
 800b7c4:	b003      	add	sp, #12
 800b7c6:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800b7c8:	f7fe f9e0 	bl	8009b8c <HAL_GetTick>
 800b7cc:	1b00      	subs	r0, r0, r4
 800b7ce:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b7d2:	d9eb      	bls.n	800b7ac <HAL_PWREx_EnableOverDrive+0x3c>
 800b7d4:	e7f5      	b.n	800b7c2 <HAL_PWREx_EnableOverDrive+0x52>
 800b7d6:	bf00      	nop
 800b7d8:	40023800 	.word	0x40023800
 800b7dc:	40007000 	.word	0x40007000
 800b7e0:	420e0040 	.word	0x420e0040
 800b7e4:	420e0044 	.word	0x420e0044

0800b7e8 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800b7e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800b7ec:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800b7ee:	b13e      	cbz	r6, 800b800 <QSPI_Config+0x18>
 800b7f0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800b7f4:	bf1f      	itttt	ne
 800b7f6:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800b7f8:	6804      	ldrne	r4, [r0, #0]
 800b7fa:	f103 33ff 	addne.w	r3, r3, #4294967295
 800b7fe:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800b800:	f8d1 a018 	ldr.w	sl, [r1, #24]
 800b804:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800b808:	f1ba 0f00 	cmp.w	sl, #0
 800b80c:	d04e      	beq.n	800b8ac <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800b80e:	694b      	ldr	r3, [r1, #20]
 800b810:	6805      	ldr	r5, [r0, #0]
 800b812:	f8d1 8000 	ldr.w	r8, [r1]
 800b816:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800b818:	ea46 0a0a 	orr.w	sl, r6, sl
 800b81c:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 800b820:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 800b824:	ea4a 0a02 	orr.w	sl, sl, r2
 800b828:	f1bc 0f00 	cmp.w	ip, #0
 800b82c:	d026      	beq.n	800b87c <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800b82e:	688b      	ldr	r3, [r1, #8]
 800b830:	690e      	ldr	r6, [r1, #16]
 800b832:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b834:	ea4c 0c0a 	orr.w	ip, ip, sl
 800b838:	b1a7      	cbz	r7, 800b864 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b83a:	ea48 0307 	orr.w	r3, r8, r7
 800b83e:	4323      	orrs	r3, r4
 800b840:	ea43 0309 	orr.w	r3, r3, r9
 800b844:	4303      	orrs	r3, r0
 800b846:	68c8      	ldr	r0, [r1, #12]
 800b848:	4333      	orrs	r3, r6
 800b84a:	4303      	orrs	r3, r0
 800b84c:	ea43 030e 	orr.w	r3, r3, lr
 800b850:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b854:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b858:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b85a:	d001      	beq.n	800b860 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800b85c:	684b      	ldr	r3, [r1, #4]
 800b85e:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800b860:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b864:	ea48 0304 	orr.w	r3, r8, r4
 800b868:	ea43 0309 	orr.w	r3, r3, r9
 800b86c:	4303      	orrs	r3, r0
 800b86e:	4333      	orrs	r3, r6
 800b870:	ea43 030e 	orr.w	r3, r3, lr
 800b874:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b878:	616b      	str	r3, [r5, #20]
 800b87a:	e7f1      	b.n	800b860 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b87c:	b167      	cbz	r7, 800b898 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b87e:	ea48 0307 	orr.w	r3, r8, r7
 800b882:	4323      	orrs	r3, r4
 800b884:	ea43 0309 	orr.w	r3, r3, r9
 800b888:	4303      	orrs	r3, r0
 800b88a:	68c8      	ldr	r0, [r1, #12]
 800b88c:	4303      	orrs	r3, r0
 800b88e:	ea43 030e 	orr.w	r3, r3, lr
 800b892:	ea43 030a 	orr.w	r3, r3, sl
 800b896:	e7dd      	b.n	800b854 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b898:	ea48 0304 	orr.w	r3, r8, r4
 800b89c:	ea43 0309 	orr.w	r3, r3, r9
 800b8a0:	4303      	orrs	r3, r0
 800b8a2:	ea43 030e 	orr.w	r3, r3, lr
 800b8a6:	ea43 030a 	orr.w	r3, r3, sl
 800b8aa:	e7e5      	b.n	800b878 <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800b8ac:	f1bc 0f00 	cmp.w	ip, #0
 800b8b0:	d028      	beq.n	800b904 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800b8b2:	6804      	ldr	r4, [r0, #0]
 800b8b4:	688b      	ldr	r3, [r1, #8]
 800b8b6:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b8b8:	ea46 030c 	orr.w	r3, r6, ip
 800b8bc:	694e      	ldr	r6, [r1, #20]
 800b8be:	6908      	ldr	r0, [r1, #16]
 800b8c0:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800b8c4:	ea43 0502 	orr.w	r5, r3, r2
 800b8c8:	04b6      	lsls	r6, r6, #18
 800b8ca:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 800b8ce:	b187      	cbz	r7, 800b8f2 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8d0:	4338      	orrs	r0, r7
 800b8d2:	ea40 0008 	orr.w	r0, r0, r8
 800b8d6:	4303      	orrs	r3, r0
 800b8d8:	68c8      	ldr	r0, [r1, #12]
 800b8da:	ea43 030c 	orr.w	r3, r3, ip
 800b8de:	4303      	orrs	r3, r0
 800b8e0:	4333      	orrs	r3, r6
 800b8e2:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b8e4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8e8:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b8ea:	d0b9      	beq.n	800b860 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800b8ec:	684b      	ldr	r3, [r1, #4]
 800b8ee:	61a3      	str	r3, [r4, #24]
 800b8f0:	e7b6      	b.n	800b860 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8f2:	ea40 0008 	orr.w	r0, r0, r8
 800b8f6:	4303      	orrs	r3, r0
 800b8f8:	ea43 030c 	orr.w	r3, r3, ip
 800b8fc:	4333      	orrs	r3, r6
 800b8fe:	432b      	orrs	r3, r5
 800b900:	6163      	str	r3, [r4, #20]
 800b902:	e7ad      	b.n	800b860 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b904:	b1af      	cbz	r7, 800b932 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b906:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800b908:	6800      	ldr	r0, [r0, #0]
 800b90a:	ea46 0307 	orr.w	r3, r6, r7
 800b90e:	4313      	orrs	r3, r2
 800b910:	4323      	orrs	r3, r4
 800b912:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800b914:	4323      	orrs	r3, r4
 800b916:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800b918:	4323      	orrs	r3, r4
 800b91a:	68cc      	ldr	r4, [r1, #12]
 800b91c:	4323      	orrs	r3, r4
 800b91e:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b920:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b924:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800b928:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b92a:	d099      	beq.n	800b860 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800b92c:	684b      	ldr	r3, [r1, #4]
 800b92e:	6183      	str	r3, [r0, #24]
 800b930:	e796      	b.n	800b860 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800b932:	2e00      	cmp	r6, #0
 800b934:	d094      	beq.n	800b860 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b936:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800b938:	6800      	ldr	r0, [r0, #0]
 800b93a:	4333      	orrs	r3, r6
 800b93c:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800b93e:	431a      	orrs	r2, r3
 800b940:	4332      	orrs	r2, r6
 800b942:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800b944:	694b      	ldr	r3, [r1, #20]
 800b946:	4332      	orrs	r2, r6
 800b948:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800b94c:	6142      	str	r2, [r0, #20]
}
 800b94e:	e787      	b.n	800b860 <QSPI_Config+0x78>

0800b950 <QSPI_WaitFlagStateUntilTimeout>:
{
 800b950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b954:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800b958:	4604      	mov	r4, r0
 800b95a:	460e      	mov	r6, r1
 800b95c:	4615      	mov	r5, r2
 800b95e:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800b960:	6822      	ldr	r2, [r4, #0]
 800b962:	6893      	ldr	r3, [r2, #8]
 800b964:	4233      	tst	r3, r6
 800b966:	bf14      	ite	ne
 800b968:	2301      	movne	r3, #1
 800b96a:	2300      	moveq	r3, #0
 800b96c:	42ab      	cmp	r3, r5
 800b96e:	d101      	bne.n	800b974 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800b970:	2000      	movs	r0, #0
 800b972:	e012      	b.n	800b99a <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800b974:	f1b8 3fff 	cmp.w	r8, #4294967295
 800b978:	d0f3      	beq.n	800b962 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b97a:	f7fe f907 	bl	8009b8c <HAL_GetTick>
 800b97e:	1bc0      	subs	r0, r0, r7
 800b980:	4540      	cmp	r0, r8
 800b982:	d802      	bhi.n	800b98a <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800b984:	f1b8 0f00 	cmp.w	r8, #0
 800b988:	d1ea      	bne.n	800b960 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800b98a:	2304      	movs	r3, #4
 800b98c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800b990:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b992:	f043 0301 	orr.w	r3, r3, #1
 800b996:	6463      	str	r3, [r4, #68]	; 0x44
 800b998:	2001      	movs	r0, #1
}
 800b99a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800b9a0 <HAL_QSPI_Init>:
{
 800b9a0:	b530      	push	{r4, r5, lr}
 800b9a2:	b085      	sub	sp, #20
 800b9a4:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b9a6:	f7fe f8f1 	bl	8009b8c <HAL_GetTick>
 800b9aa:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800b9ac:	2c00      	cmp	r4, #0
 800b9ae:	d047      	beq.n	800ba40 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800b9b0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800b9b4:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800b9b8:	b94a      	cbnz	r2, 800b9ce <HAL_QSPI_Init+0x2e>
 800b9ba:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800b9bc:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800b9c0:	4620      	mov	r0, r4
 800b9c2:	f7f6 f91d 	bl	8001c00 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800b9c6:	f241 3288 	movw	r2, #5000	; 0x1388
 800b9ca:	9b03      	ldr	r3, [sp, #12]
 800b9cc:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800b9ce:	6820      	ldr	r0, [r4, #0]
 800b9d0:	68a1      	ldr	r1, [r4, #8]
 800b9d2:	6802      	ldr	r2, [r0, #0]
 800b9d4:	3901      	subs	r1, #1
 800b9d6:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800b9da:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800b9de:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800b9e0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800b9e2:	9200      	str	r2, [sp, #0]
 800b9e4:	2120      	movs	r1, #32
 800b9e6:	2200      	movs	r2, #0
 800b9e8:	4620      	mov	r0, r4
 800b9ea:	f7ff ffb1 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800b9ee:	bb10      	cbnz	r0, 800ba36 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800b9f0:	69e5      	ldr	r5, [r4, #28]
 800b9f2:	68e3      	ldr	r3, [r4, #12]
 800b9f4:	6822      	ldr	r2, [r4, #0]
 800b9f6:	432b      	orrs	r3, r5
 800b9f8:	6a25      	ldr	r5, [r4, #32]
 800b9fa:	6811      	ldr	r1, [r2, #0]
 800b9fc:	432b      	orrs	r3, r5
 800b9fe:	6865      	ldr	r5, [r4, #4]
 800ba00:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800ba04:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800ba08:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800ba0c:	430b      	orrs	r3, r1
 800ba0e:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800ba10:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800ba14:	430b      	orrs	r3, r1
 800ba16:	6921      	ldr	r1, [r4, #16]
 800ba18:	6855      	ldr	r5, [r2, #4]
 800ba1a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ba1e:	4909      	ldr	r1, [pc, #36]	; (800ba44 <HAL_QSPI_Init+0xa4>)
 800ba20:	4029      	ands	r1, r5
 800ba22:	430b      	orrs	r3, r1
 800ba24:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800ba26:	6813      	ldr	r3, [r2, #0]
 800ba28:	f043 0301 	orr.w	r3, r3, #1
 800ba2c:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800ba2e:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800ba30:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800ba32:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800ba36:	2300      	movs	r3, #0
 800ba38:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800ba3c:	b005      	add	sp, #20
 800ba3e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800ba40:	2001      	movs	r0, #1
 800ba42:	e7fb      	b.n	800ba3c <HAL_QSPI_Init+0x9c>
 800ba44:	ffe0f8fe 	.word	0xffe0f8fe

0800ba48 <HAL_QSPI_DeInit>:
{
 800ba48:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800ba4a:	4604      	mov	r4, r0
 800ba4c:	b168      	cbz	r0, 800ba6a <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800ba4e:	6802      	ldr	r2, [r0, #0]
 800ba50:	6813      	ldr	r3, [r2, #0]
 800ba52:	f023 0301 	bic.w	r3, r3, #1
 800ba56:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800ba58:	f7f6 f92c 	bl	8001cb4 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800ba5c:	2000      	movs	r0, #0
 800ba5e:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800ba60:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800ba64:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800ba68:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ba6a:	2001      	movs	r0, #1
 800ba6c:	e7fc      	b.n	800ba68 <HAL_QSPI_DeInit+0x20>

0800ba6e <HAL_QSPI_Command>:
{
 800ba6e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba72:	4604      	mov	r4, r0
 800ba74:	b085      	sub	sp, #20
 800ba76:	4617      	mov	r7, r2
 800ba78:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800ba7a:	f7fe f887 	bl	8009b8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800ba7e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800ba82:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800ba84:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800ba86:	d034      	beq.n	800baf2 <HAL_QSPI_Command+0x84>
 800ba88:	2201      	movs	r2, #1
 800ba8a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800ba8e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800ba92:	2a01      	cmp	r2, #1
 800ba94:	fa5f f882 	uxtb.w	r8, r2
 800ba98:	f04f 0602 	mov.w	r6, #2
 800ba9c:	d127      	bne.n	800baee <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800ba9e:	2200      	movs	r2, #0
 800baa0:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800baa2:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800baa4:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800baa8:	9700      	str	r7, [sp, #0]
 800baaa:	2120      	movs	r1, #32
 800baac:	4620      	mov	r0, r4
 800baae:	f7ff ff4f 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bab2:	4605      	mov	r5, r0
 800bab4:	b9a0      	cbnz	r0, 800bae0 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bab6:	4602      	mov	r2, r0
 800bab8:	4649      	mov	r1, r9
 800baba:	4620      	mov	r0, r4
 800babc:	f7ff fe94 	bl	800b7e8 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800bac0:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800bac4:	9b03      	ldr	r3, [sp, #12]
 800bac6:	b94a      	cbnz	r2, 800badc <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bac8:	9700      	str	r7, [sp, #0]
 800baca:	4642      	mov	r2, r8
 800bacc:	4631      	mov	r1, r6
 800bace:	4620      	mov	r0, r4
 800bad0:	f7ff ff3e 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bad4:	4605      	mov	r5, r0
 800bad6:	b918      	cbnz	r0, 800bae0 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bad8:	6823      	ldr	r3, [r4, #0]
 800bada:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800badc:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bae0:	2300      	movs	r3, #0
 800bae2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bae6:	4628      	mov	r0, r5
 800bae8:	b005      	add	sp, #20
 800baea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800baee:	4635      	mov	r5, r6
 800baf0:	e7f6      	b.n	800bae0 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800baf2:	2502      	movs	r5, #2
 800baf4:	e7f7      	b.n	800bae6 <HAL_QSPI_Command+0x78>

0800baf6 <HAL_QSPI_AutoPolling>:
{
 800baf6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bafa:	4604      	mov	r4, r0
 800bafc:	4615      	mov	r5, r2
 800bafe:	461e      	mov	r6, r3
 800bb00:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800bb02:	f7fe f843 	bl	8009b8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bb06:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bb0a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bb0c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bb0e:	d040      	beq.n	800bb92 <HAL_QSPI_AutoPolling+0x9c>
 800bb10:	2201      	movs	r2, #1
 800bb12:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bb16:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bb1a:	2a01      	cmp	r2, #1
 800bb1c:	b2d7      	uxtb	r7, r2
 800bb1e:	d136      	bne.n	800bb8e <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800bb20:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bb22:	2200      	movs	r2, #0
 800bb24:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bb26:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800bb28:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bb2c:	9600      	str	r6, [sp, #0]
 800bb2e:	2120      	movs	r1, #32
 800bb30:	4620      	mov	r0, r4
 800bb32:	f7ff ff0d 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bb36:	bb20      	cbnz	r0, 800bb82 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800bb38:	6821      	ldr	r1, [r4, #0]
 800bb3a:	682a      	ldr	r2, [r5, #0]
 800bb3c:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800bb3e:	686a      	ldr	r2, [r5, #4]
 800bb40:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800bb42:	68aa      	ldr	r2, [r5, #8]
 800bb44:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800bb46:	680a      	ldr	r2, [r1, #0]
 800bb48:	6928      	ldr	r0, [r5, #16]
 800bb4a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800bb4e:	4302      	orrs	r2, r0
 800bb50:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800bb54:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800bb56:	68ea      	ldr	r2, [r5, #12]
 800bb58:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800bb5c:	4641      	mov	r1, r8
 800bb5e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800bb62:	4620      	mov	r0, r4
 800bb64:	f7ff fe40 	bl	800b7e8 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800bb68:	9b03      	ldr	r3, [sp, #12]
 800bb6a:	9600      	str	r6, [sp, #0]
 800bb6c:	463a      	mov	r2, r7
 800bb6e:	2108      	movs	r1, #8
 800bb70:	4620      	mov	r0, r4
 800bb72:	f7ff feed 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bb76:	b920      	cbnz	r0, 800bb82 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800bb78:	6823      	ldr	r3, [r4, #0]
 800bb7a:	2208      	movs	r2, #8
 800bb7c:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800bb7e:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bb82:	2300      	movs	r3, #0
 800bb84:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bb88:	b004      	add	sp, #16
 800bb8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800bb8e:	2002      	movs	r0, #2
 800bb90:	e7f7      	b.n	800bb82 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800bb92:	2002      	movs	r0, #2
 800bb94:	e7f8      	b.n	800bb88 <HAL_QSPI_AutoPolling+0x92>

0800bb96 <HAL_QSPI_MemoryMapped>:
{
 800bb96:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bb98:	4604      	mov	r4, r0
 800bb9a:	4616      	mov	r6, r2
 800bb9c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bb9e:	f7fd fff5 	bl	8009b8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bba2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bba6:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bba8:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bbaa:	d032      	beq.n	800bc12 <HAL_QSPI_MemoryMapped+0x7c>
 800bbac:	2201      	movs	r2, #1
 800bbae:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bbb2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bbb6:	2a01      	cmp	r2, #1
 800bbb8:	d129      	bne.n	800bc0e <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bbba:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800bbbc:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bbbe:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800bbc0:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bbc4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800bbc6:	9100      	str	r1, [sp, #0]
 800bbc8:	4620      	mov	r0, r4
 800bbca:	2120      	movs	r1, #32
 800bbcc:	f7ff fec0 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bbd0:	4605      	mov	r5, r0
 800bbd2:	b9b0      	cbnz	r0, 800bc02 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bbd4:	6823      	ldr	r3, [r4, #0]
 800bbd6:	6872      	ldr	r2, [r6, #4]
 800bbd8:	6818      	ldr	r0, [r3, #0]
 800bbda:	f020 0008 	bic.w	r0, r0, #8
 800bbde:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bbe0:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bbe2:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bbe4:	d107      	bne.n	800bbf6 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800bbe6:	6832      	ldr	r2, [r6, #0]
 800bbe8:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800bbea:	2210      	movs	r2, #16
 800bbec:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800bbee:	681a      	ldr	r2, [r3, #0]
 800bbf0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800bbf4:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800bbf6:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800bbfa:	4639      	mov	r1, r7
 800bbfc:	4620      	mov	r0, r4
 800bbfe:	f7ff fdf3 	bl	800b7e8 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800bc02:	2300      	movs	r3, #0
 800bc04:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bc08:	4628      	mov	r0, r5
 800bc0a:	b003      	add	sp, #12
 800bc0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800bc0e:	2502      	movs	r5, #2
 800bc10:	e7f7      	b.n	800bc02 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800bc12:	2502      	movs	r5, #2
 800bc14:	e7f8      	b.n	800bc08 <HAL_QSPI_MemoryMapped+0x72>

0800bc16 <HAL_QSPI_Abort>:
{
 800bc16:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc18:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bc1a:	f7fd ffb7 	bl	8009b8c <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800bc1e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800bc22:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800bc24:	f012 0002 	ands.w	r0, r2, #2
 800bc28:	d036      	beq.n	800bc98 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 800bc2a:	2200      	movs	r2, #0
 800bc2c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bc30:	6822      	ldr	r2, [r4, #0]
 800bc32:	6811      	ldr	r1, [r2, #0]
 800bc34:	0749      	lsls	r1, r1, #29
 800bc36:	d50d      	bpl.n	800bc54 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bc38:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bc3a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bc3c:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bc3e:	f021 0104 	bic.w	r1, r1, #4
 800bc42:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bc44:	f7fe f8f2 	bl	8009e2c <HAL_DMA_Abort>
      if(status != HAL_OK)
 800bc48:	9b03      	ldr	r3, [sp, #12]
 800bc4a:	b118      	cbz	r0, 800bc54 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800bc4c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bc4e:	f042 0204 	orr.w	r2, r2, #4
 800bc52:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bc54:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bc56:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bc58:	680a      	ldr	r2, [r1, #0]
 800bc5a:	f042 0202 	orr.w	r2, r2, #2
 800bc5e:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bc60:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bc62:	9200      	str	r2, [sp, #0]
 800bc64:	2102      	movs	r1, #2
 800bc66:	2201      	movs	r2, #1
 800bc68:	4620      	mov	r0, r4
 800bc6a:	f7ff fe71 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bc6e:	9b03      	ldr	r3, [sp, #12]
 800bc70:	b990      	cbnz	r0, 800bc98 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bc72:	6822      	ldr	r2, [r4, #0]
 800bc74:	2102      	movs	r1, #2
 800bc76:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bc78:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bc7a:	9200      	str	r2, [sp, #0]
 800bc7c:	2120      	movs	r1, #32
 800bc7e:	4602      	mov	r2, r0
 800bc80:	4620      	mov	r0, r4
 800bc82:	f7ff fe65 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bc86:	b938      	cbnz	r0, 800bc98 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800bc88:	6822      	ldr	r2, [r4, #0]
 800bc8a:	6953      	ldr	r3, [r2, #20]
 800bc8c:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800bc90:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800bc92:	2301      	movs	r3, #1
 800bc94:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800bc98:	b004      	add	sp, #16
 800bc9a:	bd10      	pop	{r4, pc}

0800bc9c <HAL_QSPI_Transmit>:
{
 800bc9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc9e:	4604      	mov	r4, r0
 800bca0:	b085      	sub	sp, #20
 800bca2:	4616      	mov	r6, r2
 800bca4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bca6:	f7fd ff71 	bl	8009b8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bcaa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800bcae:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800bcb0:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bcb2:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bcb4:	d04c      	beq.n	800bd50 <HAL_QSPI_Transmit+0xb4>
 800bcb6:	2201      	movs	r2, #1
 800bcb8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bcbc:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bcc0:	2a01      	cmp	r2, #1
 800bcc2:	b2d0      	uxtb	r0, r2
 800bcc4:	d142      	bne.n	800bd4c <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bcc6:	2200      	movs	r2, #0
 800bcc8:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800bcca:	2f00      	cmp	r7, #0
 800bccc:	d039      	beq.n	800bd42 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800bcce:	2212      	movs	r2, #18
 800bcd0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800bcd4:	692a      	ldr	r2, [r5, #16]
 800bcd6:	3201      	adds	r2, #1
 800bcd8:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bcda:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800bcdc:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bcde:	3201      	adds	r2, #1
 800bce0:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bce2:	696a      	ldr	r2, [r5, #20]
 800bce4:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800bce8:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800bcea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bcec:	b9a2      	cbnz	r2, 800bd18 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bcee:	9600      	str	r6, [sp, #0]
 800bcf0:	2201      	movs	r2, #1
 800bcf2:	2102      	movs	r1, #2
 800bcf4:	4620      	mov	r0, r4
 800bcf6:	f7ff fe2b 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bcfa:	b928      	cbnz	r0, 800bd08 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bcfc:	6823      	ldr	r3, [r4, #0]
 800bcfe:	2202      	movs	r2, #2
 800bd00:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800bd02:	4620      	mov	r0, r4
 800bd04:	f7ff ff87 	bl	800bc16 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800bd08:	2301      	movs	r3, #1
 800bd0a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bd0e:	2300      	movs	r3, #0
 800bd10:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bd14:	b005      	add	sp, #20
 800bd16:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800bd18:	9600      	str	r6, [sp, #0]
 800bd1a:	2201      	movs	r2, #1
 800bd1c:	2104      	movs	r1, #4
 800bd1e:	4620      	mov	r0, r4
 800bd20:	9303      	str	r3, [sp, #12]
 800bd22:	f7ff fe15 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800bd26:	2800      	cmp	r0, #0
 800bd28:	d1ee      	bne.n	800bd08 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800bd2a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800bd2c:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800bd2e:	7812      	ldrb	r2, [r2, #0]
 800bd30:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800bd34:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bd36:	3201      	adds	r2, #1
 800bd38:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800bd3a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bd3c:	3a01      	subs	r2, #1
 800bd3e:	62e2      	str	r2, [r4, #44]	; 0x2c
 800bd40:	e7d3      	b.n	800bcea <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800bd42:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bd44:	f043 0308 	orr.w	r3, r3, #8
 800bd48:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800bd4a:	e7e0      	b.n	800bd0e <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800bd4c:	2002      	movs	r0, #2
 800bd4e:	e7de      	b.n	800bd0e <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800bd50:	2002      	movs	r0, #2
 800bd52:	e7df      	b.n	800bd14 <HAL_QSPI_Transmit+0x78>

0800bd54 <HAL_QSPI_Receive>:
{
 800bd54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd56:	4604      	mov	r4, r0
 800bd58:	b085      	sub	sp, #20
 800bd5a:	4616      	mov	r6, r2
 800bd5c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bd5e:	f7fd ff15 	bl	8009b8c <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800bd62:	6825      	ldr	r5, [r4, #0]
 800bd64:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800bd68:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bd6c:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bd6e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bd70:	d050      	beq.n	800be14 <HAL_QSPI_Receive+0xc0>
 800bd72:	2201      	movs	r2, #1
 800bd74:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bd78:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bd7c:	2a01      	cmp	r2, #1
 800bd7e:	b2d0      	uxtb	r0, r2
 800bd80:	d146      	bne.n	800be10 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd82:	2200      	movs	r2, #0
 800bd84:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800bd86:	2f00      	cmp	r7, #0
 800bd88:	d03d      	beq.n	800be06 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800bd8a:	2222      	movs	r2, #34	; 0x22
 800bd8c:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800bd90:	692a      	ldr	r2, [r5, #16]
 800bd92:	3201      	adds	r2, #1
 800bd94:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bd96:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800bd98:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bd9a:	3201      	adds	r2, #1
 800bd9c:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800bd9e:	6969      	ldr	r1, [r5, #20]
 800bda0:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800bda4:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800bda8:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800bdaa:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800bdae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bdb0:	b9a2      	cbnz	r2, 800bddc <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bdb2:	9600      	str	r6, [sp, #0]
 800bdb4:	2201      	movs	r2, #1
 800bdb6:	2102      	movs	r1, #2
 800bdb8:	4620      	mov	r0, r4
 800bdba:	f7ff fdc9 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800bdbe:	b928      	cbnz	r0, 800bdcc <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bdc0:	6823      	ldr	r3, [r4, #0]
 800bdc2:	2202      	movs	r2, #2
 800bdc4:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800bdc6:	4620      	mov	r0, r4
 800bdc8:	f7ff ff25 	bl	800bc16 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800bdcc:	2301      	movs	r3, #1
 800bdce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bdd2:	2300      	movs	r3, #0
 800bdd4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bdd8:	b005      	add	sp, #20
 800bdda:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800bddc:	9600      	str	r6, [sp, #0]
 800bdde:	2201      	movs	r2, #1
 800bde0:	2106      	movs	r1, #6
 800bde2:	4620      	mov	r0, r4
 800bde4:	9303      	str	r3, [sp, #12]
 800bde6:	f7ff fdb3 	bl	800b950 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800bdea:	2800      	cmp	r0, #0
 800bdec:	d1ee      	bne.n	800bdcc <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800bdee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bdf0:	f895 1020 	ldrb.w	r1, [r5, #32]
 800bdf4:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800bdf6:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800bdf8:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800bdfa:	3201      	adds	r2, #1
 800bdfc:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800bdfe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800be00:	3a01      	subs	r2, #1
 800be02:	63a2      	str	r2, [r4, #56]	; 0x38
 800be04:	e7d3      	b.n	800bdae <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800be06:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800be08:	f043 0308 	orr.w	r3, r3, #8
 800be0c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800be0e:	e7e0      	b.n	800bdd2 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800be10:	2002      	movs	r0, #2
 800be12:	e7de      	b.n	800bdd2 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800be14:	2002      	movs	r0, #2
 800be16:	e7df      	b.n	800bdd8 <HAL_QSPI_Receive+0x84>

0800be18 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800be18:	4913      	ldr	r1, [pc, #76]	; (800be68 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800be1a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800be1c:	688b      	ldr	r3, [r1, #8]
 800be1e:	f003 030c 	and.w	r3, r3, #12
 800be22:	2b04      	cmp	r3, #4
 800be24:	d01c      	beq.n	800be60 <HAL_RCC_GetSysClockFreq+0x48>
 800be26:	2b08      	cmp	r3, #8
 800be28:	d11c      	bne.n	800be64 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800be2a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800be2c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be2e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800be30:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be34:	bf14      	ite	ne
 800be36:	480d      	ldrne	r0, [pc, #52]	; (800be6c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be38:	480d      	ldreq	r0, [pc, #52]	; (800be70 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be3a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800be3e:	bf18      	it	ne
 800be40:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800be42:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be46:	fba1 0100 	umull	r0, r1, r1, r0
 800be4a:	f7f4 fa3b 	bl	80002c4 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800be4e:	4b06      	ldr	r3, [pc, #24]	; (800be68 <HAL_RCC_GetSysClockFreq+0x50>)
 800be50:	685b      	ldr	r3, [r3, #4]
 800be52:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800be56:	3301      	adds	r3, #1
 800be58:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800be5a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800be5e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800be60:	4802      	ldr	r0, [pc, #8]	; (800be6c <HAL_RCC_GetSysClockFreq+0x54>)
 800be62:	e7fc      	b.n	800be5e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800be64:	4802      	ldr	r0, [pc, #8]	; (800be70 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800be66:	e7fa      	b.n	800be5e <HAL_RCC_GetSysClockFreq+0x46>
 800be68:	40023800 	.word	0x40023800
 800be6c:	007a1200 	.word	0x007a1200
 800be70:	00f42400 	.word	0x00f42400

0800be74 <HAL_RCC_ClockConfig>:
{
 800be74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be78:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800be7a:	4604      	mov	r4, r0
 800be7c:	b910      	cbnz	r0, 800be84 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800be7e:	2001      	movs	r0, #1
}
 800be80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800be84:	4b44      	ldr	r3, [pc, #272]	; (800bf98 <HAL_RCC_ClockConfig+0x124>)
 800be86:	681a      	ldr	r2, [r3, #0]
 800be88:	f002 020f 	and.w	r2, r2, #15
 800be8c:	428a      	cmp	r2, r1
 800be8e:	d328      	bcc.n	800bee2 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800be90:	6822      	ldr	r2, [r4, #0]
 800be92:	0797      	lsls	r7, r2, #30
 800be94:	d42d      	bmi.n	800bef2 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800be96:	07d0      	lsls	r0, r2, #31
 800be98:	d441      	bmi.n	800bf1e <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800be9a:	4b3f      	ldr	r3, [pc, #252]	; (800bf98 <HAL_RCC_ClockConfig+0x124>)
 800be9c:	681a      	ldr	r2, [r3, #0]
 800be9e:	f002 020f 	and.w	r2, r2, #15
 800bea2:	42aa      	cmp	r2, r5
 800bea4:	d866      	bhi.n	800bf74 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bea6:	6822      	ldr	r2, [r4, #0]
 800bea8:	0751      	lsls	r1, r2, #29
 800beaa:	d46c      	bmi.n	800bf86 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800beac:	0713      	lsls	r3, r2, #28
 800beae:	d507      	bpl.n	800bec0 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800beb0:	4a3a      	ldr	r2, [pc, #232]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800beb2:	6921      	ldr	r1, [r4, #16]
 800beb4:	6893      	ldr	r3, [r2, #8]
 800beb6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800beba:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800bebe:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bec0:	f7ff ffaa 	bl	800be18 <HAL_RCC_GetSysClockFreq>
 800bec4:	4b35      	ldr	r3, [pc, #212]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800bec6:	4a36      	ldr	r2, [pc, #216]	; (800bfa0 <HAL_RCC_ClockConfig+0x12c>)
 800bec8:	689b      	ldr	r3, [r3, #8]
 800beca:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800bece:	5cd3      	ldrb	r3, [r2, r3]
 800bed0:	40d8      	lsrs	r0, r3
 800bed2:	4b34      	ldr	r3, [pc, #208]	; (800bfa4 <HAL_RCC_ClockConfig+0x130>)
 800bed4:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800bed6:	4b34      	ldr	r3, [pc, #208]	; (800bfa8 <HAL_RCC_ClockConfig+0x134>)
 800bed8:	6818      	ldr	r0, [r3, #0]
 800beda:	f7f5 ffc1 	bl	8001e60 <HAL_InitTick>
  return HAL_OK;
 800bede:	2000      	movs	r0, #0
 800bee0:	e7ce      	b.n	800be80 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bee2:	b2ca      	uxtb	r2, r1
 800bee4:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bee6:	681b      	ldr	r3, [r3, #0]
 800bee8:	f003 030f 	and.w	r3, r3, #15
 800beec:	428b      	cmp	r3, r1
 800beee:	d1c6      	bne.n	800be7e <HAL_RCC_ClockConfig+0xa>
 800bef0:	e7ce      	b.n	800be90 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bef2:	4b2a      	ldr	r3, [pc, #168]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800bef4:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800bef8:	bf1e      	ittt	ne
 800befa:	6899      	ldrne	r1, [r3, #8]
 800befc:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800bf00:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bf02:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800bf04:	bf42      	ittt	mi
 800bf06:	6899      	ldrmi	r1, [r3, #8]
 800bf08:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800bf0c:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800bf0e:	4923      	ldr	r1, [pc, #140]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800bf10:	68a0      	ldr	r0, [r4, #8]
 800bf12:	688b      	ldr	r3, [r1, #8]
 800bf14:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bf18:	4303      	orrs	r3, r0
 800bf1a:	608b      	str	r3, [r1, #8]
 800bf1c:	e7bb      	b.n	800be96 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800bf1e:	6862      	ldr	r2, [r4, #4]
 800bf20:	4b1e      	ldr	r3, [pc, #120]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800bf22:	2a01      	cmp	r2, #1
 800bf24:	d11c      	bne.n	800bf60 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bf26:	681b      	ldr	r3, [r3, #0]
 800bf28:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf2c:	d0a7      	beq.n	800be7e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800bf2e:	4e1b      	ldr	r6, [pc, #108]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800bf30:	68b3      	ldr	r3, [r6, #8]
 800bf32:	f023 0303 	bic.w	r3, r3, #3
 800bf36:	4313      	orrs	r3, r2
 800bf38:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800bf3a:	f7fd fe27 	bl	8009b8c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bf3e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800bf42:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bf44:	68b3      	ldr	r3, [r6, #8]
 800bf46:	6862      	ldr	r2, [r4, #4]
 800bf48:	f003 030c 	and.w	r3, r3, #12
 800bf4c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800bf50:	d0a3      	beq.n	800be9a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bf52:	f7fd fe1b 	bl	8009b8c <HAL_GetTick>
 800bf56:	1bc0      	subs	r0, r0, r7
 800bf58:	4540      	cmp	r0, r8
 800bf5a:	d9f3      	bls.n	800bf44 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800bf5c:	2003      	movs	r0, #3
 800bf5e:	e78f      	b.n	800be80 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bf60:	1e91      	subs	r1, r2, #2
 800bf62:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bf64:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bf66:	d802      	bhi.n	800bf6e <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bf68:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800bf6c:	e7de      	b.n	800bf2c <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf6e:	f013 0f02 	tst.w	r3, #2
 800bf72:	e7db      	b.n	800bf2c <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bf74:	b2ea      	uxtb	r2, r5
 800bf76:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bf78:	681b      	ldr	r3, [r3, #0]
 800bf7a:	f003 030f 	and.w	r3, r3, #15
 800bf7e:	42ab      	cmp	r3, r5
 800bf80:	f47f af7d 	bne.w	800be7e <HAL_RCC_ClockConfig+0xa>
 800bf84:	e78f      	b.n	800bea6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800bf86:	4905      	ldr	r1, [pc, #20]	; (800bf9c <HAL_RCC_ClockConfig+0x128>)
 800bf88:	68e0      	ldr	r0, [r4, #12]
 800bf8a:	688b      	ldr	r3, [r1, #8]
 800bf8c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800bf90:	4303      	orrs	r3, r0
 800bf92:	608b      	str	r3, [r1, #8]
 800bf94:	e78a      	b.n	800beac <HAL_RCC_ClockConfig+0x38>
 800bf96:	bf00      	nop
 800bf98:	40023c00 	.word	0x40023c00
 800bf9c:	40023800 	.word	0x40023800
 800bfa0:	0802721d 	.word	0x0802721d
 800bfa4:	20000054 	.word	0x20000054
 800bfa8:	2000005c 	.word	0x2000005c

0800bfac <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800bfac:	4b04      	ldr	r3, [pc, #16]	; (800bfc0 <HAL_RCC_GetPCLK1Freq+0x14>)
 800bfae:	4a05      	ldr	r2, [pc, #20]	; (800bfc4 <HAL_RCC_GetPCLK1Freq+0x18>)
 800bfb0:	689b      	ldr	r3, [r3, #8]
 800bfb2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800bfb6:	5cd3      	ldrb	r3, [r2, r3]
 800bfb8:	4a03      	ldr	r2, [pc, #12]	; (800bfc8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800bfba:	6810      	ldr	r0, [r2, #0]
}
 800bfbc:	40d8      	lsrs	r0, r3
 800bfbe:	4770      	bx	lr
 800bfc0:	40023800 	.word	0x40023800
 800bfc4:	0802722d 	.word	0x0802722d
 800bfc8:	20000054 	.word	0x20000054

0800bfcc <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800bfcc:	230f      	movs	r3, #15
 800bfce:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bfd0:	4b0b      	ldr	r3, [pc, #44]	; (800c000 <HAL_RCC_GetClockConfig+0x34>)
 800bfd2:	689a      	ldr	r2, [r3, #8]
 800bfd4:	f002 0203 	and.w	r2, r2, #3
 800bfd8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800bfda:	689a      	ldr	r2, [r3, #8]
 800bfdc:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800bfe0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800bfe2:	689a      	ldr	r2, [r3, #8]
 800bfe4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800bfe8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bfea:	689b      	ldr	r3, [r3, #8]
 800bfec:	08db      	lsrs	r3, r3, #3
 800bfee:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800bff2:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bff4:	4b03      	ldr	r3, [pc, #12]	; (800c004 <HAL_RCC_GetClockConfig+0x38>)
 800bff6:	681b      	ldr	r3, [r3, #0]
 800bff8:	f003 030f 	and.w	r3, r3, #15
 800bffc:	600b      	str	r3, [r1, #0]
}
 800bffe:	4770      	bx	lr
 800c000:	40023800 	.word	0x40023800
 800c004:	40023c00 	.word	0x40023c00

0800c008 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c008:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c00a:	6802      	ldr	r2, [r0, #0]
{
 800c00c:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c00e:	0610      	lsls	r0, r2, #24
 800c010:	d508      	bpl.n	800c024 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800c012:	49a8      	ldr	r1, [pc, #672]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c014:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c016:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c01a:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800c01e:	4303      	orrs	r3, r0
 800c020:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800c024:	05d1      	lsls	r1, r2, #23
 800c026:	d508      	bpl.n	800c03a <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800c028:	49a2      	ldr	r1, [pc, #648]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c02a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c02c:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c030:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c034:	4303      	orrs	r3, r0
 800c036:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c03a:	f012 0f43 	tst.w	r2, #67	; 0x43
 800c03e:	d172      	bne.n	800c126 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c040:	6823      	ldr	r3, [r4, #0]
 800c042:	f013 0f0c 	tst.w	r3, #12
 800c046:	f000 80bf 	beq.w	800c1c8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800c04a:	4d9b      	ldr	r5, [pc, #620]	; (800c2b8 <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c04c:	4e99      	ldr	r6, [pc, #612]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c04e:	2300      	movs	r3, #0
 800c050:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c052:	f7fd fd9b 	bl	8009b8c <HAL_GetTick>
 800c056:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c058:	6833      	ldr	r3, [r6, #0]
 800c05a:	009a      	lsls	r2, r3, #2
 800c05c:	f100 80f9 	bmi.w	800c252 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c060:	6822      	ldr	r2, [r4, #0]
 800c062:	0753      	lsls	r3, r2, #29
 800c064:	d51a      	bpl.n	800c09c <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c066:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c06a:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800c06e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c072:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c076:	430b      	orrs	r3, r1
 800c078:	6921      	ldr	r1, [r4, #16]
 800c07a:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800c07e:	69a1      	ldr	r1, [r4, #24]
 800c080:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c084:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c088:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c08c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c08e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c092:	3901      	subs	r1, #1
 800c094:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c098:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c09c:	0717      	lsls	r7, r2, #28
 800c09e:	d519      	bpl.n	800c0d4 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c0a0:	4984      	ldr	r1, [pc, #528]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c0a2:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c0a6:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800c0aa:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c0ae:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800c0b2:	4303      	orrs	r3, r0
 800c0b4:	6920      	ldr	r0, [r4, #16]
 800c0b6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c0ba:	69e0      	ldr	r0, [r4, #28]
 800c0bc:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800c0c0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c0c4:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c0c8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c0ca:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c0ce:	4303      	orrs	r3, r0
 800c0d0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800c0d4:	0616      	lsls	r6, r2, #24
 800c0d6:	d517      	bpl.n	800c108 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800c0d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c0da:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c0de:	d113      	bne.n	800c108 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c0e0:	4974      	ldr	r1, [pc, #464]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c0e2:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c0e6:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800c0ea:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800c0ee:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c0f2:	4313      	orrs	r3, r2
 800c0f4:	6922      	ldr	r2, [r4, #16]
 800c0f6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c0fa:	6962      	ldr	r2, [r4, #20]
 800c0fc:	0852      	lsrs	r2, r2, #1
 800c0fe:	3a01      	subs	r2, #1
 800c100:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c104:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800c108:	2301      	movs	r3, #1
 800c10a:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800c10c:	f7fd fd3e 	bl	8009b8c <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c110:	4e68      	ldr	r6, [pc, #416]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800c112:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c114:	6833      	ldr	r3, [r6, #0]
 800c116:	0098      	lsls	r0, r3, #2
 800c118:	d458      	bmi.n	800c1cc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c11a:	f7fd fd37 	bl	8009b8c <HAL_GetTick>
 800c11e:	1b40      	subs	r0, r0, r5
 800c120:	2802      	cmp	r0, #2
 800c122:	d9f7      	bls.n	800c114 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800c124:	e04d      	b.n	800c1c2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800c126:	4d65      	ldr	r5, [pc, #404]	; (800c2bc <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c128:	4f62      	ldr	r7, [pc, #392]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c12a:	2300      	movs	r3, #0
 800c12c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c12e:	f7fd fd2d 	bl	8009b8c <HAL_GetTick>
 800c132:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c134:	683b      	ldr	r3, [r7, #0]
 800c136:	011b      	lsls	r3, r3, #4
 800c138:	d43e      	bmi.n	800c1b8 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c13a:	6821      	ldr	r1, [r4, #0]
 800c13c:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c13e:	bf41      	itttt	mi
 800c140:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800c144:	071b      	lslmi	r3, r3, #28
 800c146:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800c14a:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c14e:	078a      	lsls	r2, r1, #30
 800c150:	d515      	bpl.n	800c17e <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c152:	4a58      	ldr	r2, [pc, #352]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c154:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c156:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c15a:	6866      	ldr	r6, [r4, #4]
 800c15c:	061b      	lsls	r3, r3, #24
 800c15e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c162:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800c166:	4303      	orrs	r3, r0
 800c168:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c16c:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800c170:	6a23      	ldr	r3, [r4, #32]
 800c172:	f020 001f 	bic.w	r0, r0, #31
 800c176:	3b01      	subs	r3, #1
 800c178:	4303      	orrs	r3, r0
 800c17a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c17e:	064b      	lsls	r3, r1, #25
 800c180:	d50a      	bpl.n	800c198 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c182:	68e3      	ldr	r3, [r4, #12]
 800c184:	6862      	ldr	r2, [r4, #4]
 800c186:	061b      	lsls	r3, r3, #24
 800c188:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c18c:	68a2      	ldr	r2, [r4, #8]
 800c18e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c192:	4a48      	ldr	r2, [pc, #288]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c194:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c198:	2301      	movs	r3, #1
 800c19a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c19c:	f7fd fcf6 	bl	8009b8c <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c1a0:	4e44      	ldr	r6, [pc, #272]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800c1a2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c1a4:	6833      	ldr	r3, [r6, #0]
 800c1a6:	011f      	lsls	r7, r3, #4
 800c1a8:	f53f af4a 	bmi.w	800c040 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c1ac:	f7fd fcee 	bl	8009b8c <HAL_GetTick>
 800c1b0:	1b40      	subs	r0, r0, r5
 800c1b2:	2802      	cmp	r0, #2
 800c1b4:	d9f6      	bls.n	800c1a4 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800c1b6:	e004      	b.n	800c1c2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c1b8:	f7fd fce8 	bl	8009b8c <HAL_GetTick>
 800c1bc:	1b80      	subs	r0, r0, r6
 800c1be:	2802      	cmp	r0, #2
 800c1c0:	d9b8      	bls.n	800c134 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800c1c2:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800c1c4:	b003      	add	sp, #12
 800c1c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800c1c8:	0618      	lsls	r0, r3, #24
 800c1ca:	d43d      	bmi.n	800c248 <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c1cc:	6823      	ldr	r3, [r4, #0]
 800c1ce:	0699      	lsls	r1, r3, #26
 800c1d0:	d530      	bpl.n	800c234 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 800c1d2:	2300      	movs	r3, #0
 800c1d4:	9301      	str	r3, [sp, #4]
 800c1d6:	4b37      	ldr	r3, [pc, #220]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 800c1d8:	4d39      	ldr	r5, [pc, #228]	; (800c2c0 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c1da:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c1dc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c1e0:	641a      	str	r2, [r3, #64]	; 0x40
 800c1e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c1e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c1e8:	9301      	str	r3, [sp, #4]
 800c1ea:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c1ec:	682b      	ldr	r3, [r5, #0]
 800c1ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c1f2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c1f4:	f7fd fcca 	bl	8009b8c <HAL_GetTick>
 800c1f8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c1fa:	682b      	ldr	r3, [r5, #0]
 800c1fc:	05d9      	lsls	r1, r3, #23
 800c1fe:	d52f      	bpl.n	800c260 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c200:	4d2c      	ldr	r5, [pc, #176]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c202:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c204:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800c208:	d130      	bne.n	800c26c <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c20a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c20c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c210:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c214:	4a27      	ldr	r2, [pc, #156]	; (800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c216:	d148      	bne.n	800c2aa <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800c218:	6891      	ldr	r1, [r2, #8]
 800c21a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800c21e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c222:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800c226:	4301      	orrs	r1, r0
 800c228:	6091      	str	r1, [r2, #8]
 800c22a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c22c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c230:	430b      	orrs	r3, r1
 800c232:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c234:	6820      	ldr	r0, [r4, #0]
 800c236:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c23a:	bf1f      	itttt	ne
 800c23c:	4b21      	ldrne	r3, [pc, #132]	; (800c2c4 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800c23e:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800c242:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 800c244:	2000      	movne	r0, #0
 800c246:	e7bd      	b.n	800c1c4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800c248:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c24a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c24e:	d1bd      	bne.n	800c1cc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 800c250:	e6fb      	b.n	800c04a <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c252:	f7fd fc9b 	bl	8009b8c <HAL_GetTick>
 800c256:	1bc0      	subs	r0, r0, r7
 800c258:	2802      	cmp	r0, #2
 800c25a:	f67f aefd 	bls.w	800c058 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800c25e:	e7b0      	b.n	800c1c2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c260:	f7fd fc94 	bl	8009b8c <HAL_GetTick>
 800c264:	1b80      	subs	r0, r0, r6
 800c266:	2802      	cmp	r0, #2
 800c268:	d9c7      	bls.n	800c1fa <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 800c26a:	e7aa      	b.n	800c1c2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c26c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c26e:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800c272:	4293      	cmp	r3, r2
 800c274:	d0c9      	beq.n	800c20a <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c276:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c278:	4a13      	ldr	r2, [pc, #76]	; (800c2c8 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800c27a:	2101      	movs	r1, #1
 800c27c:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c27e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c282:	2100      	movs	r1, #0
 800c284:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800c286:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c288:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c28a:	07da      	lsls	r2, r3, #31
 800c28c:	d5bd      	bpl.n	800c20a <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 800c28e:	f7fd fc7d 	bl	8009b8c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c292:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c296:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c298:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c29a:	079b      	lsls	r3, r3, #30
 800c29c:	d4b5      	bmi.n	800c20a <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c29e:	f7fd fc75 	bl	8009b8c <HAL_GetTick>
 800c2a2:	1b80      	subs	r0, r0, r6
 800c2a4:	42b8      	cmp	r0, r7
 800c2a6:	d9f7      	bls.n	800c298 <HAL_RCCEx_PeriphCLKConfig+0x290>
 800c2a8:	e78b      	b.n	800c1c2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c2aa:	6891      	ldr	r1, [r2, #8]
 800c2ac:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c2b0:	e7ba      	b.n	800c228 <HAL_RCCEx_PeriphCLKConfig+0x220>
 800c2b2:	bf00      	nop
 800c2b4:	40023800 	.word	0x40023800
 800c2b8:	42470070 	.word	0x42470070
 800c2bc:	42470068 	.word	0x42470068
 800c2c0:	40007000 	.word	0x40007000
 800c2c4:	424711e0 	.word	0x424711e0
 800c2c8:	42470e40 	.word	0x42470e40

0800c2cc <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800c2cc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c2d0:	4604      	mov	r4, r0
 800c2d2:	b340      	cbz	r0, 800c326 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c2d4:	6803      	ldr	r3, [r0, #0]
 800c2d6:	07dd      	lsls	r5, r3, #31
 800c2d8:	d410      	bmi.n	800c2fc <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c2da:	6823      	ldr	r3, [r4, #0]
 800c2dc:	0798      	lsls	r0, r3, #30
 800c2de:	d45e      	bmi.n	800c39e <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c2e0:	6823      	ldr	r3, [r4, #0]
 800c2e2:	071a      	lsls	r2, r3, #28
 800c2e4:	f100 80a0 	bmi.w	800c428 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c2e8:	6823      	ldr	r3, [r4, #0]
 800c2ea:	075b      	lsls	r3, r3, #29
 800c2ec:	f100 80be 	bmi.w	800c46c <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c2f0:	69a0      	ldr	r0, [r4, #24]
 800c2f2:	2800      	cmp	r0, #0
 800c2f4:	f040 811f 	bne.w	800c536 <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c2f8:	2000      	movs	r0, #0
 800c2fa:	e02b      	b.n	800c354 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c2fc:	4ba7      	ldr	r3, [pc, #668]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c2fe:	689a      	ldr	r2, [r3, #8]
 800c300:	f002 020c 	and.w	r2, r2, #12
 800c304:	2a04      	cmp	r2, #4
 800c306:	d007      	beq.n	800c318 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c308:	689a      	ldr	r2, [r3, #8]
 800c30a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c30e:	2a08      	cmp	r2, #8
 800c310:	d10b      	bne.n	800c32a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c312:	685a      	ldr	r2, [r3, #4]
 800c314:	0251      	lsls	r1, r2, #9
 800c316:	d508      	bpl.n	800c32a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c318:	4ba0      	ldr	r3, [pc, #640]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c31a:	681b      	ldr	r3, [r3, #0]
 800c31c:	039a      	lsls	r2, r3, #14
 800c31e:	d5dc      	bpl.n	800c2da <HAL_RCC_OscConfig+0xe>
 800c320:	6863      	ldr	r3, [r4, #4]
 800c322:	2b00      	cmp	r3, #0
 800c324:	d1d9      	bne.n	800c2da <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800c326:	2001      	movs	r0, #1
 800c328:	e014      	b.n	800c354 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c32a:	6862      	ldr	r2, [r4, #4]
 800c32c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800c330:	d113      	bne.n	800c35a <HAL_RCC_OscConfig+0x8e>
 800c332:	681a      	ldr	r2, [r3, #0]
 800c334:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c338:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c33a:	f7fd fc27 	bl	8009b8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c33e:	4e97      	ldr	r6, [pc, #604]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800c340:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c342:	6833      	ldr	r3, [r6, #0]
 800c344:	039b      	lsls	r3, r3, #14
 800c346:	d4c8      	bmi.n	800c2da <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c348:	f7fd fc20 	bl	8009b8c <HAL_GetTick>
 800c34c:	1b40      	subs	r0, r0, r5
 800c34e:	2864      	cmp	r0, #100	; 0x64
 800c350:	d9f7      	bls.n	800c342 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800c352:	2003      	movs	r0, #3
}
 800c354:	b002      	add	sp, #8
 800c356:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c35a:	4d90      	ldr	r5, [pc, #576]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c35c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800c360:	682b      	ldr	r3, [r5, #0]
 800c362:	d107      	bne.n	800c374 <HAL_RCC_OscConfig+0xa8>
 800c364:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800c368:	602b      	str	r3, [r5, #0]
 800c36a:	682b      	ldr	r3, [r5, #0]
 800c36c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c370:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c372:	e7e2      	b.n	800c33a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c374:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c378:	602b      	str	r3, [r5, #0]
 800c37a:	682b      	ldr	r3, [r5, #0]
 800c37c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c380:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c382:	2a00      	cmp	r2, #0
 800c384:	d1d9      	bne.n	800c33a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800c386:	f7fd fc01 	bl	8009b8c <HAL_GetTick>
 800c38a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c38c:	682b      	ldr	r3, [r5, #0]
 800c38e:	039f      	lsls	r7, r3, #14
 800c390:	d5a3      	bpl.n	800c2da <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c392:	f7fd fbfb 	bl	8009b8c <HAL_GetTick>
 800c396:	1b80      	subs	r0, r0, r6
 800c398:	2864      	cmp	r0, #100	; 0x64
 800c39a:	d9f7      	bls.n	800c38c <HAL_RCC_OscConfig+0xc0>
 800c39c:	e7d9      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c39e:	4b7f      	ldr	r3, [pc, #508]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c3a0:	689a      	ldr	r2, [r3, #8]
 800c3a2:	f012 0f0c 	tst.w	r2, #12
 800c3a6:	d007      	beq.n	800c3b8 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c3a8:	689a      	ldr	r2, [r3, #8]
 800c3aa:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c3ae:	2a08      	cmp	r2, #8
 800c3b0:	d111      	bne.n	800c3d6 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c3b2:	685b      	ldr	r3, [r3, #4]
 800c3b4:	025e      	lsls	r6, r3, #9
 800c3b6:	d40e      	bmi.n	800c3d6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c3b8:	4b78      	ldr	r3, [pc, #480]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c3ba:	681a      	ldr	r2, [r3, #0]
 800c3bc:	0795      	lsls	r5, r2, #30
 800c3be:	d502      	bpl.n	800c3c6 <HAL_RCC_OscConfig+0xfa>
 800c3c0:	68e2      	ldr	r2, [r4, #12]
 800c3c2:	2a01      	cmp	r2, #1
 800c3c4:	d1af      	bne.n	800c326 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c3c6:	681a      	ldr	r2, [r3, #0]
 800c3c8:	6921      	ldr	r1, [r4, #16]
 800c3ca:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c3ce:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800c3d2:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c3d4:	e784      	b.n	800c2e0 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c3d6:	68e2      	ldr	r2, [r4, #12]
 800c3d8:	4b71      	ldr	r3, [pc, #452]	; (800c5a0 <HAL_RCC_OscConfig+0x2d4>)
 800c3da:	b1b2      	cbz	r2, 800c40a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800c3dc:	2201      	movs	r2, #1
 800c3de:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c3e0:	f7fd fbd4 	bl	8009b8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c3e4:	4d6d      	ldr	r5, [pc, #436]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800c3e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c3e8:	682b      	ldr	r3, [r5, #0]
 800c3ea:	0798      	lsls	r0, r3, #30
 800c3ec:	d507      	bpl.n	800c3fe <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c3ee:	682b      	ldr	r3, [r5, #0]
 800c3f0:	6922      	ldr	r2, [r4, #16]
 800c3f2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c3f6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c3fa:	602b      	str	r3, [r5, #0]
 800c3fc:	e770      	b.n	800c2e0 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c3fe:	f7fd fbc5 	bl	8009b8c <HAL_GetTick>
 800c402:	1b80      	subs	r0, r0, r6
 800c404:	2802      	cmp	r0, #2
 800c406:	d9ef      	bls.n	800c3e8 <HAL_RCC_OscConfig+0x11c>
 800c408:	e7a3      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800c40a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c40c:	f7fd fbbe 	bl	8009b8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c410:	4e62      	ldr	r6, [pc, #392]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800c412:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c414:	6833      	ldr	r3, [r6, #0]
 800c416:	0799      	lsls	r1, r3, #30
 800c418:	f57f af62 	bpl.w	800c2e0 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c41c:	f7fd fbb6 	bl	8009b8c <HAL_GetTick>
 800c420:	1b40      	subs	r0, r0, r5
 800c422:	2802      	cmp	r0, #2
 800c424:	d9f6      	bls.n	800c414 <HAL_RCC_OscConfig+0x148>
 800c426:	e794      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c428:	6962      	ldr	r2, [r4, #20]
 800c42a:	4b5e      	ldr	r3, [pc, #376]	; (800c5a4 <HAL_RCC_OscConfig+0x2d8>)
 800c42c:	b17a      	cbz	r2, 800c44e <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 800c42e:	2201      	movs	r2, #1
 800c430:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800c432:	f7fd fbab 	bl	8009b8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c436:	4e59      	ldr	r6, [pc, #356]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800c438:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c43a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c43c:	079f      	lsls	r7, r3, #30
 800c43e:	f53f af53 	bmi.w	800c2e8 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c442:	f7fd fba3 	bl	8009b8c <HAL_GetTick>
 800c446:	1b40      	subs	r0, r0, r5
 800c448:	2802      	cmp	r0, #2
 800c44a:	d9f6      	bls.n	800c43a <HAL_RCC_OscConfig+0x16e>
 800c44c:	e781      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800c44e:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800c450:	f7fd fb9c 	bl	8009b8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c454:	4e51      	ldr	r6, [pc, #324]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800c456:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c458:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c45a:	0798      	lsls	r0, r3, #30
 800c45c:	f57f af44 	bpl.w	800c2e8 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c460:	f7fd fb94 	bl	8009b8c <HAL_GetTick>
 800c464:	1b40      	subs	r0, r0, r5
 800c466:	2802      	cmp	r0, #2
 800c468:	d9f6      	bls.n	800c458 <HAL_RCC_OscConfig+0x18c>
 800c46a:	e772      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c46c:	4b4b      	ldr	r3, [pc, #300]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c46e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c470:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800c474:	d128      	bne.n	800c4c8 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c476:	9201      	str	r2, [sp, #4]
 800c478:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c47a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c47e:	641a      	str	r2, [r3, #64]	; 0x40
 800c480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c482:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c486:	9301      	str	r3, [sp, #4]
 800c488:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c48a:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c48c:	4d46      	ldr	r5, [pc, #280]	; (800c5a8 <HAL_RCC_OscConfig+0x2dc>)
 800c48e:	682b      	ldr	r3, [r5, #0]
 800c490:	05d9      	lsls	r1, r3, #23
 800c492:	d51b      	bpl.n	800c4cc <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c494:	68a3      	ldr	r3, [r4, #8]
 800c496:	4d41      	ldr	r5, [pc, #260]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c498:	2b01      	cmp	r3, #1
 800c49a:	d127      	bne.n	800c4ec <HAL_RCC_OscConfig+0x220>
 800c49c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c49e:	f043 0301 	orr.w	r3, r3, #1
 800c4a2:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c4a4:	f7fd fb72 	bl	8009b8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c4a8:	4e3c      	ldr	r6, [pc, #240]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800c4aa:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c4ac:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c4b0:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c4b2:	079b      	lsls	r3, r3, #30
 800c4b4:	d539      	bpl.n	800c52a <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 800c4b6:	2f00      	cmp	r7, #0
 800c4b8:	f43f af1a 	beq.w	800c2f0 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c4bc:	4a37      	ldr	r2, [pc, #220]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c4be:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c4c0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c4c4:	6413      	str	r3, [r2, #64]	; 0x40
 800c4c6:	e713      	b.n	800c2f0 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800c4c8:	2700      	movs	r7, #0
 800c4ca:	e7df      	b.n	800c48c <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c4cc:	682b      	ldr	r3, [r5, #0]
 800c4ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c4d2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800c4d4:	f7fd fb5a 	bl	8009b8c <HAL_GetTick>
 800c4d8:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c4da:	682b      	ldr	r3, [r5, #0]
 800c4dc:	05da      	lsls	r2, r3, #23
 800c4de:	d4d9      	bmi.n	800c494 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c4e0:	f7fd fb54 	bl	8009b8c <HAL_GetTick>
 800c4e4:	1b80      	subs	r0, r0, r6
 800c4e6:	2802      	cmp	r0, #2
 800c4e8:	d9f7      	bls.n	800c4da <HAL_RCC_OscConfig+0x20e>
 800c4ea:	e732      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c4ec:	2b05      	cmp	r3, #5
 800c4ee:	d104      	bne.n	800c4fa <HAL_RCC_OscConfig+0x22e>
 800c4f0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c4f2:	f043 0304 	orr.w	r3, r3, #4
 800c4f6:	672b      	str	r3, [r5, #112]	; 0x70
 800c4f8:	e7d0      	b.n	800c49c <HAL_RCC_OscConfig+0x1d0>
 800c4fa:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c4fc:	f022 0201 	bic.w	r2, r2, #1
 800c500:	672a      	str	r2, [r5, #112]	; 0x70
 800c502:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c504:	f022 0204 	bic.w	r2, r2, #4
 800c508:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c50a:	2b00      	cmp	r3, #0
 800c50c:	d1ca      	bne.n	800c4a4 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 800c50e:	f7fd fb3d 	bl	8009b8c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c512:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c516:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c518:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c51a:	0798      	lsls	r0, r3, #30
 800c51c:	d5cb      	bpl.n	800c4b6 <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c51e:	f7fd fb35 	bl	8009b8c <HAL_GetTick>
 800c522:	1b80      	subs	r0, r0, r6
 800c524:	4540      	cmp	r0, r8
 800c526:	d9f7      	bls.n	800c518 <HAL_RCC_OscConfig+0x24c>
 800c528:	e713      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c52a:	f7fd fb2f 	bl	8009b8c <HAL_GetTick>
 800c52e:	1b40      	subs	r0, r0, r5
 800c530:	4540      	cmp	r0, r8
 800c532:	d9bd      	bls.n	800c4b0 <HAL_RCC_OscConfig+0x1e4>
 800c534:	e70d      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c536:	4d19      	ldr	r5, [pc, #100]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
 800c538:	68ab      	ldr	r3, [r5, #8]
 800c53a:	f003 030c 	and.w	r3, r3, #12
 800c53e:	2b08      	cmp	r3, #8
 800c540:	d049      	beq.n	800c5d6 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c542:	4e1a      	ldr	r6, [pc, #104]	; (800c5ac <HAL_RCC_OscConfig+0x2e0>)
 800c544:	2300      	movs	r3, #0
 800c546:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c548:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c54a:	d137      	bne.n	800c5bc <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800c54c:	f7fd fb1e 	bl	8009b8c <HAL_GetTick>
 800c550:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c552:	682b      	ldr	r3, [r5, #0]
 800c554:	0199      	lsls	r1, r3, #6
 800c556:	d42b      	bmi.n	800c5b0 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c558:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800c55c:	4313      	orrs	r3, r2
 800c55e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c560:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c564:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c566:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c56a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c56c:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c570:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c572:	0852      	lsrs	r2, r2, #1
 800c574:	3a01      	subs	r2, #1
 800c576:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c57a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c57c:	2301      	movs	r3, #1
 800c57e:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800c580:	f7fd fb04 	bl	8009b8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c584:	4d05      	ldr	r5, [pc, #20]	; (800c59c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800c586:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c588:	682b      	ldr	r3, [r5, #0]
 800c58a:	019a      	lsls	r2, r3, #6
 800c58c:	f53f aeb4 	bmi.w	800c2f8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c590:	f7fd fafc 	bl	8009b8c <HAL_GetTick>
 800c594:	1b00      	subs	r0, r0, r4
 800c596:	2802      	cmp	r0, #2
 800c598:	d9f6      	bls.n	800c588 <HAL_RCC_OscConfig+0x2bc>
 800c59a:	e6da      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
 800c59c:	40023800 	.word	0x40023800
 800c5a0:	42470000 	.word	0x42470000
 800c5a4:	42470e80 	.word	0x42470e80
 800c5a8:	40007000 	.word	0x40007000
 800c5ac:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c5b0:	f7fd faec 	bl	8009b8c <HAL_GetTick>
 800c5b4:	1bc0      	subs	r0, r0, r7
 800c5b6:	2802      	cmp	r0, #2
 800c5b8:	d9cb      	bls.n	800c552 <HAL_RCC_OscConfig+0x286>
 800c5ba:	e6ca      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800c5bc:	f7fd fae6 	bl	8009b8c <HAL_GetTick>
 800c5c0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c5c2:	682b      	ldr	r3, [r5, #0]
 800c5c4:	019b      	lsls	r3, r3, #6
 800c5c6:	f57f ae97 	bpl.w	800c2f8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c5ca:	f7fd fadf 	bl	8009b8c <HAL_GetTick>
 800c5ce:	1b00      	subs	r0, r0, r4
 800c5d0:	2802      	cmp	r0, #2
 800c5d2:	d9f6      	bls.n	800c5c2 <HAL_RCC_OscConfig+0x2f6>
 800c5d4:	e6bd      	b.n	800c352 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c5d6:	2801      	cmp	r0, #1
 800c5d8:	f43f aebc 	beq.w	800c354 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800c5dc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c5de:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c5e0:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c5e4:	4291      	cmp	r1, r2
 800c5e6:	f47f ae9e 	bne.w	800c326 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c5ea:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c5ec:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c5f0:	428a      	cmp	r2, r1
 800c5f2:	f47f ae98 	bne.w	800c326 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c5f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c5f8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c5fc:	401a      	ands	r2, r3
 800c5fe:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c602:	f47f ae90 	bne.w	800c326 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c606:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c608:	0852      	lsrs	r2, r2, #1
 800c60a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c60e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c610:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c614:	f47f ae87 	bne.w	800c326 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c618:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c61a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c61e:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800c622:	f47f ae80 	bne.w	800c326 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800c626:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c628:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c62c:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800c630:	f43f ae62 	beq.w	800c2f8 <HAL_RCC_OscConfig+0x2c>
 800c634:	e677      	b.n	800c326 <HAL_RCC_OscConfig+0x5a>
 800c636:	bf00      	nop

0800c638 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800c638:	b538      	push	{r3, r4, r5, lr}
 800c63a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800c63c:	4604      	mov	r4, r0
 800c63e:	b1c8      	cbz	r0, 800c674 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800c640:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c644:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c648:	b91b      	cbnz	r3, 800c652 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800c64a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800c64e:	f7f5 fb4f 	bl	8001cf0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c652:	2302      	movs	r3, #2
 800c654:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c658:	1d21      	adds	r1, r4, #4
 800c65a:	6820      	ldr	r0, [r4, #0]
 800c65c:	f000 f9b8 	bl	800c9d0 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800c660:	6862      	ldr	r2, [r4, #4]
 800c662:	6820      	ldr	r0, [r4, #0]
 800c664:	4629      	mov	r1, r5
 800c666:	f000 f9e9 	bl	800ca3c <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c66a:	2301      	movs	r3, #1
 800c66c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800c670:	2000      	movs	r0, #0
}
 800c672:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c674:	2001      	movs	r0, #1
 800c676:	e7fc      	b.n	800c672 <HAL_SDRAM_Init+0x3a>

0800c678 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800c678:	b510      	push	{r4, lr}
 800c67a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800c67c:	f7f5 fbae 	bl	8001ddc <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800c680:	e9d4 0100 	ldrd	r0, r1, [r4]
 800c684:	f000 fa16 	bl	800cab4 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800c688:	2000      	movs	r0, #0
 800c68a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800c68e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800c692:	bd10      	pop	{r4, pc}

0800c694 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c694:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c696:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c69a:	2b02      	cmp	r3, #2
{
 800c69c:	4604      	mov	r4, r0
 800c69e:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c6a0:	b2d8      	uxtb	r0, r3
 800c6a2:	d00d      	beq.n	800c6c0 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c6a4:	2302      	movs	r3, #2
 800c6a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c6aa:	6820      	ldr	r0, [r4, #0]
 800c6ac:	f000 fa11 	bl	800cad2 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c6b0:	682b      	ldr	r3, [r5, #0]
 800c6b2:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c6b4:	bf0c      	ite	eq
 800c6b6:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c6b8:	2301      	movne	r3, #1
 800c6ba:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800c6be:	2000      	movs	r0, #0
}
 800c6c0:	bd38      	pop	{r3, r4, r5, pc}

0800c6c2 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c6c2:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c6c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c6c8:	2b02      	cmp	r3, #2
{
 800c6ca:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c6cc:	b2d8      	uxtb	r0, r3
 800c6ce:	d009      	beq.n	800c6e4 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c6d0:	2302      	movs	r3, #2
 800c6d2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800c6d6:	6820      	ldr	r0, [r4, #0]
 800c6d8:	f000 fa22 	bl	800cb20 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c6dc:	2301      	movs	r3, #1
 800c6de:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800c6e2:	2000      	movs	r0, #0
}
 800c6e4:	bd10      	pop	{r4, pc}

0800c6e6 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800c6e6:	4770      	bx	lr

0800c6e8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800c6e8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c6ec:	2b01      	cmp	r3, #1
 800c6ee:	d130      	bne.n	800c752 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800c6f0:	2302      	movs	r3, #2
 800c6f2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c6f6:	6803      	ldr	r3, [r0, #0]
 800c6f8:	68da      	ldr	r2, [r3, #12]
 800c6fa:	f042 0201 	orr.w	r2, r2, #1
 800c6fe:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c700:	4a15      	ldr	r2, [pc, #84]	; (800c758 <HAL_TIM_Base_Start_IT+0x70>)
 800c702:	4293      	cmp	r3, r2
 800c704:	d01a      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c706:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c70a:	d017      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c70c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c710:	4293      	cmp	r3, r2
 800c712:	d013      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c714:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c718:	4293      	cmp	r3, r2
 800c71a:	d00f      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c71c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c720:	4293      	cmp	r3, r2
 800c722:	d00b      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c724:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c728:	4293      	cmp	r3, r2
 800c72a:	d007      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c72c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c730:	4293      	cmp	r3, r2
 800c732:	d003      	beq.n	800c73c <HAL_TIM_Base_Start_IT+0x54>
 800c734:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c738:	4293      	cmp	r3, r2
 800c73a:	d104      	bne.n	800c746 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c73c:	689a      	ldr	r2, [r3, #8]
 800c73e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c742:	2a06      	cmp	r2, #6
 800c744:	d003      	beq.n	800c74e <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800c746:	681a      	ldr	r2, [r3, #0]
 800c748:	f042 0201 	orr.w	r2, r2, #1
 800c74c:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800c74e:	2000      	movs	r0, #0
}
 800c750:	4770      	bx	lr
    return HAL_ERROR;
 800c752:	2001      	movs	r0, #1
 800c754:	4770      	bx	lr
 800c756:	bf00      	nop
 800c758:	40010000 	.word	0x40010000

0800c75c <HAL_TIM_OC_DelayElapsedCallback>:
 800c75c:	4770      	bx	lr

0800c75e <HAL_TIM_IC_CaptureCallback>:
 800c75e:	4770      	bx	lr

0800c760 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c760:	4770      	bx	lr

0800c762 <HAL_TIM_TriggerCallback>:
 800c762:	4770      	bx	lr

0800c764 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c764:	6803      	ldr	r3, [r0, #0]
 800c766:	691a      	ldr	r2, [r3, #16]
 800c768:	0791      	lsls	r1, r2, #30
{
 800c76a:	b510      	push	{r4, lr}
 800c76c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c76e:	d50e      	bpl.n	800c78e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c770:	68da      	ldr	r2, [r3, #12]
 800c772:	0792      	lsls	r2, r2, #30
 800c774:	d50b      	bpl.n	800c78e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c776:	f06f 0202 	mvn.w	r2, #2
 800c77a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c77c:	2201      	movs	r2, #1
 800c77e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c780:	699b      	ldr	r3, [r3, #24]
 800c782:	079b      	lsls	r3, r3, #30
 800c784:	d077      	beq.n	800c876 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800c786:	f7ff ffea 	bl	800c75e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c78a:	2300      	movs	r3, #0
 800c78c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c78e:	6823      	ldr	r3, [r4, #0]
 800c790:	691a      	ldr	r2, [r3, #16]
 800c792:	0750      	lsls	r0, r2, #29
 800c794:	d510      	bpl.n	800c7b8 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c796:	68da      	ldr	r2, [r3, #12]
 800c798:	0751      	lsls	r1, r2, #29
 800c79a:	d50d      	bpl.n	800c7b8 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c79c:	f06f 0204 	mvn.w	r2, #4
 800c7a0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c7a2:	2202      	movs	r2, #2
 800c7a4:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c7a6:	699b      	ldr	r3, [r3, #24]
 800c7a8:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800c7ac:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c7ae:	d068      	beq.n	800c882 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800c7b0:	f7ff ffd5 	bl	800c75e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7b4:	2300      	movs	r3, #0
 800c7b6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c7b8:	6823      	ldr	r3, [r4, #0]
 800c7ba:	691a      	ldr	r2, [r3, #16]
 800c7bc:	0712      	lsls	r2, r2, #28
 800c7be:	d50f      	bpl.n	800c7e0 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c7c0:	68da      	ldr	r2, [r3, #12]
 800c7c2:	0710      	lsls	r0, r2, #28
 800c7c4:	d50c      	bpl.n	800c7e0 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c7c6:	f06f 0208 	mvn.w	r2, #8
 800c7ca:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c7cc:	2204      	movs	r2, #4
 800c7ce:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c7d0:	69db      	ldr	r3, [r3, #28]
 800c7d2:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800c7d4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c7d6:	d05a      	beq.n	800c88e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800c7d8:	f7ff ffc1 	bl	800c75e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7dc:	2300      	movs	r3, #0
 800c7de:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c7e0:	6823      	ldr	r3, [r4, #0]
 800c7e2:	691a      	ldr	r2, [r3, #16]
 800c7e4:	06d2      	lsls	r2, r2, #27
 800c7e6:	d510      	bpl.n	800c80a <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c7e8:	68da      	ldr	r2, [r3, #12]
 800c7ea:	06d0      	lsls	r0, r2, #27
 800c7ec:	d50d      	bpl.n	800c80a <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c7ee:	f06f 0210 	mvn.w	r2, #16
 800c7f2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c7f4:	2208      	movs	r2, #8
 800c7f6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c7f8:	69db      	ldr	r3, [r3, #28]
 800c7fa:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800c7fe:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c800:	d04b      	beq.n	800c89a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800c802:	f7ff ffac 	bl	800c75e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c806:	2300      	movs	r3, #0
 800c808:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c80a:	6823      	ldr	r3, [r4, #0]
 800c80c:	691a      	ldr	r2, [r3, #16]
 800c80e:	07d1      	lsls	r1, r2, #31
 800c810:	d508      	bpl.n	800c824 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c812:	68da      	ldr	r2, [r3, #12]
 800c814:	07d2      	lsls	r2, r2, #31
 800c816:	d505      	bpl.n	800c824 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c818:	f06f 0201 	mvn.w	r2, #1
 800c81c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800c81e:	4620      	mov	r0, r4
 800c820:	f7f5 f8ae 	bl	8001980 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c824:	6823      	ldr	r3, [r4, #0]
 800c826:	691a      	ldr	r2, [r3, #16]
 800c828:	0610      	lsls	r0, r2, #24
 800c82a:	d508      	bpl.n	800c83e <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c82c:	68da      	ldr	r2, [r3, #12]
 800c82e:	0611      	lsls	r1, r2, #24
 800c830:	d505      	bpl.n	800c83e <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c832:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c836:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800c838:	4620      	mov	r0, r4
 800c83a:	f000 f8c8 	bl	800c9ce <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c83e:	6823      	ldr	r3, [r4, #0]
 800c840:	691a      	ldr	r2, [r3, #16]
 800c842:	0652      	lsls	r2, r2, #25
 800c844:	d508      	bpl.n	800c858 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c846:	68da      	ldr	r2, [r3, #12]
 800c848:	0650      	lsls	r0, r2, #25
 800c84a:	d505      	bpl.n	800c858 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c84c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c850:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800c852:	4620      	mov	r0, r4
 800c854:	f7ff ff85 	bl	800c762 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c858:	6823      	ldr	r3, [r4, #0]
 800c85a:	691a      	ldr	r2, [r3, #16]
 800c85c:	0691      	lsls	r1, r2, #26
 800c85e:	d522      	bpl.n	800c8a6 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c860:	68da      	ldr	r2, [r3, #12]
 800c862:	0692      	lsls	r2, r2, #26
 800c864:	d51f      	bpl.n	800c8a6 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c866:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800c86a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c86c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800c86e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c872:	f000 b8ab 	b.w	800c9cc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c876:	f7ff ff71 	bl	800c75c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c87a:	4620      	mov	r0, r4
 800c87c:	f7ff ff70 	bl	800c760 <HAL_TIM_PWM_PulseFinishedCallback>
 800c880:	e783      	b.n	800c78a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c882:	f7ff ff6b 	bl	800c75c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c886:	4620      	mov	r0, r4
 800c888:	f7ff ff6a 	bl	800c760 <HAL_TIM_PWM_PulseFinishedCallback>
 800c88c:	e792      	b.n	800c7b4 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c88e:	f7ff ff65 	bl	800c75c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c892:	4620      	mov	r0, r4
 800c894:	f7ff ff64 	bl	800c760 <HAL_TIM_PWM_PulseFinishedCallback>
 800c898:	e7a0      	b.n	800c7dc <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c89a:	f7ff ff5f 	bl	800c75c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c89e:	4620      	mov	r0, r4
 800c8a0:	f7ff ff5e 	bl	800c760 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8a4:	e7af      	b.n	800c806 <HAL_TIM_IRQHandler+0xa2>
}
 800c8a6:	bd10      	pop	{r4, pc}

0800c8a8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c8a8:	4a30      	ldr	r2, [pc, #192]	; (800c96c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800c8aa:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c8ac:	4290      	cmp	r0, r2
 800c8ae:	d012      	beq.n	800c8d6 <TIM_Base_SetConfig+0x2e>
 800c8b0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800c8b4:	d00f      	beq.n	800c8d6 <TIM_Base_SetConfig+0x2e>
 800c8b6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c8ba:	4290      	cmp	r0, r2
 800c8bc:	d00b      	beq.n	800c8d6 <TIM_Base_SetConfig+0x2e>
 800c8be:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c8c2:	4290      	cmp	r0, r2
 800c8c4:	d007      	beq.n	800c8d6 <TIM_Base_SetConfig+0x2e>
 800c8c6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c8ca:	4290      	cmp	r0, r2
 800c8cc:	d003      	beq.n	800c8d6 <TIM_Base_SetConfig+0x2e>
 800c8ce:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c8d2:	4290      	cmp	r0, r2
 800c8d4:	d119      	bne.n	800c90a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800c8d6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c8d8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c8dc:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c8de:	4a23      	ldr	r2, [pc, #140]	; (800c96c <TIM_Base_SetConfig+0xc4>)
 800c8e0:	4290      	cmp	r0, r2
 800c8e2:	d029      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c8e4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800c8e8:	d026      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c8ea:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c8ee:	4290      	cmp	r0, r2
 800c8f0:	d022      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c8f2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c8f6:	4290      	cmp	r0, r2
 800c8f8:	d01e      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c8fa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c8fe:	4290      	cmp	r0, r2
 800c900:	d01a      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c902:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c906:	4290      	cmp	r0, r2
 800c908:	d016      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c90a:	4a19      	ldr	r2, [pc, #100]	; (800c970 <TIM_Base_SetConfig+0xc8>)
 800c90c:	4290      	cmp	r0, r2
 800c90e:	d013      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c910:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c914:	4290      	cmp	r0, r2
 800c916:	d00f      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c918:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c91c:	4290      	cmp	r0, r2
 800c91e:	d00b      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c920:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800c924:	4290      	cmp	r0, r2
 800c926:	d007      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c928:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c92c:	4290      	cmp	r0, r2
 800c92e:	d003      	beq.n	800c938 <TIM_Base_SetConfig+0x90>
 800c930:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c934:	4290      	cmp	r0, r2
 800c936:	d103      	bne.n	800c940 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c938:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c93a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c93e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c940:	694a      	ldr	r2, [r1, #20]
 800c942:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c946:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800c948:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c94a:	688b      	ldr	r3, [r1, #8]
 800c94c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c94e:	680b      	ldr	r3, [r1, #0]
 800c950:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c952:	4b06      	ldr	r3, [pc, #24]	; (800c96c <TIM_Base_SetConfig+0xc4>)
 800c954:	4298      	cmp	r0, r3
 800c956:	d003      	beq.n	800c960 <TIM_Base_SetConfig+0xb8>
 800c958:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800c95c:	4298      	cmp	r0, r3
 800c95e:	d101      	bne.n	800c964 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800c960:	690b      	ldr	r3, [r1, #16]
 800c962:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c964:	2301      	movs	r3, #1
 800c966:	6143      	str	r3, [r0, #20]
}
 800c968:	4770      	bx	lr
 800c96a:	bf00      	nop
 800c96c:	40010000 	.word	0x40010000
 800c970:	40014000 	.word	0x40014000

0800c974 <HAL_TIM_Base_Init>:
{
 800c974:	b510      	push	{r4, lr}
  if (htim == NULL)
 800c976:	4604      	mov	r4, r0
 800c978:	b330      	cbz	r0, 800c9c8 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800c97a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c97e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c982:	b91b      	cbnz	r3, 800c98c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800c984:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c988:	f7ff fead 	bl	800c6e6 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800c98c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c98e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c990:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c994:	1d21      	adds	r1, r4, #4
 800c996:	f7ff ff87 	bl	800c8a8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c99a:	2301      	movs	r3, #1
 800c99c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800c9a0:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c9a2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c9a6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c9aa:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c9ae:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c9b2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c9b6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c9ba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c9be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c9c2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800c9c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c9c8:	2001      	movs	r0, #1
 800c9ca:	e7fc      	b.n	800c9c6 <HAL_TIM_Base_Init+0x52>

0800c9cc <HAL_TIMEx_CommutCallback>:
 800c9cc:	4770      	bx	lr

0800c9ce <HAL_TIMEx_BreakCallback>:
 800c9ce:	4770      	bx	lr

0800c9d0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800c9d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9d4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c9d6:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800c9da:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800c9de:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800c9e2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800c9e6:	6809      	ldr	r1, [r1, #0]
 800c9e8:	2901      	cmp	r1, #1
 800c9ea:	ea43 0304 	orr.w	r3, r3, r4
 800c9ee:	4912      	ldr	r1, [pc, #72]	; (800ca38 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800c9f0:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800c9f2:	d00f      	beq.n	800ca14 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800c9f4:	431a      	orrs	r2, r3
 800c9f6:	432a      	orrs	r2, r5
 800c9f8:	ea42 0308 	orr.w	r3, r2, r8
 800c9fc:	ea43 030e 	orr.w	r3, r3, lr
 800ca00:	ea43 030c 	orr.w	r3, r3, ip
 800ca04:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800ca06:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ca08:	4333      	orrs	r3, r6
 800ca0a:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ca0c:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800ca0e:	2000      	movs	r0, #0
 800ca10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ca14:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800ca16:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800ca18:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ca1a:	ea45 0208 	orr.w	r2, r5, r8
 800ca1e:	ea42 020e 	orr.w	r2, r2, lr
 800ca22:	ea42 020c 	orr.w	r2, r2, ip
 800ca26:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800ca28:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ca2c:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ca2e:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ca30:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ca32:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800ca34:	6042      	str	r2, [r0, #4]
 800ca36:	e7ea      	b.n	800ca0e <FMC_SDRAM_Init+0x3e>
 800ca38:	ffff8000 	.word	0xffff8000

0800ca3c <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800ca3c:	68cb      	ldr	r3, [r1, #12]
{
 800ca3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca40:	680c      	ldr	r4, [r1, #0]
 800ca42:	688e      	ldr	r6, [r1, #8]
 800ca44:	690d      	ldr	r5, [r1, #16]
 800ca46:	1e5f      	subs	r7, r3, #1
 800ca48:	694b      	ldr	r3, [r1, #20]
 800ca4a:	f104 3cff 	add.w	ip, r4, #4294967295
 800ca4e:	684c      	ldr	r4, [r1, #4]
 800ca50:	6989      	ldr	r1, [r1, #24]
 800ca52:	3b01      	subs	r3, #1
 800ca54:	051b      	lsls	r3, r3, #20
 800ca56:	3c01      	subs	r4, #1
 800ca58:	3e01      	subs	r6, #1
 800ca5a:	3d01      	subs	r5, #1
 800ca5c:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800ca5e:	2a01      	cmp	r2, #1
 800ca60:	ea4f 1404 	mov.w	r4, r4, lsl #4
 800ca64:	ea4f 2606 	mov.w	r6, r6, lsl #8
 800ca68:	ea4f 4505 	mov.w	r5, r5, lsl #16
 800ca6c:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800ca70:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 800ca74:	d00c      	beq.n	800ca90 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ca76:	ea43 030c 	orr.w	r3, r3, ip
 800ca7a:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800ca7c:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ca7e:	4333      	orrs	r3, r6
 800ca80:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800ca82:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ca86:	430b      	orrs	r3, r1
 800ca88:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800ca8a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800ca8c:	2000      	movs	r0, #0
 800ca8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800ca90:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800ca92:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800ca96:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ca9a:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ca9c:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ca9e:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800caa2:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800caa4:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800caa6:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800caa8:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800caac:	430a      	orrs	r2, r1
 800caae:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800cab0:	60c2      	str	r2, [r0, #12]
 800cab2:	e7eb      	b.n	800ca8c <FMC_SDRAM_Timing_Init+0x50>

0800cab4 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800cab4:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800cab8:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800cabc:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 800cac0:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800cac4:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800cac6:	2300      	movs	r3, #0
 800cac8:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800caca:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800cacc:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800cace:	4618      	mov	r0, r3
 800cad0:	4770      	bx	lr

0800cad2 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cad2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800cad4:	2300      	movs	r3, #0
 800cad6:	9301      	str	r3, [sp, #4]
{
 800cad8:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800cada:	e9d1 3200 	ldrd	r3, r2, [r1]
 800cade:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800cae0:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800cae2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800cae6:	688a      	ldr	r2, [r1, #8]
 800cae8:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800caea:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800caee:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800caf0:	9b01      	ldr	r3, [sp, #4]
 800caf2:	6103      	str	r3, [r0, #16]
{
 800caf4:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800caf6:	f7fd f849 	bl	8009b8c <HAL_GetTick>
 800cafa:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cafc:	69a3      	ldr	r3, [r4, #24]
 800cafe:	f013 0320 	ands.w	r3, r3, #32
 800cb02:	d101      	bne.n	800cb08 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800cb04:	4618      	mov	r0, r3
 800cb06:	e003      	b.n	800cb10 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800cb08:	1c6b      	adds	r3, r5, #1
 800cb0a:	d0f7      	beq.n	800cafc <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800cb0c:	b915      	cbnz	r5, 800cb14 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800cb0e:	2003      	movs	r0, #3
}
 800cb10:	b002      	add	sp, #8
 800cb12:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800cb14:	f7fd f83a 	bl	8009b8c <HAL_GetTick>
 800cb18:	1b80      	subs	r0, r0, r6
 800cb1a:	42a8      	cmp	r0, r5
 800cb1c:	d9ee      	bls.n	800cafc <FMC_SDRAM_SendCommand+0x2a>
 800cb1e:	e7f6      	b.n	800cb0e <FMC_SDRAM_SendCommand+0x3c>

0800cb20 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800cb20:	6943      	ldr	r3, [r0, #20]
 800cb22:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800cb26:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800cb28:	2000      	movs	r0, #0
 800cb2a:	4770      	bx	lr

0800cb2c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cb2c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cb2e:	4b05      	ldr	r3, [pc, #20]	; (800cb44 <SysTick_Handler+0x18>)
 800cb30:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cb32:	f001 fe6f 	bl	800e814 <xTaskGetSchedulerState>
 800cb36:	2801      	cmp	r0, #1
 800cb38:	d003      	beq.n	800cb42 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cb3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cb3e:	f000 bbe1 	b.w	800d304 <xPortSysTickHandler>
}
 800cb42:	bd08      	pop	{r3, pc}
 800cb44:	e000e010 	.word	0xe000e010

0800cb48 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cb48:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb4c:	b92b      	cbnz	r3, 800cb5a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cb4e:	4b06      	ldr	r3, [pc, #24]	; (800cb68 <osKernelInitialize+0x20>)
 800cb50:	6818      	ldr	r0, [r3, #0]
 800cb52:	b928      	cbnz	r0, 800cb60 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cb54:	2201      	movs	r2, #1
 800cb56:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cb58:	4770      	bx	lr
    stat = osErrorISR;
 800cb5a:	f06f 0005 	mvn.w	r0, #5
 800cb5e:	4770      	bx	lr
    } else {
      stat = osError;
 800cb60:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cb64:	4770      	bx	lr
 800cb66:	bf00      	nop
 800cb68:	2000f56c 	.word	0x2000f56c

0800cb6c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cb6c:	b510      	push	{r4, lr}
 800cb6e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb72:	b95c      	cbnz	r4, 800cb8c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cb74:	4b08      	ldr	r3, [pc, #32]	; (800cb98 <osKernelStart+0x2c>)
 800cb76:	681a      	ldr	r2, [r3, #0]
 800cb78:	2a01      	cmp	r2, #1
 800cb7a:	d10a      	bne.n	800cb92 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cb7c:	4a07      	ldr	r2, [pc, #28]	; (800cb9c <osKernelStart+0x30>)
 800cb7e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cb80:	2202      	movs	r2, #2
 800cb82:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cb84:	f001 fce2 	bl	800e54c <vTaskStartScheduler>
      stat = osOK;
 800cb88:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cb8a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cb8c:	f06f 0005 	mvn.w	r0, #5
 800cb90:	e7fb      	b.n	800cb8a <osKernelStart+0x1e>
      stat = osError;
 800cb92:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800cb96:	e7f8      	b.n	800cb8a <osKernelStart+0x1e>
 800cb98:	2000f56c 	.word	0x2000f56c
 800cb9c:	e000ed00 	.word	0xe000ed00

0800cba0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cba0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cba2:	b087      	sub	sp, #28
 800cba4:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cba6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cba8:	460b      	mov	r3, r1
  hTask = NULL;
 800cbaa:	9205      	str	r2, [sp, #20]
 800cbac:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cbb0:	b9d2      	cbnz	r2, 800cbe8 <osThreadNew+0x48>
 800cbb2:	b1c8      	cbz	r0, 800cbe8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cbb4:	2c00      	cmp	r4, #0
 800cbb6:	d02f      	beq.n	800cc18 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cbb8:	69a5      	ldr	r5, [r4, #24]
 800cbba:	2d00      	cmp	r5, #0
 800cbbc:	bf08      	it	eq
 800cbbe:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cbc0:	1e69      	subs	r1, r5, #1
 800cbc2:	2937      	cmp	r1, #55	; 0x37
 800cbc4:	46ac      	mov	ip, r5
 800cbc6:	d82b      	bhi.n	800cc20 <osThreadNew+0x80>
 800cbc8:	6861      	ldr	r1, [r4, #4]
 800cbca:	07c9      	lsls	r1, r1, #31
 800cbcc:	d428      	bmi.n	800cc20 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cbce:	6966      	ldr	r6, [r4, #20]
 800cbd0:	b16e      	cbz	r6, 800cbee <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cbd2:	08b2      	lsrs	r2, r6, #2
 800cbd4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800cbd8:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cbda:	b157      	cbz	r7, 800cbf2 <osThreadNew+0x52>
 800cbdc:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800cbe0:	d902      	bls.n	800cbe8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cbe2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cbe4:	b104      	cbz	r4, 800cbe8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cbe6:	b9ee      	cbnz	r6, 800cc24 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800cbe8:	9805      	ldr	r0, [sp, #20]
}
 800cbea:	b007      	add	sp, #28
 800cbec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800cbee:	2280      	movs	r2, #128	; 0x80
 800cbf0:	e7f0      	b.n	800cbd4 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cbf2:	f1be 0f00 	cmp.w	lr, #0
 800cbf6:	d1f7      	bne.n	800cbe8 <osThreadNew+0x48>
      if (mem == 0) {
 800cbf8:	6924      	ldr	r4, [r4, #16]
 800cbfa:	2c00      	cmp	r4, #0
 800cbfc:	d1f4      	bne.n	800cbe8 <osThreadNew+0x48>
 800cbfe:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cc00:	a905      	add	r1, sp, #20
 800cc02:	e9cd c100 	strd	ip, r1, [sp]
 800cc06:	b292      	uxth	r2, r2
 800cc08:	4621      	mov	r1, r4
 800cc0a:	f001 fb19 	bl	800e240 <xTaskCreate>
 800cc0e:	2801      	cmp	r0, #1
            hTask = NULL;
 800cc10:	bf1c      	itt	ne
 800cc12:	2300      	movne	r3, #0
 800cc14:	9305      	strne	r3, [sp, #20]
 800cc16:	e7e7      	b.n	800cbe8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800cc18:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800cc1c:	2280      	movs	r2, #128	; 0x80
 800cc1e:	e7ef      	b.n	800cc00 <osThreadNew+0x60>
        return (NULL);
 800cc20:	4610      	mov	r0, r2
 800cc22:	e7e2      	b.n	800cbea <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cc24:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800cc28:	9500      	str	r5, [sp, #0]
 800cc2a:	f001 fad1 	bl	800e1d0 <xTaskCreateStatic>
 800cc2e:	9005      	str	r0, [sp, #20]
 800cc30:	e7da      	b.n	800cbe8 <osThreadNew+0x48>

0800cc32 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cc32:	b510      	push	{r4, lr}
 800cc34:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cc38:	b924      	cbnz	r4, 800cc44 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cc3a:	b110      	cbz	r0, 800cc42 <osDelay+0x10>
      vTaskDelay(ticks);
 800cc3c:	f001 fc46 	bl	800e4cc <vTaskDelay>
    stat = osOK;
 800cc40:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800cc42:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cc44:	f06f 0005 	mvn.w	r0, #5
 800cc48:	e7fb      	b.n	800cc42 <osDelay+0x10>

0800cc4a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cc4a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cc4c:	4604      	mov	r4, r0
 800cc4e:	460e      	mov	r6, r1
 800cc50:	4615      	mov	r5, r2
 800cc52:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cc56:	b11a      	cbz	r2, 800cc60 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800cc58:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cc5a:	4620      	mov	r0, r4
 800cc5c:	b003      	add	sp, #12
 800cc5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cc60:	2800      	cmp	r0, #0
 800cc62:	d0f9      	beq.n	800cc58 <osSemaphoreNew+0xe>
 800cc64:	4288      	cmp	r0, r1
 800cc66:	d3f7      	bcc.n	800cc58 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800cc68:	b1e5      	cbz	r5, 800cca4 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cc6a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800cc6e:	b1bb      	cbz	r3, 800cca0 <osSemaphoreNew+0x56>
 800cc70:	2f4f      	cmp	r7, #79	; 0x4f
 800cc72:	d9f1      	bls.n	800cc58 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800cc74:	2801      	cmp	r0, #1
 800cc76:	d12a      	bne.n	800ccce <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cc78:	2103      	movs	r1, #3
 800cc7a:	9100      	str	r1, [sp, #0]
 800cc7c:	4611      	mov	r1, r2
 800cc7e:	f000 fcf1 	bl	800d664 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800cc82:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cc84:	2800      	cmp	r0, #0
 800cc86:	d0e7      	beq.n	800cc58 <osSemaphoreNew+0xe>
 800cc88:	b1de      	cbz	r6, 800ccc2 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cc8a:	2300      	movs	r3, #0
 800cc8c:	461a      	mov	r2, r3
 800cc8e:	4619      	mov	r1, r3
 800cc90:	f000 fd9e 	bl	800d7d0 <xQueueGenericSend>
 800cc94:	2801      	cmp	r0, #1
 800cc96:	d014      	beq.n	800ccc2 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cc98:	4620      	mov	r0, r4
 800cc9a:	f001 f8df 	bl	800de5c <vQueueDelete>
 800cc9e:	e7db      	b.n	800cc58 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cca0:	2f00      	cmp	r7, #0
 800cca2:	d1d9      	bne.n	800cc58 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800cca4:	2c01      	cmp	r4, #1
 800cca6:	d105      	bne.n	800ccb4 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800cca8:	2203      	movs	r2, #3
 800ccaa:	2100      	movs	r1, #0
 800ccac:	4620      	mov	r0, r4
 800ccae:	f000 fd27 	bl	800d700 <xQueueGenericCreate>
 800ccb2:	e7e6      	b.n	800cc82 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ccb4:	4620      	mov	r0, r4
 800ccb6:	4631      	mov	r1, r6
 800ccb8:	f000 fd6b 	bl	800d792 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ccbc:	4604      	mov	r4, r0
 800ccbe:	2800      	cmp	r0, #0
 800ccc0:	d0ca      	beq.n	800cc58 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800ccc2:	b955      	cbnz	r5, 800ccda <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800ccc4:	4629      	mov	r1, r5
 800ccc6:	4620      	mov	r0, r4
 800ccc8:	f001 f89e 	bl	800de08 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800cccc:	e7c5      	b.n	800cc5a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800ccce:	461a      	mov	r2, r3
 800ccd0:	f000 fd3d 	bl	800d74e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800ccd4:	4604      	mov	r4, r0
 800ccd6:	2800      	cmp	r0, #0
 800ccd8:	d0be      	beq.n	800cc58 <osSemaphoreNew+0xe>
          name = attr->name;
 800ccda:	682d      	ldr	r5, [r5, #0]
 800ccdc:	e7f2      	b.n	800ccc4 <osSemaphoreNew+0x7a>
	...

0800cce0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cce0:	b513      	push	{r0, r1, r4, lr}
 800cce2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cce4:	b1f8      	cbz	r0, 800cd26 <osSemaphoreAcquire+0x46>
 800cce6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ccea:	b1a3      	cbz	r3, 800cd16 <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 800ccec:	b9d9      	cbnz	r1, 800cd26 <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ccee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ccf0:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ccf2:	f001 f839 	bl	800dd68 <xQueueReceiveFromISR>
 800ccf6:	2801      	cmp	r0, #1
 800ccf8:	d112      	bne.n	800cd20 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ccfa:	9b01      	ldr	r3, [sp, #4]
 800ccfc:	b913      	cbnz	r3, 800cd04 <osSemaphoreAcquire+0x24>
  stat = osOK;
 800ccfe:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cd00:	b002      	add	sp, #8
 800cd02:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cd04:	4b0b      	ldr	r3, [pc, #44]	; (800cd34 <osSemaphoreAcquire+0x54>)
 800cd06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd0a:	601a      	str	r2, [r3, #0]
 800cd0c:	f3bf 8f4f 	dsb	sy
 800cd10:	f3bf 8f6f 	isb	sy
 800cd14:	e7f3      	b.n	800ccfe <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cd16:	f000 ff63 	bl	800dbe0 <xQueueSemaphoreTake>
 800cd1a:	2801      	cmp	r0, #1
 800cd1c:	d0ef      	beq.n	800ccfe <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800cd1e:	b92c      	cbnz	r4, 800cd2c <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 800cd20:	f06f 0002 	mvn.w	r0, #2
 800cd24:	e7ec      	b.n	800cd00 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800cd26:	f06f 0003 	mvn.w	r0, #3
 800cd2a:	e7e9      	b.n	800cd00 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800cd2c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800cd30:	e7e6      	b.n	800cd00 <osSemaphoreAcquire+0x20>
 800cd32:	bf00      	nop
 800cd34:	e000ed04 	.word	0xe000ed04

0800cd38 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cd38:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cd3a:	b300      	cbz	r0, 800cd7e <osSemaphoreRelease+0x46>
 800cd3c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cd40:	b1a3      	cbz	r3, 800cd6c <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800cd42:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cd44:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cd46:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cd48:	f000 fe56 	bl	800d9f8 <xQueueGiveFromISR>
 800cd4c:	2801      	cmp	r0, #1
 800cd4e:	d113      	bne.n	800cd78 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cd50:	9b01      	ldr	r3, [sp, #4]
 800cd52:	b913      	cbnz	r3, 800cd5a <osSemaphoreRelease+0x22>
  stat = osOK;
 800cd54:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cd56:	b002      	add	sp, #8
 800cd58:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800cd5a:	4b0a      	ldr	r3, [pc, #40]	; (800cd84 <osSemaphoreRelease+0x4c>)
 800cd5c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd60:	601a      	str	r2, [r3, #0]
 800cd62:	f3bf 8f4f 	dsb	sy
 800cd66:	f3bf 8f6f 	isb	sy
 800cd6a:	e7f3      	b.n	800cd54 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cd6c:	461a      	mov	r2, r3
 800cd6e:	4619      	mov	r1, r3
 800cd70:	f000 fd2e 	bl	800d7d0 <xQueueGenericSend>
 800cd74:	2801      	cmp	r0, #1
 800cd76:	d0ed      	beq.n	800cd54 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800cd78:	f06f 0002 	mvn.w	r0, #2
 800cd7c:	e7eb      	b.n	800cd56 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800cd7e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800cd82:	e7e8      	b.n	800cd56 <osSemaphoreRelease+0x1e>
 800cd84:	e000ed04 	.word	0xe000ed04

0800cd88 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cd88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd8a:	4606      	mov	r6, r0
 800cd8c:	460d      	mov	r5, r1
 800cd8e:	4614      	mov	r4, r2
 800cd90:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cd94:	b11f      	cbz	r7, 800cd9e <osMessageQueueNew+0x16>
  hQueue = NULL;
 800cd96:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800cd98:	4628      	mov	r0, r5
 800cd9a:	b003      	add	sp, #12
 800cd9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cd9e:	2800      	cmp	r0, #0
 800cda0:	d0f9      	beq.n	800cd96 <osMessageQueueNew+0xe>
 800cda2:	2900      	cmp	r1, #0
 800cda4:	d0f7      	beq.n	800cd96 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800cda6:	b1da      	cbz	r2, 800cde0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cda8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800cdac:	b183      	cbz	r3, 800cdd0 <osMessageQueueNew+0x48>
 800cdae:	2a4f      	cmp	r2, #79	; 0x4f
 800cdb0:	d9f1      	bls.n	800cd96 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cdb2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cdb4:	2a00      	cmp	r2, #0
 800cdb6:	d0ee      	beq.n	800cd96 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cdb8:	6966      	ldr	r6, [r4, #20]
 800cdba:	4345      	muls	r5, r0
 800cdbc:	42ae      	cmp	r6, r5
 800cdbe:	d3ea      	bcc.n	800cd96 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cdc0:	9700      	str	r7, [sp, #0]
 800cdc2:	f000 fc4f 	bl	800d664 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cdc6:	4605      	mov	r5, r0
 800cdc8:	2800      	cmp	r0, #0
 800cdca:	d0e4      	beq.n	800cd96 <osMessageQueueNew+0xe>
        name = attr->name;
 800cdcc:	6824      	ldr	r4, [r4, #0]
 800cdce:	e011      	b.n	800cdf4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cdd0:	2a00      	cmp	r2, #0
 800cdd2:	d1e0      	bne.n	800cd96 <osMessageQueueNew+0xe>
 800cdd4:	6923      	ldr	r3, [r4, #16]
 800cdd6:	2b00      	cmp	r3, #0
 800cdd8:	d1dd      	bne.n	800cd96 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cdda:	6963      	ldr	r3, [r4, #20]
 800cddc:	2b00      	cmp	r3, #0
 800cdde:	d1da      	bne.n	800cd96 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cde0:	4629      	mov	r1, r5
 800cde2:	2200      	movs	r2, #0
 800cde4:	4630      	mov	r0, r6
 800cde6:	f000 fc8b 	bl	800d700 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cdea:	4605      	mov	r5, r0
 800cdec:	2800      	cmp	r0, #0
 800cdee:	d0d2      	beq.n	800cd96 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800cdf0:	2c00      	cmp	r4, #0
 800cdf2:	d1eb      	bne.n	800cdcc <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800cdf4:	4621      	mov	r1, r4
 800cdf6:	4628      	mov	r0, r5
 800cdf8:	f001 f806 	bl	800de08 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cdfc:	e7cc      	b.n	800cd98 <osMessageQueueNew+0x10>
	...

0800ce00 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800ce00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ce02:	461c      	mov	r4, r3
 800ce04:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ce08:	b1b6      	cbz	r6, 800ce38 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ce0a:	b308      	cbz	r0, 800ce50 <osMessageQueuePut+0x50>
 800ce0c:	b301      	cbz	r1, 800ce50 <osMessageQueuePut+0x50>
 800ce0e:	b9fb      	cbnz	r3, 800ce50 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ce10:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce12:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ce14:	f000 fd8e 	bl	800d934 <xQueueGenericSendFromISR>
 800ce18:	2801      	cmp	r0, #1
 800ce1a:	d116      	bne.n	800ce4a <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce1c:	9b01      	ldr	r3, [sp, #4]
 800ce1e:	b913      	cbnz	r3, 800ce26 <osMessageQueuePut+0x26>
  stat = osOK;
 800ce20:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ce22:	b002      	add	sp, #8
 800ce24:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800ce26:	4b0d      	ldr	r3, [pc, #52]	; (800ce5c <osMessageQueuePut+0x5c>)
 800ce28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce2c:	601a      	str	r2, [r3, #0]
 800ce2e:	f3bf 8f4f 	dsb	sy
 800ce32:	f3bf 8f6f 	isb	sy
 800ce36:	e7f3      	b.n	800ce20 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ce38:	b150      	cbz	r0, 800ce50 <osMessageQueuePut+0x50>
 800ce3a:	b149      	cbz	r1, 800ce50 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ce3c:	4633      	mov	r3, r6
 800ce3e:	4622      	mov	r2, r4
 800ce40:	f000 fcc6 	bl	800d7d0 <xQueueGenericSend>
 800ce44:	2801      	cmp	r0, #1
 800ce46:	d0eb      	beq.n	800ce20 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800ce48:	b92c      	cbnz	r4, 800ce56 <osMessageQueuePut+0x56>
          stat = osErrorResource;
 800ce4a:	f06f 0002 	mvn.w	r0, #2
 800ce4e:	e7e8      	b.n	800ce22 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800ce50:	f06f 0003 	mvn.w	r0, #3
 800ce54:	e7e5      	b.n	800ce22 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800ce56:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800ce5a:	e7e2      	b.n	800ce22 <osMessageQueuePut+0x22>
 800ce5c:	e000ed04 	.word	0xe000ed04

0800ce60 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800ce60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ce62:	461c      	mov	r4, r3
 800ce64:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ce68:	b1b3      	cbz	r3, 800ce98 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ce6a:	b300      	cbz	r0, 800ceae <osMessageQueueGet+0x4e>
 800ce6c:	b1f9      	cbz	r1, 800ceae <osMessageQueueGet+0x4e>
 800ce6e:	b9f4      	cbnz	r4, 800ceae <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ce70:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce72:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ce74:	f000 ff78 	bl	800dd68 <xQueueReceiveFromISR>
 800ce78:	2801      	cmp	r0, #1
 800ce7a:	d115      	bne.n	800cea8 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce7c:	9b01      	ldr	r3, [sp, #4]
 800ce7e:	b913      	cbnz	r3, 800ce86 <osMessageQueueGet+0x26>
  stat = osOK;
 800ce80:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ce82:	b003      	add	sp, #12
 800ce84:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800ce86:	4b0d      	ldr	r3, [pc, #52]	; (800cebc <osMessageQueueGet+0x5c>)
 800ce88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce8c:	601a      	str	r2, [r3, #0]
 800ce8e:	f3bf 8f4f 	dsb	sy
 800ce92:	f3bf 8f6f 	isb	sy
 800ce96:	e7f3      	b.n	800ce80 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ce98:	b148      	cbz	r0, 800ceae <osMessageQueueGet+0x4e>
 800ce9a:	b141      	cbz	r1, 800ceae <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ce9c:	4622      	mov	r2, r4
 800ce9e:	f000 fdff 	bl	800daa0 <xQueueReceive>
 800cea2:	2801      	cmp	r0, #1
 800cea4:	d0ec      	beq.n	800ce80 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800cea6:	b92c      	cbnz	r4, 800ceb4 <osMessageQueueGet+0x54>
          stat = osErrorResource;
 800cea8:	f06f 0002 	mvn.w	r0, #2
 800ceac:	e7e9      	b.n	800ce82 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800ceae:	f06f 0003 	mvn.w	r0, #3
 800ceb2:	e7e6      	b.n	800ce82 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800ceb4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800ceb8:	e7e3      	b.n	800ce82 <osMessageQueueGet+0x22>
 800ceba:	bf00      	nop
 800cebc:	e000ed04 	.word	0xe000ed04

0800cec0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cec0:	4b03      	ldr	r3, [pc, #12]	; (800ced0 <vApplicationGetIdleTaskMemory+0x10>)
 800cec2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800cec4:	4b03      	ldr	r3, [pc, #12]	; (800ced4 <vApplicationGetIdleTaskMemory+0x14>)
 800cec6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cec8:	2380      	movs	r3, #128	; 0x80
 800ceca:	6013      	str	r3, [r2, #0]
}
 800cecc:	4770      	bx	lr
 800cece:	bf00      	nop
 800ced0:	2000f4ac 	.word	0x2000f4ac
 800ced4:	2000f2ac 	.word	0x2000f2ac

0800ced8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800ced8:	4b03      	ldr	r3, [pc, #12]	; (800cee8 <vApplicationGetTimerTaskMemory+0x10>)
 800ceda:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800cedc:	4b03      	ldr	r3, [pc, #12]	; (800ceec <vApplicationGetTimerTaskMemory+0x14>)
 800cede:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cee0:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cee4:	6013      	str	r3, [r2, #0]
}
 800cee6:	4770      	bx	lr
 800cee8:	2000f970 	.word	0x2000f970
 800ceec:	2000f570 	.word	0x2000f570

0800cef0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800cef0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cef2:	4b0f      	ldr	r3, [pc, #60]	; (800cf30 <prvInsertBlockIntoFreeList+0x40>)
 800cef4:	461a      	mov	r2, r3
 800cef6:	681b      	ldr	r3, [r3, #0]
 800cef8:	4283      	cmp	r3, r0
 800cefa:	d3fb      	bcc.n	800cef4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cefc:	6854      	ldr	r4, [r2, #4]
 800cefe:	1911      	adds	r1, r2, r4
 800cf00:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cf02:	bf01      	itttt	eq
 800cf04:	6841      	ldreq	r1, [r0, #4]
 800cf06:	4610      	moveq	r0, r2
 800cf08:	1909      	addeq	r1, r1, r4
 800cf0a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf0c:	6844      	ldr	r4, [r0, #4]
 800cf0e:	1901      	adds	r1, r0, r4
 800cf10:	428b      	cmp	r3, r1
 800cf12:	d107      	bne.n	800cf24 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cf14:	4907      	ldr	r1, [pc, #28]	; (800cf34 <prvInsertBlockIntoFreeList+0x44>)
 800cf16:	6809      	ldr	r1, [r1, #0]
 800cf18:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cf1a:	bf1f      	itttt	ne
 800cf1c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cf1e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cf20:	1909      	addne	r1, r1, r4
 800cf22:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cf24:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800cf26:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cf28:	bf18      	it	ne
 800cf2a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800cf2c:	bd10      	pop	{r4, pc}
 800cf2e:	bf00      	nop
 800cf30:	2001fa48 	.word	0x2001fa48
 800cf34:	2000fa30 	.word	0x2000fa30

0800cf38 <pvPortMalloc>:
{
 800cf38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf3c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800cf3e:	f001 f9ad 	bl	800e29c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800cf42:	4b3e      	ldr	r3, [pc, #248]	; (800d03c <pvPortMalloc+0x104>)
 800cf44:	483e      	ldr	r0, [pc, #248]	; (800d040 <pvPortMalloc+0x108>)
 800cf46:	681a      	ldr	r2, [r3, #0]
 800cf48:	469c      	mov	ip, r3
 800cf4a:	b9d2      	cbnz	r2, 800cf82 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 800cf4c:	4a3d      	ldr	r2, [pc, #244]	; (800d044 <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cf4e:	4b3e      	ldr	r3, [pc, #248]	; (800d048 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cf50:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cf52:	bf1c      	itt	ne
 800cf54:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cf56:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800cf5a:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cf5c:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cf5e:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 800cf60:	4b3a      	ldr	r3, [pc, #232]	; (800d04c <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cf62:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800cf66:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cf6a:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cf6c:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 800cf70:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf74:	4b36      	ldr	r3, [pc, #216]	; (800d050 <pvPortMalloc+0x118>)
 800cf76:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf78:	4b36      	ldr	r3, [pc, #216]	; (800d054 <pvPortMalloc+0x11c>)
 800cf7a:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf7c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800cf80:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cf82:	6807      	ldr	r7, [r0, #0]
 800cf84:	4227      	tst	r7, r4
 800cf86:	d153      	bne.n	800d030 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 800cf88:	2c00      	cmp	r4, #0
 800cf8a:	d044      	beq.n	800d016 <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 800cf8c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cf90:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cf92:	bf1c      	itt	ne
 800cf94:	f023 0307 	bicne.w	r3, r3, #7
 800cf98:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cf9a:	2b00      	cmp	r3, #0
 800cf9c:	d048      	beq.n	800d030 <pvPortMalloc+0xf8>
 800cf9e:	4a2d      	ldr	r2, [pc, #180]	; (800d054 <pvPortMalloc+0x11c>)
 800cfa0:	6816      	ldr	r6, [r2, #0]
 800cfa2:	429e      	cmp	r6, r3
 800cfa4:	4690      	mov	r8, r2
 800cfa6:	d343      	bcc.n	800d030 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 800cfa8:	4a27      	ldr	r2, [pc, #156]	; (800d048 <pvPortMalloc+0x110>)
 800cfaa:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cfac:	6869      	ldr	r1, [r5, #4]
 800cfae:	4299      	cmp	r1, r3
 800cfb0:	d201      	bcs.n	800cfb6 <pvPortMalloc+0x7e>
 800cfb2:	6828      	ldr	r0, [r5, #0]
 800cfb4:	b9a8      	cbnz	r0, 800cfe2 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 800cfb6:	f8dc 0000 	ldr.w	r0, [ip]
 800cfba:	42a8      	cmp	r0, r5
 800cfbc:	d038      	beq.n	800d030 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cfbe:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cfc0:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cfc2:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cfc4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cfc6:	2910      	cmp	r1, #16
 800cfc8:	d912      	bls.n	800cff0 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cfca:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cfcc:	0742      	lsls	r2, r0, #29
 800cfce:	d00b      	beq.n	800cfe8 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cfd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfd4:	f383 8811 	msr	BASEPRI, r3
 800cfd8:	f3bf 8f6f 	isb	sy
 800cfdc:	f3bf 8f4f 	dsb	sy
 800cfe0:	e7fe      	b.n	800cfe0 <pvPortMalloc+0xa8>
 800cfe2:	462a      	mov	r2, r5
 800cfe4:	4605      	mov	r5, r0
 800cfe6:	e7e1      	b.n	800cfac <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cfe8:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800cfea:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800cfec:	f7ff ff80 	bl	800cef0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cff0:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cff2:	4917      	ldr	r1, [pc, #92]	; (800d050 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 800cff4:	4a18      	ldr	r2, [pc, #96]	; (800d058 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cff6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cff8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cffa:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800cffc:	2300      	movs	r3, #0
 800cffe:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800d000:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d002:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d006:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800d008:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d00c:	bf38      	it	cc
 800d00e:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d010:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d012:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800d014:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d016:	f001 f9e5 	bl	800e3e4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d01a:	0763      	lsls	r3, r4, #29
 800d01c:	d00a      	beq.n	800d034 <pvPortMalloc+0xfc>
 800d01e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d022:	f383 8811 	msr	BASEPRI, r3
 800d026:	f3bf 8f6f 	isb	sy
 800d02a:	f3bf 8f4f 	dsb	sy
 800d02e:	e7fe      	b.n	800d02e <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 800d030:	2400      	movs	r4, #0
 800d032:	e7f0      	b.n	800d016 <pvPortMalloc+0xde>
}
 800d034:	4620      	mov	r0, r4
 800d036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d03a:	bf00      	nop
 800d03c:	2000fa30 	.word	0x2000fa30
 800d040:	2001fa34 	.word	0x2001fa34
 800d044:	2000fa34 	.word	0x2000fa34
 800d048:	2001fa48 	.word	0x2001fa48
 800d04c:	2001fa2b 	.word	0x2001fa2b
 800d050:	2001fa3c 	.word	0x2001fa3c
 800d054:	2001fa38 	.word	0x2001fa38
 800d058:	2001fa40 	.word	0x2001fa40

0800d05c <vPortFree>:
{
 800d05c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800d05e:	4604      	mov	r4, r0
 800d060:	b390      	cbz	r0, 800d0c8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d062:	4a1a      	ldr	r2, [pc, #104]	; (800d0cc <vPortFree+0x70>)
 800d064:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d068:	6812      	ldr	r2, [r2, #0]
 800d06a:	4213      	tst	r3, r2
 800d06c:	d108      	bne.n	800d080 <vPortFree+0x24>
 800d06e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d072:	f383 8811 	msr	BASEPRI, r3
 800d076:	f3bf 8f6f 	isb	sy
 800d07a:	f3bf 8f4f 	dsb	sy
 800d07e:	e7fe      	b.n	800d07e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d080:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d084:	b141      	cbz	r1, 800d098 <vPortFree+0x3c>
 800d086:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d08a:	f383 8811 	msr	BASEPRI, r3
 800d08e:	f3bf 8f6f 	isb	sy
 800d092:	f3bf 8f4f 	dsb	sy
 800d096:	e7fe      	b.n	800d096 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d098:	ea23 0302 	bic.w	r3, r3, r2
 800d09c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d0a0:	f001 f8fc 	bl	800e29c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d0a4:	4a0a      	ldr	r2, [pc, #40]	; (800d0d0 <vPortFree+0x74>)
 800d0a6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d0aa:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d0ac:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d0b0:	440b      	add	r3, r1
 800d0b2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d0b4:	f7ff ff1c 	bl	800cef0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d0b8:	4a06      	ldr	r2, [pc, #24]	; (800d0d4 <vPortFree+0x78>)
 800d0ba:	6813      	ldr	r3, [r2, #0]
}
 800d0bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d0c0:	3301      	adds	r3, #1
 800d0c2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d0c4:	f001 b98e 	b.w	800e3e4 <xTaskResumeAll>
}
 800d0c8:	bd10      	pop	{r4, pc}
 800d0ca:	bf00      	nop
 800d0cc:	2001fa34 	.word	0x2001fa34
 800d0d0:	2001fa38 	.word	0x2001fa38
 800d0d4:	2001fa44 	.word	0x2001fa44

0800d0d8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d0d8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d0dc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d0e0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d0e4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d0e6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d0e8:	2300      	movs	r3, #0
 800d0ea:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d0ec:	4770      	bx	lr

0800d0ee <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d0ee:	2300      	movs	r3, #0
 800d0f0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d0f2:	4770      	bx	lr

0800d0f4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d0f4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d0f6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d0f8:	689a      	ldr	r2, [r3, #8]
 800d0fa:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d0fc:	689a      	ldr	r2, [r3, #8]
 800d0fe:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d100:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d102:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d104:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d106:	3301      	adds	r3, #1
 800d108:	6003      	str	r3, [r0, #0]
}
 800d10a:	4770      	bx	lr

0800d10c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d10c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d10e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d110:	1c63      	adds	r3, r4, #1
 800d112:	d10a      	bne.n	800d12a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d114:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d116:	685a      	ldr	r2, [r3, #4]
 800d118:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d11a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d11c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d11e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d120:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d122:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d124:	3301      	adds	r3, #1
 800d126:	6003      	str	r3, [r0, #0]
}
 800d128:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d12a:	f100 0208 	add.w	r2, r0, #8
 800d12e:	4613      	mov	r3, r2
 800d130:	6852      	ldr	r2, [r2, #4]
 800d132:	6815      	ldr	r5, [r2, #0]
 800d134:	42a5      	cmp	r5, r4
 800d136:	d9fa      	bls.n	800d12e <vListInsert+0x22>
 800d138:	e7ed      	b.n	800d116 <vListInsert+0xa>

0800d13a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d13a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d13e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d140:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d142:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d144:	6859      	ldr	r1, [r3, #4]
 800d146:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d148:	bf08      	it	eq
 800d14a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d14c:	2200      	movs	r2, #0
 800d14e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d150:	681a      	ldr	r2, [r3, #0]
 800d152:	3a01      	subs	r2, #1
 800d154:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d156:	6818      	ldr	r0, [r3, #0]
}
 800d158:	4770      	bx	lr
	...

0800d15c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d15c:	4808      	ldr	r0, [pc, #32]	; (800d180 <prvPortStartFirstTask+0x24>)
 800d15e:	6800      	ldr	r0, [r0, #0]
 800d160:	6800      	ldr	r0, [r0, #0]
 800d162:	f380 8808 	msr	MSP, r0
 800d166:	f04f 0000 	mov.w	r0, #0
 800d16a:	f380 8814 	msr	CONTROL, r0
 800d16e:	b662      	cpsie	i
 800d170:	b661      	cpsie	f
 800d172:	f3bf 8f4f 	dsb	sy
 800d176:	f3bf 8f6f 	isb	sy
 800d17a:	df00      	svc	0
 800d17c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d17e:	0000      	.short	0x0000
 800d180:	e000ed08 	.word	0xe000ed08

0800d184 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d184:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d194 <vPortEnableVFP+0x10>
 800d188:	6801      	ldr	r1, [r0, #0]
 800d18a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d18e:	6001      	str	r1, [r0, #0]
 800d190:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d192:	0000      	.short	0x0000
 800d194:	e000ed88 	.word	0xe000ed88

0800d198 <prvTaskExitError>:
{
 800d198:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d19a:	2300      	movs	r3, #0
 800d19c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d19e:	4b0d      	ldr	r3, [pc, #52]	; (800d1d4 <prvTaskExitError+0x3c>)
 800d1a0:	681b      	ldr	r3, [r3, #0]
 800d1a2:	3301      	adds	r3, #1
 800d1a4:	d008      	beq.n	800d1b8 <prvTaskExitError+0x20>
 800d1a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1aa:	f383 8811 	msr	BASEPRI, r3
 800d1ae:	f3bf 8f6f 	isb	sy
 800d1b2:	f3bf 8f4f 	dsb	sy
 800d1b6:	e7fe      	b.n	800d1b6 <prvTaskExitError+0x1e>
 800d1b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1bc:	f383 8811 	msr	BASEPRI, r3
 800d1c0:	f3bf 8f6f 	isb	sy
 800d1c4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d1c8:	9b01      	ldr	r3, [sp, #4]
 800d1ca:	2b00      	cmp	r3, #0
 800d1cc:	d0fc      	beq.n	800d1c8 <prvTaskExitError+0x30>
}
 800d1ce:	b002      	add	sp, #8
 800d1d0:	4770      	bx	lr
 800d1d2:	bf00      	nop
 800d1d4:	20000060 	.word	0x20000060

0800d1d8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d1d8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800d1dc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d1e0:	4b07      	ldr	r3, [pc, #28]	; (800d200 <pxPortInitialiseStack+0x28>)
 800d1e2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d1e6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d1ea:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d1ee:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d1f2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d1f6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d1fa:	3844      	subs	r0, #68	; 0x44
 800d1fc:	4770      	bx	lr
 800d1fe:	bf00      	nop
 800d200:	0800d199 	.word	0x0800d199
	...

0800d210 <SVC_Handler>:
	__asm volatile (
 800d210:	4b07      	ldr	r3, [pc, #28]	; (800d230 <pxCurrentTCBConst2>)
 800d212:	6819      	ldr	r1, [r3, #0]
 800d214:	6808      	ldr	r0, [r1, #0]
 800d216:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d21a:	f380 8809 	msr	PSP, r0
 800d21e:	f3bf 8f6f 	isb	sy
 800d222:	f04f 0000 	mov.w	r0, #0
 800d226:	f380 8811 	msr	BASEPRI, r0
 800d22a:	4770      	bx	lr
 800d22c:	f3af 8000 	nop.w

0800d230 <pxCurrentTCBConst2>:
 800d230:	2001fa58 	.word	0x2001fa58

0800d234 <vPortEnterCritical>:
 800d234:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d238:	f383 8811 	msr	BASEPRI, r3
 800d23c:	f3bf 8f6f 	isb	sy
 800d240:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d244:	4a0a      	ldr	r2, [pc, #40]	; (800d270 <vPortEnterCritical+0x3c>)
 800d246:	6813      	ldr	r3, [r2, #0]
 800d248:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d24a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d24c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d24e:	d10d      	bne.n	800d26c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d250:	4b08      	ldr	r3, [pc, #32]	; (800d274 <vPortEnterCritical+0x40>)
 800d252:	681b      	ldr	r3, [r3, #0]
 800d254:	f013 0fff 	tst.w	r3, #255	; 0xff
 800d258:	d008      	beq.n	800d26c <vPortEnterCritical+0x38>
 800d25a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d25e:	f383 8811 	msr	BASEPRI, r3
 800d262:	f3bf 8f6f 	isb	sy
 800d266:	f3bf 8f4f 	dsb	sy
 800d26a:	e7fe      	b.n	800d26a <vPortEnterCritical+0x36>
}
 800d26c:	4770      	bx	lr
 800d26e:	bf00      	nop
 800d270:	20000060 	.word	0x20000060
 800d274:	e000ed04 	.word	0xe000ed04

0800d278 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d278:	4a08      	ldr	r2, [pc, #32]	; (800d29c <vPortExitCritical+0x24>)
 800d27a:	6813      	ldr	r3, [r2, #0]
 800d27c:	b943      	cbnz	r3, 800d290 <vPortExitCritical+0x18>
 800d27e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d282:	f383 8811 	msr	BASEPRI, r3
 800d286:	f3bf 8f6f 	isb	sy
 800d28a:	f3bf 8f4f 	dsb	sy
 800d28e:	e7fe      	b.n	800d28e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d290:	3b01      	subs	r3, #1
 800d292:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d294:	b90b      	cbnz	r3, 800d29a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d296:	f383 8811 	msr	BASEPRI, r3
}
 800d29a:	4770      	bx	lr
 800d29c:	20000060 	.word	0x20000060

0800d2a0 <PendSV_Handler>:
	__asm volatile
 800d2a0:	f3ef 8009 	mrs	r0, PSP
 800d2a4:	f3bf 8f6f 	isb	sy
 800d2a8:	4b15      	ldr	r3, [pc, #84]	; (800d300 <pxCurrentTCBConst>)
 800d2aa:	681a      	ldr	r2, [r3, #0]
 800d2ac:	f01e 0f10 	tst.w	lr, #16
 800d2b0:	bf08      	it	eq
 800d2b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d2b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2ba:	6010      	str	r0, [r2, #0]
 800d2bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d2c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d2c4:	f380 8811 	msr	BASEPRI, r0
 800d2c8:	f3bf 8f4f 	dsb	sy
 800d2cc:	f3bf 8f6f 	isb	sy
 800d2d0:	f001 f98c 	bl	800e5ec <vTaskSwitchContext>
 800d2d4:	f04f 0000 	mov.w	r0, #0
 800d2d8:	f380 8811 	msr	BASEPRI, r0
 800d2dc:	bc09      	pop	{r0, r3}
 800d2de:	6819      	ldr	r1, [r3, #0]
 800d2e0:	6808      	ldr	r0, [r1, #0]
 800d2e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e6:	f01e 0f10 	tst.w	lr, #16
 800d2ea:	bf08      	it	eq
 800d2ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d2f0:	f380 8809 	msr	PSP, r0
 800d2f4:	f3bf 8f6f 	isb	sy
 800d2f8:	4770      	bx	lr
 800d2fa:	bf00      	nop
 800d2fc:	f3af 8000 	nop.w

0800d300 <pxCurrentTCBConst>:
 800d300:	2001fa58 	.word	0x2001fa58

0800d304 <xPortSysTickHandler>:
{
 800d304:	b508      	push	{r3, lr}
	__asm volatile
 800d306:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d30a:	f383 8811 	msr	BASEPRI, r3
 800d30e:	f3bf 8f6f 	isb	sy
 800d312:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d316:	f000 ffcf 	bl	800e2b8 <xTaskIncrementTick>
 800d31a:	b118      	cbz	r0, 800d324 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d31c:	4b03      	ldr	r3, [pc, #12]	; (800d32c <xPortSysTickHandler+0x28>)
 800d31e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d322:	601a      	str	r2, [r3, #0]
	__asm volatile
 800d324:	2300      	movs	r3, #0
 800d326:	f383 8811 	msr	BASEPRI, r3
}
 800d32a:	bd08      	pop	{r3, pc}
 800d32c:	e000ed04 	.word	0xe000ed04

0800d330 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d330:	4a08      	ldr	r2, [pc, #32]	; (800d354 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d332:	4909      	ldr	r1, [pc, #36]	; (800d358 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d334:	2300      	movs	r3, #0
 800d336:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d338:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d33a:	4b08      	ldr	r3, [pc, #32]	; (800d35c <vPortSetupTimerInterrupt+0x2c>)
 800d33c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d340:	681b      	ldr	r3, [r3, #0]
 800d342:	fbb3 f3f1 	udiv	r3, r3, r1
 800d346:	4906      	ldr	r1, [pc, #24]	; (800d360 <vPortSetupTimerInterrupt+0x30>)
 800d348:	3b01      	subs	r3, #1
 800d34a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d34c:	2307      	movs	r3, #7
 800d34e:	6013      	str	r3, [r2, #0]
}
 800d350:	4770      	bx	lr
 800d352:	bf00      	nop
 800d354:	e000e010 	.word	0xe000e010
 800d358:	e000e018 	.word	0xe000e018
 800d35c:	20000054 	.word	0x20000054
 800d360:	e000e014 	.word	0xe000e014

0800d364 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d364:	4b38      	ldr	r3, [pc, #224]	; (800d448 <xPortStartScheduler+0xe4>)
 800d366:	4a39      	ldr	r2, [pc, #228]	; (800d44c <xPortStartScheduler+0xe8>)
{
 800d368:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d36a:	6819      	ldr	r1, [r3, #0]
 800d36c:	4291      	cmp	r1, r2
 800d36e:	d108      	bne.n	800d382 <xPortStartScheduler+0x1e>
	__asm volatile
 800d370:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d374:	f383 8811 	msr	BASEPRI, r3
 800d378:	f3bf 8f6f 	isb	sy
 800d37c:	f3bf 8f4f 	dsb	sy
 800d380:	e7fe      	b.n	800d380 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d382:	681a      	ldr	r2, [r3, #0]
 800d384:	4b32      	ldr	r3, [pc, #200]	; (800d450 <xPortStartScheduler+0xec>)
 800d386:	429a      	cmp	r2, r3
 800d388:	d108      	bne.n	800d39c <xPortStartScheduler+0x38>
 800d38a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d38e:	f383 8811 	msr	BASEPRI, r3
 800d392:	f3bf 8f6f 	isb	sy
 800d396:	f3bf 8f4f 	dsb	sy
 800d39a:	e7fe      	b.n	800d39a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d39c:	4b2d      	ldr	r3, [pc, #180]	; (800d454 <xPortStartScheduler+0xf0>)
 800d39e:	781a      	ldrb	r2, [r3, #0]
 800d3a0:	b2d2      	uxtb	r2, r2
 800d3a2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d3a4:	22ff      	movs	r2, #255	; 0xff
 800d3a6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d3a8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d3aa:	4a2b      	ldr	r2, [pc, #172]	; (800d458 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d3ac:	b2db      	uxtb	r3, r3
 800d3ae:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d3b2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d3b6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800d3ba:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d3bc:	4a27      	ldr	r2, [pc, #156]	; (800d45c <xPortStartScheduler+0xf8>)
 800d3be:	2307      	movs	r3, #7
 800d3c0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d3c2:	2100      	movs	r1, #0
 800d3c4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800d3c8:	0600      	lsls	r0, r0, #24
 800d3ca:	f103 34ff 	add.w	r4, r3, #4294967295
 800d3ce:	d40c      	bmi.n	800d3ea <xPortStartScheduler+0x86>
 800d3d0:	b111      	cbz	r1, 800d3d8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d3d2:	2b03      	cmp	r3, #3
 800d3d4:	6013      	str	r3, [r2, #0]
 800d3d6:	d011      	beq.n	800d3fc <xPortStartScheduler+0x98>
 800d3d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3dc:	f383 8811 	msr	BASEPRI, r3
 800d3e0:	f3bf 8f6f 	isb	sy
 800d3e4:	f3bf 8f4f 	dsb	sy
 800d3e8:	e7fe      	b.n	800d3e8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d3ea:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d3ee:	005b      	lsls	r3, r3, #1
 800d3f0:	b2db      	uxtb	r3, r3
 800d3f2:	f88d 3003 	strb.w	r3, [sp, #3]
 800d3f6:	2101      	movs	r1, #1
 800d3f8:	4623      	mov	r3, r4
 800d3fa:	e7e3      	b.n	800d3c4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d3fc:	f44f 7340 	mov.w	r3, #768	; 0x300
 800d400:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d402:	9b01      	ldr	r3, [sp, #4]
 800d404:	4a13      	ldr	r2, [pc, #76]	; (800d454 <xPortStartScheduler+0xf0>)
 800d406:	b2db      	uxtb	r3, r3
 800d408:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d40a:	4b15      	ldr	r3, [pc, #84]	; (800d460 <xPortStartScheduler+0xfc>)
 800d40c:	681a      	ldr	r2, [r3, #0]
 800d40e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800d412:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d414:	681a      	ldr	r2, [r3, #0]
 800d416:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800d41a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800d41c:	f7ff ff88 	bl	800d330 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d420:	4b10      	ldr	r3, [pc, #64]	; (800d464 <xPortStartScheduler+0x100>)
 800d422:	2400      	movs	r4, #0
 800d424:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800d426:	f7ff fead 	bl	800d184 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d42a:	4a0f      	ldr	r2, [pc, #60]	; (800d468 <xPortStartScheduler+0x104>)
 800d42c:	6813      	ldr	r3, [r2, #0]
 800d42e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d432:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 800d434:	f7ff fe92 	bl	800d15c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d438:	f001 f8d8 	bl	800e5ec <vTaskSwitchContext>
	prvTaskExitError();
 800d43c:	f7ff feac 	bl	800d198 <prvTaskExitError>
}
 800d440:	4620      	mov	r0, r4
 800d442:	b002      	add	sp, #8
 800d444:	bd10      	pop	{r4, pc}
 800d446:	bf00      	nop
 800d448:	e000ed00 	.word	0xe000ed00
 800d44c:	410fc271 	.word	0x410fc271
 800d450:	410fc270 	.word	0x410fc270
 800d454:	e000e400 	.word	0xe000e400
 800d458:	2001fa50 	.word	0x2001fa50
 800d45c:	2001fa54 	.word	0x2001fa54
 800d460:	e000ed20 	.word	0xe000ed20
 800d464:	20000060 	.word	0x20000060
 800d468:	e000ef34 	.word	0xe000ef34

0800d46c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d46c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d470:	2b0f      	cmp	r3, #15
 800d472:	d90e      	bls.n	800d492 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d474:	4a10      	ldr	r2, [pc, #64]	; (800d4b8 <vPortValidateInterruptPriority+0x4c>)
 800d476:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d478:	4a10      	ldr	r2, [pc, #64]	; (800d4bc <vPortValidateInterruptPriority+0x50>)
 800d47a:	7812      	ldrb	r2, [r2, #0]
 800d47c:	429a      	cmp	r2, r3
 800d47e:	d908      	bls.n	800d492 <vPortValidateInterruptPriority+0x26>
 800d480:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d484:	f383 8811 	msr	BASEPRI, r3
 800d488:	f3bf 8f6f 	isb	sy
 800d48c:	f3bf 8f4f 	dsb	sy
 800d490:	e7fe      	b.n	800d490 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d492:	4b0b      	ldr	r3, [pc, #44]	; (800d4c0 <vPortValidateInterruptPriority+0x54>)
 800d494:	4a0b      	ldr	r2, [pc, #44]	; (800d4c4 <vPortValidateInterruptPriority+0x58>)
 800d496:	681b      	ldr	r3, [r3, #0]
 800d498:	6812      	ldr	r2, [r2, #0]
 800d49a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d49e:	4293      	cmp	r3, r2
 800d4a0:	d908      	bls.n	800d4b4 <vPortValidateInterruptPriority+0x48>
 800d4a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4a6:	f383 8811 	msr	BASEPRI, r3
 800d4aa:	f3bf 8f6f 	isb	sy
 800d4ae:	f3bf 8f4f 	dsb	sy
 800d4b2:	e7fe      	b.n	800d4b2 <vPortValidateInterruptPriority+0x46>
	}
 800d4b4:	4770      	bx	lr
 800d4b6:	bf00      	nop
 800d4b8:	e000e3f0 	.word	0xe000e3f0
 800d4bc:	2001fa50 	.word	0x2001fa50
 800d4c0:	e000ed0c 	.word	0xe000ed0c
 800d4c4:	2001fa54 	.word	0x2001fa54

0800d4c8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800d4c8:	b510      	push	{r4, lr}
 800d4ca:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d4cc:	f7ff feb2 	bl	800d234 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d4d0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d4d2:	f7ff fed1 	bl	800d278 <vPortExitCritical>

	return xReturn;
}
 800d4d6:	fab4 f084 	clz	r0, r4
 800d4da:	0940      	lsrs	r0, r0, #5
 800d4dc:	bd10      	pop	{r4, pc}

0800d4de <prvCopyDataToQueue>:
{
 800d4de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d4e0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d4e2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d4e4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800d4e6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d4e8:	b952      	cbnz	r2, 800d500 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d4ea:	6807      	ldr	r7, [r0, #0]
 800d4ec:	bb47      	cbnz	r7, 800d540 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d4ee:	6880      	ldr	r0, [r0, #8]
 800d4f0:	f001 f9e2 	bl	800e8b8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d4f4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d4f6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4f8:	3601      	adds	r6, #1
 800d4fa:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d4fc:	4628      	mov	r0, r5
 800d4fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d500:	b965      	cbnz	r5, 800d51c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d502:	6840      	ldr	r0, [r0, #4]
 800d504:	f015 ff98 	bl	8023438 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d508:	6863      	ldr	r3, [r4, #4]
 800d50a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d50c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d50e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d510:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d512:	4293      	cmp	r3, r2
 800d514:	d3f0      	bcc.n	800d4f8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d516:	6823      	ldr	r3, [r4, #0]
 800d518:	6063      	str	r3, [r4, #4]
 800d51a:	e7ed      	b.n	800d4f8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d51c:	68c0      	ldr	r0, [r0, #12]
 800d51e:	f015 ff8b 	bl	8023438 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d522:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d524:	68e3      	ldr	r3, [r4, #12]
 800d526:	4251      	negs	r1, r2
 800d528:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d52a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d52c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d52e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d530:	bf3e      	ittt	cc
 800d532:	68a3      	ldrcc	r3, [r4, #8]
 800d534:	185b      	addcc	r3, r3, r1
 800d536:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d538:	2d02      	cmp	r5, #2
 800d53a:	d101      	bne.n	800d540 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d53c:	b116      	cbz	r6, 800d544 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800d53e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800d540:	2500      	movs	r5, #0
 800d542:	e7d9      	b.n	800d4f8 <prvCopyDataToQueue+0x1a>
 800d544:	4635      	mov	r5, r6
 800d546:	e7d7      	b.n	800d4f8 <prvCopyDataToQueue+0x1a>

0800d548 <prvCopyDataFromQueue>:
{
 800d548:	4603      	mov	r3, r0
 800d54a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d54c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800d54e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d550:	b16a      	cbz	r2, 800d56e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d552:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d554:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d556:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d558:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d55a:	bf28      	it	cs
 800d55c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d55e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d560:	bf28      	it	cs
 800d562:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d564:	68d9      	ldr	r1, [r3, #12]
}
 800d566:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d56a:	f015 bf65 	b.w	8023438 <memcpy>
}
 800d56e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d572:	4770      	bx	lr

0800d574 <prvUnlockQueue>:
{
 800d574:	b570      	push	{r4, r5, r6, lr}
 800d576:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800d578:	f7ff fe5c 	bl	800d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d57c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d580:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800d584:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d586:	2d00      	cmp	r5, #0
 800d588:	dc14      	bgt.n	800d5b4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800d58a:	23ff      	movs	r3, #255	; 0xff
 800d58c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d590:	f7ff fe72 	bl	800d278 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d594:	f7ff fe4e 	bl	800d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d598:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d59c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800d5a0:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d5a2:	2d00      	cmp	r5, #0
 800d5a4:	dc12      	bgt.n	800d5cc <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800d5a6:	23ff      	movs	r3, #255	; 0xff
 800d5a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800d5ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d5b0:	f7ff be62 	b.w	800d278 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d5b6:	2b00      	cmp	r3, #0
 800d5b8:	d0e7      	beq.n	800d58a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ba:	4630      	mov	r0, r6
 800d5bc:	f001 f898 	bl	800e6f0 <xTaskRemoveFromEventList>
 800d5c0:	b108      	cbz	r0, 800d5c6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800d5c2:	f001 f921 	bl	800e808 <vTaskMissedYield>
			--cTxLock;
 800d5c6:	3d01      	subs	r5, #1
 800d5c8:	b26d      	sxtb	r5, r5
 800d5ca:	e7dc      	b.n	800d586 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d5cc:	6923      	ldr	r3, [r4, #16]
 800d5ce:	2b00      	cmp	r3, #0
 800d5d0:	d0e9      	beq.n	800d5a6 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d5d2:	4630      	mov	r0, r6
 800d5d4:	f001 f88c 	bl	800e6f0 <xTaskRemoveFromEventList>
 800d5d8:	b108      	cbz	r0, 800d5de <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800d5da:	f001 f915 	bl	800e808 <vTaskMissedYield>
				--cRxLock;
 800d5de:	3d01      	subs	r5, #1
 800d5e0:	b26d      	sxtb	r5, r5
 800d5e2:	e7de      	b.n	800d5a2 <prvUnlockQueue+0x2e>

0800d5e4 <xQueueGenericReset>:
{
 800d5e4:	b538      	push	{r3, r4, r5, lr}
 800d5e6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d5e8:	4604      	mov	r4, r0
 800d5ea:	b940      	cbnz	r0, 800d5fe <xQueueGenericReset+0x1a>
 800d5ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5f0:	f383 8811 	msr	BASEPRI, r3
 800d5f4:	f3bf 8f6f 	isb	sy
 800d5f8:	f3bf 8f4f 	dsb	sy
 800d5fc:	e7fe      	b.n	800d5fc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800d5fe:	f7ff fe19 	bl	800d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d602:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800d606:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d608:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d60a:	434b      	muls	r3, r1
 800d60c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d60e:	1a5b      	subs	r3, r3, r1
 800d610:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d612:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d614:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d616:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800d618:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d61a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d61c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800d620:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800d624:	b995      	cbnz	r5, 800d64c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d626:	6923      	ldr	r3, [r4, #16]
 800d628:	b163      	cbz	r3, 800d644 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d62a:	f104 0010 	add.w	r0, r4, #16
 800d62e:	f001 f85f 	bl	800e6f0 <xTaskRemoveFromEventList>
 800d632:	b138      	cbz	r0, 800d644 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 800d634:	4b0a      	ldr	r3, [pc, #40]	; (800d660 <xQueueGenericReset+0x7c>)
 800d636:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d63a:	601a      	str	r2, [r3, #0]
 800d63c:	f3bf 8f4f 	dsb	sy
 800d640:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800d644:	f7ff fe18 	bl	800d278 <vPortExitCritical>
}
 800d648:	2001      	movs	r0, #1
 800d64a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d64c:	f104 0010 	add.w	r0, r4, #16
 800d650:	f7ff fd42 	bl	800d0d8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d654:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d658:	f7ff fd3e 	bl	800d0d8 <vListInitialise>
 800d65c:	e7f2      	b.n	800d644 <xQueueGenericReset+0x60>
 800d65e:	bf00      	nop
 800d660:	e000ed04 	.word	0xe000ed04

0800d664 <xQueueGenericCreateStatic>:
	{
 800d664:	b513      	push	{r0, r1, r4, lr}
 800d666:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d668:	b940      	cbnz	r0, 800d67c <xQueueGenericCreateStatic+0x18>
 800d66a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d66e:	f383 8811 	msr	BASEPRI, r3
 800d672:	f3bf 8f6f 	isb	sy
 800d676:	f3bf 8f4f 	dsb	sy
 800d67a:	e7fe      	b.n	800d67a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800d67c:	b943      	cbnz	r3, 800d690 <xQueueGenericCreateStatic+0x2c>
 800d67e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d682:	f383 8811 	msr	BASEPRI, r3
 800d686:	f3bf 8f6f 	isb	sy
 800d68a:	f3bf 8f4f 	dsb	sy
 800d68e:	e7fe      	b.n	800d68e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d690:	b14a      	cbz	r2, 800d6a6 <xQueueGenericCreateStatic+0x42>
 800d692:	b991      	cbnz	r1, 800d6ba <xQueueGenericCreateStatic+0x56>
 800d694:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d698:	f383 8811 	msr	BASEPRI, r3
 800d69c:	f3bf 8f6f 	isb	sy
 800d6a0:	f3bf 8f4f 	dsb	sy
 800d6a4:	e7fe      	b.n	800d6a4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d6a6:	b141      	cbz	r1, 800d6ba <xQueueGenericCreateStatic+0x56>
 800d6a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ac:	f383 8811 	msr	BASEPRI, r3
 800d6b0:	f3bf 8f6f 	isb	sy
 800d6b4:	f3bf 8f4f 	dsb	sy
 800d6b8:	e7fe      	b.n	800d6b8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d6ba:	2350      	movs	r3, #80	; 0x50
 800d6bc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d6be:	9b01      	ldr	r3, [sp, #4]
 800d6c0:	2b50      	cmp	r3, #80	; 0x50
 800d6c2:	d008      	beq.n	800d6d6 <xQueueGenericCreateStatic+0x72>
 800d6c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6c8:	f383 8811 	msr	BASEPRI, r3
 800d6cc:	f3bf 8f6f 	isb	sy
 800d6d0:	f3bf 8f4f 	dsb	sy
 800d6d4:	e7fe      	b.n	800d6d4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d6d6:	2900      	cmp	r1, #0
 800d6d8:	bf08      	it	eq
 800d6da:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d6dc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d6de:	6022      	str	r2, [r4, #0]
 800d6e0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d6e2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d6e6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800d6ea:	4619      	mov	r1, r3
 800d6ec:	4620      	mov	r0, r4
 800d6ee:	f7ff ff79 	bl	800d5e4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800d6f2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d6f6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800d6fa:	4620      	mov	r0, r4
 800d6fc:	b002      	add	sp, #8
 800d6fe:	bd10      	pop	{r4, pc}

0800d700 <xQueueGenericCreate>:
	{
 800d700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d702:	460d      	mov	r5, r1
 800d704:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d706:	4606      	mov	r6, r0
 800d708:	b940      	cbnz	r0, 800d71c <xQueueGenericCreate+0x1c>
 800d70a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d70e:	f383 8811 	msr	BASEPRI, r3
 800d712:	f3bf 8f6f 	isb	sy
 800d716:	f3bf 8f4f 	dsb	sy
 800d71a:	e7fe      	b.n	800d71a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d71c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d71e:	3050      	adds	r0, #80	; 0x50
 800d720:	f7ff fc0a 	bl	800cf38 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d724:	4604      	mov	r4, r0
 800d726:	b170      	cbz	r0, 800d746 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d728:	2300      	movs	r3, #0
 800d72a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d72e:	b165      	cbz	r5, 800d74a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d730:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800d734:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800d738:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800d73a:	2101      	movs	r1, #1
 800d73c:	4620      	mov	r0, r4
 800d73e:	f7ff ff51 	bl	800d5e4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800d742:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d746:	4620      	mov	r0, r4
 800d748:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d74a:	4603      	mov	r3, r0
 800d74c:	e7f2      	b.n	800d734 <xQueueGenericCreate+0x34>

0800d74e <xQueueCreateCountingSemaphoreStatic>:
	{
 800d74e:	b513      	push	{r0, r1, r4, lr}
 800d750:	4613      	mov	r3, r2
 800d752:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800d754:	b940      	cbnz	r0, 800d768 <xQueueCreateCountingSemaphoreStatic+0x1a>
 800d756:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d75a:	f383 8811 	msr	BASEPRI, r3
 800d75e:	f3bf 8f6f 	isb	sy
 800d762:	f3bf 8f4f 	dsb	sy
 800d766:	e7fe      	b.n	800d766 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d768:	4288      	cmp	r0, r1
 800d76a:	d208      	bcs.n	800d77e <xQueueCreateCountingSemaphoreStatic+0x30>
 800d76c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d770:	f383 8811 	msr	BASEPRI, r3
 800d774:	f3bf 8f6f 	isb	sy
 800d778:	f3bf 8f4f 	dsb	sy
 800d77c:	e7fe      	b.n	800d77c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800d77e:	2202      	movs	r2, #2
 800d780:	9200      	str	r2, [sp, #0]
 800d782:	2200      	movs	r2, #0
 800d784:	4611      	mov	r1, r2
 800d786:	f7ff ff6d 	bl	800d664 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800d78a:	b100      	cbz	r0, 800d78e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d78c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800d78e:	b002      	add	sp, #8
 800d790:	bd10      	pop	{r4, pc}

0800d792 <xQueueCreateCountingSemaphore>:
	{
 800d792:	b510      	push	{r4, lr}
 800d794:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800d796:	b940      	cbnz	r0, 800d7aa <xQueueCreateCountingSemaphore+0x18>
 800d798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d79c:	f383 8811 	msr	BASEPRI, r3
 800d7a0:	f3bf 8f6f 	isb	sy
 800d7a4:	f3bf 8f4f 	dsb	sy
 800d7a8:	e7fe      	b.n	800d7a8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d7aa:	4288      	cmp	r0, r1
 800d7ac:	d208      	bcs.n	800d7c0 <xQueueCreateCountingSemaphore+0x2e>
 800d7ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7b2:	f383 8811 	msr	BASEPRI, r3
 800d7b6:	f3bf 8f6f 	isb	sy
 800d7ba:	f3bf 8f4f 	dsb	sy
 800d7be:	e7fe      	b.n	800d7be <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800d7c0:	2202      	movs	r2, #2
 800d7c2:	2100      	movs	r1, #0
 800d7c4:	f7ff ff9c 	bl	800d700 <xQueueGenericCreate>
		if( xHandle != NULL )
 800d7c8:	b100      	cbz	r0, 800d7cc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d7ca:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800d7cc:	bd10      	pop	{r4, pc}
	...

0800d7d0 <xQueueGenericSend>:
{
 800d7d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d7d4:	4688      	mov	r8, r1
 800d7d6:	9201      	str	r2, [sp, #4]
 800d7d8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800d7da:	4604      	mov	r4, r0
 800d7dc:	b940      	cbnz	r0, 800d7f0 <xQueueGenericSend+0x20>
 800d7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7e2:	f383 8811 	msr	BASEPRI, r3
 800d7e6:	f3bf 8f6f 	isb	sy
 800d7ea:	f3bf 8f4f 	dsb	sy
 800d7ee:	e7fe      	b.n	800d7ee <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d7f0:	b951      	cbnz	r1, 800d808 <xQueueGenericSend+0x38>
 800d7f2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d7f4:	b143      	cbz	r3, 800d808 <xQueueGenericSend+0x38>
 800d7f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7fa:	f383 8811 	msr	BASEPRI, r3
 800d7fe:	f3bf 8f6f 	isb	sy
 800d802:	f3bf 8f4f 	dsb	sy
 800d806:	e7fe      	b.n	800d806 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d808:	2f02      	cmp	r7, #2
 800d80a:	d10b      	bne.n	800d824 <xQueueGenericSend+0x54>
 800d80c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d80e:	2b01      	cmp	r3, #1
 800d810:	d008      	beq.n	800d824 <xQueueGenericSend+0x54>
 800d812:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d816:	f383 8811 	msr	BASEPRI, r3
 800d81a:	f3bf 8f6f 	isb	sy
 800d81e:	f3bf 8f4f 	dsb	sy
 800d822:	e7fe      	b.n	800d822 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d824:	f000 fff6 	bl	800e814 <xTaskGetSchedulerState>
 800d828:	4606      	mov	r6, r0
 800d82a:	b950      	cbnz	r0, 800d842 <xQueueGenericSend+0x72>
 800d82c:	9b01      	ldr	r3, [sp, #4]
 800d82e:	b14b      	cbz	r3, 800d844 <xQueueGenericSend+0x74>
 800d830:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d834:	f383 8811 	msr	BASEPRI, r3
 800d838:	f3bf 8f6f 	isb	sy
 800d83c:	f3bf 8f4f 	dsb	sy
 800d840:	e7fe      	b.n	800d840 <xQueueGenericSend+0x70>
 800d842:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800d844:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800d930 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 800d848:	f04f 0900 	mov.w	r9, #0
 800d84c:	e037      	b.n	800d8be <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d84e:	9d01      	ldr	r5, [sp, #4]
 800d850:	b91d      	cbnz	r5, 800d85a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 800d852:	f7ff fd11 	bl	800d278 <vPortExitCritical>
			return errQUEUE_FULL;
 800d856:	2000      	movs	r0, #0
 800d858:	e050      	b.n	800d8fc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800d85a:	b916      	cbnz	r6, 800d862 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d85c:	a802      	add	r0, sp, #8
 800d85e:	f000 ff8b 	bl	800e778 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800d862:	f7ff fd09 	bl	800d278 <vPortExitCritical>
		vTaskSuspendAll();
 800d866:	f000 fd19 	bl	800e29c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d86a:	f7ff fce3 	bl	800d234 <vPortEnterCritical>
 800d86e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d872:	2bff      	cmp	r3, #255	; 0xff
 800d874:	bf08      	it	eq
 800d876:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800d87a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d87e:	2bff      	cmp	r3, #255	; 0xff
 800d880:	bf08      	it	eq
 800d882:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800d886:	f7ff fcf7 	bl	800d278 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d88a:	a901      	add	r1, sp, #4
 800d88c:	a802      	add	r0, sp, #8
 800d88e:	f000 ff7f 	bl	800e790 <xTaskCheckForTimeOut>
 800d892:	2800      	cmp	r0, #0
 800d894:	d146      	bne.n	800d924 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d896:	f7ff fccd 	bl	800d234 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d89a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d89c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d89e:	429a      	cmp	r2, r3
 800d8a0:	d12f      	bne.n	800d902 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d8a2:	f7ff fce9 	bl	800d278 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d8a6:	9901      	ldr	r1, [sp, #4]
 800d8a8:	f104 0010 	add.w	r0, r4, #16
 800d8ac:	f000 fee8 	bl	800e680 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	f7ff fe5f 	bl	800d574 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800d8b6:	f000 fd95 	bl	800e3e4 <xTaskResumeAll>
 800d8ba:	b350      	cbz	r0, 800d912 <xQueueGenericSend+0x142>
 800d8bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800d8be:	f7ff fcb9 	bl	800d234 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d8c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d8c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d8c6:	429a      	cmp	r2, r3
 800d8c8:	d301      	bcc.n	800d8ce <xQueueGenericSend+0xfe>
 800d8ca:	2f02      	cmp	r7, #2
 800d8cc:	d1bf      	bne.n	800d84e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d8ce:	463a      	mov	r2, r7
 800d8d0:	4641      	mov	r1, r8
 800d8d2:	4620      	mov	r0, r4
 800d8d4:	f7ff fe03 	bl	800d4de <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d8d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d8da:	b11b      	cbz	r3, 800d8e4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8dc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d8e0:	f000 ff06 	bl	800e6f0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800d8e4:	b138      	cbz	r0, 800d8f6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 800d8e6:	4b12      	ldr	r3, [pc, #72]	; (800d930 <xQueueGenericSend+0x160>)
 800d8e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d8ec:	601a      	str	r2, [r3, #0]
 800d8ee:	f3bf 8f4f 	dsb	sy
 800d8f2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d8f6:	f7ff fcbf 	bl	800d278 <vPortExitCritical>
				return pdPASS;
 800d8fa:	2001      	movs	r0, #1
}
 800d8fc:	b004      	add	sp, #16
 800d8fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 800d902:	f7ff fcb9 	bl	800d278 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800d906:	4620      	mov	r0, r4
 800d908:	f7ff fe34 	bl	800d574 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800d90c:	f000 fd6a 	bl	800e3e4 <xTaskResumeAll>
 800d910:	e7d4      	b.n	800d8bc <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 800d912:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800d916:	f8ca 3000 	str.w	r3, [sl]
 800d91a:	f3bf 8f4f 	dsb	sy
 800d91e:	f3bf 8f6f 	isb	sy
 800d922:	e7cb      	b.n	800d8bc <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 800d924:	4620      	mov	r0, r4
 800d926:	f7ff fe25 	bl	800d574 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800d92a:	f000 fd5b 	bl	800e3e4 <xTaskResumeAll>
 800d92e:	e792      	b.n	800d856 <xQueueGenericSend+0x86>
 800d930:	e000ed04 	.word	0xe000ed04

0800d934 <xQueueGenericSendFromISR>:
{
 800d934:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d938:	4689      	mov	r9, r1
 800d93a:	4690      	mov	r8, r2
 800d93c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800d93e:	4604      	mov	r4, r0
 800d940:	b940      	cbnz	r0, 800d954 <xQueueGenericSendFromISR+0x20>
 800d942:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d946:	f383 8811 	msr	BASEPRI, r3
 800d94a:	f3bf 8f6f 	isb	sy
 800d94e:	f3bf 8f4f 	dsb	sy
 800d952:	e7fe      	b.n	800d952 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d954:	b951      	cbnz	r1, 800d96c <xQueueGenericSendFromISR+0x38>
 800d956:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d958:	b143      	cbz	r3, 800d96c <xQueueGenericSendFromISR+0x38>
 800d95a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d95e:	f383 8811 	msr	BASEPRI, r3
 800d962:	f3bf 8f6f 	isb	sy
 800d966:	f3bf 8f4f 	dsb	sy
 800d96a:	e7fe      	b.n	800d96a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d96c:	2f02      	cmp	r7, #2
 800d96e:	d10b      	bne.n	800d988 <xQueueGenericSendFromISR+0x54>
 800d970:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d972:	2b01      	cmp	r3, #1
 800d974:	d008      	beq.n	800d988 <xQueueGenericSendFromISR+0x54>
 800d976:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d97a:	f383 8811 	msr	BASEPRI, r3
 800d97e:	f3bf 8f6f 	isb	sy
 800d982:	f3bf 8f4f 	dsb	sy
 800d986:	e7fe      	b.n	800d986 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d988:	f7ff fd70 	bl	800d46c <vPortValidateInterruptPriority>
	__asm volatile
 800d98c:	f3ef 8611 	mrs	r6, BASEPRI
 800d990:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d994:	f383 8811 	msr	BASEPRI, r3
 800d998:	f3bf 8f6f 	isb	sy
 800d99c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d9a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d9a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d9a4:	429a      	cmp	r2, r3
 800d9a6:	d301      	bcc.n	800d9ac <xQueueGenericSendFromISR+0x78>
 800d9a8:	2f02      	cmp	r7, #2
 800d9aa:	d123      	bne.n	800d9f4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d9ac:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d9b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d9b2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d9b4:	463a      	mov	r2, r7
 800d9b6:	4649      	mov	r1, r9
 800d9b8:	4620      	mov	r0, r4
 800d9ba:	f7ff fd90 	bl	800d4de <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d9be:	1c6b      	adds	r3, r5, #1
 800d9c0:	d113      	bne.n	800d9ea <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d9c4:	b90b      	cbnz	r3, 800d9ca <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800d9c6:	2001      	movs	r0, #1
 800d9c8:	e00b      	b.n	800d9e2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d9ce:	f000 fe8f 	bl	800e6f0 <xTaskRemoveFromEventList>
 800d9d2:	2800      	cmp	r0, #0
 800d9d4:	d0f7      	beq.n	800d9c6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d9d6:	f1b8 0f00 	cmp.w	r8, #0
 800d9da:	d0f4      	beq.n	800d9c6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d9dc:	2001      	movs	r0, #1
 800d9de:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800d9e2:	f386 8811 	msr	BASEPRI, r6
}
 800d9e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d9ea:	3501      	adds	r5, #1
 800d9ec:	b26d      	sxtb	r5, r5
 800d9ee:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800d9f2:	e7e8      	b.n	800d9c6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800d9f4:	2000      	movs	r0, #0
 800d9f6:	e7f4      	b.n	800d9e2 <xQueueGenericSendFromISR+0xae>

0800d9f8 <xQueueGiveFromISR>:
{
 800d9f8:	b570      	push	{r4, r5, r6, lr}
 800d9fa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d9fc:	4604      	mov	r4, r0
 800d9fe:	b940      	cbnz	r0, 800da12 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800da00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da04:	f383 8811 	msr	BASEPRI, r3
 800da08:	f3bf 8f6f 	isb	sy
 800da0c:	f3bf 8f4f 	dsb	sy
 800da10:	e7fe      	b.n	800da10 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800da12:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da14:	b143      	cbz	r3, 800da28 <xQueueGiveFromISR+0x30>
 800da16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da1a:	f383 8811 	msr	BASEPRI, r3
 800da1e:	f3bf 8f6f 	isb	sy
 800da22:	f3bf 8f4f 	dsb	sy
 800da26:	e7fe      	b.n	800da26 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800da28:	6803      	ldr	r3, [r0, #0]
 800da2a:	b953      	cbnz	r3, 800da42 <xQueueGiveFromISR+0x4a>
 800da2c:	6883      	ldr	r3, [r0, #8]
 800da2e:	b143      	cbz	r3, 800da42 <xQueueGiveFromISR+0x4a>
 800da30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da34:	f383 8811 	msr	BASEPRI, r3
 800da38:	f3bf 8f6f 	isb	sy
 800da3c:	f3bf 8f4f 	dsb	sy
 800da40:	e7fe      	b.n	800da40 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800da42:	f7ff fd13 	bl	800d46c <vPortValidateInterruptPriority>
	__asm volatile
 800da46:	f3ef 8611 	mrs	r6, BASEPRI
 800da4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da4e:	f383 8811 	msr	BASEPRI, r3
 800da52:	f3bf 8f6f 	isb	sy
 800da56:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800da5a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800da5c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da5e:	4293      	cmp	r3, r2
 800da60:	d91c      	bls.n	800da9c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800da62:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da66:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800da68:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800da6a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da6c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800da6e:	d110      	bne.n	800da92 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da70:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800da72:	b90b      	cbnz	r3, 800da78 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800da74:	2001      	movs	r0, #1
 800da76:	e009      	b.n	800da8c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da78:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800da7c:	f000 fe38 	bl	800e6f0 <xTaskRemoveFromEventList>
 800da80:	2800      	cmp	r0, #0
 800da82:	d0f7      	beq.n	800da74 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800da84:	2d00      	cmp	r5, #0
 800da86:	d0f5      	beq.n	800da74 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800da88:	2001      	movs	r0, #1
 800da8a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800da8c:	f386 8811 	msr	BASEPRI, r6
}
 800da90:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800da92:	3301      	adds	r3, #1
 800da94:	b25b      	sxtb	r3, r3
 800da96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800da9a:	e7eb      	b.n	800da74 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800da9c:	2000      	movs	r0, #0
 800da9e:	e7f5      	b.n	800da8c <xQueueGiveFromISR+0x94>

0800daa0 <xQueueReceive>:
{
 800daa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800daa4:	b085      	sub	sp, #20
 800daa6:	460f      	mov	r7, r1
 800daa8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800daaa:	4604      	mov	r4, r0
 800daac:	b940      	cbnz	r0, 800dac0 <xQueueReceive+0x20>
	__asm volatile
 800daae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dab2:	f383 8811 	msr	BASEPRI, r3
 800dab6:	f3bf 8f6f 	isb	sy
 800daba:	f3bf 8f4f 	dsb	sy
 800dabe:	e7fe      	b.n	800dabe <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dac0:	b951      	cbnz	r1, 800dad8 <xQueueReceive+0x38>
 800dac2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dac4:	b143      	cbz	r3, 800dad8 <xQueueReceive+0x38>
 800dac6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daca:	f383 8811 	msr	BASEPRI, r3
 800dace:	f3bf 8f6f 	isb	sy
 800dad2:	f3bf 8f4f 	dsb	sy
 800dad6:	e7fe      	b.n	800dad6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dad8:	f000 fe9c 	bl	800e814 <xTaskGetSchedulerState>
 800dadc:	4606      	mov	r6, r0
 800dade:	b950      	cbnz	r0, 800daf6 <xQueueReceive+0x56>
 800dae0:	9b01      	ldr	r3, [sp, #4]
 800dae2:	b14b      	cbz	r3, 800daf8 <xQueueReceive+0x58>
 800dae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dae8:	f383 8811 	msr	BASEPRI, r3
 800daec:	f3bf 8f6f 	isb	sy
 800daf0:	f3bf 8f4f 	dsb	sy
 800daf4:	e7fe      	b.n	800daf4 <xQueueReceive+0x54>
 800daf6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800daf8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800dbdc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 800dafc:	f04f 0800 	mov.w	r8, #0
 800db00:	e03b      	b.n	800db7a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 800db02:	9d01      	ldr	r5, [sp, #4]
 800db04:	b91d      	cbnz	r5, 800db0e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 800db06:	f7ff fbb7 	bl	800d278 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800db0a:	2000      	movs	r0, #0
 800db0c:	e052      	b.n	800dbb4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800db0e:	b916      	cbnz	r6, 800db16 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800db10:	a802      	add	r0, sp, #8
 800db12:	f000 fe31 	bl	800e778 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800db16:	f7ff fbaf 	bl	800d278 <vPortExitCritical>
		vTaskSuspendAll();
 800db1a:	f000 fbbf 	bl	800e29c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800db1e:	f7ff fb89 	bl	800d234 <vPortEnterCritical>
 800db22:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db26:	2bff      	cmp	r3, #255	; 0xff
 800db28:	bf08      	it	eq
 800db2a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800db2e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db32:	2bff      	cmp	r3, #255	; 0xff
 800db34:	bf08      	it	eq
 800db36:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800db3a:	f7ff fb9d 	bl	800d278 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800db3e:	a901      	add	r1, sp, #4
 800db40:	a802      	add	r0, sp, #8
 800db42:	f000 fe25 	bl	800e790 <xTaskCheckForTimeOut>
 800db46:	2800      	cmp	r0, #0
 800db48:	d13d      	bne.n	800dbc6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800db4a:	4620      	mov	r0, r4
 800db4c:	f7ff fcbc 	bl	800d4c8 <prvIsQueueEmpty>
 800db50:	b398      	cbz	r0, 800dbba <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800db52:	9901      	ldr	r1, [sp, #4]
 800db54:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800db58:	f000 fd92 	bl	800e680 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800db5c:	4620      	mov	r0, r4
 800db5e:	f7ff fd09 	bl	800d574 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800db62:	f000 fc3f 	bl	800e3e4 <xTaskResumeAll>
 800db66:	b938      	cbnz	r0, 800db78 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 800db68:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800db6c:	f8c9 3000 	str.w	r3, [r9]
 800db70:	f3bf 8f4f 	dsb	sy
 800db74:	f3bf 8f6f 	isb	sy
 800db78:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800db7a:	f7ff fb5b 	bl	800d234 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db7e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800db80:	2d00      	cmp	r5, #0
 800db82:	d0be      	beq.n	800db02 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800db84:	4639      	mov	r1, r7
 800db86:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800db88:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800db8a:	f7ff fcdd 	bl	800d548 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800db8e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db90:	6923      	ldr	r3, [r4, #16]
 800db92:	b163      	cbz	r3, 800dbae <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db94:	f104 0010 	add.w	r0, r4, #16
 800db98:	f000 fdaa 	bl	800e6f0 <xTaskRemoveFromEventList>
 800db9c:	b138      	cbz	r0, 800dbae <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800db9e:	4b0f      	ldr	r3, [pc, #60]	; (800dbdc <xQueueReceive+0x13c>)
 800dba0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dba4:	601a      	str	r2, [r3, #0]
 800dba6:	f3bf 8f4f 	dsb	sy
 800dbaa:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dbae:	f7ff fb63 	bl	800d278 <vPortExitCritical>
				return pdPASS;
 800dbb2:	2001      	movs	r0, #1
}
 800dbb4:	b005      	add	sp, #20
 800dbb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800dbba:	4620      	mov	r0, r4
 800dbbc:	f7ff fcda 	bl	800d574 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dbc0:	f000 fc10 	bl	800e3e4 <xTaskResumeAll>
 800dbc4:	e7d8      	b.n	800db78 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 800dbc6:	4620      	mov	r0, r4
 800dbc8:	f7ff fcd4 	bl	800d574 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dbcc:	f000 fc0a 	bl	800e3e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dbd0:	4620      	mov	r0, r4
 800dbd2:	f7ff fc79 	bl	800d4c8 <prvIsQueueEmpty>
 800dbd6:	2800      	cmp	r0, #0
 800dbd8:	d0ce      	beq.n	800db78 <xQueueReceive+0xd8>
 800dbda:	e796      	b.n	800db0a <xQueueReceive+0x6a>
 800dbdc:	e000ed04 	.word	0xe000ed04

0800dbe0 <xQueueSemaphoreTake>:
{
 800dbe0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 800dbe4:	4604      	mov	r4, r0
{
 800dbe6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dbe8:	b940      	cbnz	r0, 800dbfc <xQueueSemaphoreTake+0x1c>
 800dbea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbee:	f383 8811 	msr	BASEPRI, r3
 800dbf2:	f3bf 8f6f 	isb	sy
 800dbf6:	f3bf 8f4f 	dsb	sy
 800dbfa:	e7fe      	b.n	800dbfa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dbfc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800dbfe:	b145      	cbz	r5, 800dc12 <xQueueSemaphoreTake+0x32>
 800dc00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc04:	f383 8811 	msr	BASEPRI, r3
 800dc08:	f3bf 8f6f 	isb	sy
 800dc0c:	f3bf 8f4f 	dsb	sy
 800dc10:	e7fe      	b.n	800dc10 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc12:	f000 fdff 	bl	800e814 <xTaskGetSchedulerState>
 800dc16:	4606      	mov	r6, r0
 800dc18:	b950      	cbnz	r0, 800dc30 <xQueueSemaphoreTake+0x50>
 800dc1a:	9b01      	ldr	r3, [sp, #4]
 800dc1c:	b16b      	cbz	r3, 800dc3a <xQueueSemaphoreTake+0x5a>
 800dc1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc22:	f383 8811 	msr	BASEPRI, r3
 800dc26:	f3bf 8f6f 	isb	sy
 800dc2a:	f3bf 8f4f 	dsb	sy
 800dc2e:	e7fe      	b.n	800dc2e <xQueueSemaphoreTake+0x4e>
 800dc30:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 800dc32:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800dd64 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 800dc36:	2700      	movs	r7, #0
 800dc38:	e051      	b.n	800dcde <xQueueSemaphoreTake+0xfe>
 800dc3a:	4605      	mov	r5, r0
 800dc3c:	e7f9      	b.n	800dc32 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc3e:	9b01      	ldr	r3, [sp, #4]
 800dc40:	b963      	cbnz	r3, 800dc5c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800dc42:	b145      	cbz	r5, 800dc56 <xQueueSemaphoreTake+0x76>
 800dc44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc48:	f383 8811 	msr	BASEPRI, r3
 800dc4c:	f3bf 8f6f 	isb	sy
 800dc50:	f3bf 8f4f 	dsb	sy
 800dc54:	e7fe      	b.n	800dc54 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 800dc56:	f7ff fb0f 	bl	800d278 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800dc5a:	e05e      	b.n	800dd1a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800dc5c:	b916      	cbnz	r6, 800dc64 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc5e:	a802      	add	r0, sp, #8
 800dc60:	f000 fd8a 	bl	800e778 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dc64:	f7ff fb08 	bl	800d278 <vPortExitCritical>
		vTaskSuspendAll();
 800dc68:	f000 fb18 	bl	800e29c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc6c:	f7ff fae2 	bl	800d234 <vPortEnterCritical>
 800dc70:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc74:	2bff      	cmp	r3, #255	; 0xff
 800dc76:	bf08      	it	eq
 800dc78:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800dc7c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc80:	2bff      	cmp	r3, #255	; 0xff
 800dc82:	bf08      	it	eq
 800dc84:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800dc88:	f7ff faf6 	bl	800d278 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc8c:	a901      	add	r1, sp, #4
 800dc8e:	a802      	add	r0, sp, #8
 800dc90:	f000 fd7e 	bl	800e790 <xTaskCheckForTimeOut>
 800dc94:	2800      	cmp	r0, #0
 800dc96:	d14a      	bne.n	800dd2e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dc98:	4620      	mov	r0, r4
 800dc9a:	f7ff fc15 	bl	800d4c8 <prvIsQueueEmpty>
 800dc9e:	2800      	cmp	r0, #0
 800dca0:	d03f      	beq.n	800dd22 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dca2:	6823      	ldr	r3, [r4, #0]
 800dca4:	b93b      	cbnz	r3, 800dcb6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 800dca6:	f7ff fac5 	bl	800d234 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800dcaa:	68a0      	ldr	r0, [r4, #8]
 800dcac:	f000 fdc2 	bl	800e834 <xTaskPriorityInherit>
 800dcb0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800dcb2:	f7ff fae1 	bl	800d278 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dcb6:	9901      	ldr	r1, [sp, #4]
 800dcb8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dcbc:	f000 fce0 	bl	800e680 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800dcc0:	4620      	mov	r0, r4
 800dcc2:	f7ff fc57 	bl	800d574 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800dcc6:	f000 fb8d 	bl	800e3e4 <xTaskResumeAll>
 800dcca:	b938      	cbnz	r0, 800dcdc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800dccc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800dcd0:	f8c8 3000 	str.w	r3, [r8]
 800dcd4:	f3bf 8f4f 	dsb	sy
 800dcd8:	f3bf 8f6f 	isb	sy
 800dcdc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800dcde:	f7ff faa9 	bl	800d234 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800dce2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800dce4:	2b00      	cmp	r3, #0
 800dce6:	d0aa      	beq.n	800dc3e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800dce8:	3b01      	subs	r3, #1
 800dcea:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dcec:	6823      	ldr	r3, [r4, #0]
 800dcee:	b913      	cbnz	r3, 800dcf6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800dcf0:	f000 fe78 	bl	800e9e4 <pvTaskIncrementMutexHeldCount>
 800dcf4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcf6:	6923      	ldr	r3, [r4, #16]
 800dcf8:	b163      	cbz	r3, 800dd14 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcfa:	f104 0010 	add.w	r0, r4, #16
 800dcfe:	f000 fcf7 	bl	800e6f0 <xTaskRemoveFromEventList>
 800dd02:	b138      	cbz	r0, 800dd14 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 800dd04:	4b17      	ldr	r3, [pc, #92]	; (800dd64 <xQueueSemaphoreTake+0x184>)
 800dd06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd0a:	601a      	str	r2, [r3, #0]
 800dd0c:	f3bf 8f4f 	dsb	sy
 800dd10:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dd14:	f7ff fab0 	bl	800d278 <vPortExitCritical>
				return pdPASS;
 800dd18:	2501      	movs	r5, #1
}
 800dd1a:	4628      	mov	r0, r5
 800dd1c:	b004      	add	sp, #16
 800dd1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800dd22:	4620      	mov	r0, r4
 800dd24:	f7ff fc26 	bl	800d574 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dd28:	f000 fb5c 	bl	800e3e4 <xTaskResumeAll>
 800dd2c:	e7d6      	b.n	800dcdc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800dd2e:	4620      	mov	r0, r4
 800dd30:	f7ff fc20 	bl	800d574 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dd34:	f000 fb56 	bl	800e3e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dd38:	4620      	mov	r0, r4
 800dd3a:	f7ff fbc5 	bl	800d4c8 <prvIsQueueEmpty>
 800dd3e:	2800      	cmp	r0, #0
 800dd40:	d0cc      	beq.n	800dcdc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800dd42:	2d00      	cmp	r5, #0
 800dd44:	d0e9      	beq.n	800dd1a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 800dd46:	f7ff fa75 	bl	800d234 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800dd4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dd4c:	b119      	cbz	r1, 800dd56 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800dd4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dd50:	6819      	ldr	r1, [r3, #0]
 800dd52:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800dd56:	68a0      	ldr	r0, [r4, #8]
 800dd58:	f000 fdf2 	bl	800e940 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800dd5c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800dd5e:	f7ff fa8b 	bl	800d278 <vPortExitCritical>
 800dd62:	e7da      	b.n	800dd1a <xQueueSemaphoreTake+0x13a>
 800dd64:	e000ed04 	.word	0xe000ed04

0800dd68 <xQueueReceiveFromISR>:
{
 800dd68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd6c:	4689      	mov	r9, r1
 800dd6e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800dd70:	4605      	mov	r5, r0
 800dd72:	b940      	cbnz	r0, 800dd86 <xQueueReceiveFromISR+0x1e>
 800dd74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd78:	f383 8811 	msr	BASEPRI, r3
 800dd7c:	f3bf 8f6f 	isb	sy
 800dd80:	f3bf 8f4f 	dsb	sy
 800dd84:	e7fe      	b.n	800dd84 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd86:	b951      	cbnz	r1, 800dd9e <xQueueReceiveFromISR+0x36>
 800dd88:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd8a:	b143      	cbz	r3, 800dd9e <xQueueReceiveFromISR+0x36>
 800dd8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd90:	f383 8811 	msr	BASEPRI, r3
 800dd94:	f3bf 8f6f 	isb	sy
 800dd98:	f3bf 8f4f 	dsb	sy
 800dd9c:	e7fe      	b.n	800dd9c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd9e:	f7ff fb65 	bl	800d46c <vPortValidateInterruptPriority>
	__asm volatile
 800dda2:	f3ef 8711 	mrs	r7, BASEPRI
 800dda6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddaa:	f383 8811 	msr	BASEPRI, r3
 800ddae:	f3bf 8f6f 	isb	sy
 800ddb2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ddb6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ddb8:	b31c      	cbz	r4, 800de02 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ddba:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ddbe:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800ddc0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ddc2:	4628      	mov	r0, r5
 800ddc4:	f7ff fbc0 	bl	800d548 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ddc8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800ddca:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ddcc:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800ddce:	d113      	bne.n	800ddf8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddd0:	692b      	ldr	r3, [r5, #16]
 800ddd2:	b90b      	cbnz	r3, 800ddd8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800ddd4:	2001      	movs	r0, #1
 800ddd6:	e00b      	b.n	800ddf0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddd8:	f105 0010 	add.w	r0, r5, #16
 800dddc:	f000 fc88 	bl	800e6f0 <xTaskRemoveFromEventList>
 800dde0:	2800      	cmp	r0, #0
 800dde2:	d0f7      	beq.n	800ddd4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800dde4:	f1b8 0f00 	cmp.w	r8, #0
 800dde8:	d0f4      	beq.n	800ddd4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ddea:	2001      	movs	r0, #1
 800ddec:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800ddf0:	f387 8811 	msr	BASEPRI, r7
}
 800ddf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ddf8:	3601      	adds	r6, #1
 800ddfa:	b276      	sxtb	r6, r6
 800ddfc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800de00:	e7e8      	b.n	800ddd4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800de02:	4620      	mov	r0, r4
 800de04:	e7f4      	b.n	800ddf0 <xQueueReceiveFromISR+0x88>
	...

0800de08 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800de08:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800de0a:	4a07      	ldr	r2, [pc, #28]	; (800de28 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800de0c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800de0e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800de12:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800de16:	b91d      	cbnz	r5, 800de20 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800de18:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800de1c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800de1e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800de20:	3301      	adds	r3, #1
 800de22:	2b08      	cmp	r3, #8
 800de24:	d1f3      	bne.n	800de0e <vQueueAddToRegistry+0x6>
 800de26:	e7fa      	b.n	800de1e <vQueueAddToRegistry+0x16>
 800de28:	200205e0 	.word	0x200205e0

0800de2c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800de2c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800de2e:	4909      	ldr	r1, [pc, #36]	; (800de54 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800de30:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800de32:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 800de36:	4282      	cmp	r2, r0
 800de38:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800de3c:	d106      	bne.n	800de4c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800de3e:	4a06      	ldr	r2, [pc, #24]	; (800de58 <vQueueUnregisterQueue+0x2c>)
 800de40:	2100      	movs	r1, #0
 800de42:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800de46:	4422      	add	r2, r4
 800de48:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800de4a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800de4c:	3301      	adds	r3, #1
 800de4e:	2b08      	cmp	r3, #8
 800de50:	d1ef      	bne.n	800de32 <vQueueUnregisterQueue+0x6>
 800de52:	e7fa      	b.n	800de4a <vQueueUnregisterQueue+0x1e>
 800de54:	200205e4 	.word	0x200205e4
 800de58:	200205e0 	.word	0x200205e0

0800de5c <vQueueDelete>:
{
 800de5c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800de5e:	b940      	cbnz	r0, 800de72 <vQueueDelete+0x16>
	__asm volatile
 800de60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de64:	f383 8811 	msr	BASEPRI, r3
 800de68:	f3bf 8f6f 	isb	sy
 800de6c:	f3bf 8f4f 	dsb	sy
 800de70:	e7fe      	b.n	800de70 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800de72:	f7ff ffdb 	bl	800de2c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800de76:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800de7a:	b91b      	cbnz	r3, 800de84 <vQueueDelete+0x28>
}
 800de7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800de80:	f7ff b8ec 	b.w	800d05c <vPortFree>
}
 800de84:	bd10      	pop	{r4, pc}

0800de86 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800de86:	b570      	push	{r4, r5, r6, lr}
 800de88:	4604      	mov	r4, r0
 800de8a:	460d      	mov	r5, r1
 800de8c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800de8e:	f7ff f9d1 	bl	800d234 <vPortEnterCritical>
 800de92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de96:	2bff      	cmp	r3, #255	; 0xff
 800de98:	bf04      	itt	eq
 800de9a:	2300      	moveq	r3, #0
 800de9c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dea0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dea4:	2bff      	cmp	r3, #255	; 0xff
 800dea6:	bf04      	itt	eq
 800dea8:	2300      	moveq	r3, #0
 800deaa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800deae:	f7ff f9e3 	bl	800d278 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800deb2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800deb4:	b92b      	cbnz	r3, 800dec2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800deb6:	4632      	mov	r2, r6
 800deb8:	4629      	mov	r1, r5
 800deba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800debe:	f000 fbf9 	bl	800e6b4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800dec2:	4620      	mov	r0, r4
	}
 800dec4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800dec8:	f7ff bb54 	b.w	800d574 <prvUnlockQueue>

0800decc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800decc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ded0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ded2:	f7ff f9af 	bl	800d234 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ded6:	4b2f      	ldr	r3, [pc, #188]	; (800df94 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 800ded8:	4d2f      	ldr	r5, [pc, #188]	; (800df98 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800deda:	681a      	ldr	r2, [r3, #0]
 800dedc:	4f2f      	ldr	r7, [pc, #188]	; (800df9c <prvAddNewTaskToReadyList+0xd0>)
 800dede:	3201      	adds	r2, #1
 800dee0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800dee2:	682e      	ldr	r6, [r5, #0]
 800dee4:	2e00      	cmp	r6, #0
 800dee6:	d149      	bne.n	800df7c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800dee8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800deea:	681b      	ldr	r3, [r3, #0]
 800deec:	2b01      	cmp	r3, #1
 800deee:	d11f      	bne.n	800df30 <prvAddNewTaskToReadyList+0x64>
 800def0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800def2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800def4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800def6:	f7ff f8ef 	bl	800d0d8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800defa:	2e38      	cmp	r6, #56	; 0x38
 800defc:	f108 0814 	add.w	r8, r8, #20
 800df00:	d1f7      	bne.n	800def2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800df02:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800dfc8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800df06:	4e26      	ldr	r6, [pc, #152]	; (800dfa0 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 800df08:	4640      	mov	r0, r8
 800df0a:	f7ff f8e5 	bl	800d0d8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800df0e:	4630      	mov	r0, r6
 800df10:	f7ff f8e2 	bl	800d0d8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800df14:	4823      	ldr	r0, [pc, #140]	; (800dfa4 <prvAddNewTaskToReadyList+0xd8>)
 800df16:	f7ff f8df 	bl	800d0d8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800df1a:	4823      	ldr	r0, [pc, #140]	; (800dfa8 <prvAddNewTaskToReadyList+0xdc>)
 800df1c:	f7ff f8dc 	bl	800d0d8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800df20:	4822      	ldr	r0, [pc, #136]	; (800dfac <prvAddNewTaskToReadyList+0xe0>)
 800df22:	f7ff f8d9 	bl	800d0d8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800df26:	4b22      	ldr	r3, [pc, #136]	; (800dfb0 <prvAddNewTaskToReadyList+0xe4>)
 800df28:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800df2c:	4b21      	ldr	r3, [pc, #132]	; (800dfb4 <prvAddNewTaskToReadyList+0xe8>)
 800df2e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 800df30:	4a21      	ldr	r2, [pc, #132]	; (800dfb8 <prvAddNewTaskToReadyList+0xec>)
 800df32:	6813      	ldr	r3, [r2, #0]
 800df34:	3301      	adds	r3, #1
 800df36:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800df38:	4a20      	ldr	r2, [pc, #128]	; (800dfbc <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800df3a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800df3c:	6811      	ldr	r1, [r2, #0]
 800df3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800df40:	2014      	movs	r0, #20
 800df42:	428b      	cmp	r3, r1
 800df44:	fb00 7003 	mla	r0, r0, r3, r7
 800df48:	f104 0104 	add.w	r1, r4, #4
 800df4c:	bf88      	it	hi
 800df4e:	6013      	strhi	r3, [r2, #0]
 800df50:	f7ff f8d0 	bl	800d0f4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800df54:	f7ff f990 	bl	800d278 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800df58:	4b19      	ldr	r3, [pc, #100]	; (800dfc0 <prvAddNewTaskToReadyList+0xf4>)
 800df5a:	681b      	ldr	r3, [r3, #0]
 800df5c:	b163      	cbz	r3, 800df78 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800df5e:	682b      	ldr	r3, [r5, #0]
 800df60:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800df62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800df64:	429a      	cmp	r2, r3
 800df66:	d207      	bcs.n	800df78 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 800df68:	4b16      	ldr	r3, [pc, #88]	; (800dfc4 <prvAddNewTaskToReadyList+0xf8>)
 800df6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df6e:	601a      	str	r2, [r3, #0]
 800df70:	f3bf 8f4f 	dsb	sy
 800df74:	f3bf 8f6f 	isb	sy
}
 800df78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800df7c:	4b10      	ldr	r3, [pc, #64]	; (800dfc0 <prvAddNewTaskToReadyList+0xf4>)
 800df7e:	681b      	ldr	r3, [r3, #0]
 800df80:	2b00      	cmp	r3, #0
 800df82:	d1d5      	bne.n	800df30 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800df84:	682b      	ldr	r3, [r5, #0]
 800df86:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800df88:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800df8a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800df8c:	bf98      	it	ls
 800df8e:	602c      	strls	r4, [r5, #0]
 800df90:	e7ce      	b.n	800df30 <prvAddNewTaskToReadyList+0x64>
 800df92:	bf00      	nop
 800df94:	2001fec4 	.word	0x2001fec4
 800df98:	2001fa58 	.word	0x2001fa58
 800df9c:	2001fa64 	.word	0x2001fa64
 800dfa0:	2001feec 	.word	0x2001feec
 800dfa4:	2001ff0c 	.word	0x2001ff0c
 800dfa8:	2001ff38 	.word	0x2001ff38
 800dfac:	2001ff24 	.word	0x2001ff24
 800dfb0:	2001fa5c 	.word	0x2001fa5c
 800dfb4:	2001fa60 	.word	0x2001fa60
 800dfb8:	2001fed0 	.word	0x2001fed0
 800dfbc:	2001fed4 	.word	0x2001fed4
 800dfc0:	2001ff20 	.word	0x2001ff20
 800dfc4:	e000ed04 	.word	0xe000ed04
 800dfc8:	2001fed8 	.word	0x2001fed8

0800dfcc <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800dfcc:	4a06      	ldr	r2, [pc, #24]	; (800dfe8 <prvResetNextTaskUnblockTime+0x1c>)
 800dfce:	6813      	ldr	r3, [r2, #0]
 800dfd0:	6819      	ldr	r1, [r3, #0]
 800dfd2:	4b06      	ldr	r3, [pc, #24]	; (800dfec <prvResetNextTaskUnblockTime+0x20>)
 800dfd4:	b919      	cbnz	r1, 800dfde <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800dfd6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800dfda:	601a      	str	r2, [r3, #0]
	}
}
 800dfdc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dfde:	6812      	ldr	r2, [r2, #0]
 800dfe0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800dfe2:	68d2      	ldr	r2, [r2, #12]
 800dfe4:	6852      	ldr	r2, [r2, #4]
 800dfe6:	e7f8      	b.n	800dfda <prvResetNextTaskUnblockTime+0xe>
 800dfe8:	2001fa5c 	.word	0x2001fa5c
 800dfec:	2001ff00 	.word	0x2001ff00

0800dff0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800dff0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dff4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800dff8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800dffc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800dffe:	4606      	mov	r6, r0
 800e000:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e002:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e004:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e006:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e008:	f015 fa24 	bl	8023454 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e00c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e00e:	f1a9 0904 	sub.w	r9, r9, #4
 800e012:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e014:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800e018:	2d00      	cmp	r5, #0
 800e01a:	d043      	beq.n	800e0a4 <prvInitialiseNewTask.isra.0+0xb4>
 800e01c:	1e6b      	subs	r3, r5, #1
 800e01e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800e022:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e024:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e028:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800e02c:	7819      	ldrb	r1, [r3, #0]
 800e02e:	b109      	cbz	r1, 800e034 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e030:	42ab      	cmp	r3, r5
 800e032:	d1f7      	bne.n	800e024 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e034:	2300      	movs	r3, #0
 800e036:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e03a:	9d08      	ldr	r5, [sp, #32]
 800e03c:	2d37      	cmp	r5, #55	; 0x37
 800e03e:	bf28      	it	cs
 800e040:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e042:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e046:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e048:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e04a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e04c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e050:	f7ff f84d 	bl	800d0ee <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e054:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e058:	f104 0018 	add.w	r0, r4, #24
 800e05c:	f7ff f847 	bl	800d0ee <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e060:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e064:	2260      	movs	r2, #96	; 0x60
 800e066:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e068:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e06a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e06c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e06e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e072:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e076:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e07a:	f015 f9eb 	bl	8023454 <memset>
 800e07e:	4b0b      	ldr	r3, [pc, #44]	; (800e0ac <prvInitialiseNewTask.isra.0+0xbc>)
 800e080:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e082:	4b0b      	ldr	r3, [pc, #44]	; (800e0b0 <prvInitialiseNewTask.isra.0+0xc0>)
 800e084:	6623      	str	r3, [r4, #96]	; 0x60
 800e086:	4b0b      	ldr	r3, [pc, #44]	; (800e0b4 <prvInitialiseNewTask.isra.0+0xc4>)
 800e088:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e08a:	463a      	mov	r2, r7
 800e08c:	4631      	mov	r1, r6
 800e08e:	4648      	mov	r0, r9
 800e090:	f7ff f8a2 	bl	800d1d8 <pxPortInitialiseStack>
 800e094:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e096:	f1b8 0f00 	cmp.w	r8, #0
 800e09a:	d001      	beq.n	800e0a0 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e09c:	f8c8 4000 	str.w	r4, [r8]
}
 800e0a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e0a4:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e0a8:	e7c7      	b.n	800e03a <prvInitialiseNewTask.isra.0+0x4a>
 800e0aa:	bf00      	nop
 800e0ac:	08029ad4 	.word	0x08029ad4
 800e0b0:	08029af4 	.word	0x08029af4
 800e0b4:	08029ab4 	.word	0x08029ab4

0800e0b8 <prvDeleteTCB>:
	{
 800e0b8:	b510      	push	{r4, lr}
 800e0ba:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e0bc:	3058      	adds	r0, #88	; 0x58
 800e0be:	f015 fd77 	bl	8023bb0 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e0c2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800e0c6:	b93b      	cbnz	r3, 800e0d8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800e0c8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e0ca:	f7fe ffc7 	bl	800d05c <vPortFree>
				vPortFree( pxTCB );
 800e0ce:	4620      	mov	r0, r4
	}
 800e0d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800e0d4:	f7fe bfc2 	b.w	800d05c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e0d8:	2b01      	cmp	r3, #1
 800e0da:	d0f8      	beq.n	800e0ce <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e0dc:	2b02      	cmp	r3, #2
 800e0de:	d008      	beq.n	800e0f2 <prvDeleteTCB+0x3a>
 800e0e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0e4:	f383 8811 	msr	BASEPRI, r3
 800e0e8:	f3bf 8f6f 	isb	sy
 800e0ec:	f3bf 8f4f 	dsb	sy
 800e0f0:	e7fe      	b.n	800e0f0 <prvDeleteTCB+0x38>
	}
 800e0f2:	bd10      	pop	{r4, pc}

0800e0f4 <prvIdleTask>:
{
 800e0f4:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e0f6:	4e14      	ldr	r6, [pc, #80]	; (800e148 <prvIdleTask+0x54>)
				taskYIELD();
 800e0f8:	4f14      	ldr	r7, [pc, #80]	; (800e14c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e0fa:	4c15      	ldr	r4, [pc, #84]	; (800e150 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800e0fc:	4d15      	ldr	r5, [pc, #84]	; (800e154 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e0fe:	6823      	ldr	r3, [r4, #0]
 800e100:	b96b      	cbnz	r3, 800e11e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e102:	4b15      	ldr	r3, [pc, #84]	; (800e158 <prvIdleTask+0x64>)
 800e104:	681b      	ldr	r3, [r3, #0]
 800e106:	2b01      	cmp	r3, #1
 800e108:	d906      	bls.n	800e118 <prvIdleTask+0x24>
				taskYIELD();
 800e10a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800e10e:	603b      	str	r3, [r7, #0]
 800e110:	f3bf 8f4f 	dsb	sy
 800e114:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800e118:	f7f3 f976 	bl	8001408 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800e11c:	e7ed      	b.n	800e0fa <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e11e:	f7ff f889 	bl	800d234 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e122:	68f3      	ldr	r3, [r6, #12]
 800e124:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e128:	f108 0004 	add.w	r0, r8, #4
 800e12c:	f7ff f805 	bl	800d13a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e130:	682b      	ldr	r3, [r5, #0]
 800e132:	3b01      	subs	r3, #1
 800e134:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e136:	6823      	ldr	r3, [r4, #0]
 800e138:	3b01      	subs	r3, #1
 800e13a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e13c:	f7ff f89c 	bl	800d278 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e140:	4640      	mov	r0, r8
 800e142:	f7ff ffb9 	bl	800e0b8 <prvDeleteTCB>
 800e146:	e7da      	b.n	800e0fe <prvIdleTask+0xa>
 800e148:	2001ff38 	.word	0x2001ff38
 800e14c:	e000ed04 	.word	0xe000ed04
 800e150:	2001fec8 	.word	0x2001fec8
 800e154:	2001fec4 	.word	0x2001fec4
 800e158:	2001fa64 	.word	0x2001fa64

0800e15c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800e15c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e15e:	4b16      	ldr	r3, [pc, #88]	; (800e1b8 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e160:	4e16      	ldr	r6, [pc, #88]	; (800e1bc <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800e162:	681d      	ldr	r5, [r3, #0]
{
 800e164:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e166:	6830      	ldr	r0, [r6, #0]
 800e168:	3004      	adds	r0, #4
{
 800e16a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e16c:	f7fe ffe5 	bl	800d13a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e170:	1c63      	adds	r3, r4, #1
 800e172:	4633      	mov	r3, r6
 800e174:	d107      	bne.n	800e186 <prvAddCurrentTaskToDelayedList+0x2a>
 800e176:	b137      	cbz	r7, 800e186 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e178:	6831      	ldr	r1, [r6, #0]
 800e17a:	4811      	ldr	r0, [pc, #68]	; (800e1c0 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800e17c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e180:	3104      	adds	r1, #4
 800e182:	f7fe bfb7 	b.w	800d0f4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e186:	681a      	ldr	r2, [r3, #0]
 800e188:	192c      	adds	r4, r5, r4
 800e18a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800e18c:	d307      	bcc.n	800e19e <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e18e:	4a0d      	ldr	r2, [pc, #52]	; (800e1c4 <prvAddCurrentTaskToDelayedList+0x68>)
 800e190:	6810      	ldr	r0, [r2, #0]
 800e192:	6819      	ldr	r1, [r3, #0]
}
 800e194:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e198:	3104      	adds	r1, #4
 800e19a:	f7fe bfb7 	b.w	800d10c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e19e:	4a0a      	ldr	r2, [pc, #40]	; (800e1c8 <prvAddCurrentTaskToDelayedList+0x6c>)
 800e1a0:	6810      	ldr	r0, [r2, #0]
 800e1a2:	6819      	ldr	r1, [r3, #0]
 800e1a4:	3104      	adds	r1, #4
 800e1a6:	f7fe ffb1 	bl	800d10c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e1aa:	4b08      	ldr	r3, [pc, #32]	; (800e1cc <prvAddCurrentTaskToDelayedList+0x70>)
 800e1ac:	681a      	ldr	r2, [r3, #0]
 800e1ae:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800e1b0:	bf88      	it	hi
 800e1b2:	601c      	strhi	r4, [r3, #0]
}
 800e1b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e1b6:	bf00      	nop
 800e1b8:	2001ff4c 	.word	0x2001ff4c
 800e1bc:	2001fa58 	.word	0x2001fa58
 800e1c0:	2001ff24 	.word	0x2001ff24
 800e1c4:	2001fa60 	.word	0x2001fa60
 800e1c8:	2001fa5c 	.word	0x2001fa5c
 800e1cc:	2001ff00 	.word	0x2001ff00

0800e1d0 <xTaskCreateStatic>:
	{
 800e1d0:	b570      	push	{r4, r5, r6, lr}
 800e1d2:	b086      	sub	sp, #24
 800e1d4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e1d8:	b945      	cbnz	r5, 800e1ec <xTaskCreateStatic+0x1c>
 800e1da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1de:	f383 8811 	msr	BASEPRI, r3
 800e1e2:	f3bf 8f6f 	isb	sy
 800e1e6:	f3bf 8f4f 	dsb	sy
 800e1ea:	e7fe      	b.n	800e1ea <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e1ec:	b944      	cbnz	r4, 800e200 <xTaskCreateStatic+0x30>
 800e1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1f2:	f383 8811 	msr	BASEPRI, r3
 800e1f6:	f3bf 8f6f 	isb	sy
 800e1fa:	f3bf 8f4f 	dsb	sy
 800e1fe:	e7fe      	b.n	800e1fe <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e200:	26c0      	movs	r6, #192	; 0xc0
 800e202:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e204:	9e05      	ldr	r6, [sp, #20]
 800e206:	2ec0      	cmp	r6, #192	; 0xc0
 800e208:	d008      	beq.n	800e21c <xTaskCreateStatic+0x4c>
 800e20a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e20e:	f383 8811 	msr	BASEPRI, r3
 800e212:	f3bf 8f6f 	isb	sy
 800e216:	f3bf 8f4f 	dsb	sy
 800e21a:	e7fe      	b.n	800e21a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e21c:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e21e:	2502      	movs	r5, #2
 800e220:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e224:	ad04      	add	r5, sp, #16
 800e226:	9501      	str	r5, [sp, #4]
 800e228:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e22a:	9402      	str	r4, [sp, #8]
 800e22c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e22e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e230:	f7ff fede 	bl	800dff0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e234:	4620      	mov	r0, r4
 800e236:	f7ff fe49 	bl	800decc <prvAddNewTaskToReadyList>
	}
 800e23a:	9804      	ldr	r0, [sp, #16]
 800e23c:	b006      	add	sp, #24
 800e23e:	bd70      	pop	{r4, r5, r6, pc}

0800e240 <xTaskCreate>:
	{
 800e240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e244:	4607      	mov	r7, r0
 800e246:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e248:	0090      	lsls	r0, r2, #2
	{
 800e24a:	4688      	mov	r8, r1
 800e24c:	4616      	mov	r6, r2
 800e24e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e250:	f7fe fe72 	bl	800cf38 <pvPortMalloc>
			if( pxStack != NULL )
 800e254:	4605      	mov	r5, r0
 800e256:	b1e8      	cbz	r0, 800e294 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e258:	20c0      	movs	r0, #192	; 0xc0
 800e25a:	f7fe fe6d 	bl	800cf38 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e25e:	4604      	mov	r4, r0
 800e260:	b1a8      	cbz	r0, 800e28e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e262:	2300      	movs	r3, #0
 800e264:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e268:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800e26a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e26c:	9301      	str	r3, [sp, #4]
 800e26e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e270:	9002      	str	r0, [sp, #8]
 800e272:	9300      	str	r3, [sp, #0]
 800e274:	4632      	mov	r2, r6
 800e276:	464b      	mov	r3, r9
 800e278:	4641      	mov	r1, r8
 800e27a:	4638      	mov	r0, r7
 800e27c:	f7ff feb8 	bl	800dff0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e280:	4620      	mov	r0, r4
 800e282:	f7ff fe23 	bl	800decc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e286:	2001      	movs	r0, #1
	}
 800e288:	b005      	add	sp, #20
 800e28a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e28e:	4628      	mov	r0, r5
 800e290:	f7fe fee4 	bl	800d05c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e294:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800e298:	e7f6      	b.n	800e288 <xTaskCreate+0x48>
	...

0800e29c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e29c:	4a02      	ldr	r2, [pc, #8]	; (800e2a8 <vTaskSuspendAll+0xc>)
 800e29e:	6813      	ldr	r3, [r2, #0]
 800e2a0:	3301      	adds	r3, #1
 800e2a2:	6013      	str	r3, [r2, #0]
}
 800e2a4:	4770      	bx	lr
 800e2a6:	bf00      	nop
 800e2a8:	2001fecc 	.word	0x2001fecc

0800e2ac <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e2ac:	4b01      	ldr	r3, [pc, #4]	; (800e2b4 <xTaskGetTickCount+0x8>)
 800e2ae:	6818      	ldr	r0, [r3, #0]
}
 800e2b0:	4770      	bx	lr
 800e2b2:	bf00      	nop
 800e2b4:	2001ff4c 	.word	0x2001ff4c

0800e2b8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e2b8:	4b3f      	ldr	r3, [pc, #252]	; (800e3b8 <xTaskIncrementTick+0x100>)
 800e2ba:	681b      	ldr	r3, [r3, #0]
{
 800e2bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e2c0:	2b00      	cmp	r3, #0
 800e2c2:	d173      	bne.n	800e3ac <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e2c4:	4b3d      	ldr	r3, [pc, #244]	; (800e3bc <xTaskIncrementTick+0x104>)
 800e2c6:	681d      	ldr	r5, [r3, #0]
 800e2c8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800e2ca:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e2cc:	b9bd      	cbnz	r5, 800e2fe <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e2ce:	4b3c      	ldr	r3, [pc, #240]	; (800e3c0 <xTaskIncrementTick+0x108>)
 800e2d0:	681a      	ldr	r2, [r3, #0]
 800e2d2:	6812      	ldr	r2, [r2, #0]
 800e2d4:	b142      	cbz	r2, 800e2e8 <xTaskIncrementTick+0x30>
 800e2d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2da:	f383 8811 	msr	BASEPRI, r3
 800e2de:	f3bf 8f6f 	isb	sy
 800e2e2:	f3bf 8f4f 	dsb	sy
 800e2e6:	e7fe      	b.n	800e2e6 <xTaskIncrementTick+0x2e>
 800e2e8:	4a36      	ldr	r2, [pc, #216]	; (800e3c4 <xTaskIncrementTick+0x10c>)
 800e2ea:	6819      	ldr	r1, [r3, #0]
 800e2ec:	6810      	ldr	r0, [r2, #0]
 800e2ee:	6018      	str	r0, [r3, #0]
 800e2f0:	6011      	str	r1, [r2, #0]
 800e2f2:	4a35      	ldr	r2, [pc, #212]	; (800e3c8 <xTaskIncrementTick+0x110>)
 800e2f4:	6813      	ldr	r3, [r2, #0]
 800e2f6:	3301      	adds	r3, #1
 800e2f8:	6013      	str	r3, [r2, #0]
 800e2fa:	f7ff fe67 	bl	800dfcc <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e2fe:	4e33      	ldr	r6, [pc, #204]	; (800e3cc <xTaskIncrementTick+0x114>)
 800e300:	4f33      	ldr	r7, [pc, #204]	; (800e3d0 <xTaskIncrementTick+0x118>)
 800e302:	6833      	ldr	r3, [r6, #0]
 800e304:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800e3dc <xTaskIncrementTick+0x124>
 800e308:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e30a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e30e:	d211      	bcs.n	800e334 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e310:	f8d8 3000 	ldr.w	r3, [r8]
 800e314:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e316:	2314      	movs	r3, #20
 800e318:	4353      	muls	r3, r2
 800e31a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800e31c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800e31e:	4b2d      	ldr	r3, [pc, #180]	; (800e3d4 <xTaskIncrementTick+0x11c>)
 800e320:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800e322:	bf28      	it	cs
 800e324:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800e326:	2b00      	cmp	r3, #0
 800e328:	bf18      	it	ne
 800e32a:	2401      	movne	r4, #1
}
 800e32c:	4620      	mov	r0, r4
 800e32e:	b003      	add	sp, #12
 800e330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e334:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800e3c0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e338:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800e3e0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e33c:	f8d9 3000 	ldr.w	r3, [r9]
 800e340:	681b      	ldr	r3, [r3, #0]
 800e342:	b91b      	cbnz	r3, 800e34c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e344:	f04f 33ff 	mov.w	r3, #4294967295
 800e348:	6033      	str	r3, [r6, #0]
					break;
 800e34a:	e7e1      	b.n	800e310 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e34c:	f8d9 3000 	ldr.w	r3, [r9]
 800e350:	68db      	ldr	r3, [r3, #12]
 800e352:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e356:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800e35a:	4295      	cmp	r5, r2
 800e35c:	d201      	bcs.n	800e362 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e35e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e360:	e7d6      	b.n	800e310 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e362:	f10b 0104 	add.w	r1, fp, #4
 800e366:	4608      	mov	r0, r1
 800e368:	9101      	str	r1, [sp, #4]
 800e36a:	f7fe fee6 	bl	800d13a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e36e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800e372:	9901      	ldr	r1, [sp, #4]
 800e374:	b122      	cbz	r2, 800e380 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e376:	f10b 0018 	add.w	r0, fp, #24
 800e37a:	f7fe fede 	bl	800d13a <uxListRemove>
 800e37e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e380:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800e384:	f8da 2000 	ldr.w	r2, [sl]
 800e388:	2314      	movs	r3, #20
 800e38a:	4290      	cmp	r0, r2
 800e38c:	bf88      	it	hi
 800e38e:	f8ca 0000 	strhi.w	r0, [sl]
 800e392:	fb03 7000 	mla	r0, r3, r0, r7
 800e396:	f7fe fead 	bl	800d0f4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e39a:	f8d8 1000 	ldr.w	r1, [r8]
 800e39e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800e3a2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800e3a4:	429a      	cmp	r2, r3
 800e3a6:	bf28      	it	cs
 800e3a8:	2401      	movcs	r4, #1
 800e3aa:	e7c7      	b.n	800e33c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e3ac:	4a0a      	ldr	r2, [pc, #40]	; (800e3d8 <xTaskIncrementTick+0x120>)
 800e3ae:	6813      	ldr	r3, [r2, #0]
 800e3b0:	3301      	adds	r3, #1
 800e3b2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e3b4:	2400      	movs	r4, #0
	return xSwitchRequired;
 800e3b6:	e7b9      	b.n	800e32c <xTaskIncrementTick+0x74>
 800e3b8:	2001fecc 	.word	0x2001fecc
 800e3bc:	2001ff4c 	.word	0x2001ff4c
 800e3c0:	2001fa5c 	.word	0x2001fa5c
 800e3c4:	2001fa60 	.word	0x2001fa60
 800e3c8:	2001ff04 	.word	0x2001ff04
 800e3cc:	2001ff00 	.word	0x2001ff00
 800e3d0:	2001fa64 	.word	0x2001fa64
 800e3d4:	2001ff50 	.word	0x2001ff50
 800e3d8:	2001ff08 	.word	0x2001ff08
 800e3dc:	2001fa58 	.word	0x2001fa58
 800e3e0:	2001fed4 	.word	0x2001fed4

0800e3e4 <xTaskResumeAll>:
{
 800e3e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800e3e6:	4c30      	ldr	r4, [pc, #192]	; (800e4a8 <xTaskResumeAll+0xc4>)
 800e3e8:	6823      	ldr	r3, [r4, #0]
 800e3ea:	b943      	cbnz	r3, 800e3fe <xTaskResumeAll+0x1a>
 800e3ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3f0:	f383 8811 	msr	BASEPRI, r3
 800e3f4:	f3bf 8f6f 	isb	sy
 800e3f8:	f3bf 8f4f 	dsb	sy
 800e3fc:	e7fe      	b.n	800e3fc <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800e3fe:	f7fe ff19 	bl	800d234 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e402:	6823      	ldr	r3, [r4, #0]
 800e404:	3b01      	subs	r3, #1
 800e406:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e408:	6824      	ldr	r4, [r4, #0]
 800e40a:	b12c      	cbz	r4, 800e418 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800e40c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e40e:	f7fe ff33 	bl	800d278 <vPortExitCritical>
}
 800e412:	4620      	mov	r0, r4
 800e414:	b003      	add	sp, #12
 800e416:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e418:	4b24      	ldr	r3, [pc, #144]	; (800e4ac <xTaskResumeAll+0xc8>)
 800e41a:	681b      	ldr	r3, [r3, #0]
 800e41c:	2b00      	cmp	r3, #0
 800e41e:	d0f5      	beq.n	800e40c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e420:	4d23      	ldr	r5, [pc, #140]	; (800e4b0 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 800e422:	4e24      	ldr	r6, [pc, #144]	; (800e4b4 <xTaskResumeAll+0xd0>)
 800e424:	4f24      	ldr	r7, [pc, #144]	; (800e4b8 <xTaskResumeAll+0xd4>)
 800e426:	e01e      	b.n	800e466 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e428:	68eb      	ldr	r3, [r5, #12]
 800e42a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e42c:	f104 0018 	add.w	r0, r4, #24
 800e430:	f7fe fe83 	bl	800d13a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e434:	1d21      	adds	r1, r4, #4
 800e436:	4608      	mov	r0, r1
 800e438:	9101      	str	r1, [sp, #4]
 800e43a:	f7fe fe7e 	bl	800d13a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e43e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e440:	6832      	ldr	r2, [r6, #0]
 800e442:	9901      	ldr	r1, [sp, #4]
 800e444:	2014      	movs	r0, #20
 800e446:	4293      	cmp	r3, r2
 800e448:	fb00 7003 	mla	r0, r0, r3, r7
 800e44c:	bf88      	it	hi
 800e44e:	6033      	strhi	r3, [r6, #0]
 800e450:	f7fe fe50 	bl	800d0f4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e454:	4b19      	ldr	r3, [pc, #100]	; (800e4bc <xTaskResumeAll+0xd8>)
 800e456:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e458:	681b      	ldr	r3, [r3, #0]
 800e45a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e45c:	429a      	cmp	r2, r3
 800e45e:	d302      	bcc.n	800e466 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800e460:	4b17      	ldr	r3, [pc, #92]	; (800e4c0 <xTaskResumeAll+0xdc>)
 800e462:	2201      	movs	r2, #1
 800e464:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e466:	682b      	ldr	r3, [r5, #0]
 800e468:	2b00      	cmp	r3, #0
 800e46a:	d1dd      	bne.n	800e428 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800e46c:	b10c      	cbz	r4, 800e472 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800e46e:	f7ff fdad 	bl	800dfcc <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e472:	4d14      	ldr	r5, [pc, #80]	; (800e4c4 <xTaskResumeAll+0xe0>)
 800e474:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e476:	b144      	cbz	r4, 800e48a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800e478:	4e11      	ldr	r6, [pc, #68]	; (800e4c0 <xTaskResumeAll+0xdc>)
 800e47a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800e47c:	f7ff ff1c 	bl	800e2b8 <xTaskIncrementTick>
 800e480:	b100      	cbz	r0, 800e484 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800e482:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e484:	3c01      	subs	r4, #1
 800e486:	d1f9      	bne.n	800e47c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800e488:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800e48a:	4b0d      	ldr	r3, [pc, #52]	; (800e4c0 <xTaskResumeAll+0xdc>)
 800e48c:	681b      	ldr	r3, [r3, #0]
 800e48e:	2b00      	cmp	r3, #0
 800e490:	d0bc      	beq.n	800e40c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800e492:	4b0d      	ldr	r3, [pc, #52]	; (800e4c8 <xTaskResumeAll+0xe4>)
 800e494:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e498:	601a      	str	r2, [r3, #0]
 800e49a:	f3bf 8f4f 	dsb	sy
 800e49e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e4a2:	2401      	movs	r4, #1
 800e4a4:	e7b3      	b.n	800e40e <xTaskResumeAll+0x2a>
 800e4a6:	bf00      	nop
 800e4a8:	2001fecc 	.word	0x2001fecc
 800e4ac:	2001fec4 	.word	0x2001fec4
 800e4b0:	2001ff0c 	.word	0x2001ff0c
 800e4b4:	2001fed4 	.word	0x2001fed4
 800e4b8:	2001fa64 	.word	0x2001fa64
 800e4bc:	2001fa58 	.word	0x2001fa58
 800e4c0:	2001ff50 	.word	0x2001ff50
 800e4c4:	2001ff08 	.word	0x2001ff08
 800e4c8:	e000ed04 	.word	0xe000ed04

0800e4cc <vTaskDelay>:
	{
 800e4cc:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e4ce:	b940      	cbnz	r0, 800e4e2 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 800e4d0:	4b0e      	ldr	r3, [pc, #56]	; (800e50c <vTaskDelay+0x40>)
 800e4d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e4d6:	601a      	str	r2, [r3, #0]
 800e4d8:	f3bf 8f4f 	dsb	sy
 800e4dc:	f3bf 8f6f 	isb	sy
	}
 800e4e0:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e4e2:	4b0b      	ldr	r3, [pc, #44]	; (800e510 <vTaskDelay+0x44>)
 800e4e4:	6819      	ldr	r1, [r3, #0]
 800e4e6:	b141      	cbz	r1, 800e4fa <vTaskDelay+0x2e>
 800e4e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4ec:	f383 8811 	msr	BASEPRI, r3
 800e4f0:	f3bf 8f6f 	isb	sy
 800e4f4:	f3bf 8f4f 	dsb	sy
 800e4f8:	e7fe      	b.n	800e4f8 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 800e4fa:	f7ff fecf 	bl	800e29c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800e4fe:	f7ff fe2d 	bl	800e15c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800e502:	f7ff ff6f 	bl	800e3e4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800e506:	2800      	cmp	r0, #0
 800e508:	d0e2      	beq.n	800e4d0 <vTaskDelay+0x4>
 800e50a:	e7e9      	b.n	800e4e0 <vTaskDelay+0x14>
 800e50c:	e000ed04 	.word	0xe000ed04
 800e510:	2001fecc 	.word	0x2001fecc

0800e514 <vTaskSetApplicationTaskTag>:
	{
 800e514:	b538      	push	{r3, r4, r5, lr}
 800e516:	460d      	mov	r5, r1
		if( xTask == NULL )
 800e518:	4604      	mov	r4, r0
 800e51a:	b908      	cbnz	r0, 800e520 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800e51c:	4b04      	ldr	r3, [pc, #16]	; (800e530 <vTaskSetApplicationTaskTag+0x1c>)
 800e51e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800e520:	f7fe fe88 	bl	800d234 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800e524:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800e526:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800e52a:	f7fe bea5 	b.w	800d278 <vPortExitCritical>
 800e52e:	bf00      	nop
 800e530:	2001fa58 	.word	0x2001fa58

0800e534 <xTaskCallApplicationTaskHook>:
	{
 800e534:	4603      	mov	r3, r0
 800e536:	4608      	mov	r0, r1
		if( xTask == NULL )
 800e538:	b90b      	cbnz	r3, 800e53e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800e53a:	4b03      	ldr	r3, [pc, #12]	; (800e548 <xTaskCallApplicationTaskHook+0x14>)
 800e53c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800e53e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e540:	b103      	cbz	r3, 800e544 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800e542:	4718      	bx	r3
	}
 800e544:	4618      	mov	r0, r3
 800e546:	4770      	bx	lr
 800e548:	2001fa58 	.word	0x2001fa58

0800e54c <vTaskStartScheduler>:
{
 800e54c:	b510      	push	{r4, lr}
 800e54e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e550:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e552:	aa07      	add	r2, sp, #28
 800e554:	a906      	add	r1, sp, #24
 800e556:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e558:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e55c:	f7fe fcb0 	bl	800cec0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e560:	9b05      	ldr	r3, [sp, #20]
 800e562:	9302      	str	r3, [sp, #8]
 800e564:	9b06      	ldr	r3, [sp, #24]
 800e566:	9a07      	ldr	r2, [sp, #28]
 800e568:	4919      	ldr	r1, [pc, #100]	; (800e5d0 <vTaskStartScheduler+0x84>)
 800e56a:	481a      	ldr	r0, [pc, #104]	; (800e5d4 <vTaskStartScheduler+0x88>)
 800e56c:	e9cd 4300 	strd	r4, r3, [sp]
 800e570:	4623      	mov	r3, r4
 800e572:	f7ff fe2d 	bl	800e1d0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800e576:	b1f0      	cbz	r0, 800e5b6 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 800e578:	f000 fa92 	bl	800eaa0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e57c:	2801      	cmp	r0, #1
 800e57e:	d11c      	bne.n	800e5ba <vTaskStartScheduler+0x6e>
 800e580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e584:	f383 8811 	msr	BASEPRI, r3
 800e588:	f3bf 8f6f 	isb	sy
 800e58c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e590:	4a11      	ldr	r2, [pc, #68]	; (800e5d8 <vTaskStartScheduler+0x8c>)
 800e592:	4912      	ldr	r1, [pc, #72]	; (800e5dc <vTaskStartScheduler+0x90>)
 800e594:	6813      	ldr	r3, [r2, #0]
 800e596:	3358      	adds	r3, #88	; 0x58
 800e598:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e59a:	4b11      	ldr	r3, [pc, #68]	; (800e5e0 <vTaskStartScheduler+0x94>)
 800e59c:	f04f 31ff 	mov.w	r1, #4294967295
 800e5a0:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800e5a2:	4b10      	ldr	r3, [pc, #64]	; (800e5e4 <vTaskStartScheduler+0x98>)
 800e5a4:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e5a6:	4b10      	ldr	r3, [pc, #64]	; (800e5e8 <vTaskStartScheduler+0x9c>)
 800e5a8:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800e5aa:	6810      	ldr	r0, [r2, #0]
 800e5ac:	4621      	mov	r1, r4
 800e5ae:	f7ff ffc1 	bl	800e534 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800e5b2:	f7fe fed7 	bl	800d364 <xPortStartScheduler>
}
 800e5b6:	b008      	add	sp, #32
 800e5b8:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e5ba:	3001      	adds	r0, #1
 800e5bc:	d1fb      	bne.n	800e5b6 <vTaskStartScheduler+0x6a>
 800e5be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5c2:	f383 8811 	msr	BASEPRI, r3
 800e5c6:	f3bf 8f6f 	isb	sy
 800e5ca:	f3bf 8f4f 	dsb	sy
 800e5ce:	e7fe      	b.n	800e5ce <vTaskStartScheduler+0x82>
 800e5d0:	0802723d 	.word	0x0802723d
 800e5d4:	0800e0f5 	.word	0x0800e0f5
 800e5d8:	2001fa58 	.word	0x2001fa58
 800e5dc:	200000dc 	.word	0x200000dc
 800e5e0:	2001ff00 	.word	0x2001ff00
 800e5e4:	2001ff20 	.word	0x2001ff20
 800e5e8:	2001ff4c 	.word	0x2001ff4c

0800e5ec <vTaskSwitchContext>:
{
 800e5ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e5ee:	4b1e      	ldr	r3, [pc, #120]	; (800e668 <vTaskSwitchContext+0x7c>)
 800e5f0:	681a      	ldr	r2, [r3, #0]
 800e5f2:	4b1e      	ldr	r3, [pc, #120]	; (800e66c <vTaskSwitchContext+0x80>)
 800e5f4:	b112      	cbz	r2, 800e5fc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800e5f6:	2201      	movs	r2, #1
 800e5f8:	601a      	str	r2, [r3, #0]
}
 800e5fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800e5fc:	4c1c      	ldr	r4, [pc, #112]	; (800e670 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 800e5fe:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800e600:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e602:	4e1c      	ldr	r6, [pc, #112]	; (800e674 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 800e604:	2101      	movs	r1, #1
 800e606:	f7ff ff95 	bl	800e534 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e60a:	4a1b      	ldr	r2, [pc, #108]	; (800e678 <vTaskSwitchContext+0x8c>)
 800e60c:	6833      	ldr	r3, [r6, #0]
 800e60e:	f04f 0c14 	mov.w	ip, #20
 800e612:	4617      	mov	r7, r2
 800e614:	fb0c f103 	mul.w	r1, ip, r3
 800e618:	1850      	adds	r0, r2, r1
 800e61a:	5855      	ldr	r5, [r2, r1]
 800e61c:	b1c5      	cbz	r5, 800e650 <vTaskSwitchContext+0x64>
 800e61e:	6845      	ldr	r5, [r0, #4]
 800e620:	3108      	adds	r1, #8
 800e622:	686d      	ldr	r5, [r5, #4]
 800e624:	6045      	str	r5, [r0, #4]
 800e626:	440a      	add	r2, r1
 800e628:	4295      	cmp	r5, r2
 800e62a:	bf04      	itt	eq
 800e62c:	686a      	ldreq	r2, [r5, #4]
 800e62e:	6042      	streq	r2, [r0, #4]
 800e630:	2214      	movs	r2, #20
 800e632:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 800e636:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e638:	6852      	ldr	r2, [r2, #4]
 800e63a:	68d2      	ldr	r2, [r2, #12]
 800e63c:	6022      	str	r2, [r4, #0]
 800e63e:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 800e640:	6820      	ldr	r0, [r4, #0]
 800e642:	f7ff ff77 	bl	800e534 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e646:	6823      	ldr	r3, [r4, #0]
 800e648:	4a0c      	ldr	r2, [pc, #48]	; (800e67c <vTaskSwitchContext+0x90>)
 800e64a:	3358      	adds	r3, #88	; 0x58
 800e64c:	6013      	str	r3, [r2, #0]
}
 800e64e:	e7d4      	b.n	800e5fa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e650:	b943      	cbnz	r3, 800e664 <vTaskSwitchContext+0x78>
 800e652:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e656:	f383 8811 	msr	BASEPRI, r3
 800e65a:	f3bf 8f6f 	isb	sy
 800e65e:	f3bf 8f4f 	dsb	sy
 800e662:	e7fe      	b.n	800e662 <vTaskSwitchContext+0x76>
 800e664:	3b01      	subs	r3, #1
 800e666:	e7d5      	b.n	800e614 <vTaskSwitchContext+0x28>
 800e668:	2001fecc 	.word	0x2001fecc
 800e66c:	2001ff50 	.word	0x2001ff50
 800e670:	2001fa58 	.word	0x2001fa58
 800e674:	2001fed4 	.word	0x2001fed4
 800e678:	2001fa64 	.word	0x2001fa64
 800e67c:	200000dc 	.word	0x200000dc

0800e680 <vTaskPlaceOnEventList>:
{
 800e680:	b510      	push	{r4, lr}
 800e682:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800e684:	b940      	cbnz	r0, 800e698 <vTaskPlaceOnEventList+0x18>
 800e686:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e68a:	f383 8811 	msr	BASEPRI, r3
 800e68e:	f3bf 8f6f 	isb	sy
 800e692:	f3bf 8f4f 	dsb	sy
 800e696:	e7fe      	b.n	800e696 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e698:	4b05      	ldr	r3, [pc, #20]	; (800e6b0 <vTaskPlaceOnEventList+0x30>)
 800e69a:	6819      	ldr	r1, [r3, #0]
 800e69c:	3118      	adds	r1, #24
 800e69e:	f7fe fd35 	bl	800d10c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e6a2:	4620      	mov	r0, r4
 800e6a4:	2101      	movs	r1, #1
}
 800e6a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e6aa:	f7ff bd57 	b.w	800e15c <prvAddCurrentTaskToDelayedList>
 800e6ae:	bf00      	nop
 800e6b0:	2001fa58 	.word	0x2001fa58

0800e6b4 <vTaskPlaceOnEventListRestricted>:
	{
 800e6b4:	b538      	push	{r3, r4, r5, lr}
 800e6b6:	460d      	mov	r5, r1
 800e6b8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800e6ba:	b940      	cbnz	r0, 800e6ce <vTaskPlaceOnEventListRestricted+0x1a>
 800e6bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6c0:	f383 8811 	msr	BASEPRI, r3
 800e6c4:	f3bf 8f6f 	isb	sy
 800e6c8:	f3bf 8f4f 	dsb	sy
 800e6cc:	e7fe      	b.n	800e6cc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e6ce:	4b07      	ldr	r3, [pc, #28]	; (800e6ec <vTaskPlaceOnEventListRestricted+0x38>)
 800e6d0:	6819      	ldr	r1, [r3, #0]
 800e6d2:	3118      	adds	r1, #24
 800e6d4:	f7fe fd0e 	bl	800d0f4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800e6d8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e6da:	4621      	mov	r1, r4
 800e6dc:	bf0c      	ite	eq
 800e6de:	4628      	moveq	r0, r5
 800e6e0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800e6e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e6e8:	f7ff bd38 	b.w	800e15c <prvAddCurrentTaskToDelayedList>
 800e6ec:	2001fa58 	.word	0x2001fa58

0800e6f0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6f0:	68c3      	ldr	r3, [r0, #12]
{
 800e6f2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6f4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800e6f6:	b944      	cbnz	r4, 800e70a <xTaskRemoveFromEventList+0x1a>
 800e6f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6fc:	f383 8811 	msr	BASEPRI, r3
 800e700:	f3bf 8f6f 	isb	sy
 800e704:	f3bf 8f4f 	dsb	sy
 800e708:	e7fe      	b.n	800e708 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800e70a:	f104 0118 	add.w	r1, r4, #24
 800e70e:	4608      	mov	r0, r1
 800e710:	9101      	str	r1, [sp, #4]
 800e712:	f7fe fd12 	bl	800d13a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e716:	4b12      	ldr	r3, [pc, #72]	; (800e760 <xTaskRemoveFromEventList+0x70>)
 800e718:	9901      	ldr	r1, [sp, #4]
 800e71a:	681b      	ldr	r3, [r3, #0]
 800e71c:	b9eb      	cbnz	r3, 800e75a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800e71e:	1d21      	adds	r1, r4, #4
 800e720:	4608      	mov	r0, r1
 800e722:	9101      	str	r1, [sp, #4]
 800e724:	f7fe fd09 	bl	800d13a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800e728:	4a0e      	ldr	r2, [pc, #56]	; (800e764 <xTaskRemoveFromEventList+0x74>)
 800e72a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e72c:	6810      	ldr	r0, [r2, #0]
 800e72e:	9901      	ldr	r1, [sp, #4]
 800e730:	4283      	cmp	r3, r0
 800e732:	bf88      	it	hi
 800e734:	6013      	strhi	r3, [r2, #0]
 800e736:	4a0c      	ldr	r2, [pc, #48]	; (800e768 <xTaskRemoveFromEventList+0x78>)
 800e738:	2014      	movs	r0, #20
 800e73a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e73e:	f7fe fcd9 	bl	800d0f4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800e742:	4b0a      	ldr	r3, [pc, #40]	; (800e76c <xTaskRemoveFromEventList+0x7c>)
 800e744:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e746:	681b      	ldr	r3, [r3, #0]
 800e748:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e74a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800e74c:	bf85      	ittet	hi
 800e74e:	4b08      	ldrhi	r3, [pc, #32]	; (800e770 <xTaskRemoveFromEventList+0x80>)
 800e750:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800e752:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800e754:	6018      	strhi	r0, [r3, #0]
}
 800e756:	b002      	add	sp, #8
 800e758:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e75a:	4806      	ldr	r0, [pc, #24]	; (800e774 <xTaskRemoveFromEventList+0x84>)
 800e75c:	e7ef      	b.n	800e73e <xTaskRemoveFromEventList+0x4e>
 800e75e:	bf00      	nop
 800e760:	2001fecc 	.word	0x2001fecc
 800e764:	2001fed4 	.word	0x2001fed4
 800e768:	2001fa64 	.word	0x2001fa64
 800e76c:	2001fa58 	.word	0x2001fa58
 800e770:	2001ff50 	.word	0x2001ff50
 800e774:	2001ff0c 	.word	0x2001ff0c

0800e778 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800e778:	4b03      	ldr	r3, [pc, #12]	; (800e788 <vTaskInternalSetTimeOutState+0x10>)
 800e77a:	681b      	ldr	r3, [r3, #0]
 800e77c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e77e:	4b03      	ldr	r3, [pc, #12]	; (800e78c <vTaskInternalSetTimeOutState+0x14>)
 800e780:	681b      	ldr	r3, [r3, #0]
 800e782:	6043      	str	r3, [r0, #4]
}
 800e784:	4770      	bx	lr
 800e786:	bf00      	nop
 800e788:	2001ff04 	.word	0x2001ff04
 800e78c:	2001ff4c 	.word	0x2001ff4c

0800e790 <xTaskCheckForTimeOut>:
{
 800e790:	b570      	push	{r4, r5, r6, lr}
 800e792:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800e794:	4605      	mov	r5, r0
 800e796:	b940      	cbnz	r0, 800e7aa <xTaskCheckForTimeOut+0x1a>
 800e798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e79c:	f383 8811 	msr	BASEPRI, r3
 800e7a0:	f3bf 8f6f 	isb	sy
 800e7a4:	f3bf 8f4f 	dsb	sy
 800e7a8:	e7fe      	b.n	800e7a8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800e7aa:	b941      	cbnz	r1, 800e7be <xTaskCheckForTimeOut+0x2e>
 800e7ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b0:	f383 8811 	msr	BASEPRI, r3
 800e7b4:	f3bf 8f6f 	isb	sy
 800e7b8:	f3bf 8f4f 	dsb	sy
 800e7bc:	e7fe      	b.n	800e7bc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800e7be:	f7fe fd39 	bl	800d234 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800e7c2:	4b0f      	ldr	r3, [pc, #60]	; (800e800 <xTaskCheckForTimeOut+0x70>)
 800e7c4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800e7c6:	6823      	ldr	r3, [r4, #0]
 800e7c8:	1c5a      	adds	r2, r3, #1
 800e7ca:	d010      	beq.n	800e7ee <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e7cc:	480d      	ldr	r0, [pc, #52]	; (800e804 <xTaskCheckForTimeOut+0x74>)
 800e7ce:	682e      	ldr	r6, [r5, #0]
 800e7d0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e7d2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e7d4:	4286      	cmp	r6, r0
 800e7d6:	d001      	beq.n	800e7dc <xTaskCheckForTimeOut+0x4c>
 800e7d8:	428a      	cmp	r2, r1
 800e7da:	d90f      	bls.n	800e7fc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e7dc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800e7de:	4283      	cmp	r3, r0
 800e7e0:	d90a      	bls.n	800e7f8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800e7e2:	1a5b      	subs	r3, r3, r1
 800e7e4:	4413      	add	r3, r2
 800e7e6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800e7e8:	4628      	mov	r0, r5
 800e7ea:	f7ff ffc5 	bl	800e778 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800e7ee:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e7f0:	f7fe fd42 	bl	800d278 <vPortExitCritical>
}
 800e7f4:	4620      	mov	r0, r4
 800e7f6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800e7f8:	2300      	movs	r3, #0
 800e7fa:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800e7fc:	2401      	movs	r4, #1
 800e7fe:	e7f7      	b.n	800e7f0 <xTaskCheckForTimeOut+0x60>
 800e800:	2001ff4c 	.word	0x2001ff4c
 800e804:	2001ff04 	.word	0x2001ff04

0800e808 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800e808:	4b01      	ldr	r3, [pc, #4]	; (800e810 <vTaskMissedYield+0x8>)
 800e80a:	2201      	movs	r2, #1
 800e80c:	601a      	str	r2, [r3, #0]
}
 800e80e:	4770      	bx	lr
 800e810:	2001ff50 	.word	0x2001ff50

0800e814 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800e814:	4b05      	ldr	r3, [pc, #20]	; (800e82c <xTaskGetSchedulerState+0x18>)
 800e816:	681b      	ldr	r3, [r3, #0]
 800e818:	b133      	cbz	r3, 800e828 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e81a:	4b05      	ldr	r3, [pc, #20]	; (800e830 <xTaskGetSchedulerState+0x1c>)
 800e81c:	681b      	ldr	r3, [r3, #0]
 800e81e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800e820:	bf0c      	ite	eq
 800e822:	2002      	moveq	r0, #2
 800e824:	2000      	movne	r0, #0
 800e826:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800e828:	2001      	movs	r0, #1
	}
 800e82a:	4770      	bx	lr
 800e82c:	2001ff20 	.word	0x2001ff20
 800e830:	2001fecc 	.word	0x2001fecc

0800e834 <xTaskPriorityInherit>:
	{
 800e834:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800e836:	4604      	mov	r4, r0
 800e838:	b350      	cbz	r0, 800e890 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800e83a:	4a1c      	ldr	r2, [pc, #112]	; (800e8ac <xTaskPriorityInherit+0x78>)
 800e83c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e83e:	6811      	ldr	r1, [r2, #0]
 800e840:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800e842:	428b      	cmp	r3, r1
 800e844:	4616      	mov	r6, r2
 800e846:	d229      	bcs.n	800e89c <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e848:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e84a:	4d19      	ldr	r5, [pc, #100]	; (800e8b0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e84c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e84e:	bfa1      	itttt	ge
 800e850:	6832      	ldrge	r2, [r6, #0]
 800e852:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800e854:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800e858:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e85a:	2214      	movs	r2, #20
 800e85c:	fb02 5303 	mla	r3, r2, r3, r5
 800e860:	6942      	ldr	r2, [r0, #20]
 800e862:	429a      	cmp	r2, r3
 800e864:	d116      	bne.n	800e894 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e866:	1d01      	adds	r1, r0, #4
 800e868:	4608      	mov	r0, r1
 800e86a:	9101      	str	r1, [sp, #4]
 800e86c:	f7fe fc65 	bl	800d13a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e870:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e872:	4a10      	ldr	r2, [pc, #64]	; (800e8b4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e874:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e876:	6810      	ldr	r0, [r2, #0]
 800e878:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e87a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e87c:	4283      	cmp	r3, r0
 800e87e:	f04f 0014 	mov.w	r0, #20
 800e882:	fb00 5003 	mla	r0, r0, r3, r5
 800e886:	bf88      	it	hi
 800e888:	6013      	strhi	r3, [r2, #0]
 800e88a:	f7fe fc33 	bl	800d0f4 <vListInsertEnd>
				xReturn = pdTRUE;
 800e88e:	2001      	movs	r0, #1
	}
 800e890:	b002      	add	sp, #8
 800e892:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e894:	6833      	ldr	r3, [r6, #0]
 800e896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e898:	62c3      	str	r3, [r0, #44]	; 0x2c
 800e89a:	e7f8      	b.n	800e88e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800e89c:	6813      	ldr	r3, [r2, #0]
 800e89e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e8a0:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800e8a2:	42a0      	cmp	r0, r4
 800e8a4:	bf2c      	ite	cs
 800e8a6:	2000      	movcs	r0, #0
 800e8a8:	2001      	movcc	r0, #1
 800e8aa:	e7f1      	b.n	800e890 <xTaskPriorityInherit+0x5c>
 800e8ac:	2001fa58 	.word	0x2001fa58
 800e8b0:	2001fa64 	.word	0x2001fa64
 800e8b4:	2001fed4 	.word	0x2001fed4

0800e8b8 <xTaskPriorityDisinherit>:
	{
 800e8b8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800e8ba:	b910      	cbnz	r0, 800e8c2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800e8bc:	2000      	movs	r0, #0
	}
 800e8be:	b002      	add	sp, #8
 800e8c0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800e8c2:	4b1c      	ldr	r3, [pc, #112]	; (800e934 <xTaskPriorityDisinherit+0x7c>)
 800e8c4:	681c      	ldr	r4, [r3, #0]
 800e8c6:	4284      	cmp	r4, r0
 800e8c8:	d008      	beq.n	800e8dc <xTaskPriorityDisinherit+0x24>
 800e8ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8ce:	f383 8811 	msr	BASEPRI, r3
 800e8d2:	f3bf 8f6f 	isb	sy
 800e8d6:	f3bf 8f4f 	dsb	sy
 800e8da:	e7fe      	b.n	800e8da <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800e8dc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800e8de:	b943      	cbnz	r3, 800e8f2 <xTaskPriorityDisinherit+0x3a>
 800e8e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8e4:	f383 8811 	msr	BASEPRI, r3
 800e8e8:	f3bf 8f6f 	isb	sy
 800e8ec:	f3bf 8f4f 	dsb	sy
 800e8f0:	e7fe      	b.n	800e8f0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e8f2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e8f4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800e8f6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e8f8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800e8fa:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e8fc:	d0de      	beq.n	800e8bc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800e8fe:	2b00      	cmp	r3, #0
 800e900:	d1dc      	bne.n	800e8bc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e902:	1d21      	adds	r1, r4, #4
 800e904:	4608      	mov	r0, r1
 800e906:	9101      	str	r1, [sp, #4]
 800e908:	f7fe fc17 	bl	800d13a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e90c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800e90e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e910:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e912:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800e916:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800e918:	4a07      	ldr	r2, [pc, #28]	; (800e938 <xTaskPriorityDisinherit+0x80>)
 800e91a:	6810      	ldr	r0, [r2, #0]
 800e91c:	4283      	cmp	r3, r0
 800e91e:	bf88      	it	hi
 800e920:	6013      	strhi	r3, [r2, #0]
 800e922:	4a06      	ldr	r2, [pc, #24]	; (800e93c <xTaskPriorityDisinherit+0x84>)
 800e924:	2014      	movs	r0, #20
 800e926:	fb00 2003 	mla	r0, r0, r3, r2
 800e92a:	f7fe fbe3 	bl	800d0f4 <vListInsertEnd>
					xReturn = pdTRUE;
 800e92e:	2001      	movs	r0, #1
		return xReturn;
 800e930:	e7c5      	b.n	800e8be <xTaskPriorityDisinherit+0x6>
 800e932:	bf00      	nop
 800e934:	2001fa58 	.word	0x2001fa58
 800e938:	2001fed4 	.word	0x2001fed4
 800e93c:	2001fa64 	.word	0x2001fa64

0800e940 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800e940:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800e942:	4604      	mov	r4, r0
 800e944:	2800      	cmp	r0, #0
 800e946:	d044      	beq.n	800e9d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800e948:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800e94a:	b942      	cbnz	r2, 800e95e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800e94c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e950:	f383 8811 	msr	BASEPRI, r3
 800e954:	f3bf 8f6f 	isb	sy
 800e958:	f3bf 8f4f 	dsb	sy
 800e95c:	e7fe      	b.n	800e95c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800e95e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800e960:	4299      	cmp	r1, r3
 800e962:	bf38      	it	cc
 800e964:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800e966:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e968:	428b      	cmp	r3, r1
 800e96a:	d032      	beq.n	800e9d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800e96c:	2a01      	cmp	r2, #1
 800e96e:	d130      	bne.n	800e9d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800e970:	4a19      	ldr	r2, [pc, #100]	; (800e9d8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800e972:	6812      	ldr	r2, [r2, #0]
 800e974:	4282      	cmp	r2, r0
 800e976:	d108      	bne.n	800e98a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800e978:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e97c:	f383 8811 	msr	BASEPRI, r3
 800e980:	f3bf 8f6f 	isb	sy
 800e984:	f3bf 8f4f 	dsb	sy
 800e988:	e7fe      	b.n	800e988 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e98a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e98c:	4d13      	ldr	r5, [pc, #76]	; (800e9dc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800e98e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e990:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e992:	f04f 0214 	mov.w	r2, #20
 800e996:	fb02 5303 	mla	r3, r2, r3, r5
 800e99a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e99c:	bfa4      	itt	ge
 800e99e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800e9a2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e9a4:	429a      	cmp	r2, r3
 800e9a6:	d114      	bne.n	800e9d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e9a8:	1d01      	adds	r1, r0, #4
 800e9aa:	4608      	mov	r0, r1
 800e9ac:	9101      	str	r1, [sp, #4]
 800e9ae:	f7fe fbc4 	bl	800d13a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800e9b2:	4a0b      	ldr	r2, [pc, #44]	; (800e9e0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800e9b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e9b6:	6810      	ldr	r0, [r2, #0]
 800e9b8:	9901      	ldr	r1, [sp, #4]
 800e9ba:	4283      	cmp	r3, r0
 800e9bc:	f04f 0014 	mov.w	r0, #20
 800e9c0:	fb00 5003 	mla	r0, r0, r3, r5
 800e9c4:	bf88      	it	hi
 800e9c6:	6013      	strhi	r3, [r2, #0]
	}
 800e9c8:	b003      	add	sp, #12
 800e9ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800e9ce:	f7fe bb91 	b.w	800d0f4 <vListInsertEnd>
	}
 800e9d2:	b003      	add	sp, #12
 800e9d4:	bd30      	pop	{r4, r5, pc}
 800e9d6:	bf00      	nop
 800e9d8:	2001fa58 	.word	0x2001fa58
 800e9dc:	2001fa64 	.word	0x2001fa64
 800e9e0:	2001fed4 	.word	0x2001fed4

0800e9e4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800e9e4:	4b04      	ldr	r3, [pc, #16]	; (800e9f8 <pvTaskIncrementMutexHeldCount+0x14>)
 800e9e6:	681a      	ldr	r2, [r3, #0]
 800e9e8:	b11a      	cbz	r2, 800e9f2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800e9ea:	6819      	ldr	r1, [r3, #0]
 800e9ec:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800e9ee:	3201      	adds	r2, #1
 800e9f0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800e9f2:	6818      	ldr	r0, [r3, #0]
	}
 800e9f4:	4770      	bx	lr
 800e9f6:	bf00      	nop
 800e9f8:	2001fa58 	.word	0x2001fa58

0800e9fc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800e9fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800e9fe:	4c11      	ldr	r4, [pc, #68]	; (800ea44 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800ea00:	f7fe fc18 	bl	800d234 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800ea04:	6825      	ldr	r5, [r4, #0]
 800ea06:	b9bd      	cbnz	r5, 800ea38 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800ea08:	4f0f      	ldr	r7, [pc, #60]	; (800ea48 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800ea0a:	4e10      	ldr	r6, [pc, #64]	; (800ea4c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800ea0c:	4638      	mov	r0, r7
 800ea0e:	f7fe fb63 	bl	800d0d8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800ea12:	4630      	mov	r0, r6
 800ea14:	f7fe fb60 	bl	800d0d8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800ea18:	4b0d      	ldr	r3, [pc, #52]	; (800ea50 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ea1a:	4a0e      	ldr	r2, [pc, #56]	; (800ea54 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800ea1c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800ea1e:	4b0e      	ldr	r3, [pc, #56]	; (800ea58 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ea20:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800ea22:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ea24:	200a      	movs	r0, #10
 800ea26:	4b0d      	ldr	r3, [pc, #52]	; (800ea5c <prvCheckForValidListAndQueue+0x60>)
 800ea28:	9500      	str	r5, [sp, #0]
 800ea2a:	f7fe fe1b 	bl	800d664 <xQueueGenericCreateStatic>
 800ea2e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800ea30:	b110      	cbz	r0, 800ea38 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800ea32:	490b      	ldr	r1, [pc, #44]	; (800ea60 <prvCheckForValidListAndQueue+0x64>)
 800ea34:	f7ff f9e8 	bl	800de08 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800ea38:	b003      	add	sp, #12
 800ea3a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800ea3e:	f7fe bc1b 	b.w	800d278 <vPortExitCritical>
 800ea42:	bf00      	nop
 800ea44:	20020078 	.word	0x20020078
 800ea48:	2001fffc 	.word	0x2001fffc
 800ea4c:	20020010 	.word	0x20020010
 800ea50:	2001ff54 	.word	0x2001ff54
 800ea54:	2001ff5c 	.word	0x2001ff5c
 800ea58:	2001ff58 	.word	0x2001ff58
 800ea5c:	20020028 	.word	0x20020028
 800ea60:	08027242 	.word	0x08027242

0800ea64 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800ea64:	4291      	cmp	r1, r2
{
 800ea66:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ea68:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ea6a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ea6c:	d80a      	bhi.n	800ea84 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea6e:	1ad2      	subs	r2, r2, r3
 800ea70:	6983      	ldr	r3, [r0, #24]
 800ea72:	429a      	cmp	r2, r3
 800ea74:	d20d      	bcs.n	800ea92 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ea76:	4b08      	ldr	r3, [pc, #32]	; (800ea98 <prvInsertTimerInActiveList+0x34>)
 800ea78:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ea7a:	6818      	ldr	r0, [r3, #0]
 800ea7c:	f7fe fb46 	bl	800d10c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800ea80:	2000      	movs	r0, #0
}
 800ea82:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ea84:	429a      	cmp	r2, r3
 800ea86:	d201      	bcs.n	800ea8c <prvInsertTimerInActiveList+0x28>
 800ea88:	4299      	cmp	r1, r3
 800ea8a:	d202      	bcs.n	800ea92 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ea8c:	4b03      	ldr	r3, [pc, #12]	; (800ea9c <prvInsertTimerInActiveList+0x38>)
 800ea8e:	1d01      	adds	r1, r0, #4
 800ea90:	e7f3      	b.n	800ea7a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800ea92:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800ea94:	e7f5      	b.n	800ea82 <prvInsertTimerInActiveList+0x1e>
 800ea96:	bf00      	nop
 800ea98:	2001ff58 	.word	0x2001ff58
 800ea9c:	2001ff54 	.word	0x2001ff54

0800eaa0 <xTimerCreateTimerTask>:
{
 800eaa0:	b510      	push	{r4, lr}
 800eaa2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800eaa4:	f7ff ffaa 	bl	800e9fc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800eaa8:	4b12      	ldr	r3, [pc, #72]	; (800eaf4 <xTimerCreateTimerTask+0x54>)
 800eaaa:	681b      	ldr	r3, [r3, #0]
 800eaac:	b1b3      	cbz	r3, 800eadc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800eaae:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800eab0:	aa07      	add	r2, sp, #28
 800eab2:	a906      	add	r1, sp, #24
 800eab4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800eab6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800eaba:	f7fe fa0d 	bl	800ced8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800eabe:	9b05      	ldr	r3, [sp, #20]
 800eac0:	9302      	str	r3, [sp, #8]
 800eac2:	9b06      	ldr	r3, [sp, #24]
 800eac4:	9301      	str	r3, [sp, #4]
 800eac6:	2302      	movs	r3, #2
 800eac8:	9300      	str	r3, [sp, #0]
 800eaca:	9a07      	ldr	r2, [sp, #28]
 800eacc:	490a      	ldr	r1, [pc, #40]	; (800eaf8 <xTimerCreateTimerTask+0x58>)
 800eace:	480b      	ldr	r0, [pc, #44]	; (800eafc <xTimerCreateTimerTask+0x5c>)
 800ead0:	4623      	mov	r3, r4
 800ead2:	f7ff fb7d 	bl	800e1d0 <xTaskCreateStatic>
 800ead6:	4b0a      	ldr	r3, [pc, #40]	; (800eb00 <xTimerCreateTimerTask+0x60>)
 800ead8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800eada:	b940      	cbnz	r0, 800eaee <xTimerCreateTimerTask+0x4e>
 800eadc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eae0:	f383 8811 	msr	BASEPRI, r3
 800eae4:	f3bf 8f6f 	isb	sy
 800eae8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800eaec:	e7fe      	b.n	800eaec <xTimerCreateTimerTask+0x4c>
}
 800eaee:	2001      	movs	r0, #1
 800eaf0:	b008      	add	sp, #32
 800eaf2:	bd10      	pop	{r4, pc}
 800eaf4:	20020078 	.word	0x20020078
 800eaf8:	08027247 	.word	0x08027247
 800eafc:	0800ebd9 	.word	0x0800ebd9
 800eb00:	2002007c 	.word	0x2002007c

0800eb04 <xTimerGenericCommand>:
{
 800eb04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eb06:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800eb08:	4604      	mov	r4, r0
{
 800eb0a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800eb0c:	b940      	cbnz	r0, 800eb20 <xTimerGenericCommand+0x1c>
 800eb0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb12:	f383 8811 	msr	BASEPRI, r3
 800eb16:	f3bf 8f6f 	isb	sy
 800eb1a:	f3bf 8f4f 	dsb	sy
 800eb1e:	e7fe      	b.n	800eb1e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800eb20:	4d0d      	ldr	r5, [pc, #52]	; (800eb58 <xTimerGenericCommand+0x54>)
 800eb22:	6828      	ldr	r0, [r5, #0]
 800eb24:	b180      	cbz	r0, 800eb48 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800eb26:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800eb28:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800eb2c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800eb2e:	dc0d      	bgt.n	800eb4c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eb30:	f7ff fe70 	bl	800e814 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eb34:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eb36:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eb38:	bf08      	it	eq
 800eb3a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800eb3c:	6828      	ldr	r0, [r5, #0]
 800eb3e:	bf18      	it	ne
 800eb40:	461a      	movne	r2, r3
 800eb42:	4669      	mov	r1, sp
 800eb44:	f7fe fe44 	bl	800d7d0 <xQueueGenericSend>
}
 800eb48:	b004      	add	sp, #16
 800eb4a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800eb4c:	2300      	movs	r3, #0
 800eb4e:	4669      	mov	r1, sp
 800eb50:	f7fe fef0 	bl	800d934 <xQueueGenericSendFromISR>
 800eb54:	e7f8      	b.n	800eb48 <xTimerGenericCommand+0x44>
 800eb56:	bf00      	nop
 800eb58:	20020078 	.word	0x20020078

0800eb5c <prvSwitchTimerLists>:
{
 800eb5c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800eb5e:	4d1c      	ldr	r5, [pc, #112]	; (800ebd0 <prvSwitchTimerLists+0x74>)
{
 800eb60:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800eb62:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800eb64:	682b      	ldr	r3, [r5, #0]
 800eb66:	681a      	ldr	r2, [r3, #0]
 800eb68:	b92a      	cbnz	r2, 800eb76 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800eb6a:	4a1a      	ldr	r2, [pc, #104]	; (800ebd4 <prvSwitchTimerLists+0x78>)
 800eb6c:	6811      	ldr	r1, [r2, #0]
 800eb6e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 800eb70:	6013      	str	r3, [r2, #0]
}
 800eb72:	b005      	add	sp, #20
 800eb74:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eb76:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb78:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eb7a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eb7c:	1d21      	adds	r1, r4, #4
 800eb7e:	4608      	mov	r0, r1
 800eb80:	9103      	str	r1, [sp, #12]
 800eb82:	f7fe fada 	bl	800d13a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eb86:	6a23      	ldr	r3, [r4, #32]
 800eb88:	4620      	mov	r0, r4
 800eb8a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eb8c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800eb90:	9903      	ldr	r1, [sp, #12]
 800eb92:	f013 0f04 	tst.w	r3, #4
 800eb96:	d0e5      	beq.n	800eb64 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800eb98:	69a3      	ldr	r3, [r4, #24]
 800eb9a:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800eb9c:	429e      	cmp	r6, r3
 800eb9e:	d205      	bcs.n	800ebac <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eba0:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800eba2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eba4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eba6:	f7fe fab1 	bl	800d10c <vListInsert>
 800ebaa:	e7db      	b.n	800eb64 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ebac:	2300      	movs	r3, #0
 800ebae:	9700      	str	r7, [sp, #0]
 800ebb0:	4632      	mov	r2, r6
 800ebb2:	4619      	mov	r1, r3
 800ebb4:	4620      	mov	r0, r4
 800ebb6:	f7ff ffa5 	bl	800eb04 <xTimerGenericCommand>
				configASSERT( xResult );
 800ebba:	2800      	cmp	r0, #0
 800ebbc:	d1d2      	bne.n	800eb64 <prvSwitchTimerLists+0x8>
 800ebbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebc2:	f383 8811 	msr	BASEPRI, r3
 800ebc6:	f3bf 8f6f 	isb	sy
 800ebca:	f3bf 8f4f 	dsb	sy
 800ebce:	e7fe      	b.n	800ebce <prvSwitchTimerLists+0x72>
 800ebd0:	2001ff54 	.word	0x2001ff54
 800ebd4:	2001ff58 	.word	0x2001ff58

0800ebd8 <prvTimerTask>:
{
 800ebd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ebdc:	4f77      	ldr	r7, [pc, #476]	; (800edbc <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 800ebde:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 800edcc <prvTimerTask+0x1f4>
{
 800ebe2:	b087      	sub	sp, #28
 800ebe4:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ebe6:	683b      	ldr	r3, [r7, #0]
 800ebe8:	f8d3 b000 	ldr.w	fp, [r3]
 800ebec:	f1bb 0f00 	cmp.w	fp, #0
 800ebf0:	d028      	beq.n	800ec44 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ebf2:	68db      	ldr	r3, [r3, #12]
 800ebf4:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ebf8:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800ebfa:	4e71      	ldr	r6, [pc, #452]	; (800edc0 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 800ebfc:	f7ff fb4e 	bl	800e29c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ec00:	f7ff fb54 	bl	800e2ac <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ec04:	6833      	ldr	r3, [r6, #0]
 800ec06:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800ec08:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ec0a:	46b0      	mov	r8, r6
 800ec0c:	d31c      	bcc.n	800ec48 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800ec0e:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ec10:	b31c      	cbz	r4, 800ec5a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ec12:	4b6c      	ldr	r3, [pc, #432]	; (800edc4 <prvTimerTask+0x1ec>)
 800ec14:	681b      	ldr	r3, [r3, #0]
 800ec16:	681c      	ldr	r4, [r3, #0]
 800ec18:	fab4 f484 	clz	r4, r4
 800ec1c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ec1e:	4b6a      	ldr	r3, [pc, #424]	; (800edc8 <prvTimerTask+0x1f0>)
 800ec20:	4622      	mov	r2, r4
 800ec22:	6818      	ldr	r0, [r3, #0]
 800ec24:	ebab 0105 	sub.w	r1, fp, r5
 800ec28:	f7ff f92d 	bl	800de86 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ec2c:	f7ff fbda 	bl	800e3e4 <xTaskResumeAll>
 800ec30:	b978      	cbnz	r0, 800ec52 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 800ec32:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800ec36:	f8ca 3000 	str.w	r3, [sl]
 800ec3a:	f3bf 8f4f 	dsb	sy
 800ec3e:	f3bf 8f6f 	isb	sy
 800ec42:	e006      	b.n	800ec52 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ec44:	2401      	movs	r4, #1
 800ec46:	e7d8      	b.n	800ebfa <prvTimerTask+0x22>
		prvSwitchTimerLists();
 800ec48:	f7ff ff88 	bl	800eb5c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800ec4c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800ec4e:	f7ff fbc9 	bl	800e3e4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ec52:	4e5d      	ldr	r6, [pc, #372]	; (800edc8 <prvTimerTask+0x1f0>)
 800ec54:	f04f 0b00 	mov.w	fp, #0
 800ec58:	e035      	b.n	800ecc6 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ec5a:	4583      	cmp	fp, r0
 800ec5c:	d8df      	bhi.n	800ec1e <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800ec5e:	f7ff fbc1 	bl	800e3e4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec62:	f8d9 3000 	ldr.w	r3, [r9]
 800ec66:	68db      	ldr	r3, [r3, #12]
 800ec68:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ec6a:	1d30      	adds	r0, r6, #4
 800ec6c:	f7fe fa65 	bl	800d13a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ec70:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 800ec74:	0758      	lsls	r0, r3, #29
 800ec76:	d518      	bpl.n	800ecaa <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ec78:	69b1      	ldr	r1, [r6, #24]
 800ec7a:	465b      	mov	r3, fp
 800ec7c:	462a      	mov	r2, r5
 800ec7e:	4459      	add	r1, fp
 800ec80:	4630      	mov	r0, r6
 800ec82:	f7ff feef 	bl	800ea64 <prvInsertTimerInActiveList>
 800ec86:	b1a0      	cbz	r0, 800ecb2 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ec88:	9400      	str	r4, [sp, #0]
 800ec8a:	4623      	mov	r3, r4
 800ec8c:	465a      	mov	r2, fp
 800ec8e:	4621      	mov	r1, r4
 800ec90:	4630      	mov	r0, r6
 800ec92:	f7ff ff37 	bl	800eb04 <xTimerGenericCommand>
			configASSERT( xResult );
 800ec96:	b960      	cbnz	r0, 800ecb2 <prvTimerTask+0xda>
 800ec98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec9c:	f383 8811 	msr	BASEPRI, r3
 800eca0:	f3bf 8f6f 	isb	sy
 800eca4:	f3bf 8f4f 	dsb	sy
 800eca8:	e7fe      	b.n	800eca8 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ecaa:	f023 0301 	bic.w	r3, r3, #1
 800ecae:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ecb2:	6a33      	ldr	r3, [r6, #32]
 800ecb4:	4630      	mov	r0, r6
 800ecb6:	4798      	blx	r3
}
 800ecb8:	e7cb      	b.n	800ec52 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ecba:	9b03      	ldr	r3, [sp, #12]
 800ecbc:	9905      	ldr	r1, [sp, #20]
 800ecbe:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800ecc0:	9b02      	ldr	r3, [sp, #8]
 800ecc2:	2b00      	cmp	r3, #0
 800ecc4:	da0a      	bge.n	800ecdc <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ecc6:	6830      	ldr	r0, [r6, #0]
 800ecc8:	2200      	movs	r2, #0
 800ecca:	a902      	add	r1, sp, #8
 800eccc:	f7fe fee8 	bl	800daa0 <xQueueReceive>
 800ecd0:	2800      	cmp	r0, #0
 800ecd2:	d088      	beq.n	800ebe6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ecd4:	9b02      	ldr	r3, [sp, #8]
 800ecd6:	9804      	ldr	r0, [sp, #16]
 800ecd8:	2b00      	cmp	r3, #0
 800ecda:	dbee      	blt.n	800ecba <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ecdc:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ecde:	6963      	ldr	r3, [r4, #20]
 800ece0:	b9a3      	cbnz	r3, 800ed0c <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 800ece2:	f7ff fae3 	bl	800e2ac <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ece6:	f8d8 3000 	ldr.w	r3, [r8]
 800ecea:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800ecec:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ecee:	d201      	bcs.n	800ecf4 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 800ecf0:	f7ff ff34 	bl	800eb5c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800ecf4:	9b02      	ldr	r3, [sp, #8]
 800ecf6:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800ecfa:	2b09      	cmp	r3, #9
 800ecfc:	d8e3      	bhi.n	800ecc6 <prvTimerTask+0xee>
 800ecfe:	e8df f003 	tbb	[pc, r3]
 800ed02:	0909      	.short	0x0909
 800ed04:	543b3409 	.word	0x543b3409
 800ed08:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ed0c:	1d20      	adds	r0, r4, #4
 800ed0e:	f7fe fa14 	bl	800d13a <uxListRemove>
 800ed12:	e7e6      	b.n	800ece2 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ed14:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ed18:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ed1a:	f043 0301 	orr.w	r3, r3, #1
 800ed1e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ed22:	9b03      	ldr	r3, [sp, #12]
 800ed24:	462a      	mov	r2, r5
 800ed26:	4419      	add	r1, r3
 800ed28:	4620      	mov	r0, r4
 800ed2a:	f7ff fe9b 	bl	800ea64 <prvInsertTimerInActiveList>
 800ed2e:	2800      	cmp	r0, #0
 800ed30:	d0c9      	beq.n	800ecc6 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ed32:	6a23      	ldr	r3, [r4, #32]
 800ed34:	4620      	mov	r0, r4
 800ed36:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ed38:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ed3c:	0759      	lsls	r1, r3, #29
 800ed3e:	d5c2      	bpl.n	800ecc6 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ed40:	69a2      	ldr	r2, [r4, #24]
 800ed42:	9903      	ldr	r1, [sp, #12]
 800ed44:	f8cd b000 	str.w	fp, [sp]
 800ed48:	2300      	movs	r3, #0
 800ed4a:	440a      	add	r2, r1
 800ed4c:	4620      	mov	r0, r4
 800ed4e:	4619      	mov	r1, r3
 800ed50:	f7ff fed8 	bl	800eb04 <xTimerGenericCommand>
							configASSERT( xResult );
 800ed54:	2800      	cmp	r0, #0
 800ed56:	d1b6      	bne.n	800ecc6 <prvTimerTask+0xee>
 800ed58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed5c:	f383 8811 	msr	BASEPRI, r3
 800ed60:	f3bf 8f6f 	isb	sy
 800ed64:	f3bf 8f4f 	dsb	sy
 800ed68:	e7fe      	b.n	800ed68 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ed6a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ed6e:	f023 0301 	bic.w	r3, r3, #1
 800ed72:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ed76:	e7a6      	b.n	800ecc6 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ed78:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ed7c:	9903      	ldr	r1, [sp, #12]
 800ed7e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ed80:	f043 0301 	orr.w	r3, r3, #1
 800ed84:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ed88:	b941      	cbnz	r1, 800ed9c <prvTimerTask+0x1c4>
 800ed8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed8e:	f383 8811 	msr	BASEPRI, r3
 800ed92:	f3bf 8f6f 	isb	sy
 800ed96:	f3bf 8f4f 	dsb	sy
 800ed9a:	e7fe      	b.n	800ed9a <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ed9c:	462b      	mov	r3, r5
 800ed9e:	462a      	mov	r2, r5
 800eda0:	4429      	add	r1, r5
 800eda2:	4620      	mov	r0, r4
 800eda4:	f7ff fe5e 	bl	800ea64 <prvInsertTimerInActiveList>
					break;
 800eda8:	e78d      	b.n	800ecc6 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800edaa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800edae:	079a      	lsls	r2, r3, #30
 800edb0:	d4dd      	bmi.n	800ed6e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 800edb2:	4620      	mov	r0, r4
 800edb4:	f7fe f952 	bl	800d05c <vPortFree>
 800edb8:	e785      	b.n	800ecc6 <prvTimerTask+0xee>
 800edba:	bf00      	nop
 800edbc:	2001ff54 	.word	0x2001ff54
 800edc0:	20020024 	.word	0x20020024
 800edc4:	2001ff58 	.word	0x2001ff58
 800edc8:	20020078 	.word	0x20020078
 800edcc:	e000ed04 	.word	0xe000ed04

0800edd0 <is_leap_year>:
is_leap_year(uint16_t year)
{
    div_t           d;

    /* year must be divisible by 4 to be a leap year */
    if (year & 3)
 800edd0:	0783      	lsls	r3, r0, #30
{
 800edd2:	b507      	push	{r0, r1, r2, lr}
 800edd4:	4601      	mov	r1, r0
    if (year & 3)
 800edd6:	d10e      	bne.n	800edf6 <is_leap_year+0x26>
        return 0;

    /* If there is a remainder after division by 100, year is not divisible by 100 or 400 */
    d = div(year, 100);
 800edd8:	2264      	movs	r2, #100	; 0x64
 800edda:	4668      	mov	r0, sp
 800eddc:	f014 f8c6 	bl	8022f6c <div>
    if (d.rem)
 800ede0:	9b01      	ldr	r3, [sp, #4]
 800ede2:	b953      	cbnz	r3, 800edfa <is_leap_year+0x2a>
        return 1;

    /* If the quotient is divisible by 4, then year is divisible by 400 */
    if ((d.quot & 3) == 0)
 800ede4:	9b00      	ldr	r3, [sp, #0]
 800ede6:	f013 0f03 	tst.w	r3, #3
        return 0;
 800edea:	bf0c      	ite	eq
 800edec:	2001      	moveq	r0, #1
 800edee:	2000      	movne	r0, #0
        return 1;

    return 0;
}
 800edf0:	b003      	add	sp, #12
 800edf2:	f85d fb04 	ldr.w	pc, [sp], #4
        return 0;
 800edf6:	2000      	movs	r0, #0
 800edf8:	e7fa      	b.n	800edf0 <is_leap_year+0x20>
        return 1;
 800edfa:	2001      	movs	r0, #1
 800edfc:	e7f8      	b.n	800edf0 <is_leap_year+0x20>

0800edfe <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800edfe:	8880      	ldrh	r0, [r0, #4]
 800ee00:	4770      	bx	lr

0800ee02 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ee02:	2300      	movs	r3, #0
 800ee04:	8083      	strh	r3, [r0, #4]
 800ee06:	4770      	bx	lr

0800ee08 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ee08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee0a:	6803      	ldr	r3, [r0, #0]
 800ee0c:	4605      	mov	r5, r0
 800ee0e:	460e      	mov	r6, r1
 800ee10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ee12:	2100      	movs	r1, #0
 800ee14:	4798      	blx	r3
 800ee16:	682b      	ldr	r3, [r5, #0]
 800ee18:	4604      	mov	r4, r0
 800ee1a:	6a1b      	ldr	r3, [r3, #32]
 800ee1c:	4628      	mov	r0, r5
 800ee1e:	4798      	blx	r3
 800ee20:	88ab      	ldrh	r3, [r5, #4]
 800ee22:	1b34      	subs	r4, r6, r4
 800ee24:	b2a4      	uxth	r4, r4
 800ee26:	fbb4 f4f0 	udiv	r4, r4, r0
 800ee2a:	42a3      	cmp	r3, r4
 800ee2c:	d805      	bhi.n	800ee3a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800ee2e:	4b0e      	ldr	r3, [pc, #56]	; (800ee68 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800ee30:	4a0e      	ldr	r2, [pc, #56]	; (800ee6c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800ee32:	211e      	movs	r1, #30
 800ee34:	480e      	ldr	r0, [pc, #56]	; (800ee70 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800ee36:	f014 f867 	bl	8022f08 <__assert_func>
 800ee3a:	682b      	ldr	r3, [r5, #0]
 800ee3c:	2100      	movs	r1, #0
 800ee3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ee40:	4628      	mov	r0, r5
 800ee42:	4798      	blx	r3
 800ee44:	682b      	ldr	r3, [r5, #0]
 800ee46:	4607      	mov	r7, r0
 800ee48:	6a1b      	ldr	r3, [r3, #32]
 800ee4a:	4628      	mov	r0, r5
 800ee4c:	4798      	blx	r3
 800ee4e:	1bf3      	subs	r3, r6, r7
 800ee50:	b29b      	uxth	r3, r3
 800ee52:	fbb3 f2f0 	udiv	r2, r3, r0
 800ee56:	fb02 3010 	mls	r0, r2, r0, r3
 800ee5a:	b118      	cbz	r0, 800ee64 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800ee5c:	4b05      	ldr	r3, [pc, #20]	; (800ee74 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800ee5e:	4a03      	ldr	r2, [pc, #12]	; (800ee6c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800ee60:	211f      	movs	r1, #31
 800ee62:	e7e7      	b.n	800ee34 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800ee64:	4620      	mov	r0, r4
 800ee66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee68:	0802724f 	.word	0x0802724f
 800ee6c:	080273ba 	.word	0x080273ba
 800ee70:	08027264 	.word	0x08027264
 800ee74:	08027292 	.word	0x08027292

0800ee78 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800ee78:	b538      	push	{r3, r4, r5, lr}
 800ee7a:	6803      	ldr	r3, [r0, #0]
 800ee7c:	6a1b      	ldr	r3, [r3, #32]
 800ee7e:	460d      	mov	r5, r1
 800ee80:	4604      	mov	r4, r0
 800ee82:	4798      	blx	r3
 800ee84:	4285      	cmp	r5, r0
 800ee86:	d905      	bls.n	800ee94 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800ee88:	4b0c      	ldr	r3, [pc, #48]	; (800eebc <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800ee8a:	4a0d      	ldr	r2, [pc, #52]	; (800eec0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800ee8c:	2130      	movs	r1, #48	; 0x30
 800ee8e:	480d      	ldr	r0, [pc, #52]	; (800eec4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800ee90:	f014 f83a 	bl	8022f08 <__assert_func>
 800ee94:	6823      	ldr	r3, [r4, #0]
 800ee96:	88a5      	ldrh	r5, [r4, #4]
 800ee98:	69db      	ldr	r3, [r3, #28]
 800ee9a:	4620      	mov	r0, r4
 800ee9c:	4798      	blx	r3
 800ee9e:	4285      	cmp	r5, r0
 800eea0:	d303      	bcc.n	800eeaa <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800eea2:	4b09      	ldr	r3, [pc, #36]	; (800eec8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800eea4:	4a06      	ldr	r2, [pc, #24]	; (800eec0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800eea6:	2131      	movs	r1, #49	; 0x31
 800eea8:	e7f1      	b.n	800ee8e <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800eeaa:	6823      	ldr	r3, [r4, #0]
 800eeac:	88a1      	ldrh	r1, [r4, #4]
 800eeae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eeb0:	4620      	mov	r0, r4
 800eeb2:	4798      	blx	r3
 800eeb4:	88a3      	ldrh	r3, [r4, #4]
 800eeb6:	3301      	adds	r3, #1
 800eeb8:	80a3      	strh	r3, [r4, #4]
 800eeba:	bd38      	pop	{r3, r4, r5, pc}
 800eebc:	0802730c 	.word	0x0802730c
 800eec0:	080273fd 	.word	0x080273fd
 800eec4:	08027264 	.word	0x08027264
 800eec8:	08027323 	.word	0x08027323

0800eecc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800eecc:	b570      	push	{r4, r5, r6, lr}
 800eece:	6803      	ldr	r3, [r0, #0]
 800eed0:	6a1b      	ldr	r3, [r3, #32]
 800eed2:	4616      	mov	r6, r2
 800eed4:	4604      	mov	r4, r0
 800eed6:	460d      	mov	r5, r1
 800eed8:	4798      	blx	r3
 800eeda:	4286      	cmp	r6, r0
 800eedc:	d905      	bls.n	800eeea <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800eede:	4b06      	ldr	r3, [pc, #24]	; (800eef8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800eee0:	4a06      	ldr	r2, [pc, #24]	; (800eefc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800eee2:	4807      	ldr	r0, [pc, #28]	; (800ef00 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800eee4:	213a      	movs	r1, #58	; 0x3a
 800eee6:	f014 f80f 	bl	8022f08 <__assert_func>
 800eeea:	6823      	ldr	r3, [r4, #0]
 800eeec:	4629      	mov	r1, r5
 800eeee:	4620      	mov	r0, r4
 800eef0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eef2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eef6:	4718      	bx	r3
 800eef8:	0802730c 	.word	0x0802730c
 800eefc:	08027370 	.word	0x08027370
 800ef00:	08027264 	.word	0x08027264

0800ef04 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800ef04:	4770      	bx	lr
	...

0800ef08 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800ef08:	4a02      	ldr	r2, [pc, #8]	; (800ef14 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800ef0a:	6002      	str	r2, [r0, #0]
 800ef0c:	2200      	movs	r2, #0
 800ef0e:	8082      	strh	r2, [r0, #4]
 800ef10:	4770      	bx	lr
 800ef12:	bf00      	nop
 800ef14:	08027344 	.word	0x08027344

0800ef18 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800ef18:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800ef1c:	4770      	bx	lr

0800ef1e <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800ef1e:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800ef22:	4770      	bx	lr

0800ef24 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800ef24:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800ef28:	4770      	bx	lr

0800ef2a <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800ef2a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ef2c:	4770      	bx	lr

0800ef2e <_ZN8touchgfx11ModalWindow4showEv>:
 800ef2e:	2201      	movs	r2, #1
 800ef30:	6803      	ldr	r3, [r0, #0]
 800ef32:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800ef36:	695b      	ldr	r3, [r3, #20]
 800ef38:	4718      	bx	r3

0800ef3a <_ZN8touchgfx11ModalWindow4hideEv>:
 800ef3a:	2200      	movs	r2, #0
 800ef3c:	6803      	ldr	r3, [r0, #0]
 800ef3e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800ef42:	695b      	ldr	r3, [r3, #20]
 800ef44:	4718      	bx	r3

0800ef46 <_ZN8touchgfx11ModalWindowD1Ev>:
 800ef46:	4770      	bx	lr

0800ef48 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800ef48:	3058      	adds	r0, #88	; 0x58
 800ef4a:	f000 b943 	b.w	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800ef4e <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800ef4e:	6541      	str	r1, [r0, #84]	; 0x54
 800ef50:	302c      	adds	r0, #44	; 0x2c
 800ef52:	f005 b96f 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ef56 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800ef56:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800ef5a:	302c      	adds	r0, #44	; 0x2c
 800ef5c:	f005 b96a 	b.w	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ef60 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800ef60:	3058      	adds	r0, #88	; 0x58
 800ef62:	f000 b905 	b.w	800f170 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800ef66 <_ZN8touchgfx11ModalWindowD0Ev>:
 800ef66:	b510      	push	{r4, lr}
 800ef68:	21b0      	movs	r1, #176	; 0xb0
 800ef6a:	4604      	mov	r4, r0
 800ef6c:	f013 ff9e 	bl	8022eac <_ZdlPvj>
 800ef70:	4620      	mov	r0, r4
 800ef72:	bd10      	pop	{r4, pc}

0800ef74 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800ef74:	b570      	push	{r4, r5, r6, lr}
 800ef76:	4604      	mov	r4, r0
 800ef78:	461e      	mov	r6, r3
 800ef7a:	f854 3b58 	ldr.w	r3, [r4], #88
 800ef7e:	4615      	mov	r5, r2
 800ef80:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ef84:	4798      	blx	r3
 800ef86:	4632      	mov	r2, r6
 800ef88:	4629      	mov	r1, r5
 800ef8a:	4620      	mov	r0, r4
 800ef8c:	f7f3 f982 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800ef90:	bd70      	pop	{r4, r5, r6, pc}

0800ef92 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800ef92:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ef94:	880b      	ldrh	r3, [r1, #0]
 800ef96:	a902      	add	r1, sp, #8
 800ef98:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800ef9c:	4604      	mov	r4, r0
 800ef9e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800efa2:	4628      	mov	r0, r5
 800efa4:	f002 f8e2 	bl	801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800efa8:	2200      	movs	r2, #0
 800efaa:	4611      	mov	r1, r2
 800efac:	4628      	mov	r0, r5
 800efae:	f7f3 f971 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800efb2:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800efb6:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800efba:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800efbe:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800efc2:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800efc6:	2302      	movs	r3, #2
 800efc8:	4628      	mov	r0, r5
 800efca:	1bd2      	subs	r2, r2, r7
 800efcc:	1b89      	subs	r1, r1, r6
 800efce:	fb92 f2f3 	sdiv	r2, r2, r3
 800efd2:	fb91 f1f3 	sdiv	r1, r1, r3
 800efd6:	b212      	sxth	r2, r2
 800efd8:	b209      	sxth	r1, r1
 800efda:	f7f3 f95b 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800efde:	463a      	mov	r2, r7
 800efe0:	4631      	mov	r1, r6
 800efe2:	4628      	mov	r0, r5
 800efe4:	f7f3 f85b 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800efe8:	6823      	ldr	r3, [r4, #0]
 800efea:	4620      	mov	r0, r4
 800efec:	695b      	ldr	r3, [r3, #20]
 800efee:	4798      	blx	r3
 800eff0:	b003      	add	sp, #12
 800eff2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eff4 <_ZN8touchgfx11ModalWindowC1Ev>:
 800eff4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800eff8:	4604      	mov	r4, r0
 800effa:	4625      	mov	r5, r4
 800effc:	f7f3 f938 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800f000:	2600      	movs	r6, #0
 800f002:	4b36      	ldr	r3, [pc, #216]	; (800f0dc <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800f004:	62a6      	str	r6, [r4, #40]	; 0x28
 800f006:	f845 3b2c 	str.w	r3, [r5], #44
 800f00a:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800f00e:	4652      	mov	r2, sl
 800f010:	4631      	mov	r1, r6
 800f012:	4628      	mov	r0, r5
 800f014:	f014 fa1e 	bl	8023454 <memset>
 800f018:	4628      	mov	r0, r5
 800f01a:	f7f3 f929 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800f01e:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800f022:	4b2f      	ldr	r3, [pc, #188]	; (800f0e0 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800f024:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f026:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800f02a:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800f02e:	6566      	str	r6, [r4, #84]	; 0x54
 800f030:	4640      	mov	r0, r8
 800f032:	f7f3 f91d 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800f036:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800f03a:	4b2a      	ldr	r3, [pc, #168]	; (800f0e4 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800f03c:	65a3      	str	r3, [r4, #88]	; 0x58
 800f03e:	4652      	mov	r2, sl
 800f040:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f044:	4631      	mov	r1, r6
 800f046:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800f04a:	4638      	mov	r0, r7
 800f04c:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f050:	f014 fa00 	bl	8023454 <memset>
 800f054:	4638      	mov	r0, r7
 800f056:	f7f3 f90b 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 800f05a:	a902      	add	r1, sp, #8
 800f05c:	4b22      	ldr	r3, [pc, #136]	; (800f0e8 <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800f05e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800f062:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f066:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800f06a:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800f06e:	4638      	mov	r0, r7
 800f070:	f002 f87c 	bl	801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f074:	4b1d      	ldr	r3, [pc, #116]	; (800f0ec <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800f076:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f07a:	4b1d      	ldr	r3, [pc, #116]	; (800f0f0 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800f07c:	4620      	mov	r0, r4
 800f07e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f082:	f7f3 f80c 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f086:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800f08a:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800f08e:	4632      	mov	r2, r6
 800f090:	4631      	mov	r1, r6
 800f092:	4628      	mov	r0, r5
 800f094:	f7f3 f8fe 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800f098:	4652      	mov	r2, sl
 800f09a:	4649      	mov	r1, r9
 800f09c:	4628      	mov	r0, r5
 800f09e:	f7f2 fffe 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f0a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800f0a6:	6563      	str	r3, [r4, #84]	; 0x54
 800f0a8:	2301      	movs	r3, #1
 800f0aa:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800f0ae:	2360      	movs	r3, #96	; 0x60
 800f0b0:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800f0b4:	4628      	mov	r0, r5
 800f0b6:	f005 f8bd 	bl	8014234 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f0ba:	4629      	mov	r1, r5
 800f0bc:	4620      	mov	r0, r4
 800f0be:	f000 f889 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f0c2:	4641      	mov	r1, r8
 800f0c4:	4620      	mov	r0, r4
 800f0c6:	f000 f885 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f0ca:	4640      	mov	r0, r8
 800f0cc:	4639      	mov	r1, r7
 800f0ce:	f000 f881 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	b002      	add	sp, #8
 800f0d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f0da:	bf00      	nop
 800f0dc:	08027444 	.word	0x08027444
 800f0e0:	08028068 	.word	0x08028068
 800f0e4:	080275c0 	.word	0x080275c0
 800f0e8:	080282e0 	.word	0x080282e0
 800f0ec:	20020082 	.word	0x20020082
 800f0f0:	20020080 	.word	0x20020080

0800f0f4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f0f4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f0f6:	2000      	movs	r0, #0
 800f0f8:	b12b      	cbz	r3, 800f106 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f0fa:	b920      	cbnz	r0, 800f106 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f0fc:	1a5a      	subs	r2, r3, r1
 800f0fe:	4250      	negs	r0, r2
 800f100:	4150      	adcs	r0, r2
 800f102:	699b      	ldr	r3, [r3, #24]
 800f104:	e7f8      	b.n	800f0f8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f106:	4770      	bx	lr

0800f108 <_ZN8touchgfx9Container9removeAllEv>:
 800f108:	2200      	movs	r2, #0
 800f10a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f10c:	b123      	cbz	r3, 800f118 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f10e:	6999      	ldr	r1, [r3, #24]
 800f110:	6281      	str	r1, [r0, #40]	; 0x28
 800f112:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f116:	e7f8      	b.n	800f10a <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f118:	4770      	bx	lr

0800f11a <_ZN8touchgfx9Container6unlinkEv>:
 800f11a:	2300      	movs	r3, #0
 800f11c:	6283      	str	r3, [r0, #40]	; 0x28
 800f11e:	4770      	bx	lr

0800f120 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f120:	2200      	movs	r2, #0
 800f122:	8002      	strh	r2, [r0, #0]
 800f124:	8042      	strh	r2, [r0, #2]
 800f126:	8082      	strh	r2, [r0, #4]
 800f128:	80c2      	strh	r2, [r0, #6]
 800f12a:	4770      	bx	lr

0800f12c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f12c:	b570      	push	{r4, r5, r6, lr}
 800f12e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f130:	460d      	mov	r5, r1
 800f132:	4616      	mov	r6, r2
 800f134:	b13c      	cbz	r4, 800f146 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f136:	6823      	ldr	r3, [r4, #0]
 800f138:	4620      	mov	r0, r4
 800f13a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f13c:	4632      	mov	r2, r6
 800f13e:	4629      	mov	r1, r5
 800f140:	4798      	blx	r3
 800f142:	69a4      	ldr	r4, [r4, #24]
 800f144:	e7f6      	b.n	800f134 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f146:	bd70      	pop	{r4, r5, r6, pc}

0800f148 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f148:	b538      	push	{r3, r4, r5, lr}
 800f14a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f14c:	460d      	mov	r5, r1
 800f14e:	b134      	cbz	r4, 800f15e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f150:	682b      	ldr	r3, [r5, #0]
 800f152:	4621      	mov	r1, r4
 800f154:	689b      	ldr	r3, [r3, #8]
 800f156:	4628      	mov	r0, r5
 800f158:	4798      	blx	r3
 800f15a:	69a4      	ldr	r4, [r4, #24]
 800f15c:	e7f7      	b.n	800f14e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f15e:	bd38      	pop	{r3, r4, r5, pc}

0800f160 <_ZN8touchgfx9ContainerD1Ev>:
 800f160:	4770      	bx	lr

0800f162 <_ZN8touchgfx9ContainerD0Ev>:
 800f162:	b510      	push	{r4, lr}
 800f164:	212c      	movs	r1, #44	; 0x2c
 800f166:	4604      	mov	r4, r0
 800f168:	f013 fea0 	bl	8022eac <_ZdlPvj>
 800f16c:	4620      	mov	r0, r4
 800f16e:	bd10      	pop	{r4, pc}

0800f170 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f170:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f172:	b19b      	cbz	r3, 800f19c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f174:	428b      	cmp	r3, r1
 800f176:	d109      	bne.n	800f18c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f178:	699a      	ldr	r2, [r3, #24]
 800f17a:	2100      	movs	r1, #0
 800f17c:	6159      	str	r1, [r3, #20]
 800f17e:	6282      	str	r2, [r0, #40]	; 0x28
 800f180:	b902      	cbnz	r2, 800f184 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f182:	4770      	bx	lr
 800f184:	6199      	str	r1, [r3, #24]
 800f186:	4770      	bx	lr
 800f188:	4613      	mov	r3, r2
 800f18a:	b13a      	cbz	r2, 800f19c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f18c:	699a      	ldr	r2, [r3, #24]
 800f18e:	428a      	cmp	r2, r1
 800f190:	d1fa      	bne.n	800f188 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f192:	698a      	ldr	r2, [r1, #24]
 800f194:	619a      	str	r2, [r3, #24]
 800f196:	2300      	movs	r3, #0
 800f198:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f19c:	4770      	bx	lr

0800f19e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f19e:	b410      	push	{r4}
 800f1a0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f1a2:	4604      	mov	r4, r0
 800f1a4:	b92b      	cbnz	r3, 800f1b2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f1a6:	6803      	ldr	r3, [r0, #0]
 800f1a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f1ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f1ae:	4611      	mov	r1, r2
 800f1b0:	4718      	bx	r3
 800f1b2:	b941      	cbnz	r1, 800f1c6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f1b4:	6193      	str	r3, [r2, #24]
 800f1b6:	6282      	str	r2, [r0, #40]	; 0x28
 800f1b8:	6154      	str	r4, [r2, #20]
 800f1ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f1be:	4770      	bx	lr
 800f1c0:	4603      	mov	r3, r0
 800f1c2:	2800      	cmp	r0, #0
 800f1c4:	d0f9      	beq.n	800f1ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f1c6:	4299      	cmp	r1, r3
 800f1c8:	6998      	ldr	r0, [r3, #24]
 800f1ca:	d1f9      	bne.n	800f1c0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f1cc:	6190      	str	r0, [r2, #24]
 800f1ce:	618a      	str	r2, [r1, #24]
 800f1d0:	e7f2      	b.n	800f1b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f1d4:	4288      	cmp	r0, r1
 800f1d6:	b508      	push	{r3, lr}
 800f1d8:	d105      	bne.n	800f1e6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800f1da:	4b11      	ldr	r3, [pc, #68]	; (800f220 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800f1dc:	4a11      	ldr	r2, [pc, #68]	; (800f224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f1de:	2123      	movs	r1, #35	; 0x23
 800f1e0:	4811      	ldr	r0, [pc, #68]	; (800f228 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800f1e2:	f013 fe91 	bl	8022f08 <__assert_func>
 800f1e6:	694b      	ldr	r3, [r1, #20]
 800f1e8:	b11b      	cbz	r3, 800f1f2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800f1ea:	4b10      	ldr	r3, [pc, #64]	; (800f22c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800f1ec:	4a0d      	ldr	r2, [pc, #52]	; (800f224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f1ee:	2124      	movs	r1, #36	; 0x24
 800f1f0:	e7f6      	b.n	800f1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800f1f2:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800f1f6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f1f8:	b913      	cbnz	r3, 800f200 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800f1fa:	6281      	str	r1, [r0, #40]	; 0x28
 800f1fc:	bd08      	pop	{r3, pc}
 800f1fe:	4613      	mov	r3, r2
 800f200:	699a      	ldr	r2, [r3, #24]
 800f202:	b12a      	cbz	r2, 800f210 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800f204:	428b      	cmp	r3, r1
 800f206:	d1fa      	bne.n	800f1fe <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800f208:	4b09      	ldr	r3, [pc, #36]	; (800f230 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800f20a:	4a06      	ldr	r2, [pc, #24]	; (800f224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f20c:	2135      	movs	r1, #53	; 0x35
 800f20e:	e7e7      	b.n	800f1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800f210:	428b      	cmp	r3, r1
 800f212:	d103      	bne.n	800f21c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800f214:	4b06      	ldr	r3, [pc, #24]	; (800f230 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800f216:	4a03      	ldr	r2, [pc, #12]	; (800f224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f218:	2138      	movs	r1, #56	; 0x38
 800f21a:	e7e1      	b.n	800f1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800f21c:	6199      	str	r1, [r3, #24]
 800f21e:	e7ed      	b.n	800f1fc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800f220:	080274f0 	.word	0x080274f0
 800f224:	08027644 	.word	0x08027644
 800f228:	0802751c 	.word	0x0802751c
 800f22c:	0802754f 	.word	0x0802754f
 800f230:	08027585 	.word	0x08027585

0800f234 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f238:	461f      	mov	r7, r3
 800f23a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f23e:	460d      	mov	r5, r1
 800f240:	4616      	mov	r6, r2
 800f242:	b103      	cbz	r3, 800f246 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f244:	6038      	str	r0, [r7, #0]
 800f246:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f248:	b314      	cbz	r4, 800f290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f24a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f24e:	b1eb      	cbz	r3, 800f28c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f250:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f254:	428d      	cmp	r5, r1
 800f256:	db19      	blt.n	800f28c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f258:	8923      	ldrh	r3, [r4, #8]
 800f25a:	b289      	uxth	r1, r1
 800f25c:	440b      	add	r3, r1
 800f25e:	b21b      	sxth	r3, r3
 800f260:	429d      	cmp	r5, r3
 800f262:	da13      	bge.n	800f28c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f264:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f268:	4296      	cmp	r6, r2
 800f26a:	db0f      	blt.n	800f28c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f26c:	8963      	ldrh	r3, [r4, #10]
 800f26e:	b292      	uxth	r2, r2
 800f270:	4413      	add	r3, r2
 800f272:	b21b      	sxth	r3, r3
 800f274:	429e      	cmp	r6, r3
 800f276:	da09      	bge.n	800f28c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f278:	6823      	ldr	r3, [r4, #0]
 800f27a:	1ab2      	subs	r2, r6, r2
 800f27c:	1a69      	subs	r1, r5, r1
 800f27e:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800f282:	b212      	sxth	r2, r2
 800f284:	463b      	mov	r3, r7
 800f286:	b209      	sxth	r1, r1
 800f288:	4620      	mov	r0, r4
 800f28a:	47c0      	blx	r8
 800f28c:	69a4      	ldr	r4, [r4, #24]
 800f28e:	e7db      	b.n	800f248 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f294 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f298:	4c6e      	ldr	r4, [pc, #440]	; (800f454 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f29a:	b0a1      	sub	sp, #132	; 0x84
 800f29c:	6824      	ldr	r4, [r4, #0]
 800f29e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f2a0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f2a4:	9303      	str	r3, [sp, #12]
 800f2a6:	2400      	movs	r4, #0
 800f2a8:	802c      	strh	r4, [r5, #0]
 800f2aa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f2ac:	802c      	strh	r4, [r5, #0]
 800f2ae:	601c      	str	r4, [r3, #0]
 800f2b0:	4606      	mov	r6, r0
 800f2b2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f2b6:	f7ff ffbd 	bl	800f234 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f2ba:	f1b9 0f03 	cmp.w	r9, #3
 800f2be:	f340 80c2 	ble.w	800f446 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f2c2:	4631      	mov	r1, r6
 800f2c4:	a80c      	add	r0, sp, #48	; 0x30
 800f2c6:	f005 f84d 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f2ce:	9306      	str	r3, [sp, #24]
 800f2d0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f2d4:	9307      	str	r3, [sp, #28]
 800f2d6:	9b03      	ldr	r3, [sp, #12]
 800f2d8:	f8d3 a000 	ldr.w	sl, [r3]
 800f2dc:	f1ba 0f00 	cmp.w	sl, #0
 800f2e0:	f000 80b4 	beq.w	800f44c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f2e4:	4651      	mov	r1, sl
 800f2e6:	a810      	add	r0, sp, #64	; 0x40
 800f2e8:	f005 f83c 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2ec:	9b01      	ldr	r3, [sp, #4]
 800f2ee:	9a06      	ldr	r2, [sp, #24]
 800f2f0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f2f4:	189d      	adds	r5, r3, r2
 800f2f6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f2fa:	9a07      	ldr	r2, [sp, #28]
 800f2fc:	2002      	movs	r0, #2
 800f2fe:	fb91 f1f0 	sdiv	r1, r1, r0
 800f302:	4419      	add	r1, r3
 800f304:	1a6d      	subs	r5, r5, r1
 800f306:	9b02      	ldr	r3, [sp, #8]
 800f308:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f30c:	4413      	add	r3, r2
 800f30e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f312:	fb92 f2f0 	sdiv	r2, r2, r0
 800f316:	440a      	add	r2, r1
 800f318:	1a9b      	subs	r3, r3, r2
 800f31a:	435b      	muls	r3, r3
 800f31c:	fb05 3505 	mla	r5, r5, r5, r3
 800f320:	4f4d      	ldr	r7, [pc, #308]	; (800f458 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f322:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f324:	ac10      	add	r4, sp, #64	; 0x40
 800f326:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f328:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f32a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f32c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f32e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f330:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f334:	f1b9 0f0c 	cmp.w	r9, #12
 800f338:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f33c:	f04f 0303 	mov.w	r3, #3
 800f340:	bfc8      	it	gt
 800f342:	4698      	movgt	r8, r3
 800f344:	f8cd 9000 	str.w	r9, [sp]
 800f348:	f04f 0400 	mov.w	r4, #0
 800f34c:	bfdc      	itt	le
 800f34e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f352:	fb92 f8f3 	sdivle	r8, r2, r3
 800f356:	1c63      	adds	r3, r4, #1
 800f358:	aa10      	add	r2, sp, #64	; 0x40
 800f35a:	f004 0401 	and.w	r4, r4, #1
 800f35e:	9308      	str	r3, [sp, #32]
 800f360:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f364:	9b00      	ldr	r3, [sp, #0]
 800f366:	fb93 f3f8 	sdiv	r3, r3, r8
 800f36a:	b29b      	uxth	r3, r3
 800f36c:	3404      	adds	r4, #4
 800f36e:	f04f 0b00 	mov.w	fp, #0
 800f372:	9304      	str	r3, [sp, #16]
 800f374:	9a04      	ldr	r2, [sp, #16]
 800f376:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f37a:	fb13 f302 	smulbb	r3, r3, r2
 800f37e:	9a01      	ldr	r2, [sp, #4]
 800f380:	b29b      	uxth	r3, r3
 800f382:	1899      	adds	r1, r3, r2
 800f384:	9305      	str	r3, [sp, #20]
 800f386:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f38a:	b209      	sxth	r1, r1
 800f38c:	4299      	cmp	r1, r3
 800f38e:	db4d      	blt.n	800f42c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f390:	8932      	ldrh	r2, [r6, #8]
 800f392:	4413      	add	r3, r2
 800f394:	b21b      	sxth	r3, r3
 800f396:	4299      	cmp	r1, r3
 800f398:	da48      	bge.n	800f42c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f39a:	9b04      	ldr	r3, [sp, #16]
 800f39c:	6827      	ldr	r7, [r4, #0]
 800f39e:	fb17 f703 	smulbb	r7, r7, r3
 800f3a2:	9b02      	ldr	r3, [sp, #8]
 800f3a4:	b2bf      	uxth	r7, r7
 800f3a6:	18fa      	adds	r2, r7, r3
 800f3a8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f3ac:	b212      	sxth	r2, r2
 800f3ae:	429a      	cmp	r2, r3
 800f3b0:	db3c      	blt.n	800f42c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f3b2:	8970      	ldrh	r0, [r6, #10]
 800f3b4:	4403      	add	r3, r0
 800f3b6:	b21b      	sxth	r3, r3
 800f3b8:	429a      	cmp	r2, r3
 800f3ba:	da37      	bge.n	800f42c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f3bc:	2300      	movs	r3, #0
 800f3be:	930b      	str	r3, [sp, #44]	; 0x2c
 800f3c0:	4630      	mov	r0, r6
 800f3c2:	ab0b      	add	r3, sp, #44	; 0x2c
 800f3c4:	f7ff ff36 	bl	800f234 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f3c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f3ca:	b37a      	cbz	r2, 800f42c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f3cc:	4552      	cmp	r2, sl
 800f3ce:	d02d      	beq.n	800f42c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f3d0:	4611      	mov	r1, r2
 800f3d2:	a80e      	add	r0, sp, #56	; 0x38
 800f3d4:	9209      	str	r2, [sp, #36]	; 0x24
 800f3d6:	f004 ffc5 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f3da:	9a06      	ldr	r2, [sp, #24]
 800f3dc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f3e0:	9b01      	ldr	r3, [sp, #4]
 800f3e2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f3e6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f3ea:	4413      	add	r3, r2
 800f3ec:	f04f 0e02 	mov.w	lr, #2
 800f3f0:	fb91 f1fe 	sdiv	r1, r1, lr
 800f3f4:	4401      	add	r1, r0
 800f3f6:	1a58      	subs	r0, r3, r1
 800f3f8:	9a07      	ldr	r2, [sp, #28]
 800f3fa:	9b02      	ldr	r3, [sp, #8]
 800f3fc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f400:	fb9c fcfe 	sdiv	ip, ip, lr
 800f404:	4413      	add	r3, r2
 800f406:	448c      	add	ip, r1
 800f408:	eba3 030c 	sub.w	r3, r3, ip
 800f40c:	435b      	muls	r3, r3
 800f40e:	fb00 3300 	mla	r3, r0, r0, r3
 800f412:	42ab      	cmp	r3, r5
 800f414:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f416:	d208      	bcs.n	800f42a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f418:	9803      	ldr	r0, [sp, #12]
 800f41a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f41c:	6001      	str	r1, [r0, #0]
 800f41e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f420:	9805      	ldr	r0, [sp, #20]
 800f422:	8008      	strh	r0, [r1, #0]
 800f424:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f426:	461d      	mov	r5, r3
 800f428:	800f      	strh	r7, [r1, #0]
 800f42a:	4692      	mov	sl, r2
 800f42c:	f10b 0b01 	add.w	fp, fp, #1
 800f430:	f1bb 0f04 	cmp.w	fp, #4
 800f434:	f104 0408 	add.w	r4, r4, #8
 800f438:	d19c      	bne.n	800f374 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f43a:	9b00      	ldr	r3, [sp, #0]
 800f43c:	9c08      	ldr	r4, [sp, #32]
 800f43e:	444b      	add	r3, r9
 800f440:	4544      	cmp	r4, r8
 800f442:	9300      	str	r3, [sp, #0]
 800f444:	d187      	bne.n	800f356 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f446:	b021      	add	sp, #132	; 0x84
 800f448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f44c:	f04f 35ff 	mov.w	r5, #4294967295
 800f450:	e766      	b.n	800f320 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f452:	bf00      	nop
 800f454:	2002008c 	.word	0x2002008c
 800f458:	08025270 	.word	0x08025270

0800f45c <_ZN8touchgfx4RectaNERKS0_>:
 800f45c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f460:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f464:	888c      	ldrh	r4, [r1, #4]
 800f466:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f46a:	443c      	add	r4, r7
 800f46c:	b2a4      	uxth	r4, r4
 800f46e:	fa0f f884 	sxth.w	r8, r4
 800f472:	45c1      	cmp	r9, r8
 800f474:	da2f      	bge.n	800f4d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f476:	8882      	ldrh	r2, [r0, #4]
 800f478:	444a      	add	r2, r9
 800f47a:	b292      	uxth	r2, r2
 800f47c:	fa0f fe82 	sxth.w	lr, r2
 800f480:	4577      	cmp	r7, lr
 800f482:	da28      	bge.n	800f4d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f484:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f488:	88cb      	ldrh	r3, [r1, #6]
 800f48a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f48e:	442b      	add	r3, r5
 800f490:	b21b      	sxth	r3, r3
 800f492:	429e      	cmp	r6, r3
 800f494:	da1f      	bge.n	800f4d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f496:	88c3      	ldrh	r3, [r0, #6]
 800f498:	4433      	add	r3, r6
 800f49a:	b29b      	uxth	r3, r3
 800f49c:	fa0f fc83 	sxth.w	ip, r3
 800f4a0:	4565      	cmp	r5, ip
 800f4a2:	da18      	bge.n	800f4d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f4a4:	454f      	cmp	r7, r9
 800f4a6:	bfb8      	it	lt
 800f4a8:	464f      	movlt	r7, r9
 800f4aa:	42b5      	cmp	r5, r6
 800f4ac:	bfb8      	it	lt
 800f4ae:	4635      	movlt	r5, r6
 800f4b0:	45f0      	cmp	r8, lr
 800f4b2:	bfd8      	it	le
 800f4b4:	4622      	movle	r2, r4
 800f4b6:	1bd2      	subs	r2, r2, r7
 800f4b8:	8082      	strh	r2, [r0, #4]
 800f4ba:	884a      	ldrh	r2, [r1, #2]
 800f4bc:	88c9      	ldrh	r1, [r1, #6]
 800f4be:	8007      	strh	r7, [r0, #0]
 800f4c0:	440a      	add	r2, r1
 800f4c2:	b292      	uxth	r2, r2
 800f4c4:	b211      	sxth	r1, r2
 800f4c6:	458c      	cmp	ip, r1
 800f4c8:	bfa8      	it	ge
 800f4ca:	4613      	movge	r3, r2
 800f4cc:	1b5b      	subs	r3, r3, r5
 800f4ce:	80c3      	strh	r3, [r0, #6]
 800f4d0:	8045      	strh	r5, [r0, #2]
 800f4d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f4d6:	2300      	movs	r3, #0
 800f4d8:	8003      	strh	r3, [r0, #0]
 800f4da:	8043      	strh	r3, [r0, #2]
 800f4dc:	8083      	strh	r3, [r0, #4]
 800f4de:	80c3      	strh	r3, [r0, #6]
 800f4e0:	e7f7      	b.n	800f4d2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f4e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f4e6:	2b00      	cmp	r3, #0
 800f4e8:	dd06      	ble.n	800f4f8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f4ea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f4ee:	2800      	cmp	r0, #0
 800f4f0:	bfcc      	ite	gt
 800f4f2:	2000      	movgt	r0, #0
 800f4f4:	2001      	movle	r0, #1
 800f4f6:	4770      	bx	lr
 800f4f8:	2001      	movs	r0, #1
 800f4fa:	4770      	bx	lr

0800f4fc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f4fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f500:	2300      	movs	r3, #0
 800f502:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f504:	8003      	strh	r3, [r0, #0]
 800f506:	4604      	mov	r4, r0
 800f508:	8043      	strh	r3, [r0, #2]
 800f50a:	8083      	strh	r3, [r0, #4]
 800f50c:	80c3      	strh	r3, [r0, #6]
 800f50e:	2d00      	cmp	r5, #0
 800f510:	d040      	beq.n	800f594 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f512:	1d28      	adds	r0, r5, #4
 800f514:	f7ff ffe5 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f518:	b988      	cbnz	r0, 800f53e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f51a:	4620      	mov	r0, r4
 800f51c:	f7ff ffe1 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f520:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f524:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f528:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f52c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f530:	b138      	cbz	r0, 800f542 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f532:	8022      	strh	r2, [r4, #0]
 800f534:	8063      	strh	r3, [r4, #2]
 800f536:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f53a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f53e:	69ad      	ldr	r5, [r5, #24]
 800f540:	e7e5      	b.n	800f50e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f542:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f546:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f54a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f54e:	4290      	cmp	r0, r2
 800f550:	4607      	mov	r7, r0
 800f552:	bfa8      	it	ge
 800f554:	4617      	movge	r7, r2
 800f556:	4472      	add	r2, lr
 800f558:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f55c:	8027      	strh	r7, [r4, #0]
 800f55e:	4299      	cmp	r1, r3
 800f560:	460e      	mov	r6, r1
 800f562:	4440      	add	r0, r8
 800f564:	bfa8      	it	ge
 800f566:	461e      	movge	r6, r3
 800f568:	4471      	add	r1, lr
 800f56a:	4463      	add	r3, ip
 800f56c:	b200      	sxth	r0, r0
 800f56e:	b212      	sxth	r2, r2
 800f570:	b209      	sxth	r1, r1
 800f572:	b21b      	sxth	r3, r3
 800f574:	4290      	cmp	r0, r2
 800f576:	bfac      	ite	ge
 800f578:	ebc7 0200 	rsbge	r2, r7, r0
 800f57c:	ebc7 0202 	rsblt	r2, r7, r2
 800f580:	4299      	cmp	r1, r3
 800f582:	bfac      	ite	ge
 800f584:	ebc6 0301 	rsbge	r3, r6, r1
 800f588:	ebc6 0303 	rsblt	r3, r6, r3
 800f58c:	8066      	strh	r6, [r4, #2]
 800f58e:	80a2      	strh	r2, [r4, #4]
 800f590:	80e3      	strh	r3, [r4, #6]
 800f592:	e7d4      	b.n	800f53e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f594:	4620      	mov	r0, r4
 800f596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f59a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f59a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f59e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f5a2:	b383      	cbz	r3, 800f606 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f5a4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f5a6:	b374      	cbz	r4, 800f606 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f5a8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f5ac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f5b0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f5b4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f5b8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f5bc:	b303      	cbz	r3, 800f600 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f5be:	4668      	mov	r0, sp
 800f5c0:	1d21      	adds	r1, r4, #4
 800f5c2:	f8ad 5000 	strh.w	r5, [sp]
 800f5c6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f5ca:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f5ce:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f5d2:	f7ff ff43 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 800f5d6:	4668      	mov	r0, sp
 800f5d8:	f7ff ff83 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f5dc:	b980      	cbnz	r0, 800f600 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f5de:	f8bd 3000 	ldrh.w	r3, [sp]
 800f5e2:	88a2      	ldrh	r2, [r4, #4]
 800f5e4:	1a9b      	subs	r3, r3, r2
 800f5e6:	f8ad 3000 	strh.w	r3, [sp]
 800f5ea:	88e2      	ldrh	r2, [r4, #6]
 800f5ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f5f0:	1a9b      	subs	r3, r3, r2
 800f5f2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f5f6:	6823      	ldr	r3, [r4, #0]
 800f5f8:	4669      	mov	r1, sp
 800f5fa:	689b      	ldr	r3, [r3, #8]
 800f5fc:	4620      	mov	r0, r4
 800f5fe:	4798      	blx	r3
 800f600:	69a4      	ldr	r4, [r4, #24]
 800f602:	2c00      	cmp	r4, #0
 800f604:	d1d8      	bne.n	800f5b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f606:	b002      	add	sp, #8
 800f608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f60c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f60c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f60e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f612:	460d      	mov	r5, r1
 800f614:	4616      	mov	r6, r2
 800f616:	b323      	cbz	r3, 800f662 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f618:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f61a:	b314      	cbz	r4, 800f662 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f61c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f620:	b1eb      	cbz	r3, 800f65e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f622:	6828      	ldr	r0, [r5, #0]
 800f624:	6869      	ldr	r1, [r5, #4]
 800f626:	466b      	mov	r3, sp
 800f628:	c303      	stmia	r3!, {r0, r1}
 800f62a:	4668      	mov	r0, sp
 800f62c:	1d21      	adds	r1, r4, #4
 800f62e:	f7ff ff15 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 800f632:	4668      	mov	r0, sp
 800f634:	f7ff ff55 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f638:	b988      	cbnz	r0, 800f65e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f63a:	f8bd 3000 	ldrh.w	r3, [sp]
 800f63e:	88a2      	ldrh	r2, [r4, #4]
 800f640:	1a9b      	subs	r3, r3, r2
 800f642:	f8ad 3000 	strh.w	r3, [sp]
 800f646:	88e2      	ldrh	r2, [r4, #6]
 800f648:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f64c:	1a9b      	subs	r3, r3, r2
 800f64e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f652:	6823      	ldr	r3, [r4, #0]
 800f654:	4632      	mov	r2, r6
 800f656:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f658:	4669      	mov	r1, sp
 800f65a:	4620      	mov	r0, r4
 800f65c:	4798      	blx	r3
 800f65e:	69a4      	ldr	r4, [r4, #24]
 800f660:	e7db      	b.n	800f61a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f662:	b002      	add	sp, #8
 800f664:	bd70      	pop	{r4, r5, r6, pc}

0800f666 <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 800f666:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800f66a:	4770      	bx	lr

0800f66c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 800f66c:	b538      	push	{r3, r4, r5, lr}
 800f66e:	7882      	ldrb	r2, [r0, #2]
 800f670:	6843      	ldr	r3, [r0, #4]
 800f672:	4604      	mov	r4, r0
 800f674:	460d      	mov	r5, r1
 800f676:	b98a      	cbnz	r2, 800f69c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 800f678:	4299      	cmp	r1, r3
 800f67a:	d101      	bne.n	800f680 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 800f67c:	2301      	movs	r3, #1
 800f67e:	7083      	strb	r3, [r0, #2]
 800f680:	6863      	ldr	r3, [r4, #4]
 800f682:	42ab      	cmp	r3, r5
 800f684:	d009      	beq.n	800f69a <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 800f686:	7a23      	ldrb	r3, [r4, #8]
 800f688:	2b01      	cmp	r3, #1
 800f68a:	d11b      	bne.n	800f6c4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 800f68c:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800f690:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f694:	429a      	cmp	r2, r3
 800f696:	bfb8      	it	lt
 800f698:	8023      	strhlt	r3, [r4, #0]
 800f69a:	bd38      	pop	{r3, r4, r5, pc}
 800f69c:	7a02      	ldrb	r2, [r0, #8]
 800f69e:	2a01      	cmp	r2, #1
 800f6a0:	d108      	bne.n	800f6b4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 800f6a2:	895b      	ldrh	r3, [r3, #10]
 800f6a4:	88c9      	ldrh	r1, [r1, #6]
 800f6a6:	1ac9      	subs	r1, r1, r3
 800f6a8:	682b      	ldr	r3, [r5, #0]
 800f6aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f6ac:	b209      	sxth	r1, r1
 800f6ae:	4628      	mov	r0, r5
 800f6b0:	4798      	blx	r3
 800f6b2:	e7e5      	b.n	800f680 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 800f6b4:	2a02      	cmp	r2, #2
 800f6b6:	d1e3      	bne.n	800f680 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 800f6b8:	891b      	ldrh	r3, [r3, #8]
 800f6ba:	8889      	ldrh	r1, [r1, #4]
 800f6bc:	1ac9      	subs	r1, r1, r3
 800f6be:	682b      	ldr	r3, [r5, #0]
 800f6c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f6c2:	e7f3      	b.n	800f6ac <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 800f6c4:	2b02      	cmp	r3, #2
 800f6c6:	d1e8      	bne.n	800f69a <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 800f6c8:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800f6cc:	e7e0      	b.n	800f690 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

0800f6ce <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 800f6ce:	4770      	bx	lr

0800f6d0 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 800f6d0:	4770      	bx	lr

0800f6d2 <_ZN8touchgfx10ListLayoutD1Ev>:
 800f6d2:	4770      	bx	lr

0800f6d4 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 800f6d4:	b430      	push	{r4, r5}
 800f6d6:	68c5      	ldr	r5, [r0, #12]
 800f6d8:	6844      	ldr	r4, [r0, #4]
 800f6da:	106a      	asrs	r2, r5, #1
 800f6dc:	4603      	mov	r3, r0
 800f6de:	07ed      	lsls	r5, r5, #31
 800f6e0:	eb04 0002 	add.w	r0, r4, r2
 800f6e4:	689b      	ldr	r3, [r3, #8]
 800f6e6:	bf48      	it	mi
 800f6e8:	58a2      	ldrmi	r2, [r4, r2]
 800f6ea:	bc30      	pop	{r4, r5}
 800f6ec:	bf48      	it	mi
 800f6ee:	58d3      	ldrmi	r3, [r2, r3]
 800f6f0:	4718      	bx	r3

0800f6f2 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 800f6f2:	6843      	ldr	r3, [r0, #4]
 800f6f4:	b12b      	cbz	r3, 800f702 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 800f6f6:	6883      	ldr	r3, [r0, #8]
 800f6f8:	b92b      	cbnz	r3, 800f706 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 800f6fa:	68c0      	ldr	r0, [r0, #12]
 800f6fc:	f000 0001 	and.w	r0, r0, #1
 800f700:	4770      	bx	lr
 800f702:	4618      	mov	r0, r3
 800f704:	4770      	bx	lr
 800f706:	2001      	movs	r0, #1
 800f708:	4770      	bx	lr

0800f70a <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 800f70a:	b430      	push	{r4, r5}
 800f70c:	68c5      	ldr	r5, [r0, #12]
 800f70e:	6844      	ldr	r4, [r0, #4]
 800f710:	106a      	asrs	r2, r5, #1
 800f712:	4603      	mov	r3, r0
 800f714:	07ed      	lsls	r5, r5, #31
 800f716:	eb04 0002 	add.w	r0, r4, r2
 800f71a:	689b      	ldr	r3, [r3, #8]
 800f71c:	bf48      	it	mi
 800f71e:	58a2      	ldrmi	r2, [r4, r2]
 800f720:	bc30      	pop	{r4, r5}
 800f722:	bf48      	it	mi
 800f724:	58d3      	ldrmi	r3, [r2, r3]
 800f726:	4718      	bx	r3

0800f728 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 800f728:	6843      	ldr	r3, [r0, #4]
 800f72a:	b12b      	cbz	r3, 800f738 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 800f72c:	6883      	ldr	r3, [r0, #8]
 800f72e:	b92b      	cbnz	r3, 800f73c <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 800f730:	68c0      	ldr	r0, [r0, #12]
 800f732:	f000 0001 	and.w	r0, r0, #1
 800f736:	4770      	bx	lr
 800f738:	4618      	mov	r0, r3
 800f73a:	4770      	bx	lr
 800f73c:	2001      	movs	r0, #1
 800f73e:	4770      	bx	lr

0800f740 <_ZN8touchgfx10ListLayoutD0Ev>:
 800f740:	b510      	push	{r4, lr}
 800f742:	2130      	movs	r1, #48	; 0x30
 800f744:	4604      	mov	r4, r0
 800f746:	f013 fbb1 	bl	8022eac <_ZdlPvj>
 800f74a:	4620      	mov	r0, r4
 800f74c:	bd10      	pop	{r4, pc}

0800f74e <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 800f74e:	b510      	push	{r4, lr}
 800f750:	2110      	movs	r1, #16
 800f752:	4604      	mov	r4, r0
 800f754:	f013 fbaa 	bl	8022eac <_ZdlPvj>
 800f758:	4620      	mov	r0, r4
 800f75a:	bd10      	pop	{r4, pc}

0800f75c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 800f75c:	b510      	push	{r4, lr}
 800f75e:	2110      	movs	r1, #16
 800f760:	4604      	mov	r4, r0
 800f762:	f013 fba3 	bl	8022eac <_ZdlPvj>
 800f766:	4620      	mov	r0, r4
 800f768:	bd10      	pop	{r4, pc}

0800f76a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 800f76a:	4603      	mov	r3, r0
 800f76c:	4608      	mov	r0, r1
 800f76e:	789a      	ldrb	r2, [r3, #2]
 800f770:	b992      	cbnz	r2, 800f798 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 800f772:	685a      	ldr	r2, [r3, #4]
 800f774:	428a      	cmp	r2, r1
 800f776:	d102      	bne.n	800f77e <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 800f778:	2201      	movs	r2, #1
 800f77a:	709a      	strb	r2, [r3, #2]
 800f77c:	4770      	bx	lr
 800f77e:	7a1a      	ldrb	r2, [r3, #8]
 800f780:	2a01      	cmp	r2, #1
 800f782:	d104      	bne.n	800f78e <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 800f784:	88ca      	ldrh	r2, [r1, #6]
 800f786:	8949      	ldrh	r1, [r1, #10]
 800f788:	440a      	add	r2, r1
 800f78a:	801a      	strh	r2, [r3, #0]
 800f78c:	4770      	bx	lr
 800f78e:	2a02      	cmp	r2, #2
 800f790:	d116      	bne.n	800f7c0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 800f792:	888a      	ldrh	r2, [r1, #4]
 800f794:	8909      	ldrh	r1, [r1, #8]
 800f796:	e7f7      	b.n	800f788 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 800f798:	7a1a      	ldrb	r2, [r3, #8]
 800f79a:	2a01      	cmp	r2, #1
 800f79c:	d107      	bne.n	800f7ae <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 800f79e:	685b      	ldr	r3, [r3, #4]
 800f7a0:	8959      	ldrh	r1, [r3, #10]
 800f7a2:	88c3      	ldrh	r3, [r0, #6]
 800f7a4:	4419      	add	r1, r3
 800f7a6:	6803      	ldr	r3, [r0, #0]
 800f7a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f7aa:	b209      	sxth	r1, r1
 800f7ac:	4718      	bx	r3
 800f7ae:	2a02      	cmp	r2, #2
 800f7b0:	d106      	bne.n	800f7c0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 800f7b2:	685b      	ldr	r3, [r3, #4]
 800f7b4:	8919      	ldrh	r1, [r3, #8]
 800f7b6:	8883      	ldrh	r3, [r0, #4]
 800f7b8:	4419      	add	r1, r3
 800f7ba:	6803      	ldr	r3, [r0, #0]
 800f7bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7be:	e7f4      	b.n	800f7aa <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 800f7c0:	4770      	bx	lr

0800f7c2 <_ZN8touchgfx10ListLayout9removeAllEv>:
 800f7c2:	2200      	movs	r2, #0
 800f7c4:	b510      	push	{r4, lr}
 800f7c6:	4611      	mov	r1, r2
 800f7c8:	4604      	mov	r4, r0
 800f7ca:	85c2      	strh	r2, [r0, #46]	; 0x2e
 800f7cc:	f7f2 fc67 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f7d0:	4620      	mov	r0, r4
 800f7d2:	f7ff fc99 	bl	800f108 <_ZN8touchgfx9Container9removeAllEv>
 800f7d6:	6960      	ldr	r0, [r4, #20]
 800f7d8:	b120      	cbz	r0, 800f7e4 <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 800f7da:	6803      	ldr	r3, [r0, #0]
 800f7dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f7e2:	4718      	bx	r3
 800f7e4:	bd10      	pop	{r4, pc}
	...

0800f7e8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 800f7e8:	b530      	push	{r4, r5, lr}
 800f7ea:	1e4b      	subs	r3, r1, #1
 800f7ec:	2b01      	cmp	r3, #1
 800f7ee:	b085      	sub	sp, #20
 800f7f0:	4604      	mov	r4, r0
 800f7f2:	d905      	bls.n	800f800 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x18>
 800f7f4:	4b11      	ldr	r3, [pc, #68]	; (800f83c <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x54>)
 800f7f6:	4a12      	ldr	r2, [pc, #72]	; (800f840 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x58>)
 800f7f8:	4812      	ldr	r0, [pc, #72]	; (800f844 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x5c>)
 800f7fa:	21b3      	movs	r1, #179	; 0xb3
 800f7fc:	f013 fb84 	bl	8022f08 <__assert_func>
 800f800:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f804:	428b      	cmp	r3, r1
 800f806:	d017      	beq.n	800f838 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 800f808:	2500      	movs	r5, #0
 800f80a:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800f80e:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800f810:	462a      	mov	r2, r5
 800f812:	4629      	mov	r1, r5
 800f814:	f7f2 fc43 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f818:	4b0b      	ldr	r3, [pc, #44]	; (800f848 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x60>)
 800f81a:	e9cd 3400 	strd	r3, r4, [sp]
 800f81e:	4b0b      	ldr	r3, [pc, #44]	; (800f84c <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x64>)
 800f820:	e9cd 3502 	strd	r3, r5, [sp, #8]
 800f824:	6823      	ldr	r3, [r4, #0]
 800f826:	4620      	mov	r0, r4
 800f828:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800f82a:	4669      	mov	r1, sp
 800f82c:	4798      	blx	r3
 800f82e:	6960      	ldr	r0, [r4, #20]
 800f830:	b110      	cbz	r0, 800f838 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 800f832:	6803      	ldr	r3, [r0, #0]
 800f834:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f836:	4798      	blx	r3
 800f838:	b005      	add	sp, #20
 800f83a:	bd30      	pop	{r4, r5, pc}
 800f83c:	080276b0 	.word	0x080276b0
 800f840:	080277b8 	.word	0x080277b8
 800f844:	080276ee 	.word	0x080276ee
 800f848:	08027688 	.word	0x08027688
 800f84c:	0800f8b5 	.word	0x0800f8b5

0800f850 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 800f850:	b538      	push	{r3, r4, r5, lr}
 800f852:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f856:	2b01      	cmp	r3, #1
 800f858:	460d      	mov	r5, r1
 800f85a:	4604      	mov	r4, r0
 800f85c:	4611      	mov	r1, r2
 800f85e:	d002      	beq.n	800f866 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 800f860:	2b02      	cmp	r3, #2
 800f862:	d015      	beq.n	800f890 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 800f864:	bd38      	pop	{r3, r4, r5, pc}
 800f866:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800f86a:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800f86e:	429a      	cmp	r2, r3
 800f870:	bfb8      	it	lt
 800f872:	8103      	strhlt	r3, [r0, #8]
 800f874:	896a      	ldrh	r2, [r5, #10]
 800f876:	8943      	ldrh	r3, [r0, #10]
 800f878:	4413      	add	r3, r2
 800f87a:	8143      	strh	r3, [r0, #10]
 800f87c:	460a      	mov	r2, r1
 800f87e:	4628      	mov	r0, r5
 800f880:	2100      	movs	r1, #0
 800f882:	f7f2 fd07 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800f886:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f888:	896a      	ldrh	r2, [r5, #10]
 800f88a:	4413      	add	r3, r2
 800f88c:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800f88e:	e7e9      	b.n	800f864 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 800f890:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800f894:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f898:	429a      	cmp	r2, r3
 800f89a:	bfb8      	it	lt
 800f89c:	8143      	strhlt	r3, [r0, #10]
 800f89e:	892a      	ldrh	r2, [r5, #8]
 800f8a0:	8903      	ldrh	r3, [r0, #8]
 800f8a2:	4413      	add	r3, r2
 800f8a4:	8103      	strh	r3, [r0, #8]
 800f8a6:	2200      	movs	r2, #0
 800f8a8:	4628      	mov	r0, r5
 800f8aa:	f7f2 fcf3 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800f8ae:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f8b0:	892a      	ldrh	r2, [r5, #8]
 800f8b2:	e7ea      	b.n	800f88a <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

0800f8b4 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 800f8b4:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 800f8b8:	f7ff bfca 	b.w	800f850 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

0800f8bc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 800f8bc:	b570      	push	{r4, r5, r6, lr}
 800f8be:	4604      	mov	r4, r0
 800f8c0:	460d      	mov	r5, r1
 800f8c2:	f7ff fff7 	bl	800f8b4 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 800f8c6:	4620      	mov	r0, r4
 800f8c8:	4629      	mov	r1, r5
 800f8ca:	f7ff fc83 	bl	800f1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f8ce:	6960      	ldr	r0, [r4, #20]
 800f8d0:	b120      	cbz	r0, 800f8dc <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 800f8d2:	6803      	ldr	r3, [r0, #0]
 800f8d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f8da:	4718      	bx	r3
 800f8dc:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f8e0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 800f8e0:	b530      	push	{r4, r5, lr}
 800f8e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f8e4:	b089      	sub	sp, #36	; 0x24
 800f8e6:	4604      	mov	r4, r0
 800f8e8:	4615      	mov	r5, r2
 800f8ea:	b92b      	cbnz	r3, 800f8f8 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 800f8ec:	6803      	ldr	r3, [r0, #0]
 800f8ee:	4611      	mov	r1, r2
 800f8f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f8f2:	4798      	blx	r3
 800f8f4:	b009      	add	sp, #36	; 0x24
 800f8f6:	bd30      	pop	{r4, r5, pc}
 800f8f8:	f7ff fc51 	bl	800f19e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 800f8fc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800f900:	f88d 200c 	strb.w	r2, [sp, #12]
 800f904:	4a0f      	ldr	r2, [pc, #60]	; (800f944 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 800f906:	9204      	str	r2, [sp, #16]
 800f908:	aa01      	add	r2, sp, #4
 800f90a:	9205      	str	r2, [sp, #20]
 800f90c:	4a0e      	ldr	r2, [pc, #56]	; (800f948 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 800f90e:	9502      	str	r5, [sp, #8]
 800f910:	2300      	movs	r3, #0
 800f912:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f916:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f91a:	f88d 3006 	strb.w	r3, [sp, #6]
 800f91e:	6823      	ldr	r3, [r4, #0]
 800f920:	a904      	add	r1, sp, #16
 800f922:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800f924:	4620      	mov	r0, r4
 800f926:	4798      	blx	r3
 800f928:	4620      	mov	r0, r4
 800f92a:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800f92e:	4629      	mov	r1, r5
 800f930:	f7ff ff8e 	bl	800f850 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 800f934:	6960      	ldr	r0, [r4, #20]
 800f936:	2800      	cmp	r0, #0
 800f938:	d0dc      	beq.n	800f8f4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 800f93a:	6803      	ldr	r3, [r0, #0]
 800f93c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f93e:	4798      	blx	r3
 800f940:	e7d8      	b.n	800f8f4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 800f942:	bf00      	nop
 800f944:	080276a0 	.word	0x080276a0
 800f948:	0800f76b 	.word	0x0800f76b

0800f94c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 800f94c:	b538      	push	{r3, r4, r5, lr}
 800f94e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f952:	2b01      	cmp	r3, #1
 800f954:	4604      	mov	r4, r0
 800f956:	460d      	mov	r5, r1
 800f958:	d002      	beq.n	800f960 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 800f95a:	2b02      	cmp	r3, #2
 800f95c:	d018      	beq.n	800f990 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 800f95e:	bd38      	pop	{r3, r4, r5, pc}
 800f960:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f964:	4293      	cmp	r3, r2
 800f966:	bfc8      	it	gt
 800f968:	8102      	strhgt	r2, [r0, #8]
 800f96a:	894a      	ldrh	r2, [r1, #10]
 800f96c:	8943      	ldrh	r3, [r0, #10]
 800f96e:	1a9b      	subs	r3, r3, r2
 800f970:	8143      	strh	r3, [r0, #10]
 800f972:	680b      	ldr	r3, [r1, #0]
 800f974:	4628      	mov	r0, r5
 800f976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f978:	2100      	movs	r1, #0
 800f97a:	4798      	blx	r3
 800f97c:	682b      	ldr	r3, [r5, #0]
 800f97e:	2100      	movs	r1, #0
 800f980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f982:	4628      	mov	r0, r5
 800f984:	4798      	blx	r3
 800f986:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f988:	896a      	ldrh	r2, [r5, #10]
 800f98a:	1a9b      	subs	r3, r3, r2
 800f98c:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800f98e:	e7e6      	b.n	800f95e <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 800f990:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f994:	4293      	cmp	r3, r2
 800f996:	bfc8      	it	gt
 800f998:	8142      	strhgt	r2, [r0, #10]
 800f99a:	890a      	ldrh	r2, [r1, #8]
 800f99c:	8903      	ldrh	r3, [r0, #8]
 800f99e:	1a9b      	subs	r3, r3, r2
 800f9a0:	8103      	strh	r3, [r0, #8]
 800f9a2:	680b      	ldr	r3, [r1, #0]
 800f9a4:	4628      	mov	r0, r5
 800f9a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f9a8:	2100      	movs	r1, #0
 800f9aa:	4798      	blx	r3
 800f9ac:	682b      	ldr	r3, [r5, #0]
 800f9ae:	2100      	movs	r1, #0
 800f9b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f9b2:	4628      	mov	r0, r5
 800f9b4:	4798      	blx	r3
 800f9b6:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f9b8:	892a      	ldrh	r2, [r5, #8]
 800f9ba:	e7e6      	b.n	800f98a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

0800f9bc <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 800f9bc:	b530      	push	{r4, r5, lr}
 800f9be:	b089      	sub	sp, #36	; 0x24
 800f9c0:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800f9c4:	f88d 200c 	strb.w	r2, [sp, #12]
 800f9c8:	4a13      	ldr	r2, [pc, #76]	; (800fa18 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 800f9ca:	9204      	str	r2, [sp, #16]
 800f9cc:	aa01      	add	r2, sp, #4
 800f9ce:	9205      	str	r2, [sp, #20]
 800f9d0:	4a12      	ldr	r2, [pc, #72]	; (800fa1c <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 800f9d2:	9102      	str	r1, [sp, #8]
 800f9d4:	2300      	movs	r3, #0
 800f9d6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f9da:	f88d 3006 	strb.w	r3, [sp, #6]
 800f9de:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f9e2:	6803      	ldr	r3, [r0, #0]
 800f9e4:	460d      	mov	r5, r1
 800f9e6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800f9e8:	a904      	add	r1, sp, #16
 800f9ea:	4604      	mov	r4, r0
 800f9ec:	4798      	blx	r3
 800f9ee:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800f9f2:	b14b      	cbz	r3, 800fa08 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 800f9f4:	4629      	mov	r1, r5
 800f9f6:	4620      	mov	r0, r4
 800f9f8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800f9fc:	f7ff ffa6 	bl	800f94c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 800fa00:	4629      	mov	r1, r5
 800fa02:	4620      	mov	r0, r4
 800fa04:	f7ff fbb4 	bl	800f170 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800fa08:	6960      	ldr	r0, [r4, #20]
 800fa0a:	b110      	cbz	r0, 800fa12 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 800fa0c:	6803      	ldr	r3, [r0, #0]
 800fa0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa10:	4798      	blx	r3
 800fa12:	b009      	add	sp, #36	; 0x24
 800fa14:	bd30      	pop	{r4, r5, pc}
 800fa16:	bf00      	nop
 800fa18:	080276a0 	.word	0x080276a0
 800fa1c:	0800f66d 	.word	0x0800f66d

0800fa20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fa20:	b513      	push	{r0, r1, r4, lr}
 800fa22:	6803      	ldr	r3, [r0, #0]
 800fa24:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 800fa28:	2300      	movs	r3, #0
 800fa2a:	e9cd 3300 	strd	r3, r3, [sp]
 800fa2e:	466b      	mov	r3, sp
 800fa30:	47a0      	blx	r4
 800fa32:	b002      	add	sp, #8
 800fa34:	bd10      	pop	{r4, pc}

0800fa36 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fa36:	2301      	movs	r3, #1
 800fa38:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fa3c:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800fa40:	4770      	bx	lr

0800fa42 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fa42:	2301      	movs	r3, #1
 800fa44:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fa48:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800fa4c:	4770      	bx	lr

0800fa4e <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fa4e:	6843      	ldr	r3, [r0, #4]
 800fa50:	2201      	movs	r2, #1
 800fa52:	725a      	strb	r2, [r3, #9]
 800fa54:	6840      	ldr	r0, [r0, #4]
 800fa56:	6803      	ldr	r3, [r0, #0]
 800fa58:	691b      	ldr	r3, [r3, #16]
 800fa5a:	4718      	bx	r3

0800fa5c <_ZN8touchgfx3HAL8flushDMAEv>:
 800fa5c:	6840      	ldr	r0, [r0, #4]
 800fa5e:	6803      	ldr	r3, [r0, #0]
 800fa60:	689b      	ldr	r3, [r3, #8]
 800fa62:	4718      	bx	r3

0800fa64 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fa64:	b530      	push	{r4, r5, lr}
 800fa66:	b08b      	sub	sp, #44	; 0x2c
 800fa68:	6804      	ldr	r4, [r0, #0]
 800fa6a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fa6e:	9509      	str	r5, [sp, #36]	; 0x24
 800fa70:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fa74:	9508      	str	r5, [sp, #32]
 800fa76:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fa7a:	9507      	str	r5, [sp, #28]
 800fa7c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fa80:	9506      	str	r5, [sp, #24]
 800fa82:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fa86:	9505      	str	r5, [sp, #20]
 800fa88:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fa8c:	9504      	str	r5, [sp, #16]
 800fa8e:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fa92:	9503      	str	r5, [sp, #12]
 800fa94:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fa98:	9502      	str	r5, [sp, #8]
 800fa9a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fa9e:	e9cd 3500 	strd	r3, r5, [sp]
 800faa2:	4613      	mov	r3, r2
 800faa4:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800faa6:	2200      	movs	r2, #0
 800faa8:	47a0      	blx	r4
 800faaa:	b00b      	add	sp, #44	; 0x2c
 800faac:	bd30      	pop	{r4, r5, pc}
	...

0800fab0 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fab0:	4b04      	ldr	r3, [pc, #16]	; (800fac4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fab2:	781b      	ldrb	r3, [r3, #0]
 800fab4:	b123      	cbz	r3, 800fac0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fab6:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800faba:	f080 0001 	eor.w	r0, r0, #1
 800fabe:	4770      	bx	lr
 800fac0:	2001      	movs	r0, #1
 800fac2:	4770      	bx	lr
 800fac4:	2002008a 	.word	0x2002008a

0800fac8 <_ZN8touchgfx3HAL8endFrameEv>:
 800fac8:	b510      	push	{r4, lr}
 800faca:	4604      	mov	r4, r0
 800facc:	6840      	ldr	r0, [r0, #4]
 800face:	6803      	ldr	r3, [r0, #0]
 800fad0:	689b      	ldr	r3, [r3, #8]
 800fad2:	4798      	blx	r3
 800fad4:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800fad8:	b113      	cbz	r3, 800fae0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fada:	2301      	movs	r3, #1
 800fadc:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800fae0:	bd10      	pop	{r4, pc}

0800fae2 <_ZN8touchgfx3HAL10initializeEv>:
 800fae2:	b510      	push	{r4, lr}
 800fae4:	4604      	mov	r4, r0
 800fae6:	f7f1 f8df 	bl	8000ca8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800faea:	6860      	ldr	r0, [r4, #4]
 800faec:	6803      	ldr	r3, [r0, #0]
 800faee:	68db      	ldr	r3, [r3, #12]
 800faf0:	4798      	blx	r3
 800faf2:	68e0      	ldr	r0, [r4, #12]
 800faf4:	6803      	ldr	r3, [r0, #0]
 800faf6:	689b      	ldr	r3, [r3, #8]
 800faf8:	4798      	blx	r3
 800fafa:	6823      	ldr	r3, [r4, #0]
 800fafc:	4620      	mov	r0, r4
 800fafe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fb00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb04:	4718      	bx	r3
	...

0800fb08 <_ZN8touchgfx3HAL4tickEv>:
 800fb08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fb0a:	6803      	ldr	r3, [r0, #0]
 800fb0c:	4d5c      	ldr	r5, [pc, #368]	; (800fc80 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fb0e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800fb12:	4604      	mov	r4, r0
 800fb14:	4798      	blx	r3
 800fb16:	2800      	cmp	r0, #0
 800fb18:	f000 8097 	beq.w	800fc4a <_ZN8touchgfx3HAL4tickEv+0x142>
 800fb1c:	2001      	movs	r0, #1
 800fb1e:	f7f0 fe2b 	bl	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fb22:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800fb26:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800fb2a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800fb2e:	2600      	movs	r6, #0
 800fb30:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800fb34:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fb38:	b133      	cbz	r3, 800fb48 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fb3a:	6823      	ldr	r3, [r4, #0]
 800fb3c:	4620      	mov	r0, r4
 800fb3e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fb42:	4798      	blx	r3
 800fb44:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800fb48:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fb4c:	6862      	ldr	r2, [r4, #4]
 800fb4e:	f083 0301 	eor.w	r3, r3, #1
 800fb52:	7253      	strb	r3, [r2, #9]
 800fb54:	2601      	movs	r6, #1
 800fb56:	702e      	strb	r6, [r5, #0]
 800fb58:	f003 fbc4 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 800fb5c:	6803      	ldr	r3, [r0, #0]
 800fb5e:	4631      	mov	r1, r6
 800fb60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fb62:	4798      	blx	r3
 800fb64:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800fb68:	b90b      	cbnz	r3, 800fb6e <_ZN8touchgfx3HAL4tickEv+0x66>
 800fb6a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800fb6e:	f003 fbb9 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 800fb72:	6803      	ldr	r3, [r0, #0]
 800fb74:	695b      	ldr	r3, [r3, #20]
 800fb76:	4798      	blx	r3
 800fb78:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fb7a:	6803      	ldr	r3, [r0, #0]
 800fb7c:	691b      	ldr	r3, [r3, #16]
 800fb7e:	4798      	blx	r3
 800fb80:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800fb84:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800fb88:	3b01      	subs	r3, #1
 800fb8a:	b2db      	uxtb	r3, r3
 800fb8c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800fb90:	b10a      	cbz	r2, 800fb96 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800fb92:	2b00      	cmp	r3, #0
 800fb94:	d1eb      	bne.n	800fb6e <_ZN8touchgfx3HAL4tickEv+0x66>
 800fb96:	4a3b      	ldr	r2, [pc, #236]	; (800fc84 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fb98:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800fb9c:	7813      	ldrb	r3, [r2, #0]
 800fb9e:	3301      	adds	r3, #1
 800fba0:	b25b      	sxtb	r3, r3
 800fba2:	4299      	cmp	r1, r3
 800fba4:	7013      	strb	r3, [r2, #0]
 800fba6:	dc10      	bgt.n	800fbca <_ZN8touchgfx3HAL4tickEv+0xc2>
 800fba8:	68e0      	ldr	r0, [r4, #12]
 800fbaa:	2300      	movs	r3, #0
 800fbac:	7013      	strb	r3, [r2, #0]
 800fbae:	6803      	ldr	r3, [r0, #0]
 800fbb0:	aa03      	add	r2, sp, #12
 800fbb2:	68db      	ldr	r3, [r3, #12]
 800fbb4:	a902      	add	r1, sp, #8
 800fbb6:	4798      	blx	r3
 800fbb8:	6823      	ldr	r3, [r4, #0]
 800fbba:	2800      	cmp	r0, #0
 800fbbc:	d051      	beq.n	800fc62 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800fbbe:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fbc2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fbc6:	4620      	mov	r0, r4
 800fbc8:	4798      	blx	r3
 800fbca:	6960      	ldr	r0, [r4, #20]
 800fbcc:	2300      	movs	r3, #0
 800fbce:	f88d 3007 	strb.w	r3, [sp, #7]
 800fbd2:	b158      	cbz	r0, 800fbec <_ZN8touchgfx3HAL4tickEv+0xe4>
 800fbd4:	6803      	ldr	r3, [r0, #0]
 800fbd6:	f10d 0107 	add.w	r1, sp, #7
 800fbda:	68db      	ldr	r3, [r3, #12]
 800fbdc:	4798      	blx	r3
 800fbde:	b128      	cbz	r0, 800fbec <_ZN8touchgfx3HAL4tickEv+0xe4>
 800fbe0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fbe2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fbe6:	6803      	ldr	r3, [r0, #0]
 800fbe8:	68db      	ldr	r3, [r3, #12]
 800fbea:	4798      	blx	r3
 800fbec:	f104 001c 	add.w	r0, r4, #28
 800fbf0:	f013 f884 	bl	8022cfc <_ZN8touchgfx8Gestures4tickEv>
 800fbf4:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800fbf8:	b30b      	cbz	r3, 800fc3e <_ZN8touchgfx3HAL4tickEv+0x136>
 800fbfa:	6920      	ldr	r0, [r4, #16]
 800fbfc:	6803      	ldr	r3, [r0, #0]
 800fbfe:	691b      	ldr	r3, [r3, #16]
 800fc00:	4798      	blx	r3
 800fc02:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800fc04:	4606      	mov	r6, r0
 800fc06:	b903      	cbnz	r3, 800fc0a <_ZN8touchgfx3HAL4tickEv+0x102>
 800fc08:	6720      	str	r0, [r4, #112]	; 0x70
 800fc0a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800fc0c:	4a1e      	ldr	r2, [pc, #120]	; (800fc88 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800fc0e:	1af3      	subs	r3, r6, r3
 800fc10:	4293      	cmp	r3, r2
 800fc12:	d914      	bls.n	800fc3e <_ZN8touchgfx3HAL4tickEv+0x136>
 800fc14:	6920      	ldr	r0, [r4, #16]
 800fc16:	6803      	ldr	r3, [r0, #0]
 800fc18:	699b      	ldr	r3, [r3, #24]
 800fc1a:	4798      	blx	r3
 800fc1c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800fc1e:	2264      	movs	r2, #100	; 0x64
 800fc20:	1af3      	subs	r3, r6, r3
 800fc22:	fbb3 f3f2 	udiv	r3, r3, r2
 800fc26:	fbb0 f0f3 	udiv	r0, r0, r3
 800fc2a:	2800      	cmp	r0, #0
 800fc2c:	dc1e      	bgt.n	800fc6c <_ZN8touchgfx3HAL4tickEv+0x164>
 800fc2e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800fc32:	6920      	ldr	r0, [r4, #16]
 800fc34:	6803      	ldr	r3, [r0, #0]
 800fc36:	2100      	movs	r1, #0
 800fc38:	69db      	ldr	r3, [r3, #28]
 800fc3a:	4798      	blx	r3
 800fc3c:	6726      	str	r6, [r4, #112]	; 0x70
 800fc3e:	f003 fb51 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 800fc42:	6803      	ldr	r3, [r0, #0]
 800fc44:	2100      	movs	r1, #0
 800fc46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fc48:	4798      	blx	r3
 800fc4a:	6823      	ldr	r3, [r4, #0]
 800fc4c:	4620      	mov	r0, r4
 800fc4e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800fc52:	4798      	blx	r3
 800fc54:	2001      	movs	r0, #1
 800fc56:	f7f0 fdab 	bl	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fc5a:	2300      	movs	r3, #0
 800fc5c:	702b      	strb	r3, [r5, #0]
 800fc5e:	b004      	add	sp, #16
 800fc60:	bd70      	pop	{r4, r5, r6, pc}
 800fc62:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800fc66:	4620      	mov	r0, r4
 800fc68:	4798      	blx	r3
 800fc6a:	e7ae      	b.n	800fbca <_ZN8touchgfx3HAL4tickEv+0xc2>
 800fc6c:	2863      	cmp	r0, #99	; 0x63
 800fc6e:	bfcb      	itete	gt
 800fc70:	2300      	movgt	r3, #0
 800fc72:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fc76:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800fc7a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800fc7e:	e7d8      	b.n	800fc32 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800fc80:	20020090 	.word	0x20020090
 800fc84:	20020091 	.word	0x20020091
 800fc88:	05f5e100 	.word	0x05f5e100

0800fc8c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fc8c:	f7f1 b83c 	b.w	8000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800fc90 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fc90:	6581      	str	r1, [r0, #88]	; 0x58
 800fc92:	301c      	adds	r0, #28
 800fc94:	f013 b830 	b.w	8022cf8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fc98 <_ZN8touchgfx3HAL5touchEll>:
 800fc98:	b530      	push	{r4, r5, lr}
 800fc9a:	b087      	sub	sp, #28
 800fc9c:	4604      	mov	r4, r0
 800fc9e:	a804      	add	r0, sp, #16
 800fca0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fca4:	f003 f8d4 	bl	8012e50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fca8:	9b04      	ldr	r3, [sp, #16]
 800fcaa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fcae:	a906      	add	r1, sp, #24
 800fcb0:	9b05      	ldr	r3, [sp, #20]
 800fcb2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fcb6:	a803      	add	r0, sp, #12
 800fcb8:	f003 f91c 	bl	8012ef4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fcbc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800fcc0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fcc4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fcc8:	f104 001c 	add.w	r0, r4, #28
 800fccc:	b189      	cbz	r1, 800fcf2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fcce:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800fcd2:	9300      	str	r3, [sp, #0]
 800fcd4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800fcd8:	4613      	mov	r3, r2
 800fcda:	462a      	mov	r2, r5
 800fcdc:	f013 f81c 	bl	8022d18 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fce0:	b128      	cbz	r0, 800fcee <_ZN8touchgfx3HAL5touchEll+0x56>
 800fce2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fce6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800fce8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fcec:	6623      	str	r3, [r4, #96]	; 0x60
 800fcee:	b007      	add	sp, #28
 800fcf0:	bd30      	pop	{r4, r5, pc}
 800fcf2:	f013 f855 	bl	8022da0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fcf6:	2301      	movs	r3, #1
 800fcf8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fcfc:	e7f1      	b.n	800fce2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fcfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fcfe:	b510      	push	{r4, lr}
 800fd00:	2b00      	cmp	r3, #0
 800fd02:	d046      	beq.n	800fd92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd04:	ea81 0002 	eor.w	r0, r1, r2
 800fd08:	07c4      	lsls	r4, r0, #31
 800fd0a:	d508      	bpl.n	800fd1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fd0c:	440b      	add	r3, r1
 800fd0e:	3a01      	subs	r2, #1
 800fd10:	428b      	cmp	r3, r1
 800fd12:	d93e      	bls.n	800fd92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd14:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fd18:	f801 0b01 	strb.w	r0, [r1], #1
 800fd1c:	e7f8      	b.n	800fd10 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fd1e:	07d0      	lsls	r0, r2, #31
 800fd20:	bf42      	ittt	mi
 800fd22:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fd26:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fd2a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fd2e:	2b01      	cmp	r3, #1
 800fd30:	d911      	bls.n	800fd56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd32:	ea81 0402 	eor.w	r4, r1, r2
 800fd36:	07a4      	lsls	r4, r4, #30
 800fd38:	4610      	mov	r0, r2
 800fd3a:	d022      	beq.n	800fd82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800fd3c:	f023 0401 	bic.w	r4, r3, #1
 800fd40:	440c      	add	r4, r1
 800fd42:	428c      	cmp	r4, r1
 800fd44:	4602      	mov	r2, r0
 800fd46:	d904      	bls.n	800fd52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800fd48:	8812      	ldrh	r2, [r2, #0]
 800fd4a:	f821 2b02 	strh.w	r2, [r1], #2
 800fd4e:	3002      	adds	r0, #2
 800fd50:	e7f7      	b.n	800fd42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fd52:	f003 0301 	and.w	r3, r3, #1
 800fd56:	f023 0003 	bic.w	r0, r3, #3
 800fd5a:	4408      	add	r0, r1
 800fd5c:	4288      	cmp	r0, r1
 800fd5e:	4614      	mov	r4, r2
 800fd60:	d904      	bls.n	800fd6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fd62:	6824      	ldr	r4, [r4, #0]
 800fd64:	f841 4b04 	str.w	r4, [r1], #4
 800fd68:	3204      	adds	r2, #4
 800fd6a:	e7f7      	b.n	800fd5c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fd6c:	f003 0303 	and.w	r3, r3, #3
 800fd70:	440b      	add	r3, r1
 800fd72:	3a01      	subs	r2, #1
 800fd74:	428b      	cmp	r3, r1
 800fd76:	d90c      	bls.n	800fd92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd78:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fd7c:	f801 0b01 	strb.w	r0, [r1], #1
 800fd80:	e7f8      	b.n	800fd74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fd82:	0790      	lsls	r0, r2, #30
 800fd84:	d0e7      	beq.n	800fd56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd86:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fd8a:	f821 0b02 	strh.w	r0, [r1], #2
 800fd8e:	3b02      	subs	r3, #2
 800fd90:	e7e1      	b.n	800fd56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd92:	2001      	movs	r0, #1
 800fd94:	bd10      	pop	{r4, pc}

0800fd96 <_ZN8touchgfx3HAL7noTouchEv>:
 800fd96:	b510      	push	{r4, lr}
 800fd98:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800fd9c:	4604      	mov	r4, r0
 800fd9e:	b153      	cbz	r3, 800fdb6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800fda0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800fda4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800fda8:	2101      	movs	r1, #1
 800fdaa:	301c      	adds	r0, #28
 800fdac:	f012 fff8 	bl	8022da0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fdb0:	2300      	movs	r3, #0
 800fdb2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fdb6:	bd10      	pop	{r4, pc}

0800fdb8 <_ZN8touchgfx3HAL3lcdEv>:
 800fdb8:	4b04      	ldr	r3, [pc, #16]	; (800fdcc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800fdba:	681b      	ldr	r3, [r3, #0]
 800fdbc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fdc0:	b10a      	cbz	r2, 800fdc6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800fdc2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fdc4:	b900      	cbnz	r0, 800fdc8 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800fdc6:	6898      	ldr	r0, [r3, #8]
 800fdc8:	4770      	bx	lr
 800fdca:	bf00      	nop
 800fdcc:	2002008c 	.word	0x2002008c

0800fdd0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800fdd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fdd4:	4604      	mov	r4, r0
 800fdd6:	6980      	ldr	r0, [r0, #24]
 800fdd8:	b085      	sub	sp, #20
 800fdda:	460f      	mov	r7, r1
 800fddc:	4690      	mov	r8, r2
 800fdde:	4699      	mov	r9, r3
 800fde0:	b930      	cbnz	r0, 800fdf0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800fde2:	4b1c      	ldr	r3, [pc, #112]	; (800fe54 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800fde4:	4a1c      	ldr	r2, [pc, #112]	; (800fe58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800fde6:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 800fdea:	481c      	ldr	r0, [pc, #112]	; (800fe5c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800fdec:	f013 f88c 	bl	8022f08 <__assert_func>
 800fdf0:	ad04      	add	r5, sp, #16
 800fdf2:	2600      	movs	r6, #0
 800fdf4:	f845 6d04 	str.w	r6, [r5, #-4]!
 800fdf8:	6806      	ldr	r6, [r0, #0]
 800fdfa:	9501      	str	r5, [sp, #4]
 800fdfc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800fe00:	9500      	str	r5, [sp, #0]
 800fe02:	6835      	ldr	r5, [r6, #0]
 800fe04:	47a8      	blx	r5
 800fe06:	4d16      	ldr	r5, [pc, #88]	; (800fe60 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800fe08:	4606      	mov	r6, r0
 800fe0a:	f8a5 9000 	strh.w	r9, [r5]
 800fe0e:	f7ff ffd3 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 800fe12:	6803      	ldr	r3, [r0, #0]
 800fe14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fe16:	4798      	blx	r3
 800fe18:	2801      	cmp	r0, #1
 800fe1a:	d012      	beq.n	800fe42 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800fe1c:	d306      	bcc.n	800fe2c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800fe1e:	280d      	cmp	r0, #13
 800fe20:	d80b      	bhi.n	800fe3a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800fe22:	4b10      	ldr	r3, [pc, #64]	; (800fe64 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800fe24:	4a0c      	ldr	r2, [pc, #48]	; (800fe58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800fe26:	f240 1167 	movw	r1, #359	; 0x167
 800fe2a:	e7de      	b.n	800fdea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800fe2c:	882b      	ldrh	r3, [r5, #0]
 800fe2e:	fb08 7203 	mla	r2, r8, r3, r7
 800fe32:	9b03      	ldr	r3, [sp, #12]
 800fe34:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800fe38:	63e3      	str	r3, [r4, #60]	; 0x3c
 800fe3a:	4630      	mov	r0, r6
 800fe3c:	b005      	add	sp, #20
 800fe3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe42:	882a      	ldrh	r2, [r5, #0]
 800fe44:	9b03      	ldr	r3, [sp, #12]
 800fe46:	fb08 7202 	mla	r2, r8, r2, r7
 800fe4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800fe4e:	1a9a      	subs	r2, r3, r2
 800fe50:	63e2      	str	r2, [r4, #60]	; 0x3c
 800fe52:	e7f2      	b.n	800fe3a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800fe54:	0802796a 	.word	0x0802796a
 800fe58:	08027c28 	.word	0x08027c28
 800fe5c:	080279af 	.word	0x080279af
 800fe60:	20020086 	.word	0x20020086
 800fe64:	080279d5 	.word	0x080279d5

0800fe68 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800fe68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe6a:	b08b      	sub	sp, #44	; 0x2c
 800fe6c:	4617      	mov	r7, r2
 800fe6e:	4604      	mov	r4, r0
 800fe70:	460e      	mov	r6, r1
 800fe72:	461d      	mov	r5, r3
 800fe74:	f7ff ffa0 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 800fe78:	6803      	ldr	r3, [r0, #0]
 800fe7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fe7c:	4798      	blx	r3
 800fe7e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fe82:	9007      	str	r0, [sp, #28]
 800fe84:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fe88:	4b0d      	ldr	r3, [pc, #52]	; (800fec0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800fe8a:	6822      	ldr	r2, [r4, #0]
 800fe8c:	881b      	ldrh	r3, [r3, #0]
 800fe8e:	9306      	str	r3, [sp, #24]
 800fe90:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fe94:	9305      	str	r3, [sp, #20]
 800fe96:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800fe9a:	9304      	str	r3, [sp, #16]
 800fe9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fea0:	9303      	str	r3, [sp, #12]
 800fea2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fea6:	9302      	str	r3, [sp, #8]
 800fea8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800feac:	e9cd 5300 	strd	r5, r3, [sp]
 800feb0:	4631      	mov	r1, r6
 800feb2:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800feb4:	463b      	mov	r3, r7
 800feb6:	2200      	movs	r2, #0
 800feb8:	4620      	mov	r0, r4
 800feba:	47a8      	blx	r5
 800febc:	b00b      	add	sp, #44	; 0x2c
 800febe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fec0:	20020086 	.word	0x20020086

0800fec4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fec4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fec8:	4698      	mov	r8, r3
 800feca:	6803      	ldr	r3, [r0, #0]
 800fecc:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800fece:	4b15      	ldr	r3, [pc, #84]	; (800ff24 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fed0:	b08b      	sub	sp, #44	; 0x2c
 800fed2:	4617      	mov	r7, r2
 800fed4:	f8b3 9000 	ldrh.w	r9, [r3]
 800fed8:	460e      	mov	r6, r1
 800feda:	4604      	mov	r4, r0
 800fedc:	f7ff ff6c 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 800fee0:	6803      	ldr	r3, [r0, #0]
 800fee2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fee4:	4798      	blx	r3
 800fee6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800feea:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800feee:	2302      	movs	r3, #2
 800fef0:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800fef4:	2301      	movs	r3, #1
 800fef6:	9305      	str	r3, [sp, #20]
 800fef8:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fefc:	9304      	str	r3, [sp, #16]
 800fefe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ff02:	9303      	str	r3, [sp, #12]
 800ff04:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ff08:	9302      	str	r3, [sp, #8]
 800ff0a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ff0e:	2200      	movs	r2, #0
 800ff10:	e9cd 8300 	strd	r8, r3, [sp]
 800ff14:	4631      	mov	r1, r6
 800ff16:	463b      	mov	r3, r7
 800ff18:	4620      	mov	r0, r4
 800ff1a:	47a8      	blx	r5
 800ff1c:	b00b      	add	sp, #44	; 0x2c
 800ff1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff22:	bf00      	nop
 800ff24:	20020086 	.word	0x20020086

0800ff28 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ff28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff2c:	4698      	mov	r8, r3
 800ff2e:	6803      	ldr	r3, [r0, #0]
 800ff30:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800ff32:	4b11      	ldr	r3, [pc, #68]	; (800ff78 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ff34:	b087      	sub	sp, #28
 800ff36:	f8b3 9000 	ldrh.w	r9, [r3]
 800ff3a:	460e      	mov	r6, r1
 800ff3c:	4617      	mov	r7, r2
 800ff3e:	4604      	mov	r4, r0
 800ff40:	f7ff ff3a 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 800ff44:	6803      	ldr	r3, [r0, #0]
 800ff46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ff48:	4798      	blx	r3
 800ff4a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ff4e:	f8cd 900c 	str.w	r9, [sp, #12]
 800ff52:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ff56:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ff5a:	9302      	str	r3, [sp, #8]
 800ff5c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ff60:	9301      	str	r3, [sp, #4]
 800ff62:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ff66:	9300      	str	r3, [sp, #0]
 800ff68:	463a      	mov	r2, r7
 800ff6a:	4643      	mov	r3, r8
 800ff6c:	4631      	mov	r1, r6
 800ff6e:	4620      	mov	r0, r4
 800ff70:	47a8      	blx	r5
 800ff72:	b007      	add	sp, #28
 800ff74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff78:	20020086 	.word	0x20020086

0800ff7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ff7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff80:	4604      	mov	r4, r0
 800ff82:	b08f      	sub	sp, #60	; 0x3c
 800ff84:	4610      	mov	r0, r2
 800ff86:	460d      	mov	r5, r1
 800ff88:	4691      	mov	r9, r2
 800ff8a:	461e      	mov	r6, r3
 800ff8c:	f006 fe78 	bl	8016c80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ff90:	2800      	cmp	r0, #0
 800ff92:	f000 809c 	beq.w	80100ce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800ff96:	6823      	ldr	r3, [r4, #0]
 800ff98:	f8df b194 	ldr.w	fp, [pc, #404]	; 8010130 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800ff9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ff9e:	f8df a194 	ldr.w	sl, [pc, #404]	; 8010134 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ffa2:	4f60      	ldr	r7, [pc, #384]	; (8010124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ffa4:	4620      	mov	r0, r4
 800ffa6:	4798      	blx	r3
 800ffa8:	6823      	ldr	r3, [r4, #0]
 800ffaa:	4620      	mov	r0, r4
 800ffac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ffae:	4798      	blx	r3
 800ffb0:	f8bb 3000 	ldrh.w	r3, [fp]
 800ffb4:	9301      	str	r3, [sp, #4]
 800ffb6:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ffba:	f8ba 3000 	ldrh.w	r3, [sl]
 800ffbe:	9302      	str	r3, [sp, #8]
 800ffc0:	883b      	ldrh	r3, [r7, #0]
 800ffc2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ffc6:	9303      	str	r3, [sp, #12]
 800ffc8:	4b57      	ldr	r3, [pc, #348]	; (8010128 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ffca:	9305      	str	r3, [sp, #20]
 800ffcc:	881a      	ldrh	r2, [r3, #0]
 800ffce:	9204      	str	r2, [sp, #16]
 800ffd0:	4640      	mov	r0, r8
 800ffd2:	f006 ff0f 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ffd6:	8038      	strh	r0, [r7, #0]
 800ffd8:	4640      	mov	r0, r8
 800ffda:	f006 ff45 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ffde:	9b05      	ldr	r3, [sp, #20]
 800ffe0:	8018      	strh	r0, [r3, #0]
 800ffe2:	4b52      	ldr	r3, [pc, #328]	; (801012c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ffe4:	781b      	ldrb	r3, [r3, #0]
 800ffe6:	2b00      	cmp	r3, #0
 800ffe8:	d174      	bne.n	80100d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800ffea:	883b      	ldrh	r3, [r7, #0]
 800ffec:	f8ab 3000 	strh.w	r3, [fp]
 800fff0:	f8aa 0000 	strh.w	r0, [sl]
 800fff4:	4648      	mov	r0, r9
 800fff6:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800fffa:	f006 fe41 	bl	8016c80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fffe:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010002:	2200      	movs	r2, #0
 8010004:	4611      	mov	r1, r2
 8010006:	4628      	mov	r0, r5
 8010008:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801000c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010010:	f7f2 f940 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8010014:	2301      	movs	r3, #1
 8010016:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 801001a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801001e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010022:	2b00      	cmp	r3, #0
 8010024:	dd5c      	ble.n	80100e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8010026:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801002a:	2b00      	cmp	r3, #0
 801002c:	dd58      	ble.n	80100e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 801002e:	462a      	mov	r2, r5
 8010030:	ab0a      	add	r3, sp, #40	; 0x28
 8010032:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010036:	6851      	ldr	r1, [r2, #4]
 8010038:	c303      	stmia	r3!, {r0, r1}
 801003a:	4631      	mov	r1, r6
 801003c:	a80a      	add	r0, sp, #40	; 0x28
 801003e:	f7ff fa0d 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8010042:	4b38      	ldr	r3, [pc, #224]	; (8010124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8010044:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010048:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801004c:	2100      	movs	r1, #0
 801004e:	aa0a      	add	r2, sp, #40	; 0x28
 8010050:	4b35      	ldr	r3, [pc, #212]	; (8010128 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010052:	910c      	str	r1, [sp, #48]	; 0x30
 8010054:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010058:	f9b3 3000 	ldrsh.w	r3, [r3]
 801005c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010060:	ab08      	add	r3, sp, #32
 8010062:	e883 0003 	stmia.w	r3, {r0, r1}
 8010066:	4618      	mov	r0, r3
 8010068:	a90c      	add	r1, sp, #48	; 0x30
 801006a:	f7ff f9f7 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 801006e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010070:	2b00      	cmp	r3, #0
 8010072:	d13c      	bne.n	80100ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8010074:	2000      	movs	r0, #0
 8010076:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 801007a:	2600      	movs	r6, #0
 801007c:	682a      	ldr	r2, [r5, #0]
 801007e:	696b      	ldr	r3, [r5, #20]
 8010080:	616e      	str	r6, [r5, #20]
 8010082:	9305      	str	r3, [sp, #20]
 8010084:	6892      	ldr	r2, [r2, #8]
 8010086:	a908      	add	r1, sp, #32
 8010088:	4628      	mov	r0, r5
 801008a:	4790      	blx	r2
 801008c:	9b05      	ldr	r3, [sp, #20]
 801008e:	616b      	str	r3, [r5, #20]
 8010090:	4652      	mov	r2, sl
 8010092:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8010096:	4649      	mov	r1, r9
 8010098:	4628      	mov	r0, r5
 801009a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801009e:	f7f2 f8f9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80100a2:	4b23      	ldr	r3, [pc, #140]	; (8010130 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80100a4:	9a01      	ldr	r2, [sp, #4]
 80100a6:	801a      	strh	r2, [r3, #0]
 80100a8:	4b22      	ldr	r3, [pc, #136]	; (8010134 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80100aa:	9a02      	ldr	r2, [sp, #8]
 80100ac:	801a      	strh	r2, [r3, #0]
 80100ae:	4b1d      	ldr	r3, [pc, #116]	; (8010124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80100b0:	9a03      	ldr	r2, [sp, #12]
 80100b2:	801a      	strh	r2, [r3, #0]
 80100b4:	4b1c      	ldr	r3, [pc, #112]	; (8010128 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80100b6:	9a04      	ldr	r2, [sp, #16]
 80100b8:	801a      	strh	r2, [r3, #0]
 80100ba:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80100be:	6823      	ldr	r3, [r4, #0]
 80100c0:	4620      	mov	r0, r4
 80100c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80100c4:	4798      	blx	r3
 80100c6:	6823      	ldr	r3, [r4, #0]
 80100c8:	4620      	mov	r0, r4
 80100ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80100cc:	4798      	blx	r3
 80100ce:	b00f      	add	sp, #60	; 0x3c
 80100d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100d4:	883b      	ldrh	r3, [r7, #0]
 80100d6:	f8ab 0000 	strh.w	r0, [fp]
 80100da:	f8aa 3000 	strh.w	r3, [sl]
 80100de:	e789      	b.n	800fff4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 80100e0:	462a      	mov	r2, r5
 80100e2:	ab0a      	add	r3, sp, #40	; 0x28
 80100e4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80100e8:	6851      	ldr	r1, [r2, #4]
 80100ea:	c303      	stmia	r3!, {r0, r1}
 80100ec:	e7a9      	b.n	8010042 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 80100ee:	a807      	add	r0, sp, #28
 80100f0:	f007 f812 	bl	8017118 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80100f4:	4606      	mov	r6, r0
 80100f6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80100f8:	6803      	ldr	r3, [r0, #0]
 80100fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80100fc:	4798      	blx	r3
 80100fe:	4286      	cmp	r6, r0
 8010100:	d1b8      	bne.n	8010074 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8010102:	f7ff fe59 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 8010106:	6803      	ldr	r3, [r0, #0]
 8010108:	4606      	mov	r6, r0
 801010a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801010c:	9305      	str	r3, [sp, #20]
 801010e:	a807      	add	r0, sp, #28
 8010110:	f007 f802 	bl	8017118 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010114:	9b05      	ldr	r3, [sp, #20]
 8010116:	4601      	mov	r1, r0
 8010118:	4630      	mov	r0, r6
 801011a:	4798      	blx	r3
 801011c:	f080 0001 	eor.w	r0, r0, #1
 8010120:	b2c0      	uxtb	r0, r0
 8010122:	e7a8      	b.n	8010076 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010124:	20020080 	.word	0x20020080
 8010128:	20020082 	.word	0x20020082
 801012c:	20020084 	.word	0x20020084
 8010130:	20020086 	.word	0x20020086
 8010134:	20020088 	.word	0x20020088

08010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010138:	b510      	push	{r4, lr}
 801013a:	4b07      	ldr	r3, [pc, #28]	; (8010158 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801013c:	781b      	ldrb	r3, [r3, #0]
 801013e:	4604      	mov	r4, r0
 8010140:	b13b      	cbz	r3, 8010152 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010142:	6803      	ldr	r3, [r0, #0]
 8010144:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010146:	4798      	blx	r3
 8010148:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801014a:	4283      	cmp	r3, r0
 801014c:	d101      	bne.n	8010152 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801014e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010150:	bd10      	pop	{r4, pc}
 8010152:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010154:	e7fc      	b.n	8010150 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010156:	bf00      	nop
 8010158:	2002008a 	.word	0x2002008a

0801015c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801015c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010160:	b088      	sub	sp, #32
 8010162:	461d      	mov	r5, r3
 8010164:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010168:	2400      	movs	r4, #0
 801016a:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 801016e:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 8010172:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8010176:	9403      	str	r4, [sp, #12]
 8010178:	e9cd 3100 	strd	r3, r1, [sp]
 801017c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010180:	f8ad 8014 	strh.w	r8, [sp, #20]
 8010184:	4692      	mov	sl, r2
 8010186:	4606      	mov	r6, r0
 8010188:	f8ad 7016 	strh.w	r7, [sp, #22]
 801018c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010190:	f88d 401c 	strb.w	r4, [sp, #28]
 8010194:	f7ff ffd0 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010198:	fb09 a505 	mla	r5, r9, r5, sl
 801019c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80101a0:	9504      	str	r5, [sp, #16]
 80101a2:	f8ad 901a 	strh.w	r9, [sp, #26]
 80101a6:	f88d 401e 	strb.w	r4, [sp, #30]
 80101aa:	f88d 401d 	strb.w	r4, [sp, #29]
 80101ae:	f88d 401f 	strb.w	r4, [sp, #31]
 80101b2:	f1b8 0f00 	cmp.w	r8, #0
 80101b6:	d000      	beq.n	80101ba <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 80101b8:	b937      	cbnz	r7, 80101c8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 80101ba:	4b0d      	ldr	r3, [pc, #52]	; (80101f0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 80101bc:	4a0d      	ldr	r2, [pc, #52]	; (80101f4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 80101be:	f240 210b 	movw	r1, #523	; 0x20b
 80101c2:	480d      	ldr	r0, [pc, #52]	; (80101f8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 80101c4:	f012 fea0 	bl	8022f08 <__assert_func>
 80101c8:	6833      	ldr	r3, [r6, #0]
 80101ca:	9c00      	ldr	r4, [sp, #0]
 80101cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80101ce:	4630      	mov	r0, r6
 80101d0:	4798      	blx	r3
 80101d2:	4220      	tst	r0, r4
 80101d4:	d104      	bne.n	80101e0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 80101d6:	4b09      	ldr	r3, [pc, #36]	; (80101fc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 80101d8:	4a06      	ldr	r2, [pc, #24]	; (80101f4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 80101da:	f44f 7103 	mov.w	r1, #524	; 0x20c
 80101de:	e7f0      	b.n	80101c2 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 80101e0:	6870      	ldr	r0, [r6, #4]
 80101e2:	6803      	ldr	r3, [r0, #0]
 80101e4:	4669      	mov	r1, sp
 80101e6:	685b      	ldr	r3, [r3, #4]
 80101e8:	4798      	blx	r3
 80101ea:	b008      	add	sp, #32
 80101ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80101f0:	080277fd 	.word	0x080277fd
 80101f4:	08027a5d 	.word	0x08027a5d
 80101f8:	080279af 	.word	0x080279af
 80101fc:	08027835 	.word	0x08027835

08010200 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010204:	b089      	sub	sp, #36	; 0x24
 8010206:	2400      	movs	r4, #0
 8010208:	461d      	mov	r5, r3
 801020a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801020e:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 8010212:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8010216:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 801021a:	9403      	str	r4, [sp, #12]
 801021c:	468a      	mov	sl, r1
 801021e:	4693      	mov	fp, r2
 8010220:	4606      	mov	r6, r0
 8010222:	e9cd 3400 	strd	r3, r4, [sp]
 8010226:	f7ff ff87 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801022a:	fb09 b505 	mla	r5, r9, r5, fp
 801022e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010232:	9504      	str	r5, [sp, #16]
 8010234:	f8ad 8014 	strh.w	r8, [sp, #20]
 8010238:	f8ad 7016 	strh.w	r7, [sp, #22]
 801023c:	f8ad 4018 	strh.w	r4, [sp, #24]
 8010240:	f8ad 901a 	strh.w	r9, [sp, #26]
 8010244:	f8cd a00c 	str.w	sl, [sp, #12]
 8010248:	f8ad 401c 	strh.w	r4, [sp, #28]
 801024c:	f88d 401e 	strb.w	r4, [sp, #30]
 8010250:	f88d 401f 	strb.w	r4, [sp, #31]
 8010254:	f1b8 0f00 	cmp.w	r8, #0
 8010258:	d000      	beq.n	801025c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 801025a:	b937      	cbnz	r7, 801026a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 801025c:	4b0d      	ldr	r3, [pc, #52]	; (8010294 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 801025e:	4a0e      	ldr	r2, [pc, #56]	; (8010298 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8010260:	f240 2121 	movw	r1, #545	; 0x221
 8010264:	480d      	ldr	r0, [pc, #52]	; (801029c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8010266:	f012 fe4f 	bl	8022f08 <__assert_func>
 801026a:	6833      	ldr	r3, [r6, #0]
 801026c:	9c00      	ldr	r4, [sp, #0]
 801026e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010270:	4630      	mov	r0, r6
 8010272:	4798      	blx	r3
 8010274:	4220      	tst	r0, r4
 8010276:	d104      	bne.n	8010282 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 8010278:	4b09      	ldr	r3, [pc, #36]	; (80102a0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 801027a:	4a07      	ldr	r2, [pc, #28]	; (8010298 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 801027c:	f240 2122 	movw	r1, #546	; 0x222
 8010280:	e7f0      	b.n	8010264 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 8010282:	6870      	ldr	r0, [r6, #4]
 8010284:	6803      	ldr	r3, [r0, #0]
 8010286:	4669      	mov	r1, sp
 8010288:	685b      	ldr	r3, [r3, #4]
 801028a:	4798      	blx	r3
 801028c:	b009      	add	sp, #36	; 0x24
 801028e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010292:	bf00      	nop
 8010294:	0802787a 	.word	0x0802787a
 8010298:	08027ad3 	.word	0x08027ad3
 801029c:	080279af 	.word	0x080279af
 80102a0:	080278b2 	.word	0x080278b2

080102a4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80102a4:	b510      	push	{r4, lr}
 80102a6:	4b0b      	ldr	r3, [pc, #44]	; (80102d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 80102a8:	781b      	ldrb	r3, [r3, #0]
 80102aa:	4604      	mov	r4, r0
 80102ac:	b95b      	cbnz	r3, 80102c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80102ae:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80102b2:	2b02      	cmp	r3, #2
 80102b4:	d007      	beq.n	80102c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80102b6:	6840      	ldr	r0, [r0, #4]
 80102b8:	f000 fb7a 	bl	80109b0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80102bc:	b118      	cbz	r0, 80102c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80102be:	6862      	ldr	r2, [r4, #4]
 80102c0:	7a53      	ldrb	r3, [r2, #9]
 80102c2:	2b00      	cmp	r3, #0
 80102c4:	d0fc      	beq.n	80102c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80102c6:	f7f0 fd17 	bl	8000cf8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80102ca:	4620      	mov	r0, r4
 80102cc:	f7ff ff34 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80102d0:	bd10      	pop	{r4, pc}
 80102d2:	bf00      	nop
 80102d4:	2002008a 	.word	0x2002008a

080102d8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 80102d8:	b508      	push	{r3, lr}
 80102da:	290d      	cmp	r1, #13
 80102dc:	d817      	bhi.n	801030e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 80102de:	e8df f001 	tbb	[pc, r1]
 80102e2:	090b      	.short	0x090b
 80102e4:	0d0d0d07 	.word	0x0d0d0d07
 80102e8:	1414140d 	.word	0x1414140d
 80102ec:	0d0d1414 	.word	0x0d0d1414
 80102f0:	2020      	movs	r0, #32
 80102f2:	bd08      	pop	{r3, pc}
 80102f4:	2018      	movs	r0, #24
 80102f6:	e7fc      	b.n	80102f2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80102f8:	2010      	movs	r0, #16
 80102fa:	e7fa      	b.n	80102f2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80102fc:	4b05      	ldr	r3, [pc, #20]	; (8010314 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 80102fe:	4a06      	ldr	r2, [pc, #24]	; (8010318 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8010300:	4806      	ldr	r0, [pc, #24]	; (801031c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8010302:	f240 2182 	movw	r1, #642	; 0x282
 8010306:	f012 fdff 	bl	8022f08 <__assert_func>
 801030a:	2008      	movs	r0, #8
 801030c:	e7f1      	b.n	80102f2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 801030e:	2000      	movs	r0, #0
 8010310:	e7ef      	b.n	80102f2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8010312:	bf00      	nop
 8010314:	08027a2b 	.word	0x08027a2b
 8010318:	08027dfe 	.word	0x08027dfe
 801031c:	080279af 	.word	0x080279af

08010320 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8010320:	b570      	push	{r4, r5, r6, lr}
 8010322:	460d      	mov	r5, r1
 8010324:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8010328:	4616      	mov	r6, r2
 801032a:	461c      	mov	r4, r3
 801032c:	f7ff ffd4 	bl	80102d8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8010330:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8010334:	10c0      	asrs	r0, r0, #3
 8010336:	fb06 5101 	mla	r1, r6, r1, r5
 801033a:	fb00 4001 	mla	r0, r0, r1, r4
 801033e:	bd70      	pop	{r4, r5, r6, pc}

08010340 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010344:	b08a      	sub	sp, #40	; 0x28
 8010346:	f04f 0c00 	mov.w	ip, #0
 801034a:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 801034e:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8010352:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8010356:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801035a:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 801035e:	f8cd c014 	str.w	ip, [sp, #20]
 8010362:	2d0b      	cmp	r5, #11
 8010364:	4604      	mov	r4, r0
 8010366:	469a      	mov	sl, r3
 8010368:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801036c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010370:	d12d      	bne.n	80103ce <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8010372:	2080      	movs	r0, #128	; 0x80
 8010374:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010378:	9204      	str	r2, [sp, #16]
 801037a:	4620      	mov	r0, r4
 801037c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8010380:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010384:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010388:	f8ad 701c 	strh.w	r7, [sp, #28]
 801038c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010390:	f7ff fed2 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010394:	e9cd 9800 	strd	r9, r8, [sp]
 8010398:	4603      	mov	r3, r0
 801039a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 801039e:	4651      	mov	r1, sl
 80103a0:	4620      	mov	r0, r4
 80103a2:	f7ff ffbd 	bl	8010320 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80103a6:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 80103aa:	9006      	str	r0, [sp, #24]
 80103ac:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 80103b0:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 80103b4:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 80103b8:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 80103bc:	b107      	cbz	r7, 80103c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 80103be:	b9d6      	cbnz	r6, 80103f6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 80103c0:	4b17      	ldr	r3, [pc, #92]	; (8010420 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 80103c2:	4a18      	ldr	r2, [pc, #96]	; (8010424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 80103c4:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 80103c8:	4817      	ldr	r0, [pc, #92]	; (8010428 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 80103ca:	f012 fd9d 	bl	8022f08 <__assert_func>
 80103ce:	2d02      	cmp	r5, #2
 80103d0:	d108      	bne.n	80103e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 80103d2:	2bff      	cmp	r3, #255	; 0xff
 80103d4:	d104      	bne.n	80103e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 80103d6:	2800      	cmp	r0, #0
 80103d8:	bf14      	ite	ne
 80103da:	2040      	movne	r0, #64	; 0x40
 80103dc:	2020      	moveq	r0, #32
 80103de:	e7c9      	b.n	8010374 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80103e0:	2040      	movs	r0, #64	; 0x40
 80103e2:	e7c7      	b.n	8010374 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80103e4:	2bff      	cmp	r3, #255	; 0xff
 80103e6:	d104      	bne.n	80103f2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 80103e8:	2800      	cmp	r0, #0
 80103ea:	bf14      	ite	ne
 80103ec:	2004      	movne	r0, #4
 80103ee:	2001      	moveq	r0, #1
 80103f0:	e7c0      	b.n	8010374 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80103f2:	2004      	movs	r0, #4
 80103f4:	e7be      	b.n	8010374 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80103f6:	6823      	ldr	r3, [r4, #0]
 80103f8:	9d02      	ldr	r5, [sp, #8]
 80103fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80103fc:	4620      	mov	r0, r4
 80103fe:	4798      	blx	r3
 8010400:	4228      	tst	r0, r5
 8010402:	d104      	bne.n	801040e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 8010404:	4b09      	ldr	r3, [pc, #36]	; (801042c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8010406:	4a07      	ldr	r2, [pc, #28]	; (8010424 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8010408:	f240 11d5 	movw	r1, #469	; 0x1d5
 801040c:	e7dc      	b.n	80103c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 801040e:	6860      	ldr	r0, [r4, #4]
 8010410:	6803      	ldr	r3, [r0, #0]
 8010412:	a902      	add	r1, sp, #8
 8010414:	685b      	ldr	r3, [r3, #4]
 8010416:	4798      	blx	r3
 8010418:	b00a      	add	sp, #40	; 0x28
 801041a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801041e:	bf00      	nop
 8010420:	080277fd 	.word	0x080277fd
 8010424:	08027c8c 	.word	0x08027c8c
 8010428:	080279af 	.word	0x080279af
 801042c:	08027835 	.word	0x08027835

08010430 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010434:	b08b      	sub	sp, #44	; 0x2c
 8010436:	469b      	mov	fp, r3
 8010438:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801043c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8010440:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8010444:	2fff      	cmp	r7, #255	; 0xff
 8010446:	bf14      	ite	ne
 8010448:	2308      	movne	r3, #8
 801044a:	2302      	moveq	r3, #2
 801044c:	2600      	movs	r6, #0
 801044e:	4604      	mov	r4, r0
 8010450:	4689      	mov	r9, r1
 8010452:	4692      	mov	sl, r2
 8010454:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8010458:	9605      	str	r6, [sp, #20]
 801045a:	f7ff fe6d 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801045e:	e9cd 8500 	strd	r8, r5, [sp]
 8010462:	4603      	mov	r3, r0
 8010464:	465a      	mov	r2, fp
 8010466:	4651      	mov	r1, sl
 8010468:	4620      	mov	r0, r4
 801046a:	f7ff ff59 	bl	8010320 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 801046e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010472:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010476:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801047a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801047e:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010482:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 8010486:	6823      	ldr	r3, [r4, #0]
 8010488:	9006      	str	r0, [sp, #24]
 801048a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 801048e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8010492:	f8ad 6020 	strh.w	r6, [sp, #32]
 8010496:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 801049a:	f8cd 9014 	str.w	r9, [sp, #20]
 801049e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 80104a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80104a4:	9d02      	ldr	r5, [sp, #8]
 80104a6:	4620      	mov	r0, r4
 80104a8:	4798      	blx	r3
 80104aa:	4228      	tst	r0, r5
 80104ac:	d106      	bne.n	80104bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 80104ae:	4b07      	ldr	r3, [pc, #28]	; (80104cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 80104b0:	4a07      	ldr	r2, [pc, #28]	; (80104d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 80104b2:	4808      	ldr	r0, [pc, #32]	; (80104d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 80104b4:	f240 2137 	movw	r1, #567	; 0x237
 80104b8:	f012 fd26 	bl	8022f08 <__assert_func>
 80104bc:	6860      	ldr	r0, [r4, #4]
 80104be:	6803      	ldr	r3, [r0, #0]
 80104c0:	a902      	add	r1, sp, #8
 80104c2:	685b      	ldr	r3, [r3, #4]
 80104c4:	4798      	blx	r3
 80104c6:	b00b      	add	sp, #44	; 0x2c
 80104c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104cc:	08027835 	.word	0x08027835
 80104d0:	08027d63 	.word	0x08027d63
 80104d4:	080279af 	.word	0x080279af

080104d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80104d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80104dc:	461f      	mov	r7, r3
 80104de:	4b0b      	ldr	r3, [pc, #44]	; (801050c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80104e0:	460d      	mov	r5, r1
 80104e2:	f8b3 8000 	ldrh.w	r8, [r3]
 80104e6:	4616      	mov	r6, r2
 80104e8:	4604      	mov	r4, r0
 80104ea:	f7ff fc65 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 80104ee:	6803      	ldr	r3, [r0, #0]
 80104f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80104f2:	4798      	blx	r3
 80104f4:	463b      	mov	r3, r7
 80104f6:	e9cd 8000 	strd	r8, r0, [sp]
 80104fa:	4632      	mov	r2, r6
 80104fc:	4629      	mov	r1, r5
 80104fe:	4620      	mov	r0, r4
 8010500:	f7ff ff0e 	bl	8010320 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8010504:	b002      	add	sp, #8
 8010506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801050a:	bf00      	nop
 801050c:	20020086 	.word	0x20020086

08010510 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010514:	b088      	sub	sp, #32
 8010516:	4698      	mov	r8, r3
 8010518:	2300      	movs	r3, #0
 801051a:	9303      	str	r3, [sp, #12]
 801051c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010520:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8010524:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010528:	f8ad 6014 	strh.w	r6, [sp, #20]
 801052c:	e9cd 3100 	strd	r3, r1, [sp]
 8010530:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010534:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010538:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801053c:	f88d 301c 	strb.w	r3, [sp, #28]
 8010540:	4617      	mov	r7, r2
 8010542:	4604      	mov	r4, r0
 8010544:	f8ad 5016 	strh.w	r5, [sp, #22]
 8010548:	f7ff fdf6 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801054c:	4642      	mov	r2, r8
 801054e:	4603      	mov	r3, r0
 8010550:	4639      	mov	r1, r7
 8010552:	4620      	mov	r0, r4
 8010554:	f7ff ffc0 	bl	80104d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010558:	4b18      	ldr	r3, [pc, #96]	; (80105bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 801055a:	9004      	str	r0, [sp, #16]
 801055c:	881b      	ldrh	r3, [r3, #0]
 801055e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010562:	f7ff fc29 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 8010566:	6803      	ldr	r3, [r0, #0]
 8010568:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801056a:	4798      	blx	r3
 801056c:	f88d 001e 	strb.w	r0, [sp, #30]
 8010570:	f88d 001d 	strb.w	r0, [sp, #29]
 8010574:	b106      	cbz	r6, 8010578 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8010576:	b935      	cbnz	r5, 8010586 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8010578:	4b11      	ldr	r3, [pc, #68]	; (80105c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 801057a:	4a12      	ldr	r2, [pc, #72]	; (80105c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 801057c:	f240 11f1 	movw	r1, #497	; 0x1f1
 8010580:	4811      	ldr	r0, [pc, #68]	; (80105c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8010582:	f012 fcc1 	bl	8022f08 <__assert_func>
 8010586:	6823      	ldr	r3, [r4, #0]
 8010588:	9d00      	ldr	r5, [sp, #0]
 801058a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801058c:	4620      	mov	r0, r4
 801058e:	4798      	blx	r3
 8010590:	4228      	tst	r0, r5
 8010592:	d104      	bne.n	801059e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8010594:	4b0d      	ldr	r3, [pc, #52]	; (80105cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8010596:	4a0b      	ldr	r2, [pc, #44]	; (80105c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8010598:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 801059c:	e7f0      	b.n	8010580 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 801059e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80105a0:	9303      	str	r3, [sp, #12]
 80105a2:	6860      	ldr	r0, [r4, #4]
 80105a4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80105a8:	f88d 301f 	strb.w	r3, [sp, #31]
 80105ac:	6803      	ldr	r3, [r0, #0]
 80105ae:	4669      	mov	r1, sp
 80105b0:	685b      	ldr	r3, [r3, #4]
 80105b2:	4798      	blx	r3
 80105b4:	b008      	add	sp, #32
 80105b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105ba:	bf00      	nop
 80105bc:	20020086 	.word	0x20020086
 80105c0:	080277fd 	.word	0x080277fd
 80105c4:	08027b38 	.word	0x08027b38
 80105c8:	080279af 	.word	0x080279af
 80105cc:	08027835 	.word	0x08027835

080105d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80105d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105d2:	b08b      	sub	sp, #44	; 0x2c
 80105d4:	466b      	mov	r3, sp
 80105d6:	e883 0006 	stmia.w	r3, {r1, r2}
 80105da:	4b21      	ldr	r3, [pc, #132]	; (8010660 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 80105dc:	781b      	ldrb	r3, [r3, #0]
 80105de:	4604      	mov	r4, r0
 80105e0:	b933      	cbnz	r3, 80105f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 80105e2:	4b20      	ldr	r3, [pc, #128]	; (8010664 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 80105e4:	4a20      	ldr	r2, [pc, #128]	; (8010668 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 80105e6:	4821      	ldr	r0, [pc, #132]	; (801066c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 80105e8:	f44f 7112 	mov.w	r1, #584	; 0x248
 80105ec:	f012 fc8c 	bl	8022f08 <__assert_func>
 80105f0:	2301      	movs	r3, #1
 80105f2:	9302      	str	r3, [sp, #8]
 80105f4:	6803      	ldr	r3, [r0, #0]
 80105f6:	f8bd 6000 	ldrh.w	r6, [sp]
 80105fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80105fc:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010600:	2500      	movs	r5, #0
 8010602:	9505      	str	r5, [sp, #20]
 8010604:	4798      	blx	r3
 8010606:	463a      	mov	r2, r7
 8010608:	4631      	mov	r1, r6
 801060a:	4603      	mov	r3, r0
 801060c:	4620      	mov	r0, r4
 801060e:	f7ff ff63 	bl	80104d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010612:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010614:	9306      	str	r3, [sp, #24]
 8010616:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801061a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801061e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010622:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010626:	4b12      	ldr	r3, [pc, #72]	; (8010670 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8010628:	9003      	str	r0, [sp, #12]
 801062a:	881b      	ldrh	r3, [r3, #0]
 801062c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010630:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010634:	f7ff fbc0 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 8010638:	6803      	ldr	r3, [r0, #0]
 801063a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801063c:	4798      	blx	r3
 801063e:	23ff      	movs	r3, #255	; 0xff
 8010640:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8010644:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8010648:	6860      	ldr	r0, [r4, #4]
 801064a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801064e:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 8010652:	6803      	ldr	r3, [r0, #0]
 8010654:	a902      	add	r1, sp, #8
 8010656:	685b      	ldr	r3, [r3, #4]
 8010658:	4798      	blx	r3
 801065a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 801065c:	b00b      	add	sp, #44	; 0x2c
 801065e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010660:	2002008b 	.word	0x2002008b
 8010664:	080278fc 	.word	0x080278fc
 8010668:	08027be2 	.word	0x08027be2
 801066c:	080279af 	.word	0x080279af
 8010670:	20020086 	.word	0x20020086

08010674 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010678:	b08a      	sub	sp, #40	; 0x28
 801067a:	466d      	mov	r5, sp
 801067c:	e885 0006 	stmia.w	r5, {r1, r2}
 8010680:	461d      	mov	r5, r3
 8010682:	2301      	movs	r3, #1
 8010684:	9302      	str	r3, [sp, #8]
 8010686:	6803      	ldr	r3, [r0, #0]
 8010688:	f8bd 7000 	ldrh.w	r7, [sp]
 801068c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801068e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010692:	2600      	movs	r6, #0
 8010694:	9605      	str	r6, [sp, #20]
 8010696:	4604      	mov	r4, r0
 8010698:	4798      	blx	r3
 801069a:	4642      	mov	r2, r8
 801069c:	4639      	mov	r1, r7
 801069e:	4603      	mov	r3, r0
 80106a0:	4620      	mov	r0, r4
 80106a2:	f7ff ff19 	bl	80104d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80106a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80106aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80106ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80106b2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80106b6:	4b10      	ldr	r3, [pc, #64]	; (80106f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 80106b8:	9003      	str	r0, [sp, #12]
 80106ba:	881b      	ldrh	r3, [r3, #0]
 80106bc:	f8ad 3020 	strh.w	r3, [sp, #32]
 80106c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106c2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80106c6:	9506      	str	r5, [sp, #24]
 80106c8:	f7ff fb76 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 80106cc:	6803      	ldr	r3, [r0, #0]
 80106ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80106d0:	4798      	blx	r3
 80106d2:	23ff      	movs	r3, #255	; 0xff
 80106d4:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80106d8:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 80106dc:	6860      	ldr	r0, [r4, #4]
 80106de:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80106e2:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 80106e6:	6803      	ldr	r3, [r0, #0]
 80106e8:	a902      	add	r1, sp, #8
 80106ea:	685b      	ldr	r3, [r3, #4]
 80106ec:	4798      	blx	r3
 80106ee:	4628      	mov	r0, r5
 80106f0:	b00a      	add	sp, #40	; 0x28
 80106f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106f6:	bf00      	nop
 80106f8:	20020086 	.word	0x20020086

080106fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80106fc:	b570      	push	{r4, r5, r6, lr}
 80106fe:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8010702:	4604      	mov	r4, r0
 8010704:	b19b      	cbz	r3, 801072e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010706:	2002      	movs	r0, #2
 8010708:	f7f0 f86e 	bl	80007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801070c:	2300      	movs	r3, #0
 801070e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8010712:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8010716:	6823      	ldr	r3, [r4, #0]
 8010718:	4620      	mov	r0, r4
 801071a:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 801071e:	f7ff fd0b 	bl	8010138 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010722:	462b      	mov	r3, r5
 8010724:	4601      	mov	r1, r0
 8010726:	4620      	mov	r0, r4
 8010728:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801072c:	4718      	bx	r3
 801072e:	bd70      	pop	{r4, r5, r6, pc}

08010730 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8010730:	b570      	push	{r4, r5, r6, lr}
 8010732:	4605      	mov	r5, r0
 8010734:	460c      	mov	r4, r1
 8010736:	2003      	movs	r0, #3
 8010738:	b149      	cbz	r1, 801074e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 801073a:	f7f0 f81d 	bl	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801073e:	6928      	ldr	r0, [r5, #16]
 8010740:	b168      	cbz	r0, 801075e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8010742:	6803      	ldr	r3, [r0, #0]
 8010744:	695b      	ldr	r3, [r3, #20]
 8010746:	2101      	movs	r1, #1
 8010748:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801074c:	4718      	bx	r3
 801074e:	f7f0 f82f 	bl	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010752:	6928      	ldr	r0, [r5, #16]
 8010754:	b118      	cbz	r0, 801075e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8010756:	6803      	ldr	r3, [r0, #0]
 8010758:	4621      	mov	r1, r4
 801075a:	695b      	ldr	r3, [r3, #20]
 801075c:	e7f4      	b.n	8010748 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 801075e:	bd70      	pop	{r4, r5, r6, pc}

08010760 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010760:	4770      	bx	lr

08010762 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010762:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010766:	1a13      	subs	r3, r2, r0
 8010768:	4258      	negs	r0, r3
 801076a:	4158      	adcs	r0, r3
 801076c:	4770      	bx	lr

0801076e <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801076e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010772:	1a9b      	subs	r3, r3, r2
 8010774:	2b00      	cmp	r3, #0
 8010776:	bfdc      	itt	le
 8010778:	6882      	ldrle	r2, [r0, #8]
 801077a:	189b      	addle	r3, r3, r2
 801077c:	2b01      	cmp	r3, #1
 801077e:	bfcc      	ite	gt
 8010780:	2000      	movgt	r0, #0
 8010782:	2001      	movle	r0, #1
 8010784:	4770      	bx	lr

08010786 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010786:	6902      	ldr	r2, [r0, #16]
 8010788:	6840      	ldr	r0, [r0, #4]
 801078a:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 801078e:	4770      	bx	lr

08010790 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010790:	6803      	ldr	r3, [r0, #0]
 8010792:	691b      	ldr	r3, [r3, #16]
 8010794:	4718      	bx	r3

08010796 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010796:	4770      	bx	lr

08010798 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010798:	4770      	bx	lr

0801079a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801079a:	4770      	bx	lr

0801079c <_ZN8touchgfx13DMA_Interface7executeEv>:
 801079c:	b570      	push	{r4, r5, r6, lr}
 801079e:	2301      	movs	r3, #1
 80107a0:	7203      	strb	r3, [r0, #8]
 80107a2:	4604      	mov	r4, r0
 80107a4:	6840      	ldr	r0, [r0, #4]
 80107a6:	6803      	ldr	r3, [r0, #0]
 80107a8:	699b      	ldr	r3, [r3, #24]
 80107aa:	4798      	blx	r3
 80107ac:	6803      	ldr	r3, [r0, #0]
 80107ae:	2b40      	cmp	r3, #64	; 0x40
 80107b0:	4605      	mov	r5, r0
 80107b2:	d039      	beq.n	8010828 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80107b4:	d815      	bhi.n	80107e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 80107b6:	2b04      	cmp	r3, #4
 80107b8:	d022      	beq.n	8010800 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80107ba:	d808      	bhi.n	80107ce <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80107bc:	2b01      	cmp	r3, #1
 80107be:	d033      	beq.n	8010828 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80107c0:	2b02      	cmp	r3, #2
 80107c2:	d108      	bne.n	80107d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 80107c4:	6823      	ldr	r3, [r4, #0]
 80107c6:	4620      	mov	r0, r4
 80107c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80107ca:	4798      	blx	r3
 80107cc:	e025      	b.n	801081a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 80107ce:	2b08      	cmp	r3, #8
 80107d0:	d01e      	beq.n	8010810 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 80107d2:	2b20      	cmp	r3, #32
 80107d4:	d028      	beq.n	8010828 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80107d6:	4b17      	ldr	r3, [pc, #92]	; (8010834 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 80107d8:	4a17      	ldr	r2, [pc, #92]	; (8010838 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 80107da:	4818      	ldr	r0, [pc, #96]	; (801083c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 80107dc:	218b      	movs	r1, #139	; 0x8b
 80107de:	f012 fb93 	bl	8022f08 <__assert_func>
 80107e2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80107e6:	d01f      	beq.n	8010828 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80107e8:	d804      	bhi.n	80107f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 80107ea:	2b80      	cmp	r3, #128	; 0x80
 80107ec:	d01c      	beq.n	8010828 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80107ee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80107f2:	e7ef      	b.n	80107d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 80107f4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80107f8:	d016      	beq.n	8010828 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80107fa:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80107fe:	e7e0      	b.n	80107c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010800:	6823      	ldr	r3, [r4, #0]
 8010802:	7f01      	ldrb	r1, [r0, #28]
 8010804:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010806:	4620      	mov	r0, r4
 8010808:	4798      	blx	r3
 801080a:	6823      	ldr	r3, [r4, #0]
 801080c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801080e:	e006      	b.n	801081e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010810:	6823      	ldr	r3, [r4, #0]
 8010812:	7f01      	ldrb	r1, [r0, #28]
 8010814:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010816:	4620      	mov	r0, r4
 8010818:	4798      	blx	r3
 801081a:	6823      	ldr	r3, [r4, #0]
 801081c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801081e:	4629      	mov	r1, r5
 8010820:	4620      	mov	r0, r4
 8010822:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010826:	4718      	bx	r3
 8010828:	6823      	ldr	r3, [r4, #0]
 801082a:	4620      	mov	r0, r4
 801082c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801082e:	4798      	blx	r3
 8010830:	e7eb      	b.n	801080a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8010832:	bf00      	nop
 8010834:	08027e47 	.word	0x08027e47
 8010838:	08027f08 	.word	0x08027f08
 801083c:	08027e6c 	.word	0x08027e6c

08010840 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010840:	b570      	push	{r4, r5, r6, lr}
 8010842:	4604      	mov	r4, r0
 8010844:	460e      	mov	r6, r1
 8010846:	6860      	ldr	r0, [r4, #4]
 8010848:	6803      	ldr	r3, [r0, #0]
 801084a:	685b      	ldr	r3, [r3, #4]
 801084c:	4798      	blx	r3
 801084e:	2800      	cmp	r0, #0
 8010850:	d1f9      	bne.n	8010846 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010852:	4d0d      	ldr	r5, [pc, #52]	; (8010888 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010854:	6828      	ldr	r0, [r5, #0]
 8010856:	6803      	ldr	r3, [r0, #0]
 8010858:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801085a:	4798      	blx	r3
 801085c:	f7f0 fa5a 	bl	8000d14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010860:	6828      	ldr	r0, [r5, #0]
 8010862:	2101      	movs	r1, #1
 8010864:	f7ff ff7c 	bl	8010760 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010868:	6860      	ldr	r0, [r4, #4]
 801086a:	6803      	ldr	r3, [r0, #0]
 801086c:	4631      	mov	r1, r6
 801086e:	689b      	ldr	r3, [r3, #8]
 8010870:	4798      	blx	r3
 8010872:	6823      	ldr	r3, [r4, #0]
 8010874:	4620      	mov	r0, r4
 8010876:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010878:	4798      	blx	r3
 801087a:	6828      	ldr	r0, [r5, #0]
 801087c:	6803      	ldr	r3, [r0, #0]
 801087e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010882:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010884:	4718      	bx	r3
 8010886:	bf00      	nop
 8010888:	2002008c 	.word	0x2002008c

0801088c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 801088c:	b508      	push	{r3, lr}
 801088e:	f7f0 fa33 	bl	8000cf8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010892:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010896:	f7f0 ba37 	b.w	8000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801089a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801089a:	b510      	push	{r4, lr}
 801089c:	2114      	movs	r1, #20
 801089e:	4604      	mov	r4, r0
 80108a0:	f012 fb04 	bl	8022eac <_ZdlPvj>
 80108a4:	4620      	mov	r0, r4
 80108a6:	bd10      	pop	{r4, pc}

080108a8 <_ZN8touchgfx13DMA_Interface5startEv>:
 80108a8:	b510      	push	{r4, lr}
 80108aa:	4604      	mov	r4, r0
 80108ac:	6840      	ldr	r0, [r0, #4]
 80108ae:	6803      	ldr	r3, [r0, #0]
 80108b0:	681b      	ldr	r3, [r3, #0]
 80108b2:	4798      	blx	r3
 80108b4:	b948      	cbnz	r0, 80108ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80108b6:	7a63      	ldrb	r3, [r4, #9]
 80108b8:	b13b      	cbz	r3, 80108ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80108ba:	7a23      	ldrb	r3, [r4, #8]
 80108bc:	b92b      	cbnz	r3, 80108ca <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80108be:	6823      	ldr	r3, [r4, #0]
 80108c0:	4620      	mov	r0, r4
 80108c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80108c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108c8:	4718      	bx	r3
 80108ca:	bd10      	pop	{r4, pc}

080108cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80108cc:	b570      	push	{r4, r5, r6, lr}
 80108ce:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80108d2:	1a9b      	subs	r3, r3, r2
 80108d4:	2b00      	cmp	r3, #0
 80108d6:	4606      	mov	r6, r0
 80108d8:	bfdc      	itt	le
 80108da:	6880      	ldrle	r0, [r0, #8]
 80108dc:	181b      	addle	r3, r3, r0
 80108de:	2b01      	cmp	r3, #1
 80108e0:	dd13      	ble.n	801090a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 80108e2:	6874      	ldr	r4, [r6, #4]
 80108e4:	460d      	mov	r5, r1
 80108e6:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 80108ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80108ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108ee:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80108f2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80108f6:	68f3      	ldr	r3, [r6, #12]
 80108f8:	68b2      	ldr	r2, [r6, #8]
 80108fa:	f3bf 8f5b 	dmb	ish
 80108fe:	3301      	adds	r3, #1
 8010900:	429a      	cmp	r2, r3
 8010902:	bfd8      	it	le
 8010904:	1a9b      	suble	r3, r3, r2
 8010906:	60f3      	str	r3, [r6, #12]
 8010908:	bd70      	pop	{r4, r5, r6, pc}
 801090a:	4b03      	ldr	r3, [pc, #12]	; (8010918 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 801090c:	4a03      	ldr	r2, [pc, #12]	; (801091c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 801090e:	4804      	ldr	r0, [pc, #16]	; (8010920 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8010910:	2139      	movs	r1, #57	; 0x39
 8010912:	f012 faf9 	bl	8022f08 <__assert_func>
 8010916:	bf00      	nop
 8010918:	08027e92 	.word	0x08027e92
 801091c:	08027f38 	.word	0x08027f38
 8010920:	08027e6c 	.word	0x08027e6c

08010924 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010924:	b510      	push	{r4, lr}
 8010926:	6803      	ldr	r3, [r0, #0]
 8010928:	681b      	ldr	r3, [r3, #0]
 801092a:	4604      	mov	r4, r0
 801092c:	4798      	blx	r3
 801092e:	b128      	cbz	r0, 801093c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8010930:	4b07      	ldr	r3, [pc, #28]	; (8010950 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8010932:	4a08      	ldr	r2, [pc, #32]	; (8010954 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8010934:	4808      	ldr	r0, [pc, #32]	; (8010958 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8010936:	213f      	movs	r1, #63	; 0x3f
 8010938:	f012 fae6 	bl	8022f08 <__assert_func>
 801093c:	6923      	ldr	r3, [r4, #16]
 801093e:	68a2      	ldr	r2, [r4, #8]
 8010940:	f3bf 8f5b 	dmb	ish
 8010944:	3301      	adds	r3, #1
 8010946:	429a      	cmp	r2, r3
 8010948:	bfd8      	it	le
 801094a:	1a9b      	suble	r3, r3, r2
 801094c:	6123      	str	r3, [r4, #16]
 801094e:	bd10      	pop	{r4, pc}
 8010950:	08027eb5 	.word	0x08027eb5
 8010954:	08027f86 	.word	0x08027f86
 8010958:	08027e6c 	.word	0x08027e6c

0801095c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 801095c:	b570      	push	{r4, r5, r6, lr}
 801095e:	4604      	mov	r4, r0
 8010960:	6840      	ldr	r0, [r0, #4]
 8010962:	6803      	ldr	r3, [r0, #0]
 8010964:	681b      	ldr	r3, [r3, #0]
 8010966:	4798      	blx	r3
 8010968:	4605      	mov	r5, r0
 801096a:	b930      	cbnz	r0, 801097a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801096c:	7a23      	ldrb	r3, [r4, #8]
 801096e:	b123      	cbz	r3, 801097a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010970:	6860      	ldr	r0, [r4, #4]
 8010972:	6803      	ldr	r3, [r0, #0]
 8010974:	695b      	ldr	r3, [r3, #20]
 8010976:	4798      	blx	r3
 8010978:	7225      	strb	r5, [r4, #8]
 801097a:	6860      	ldr	r0, [r4, #4]
 801097c:	6803      	ldr	r3, [r0, #0]
 801097e:	681b      	ldr	r3, [r3, #0]
 8010980:	4798      	blx	r3
 8010982:	b928      	cbnz	r0, 8010990 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010984:	6823      	ldr	r3, [r4, #0]
 8010986:	4620      	mov	r0, r4
 8010988:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801098a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801098e:	4718      	bx	r3
 8010990:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010994:	f7f0 b9c6 	b.w	8000d24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010998 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010998:	b510      	push	{r4, lr}
 801099a:	4c04      	ldr	r4, [pc, #16]	; (80109ac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 801099c:	6082      	str	r2, [r0, #8]
 801099e:	2200      	movs	r2, #0
 80109a0:	e9c0 4100 	strd	r4, r1, [r0]
 80109a4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80109a8:	bd10      	pop	{r4, pc}
 80109aa:	bf00      	nop
 80109ac:	08027eec 	.word	0x08027eec

080109b0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80109b0:	6840      	ldr	r0, [r0, #4]
 80109b2:	6803      	ldr	r3, [r0, #0]
 80109b4:	681b      	ldr	r3, [r3, #0]
 80109b6:	4718      	bx	r3

080109b8 <_ZN8touchgfx8TextAreaD1Ev>:
 80109b8:	4770      	bx	lr
	...

080109bc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80109bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80109be:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80109c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80109c4:	4299      	cmp	r1, r3
 80109c6:	d029      	beq.n	8010a1c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 80109c8:	4b15      	ldr	r3, [pc, #84]	; (8010a20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80109ca:	681b      	ldr	r3, [r3, #0]
 80109cc:	b92b      	cbnz	r3, 80109da <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 80109ce:	4b15      	ldr	r3, [pc, #84]	; (8010a24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80109d0:	4a15      	ldr	r2, [pc, #84]	; (8010a28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80109d2:	21ae      	movs	r1, #174	; 0xae
 80109d4:	4815      	ldr	r0, [pc, #84]	; (8010a2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80109d6:	f012 fa97 	bl	8022f08 <__assert_func>
 80109da:	4a15      	ldr	r2, [pc, #84]	; (8010a30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 80109dc:	8812      	ldrh	r2, [r2, #0]
 80109de:	428a      	cmp	r2, r1
 80109e0:	d803      	bhi.n	80109ea <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 80109e2:	4b14      	ldr	r3, [pc, #80]	; (8010a34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 80109e4:	4a10      	ldr	r2, [pc, #64]	; (8010a28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80109e6:	21af      	movs	r1, #175	; 0xaf
 80109e8:	e7f4      	b.n	80109d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 80109ea:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80109ee:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80109f2:	4b11      	ldr	r3, [pc, #68]	; (8010a38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 80109f4:	7854      	ldrb	r4, [r2, #1]
 80109f6:	681b      	ldr	r3, [r3, #0]
 80109f8:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 80109fc:	682b      	ldr	r3, [r5, #0]
 80109fe:	69de      	ldr	r6, [r3, #28]
 8010a00:	4b0e      	ldr	r3, [pc, #56]	; (8010a3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8010a02:	6818      	ldr	r0, [r3, #0]
 8010a04:	f7f5 ff96 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8010a08:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8010a0c:	2300      	movs	r3, #0
 8010a0e:	4602      	mov	r2, r0
 8010a10:	9300      	str	r3, [sp, #0]
 8010a12:	4621      	mov	r1, r4
 8010a14:	4628      	mov	r0, r5
 8010a16:	47b0      	blx	r6
 8010a18:	b002      	add	sp, #8
 8010a1a:	bd70      	pop	{r4, r5, r6, pc}
 8010a1c:	2000      	movs	r0, #0
 8010a1e:	e7fb      	b.n	8010a18 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8010a20:	200200dc 	.word	0x200200dc
 8010a24:	08025a74 	.word	0x08025a74
 8010a28:	08028030 	.word	0x08028030
 8010a2c:	08025b02 	.word	0x08025b02
 8010a30:	200200e0 	.word	0x200200e0
 8010a34:	08025b2b 	.word	0x08025b2b
 8010a38:	200200e4 	.word	0x200200e4
 8010a3c:	200200e8 	.word	0x200200e8

08010a40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8010a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010a44:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010a46:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010a4a:	4293      	cmp	r3, r2
 8010a4c:	b08c      	sub	sp, #48	; 0x30
 8010a4e:	4604      	mov	r4, r0
 8010a50:	4688      	mov	r8, r1
 8010a52:	d05f      	beq.n	8010b14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8010a54:	4e31      	ldr	r6, [pc, #196]	; (8010b1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 8010a56:	6832      	ldr	r2, [r6, #0]
 8010a58:	b92a      	cbnz	r2, 8010a66 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 8010a5a:	4b31      	ldr	r3, [pc, #196]	; (8010b20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 8010a5c:	4a31      	ldr	r2, [pc, #196]	; (8010b24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8010a5e:	21ae      	movs	r1, #174	; 0xae
 8010a60:	4831      	ldr	r0, [pc, #196]	; (8010b28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 8010a62:	f012 fa51 	bl	8022f08 <__assert_func>
 8010a66:	4d31      	ldr	r5, [pc, #196]	; (8010b2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 8010a68:	8829      	ldrh	r1, [r5, #0]
 8010a6a:	4299      	cmp	r1, r3
 8010a6c:	d803      	bhi.n	8010a76 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 8010a6e:	4b30      	ldr	r3, [pc, #192]	; (8010b30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 8010a70:	4a2c      	ldr	r2, [pc, #176]	; (8010b24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8010a72:	21af      	movs	r1, #175	; 0xaf
 8010a74:	e7f4      	b.n	8010a60 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 8010a76:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8010a7a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8010a7e:	4b2d      	ldr	r3, [pc, #180]	; (8010b34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 8010a80:	681b      	ldr	r3, [r3, #0]
 8010a82:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8010a86:	2a00      	cmp	r2, #0
 8010a88:	d044      	beq.n	8010b14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8010a8a:	784b      	ldrb	r3, [r1, #1]
 8010a8c:	9207      	str	r2, [sp, #28]
 8010a8e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8010a92:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010a96:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8010a9a:	4b27      	ldr	r3, [pc, #156]	; (8010b38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8010a9c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8010aa0:	681b      	ldr	r3, [r3, #0]
 8010aa2:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8010aa6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010aaa:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8010aae:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8010ab2:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8010ab6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010ab8:	f88d a020 	strb.w	sl, [sp, #32]
 8010abc:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8010ac0:	9009      	str	r0, [sp, #36]	; 0x24
 8010ac2:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8010ac6:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8010aca:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 8010ace:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8010ad2:	b10a      	cbz	r2, 8010ad8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8010ad4:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8010ad6:	b907      	cbnz	r7, 8010ada <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8010ad8:	689f      	ldr	r7, [r3, #8]
 8010ada:	f10d 0914 	add.w	r9, sp, #20
 8010ade:	4621      	mov	r1, r4
 8010ae0:	4648      	mov	r0, r9
 8010ae2:	f003 fc3f 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010ae6:	6833      	ldr	r3, [r6, #0]
 8010ae8:	2b00      	cmp	r3, #0
 8010aea:	d0b6      	beq.n	8010a5a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8010aec:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010aee:	882b      	ldrh	r3, [r5, #0]
 8010af0:	428b      	cmp	r3, r1
 8010af2:	d9bc      	bls.n	8010a6e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8010af4:	4b11      	ldr	r3, [pc, #68]	; (8010b3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 8010af6:	6818      	ldr	r0, [r3, #0]
 8010af8:	f7f5 ff1c 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8010afc:	2300      	movs	r3, #0
 8010afe:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8010b02:	ab07      	add	r3, sp, #28
 8010b04:	9001      	str	r0, [sp, #4]
 8010b06:	9300      	str	r3, [sp, #0]
 8010b08:	e899 0006 	ldmia.w	r9, {r1, r2}
 8010b0c:	4643      	mov	r3, r8
 8010b0e:	4638      	mov	r0, r7
 8010b10:	f7f5 fec3 	bl	800689a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010b14:	b00c      	add	sp, #48	; 0x30
 8010b16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b1a:	bf00      	nop
 8010b1c:	200200dc 	.word	0x200200dc
 8010b20:	08025a74 	.word	0x08025a74
 8010b24:	08028030 	.word	0x08028030
 8010b28:	08025b02 	.word	0x08025b02
 8010b2c:	200200e0 	.word	0x200200e0
 8010b30:	08025b2b 	.word	0x08025b2b
 8010b34:	200200e4 	.word	0x200200e4
 8010b38:	2002008c 	.word	0x2002008c
 8010b3c:	200200e8 	.word	0x200200e8

08010b40 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010b40:	b40e      	push	{r1, r2, r3}
 8010b42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b46:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010b48:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010b4c:	4293      	cmp	r3, r2
 8010b4e:	b09c      	sub	sp, #112	; 0x70
 8010b50:	4604      	mov	r4, r0
 8010b52:	d06b      	beq.n	8010c2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 8010b54:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8010c40 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 8010b58:	aa26      	add	r2, sp, #152	; 0x98
 8010b5a:	9202      	str	r2, [sp, #8]
 8010b5c:	f8da 2000 	ldr.w	r2, [sl]
 8010b60:	b92a      	cbnz	r2, 8010b6e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 8010b62:	4b33      	ldr	r3, [pc, #204]	; (8010c30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 8010b64:	4a33      	ldr	r2, [pc, #204]	; (8010c34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8010b66:	21ae      	movs	r1, #174	; 0xae
 8010b68:	4833      	ldr	r0, [pc, #204]	; (8010c38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 8010b6a:	f012 f9cd 	bl	8022f08 <__assert_func>
 8010b6e:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8010c44 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 8010b72:	f8b8 1000 	ldrh.w	r1, [r8]
 8010b76:	4299      	cmp	r1, r3
 8010b78:	d803      	bhi.n	8010b82 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 8010b7a:	4b30      	ldr	r3, [pc, #192]	; (8010c3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 8010b7c:	4a2d      	ldr	r2, [pc, #180]	; (8010c34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8010b7e:	21af      	movs	r1, #175	; 0xaf
 8010b80:	e7f2      	b.n	8010b68 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 8010b82:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 8010c48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 8010b86:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8010b8a:	f8d9 3000 	ldr.w	r3, [r9]
 8010b8e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010b92:	682b      	ldr	r3, [r5, #0]
 8010b94:	4628      	mov	r0, r5
 8010b96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b98:	4798      	blx	r3
 8010b9a:	4606      	mov	r6, r0
 8010b9c:	b207      	sxth	r7, r0
 8010b9e:	a803      	add	r0, sp, #12
 8010ba0:	f004 f859 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 8010ba4:	682b      	ldr	r3, [r5, #0]
 8010ba6:	4628      	mov	r0, r5
 8010ba8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010baa:	4798      	blx	r3
 8010bac:	682b      	ldr	r3, [r5, #0]
 8010bae:	4683      	mov	fp, r0
 8010bb0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010bb2:	4628      	mov	r0, r5
 8010bb4:	4798      	blx	r3
 8010bb6:	465b      	mov	r3, fp
 8010bb8:	9000      	str	r0, [sp, #0]
 8010bba:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010bbc:	9a02      	ldr	r2, [sp, #8]
 8010bbe:	a803      	add	r0, sp, #12
 8010bc0:	f004 f8b4 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010bc4:	f8da 3000 	ldr.w	r3, [sl]
 8010bc8:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8010bcc:	2b00      	cmp	r3, #0
 8010bce:	d0c8      	beq.n	8010b62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 8010bd0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010bd2:	f8b8 0000 	ldrh.w	r0, [r8]
 8010bd6:	4290      	cmp	r0, r2
 8010bd8:	d9cf      	bls.n	8010b7a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 8010bda:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 8010bde:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8010be2:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8010be6:	786a      	ldrb	r2, [r5, #1]
 8010be8:	8925      	ldrh	r5, [r4, #8]
 8010bea:	f8d9 3000 	ldr.w	r3, [r9]
 8010bee:	eba5 050c 	sub.w	r5, r5, ip
 8010bf2:	b22d      	sxth	r5, r5
 8010bf4:	9500      	str	r5, [sp, #0]
 8010bf6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8010bfa:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010bfe:	a803      	add	r0, sp, #12
 8010c00:	f001 fe9d 	bl	801293e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8010c04:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8010c08:	18b9      	adds	r1, r7, r2
 8010c0a:	2900      	cmp	r1, #0
 8010c0c:	b203      	sxth	r3, r0
 8010c0e:	dd0b      	ble.n	8010c28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 8010c10:	3b01      	subs	r3, #1
 8010c12:	fb13 f302 	smulbb	r3, r3, r2
 8010c16:	fb16 3300 	smlabb	r3, r6, r0, r3
 8010c1a:	b21f      	sxth	r7, r3
 8010c1c:	4638      	mov	r0, r7
 8010c1e:	b01c      	add	sp, #112	; 0x70
 8010c20:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c24:	b003      	add	sp, #12
 8010c26:	4770      	bx	lr
 8010c28:	2b00      	cmp	r3, #0
 8010c2a:	dcf7      	bgt.n	8010c1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 8010c2c:	2700      	movs	r7, #0
 8010c2e:	e7f5      	b.n	8010c1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 8010c30:	08025a74 	.word	0x08025a74
 8010c34:	08028030 	.word	0x08028030
 8010c38:	08025b02 	.word	0x08025b02
 8010c3c:	08025b2b 	.word	0x08025b2b
 8010c40:	200200dc 	.word	0x200200dc
 8010c44:	200200e0 	.word	0x200200e0
 8010c48:	200200e4 	.word	0x200200e4

08010c4c <_ZN8touchgfx8TextAreaD0Ev>:
 8010c4c:	b510      	push	{r4, lr}
 8010c4e:	213c      	movs	r1, #60	; 0x3c
 8010c50:	4604      	mov	r4, r0
 8010c52:	f012 f92b 	bl	8022eac <_ZdlPvj>
 8010c56:	4620      	mov	r0, r4
 8010c58:	bd10      	pop	{r4, pc}
	...

08010c5c <_ZN8touchgfx8TextArea13getTextHeightEv>:
 8010c5c:	b570      	push	{r4, r5, r6, lr}
 8010c5e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010c60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010c64:	4299      	cmp	r1, r3
 8010c66:	4604      	mov	r4, r0
 8010c68:	d01e      	beq.n	8010ca8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 8010c6a:	6803      	ldr	r3, [r0, #0]
 8010c6c:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8010c6e:	4b0f      	ldr	r3, [pc, #60]	; (8010cac <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 8010c70:	681b      	ldr	r3, [r3, #0]
 8010c72:	b92b      	cbnz	r3, 8010c80 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 8010c74:	4b0e      	ldr	r3, [pc, #56]	; (8010cb0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 8010c76:	4a0f      	ldr	r2, [pc, #60]	; (8010cb4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8010c78:	21ae      	movs	r1, #174	; 0xae
 8010c7a:	480f      	ldr	r0, [pc, #60]	; (8010cb8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8010c7c:	f012 f944 	bl	8022f08 <__assert_func>
 8010c80:	4b0e      	ldr	r3, [pc, #56]	; (8010cbc <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 8010c82:	881b      	ldrh	r3, [r3, #0]
 8010c84:	428b      	cmp	r3, r1
 8010c86:	d803      	bhi.n	8010c90 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 8010c88:	4b0d      	ldr	r3, [pc, #52]	; (8010cc0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 8010c8a:	4a0a      	ldr	r2, [pc, #40]	; (8010cb4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8010c8c:	21af      	movs	r1, #175	; 0xaf
 8010c8e:	e7f4      	b.n	8010c7a <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 8010c90:	4b0c      	ldr	r3, [pc, #48]	; (8010cc4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 8010c92:	6818      	ldr	r0, [r3, #0]
 8010c94:	f7f5 fe4e 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8010c98:	2300      	movs	r3, #0
 8010c9a:	4601      	mov	r1, r0
 8010c9c:	46ac      	mov	ip, r5
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	461a      	mov	r2, r3
 8010ca2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ca6:	4760      	bx	ip
 8010ca8:	2000      	movs	r0, #0
 8010caa:	bd70      	pop	{r4, r5, r6, pc}
 8010cac:	200200dc 	.word	0x200200dc
 8010cb0:	08025a74 	.word	0x08025a74
 8010cb4:	08028030 	.word	0x08028030
 8010cb8:	08025b02 	.word	0x08025b02
 8010cbc:	200200e0 	.word	0x200200e0
 8010cc0:	08025b2b 	.word	0x08025b2b
 8010cc4:	200200e8 	.word	0x200200e8

08010cc8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8010cc8:	b538      	push	{r3, r4, r5, lr}
 8010cca:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010ccc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010cd0:	429a      	cmp	r2, r3
 8010cd2:	4604      	mov	r4, r0
 8010cd4:	d014      	beq.n	8010d00 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8010cd6:	6803      	ldr	r3, [r0, #0]
 8010cd8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010cda:	4798      	blx	r3
 8010cdc:	6823      	ldr	r3, [r4, #0]
 8010cde:	4605      	mov	r5, r0
 8010ce0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8010ce2:	4620      	mov	r0, r4
 8010ce4:	4798      	blx	r3
 8010ce6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010cea:	b22d      	sxth	r5, r5
 8010cec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010cf0:	4601      	mov	r1, r0
 8010cf2:	bf06      	itte	eq
 8010cf4:	4602      	moveq	r2, r0
 8010cf6:	4629      	moveq	r1, r5
 8010cf8:	462a      	movne	r2, r5
 8010cfa:	4620      	mov	r0, r4
 8010cfc:	f7f1 f9cf 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010d00:	bd38      	pop	{r3, r4, r5, pc}

08010d02 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010d02:	888a      	ldrh	r2, [r1, #4]
 8010d04:	8582      	strh	r2, [r0, #44]	; 0x2c
 8010d06:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8010d0a:	b922      	cbnz	r2, 8010d16 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 8010d0c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010d10:	b90b      	cbnz	r3, 8010d16 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 8010d12:	f7ff bfd9 	b.w	8010cc8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8010d16:	4770      	bx	lr

08010d18 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8010d18:	2300      	movs	r3, #0
 8010d1a:	8083      	strh	r3, [r0, #4]
 8010d1c:	80c3      	strh	r3, [r0, #6]
 8010d1e:	8003      	strh	r3, [r0, #0]
 8010d20:	8043      	strh	r3, [r0, #2]
 8010d22:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8010d26:	2bff      	cmp	r3, #255	; 0xff
 8010d28:	bf01      	itttt	eq
 8010d2a:	890b      	ldrheq	r3, [r1, #8]
 8010d2c:	8083      	strheq	r3, [r0, #4]
 8010d2e:	894b      	ldrheq	r3, [r1, #10]
 8010d30:	80c3      	strheq	r3, [r0, #6]
 8010d32:	4770      	bx	lr

08010d34 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8010d34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010d36:	4604      	mov	r4, r0
 8010d38:	6808      	ldr	r0, [r1, #0]
 8010d3a:	6849      	ldr	r1, [r1, #4]
 8010d3c:	466b      	mov	r3, sp
 8010d3e:	c303      	stmia	r3!, {r0, r1}
 8010d40:	6823      	ldr	r3, [r4, #0]
 8010d42:	4669      	mov	r1, sp
 8010d44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010d46:	4620      	mov	r0, r4
 8010d48:	4798      	blx	r3
 8010d4a:	4b08      	ldr	r3, [pc, #32]	; (8010d6c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010d4c:	681b      	ldr	r3, [r3, #0]
 8010d4e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010d52:	b10a      	cbz	r2, 8010d58 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8010d54:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010d56:	b900      	cbnz	r0, 8010d5a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010d58:	6898      	ldr	r0, [r3, #8]
 8010d5a:	6803      	ldr	r3, [r0, #0]
 8010d5c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8010d5e:	699d      	ldr	r5, [r3, #24]
 8010d60:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8010d64:	4669      	mov	r1, sp
 8010d66:	47a8      	blx	r5
 8010d68:	b003      	add	sp, #12
 8010d6a:	bd30      	pop	{r4, r5, pc}
 8010d6c:	2002008c 	.word	0x2002008c

08010d70 <_ZN8touchgfx3BoxD1Ev>:
 8010d70:	4770      	bx	lr

08010d72 <_ZN8touchgfx3BoxD0Ev>:
 8010d72:	b510      	push	{r4, lr}
 8010d74:	212c      	movs	r1, #44	; 0x2c
 8010d76:	4604      	mov	r4, r0
 8010d78:	f012 f898 	bl	8022eac <_ZdlPvj>
 8010d7c:	4620      	mov	r0, r4
 8010d7e:	bd10      	pop	{r4, pc}

08010d80 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8010d80:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010d84:	4770      	bx	lr

08010d86 <_ZN8touchgfx6ButtonD1Ev>:
 8010d86:	4770      	bx	lr

08010d88 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8010d88:	b570      	push	{r4, r5, r6, lr}
 8010d8a:	880b      	ldrh	r3, [r1, #0]
 8010d8c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8010d8e:	4605      	mov	r5, r0
 8010d90:	8813      	ldrh	r3, [r2, #0]
 8010d92:	f825 3f30 	strh.w	r3, [r5, #48]!
 8010d96:	4604      	mov	r4, r0
 8010d98:	4628      	mov	r0, r5
 8010d9a:	f006 f82b 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010d9e:	4606      	mov	r6, r0
 8010da0:	4628      	mov	r0, r5
 8010da2:	f006 f861 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010da6:	6823      	ldr	r3, [r4, #0]
 8010da8:	4605      	mov	r5, r0
 8010daa:	b231      	sxth	r1, r6
 8010dac:	4620      	mov	r0, r4
 8010dae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010db0:	4798      	blx	r3
 8010db2:	6823      	ldr	r3, [r4, #0]
 8010db4:	b229      	sxth	r1, r5
 8010db6:	4620      	mov	r0, r4
 8010db8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010dba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010dbe:	4718      	bx	r3

08010dc0 <_ZN8touchgfx6ButtonD0Ev>:
 8010dc0:	b510      	push	{r4, lr}
 8010dc2:	2134      	movs	r1, #52	; 0x34
 8010dc4:	4604      	mov	r4, r0
 8010dc6:	f012 f871 	bl	8022eac <_ZdlPvj>
 8010dca:	4620      	mov	r0, r4
 8010dcc:	bd10      	pop	{r4, pc}

08010dce <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8010dce:	b510      	push	{r4, lr}
 8010dd0:	4604      	mov	r4, r0
 8010dd2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010dd4:	b150      	cbz	r0, 8010dec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010dd6:	6803      	ldr	r3, [r0, #0]
 8010dd8:	68db      	ldr	r3, [r3, #12]
 8010dda:	4798      	blx	r3
 8010ddc:	b130      	cbz	r0, 8010dec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010dde:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010de0:	6803      	ldr	r3, [r0, #0]
 8010de2:	4621      	mov	r1, r4
 8010de4:	689b      	ldr	r3, [r3, #8]
 8010de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010dea:	4718      	bx	r3
 8010dec:	bd10      	pop	{r4, pc}

08010dee <_ZNK8touchgfx6Button12getSolidRectEv>:
 8010dee:	b510      	push	{r4, lr}
 8010df0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8010df4:	2bff      	cmp	r3, #255	; 0xff
 8010df6:	4604      	mov	r4, r0
 8010df8:	d006      	beq.n	8010e08 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8010dfa:	2300      	movs	r3, #0
 8010dfc:	8003      	strh	r3, [r0, #0]
 8010dfe:	8043      	strh	r3, [r0, #2]
 8010e00:	8083      	strh	r3, [r0, #4]
 8010e02:	80c3      	strh	r3, [r0, #6]
 8010e04:	4620      	mov	r0, r4
 8010e06:	bd10      	pop	{r4, pc}
 8010e08:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8010e0c:	b11b      	cbz	r3, 8010e16 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8010e0e:	3130      	adds	r1, #48	; 0x30
 8010e10:	f006 f864 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010e14:	e7f6      	b.n	8010e04 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010e16:	312e      	adds	r1, #46	; 0x2e
 8010e18:	e7fa      	b.n	8010e10 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08010e1c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8010e1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e20:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010e24:	b08a      	sub	sp, #40	; 0x28
 8010e26:	4604      	mov	r4, r0
 8010e28:	4688      	mov	r8, r1
 8010e2a:	2b00      	cmp	r3, #0
 8010e2c:	d044      	beq.n	8010eb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 8010e2e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010e30:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010e34:	a805      	add	r0, sp, #20
 8010e36:	f005 ffdd 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010e3a:	4605      	mov	r5, r0
 8010e3c:	b206      	sxth	r6, r0
 8010e3e:	a805      	add	r0, sp, #20
 8010e40:	f006 f812 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010e44:	f9b8 2000 	ldrsh.w	r2, [r8]
 8010e48:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 8010e4c:	4417      	add	r7, r2
 8010e4e:	b2bf      	uxth	r7, r7
 8010e50:	2300      	movs	r3, #0
 8010e52:	fa0f fe87 	sxth.w	lr, r7
 8010e56:	459e      	cmp	lr, r3
 8010e58:	fa0f fc80 	sxth.w	ip, r0
 8010e5c:	9306      	str	r3, [sp, #24]
 8010e5e:	dd2d      	ble.n	8010ebc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8010e60:	4296      	cmp	r6, r2
 8010e62:	dd2b      	ble.n	8010ebc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8010e64:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8010e68:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 8010e6c:	4419      	add	r1, r3
 8010e6e:	b289      	uxth	r1, r1
 8010e70:	fa0f f881 	sxth.w	r8, r1
 8010e74:	f1b8 0f00 	cmp.w	r8, #0
 8010e78:	dd20      	ble.n	8010ebc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8010e7a:	459c      	cmp	ip, r3
 8010e7c:	dd1e      	ble.n	8010ebc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8010e7e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8010e82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e86:	4576      	cmp	r6, lr
 8010e88:	bfa8      	it	ge
 8010e8a:	463d      	movge	r5, r7
 8010e8c:	45c4      	cmp	ip, r8
 8010e8e:	bfa8      	it	ge
 8010e90:	4608      	movge	r0, r1
 8010e92:	1aad      	subs	r5, r5, r2
 8010e94:	1ac0      	subs	r0, r0, r3
 8010e96:	f8ad 501c 	strh.w	r5, [sp, #28]
 8010e9a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010e9e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010ea2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010ea6:	4b1f      	ldr	r3, [pc, #124]	; (8010f24 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 8010ea8:	681b      	ldr	r3, [r3, #0]
 8010eaa:	b953      	cbnz	r3, 8010ec2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 8010eac:	4b1e      	ldr	r3, [pc, #120]	; (8010f28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 8010eae:	4a1f      	ldr	r2, [pc, #124]	; (8010f2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 8010eb0:	481f      	ldr	r0, [pc, #124]	; (8010f30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 8010eb2:	2187      	movs	r1, #135	; 0x87
 8010eb4:	f012 f828 	bl	8022f08 <__assert_func>
 8010eb8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8010eba:	e7b9      	b.n	8010e30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010ebc:	2300      	movs	r3, #0
 8010ebe:	9307      	str	r3, [sp, #28]
 8010ec0:	e7f1      	b.n	8010ea6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 8010ec2:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010ec6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010eca:	429a      	cmp	r2, r3
 8010ecc:	d026      	beq.n	8010f1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8010ece:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010ed2:	2b00      	cmp	r3, #0
 8010ed4:	dd22      	ble.n	8010f1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8010ed6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010eda:	2b00      	cmp	r3, #0
 8010edc:	dd1e      	ble.n	8010f1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8010ede:	2300      	movs	r3, #0
 8010ee0:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8010ee4:	6823      	ldr	r3, [r4, #0]
 8010ee6:	a908      	add	r1, sp, #32
 8010ee8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010eea:	4620      	mov	r0, r4
 8010eec:	4798      	blx	r3
 8010eee:	4b11      	ldr	r3, [pc, #68]	; (8010f34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 8010ef0:	681b      	ldr	r3, [r3, #0]
 8010ef2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010ef6:	b10a      	cbz	r2, 8010efc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8010ef8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010efa:	b900      	cbnz	r0, 8010efe <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 8010efc:	6898      	ldr	r0, [r3, #8]
 8010efe:	6801      	ldr	r1, [r0, #0]
 8010f00:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8010f04:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010f08:	2501      	movs	r5, #1
 8010f0a:	9502      	str	r5, [sp, #8]
 8010f0c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8010f10:	9401      	str	r4, [sp, #4]
 8010f12:	ac06      	add	r4, sp, #24
 8010f14:	9400      	str	r4, [sp, #0]
 8010f16:	688c      	ldr	r4, [r1, #8]
 8010f18:	a905      	add	r1, sp, #20
 8010f1a:	47a0      	blx	r4
 8010f1c:	b00a      	add	sp, #40	; 0x28
 8010f1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f22:	bf00      	nop
 8010f24:	20020114 	.word	0x20020114
 8010f28:	080280c4 	.word	0x080280c4
 8010f2c:	08028198 	.word	0x08028198
 8010f30:	08028100 	.word	0x08028100
 8010f34:	2002008c 	.word	0x2002008c

08010f38 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 8010f38:	4770      	bx	lr

08010f3a <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8010f3a:	b510      	push	{r4, lr}
 8010f3c:	2140      	movs	r1, #64	; 0x40
 8010f3e:	4604      	mov	r4, r0
 8010f40:	f011 ffb4 	bl	8022eac <_ZdlPvj>
 8010f44:	4620      	mov	r0, r4
 8010f46:	bd10      	pop	{r4, pc}

08010f48 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 8010f48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010f4c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010f4e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010f52:	4293      	cmp	r3, r2
 8010f54:	b08c      	sub	sp, #48	; 0x30
 8010f56:	4604      	mov	r4, r0
 8010f58:	460e      	mov	r6, r1
 8010f5a:	d05d      	beq.n	8011018 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 8010f5c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 801103c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 8010f60:	f8d8 2000 	ldr.w	r2, [r8]
 8010f64:	b92a      	cbnz	r2, 8010f72 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 8010f66:	4b2e      	ldr	r3, [pc, #184]	; (8011020 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 8010f68:	4a2e      	ldr	r2, [pc, #184]	; (8011024 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 8010f6a:	21ae      	movs	r1, #174	; 0xae
 8010f6c:	482e      	ldr	r0, [pc, #184]	; (8011028 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 8010f6e:	f011 ffcb 	bl	8022f08 <__assert_func>
 8010f72:	4f2e      	ldr	r7, [pc, #184]	; (801102c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 8010f74:	8839      	ldrh	r1, [r7, #0]
 8010f76:	4299      	cmp	r1, r3
 8010f78:	d803      	bhi.n	8010f82 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 8010f7a:	4b2d      	ldr	r3, [pc, #180]	; (8011030 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 8010f7c:	4a29      	ldr	r2, [pc, #164]	; (8011024 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 8010f7e:	21af      	movs	r1, #175	; 0xaf
 8010f80:	e7f4      	b.n	8010f6c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 8010f82:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8010f86:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8010f8a:	4b2a      	ldr	r3, [pc, #168]	; (8011034 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 8010f8c:	681b      	ldr	r3, [r3, #0]
 8010f8e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8010f92:	2a00      	cmp	r2, #0
 8010f94:	d040      	beq.n	8011018 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 8010f96:	784b      	ldrb	r3, [r1, #1]
 8010f98:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8010f9c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8010fa0:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8010fa4:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8010fa8:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 8010fac:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010fae:	9207      	str	r2, [sp, #28]
 8010fb0:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8010fb4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010fb8:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8010fbc:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8010fc0:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8010fc4:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8010fc8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010fcc:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8010fd0:	f88d a020 	strb.w	sl, [sp, #32]
 8010fd4:	9009      	str	r0, [sp, #36]	; 0x24
 8010fd6:	f7fe feef 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 8010fda:	ad05      	add	r5, sp, #20
 8010fdc:	4681      	mov	r9, r0
 8010fde:	4621      	mov	r1, r4
 8010fe0:	4628      	mov	r0, r5
 8010fe2:	f003 f9bf 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010fe6:	f8d8 3000 	ldr.w	r3, [r8]
 8010fea:	2b00      	cmp	r3, #0
 8010fec:	d0bb      	beq.n	8010f66 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 8010fee:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010ff0:	883b      	ldrh	r3, [r7, #0]
 8010ff2:	428b      	cmp	r3, r1
 8010ff4:	d9c1      	bls.n	8010f7a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 8010ff6:	4b10      	ldr	r3, [pc, #64]	; (8011038 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 8010ff8:	6818      	ldr	r0, [r3, #0]
 8010ffa:	f7f5 fc9b 	bl	8006934 <_ZNK8touchgfx5Texts7getTextEt>
 8010ffe:	2300      	movs	r3, #0
 8011000:	9303      	str	r3, [sp, #12]
 8011002:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011004:	e9cd 0301 	strd	r0, r3, [sp, #4]
 8011008:	ab07      	add	r3, sp, #28
 801100a:	9300      	str	r3, [sp, #0]
 801100c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8011010:	4633      	mov	r3, r6
 8011012:	4648      	mov	r0, r9
 8011014:	f7f5 fc41 	bl	800689a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011018:	b00c      	add	sp, #48	; 0x30
 801101a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801101e:	bf00      	nop
 8011020:	08025a74 	.word	0x08025a74
 8011024:	08028244 	.word	0x08028244
 8011028:	08025b02 	.word	0x08025b02
 801102c:	200200e0 	.word	0x200200e0
 8011030:	08025b2b 	.word	0x08025b2b
 8011034:	200200e4 	.word	0x200200e4
 8011038:	200200e8 	.word	0x200200e8
 801103c:	200200dc 	.word	0x200200dc

08011040 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8011040:	4770      	bx	lr

08011042 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8011042:	b510      	push	{r4, lr}
 8011044:	2134      	movs	r1, #52	; 0x34
 8011046:	4604      	mov	r4, r0
 8011048:	f011 ff30 	bl	8022eac <_ZdlPvj>
 801104c:	4620      	mov	r0, r4
 801104e:	bd10      	pop	{r4, pc}

08011050 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8011050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011054:	4604      	mov	r4, r0
 8011056:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011058:	8962      	ldrh	r2, [r4, #10]
 801105a:	b218      	sxth	r0, r3
 801105c:	460e      	mov	r6, r1
 801105e:	005b      	lsls	r3, r3, #1
 8011060:	8921      	ldrh	r1, [r4, #8]
 8011062:	b29b      	uxth	r3, r3
 8011064:	1ac9      	subs	r1, r1, r3
 8011066:	b08e      	sub	sp, #56	; 0x38
 8011068:	b209      	sxth	r1, r1
 801106a:	1ad3      	subs	r3, r2, r3
 801106c:	b21b      	sxth	r3, r3
 801106e:	2900      	cmp	r1, #0
 8011070:	f8ad 0000 	strh.w	r0, [sp]
 8011074:	f8ad 0002 	strh.w	r0, [sp, #2]
 8011078:	f8ad 1004 	strh.w	r1, [sp, #4]
 801107c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011080:	dd5e      	ble.n	8011140 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8011082:	2b00      	cmp	r3, #0
 8011084:	dd5c      	ble.n	8011140 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8011086:	6830      	ldr	r0, [r6, #0]
 8011088:	6871      	ldr	r1, [r6, #4]
 801108a:	ab02      	add	r3, sp, #8
 801108c:	c303      	stmia	r3!, {r0, r1}
 801108e:	4669      	mov	r1, sp
 8011090:	a802      	add	r0, sp, #8
 8011092:	f7fe f9e3 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8011096:	4620      	mov	r0, r4
 8011098:	a902      	add	r1, sp, #8
 801109a:	f7ff fe4b 	bl	8010d34 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 801109e:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 80110a0:	2800      	cmp	r0, #0
 80110a2:	d05f      	beq.n	8011164 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80110a4:	8963      	ldrh	r3, [r4, #10]
 80110a6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80110aa:	f8ad 101c 	strh.w	r1, [sp, #28]
 80110ae:	1a1f      	subs	r7, r3, r0
 80110b0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80110b4:	b202      	sxth	r2, r0
 80110b6:	2500      	movs	r5, #0
 80110b8:	b21b      	sxth	r3, r3
 80110ba:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80110be:	1a09      	subs	r1, r1, r0
 80110c0:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80110c4:	9506      	str	r5, [sp, #24]
 80110c6:	f8ad 201e 	strh.w	r2, [sp, #30]
 80110ca:	f8ad 5020 	strh.w	r5, [sp, #32]
 80110ce:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80110d2:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80110d6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80110da:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80110de:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80110e2:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 80110e6:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80110ea:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80110ee:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80110f2:	af04      	add	r7, sp, #16
 80110f4:	ab06      	add	r3, sp, #24
 80110f6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80110fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80110fe:	e887 0003 	stmia.w	r7, {r0, r1}
 8011102:	4631      	mov	r1, r6
 8011104:	4638      	mov	r0, r7
 8011106:	f7fe f9a9 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 801110a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801110e:	2b00      	cmp	r3, #0
 8011110:	dd12      	ble.n	8011138 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8011112:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011116:	2b00      	cmp	r3, #0
 8011118:	dd0e      	ble.n	8011138 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801111a:	6823      	ldr	r3, [r4, #0]
 801111c:	4639      	mov	r1, r7
 801111e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011120:	4620      	mov	r0, r4
 8011122:	4798      	blx	r3
 8011124:	f7fe fe48 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 8011128:	6803      	ldr	r3, [r0, #0]
 801112a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801112c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8011130:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011134:	4639      	mov	r1, r7
 8011136:	47c0      	blx	r8
 8011138:	3501      	adds	r5, #1
 801113a:	2d04      	cmp	r5, #4
 801113c:	d1da      	bne.n	80110f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801113e:	e011      	b.n	8011164 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8011140:	6830      	ldr	r0, [r6, #0]
 8011142:	6871      	ldr	r1, [r6, #4]
 8011144:	ab06      	add	r3, sp, #24
 8011146:	c303      	stmia	r3!, {r0, r1}
 8011148:	6823      	ldr	r3, [r4, #0]
 801114a:	a906      	add	r1, sp, #24
 801114c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801114e:	4620      	mov	r0, r4
 8011150:	4798      	blx	r3
 8011152:	f7fe fe31 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 8011156:	6803      	ldr	r3, [r0, #0]
 8011158:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801115a:	699d      	ldr	r5, [r3, #24]
 801115c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011160:	a906      	add	r1, sp, #24
 8011162:	47a8      	blx	r5
 8011164:	b00e      	add	sp, #56	; 0x38
 8011166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801116a <_ZN8touchgfx5ImageD1Ev>:
 801116a:	4770      	bx	lr

0801116c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801116c:	b570      	push	{r4, r5, r6, lr}
 801116e:	880b      	ldrh	r3, [r1, #0]
 8011170:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011172:	4604      	mov	r4, r0
 8011174:	4608      	mov	r0, r1
 8011176:	460d      	mov	r5, r1
 8011178:	f005 fe3c 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801117c:	4606      	mov	r6, r0
 801117e:	4628      	mov	r0, r5
 8011180:	f005 fe72 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011184:	6823      	ldr	r3, [r4, #0]
 8011186:	4605      	mov	r5, r0
 8011188:	b231      	sxth	r1, r6
 801118a:	4620      	mov	r0, r4
 801118c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801118e:	4798      	blx	r3
 8011190:	6823      	ldr	r3, [r4, #0]
 8011192:	b229      	sxth	r1, r5
 8011194:	4620      	mov	r0, r4
 8011196:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801119c:	4718      	bx	r3

0801119e <_ZN8touchgfx5ImageD0Ev>:
 801119e:	b510      	push	{r4, lr}
 80111a0:	212c      	movs	r1, #44	; 0x2c
 80111a2:	4604      	mov	r4, r0
 80111a4:	f011 fe82 	bl	8022eac <_ZdlPvj>
 80111a8:	4620      	mov	r0, r4
 80111aa:	bd10      	pop	{r4, pc}

080111ac <_ZNK8touchgfx5Image12getSolidRectEv>:
 80111ac:	b510      	push	{r4, lr}
 80111ae:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80111b2:	2bff      	cmp	r3, #255	; 0xff
 80111b4:	4604      	mov	r4, r0
 80111b6:	d006      	beq.n	80111c6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80111b8:	2300      	movs	r3, #0
 80111ba:	8003      	strh	r3, [r0, #0]
 80111bc:	8043      	strh	r3, [r0, #2]
 80111be:	8083      	strh	r3, [r0, #4]
 80111c0:	80c3      	strh	r3, [r0, #6]
 80111c2:	4620      	mov	r0, r4
 80111c4:	bd10      	pop	{r4, pc}
 80111c6:	3126      	adds	r1, #38	; 0x26
 80111c8:	f005 fe88 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80111cc:	e7f9      	b.n	80111c2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

080111d0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80111d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111d4:	4604      	mov	r4, r0
 80111d6:	b088      	sub	sp, #32
 80111d8:	f854 3b26 	ldr.w	r3, [r4], #38
 80111dc:	2500      	movs	r5, #0
 80111de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80111e0:	460f      	mov	r7, r1
 80111e2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80111e6:	a904      	add	r1, sp, #16
 80111e8:	4606      	mov	r6, r0
 80111ea:	4798      	blx	r3
 80111ec:	4620      	mov	r0, r4
 80111ee:	f005 fe01 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80111f2:	4680      	mov	r8, r0
 80111f4:	4620      	mov	r0, r4
 80111f6:	f005 fe37 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80111fa:	9506      	str	r5, [sp, #24]
 80111fc:	ad06      	add	r5, sp, #24
 80111fe:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011202:	4639      	mov	r1, r7
 8011204:	4628      	mov	r0, r5
 8011206:	f8ad 801c 	strh.w	r8, [sp, #28]
 801120a:	f7fe f927 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 801120e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011212:	2b00      	cmp	r3, #0
 8011214:	dd19      	ble.n	801124a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011216:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801121a:	2b00      	cmp	r3, #0
 801121c:	dd15      	ble.n	801124a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801121e:	4b0c      	ldr	r3, [pc, #48]	; (8011250 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011220:	681b      	ldr	r3, [r3, #0]
 8011222:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011226:	b10a      	cbz	r2, 801122c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8011228:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801122a:	b900      	cbnz	r0, 801122e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 801122c:	6898      	ldr	r0, [r3, #8]
 801122e:	6801      	ldr	r1, [r0, #0]
 8011230:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011234:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011238:	2701      	movs	r7, #1
 801123a:	9702      	str	r7, [sp, #8]
 801123c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8011240:	e9cd 5600 	strd	r5, r6, [sp]
 8011244:	688d      	ldr	r5, [r1, #8]
 8011246:	4621      	mov	r1, r4
 8011248:	47a8      	blx	r5
 801124a:	b008      	add	sp, #32
 801124c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011250:	2002008c 	.word	0x2002008c

08011254 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8011254:	b510      	push	{r4, lr}
 8011256:	6803      	ldr	r3, [r0, #0]
 8011258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801125a:	460c      	mov	r4, r1
 801125c:	4798      	blx	r3
 801125e:	1b03      	subs	r3, r0, r4
 8011260:	4258      	negs	r0, r3
 8011262:	4158      	adcs	r0, r3
 8011264:	bd10      	pop	{r4, pc}
	...

08011268 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8011268:	4b01      	ldr	r3, [pc, #4]	; (8011270 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801126a:	6019      	str	r1, [r3, #0]
 801126c:	4770      	bx	lr
 801126e:	bf00      	nop
 8011270:	20020094 	.word	0x20020094

08011274 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8011274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011278:	4696      	mov	lr, r2
 801127a:	4605      	mov	r5, r0
 801127c:	4614      	mov	r4, r2
 801127e:	460e      	mov	r6, r1
 8011280:	461f      	mov	r7, r3
 8011282:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011286:	b097      	sub	sp, #92	; 0x5c
 8011288:	f10d 0c1c 	add.w	ip, sp, #28
 801128c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011290:	f8de 3000 	ldr.w	r3, [lr]
 8011294:	f8cc 3000 	str.w	r3, [ip]
 8011298:	f104 0e14 	add.w	lr, r4, #20
 801129c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80112a0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80112a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80112a8:	f8de 3000 	ldr.w	r3, [lr]
 80112ac:	f8cc 3000 	str.w	r3, [ip]
 80112b0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80112b4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80112b8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80112bc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80112c0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80112c4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80112c8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80112cc:	f8de 3000 	ldr.w	r3, [lr]
 80112d0:	f8cc 3000 	str.w	r3, [ip]
 80112d4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80112d6:	682b      	ldr	r3, [r5, #0]
 80112d8:	9201      	str	r2, [sp, #4]
 80112da:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80112de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80112e0:	9200      	str	r2, [sp, #0]
 80112e2:	f8cd 8008 	str.w	r8, [sp, #8]
 80112e6:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 80112ea:	aa07      	add	r2, sp, #28
 80112ec:	463b      	mov	r3, r7
 80112ee:	4631      	mov	r1, r6
 80112f0:	4628      	mov	r0, r5
 80112f2:	47d8      	blx	fp
 80112f4:	46a6      	mov	lr, r4
 80112f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80112fa:	f10d 0c1c 	add.w	ip, sp, #28
 80112fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011302:	f8de 3000 	ldr.w	r3, [lr]
 8011306:	f8cc 3000 	str.w	r3, [ip]
 801130a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801130e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011312:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011316:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801131a:	343c      	adds	r4, #60	; 0x3c
 801131c:	f8de 3000 	ldr.w	r3, [lr]
 8011320:	f8cc 3000 	str.w	r3, [ip]
 8011324:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011326:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801132a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801132e:	6823      	ldr	r3, [r4, #0]
 8011330:	f8cc 3000 	str.w	r3, [ip]
 8011334:	682b      	ldr	r3, [r5, #0]
 8011336:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801133a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801133c:	9201      	str	r2, [sp, #4]
 801133e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8011340:	9200      	str	r2, [sp, #0]
 8011342:	f8cd 8008 	str.w	r8, [sp, #8]
 8011346:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 8011348:	aa07      	add	r2, sp, #28
 801134a:	463b      	mov	r3, r7
 801134c:	4631      	mov	r1, r6
 801134e:	4628      	mov	r0, r5
 8011350:	47a0      	blx	r4
 8011352:	b017      	add	sp, #92	; 0x5c
 8011354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011358 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8011358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801135c:	b08d      	sub	sp, #52	; 0x34
 801135e:	4688      	mov	r8, r1
 8011360:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011362:	f8d3 c000 	ldr.w	ip, [r3]
 8011366:	680f      	ldr	r7, [r1, #0]
 8011368:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 801136c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8011370:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8011374:	edd3 6a07 	vldr	s13, [r3, #28]
 8011378:	9918      	ldr	r1, [sp, #96]	; 0x60
 801137a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 801137e:	f9b1 9000 	ldrsh.w	r9, [r1]
 8011382:	f9ba 1000 	ldrsh.w	r1, [sl]
 8011386:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801138a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 801138e:	eba7 070c 	sub.w	r7, r7, ip
 8011392:	42bc      	cmp	r4, r7
 8011394:	bfa8      	it	ge
 8011396:	463c      	movge	r4, r7
 8011398:	ee07 4a90 	vmov	s15, r4
 801139c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80113a0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80113a4:	ee25 4a04 	vmul.f32	s8, s10, s8
 80113a8:	ee65 4a24 	vmul.f32	s9, s10, s9
 80113ac:	ee25 5a27 	vmul.f32	s10, s10, s15
 80113b0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80113b4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80113b8:	eb09 0e0c 	add.w	lr, r9, ip
 80113bc:	4571      	cmp	r1, lr
 80113be:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80113c2:	ee32 1a05 	vadd.f32	s2, s4, s10
 80113c6:	ee36 0a84 	vadd.f32	s0, s13, s8
 80113ca:	ee61 1a87 	vmul.f32	s3, s3, s14
 80113ce:	ee22 2a07 	vmul.f32	s4, s4, s14
 80113d2:	f340 808d 	ble.w	80114f0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80113d6:	eba1 060e 	sub.w	r6, r1, lr
 80113da:	fb96 f5f4 	sdiv	r5, r6, r4
 80113de:	ee07 5a10 	vmov	s14, r5
 80113e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113e6:	2d00      	cmp	r5, #0
 80113e8:	fb04 6615 	mls	r6, r4, r5, r6
 80113ec:	eea7 0a04 	vfma.f32	s0, s14, s8
 80113f0:	eee7 0a24 	vfma.f32	s1, s14, s9
 80113f4:	eea7 1a05 	vfma.f32	s2, s14, s10
 80113f8:	dd13      	ble.n	8011422 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80113fa:	ee70 6a44 	vsub.f32	s13, s0, s8
 80113fe:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8011402:	eef5 6a40 	vcmp.f32	s13, #0.0
 8011406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801140a:	bf18      	it	ne
 801140c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8011410:	ee31 2a45 	vsub.f32	s4, s2, s10
 8011414:	bf08      	it	eq
 8011416:	eeb0 7a67 	vmoveq.f32	s14, s15
 801141a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801141e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8011422:	fb05 f204 	mul.w	r2, r5, r4
 8011426:	1abf      	subs	r7, r7, r2
 8011428:	4494      	add	ip, r2
 801142a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801142e:	4411      	add	r1, r2
 8011430:	eb09 020c 	add.w	r2, r9, ip
 8011434:	443a      	add	r2, r7
 8011436:	b209      	sxth	r1, r1
 8011438:	428a      	cmp	r2, r1
 801143a:	bfc4      	itt	gt
 801143c:	eba1 0209 	subgt.w	r2, r1, r9
 8011440:	eba2 070c 	subgt.w	r7, r2, ip
 8011444:	2f00      	cmp	r7, #0
 8011446:	dd50      	ble.n	80114ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8011448:	fb97 f1f4 	sdiv	r1, r7, r4
 801144c:	fb04 7211 	mls	r2, r4, r1, r7
 8011450:	b90a      	cbnz	r2, 8011456 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8011452:	3901      	subs	r1, #1
 8011454:	4622      	mov	r2, r4
 8011456:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801145a:	6840      	ldr	r0, [r0, #4]
 801145c:	900b      	str	r0, [sp, #44]	; 0x2c
 801145e:	f8d0 a000 	ldr.w	sl, [r0]
 8011462:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8011464:	9008      	str	r0, [sp, #32]
 8011466:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801146a:	9818      	ldr	r0, [sp, #96]	; 0x60
 801146c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8011470:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8011474:	695b      	ldr	r3, [r3, #20]
 8011476:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011478:	445b      	add	r3, fp
 801147a:	eef0 6a42 	vmov.f32	s13, s4
 801147e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8011482:	ee21 3a23 	vmul.f32	s6, s2, s7
 8011486:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801148a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801148e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8011492:	9307      	str	r3, [sp, #28]
 8011494:	ee17 7a90 	vmov	r7, s15
 8011498:	ee73 7a42 	vsub.f32	s15, s6, s4
 801149c:	eeb0 7a61 	vmov.f32	s14, s3
 80114a0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80114a4:	ee16 3a90 	vmov	r3, s13
 80114a8:	fb97 f7f4 	sdiv	r7, r7, r4
 80114ac:	ee17 ca90 	vmov	ip, s15
 80114b0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80114b4:	fb9c fcf4 	sdiv	ip, ip, r4
 80114b8:	fb0c 3306 	mla	r3, ip, r6, r3
 80114bc:	9302      	str	r3, [sp, #8]
 80114be:	ee17 3a10 	vmov	r3, s14
 80114c2:	44b6      	add	lr, r6
 80114c4:	fb04 e505 	mla	r5, r4, r5, lr
 80114c8:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80114cc:	fb07 3706 	mla	r7, r7, r6, r3
 80114d0:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80114d4:	e9cd 4700 	strd	r4, r7, [sp]
 80114d8:	2900      	cmp	r1, #0
 80114da:	bfcc      	ite	gt
 80114dc:	46a1      	movgt	r9, r4
 80114de:	4691      	movle	r9, r2
 80114e0:	eba9 0306 	sub.w	r3, r9, r6
 80114e4:	f8da 4008 	ldr.w	r4, [sl, #8]
 80114e8:	47a0      	blx	r4
 80114ea:	b00d      	add	sp, #52	; 0x34
 80114ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114f0:	2500      	movs	r5, #0
 80114f2:	462e      	mov	r6, r5
 80114f4:	e799      	b.n	801142a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080114f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80114f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114fc:	b0db      	sub	sp, #364	; 0x16c
 80114fe:	461d      	mov	r5, r3
 8011500:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8011504:	930a      	str	r3, [sp, #40]	; 0x28
 8011506:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801150a:	930b      	str	r3, [sp, #44]	; 0x2c
 801150c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8011510:	9310      	str	r3, [sp, #64]	; 0x40
 8011512:	6803      	ldr	r3, [r0, #0]
 8011514:	910f      	str	r1, [sp, #60]	; 0x3c
 8011516:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 8011518:	9009      	str	r0, [sp, #36]	; 0x24
 801151a:	4614      	mov	r4, r2
 801151c:	4629      	mov	r1, r5
 801151e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8011522:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8011526:	47b8      	blx	r7
 8011528:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801152a:	6058      	str	r0, [r3, #4]
 801152c:	2800      	cmp	r0, #0
 801152e:	f000 83a1 	beq.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011532:	682b      	ldr	r3, [r5, #0]
 8011534:	9314      	str	r3, [sp, #80]	; 0x50
 8011536:	686b      	ldr	r3, [r5, #4]
 8011538:	9315      	str	r3, [sp, #84]	; 0x54
 801153a:	4bc4      	ldr	r3, [pc, #784]	; (801184c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 801153c:	ed94 7a02 	vldr	s14, [r4, #8]
 8011540:	7819      	ldrb	r1, [r3, #0]
 8011542:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8011546:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801154a:	2900      	cmp	r1, #0
 801154c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011550:	bf16      	itet	ne
 8011552:	4619      	movne	r1, r3
 8011554:	4611      	moveq	r1, r2
 8011556:	4613      	movne	r3, r2
 8011558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801155c:	9116      	str	r1, [sp, #88]	; 0x58
 801155e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8011562:	f240 8387 	bls.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011566:	ed94 7a07 	vldr	s14, [r4, #28]
 801156a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801156e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011572:	f240 837f 	bls.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011576:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801157a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801157e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011582:	f240 8377 	bls.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011586:	6822      	ldr	r2, [r4, #0]
 8011588:	4bb1      	ldr	r3, [pc, #708]	; (8011850 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801158a:	429a      	cmp	r2, r3
 801158c:	f2c0 8372 	blt.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011590:	49b0      	ldr	r1, [pc, #704]	; (8011854 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8011592:	6963      	ldr	r3, [r4, #20]
 8011594:	428a      	cmp	r2, r1
 8011596:	f300 836d 	bgt.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801159a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801159e:	48ae      	ldr	r0, [pc, #696]	; (8011858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80115a0:	33ff      	adds	r3, #255	; 0xff
 80115a2:	4283      	cmp	r3, r0
 80115a4:	f200 8366 	bhi.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80115a8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80115aa:	4dac      	ldr	r5, [pc, #688]	; (801185c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80115ac:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80115b0:	33ff      	adds	r3, #255	; 0xff
 80115b2:	42ab      	cmp	r3, r5
 80115b4:	f200 835e 	bhi.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80115b8:	6862      	ldr	r2, [r4, #4]
 80115ba:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80115be:	33ff      	adds	r3, #255	; 0xff
 80115c0:	4283      	cmp	r3, r0
 80115c2:	f200 8357 	bhi.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80115c6:	69a1      	ldr	r1, [r4, #24]
 80115c8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80115cc:	33ff      	adds	r3, #255	; 0xff
 80115ce:	4283      	cmp	r3, r0
 80115d0:	f200 8350 	bhi.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80115d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80115d6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80115da:	30ff      	adds	r0, #255	; 0xff
 80115dc:	42a8      	cmp	r0, r5
 80115de:	f200 8349 	bhi.w	8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80115e2:	428a      	cmp	r2, r1
 80115e4:	f280 8110 	bge.w	8011808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80115e8:	429a      	cmp	r2, r3
 80115ea:	f300 8119 	bgt.w	8011820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80115ee:	4299      	cmp	r1, r3
 80115f0:	f280 811d 	bge.w	801182e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80115f4:	2502      	movs	r5, #2
 80115f6:	2701      	movs	r7, #1
 80115f8:	46a9      	mov	r9, r5
 80115fa:	46b8      	mov	r8, r7
 80115fc:	f04f 0a00 	mov.w	sl, #0
 8011600:	4621      	mov	r1, r4
 8011602:	a849      	add	r0, sp, #292	; 0x124
 8011604:	f004 fd9e 	bl	8016144 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8011608:	4622      	mov	r2, r4
 801160a:	4653      	mov	r3, sl
 801160c:	a949      	add	r1, sp, #292	; 0x124
 801160e:	f8cd 9000 	str.w	r9, [sp]
 8011612:	a819      	add	r0, sp, #100	; 0x64
 8011614:	f004 fec6 	bl	80163a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011618:	4622      	mov	r2, r4
 801161a:	4653      	mov	r3, sl
 801161c:	a949      	add	r1, sp, #292	; 0x124
 801161e:	f8cd 8000 	str.w	r8, [sp]
 8011622:	a829      	add	r0, sp, #164	; 0xa4
 8011624:	f004 febe 	bl	80163a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011628:	4643      	mov	r3, r8
 801162a:	4622      	mov	r2, r4
 801162c:	a949      	add	r1, sp, #292	; 0x124
 801162e:	f8cd 9000 	str.w	r9, [sp]
 8011632:	a839      	add	r0, sp, #228	; 0xe4
 8011634:	f004 feb6 	bl	80163a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011638:	42af      	cmp	r7, r5
 801163a:	bfb5      	itete	lt
 801163c:	2300      	movlt	r3, #0
 801163e:	2301      	movge	r3, #1
 8011640:	930e      	strlt	r3, [sp, #56]	; 0x38
 8011642:	930e      	strge	r3, [sp, #56]	; 0x38
 8011644:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011646:	e893 0003 	ldmia.w	r3, {r0, r1}
 801164a:	af12      	add	r7, sp, #72	; 0x48
 801164c:	bfb9      	ittee	lt
 801164e:	ad29      	addlt	r5, sp, #164	; 0xa4
 8011650:	ac19      	addlt	r4, sp, #100	; 0x64
 8011652:	ad19      	addge	r5, sp, #100	; 0x64
 8011654:	ac29      	addge	r4, sp, #164	; 0xa4
 8011656:	e887 0003 	stmia.w	r7, {r0, r1}
 801165a:	b928      	cbnz	r0, 8011668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801165c:	4b80      	ldr	r3, [pc, #512]	; (8011860 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801165e:	6818      	ldr	r0, [r3, #0]
 8011660:	6803      	ldr	r3, [r0, #0]
 8011662:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011664:	4798      	blx	r3
 8011666:	6038      	str	r0, [r7, #0]
 8011668:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801166a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801166e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8011672:	930c      	str	r3, [sp, #48]	; 0x30
 8011674:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011676:	6963      	ldr	r3, [r4, #20]
 8011678:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801167a:	440b      	add	r3, r1
 801167c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011680:	4408      	add	r0, r1
 8011682:	b200      	sxth	r0, r0
 8011684:	4283      	cmp	r3, r0
 8011686:	900d      	str	r0, [sp, #52]	; 0x34
 8011688:	f280 80dd 	bge.w	8011846 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801168c:	428b      	cmp	r3, r1
 801168e:	da08      	bge.n	80116a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011690:	2a00      	cmp	r2, #0
 8011692:	dd06      	ble.n	80116a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011694:	1acb      	subs	r3, r1, r3
 8011696:	429a      	cmp	r2, r3
 8011698:	f2c0 80e4 	blt.w	8011864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801169c:	2b00      	cmp	r3, #0
 801169e:	f300 80e2 	bgt.w	8011866 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80116a2:	6967      	ldr	r7, [r4, #20]
 80116a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80116a6:	443b      	add	r3, r7
 80116a8:	461f      	mov	r7, r3
 80116aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80116ac:	1bdf      	subs	r7, r3, r7
 80116ae:	4297      	cmp	r7, r2
 80116b0:	bfa8      	it	ge
 80116b2:	4617      	movge	r7, r2
 80116b4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80116b8:	2f00      	cmp	r7, #0
 80116ba:	f340 8166 	ble.w	801198a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80116be:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80116c0:	6829      	ldr	r1, [r5, #0]
 80116c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80116c6:	f9bb 3000 	ldrsh.w	r3, [fp]
 80116ca:	6820      	ldr	r0, [r4, #0]
 80116cc:	4411      	add	r1, r2
 80116ce:	4299      	cmp	r1, r3
 80116d0:	dd1a      	ble.n	8011708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80116d2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80116d6:	440b      	add	r3, r1
 80116d8:	4402      	add	r2, r0
 80116da:	b21b      	sxth	r3, r3
 80116dc:	429a      	cmp	r2, r3
 80116de:	dc13      	bgt.n	8011708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80116e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80116e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80116e4:	681b      	ldr	r3, [r3, #0]
 80116e6:	9206      	str	r2, [sp, #24]
 80116e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80116ea:	9205      	str	r2, [sp, #20]
 80116ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80116ee:	9500      	str	r5, [sp, #0]
 80116f0:	e9cd b203 	strd	fp, r2, [sp, #12]
 80116f4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80116f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80116f8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80116fc:	a912      	add	r1, sp, #72	; 0x48
 80116fe:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8011702:	aa49      	add	r2, sp, #292	; 0x124
 8011704:	4623      	mov	r3, r4
 8011706:	47c8      	blx	r9
 8011708:	e9d4 2300 	ldrd	r2, r3, [r4]
 801170c:	441a      	add	r2, r3
 801170e:	6963      	ldr	r3, [r4, #20]
 8011710:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8011714:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8011718:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801171c:	68a1      	ldr	r1, [r4, #8]
 801171e:	ed94 6a08 	vldr	s12, [r4, #32]
 8011722:	6022      	str	r2, [r4, #0]
 8011724:	3301      	adds	r3, #1
 8011726:	6163      	str	r3, [r4, #20]
 8011728:	69a3      	ldr	r3, [r4, #24]
 801172a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801172e:	3b01      	subs	r3, #1
 8011730:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8011734:	61a3      	str	r3, [r4, #24]
 8011736:	6923      	ldr	r3, [r4, #16]
 8011738:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801173c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011740:	edd4 6a07 	vldr	s13, [r4, #28]
 8011744:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8011748:	440b      	add	r3, r1
 801174a:	68e1      	ldr	r1, [r4, #12]
 801174c:	6123      	str	r3, [r4, #16]
 801174e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011752:	428b      	cmp	r3, r1
 8011754:	edc4 6a07 	vstr	s13, [r4, #28]
 8011758:	db15      	blt.n	8011786 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801175a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801175e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011762:	3201      	adds	r2, #1
 8011764:	edc4 6a07 	vstr	s13, [r4, #28]
 8011768:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801176c:	6022      	str	r2, [r4, #0]
 801176e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011772:	1a5b      	subs	r3, r3, r1
 8011774:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011778:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801177c:	6123      	str	r3, [r4, #16]
 801177e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011782:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8011786:	e9d5 2300 	ldrd	r2, r3, [r5]
 801178a:	441a      	add	r2, r3
 801178c:	696b      	ldr	r3, [r5, #20]
 801178e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8011792:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8011796:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801179a:	68a9      	ldr	r1, [r5, #8]
 801179c:	ed95 6a08 	vldr	s12, [r5, #32]
 80117a0:	602a      	str	r2, [r5, #0]
 80117a2:	3301      	adds	r3, #1
 80117a4:	616b      	str	r3, [r5, #20]
 80117a6:	69ab      	ldr	r3, [r5, #24]
 80117a8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80117ac:	3b01      	subs	r3, #1
 80117ae:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80117b2:	61ab      	str	r3, [r5, #24]
 80117b4:	692b      	ldr	r3, [r5, #16]
 80117b6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80117ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80117be:	edd5 6a07 	vldr	s13, [r5, #28]
 80117c2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80117c6:	440b      	add	r3, r1
 80117c8:	68e9      	ldr	r1, [r5, #12]
 80117ca:	612b      	str	r3, [r5, #16]
 80117cc:	ee76 6a86 	vadd.f32	s13, s13, s12
 80117d0:	428b      	cmp	r3, r1
 80117d2:	edc5 6a07 	vstr	s13, [r5, #28]
 80117d6:	db15      	blt.n	8011804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80117d8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80117dc:	ee76 6a26 	vadd.f32	s13, s12, s13
 80117e0:	3201      	adds	r2, #1
 80117e2:	edc5 6a07 	vstr	s13, [r5, #28]
 80117e6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80117ea:	602a      	str	r2, [r5, #0]
 80117ec:	ee36 7a87 	vadd.f32	s14, s13, s14
 80117f0:	1a5b      	subs	r3, r3, r1
 80117f2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80117f6:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80117fa:	612b      	str	r3, [r5, #16]
 80117fc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011800:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8011804:	3f01      	subs	r7, #1
 8011806:	e757      	b.n	80116b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8011808:	4299      	cmp	r1, r3
 801180a:	dc13      	bgt.n	8011834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801180c:	429a      	cmp	r2, r3
 801180e:	da14      	bge.n	801183a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8011810:	2502      	movs	r5, #2
 8011812:	2703      	movs	r7, #3
 8011814:	46a9      	mov	r9, r5
 8011816:	f04f 0800 	mov.w	r8, #0
 801181a:	f04f 0a01 	mov.w	sl, #1
 801181e:	e6ef      	b.n	8011600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011820:	2501      	movs	r5, #1
 8011822:	2700      	movs	r7, #0
 8011824:	46a9      	mov	r9, r5
 8011826:	46b8      	mov	r8, r7
 8011828:	f04f 0a02 	mov.w	sl, #2
 801182c:	e6e8      	b.n	8011600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801182e:	2501      	movs	r5, #1
 8011830:	2702      	movs	r7, #2
 8011832:	e6e1      	b.n	80115f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8011834:	2500      	movs	r5, #0
 8011836:	2701      	movs	r7, #1
 8011838:	e7f4      	b.n	8011824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801183a:	2702      	movs	r7, #2
 801183c:	2503      	movs	r5, #3
 801183e:	f04f 0900 	mov.w	r9, #0
 8011842:	46b8      	mov	r8, r7
 8011844:	e7e9      	b.n	801181a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8011846:	4613      	mov	r3, r2
 8011848:	e728      	b.n	801169c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801184a:	bf00      	nop
 801184c:	20020084 	.word	0x20020084
 8011850:	fffd8f01 	.word	0xfffd8f01
 8011854:	00027100 	.word	0x00027100
 8011858:	0004e1ff 	.word	0x0004e1ff
 801185c:	0004e1fe 	.word	0x0004e1fe
 8011860:	2002008c 	.word	0x2002008c
 8011864:	4613      	mov	r3, r2
 8011866:	992b      	ldr	r1, [sp, #172]	; 0xac
 8011868:	9111      	str	r1, [sp, #68]	; 0x44
 801186a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801186e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8011872:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8011874:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8011878:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801187c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8011880:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8011884:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8011888:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801188c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8011890:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8011894:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8011898:	469e      	mov	lr, r3
 801189a:	469c      	mov	ip, r3
 801189c:	f04f 0900 	mov.w	r9, #0
 80118a0:	f1bc 0f00 	cmp.w	ip, #0
 80118a4:	d147      	bne.n	8011936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80118a6:	eb03 0c07 	add.w	ip, r3, r7
 80118aa:	1ad7      	subs	r7, r2, r3
 80118ac:	f1b9 0f00 	cmp.w	r9, #0
 80118b0:	d009      	beq.n	80118c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80118b2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80118b6:	9029      	str	r0, [sp, #164]	; 0xa4
 80118b8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80118bc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80118c0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80118c4:	912d      	str	r1, [sp, #180]	; 0xb4
 80118c6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80118c8:	9111      	str	r1, [sp, #68]	; 0x44
 80118ca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80118ce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80118d2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80118d6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80118da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80118de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80118e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80118e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80118ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80118ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80118f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80118f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80118fa:	f04f 0800 	mov.w	r8, #0
 80118fe:	f1be 0f00 	cmp.w	lr, #0
 8011902:	d031      	beq.n	8011968 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8011904:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8011906:	4431      	add	r1, r6
 8011908:	4549      	cmp	r1, r9
 801190a:	4450      	add	r0, sl
 801190c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011910:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011914:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8011918:	db08      	blt.n	801192c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801191a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801191e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011922:	ee37 7a06 	vadd.f32	s14, s14, s12
 8011926:	3001      	adds	r0, #1
 8011928:	eba1 0109 	sub.w	r1, r1, r9
 801192c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011930:	f04f 0801 	mov.w	r8, #1
 8011934:	e7e3      	b.n	80118fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8011936:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8011938:	4431      	add	r1, r6
 801193a:	4541      	cmp	r1, r8
 801193c:	4450      	add	r0, sl
 801193e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011942:	ee77 7a84 	vadd.f32	s15, s15, s8
 8011946:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801194a:	db08      	blt.n	801195e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801194c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011950:	ee37 7a25 	vadd.f32	s14, s14, s11
 8011954:	ee77 7a86 	vadd.f32	s15, s15, s12
 8011958:	3001      	adds	r0, #1
 801195a:	eba1 0108 	sub.w	r1, r1, r8
 801195e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011962:	f04f 0901 	mov.w	r9, #1
 8011966:	e79b      	b.n	80118a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8011968:	449c      	add	ip, r3
 801196a:	1aff      	subs	r7, r7, r3
 801196c:	f1b8 0f00 	cmp.w	r8, #0
 8011970:	d009      	beq.n	8011986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8011972:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8011976:	9019      	str	r0, [sp, #100]	; 0x64
 8011978:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801197c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8011980:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8011984:	911d      	str	r1, [sp, #116]	; 0x74
 8011986:	1ad2      	subs	r2, r2, r3
 8011988:	e68b      	b.n	80116a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801198a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801198c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801198e:	2b00      	cmp	r3, #0
 8011990:	f000 80d1 	beq.w	8011b36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8011994:	ad19      	add	r5, sp, #100	; 0x64
 8011996:	ac39      	add	r4, sp, #228	; 0xe4
 8011998:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801199a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801199e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80119a2:	930c      	str	r3, [sp, #48]	; 0x30
 80119a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80119a6:	6963      	ldr	r3, [r4, #20]
 80119a8:	440b      	add	r3, r1
 80119aa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80119ae:	4408      	add	r0, r1
 80119b0:	b200      	sxth	r0, r0
 80119b2:	4283      	cmp	r3, r0
 80119b4:	900d      	str	r0, [sp, #52]	; 0x34
 80119b6:	f280 80c1 	bge.w	8011b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80119ba:	428b      	cmp	r3, r1
 80119bc:	da08      	bge.n	80119d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80119be:	2a00      	cmp	r2, #0
 80119c0:	dd06      	ble.n	80119d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80119c2:	1acb      	subs	r3, r1, r3
 80119c4:	429a      	cmp	r2, r3
 80119c6:	f2c0 80bb 	blt.w	8011b40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80119ca:	2b00      	cmp	r3, #0
 80119cc:	f300 80b9 	bgt.w	8011b42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80119d0:	6967      	ldr	r7, [r4, #20]
 80119d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80119d4:	443b      	add	r3, r7
 80119d6:	461f      	mov	r7, r3
 80119d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80119da:	1bdf      	subs	r7, r3, r7
 80119dc:	4297      	cmp	r7, r2
 80119de:	bfa8      	it	ge
 80119e0:	4617      	movge	r7, r2
 80119e2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80119e6:	2f00      	cmp	r7, #0
 80119e8:	f340 813c 	ble.w	8011c64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80119ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80119ee:	6829      	ldr	r1, [r5, #0]
 80119f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80119f4:	f9bb 3000 	ldrsh.w	r3, [fp]
 80119f8:	6820      	ldr	r0, [r4, #0]
 80119fa:	4411      	add	r1, r2
 80119fc:	4299      	cmp	r1, r3
 80119fe:	dd1a      	ble.n	8011a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011a00:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8011a04:	440b      	add	r3, r1
 8011a06:	4402      	add	r2, r0
 8011a08:	b21b      	sxth	r3, r3
 8011a0a:	429a      	cmp	r2, r3
 8011a0c:	dc13      	bgt.n	8011a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011a0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011a10:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011a12:	681b      	ldr	r3, [r3, #0]
 8011a14:	9206      	str	r2, [sp, #24]
 8011a16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011a18:	9205      	str	r2, [sp, #20]
 8011a1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011a1c:	9500      	str	r5, [sp, #0]
 8011a1e:	e9cd b203 	strd	fp, r2, [sp, #12]
 8011a22:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8011a24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011a26:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011a2a:	a912      	add	r1, sp, #72	; 0x48
 8011a2c:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8011a30:	aa49      	add	r2, sp, #292	; 0x124
 8011a32:	4623      	mov	r3, r4
 8011a34:	47c8      	blx	r9
 8011a36:	e9d4 2300 	ldrd	r2, r3, [r4]
 8011a3a:	441a      	add	r2, r3
 8011a3c:	6963      	ldr	r3, [r4, #20]
 8011a3e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8011a42:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8011a46:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8011a4a:	68a1      	ldr	r1, [r4, #8]
 8011a4c:	ed94 6a08 	vldr	s12, [r4, #32]
 8011a50:	6022      	str	r2, [r4, #0]
 8011a52:	3301      	adds	r3, #1
 8011a54:	6163      	str	r3, [r4, #20]
 8011a56:	69a3      	ldr	r3, [r4, #24]
 8011a58:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011a5c:	3b01      	subs	r3, #1
 8011a5e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8011a62:	61a3      	str	r3, [r4, #24]
 8011a64:	6923      	ldr	r3, [r4, #16]
 8011a66:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011a6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011a6e:	edd4 6a07 	vldr	s13, [r4, #28]
 8011a72:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8011a76:	440b      	add	r3, r1
 8011a78:	68e1      	ldr	r1, [r4, #12]
 8011a7a:	6123      	str	r3, [r4, #16]
 8011a7c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011a80:	428b      	cmp	r3, r1
 8011a82:	edc4 6a07 	vstr	s13, [r4, #28]
 8011a86:	db15      	blt.n	8011ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8011a88:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8011a8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011a90:	3201      	adds	r2, #1
 8011a92:	edc4 6a07 	vstr	s13, [r4, #28]
 8011a96:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8011a9a:	6022      	str	r2, [r4, #0]
 8011a9c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011aa0:	1a5b      	subs	r3, r3, r1
 8011aa2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011aa6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8011aaa:	6123      	str	r3, [r4, #16]
 8011aac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011ab0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8011ab4:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011ab8:	441a      	add	r2, r3
 8011aba:	696b      	ldr	r3, [r5, #20]
 8011abc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8011ac0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8011ac4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8011ac8:	68a9      	ldr	r1, [r5, #8]
 8011aca:	ed95 6a08 	vldr	s12, [r5, #32]
 8011ace:	602a      	str	r2, [r5, #0]
 8011ad0:	3301      	adds	r3, #1
 8011ad2:	616b      	str	r3, [r5, #20]
 8011ad4:	69ab      	ldr	r3, [r5, #24]
 8011ad6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011ada:	3b01      	subs	r3, #1
 8011adc:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8011ae0:	61ab      	str	r3, [r5, #24]
 8011ae2:	692b      	ldr	r3, [r5, #16]
 8011ae4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011ae8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011aec:	edd5 6a07 	vldr	s13, [r5, #28]
 8011af0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8011af4:	440b      	add	r3, r1
 8011af6:	68e9      	ldr	r1, [r5, #12]
 8011af8:	612b      	str	r3, [r5, #16]
 8011afa:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011afe:	428b      	cmp	r3, r1
 8011b00:	edc5 6a07 	vstr	s13, [r5, #28]
 8011b04:	db15      	blt.n	8011b32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8011b06:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011b0a:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011b0e:	3201      	adds	r2, #1
 8011b10:	edc5 6a07 	vstr	s13, [r5, #28]
 8011b14:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8011b18:	602a      	str	r2, [r5, #0]
 8011b1a:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011b1e:	1a5b      	subs	r3, r3, r1
 8011b20:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011b24:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8011b28:	612b      	str	r3, [r5, #16]
 8011b2a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011b2e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8011b32:	3f01      	subs	r7, #1
 8011b34:	e757      	b.n	80119e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8011b36:	ad39      	add	r5, sp, #228	; 0xe4
 8011b38:	ac19      	add	r4, sp, #100	; 0x64
 8011b3a:	e72d      	b.n	8011998 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8011b3c:	4613      	mov	r3, r2
 8011b3e:	e744      	b.n	80119ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8011b40:	4613      	mov	r3, r2
 8011b42:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8011b46:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8011b48:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8011b4c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8011b50:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8011b54:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8011b58:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8011b5c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8011b60:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8011b64:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8011b66:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8011b6a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8011b6e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8011b72:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8011b76:	960e      	str	r6, [sp, #56]	; 0x38
 8011b78:	469e      	mov	lr, r3
 8011b7a:	461f      	mov	r7, r3
 8011b7c:	f04f 0900 	mov.w	r9, #0
 8011b80:	2f00      	cmp	r7, #0
 8011b82:	d146      	bne.n	8011c12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8011b84:	449c      	add	ip, r3
 8011b86:	1ad7      	subs	r7, r2, r3
 8011b88:	f1b9 0f00 	cmp.w	r9, #0
 8011b8c:	d009      	beq.n	8011ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8011b8e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8011b92:	9039      	str	r0, [sp, #228]	; 0xe4
 8011b94:	913d      	str	r1, [sp, #244]	; 0xf4
 8011b96:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8011b9a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8011b9e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8011ba2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8011ba4:	910e      	str	r1, [sp, #56]	; 0x38
 8011ba6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8011baa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8011bae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8011bb2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8011bb6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8011bba:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8011bbe:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8011bc2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8011bc6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8011bca:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8011bce:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8011bd2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8011bd6:	f04f 0800 	mov.w	r8, #0
 8011bda:	f1be 0f00 	cmp.w	lr, #0
 8011bde:	d030      	beq.n	8011c42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8011be0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8011be2:	4431      	add	r1, r6
 8011be4:	4549      	cmp	r1, r9
 8011be6:	4450      	add	r0, sl
 8011be8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011bec:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011bf0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8011bf4:	db08      	blt.n	8011c08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8011bf6:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011bfa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011bfe:	ee37 7a06 	vadd.f32	s14, s14, s12
 8011c02:	3001      	adds	r0, #1
 8011c04:	eba1 0109 	sub.w	r1, r1, r9
 8011c08:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011c0c:	f04f 0801 	mov.w	r8, #1
 8011c10:	e7e3      	b.n	8011bda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8011c12:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8011c14:	4431      	add	r1, r6
 8011c16:	4541      	cmp	r1, r8
 8011c18:	4450      	add	r0, sl
 8011c1a:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011c1e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8011c22:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8011c26:	db08      	blt.n	8011c3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8011c28:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011c2c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8011c30:	ee77 7a86 	vadd.f32	s15, s15, s12
 8011c34:	3001      	adds	r0, #1
 8011c36:	eba1 0108 	sub.w	r1, r1, r8
 8011c3a:	3f01      	subs	r7, #1
 8011c3c:	f04f 0901 	mov.w	r9, #1
 8011c40:	e79e      	b.n	8011b80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8011c42:	449c      	add	ip, r3
 8011c44:	1aff      	subs	r7, r7, r3
 8011c46:	f1b8 0f00 	cmp.w	r8, #0
 8011c4a:	d009      	beq.n	8011c60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8011c4c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8011c50:	9019      	str	r0, [sp, #100]	; 0x64
 8011c52:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8011c56:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8011c5a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8011c5e:	911d      	str	r1, [sp, #116]	; 0x74
 8011c60:	1ad2      	subs	r2, r2, r3
 8011c62:	e6b5      	b.n	80119d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011c64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011c66:	681b      	ldr	r3, [r3, #0]
 8011c68:	b923      	cbnz	r3, 8011c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011c6a:	4b04      	ldr	r3, [pc, #16]	; (8011c7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8011c6c:	6818      	ldr	r0, [r3, #0]
 8011c6e:	6803      	ldr	r3, [r0, #0]
 8011c70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c72:	4798      	blx	r3
 8011c74:	b05b      	add	sp, #364	; 0x16c
 8011c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c7a:	bf00      	nop
 8011c7c:	2002008c 	.word	0x2002008c

08011c80 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8011c80:	b570      	push	{r4, r5, r6, lr}
 8011c82:	4604      	mov	r4, r0
 8011c84:	2500      	movs	r5, #0
 8011c86:	7223      	strb	r3, [r4, #8]
 8011c88:	9804      	ldr	r0, [sp, #16]
 8011c8a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011c8e:	8025      	strh	r5, [r4, #0]
 8011c90:	6061      	str	r1, [r4, #4]
 8011c92:	7263      	strb	r3, [r4, #9]
 8011c94:	60e0      	str	r0, [r4, #12]
 8011c96:	8222      	strh	r2, [r4, #16]
 8011c98:	8265      	strh	r5, [r4, #18]
 8011c9a:	82a5      	strh	r5, [r4, #20]
 8011c9c:	82e5      	strh	r5, [r4, #22]
 8011c9e:	8325      	strh	r5, [r4, #24]
 8011ca0:	8365      	strh	r5, [r4, #26]
 8011ca2:	83a5      	strh	r5, [r4, #28]
 8011ca4:	77a5      	strb	r5, [r4, #30]
 8011ca6:	6803      	ldr	r3, [r0, #0]
 8011ca8:	695b      	ldr	r3, [r3, #20]
 8011caa:	4798      	blx	r3
 8011cac:	4606      	mov	r6, r0
 8011cae:	b1f8      	cbz	r0, 8011cf0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 8011cb0:	68e0      	ldr	r0, [r4, #12]
 8011cb2:	6803      	ldr	r3, [r0, #0]
 8011cb4:	4631      	mov	r1, r6
 8011cb6:	68db      	ldr	r3, [r3, #12]
 8011cb8:	4798      	blx	r3
 8011cba:	7b43      	ldrb	r3, [r0, #13]
 8011cbc:	7a82      	ldrb	r2, [r0, #10]
 8011cbe:	005b      	lsls	r3, r3, #1
 8011cc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011cc4:	4313      	orrs	r3, r2
 8011cc6:	83a3      	strh	r3, [r4, #28]
 8011cc8:	7a63      	ldrb	r3, [r4, #9]
 8011cca:	2b04      	cmp	r3, #4
 8011ccc:	4605      	mov	r5, r0
 8011cce:	d10f      	bne.n	8011cf0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 8011cd0:	68e0      	ldr	r0, [r4, #12]
 8011cd2:	6803      	ldr	r3, [r0, #0]
 8011cd4:	462a      	mov	r2, r5
 8011cd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011cd8:	4631      	mov	r1, r6
 8011cda:	4798      	blx	r3
 8011cdc:	7b6b      	ldrb	r3, [r5, #13]
 8011cde:	005b      	lsls	r3, r3, #1
 8011ce0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011ce4:	7aab      	ldrb	r3, [r5, #10]
 8011ce6:	4313      	orrs	r3, r2
 8011ce8:	4418      	add	r0, r3
 8011cea:	8ba3      	ldrh	r3, [r4, #28]
 8011cec:	4418      	add	r0, r3
 8011cee:	83a0      	strh	r0, [r4, #28]
 8011cf0:	4620      	mov	r0, r4
 8011cf2:	bd70      	pop	{r4, r5, r6, pc}

08011cf4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8011cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cf8:	2400      	movs	r4, #0
 8011cfa:	b085      	sub	sp, #20
 8011cfc:	4681      	mov	r9, r0
 8011cfe:	4688      	mov	r8, r1
 8011d00:	4692      	mov	sl, r2
 8011d02:	469b      	mov	fp, r3
 8011d04:	4627      	mov	r7, r4
 8011d06:	4625      	mov	r5, r4
 8011d08:	4626      	mov	r6, r4
 8011d0a:	4554      	cmp	r4, sl
 8011d0c:	da2a      	bge.n	8011d64 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011d0e:	2300      	movs	r3, #0
 8011d10:	9303      	str	r3, [sp, #12]
 8011d12:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011d16:	429d      	cmp	r5, r3
 8011d18:	d004      	beq.n	8011d24 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8011d1a:	f242 030b 	movw	r3, #8203	; 0x200b
 8011d1e:	429d      	cmp	r5, r3
 8011d20:	bf18      	it	ne
 8011d22:	462f      	movne	r7, r5
 8011d24:	ab03      	add	r3, sp, #12
 8011d26:	4642      	mov	r2, r8
 8011d28:	4659      	mov	r1, fp
 8011d2a:	4648      	mov	r0, r9
 8011d2c:	f003 ff8e 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011d30:	4605      	mov	r5, r0
 8011d32:	b1b8      	cbz	r0, 8011d64 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011d34:	280a      	cmp	r0, #10
 8011d36:	d015      	beq.n	8011d64 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011d38:	9a03      	ldr	r2, [sp, #12]
 8011d3a:	b18a      	cbz	r2, 8011d60 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8011d3c:	7b50      	ldrb	r0, [r2, #13]
 8011d3e:	7a93      	ldrb	r3, [r2, #10]
 8011d40:	8895      	ldrh	r5, [r2, #4]
 8011d42:	0040      	lsls	r0, r0, #1
 8011d44:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011d48:	4303      	orrs	r3, r0
 8011d4a:	9301      	str	r3, [sp, #4]
 8011d4c:	f8d8 3000 	ldr.w	r3, [r8]
 8011d50:	4639      	mov	r1, r7
 8011d52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011d54:	4640      	mov	r0, r8
 8011d56:	4798      	blx	r3
 8011d58:	9b01      	ldr	r3, [sp, #4]
 8011d5a:	4418      	add	r0, r3
 8011d5c:	4406      	add	r6, r0
 8011d5e:	b2b6      	uxth	r6, r6
 8011d60:	3401      	adds	r4, #1
 8011d62:	e7d2      	b.n	8011d0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8011d64:	4630      	mov	r0, r6
 8011d66:	b005      	add	sp, #20
 8011d68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011d6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8011d6c:	2a02      	cmp	r2, #2
 8011d6e:	b530      	push	{r4, r5, lr}
 8011d70:	d011      	beq.n	8011d96 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8011d72:	2a03      	cmp	r2, #3
 8011d74:	d01c      	beq.n	8011db0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8011d76:	2a01      	cmp	r2, #1
 8011d78:	d10c      	bne.n	8011d94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8011d7a:	888b      	ldrh	r3, [r1, #4]
 8011d7c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8011d80:	8801      	ldrh	r1, [r0, #0]
 8011d82:	8844      	ldrh	r4, [r0, #2]
 8011d84:	8004      	strh	r4, [r0, #0]
 8011d86:	1a9b      	subs	r3, r3, r2
 8011d88:	1a5b      	subs	r3, r3, r1
 8011d8a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011d8e:	8043      	strh	r3, [r0, #2]
 8011d90:	8081      	strh	r1, [r0, #4]
 8011d92:	80c2      	strh	r2, [r0, #6]
 8011d94:	bd30      	pop	{r4, r5, pc}
 8011d96:	88cb      	ldrh	r3, [r1, #6]
 8011d98:	88c2      	ldrh	r2, [r0, #6]
 8011d9a:	1a9b      	subs	r3, r3, r2
 8011d9c:	8842      	ldrh	r2, [r0, #2]
 8011d9e:	1a9b      	subs	r3, r3, r2
 8011da0:	888a      	ldrh	r2, [r1, #4]
 8011da2:	8881      	ldrh	r1, [r0, #4]
 8011da4:	8043      	strh	r3, [r0, #2]
 8011da6:	1a52      	subs	r2, r2, r1
 8011da8:	8801      	ldrh	r1, [r0, #0]
 8011daa:	1a52      	subs	r2, r2, r1
 8011dac:	8002      	strh	r2, [r0, #0]
 8011dae:	e7f1      	b.n	8011d94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8011db0:	88cb      	ldrh	r3, [r1, #6]
 8011db2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8011db6:	8841      	ldrh	r1, [r0, #2]
 8011db8:	f9b0 5000 	ldrsh.w	r5, [r0]
 8011dbc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8011dc0:	8045      	strh	r5, [r0, #2]
 8011dc2:	1a9b      	subs	r3, r3, r2
 8011dc4:	1a5b      	subs	r3, r3, r1
 8011dc6:	8003      	strh	r3, [r0, #0]
 8011dc8:	8082      	strh	r2, [r0, #4]
 8011dca:	80c4      	strh	r4, [r0, #6]
 8011dcc:	e7e2      	b.n	8011d94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08011dce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8011dce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dd2:	b09f      	sub	sp, #124	; 0x7c
 8011dd4:	9116      	str	r1, [sp, #88]	; 0x58
 8011dd6:	9317      	str	r3, [sp, #92]	; 0x5c
 8011dd8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011dda:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011ddc:	8809      	ldrh	r1, [r1, #0]
 8011dde:	889b      	ldrh	r3, [r3, #4]
 8011de0:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8011de4:	9212      	str	r2, [sp, #72]	; 0x48
 8011de6:	440b      	add	r3, r1
 8011de8:	b21b      	sxth	r3, r3
 8011dea:	9310      	str	r3, [sp, #64]	; 0x40
 8011dec:	f8d8 3000 	ldr.w	r3, [r8]
 8011df0:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8011df4:	7a59      	ldrb	r1, [r3, #9]
 8011df6:	7a1b      	ldrb	r3, [r3, #8]
 8011df8:	9315      	str	r3, [sp, #84]	; 0x54
 8011dfa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011dfc:	9011      	str	r0, [sp, #68]	; 0x44
 8011dfe:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8011e02:	9114      	str	r1, [sp, #80]	; 0x50
 8011e04:	f9b3 5000 	ldrsh.w	r5, [r3]
 8011e08:	2a00      	cmp	r2, #0
 8011e0a:	d067      	beq.n	8011edc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 8011e0c:	f898 3010 	ldrb.w	r3, [r8, #16]
 8011e10:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8011e12:	2b04      	cmp	r3, #4
 8011e14:	bf14      	ite	ne
 8011e16:	2301      	movne	r3, #1
 8011e18:	2302      	moveq	r3, #2
 8011e1a:	4413      	add	r3, r2
 8011e1c:	f04f 0900 	mov.w	r9, #0
 8011e20:	930f      	str	r3, [sp, #60]	; 0x3c
 8011e22:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8011e26:	464c      	mov	r4, r9
 8011e28:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8011e2c:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8011e30:	4293      	cmp	r3, r2
 8011e32:	f280 808c 	bge.w	8011f4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8011e36:	2300      	movs	r3, #0
 8011e38:	931c      	str	r3, [sp, #112]	; 0x70
 8011e3a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011e3e:	429c      	cmp	r4, r3
 8011e40:	d006      	beq.n	8011e50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 8011e42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011e44:	f242 020b 	movw	r2, #8203	; 0x200b
 8011e48:	4294      	cmp	r4, r2
 8011e4a:	bf18      	it	ne
 8011e4c:	4623      	movne	r3, r4
 8011e4e:	930d      	str	r3, [sp, #52]	; 0x34
 8011e50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011e52:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8011e54:	f8d8 2000 	ldr.w	r2, [r8]
 8011e58:	428b      	cmp	r3, r1
 8011e5a:	db41      	blt.n	8011ee0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8011e5c:	6813      	ldr	r3, [r2, #0]
 8011e5e:	4610      	mov	r0, r2
 8011e60:	695b      	ldr	r3, [r3, #20]
 8011e62:	4798      	blx	r3
 8011e64:	4604      	mov	r4, r0
 8011e66:	f8d8 0000 	ldr.w	r0, [r8]
 8011e6a:	6803      	ldr	r3, [r0, #0]
 8011e6c:	aa1d      	add	r2, sp, #116	; 0x74
 8011e6e:	689e      	ldr	r6, [r3, #8]
 8011e70:	4621      	mov	r1, r4
 8011e72:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8011e76:	47b0      	blx	r6
 8011e78:	901c      	str	r0, [sp, #112]	; 0x70
 8011e7a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011e7e:	429c      	cmp	r4, r3
 8011e80:	f000 80e9 	beq.w	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011e84:	f242 030b 	movw	r3, #8203	; 0x200b
 8011e88:	429c      	cmp	r4, r3
 8011e8a:	f000 80e4 	beq.w	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011e8e:	2c00      	cmp	r4, #0
 8011e90:	f000 80f6 	beq.w	8012080 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8011e94:	2c0a      	cmp	r4, #10
 8011e96:	d060      	beq.n	8011f5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8011e98:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011e9a:	b36a      	cbz	r2, 8011ef8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 8011e9c:	8894      	ldrh	r4, [r2, #4]
 8011e9e:	f1bb 0f00 	cmp.w	fp, #0
 8011ea2:	d03b      	beq.n	8011f1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 8011ea4:	f892 900d 	ldrb.w	r9, [r2, #13]
 8011ea8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8011eac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8011eb0:	f892 900a 	ldrb.w	r9, [r2, #10]
 8011eb4:	f1bb 0f01 	cmp.w	fp, #1
 8011eb8:	ea49 0903 	orr.w	r9, r9, r3
 8011ebc:	d134      	bne.n	8011f28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 8011ebe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011ec0:	eba5 0509 	sub.w	r5, r5, r9
 8011ec4:	2b00      	cmp	r3, #0
 8011ec6:	d14f      	bne.n	8011f68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8011ec8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011eca:	eb09 0305 	add.w	r3, r9, r5
 8011ece:	4413      	add	r3, r2
 8011ed0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8011ed2:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011ed6:	4293      	cmp	r3, r2
 8011ed8:	da51      	bge.n	8011f7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8011eda:	e038      	b.n	8011f4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8011edc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8011ede:	e79d      	b.n	8011e1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 8011ee0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8011ee4:	9301      	str	r3, [sp, #4]
 8011ee6:	ab1d      	add	r3, sp, #116	; 0x74
 8011ee8:	9300      	str	r3, [sp, #0]
 8011eea:	4659      	mov	r1, fp
 8011eec:	ab1c      	add	r3, sp, #112	; 0x70
 8011eee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8011ef0:	f003 ff04 	bl	8015cfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8011ef4:	4604      	mov	r4, r0
 8011ef6:	e7c0      	b.n	8011e7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 8011ef8:	f8d8 0000 	ldr.w	r0, [r8]
 8011efc:	6803      	ldr	r3, [r0, #0]
 8011efe:	691b      	ldr	r3, [r3, #16]
 8011f00:	4798      	blx	r3
 8011f02:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011f06:	4298      	cmp	r0, r3
 8011f08:	f000 80a5 	beq.w	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011f0c:	f242 030b 	movw	r3, #8203	; 0x200b
 8011f10:	4298      	cmp	r0, r3
 8011f12:	f000 80a0 	beq.w	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011f16:	f1bb 0f00 	cmp.w	fp, #0
 8011f1a:	d100      	bne.n	8011f1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8011f1c:	444d      	add	r5, r9
 8011f1e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011f20:	2a00      	cmp	r2, #0
 8011f22:	d1bf      	bne.n	8011ea4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 8011f24:	4691      	mov	r9, r2
 8011f26:	e096      	b.n	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011f28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011f2a:	2b00      	cmp	r3, #0
 8011f2c:	f000 80aa 	beq.w	8012084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8011f30:	f1bb 0f00 	cmp.w	fp, #0
 8011f34:	d118      	bne.n	8011f68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8011f36:	f8d8 0000 	ldr.w	r0, [r8]
 8011f3a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011f3c:	6803      	ldr	r3, [r0, #0]
 8011f3e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011f40:	4798      	blx	r3
 8011f42:	4405      	add	r5, r0
 8011f44:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011f46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011f48:	1aeb      	subs	r3, r5, r3
 8011f4a:	4293      	cmp	r3, r2
 8011f4c:	dd17      	ble.n	8011f7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8011f4e:	2c00      	cmp	r4, #0
 8011f50:	f000 8096 	beq.w	8012080 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8011f54:	2c0a      	cmp	r4, #10
 8011f56:	f040 8084 	bne.w	8012062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8011f5a:	240a      	movs	r4, #10
 8011f5c:	fab4 f084 	clz	r0, r4
 8011f60:	0940      	lsrs	r0, r0, #5
 8011f62:	b01f      	add	sp, #124	; 0x7c
 8011f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f68:	f8d8 0000 	ldr.w	r0, [r8]
 8011f6c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011f6e:	6803      	ldr	r3, [r0, #0]
 8011f70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011f72:	4798      	blx	r3
 8011f74:	f1bb 0f01 	cmp.w	fp, #1
 8011f78:	eba5 0500 	sub.w	r5, r5, r0
 8011f7c:	d0a4      	beq.n	8011ec8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 8011f7e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8011f80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011f82:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8011f86:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011f8a:	7b43      	ldrb	r3, [r0, #13]
 8011f8c:	015b      	lsls	r3, r3, #5
 8011f8e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011f92:	7983      	ldrb	r3, [r0, #6]
 8011f94:	4429      	add	r1, r5
 8011f96:	4313      	orrs	r3, r2
 8011f98:	440b      	add	r3, r1
 8011f9a:	42b3      	cmp	r3, r6
 8011f9c:	db5b      	blt.n	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011f9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fa0:	4299      	cmp	r1, r3
 8011fa2:	da58      	bge.n	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011fa4:	f8d8 0000 	ldr.w	r0, [r8]
 8011fa8:	6803      	ldr	r3, [r0, #0]
 8011faa:	42ae      	cmp	r6, r5
 8011fac:	bfc8      	it	gt
 8011fae:	1b76      	subgt	r6, r6, r5
 8011fb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fb2:	bfcc      	ite	gt
 8011fb4:	b2b6      	uxthgt	r6, r6
 8011fb6:	2600      	movle	r6, #0
 8011fb8:	4798      	blx	r3
 8011fba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8011fbc:	7b5a      	ldrb	r2, [r3, #13]
 8011fbe:	00d1      	lsls	r1, r2, #3
 8011fc0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8011fc4:	7a19      	ldrb	r1, [r3, #8]
 8011fc6:	4339      	orrs	r1, r7
 8011fc8:	0657      	lsls	r7, r2, #25
 8011fca:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8011fcc:	bf44      	itt	mi
 8011fce:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8011fd2:	b209      	sxthmi	r1, r1
 8011fd4:	19c7      	adds	r7, r0, r7
 8011fd6:	1a7f      	subs	r7, r7, r1
 8011fd8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011fda:	b2bf      	uxth	r7, r7
 8011fdc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8011fe0:	fa0f fa87 	sxth.w	sl, r7
 8011fe4:	4551      	cmp	r1, sl
 8011fe6:	dd3a      	ble.n	801205e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011fe8:	0112      	lsls	r2, r2, #4
 8011fea:	79d8      	ldrb	r0, [r3, #7]
 8011fec:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011ff0:	4302      	orrs	r2, r0
 8011ff2:	4492      	add	sl, r2
 8011ff4:	4551      	cmp	r1, sl
 8011ff6:	dc2e      	bgt.n	8012056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8011ff8:	1bcf      	subs	r7, r1, r7
 8011ffa:	b2bf      	uxth	r7, r7
 8011ffc:	468a      	mov	sl, r1
 8011ffe:	9319      	str	r3, [sp, #100]	; 0x64
 8012000:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012002:	f8d8 0000 	ldr.w	r0, [r8]
 8012006:	681a      	ldr	r2, [r3, #0]
 8012008:	6801      	ldr	r1, [r0, #0]
 801200a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 801200c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801200e:	9313      	str	r3, [sp, #76]	; 0x4c
 8012010:	9218      	str	r2, [sp, #96]	; 0x60
 8012012:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8012014:	4788      	blx	r1
 8012016:	f898 1006 	ldrb.w	r1, [r8, #6]
 801201a:	910b      	str	r1, [sp, #44]	; 0x2c
 801201c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8012020:	910a      	str	r1, [sp, #40]	; 0x28
 8012022:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8012026:	9109      	str	r1, [sp, #36]	; 0x24
 8012028:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801202a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801202e:	9305      	str	r3, [sp, #20]
 8012030:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012032:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8012034:	9206      	str	r2, [sp, #24]
 8012036:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801203a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801203e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8012042:	442e      	add	r6, r5
 8012044:	b236      	sxth	r6, r6
 8012046:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012048:	9600      	str	r6, [sp, #0]
 801204a:	681a      	ldr	r2, [r3, #0]
 801204c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801204e:	685b      	ldr	r3, [r3, #4]
 8012050:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012052:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012054:	47b0      	blx	r6
 8012056:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012058:	3301      	adds	r3, #1
 801205a:	930e      	str	r3, [sp, #56]	; 0x38
 801205c:	e6e6      	b.n	8011e2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 801205e:	2700      	movs	r7, #0
 8012060:	e7cd      	b.n	8011ffe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 8012062:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012064:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012066:	3501      	adds	r5, #1
 8012068:	429d      	cmp	r5, r3
 801206a:	f6bf af77 	bge.w	8011f5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801206e:	4659      	mov	r1, fp
 8012070:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8012072:	f7f4 fbc3 	bl	80067fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012076:	4604      	mov	r4, r0
 8012078:	b110      	cbz	r0, 8012080 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 801207a:	280a      	cmp	r0, #10
 801207c:	d1f2      	bne.n	8012064 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 801207e:	e76c      	b.n	8011f5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8012080:	2400      	movs	r4, #0
 8012082:	e76b      	b.n	8011f5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8012084:	f1bb 0f00 	cmp.w	fp, #0
 8012088:	f43f af5c 	beq.w	8011f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801208c:	e777      	b.n	8011f7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>:
 801208e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012092:	b089      	sub	sp, #36	; 0x24
 8012094:	4699      	mov	r9, r3
 8012096:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012098:	f8bd 4050 	ldrh.w	r4, [sp, #80]	; 0x50
 801209c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801209e:	4683      	mov	fp, r0
 80120a0:	460d      	mov	r5, r1
 80120a2:	4690      	mov	r8, r2
 80120a4:	bb0b      	cbnz	r3, 80120ea <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 80120a6:	6813      	ldr	r3, [r2, #0]
 80120a8:	4610      	mov	r0, r2
 80120aa:	695b      	ldr	r3, [r3, #20]
 80120ac:	4798      	blx	r3
 80120ae:	4682      	mov	sl, r0
 80120b0:	b1d8      	cbz	r0, 80120ea <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 80120b2:	f8d8 3000 	ldr.w	r3, [r8]
 80120b6:	4601      	mov	r1, r0
 80120b8:	68db      	ldr	r3, [r3, #12]
 80120ba:	4640      	mov	r0, r8
 80120bc:	4798      	blx	r3
 80120be:	7b47      	ldrb	r7, [r0, #13]
 80120c0:	007f      	lsls	r7, r7, #1
 80120c2:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80120c6:	7a87      	ldrb	r7, [r0, #10]
 80120c8:	431f      	orrs	r7, r3
 80120ca:	6933      	ldr	r3, [r6, #16]
 80120cc:	7c1b      	ldrb	r3, [r3, #16]
 80120ce:	443c      	add	r4, r7
 80120d0:	2b04      	cmp	r3, #4
 80120d2:	4602      	mov	r2, r0
 80120d4:	b2a4      	uxth	r4, r4
 80120d6:	d108      	bne.n	80120ea <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 80120d8:	f8d8 3000 	ldr.w	r3, [r8]
 80120dc:	4651      	mov	r1, sl
 80120de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80120e0:	4640      	mov	r0, r8
 80120e2:	4798      	blx	r3
 80120e4:	4438      	add	r0, r7
 80120e6:	4404      	add	r4, r0
 80120e8:	b2a4      	uxth	r4, r4
 80120ea:	6933      	ldr	r3, [r6, #16]
 80120ec:	795b      	ldrb	r3, [r3, #5]
 80120ee:	bb3b      	cbnz	r3, 8012140 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb2>
 80120f0:	f1b9 0f01 	cmp.w	r9, #1
 80120f4:	d102      	bne.n	80120fc <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80120f6:	882b      	ldrh	r3, [r5, #0]
 80120f8:	4423      	add	r3, r4
 80120fa:	802b      	strh	r3, [r5, #0]
 80120fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80120fe:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
 8012102:	fab2 f282 	clz	r2, r2
 8012106:	0952      	lsrs	r2, r2, #5
 8012108:	9206      	str	r2, [sp, #24]
 801210a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801210c:	9205      	str	r2, [sp, #20]
 801210e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012110:	e9cd 9203 	strd	r9, r2, [sp, #12]
 8012114:	6932      	ldr	r2, [r6, #16]
 8012116:	9202      	str	r2, [sp, #8]
 8012118:	68f2      	ldr	r2, [r6, #12]
 801211a:	e9cd 5200 	strd	r5, r2, [sp]
 801211e:	4658      	mov	r0, fp
 8012120:	e9d6 1200 	ldrd	r1, r2, [r6]
 8012124:	f7ff fe53 	bl	8011dce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8012128:	6933      	ldr	r3, [r6, #16]
 801212a:	795b      	ldrb	r3, [r3, #5]
 801212c:	b983      	cbnz	r3, 8012150 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xc2>
 801212e:	f1b9 0f00 	cmp.w	r9, #0
 8012132:	d102      	bne.n	801213a <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 8012134:	8828      	ldrh	r0, [r5, #0]
 8012136:	4404      	add	r4, r0
 8012138:	802c      	strh	r4, [r5, #0]
 801213a:	b009      	add	sp, #36	; 0x24
 801213c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012140:	2b01      	cmp	r3, #1
 8012142:	d1db      	bne.n	80120fc <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 8012144:	f1b9 0f00 	cmp.w	r9, #0
 8012148:	d1d8      	bne.n	80120fc <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 801214a:	882b      	ldrh	r3, [r5, #0]
 801214c:	1b1b      	subs	r3, r3, r4
 801214e:	e7d4      	b.n	80120fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6c>
 8012150:	2b01      	cmp	r3, #1
 8012152:	d1f2      	bne.n	801213a <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 8012154:	f1b9 0f01 	cmp.w	r9, #1
 8012158:	d1ef      	bne.n	801213a <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 801215a:	8828      	ldrh	r0, [r5, #0]
 801215c:	1b04      	subs	r4, r0, r4
 801215e:	e7eb      	b.n	8012138 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xaa>

08012160 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>:
 8012160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012164:	b0a7      	sub	sp, #156	; 0x9c
 8012166:	4689      	mov	r9, r1
 8012168:	9004      	str	r0, [sp, #16]
 801216a:	9309      	str	r3, [sp, #36]	; 0x24
 801216c:	4690      	mov	r8, r2
 801216e:	f89d 30c8 	ldrb.w	r3, [sp, #200]	; 0xc8
 8012172:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8012174:	930b      	str	r3, [sp, #44]	; 0x2c
 8012176:	2264      	movs	r2, #100	; 0x64
 8012178:	a80d      	add	r0, sp, #52	; 0x34
 801217a:	f011 f95d 	bl	8023438 <memcpy>
 801217e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012180:	2300      	movs	r3, #0
 8012182:	930c      	str	r3, [sp, #48]	; 0x30
 8012184:	2a00      	cmp	r2, #0
 8012186:	f040 8149 	bne.w	801241c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2bc>
 801218a:	4693      	mov	fp, r2
 801218c:	9208      	str	r2, [sp, #32]
 801218e:	9206      	str	r2, [sp, #24]
 8012190:	4616      	mov	r6, r2
 8012192:	4617      	mov	r7, r2
 8012194:	9205      	str	r2, [sp, #20]
 8012196:	4614      	mov	r4, r2
 8012198:	9207      	str	r2, [sp, #28]
 801219a:	4692      	mov	sl, r2
 801219c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801219e:	459b      	cmp	fp, r3
 80121a0:	f280 80f0 	bge.w	8012384 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 80121a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80121a8:	459a      	cmp	sl, r3
 80121aa:	d006      	beq.n	80121ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5a>
 80121ac:	9b07      	ldr	r3, [sp, #28]
 80121ae:	f242 020b 	movw	r2, #8203	; 0x200b
 80121b2:	4592      	cmp	sl, r2
 80121b4:	bf18      	it	ne
 80121b6:	4653      	movne	r3, sl
 80121b8:	9307      	str	r3, [sp, #28]
 80121ba:	4642      	mov	r2, r8
 80121bc:	ab0c      	add	r3, sp, #48	; 0x30
 80121be:	2100      	movs	r1, #0
 80121c0:	9830      	ldr	r0, [sp, #192]	; 0xc0
 80121c2:	f003 fd43 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80121c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80121c8:	4682      	mov	sl, r0
 80121ca:	2a00      	cmp	r2, #0
 80121cc:	d064      	beq.n	8012298 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x138>
 80121ce:	7b55      	ldrb	r5, [r2, #13]
 80121d0:	f8d8 3000 	ldr.w	r3, [r8]
 80121d4:	9907      	ldr	r1, [sp, #28]
 80121d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80121d8:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 80121dc:	006d      	lsls	r5, r5, #1
 80121de:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80121e2:	7a95      	ldrb	r5, [r2, #10]
 80121e4:	4305      	orrs	r5, r0
 80121e6:	4640      	mov	r0, r8
 80121e8:	4798      	blx	r3
 80121ea:	4405      	add	r5, r0
 80121ec:	b2ad      	uxth	r5, r5
 80121ee:	f1ba 0f00 	cmp.w	sl, #0
 80121f2:	f000 80c7 	beq.w	8012384 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 80121f6:	f1ba 0f0a 	cmp.w	sl, #10
 80121fa:	f000 80c3 	beq.w	8012384 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 80121fe:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 8012202:	b29b      	uxth	r3, r3
 8012204:	f02a 0120 	bic.w	r1, sl, #32
 8012208:	2b01      	cmp	r3, #1
 801220a:	b289      	uxth	r1, r1
 801220c:	d946      	bls.n	801229c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 801220e:	295b      	cmp	r1, #91	; 0x5b
 8012210:	d044      	beq.n	801229c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 8012212:	295d      	cmp	r1, #93	; 0x5d
 8012214:	d042      	beq.n	801229c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 8012216:	f02a 0202 	bic.w	r2, sl, #2
 801221a:	b292      	uxth	r2, r2
 801221c:	f1a2 033c 	sub.w	r3, r2, #60	; 0x3c
 8012220:	425a      	negs	r2, r3
 8012222:	415a      	adcs	r2, r3
 8012224:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 8012228:	b29b      	uxth	r3, r3
 801222a:	2b09      	cmp	r3, #9
 801222c:	d938      	bls.n	80122a0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x140>
 801222e:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 8012232:	b29b      	uxth	r3, r3
 8012234:	2b09      	cmp	r3, #9
 8012236:	bf8c      	ite	hi
 8012238:	2300      	movhi	r3, #0
 801223a:	2301      	movls	r3, #1
 801223c:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 8012240:	b280      	uxth	r0, r0
 8012242:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 8012246:	d305      	bcc.n	8012254 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf4>
 8012248:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 801224c:	b280      	uxth	r0, r0
 801224e:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 8012252:	d227      	bcs.n	80122a4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x144>
 8012254:	f083 0001 	eor.w	r0, r3, #1
 8012258:	f64f 6cff 	movw	ip, #65279	; 0xfeff
 801225c:	45e2      	cmp	sl, ip
 801225e:	d023      	beq.n	80122a8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x148>
 8012260:	f242 0c0b 	movw	ip, #8203	; 0x200b
 8012264:	45e2      	cmp	sl, ip
 8012266:	bf14      	ite	ne
 8012268:	f04f 0c00 	movne.w	ip, #0
 801226c:	f04f 0c01 	moveq.w	ip, #1
 8012270:	3941      	subs	r1, #65	; 0x41
 8012272:	2919      	cmp	r1, #25
 8012274:	d90a      	bls.n	801228c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 8012276:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 801227a:	f240 8256 	bls.w	801272a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 801227e:	2800      	cmp	r0, #0
 8012280:	f040 8253 	bne.w	801272a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 8012284:	f1bc 0f00 	cmp.w	ip, #0
 8012288:	f040 824f 	bne.w	801272a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 801228c:	2f03      	cmp	r7, #3
 801228e:	d844      	bhi.n	801231a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8012290:	e8df f007 	tbb	[pc, r7]
 8012294:	4c2d1813 	.word	0x4c2d1813
 8012298:	4615      	mov	r5, r2
 801229a:	e7a8      	b.n	80121ee <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x8e>
 801229c:	2201      	movs	r2, #1
 801229e:	e7c1      	b.n	8012224 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xc4>
 80122a0:	2301      	movs	r3, #1
 80122a2:	e7cb      	b.n	801223c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xdc>
 80122a4:	2000      	movs	r0, #0
 80122a6:	e7d7      	b.n	8012258 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf8>
 80122a8:	f04f 0c01 	mov.w	ip, #1
 80122ac:	e7e0      	b.n	8012270 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x110>
 80122ae:	2f03      	cmp	r7, #3
 80122b0:	d833      	bhi.n	801231a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 80122b2:	e8df f007 	tbb	[pc, r7]
 80122b6:	0702      	.short	0x0702
 80122b8:	3c1c      	.short	0x3c1c
 80122ba:	462c      	mov	r4, r5
 80122bc:	2601      	movs	r6, #1
 80122be:	b1a0      	cbz	r0, 80122ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 80122c0:	2702      	movs	r7, #2
 80122c2:	e02a      	b.n	801231a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 80122c4:	b170      	cbz	r0, 80122e4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x184>
 80122c6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80122c8:	9601      	str	r6, [sp, #4]
 80122ca:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80122ce:	ab0d      	add	r3, sp, #52	; 0x34
 80122d0:	9300      	str	r3, [sp, #0]
 80122d2:	4642      	mov	r2, r8
 80122d4:	2300      	movs	r3, #0
 80122d6:	4649      	mov	r1, r9
 80122d8:	9804      	ldr	r0, [sp, #16]
 80122da:	f7ff fed8 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80122de:	462c      	mov	r4, r5
 80122e0:	2601      	movs	r6, #1
 80122e2:	e7ed      	b.n	80122c0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 80122e4:	442c      	add	r4, r5
 80122e6:	3601      	adds	r6, #1
 80122e8:	b2a4      	uxth	r4, r4
 80122ea:	2701      	movs	r7, #1
 80122ec:	e015      	b.n	801231a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 80122ee:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80122f0:	9601      	str	r6, [sp, #4]
 80122f2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80122f6:	ab0d      	add	r3, sp, #52	; 0x34
 80122f8:	9300      	str	r3, [sp, #0]
 80122fa:	4642      	mov	r2, r8
 80122fc:	2301      	movs	r3, #1
 80122fe:	4649      	mov	r1, r9
 8012300:	9804      	ldr	r0, [sp, #16]
 8012302:	f7ff fec4 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8012306:	462c      	mov	r4, r5
 8012308:	2601      	movs	r6, #1
 801230a:	e7ee      	b.n	80122ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 801230c:	b910      	cbnz	r0, 8012314 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1b4>
 801230e:	f1bc 0f00 	cmp.w	ip, #0
 8012312:	d033      	beq.n	801237c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x21c>
 8012314:	442c      	add	r4, r5
 8012316:	3601      	adds	r6, #1
 8012318:	b2a4      	uxth	r4, r4
 801231a:	9b08      	ldr	r3, [sp, #32]
 801231c:	2f01      	cmp	r7, #1
 801231e:	bf08      	it	eq
 8012320:	f043 0301 	orreq.w	r3, r3, #1
 8012324:	9308      	str	r3, [sp, #32]
 8012326:	f10b 0b01 	add.w	fp, fp, #1
 801232a:	e737      	b.n	801219c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c>
 801232c:	2301      	movs	r3, #1
 801232e:	9a06      	ldr	r2, [sp, #24]
 8012330:	1c57      	adds	r7, r2, #1
 8012332:	b140      	cbz	r0, 8012346 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e6>
 8012334:	9b05      	ldr	r3, [sp, #20]
 8012336:	441c      	add	r4, r3
 8012338:	fa15 f484 	uxtah	r4, r5, r4
 801233c:	443e      	add	r6, r7
 801233e:	b2a4      	uxth	r4, r4
 8012340:	e7be      	b.n	80122c0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 8012342:	2300      	movs	r3, #0
 8012344:	e7f3      	b.n	801232e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ce>
 8012346:	b193      	cbz	r3, 801236e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x20e>
 8012348:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801234a:	9601      	str	r6, [sp, #4]
 801234c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8012350:	ab0d      	add	r3, sp, #52	; 0x34
 8012352:	9300      	str	r3, [sp, #0]
 8012354:	4642      	mov	r2, r8
 8012356:	2301      	movs	r3, #1
 8012358:	4649      	mov	r1, r9
 801235a:	9804      	ldr	r0, [sp, #16]
 801235c:	f7ff fe97 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8012360:	9b05      	ldr	r3, [sp, #20]
 8012362:	441c      	add	r4, r3
 8012364:	fa15 f484 	uxtah	r4, r5, r4
 8012368:	b2a4      	uxth	r4, r4
 801236a:	463e      	mov	r6, r7
 801236c:	e7bd      	b.n	80122ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 801236e:	9b05      	ldr	r3, [sp, #20]
 8012370:	442b      	add	r3, r5
 8012372:	b29b      	uxth	r3, r3
 8012374:	e9cd 3705 	strd	r3, r7, [sp, #20]
 8012378:	2703      	movs	r7, #3
 801237a:	e7ce      	b.n	801231a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 801237c:	2301      	movs	r3, #1
 801237e:	9505      	str	r5, [sp, #20]
 8012380:	9306      	str	r3, [sp, #24]
 8012382:	e7f9      	b.n	8012378 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x218>
 8012384:	2f01      	cmp	r7, #1
 8012386:	d106      	bne.n	8012396 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x236>
 8012388:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801238a:	9601      	str	r6, [sp, #4]
 801238c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8012390:	ab0d      	add	r3, sp, #52	; 0x34
 8012392:	9300      	str	r3, [sp, #0]
 8012394:	e01f      	b.n	80123d6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x276>
 8012396:	2f02      	cmp	r7, #2
 8012398:	d106      	bne.n	80123a8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x248>
 801239a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801239c:	9601      	str	r6, [sp, #4]
 801239e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80123a2:	ab0d      	add	r3, sp, #52	; 0x34
 80123a4:	9300      	str	r3, [sp, #0]
 80123a6:	e037      	b.n	8012418 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 80123a8:	2f03      	cmp	r7, #3
 80123aa:	d11a      	bne.n	80123e2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 80123ac:	9b08      	ldr	r3, [sp, #32]
 80123ae:	af0d      	add	r7, sp, #52	; 0x34
 80123b0:	b343      	cbz	r3, 8012404 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2a4>
 80123b2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80123b4:	9804      	ldr	r0, [sp, #16]
 80123b6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80123ba:	e9cd 7600 	strd	r7, r6, [sp]
 80123be:	2301      	movs	r3, #1
 80123c0:	4642      	mov	r2, r8
 80123c2:	4649      	mov	r1, r9
 80123c4:	f7ff fe63 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80123c8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80123ca:	9303      	str	r3, [sp, #12]
 80123cc:	9b05      	ldr	r3, [sp, #20]
 80123ce:	9302      	str	r3, [sp, #8]
 80123d0:	9b06      	ldr	r3, [sp, #24]
 80123d2:	e9cd 7300 	strd	r7, r3, [sp]
 80123d6:	2300      	movs	r3, #0
 80123d8:	4642      	mov	r2, r8
 80123da:	4649      	mov	r1, r9
 80123dc:	9804      	ldr	r0, [sp, #16]
 80123de:	f7ff fe56 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80123e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80123e4:	b15b      	cbz	r3, 80123fe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x29e>
 80123e6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80123e8:	9303      	str	r3, [sp, #12]
 80123ea:	aa0d      	add	r2, sp, #52	; 0x34
 80123ec:	2300      	movs	r3, #0
 80123ee:	9200      	str	r2, [sp, #0]
 80123f0:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80123f4:	4642      	mov	r2, r8
 80123f6:	4649      	mov	r1, r9
 80123f8:	9804      	ldr	r0, [sp, #16]
 80123fa:	f7ff fe48 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80123fe:	b027      	add	sp, #156	; 0x9c
 8012400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012404:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8012406:	9303      	str	r3, [sp, #12]
 8012408:	9b05      	ldr	r3, [sp, #20]
 801240a:	441c      	add	r4, r3
 801240c:	9b06      	ldr	r3, [sp, #24]
 801240e:	441e      	add	r6, r3
 8012410:	e9cd 7600 	strd	r7, r6, [sp]
 8012414:	b2a4      	uxth	r4, r4
 8012416:	9402      	str	r4, [sp, #8]
 8012418:	2301      	movs	r3, #1
 801241a:	e7dd      	b.n	80123d8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 801241c:	e9cd 3306 	strd	r3, r3, [sp, #24]
 8012420:	9305      	str	r3, [sp, #20]
 8012422:	461e      	mov	r6, r3
 8012424:	461f      	mov	r7, r3
 8012426:	469b      	mov	fp, r3
 8012428:	461c      	mov	r4, r3
 801242a:	9308      	str	r3, [sp, #32]
 801242c:	469a      	mov	sl, r3
 801242e:	9b06      	ldr	r3, [sp, #24]
 8012430:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8012432:	4293      	cmp	r3, r2
 8012434:	f280 814e 	bge.w	80126d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8012438:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801243c:	459a      	cmp	sl, r3
 801243e:	d006      	beq.n	801244e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ee>
 8012440:	9b08      	ldr	r3, [sp, #32]
 8012442:	f242 020b 	movw	r2, #8203	; 0x200b
 8012446:	4592      	cmp	sl, r2
 8012448:	bf18      	it	ne
 801244a:	4653      	movne	r3, sl
 801244c:	9308      	str	r3, [sp, #32]
 801244e:	4642      	mov	r2, r8
 8012450:	ab0c      	add	r3, sp, #48	; 0x30
 8012452:	9909      	ldr	r1, [sp, #36]	; 0x24
 8012454:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8012456:	f003 fbf9 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801245a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801245c:	4682      	mov	sl, r0
 801245e:	2a00      	cmp	r2, #0
 8012460:	d067      	beq.n	8012532 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d2>
 8012462:	7b53      	ldrb	r3, [r2, #13]
 8012464:	9908      	ldr	r1, [sp, #32]
 8012466:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 801246a:	005b      	lsls	r3, r3, #1
 801246c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012470:	7a93      	ldrb	r3, [r2, #10]
 8012472:	ea43 0500 	orr.w	r5, r3, r0
 8012476:	f8d8 3000 	ldr.w	r3, [r8]
 801247a:	4640      	mov	r0, r8
 801247c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801247e:	4798      	blx	r3
 8012480:	4428      	add	r0, r5
 8012482:	b285      	uxth	r5, r0
 8012484:	f1ba 0f00 	cmp.w	sl, #0
 8012488:	f000 8124 	beq.w	80126d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 801248c:	f1ba 0f0a 	cmp.w	sl, #10
 8012490:	f000 8120 	beq.w	80126d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8012494:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 8012498:	b29b      	uxth	r3, r3
 801249a:	f02a 0220 	bic.w	r2, sl, #32
 801249e:	2b01      	cmp	r3, #1
 80124a0:	b292      	uxth	r2, r2
 80124a2:	d948      	bls.n	8012536 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 80124a4:	2a5b      	cmp	r2, #91	; 0x5b
 80124a6:	d046      	beq.n	8012536 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 80124a8:	2a5d      	cmp	r2, #93	; 0x5d
 80124aa:	d044      	beq.n	8012536 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 80124ac:	f02a 0102 	bic.w	r1, sl, #2
 80124b0:	b289      	uxth	r1, r1
 80124b2:	f1a1 033c 	sub.w	r3, r1, #60	; 0x3c
 80124b6:	4259      	negs	r1, r3
 80124b8:	4159      	adcs	r1, r3
 80124ba:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 80124be:	b29b      	uxth	r3, r3
 80124c0:	2b09      	cmp	r3, #9
 80124c2:	d93a      	bls.n	801253a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3da>
 80124c4:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 80124c8:	b29b      	uxth	r3, r3
 80124ca:	2b09      	cmp	r3, #9
 80124cc:	bf8c      	ite	hi
 80124ce:	2300      	movhi	r3, #0
 80124d0:	2301      	movls	r3, #1
 80124d2:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 80124d6:	b280      	uxth	r0, r0
 80124d8:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 80124dc:	d306      	bcc.n	80124ec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 80124de:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 80124e2:	b280      	uxth	r0, r0
 80124e4:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 80124e8:	d300      	bcc.n	80124ec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 80124ea:	b109      	cbz	r1, 80124f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x390>
 80124ec:	f083 0101 	eor.w	r1, r3, #1
 80124f0:	f64f 60ff 	movw	r0, #65279	; 0xfeff
 80124f4:	4582      	cmp	sl, r0
 80124f6:	d022      	beq.n	801253e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3de>
 80124f8:	f242 000b 	movw	r0, #8203	; 0x200b
 80124fc:	ebaa 0c00 	sub.w	ip, sl, r0
 8012500:	f1dc 0000 	rsbs	r0, ip, #0
 8012504:	eb40 000c 	adc.w	r0, r0, ip
 8012508:	3a41      	subs	r2, #65	; 0x41
 801250a:	2a19      	cmp	r2, #25
 801250c:	d909      	bls.n	8012522 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c2>
 801250e:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 8012512:	f240 811f 	bls.w	8012754 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8012516:	2900      	cmp	r1, #0
 8012518:	f040 811c 	bne.w	8012754 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 801251c:	2800      	cmp	r0, #0
 801251e:	f040 8119 	bne.w	8012754 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8012522:	2f07      	cmp	r7, #7
 8012524:	d815      	bhi.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8012526:	e8df f007 	tbb	[pc, r7]
 801252a:	141e      	.short	0x141e
 801252c:	7c501432 	.word	0x7c501432
 8012530:	ac60      	.short	0xac60
 8012532:	4615      	mov	r5, r2
 8012534:	e7a6      	b.n	8012484 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x324>
 8012536:	2101      	movs	r1, #1
 8012538:	e7bf      	b.n	80124ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x35a>
 801253a:	2301      	movs	r3, #1
 801253c:	e7c9      	b.n	80124d2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x372>
 801253e:	2001      	movs	r0, #1
 8012540:	e7e2      	b.n	8012508 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3a8>
 8012542:	2200      	movs	r2, #0
 8012544:	462c      	mov	r4, r5
 8012546:	2601      	movs	r6, #1
 8012548:	b9fb      	cbnz	r3, 801258a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 801254a:	2a00      	cmp	r2, #0
 801254c:	bf0c      	ite	eq
 801254e:	2702      	moveq	r7, #2
 8012550:	2706      	movne	r7, #6
 8012552:	9b07      	ldr	r3, [sp, #28]
 8012554:	2f02      	cmp	r7, #2
 8012556:	bf08      	it	eq
 8012558:	f043 0301 	orreq.w	r3, r3, #1
 801255c:	9307      	str	r3, [sp, #28]
 801255e:	9b06      	ldr	r3, [sp, #24]
 8012560:	3301      	adds	r3, #1
 8012562:	9306      	str	r3, [sp, #24]
 8012564:	e763      	b.n	801242e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ce>
 8012566:	2201      	movs	r2, #1
 8012568:	e7ec      	b.n	8012544 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3e4>
 801256a:	2200      	movs	r2, #0
 801256c:	b18b      	cbz	r3, 8012592 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x432>
 801256e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8012570:	9601      	str	r6, [sp, #4]
 8012572:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8012576:	ab0d      	add	r3, sp, #52	; 0x34
 8012578:	9300      	str	r3, [sp, #0]
 801257a:	4642      	mov	r2, r8
 801257c:	2301      	movs	r3, #1
 801257e:	4649      	mov	r1, r9
 8012580:	9804      	ldr	r0, [sp, #16]
 8012582:	f7ff fd84 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8012586:	462c      	mov	r4, r5
 8012588:	2601      	movs	r6, #1
 801258a:	2704      	movs	r7, #4
 801258c:	e7e1      	b.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 801258e:	2201      	movs	r2, #1
 8012590:	e7ec      	b.n	801256c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x40c>
 8012592:	b17a      	cbz	r2, 80125b4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x454>
 8012594:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8012596:	9601      	str	r6, [sp, #4]
 8012598:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801259c:	ab0d      	add	r3, sp, #52	; 0x34
 801259e:	9300      	str	r3, [sp, #0]
 80125a0:	2301      	movs	r3, #1
 80125a2:	4642      	mov	r2, r8
 80125a4:	4649      	mov	r1, r9
 80125a6:	9804      	ldr	r0, [sp, #16]
 80125a8:	f7ff fd71 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80125ac:	462c      	mov	r4, r5
 80125ae:	2601      	movs	r6, #1
 80125b0:	2706      	movs	r7, #6
 80125b2:	e7ce      	b.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 80125b4:	3601      	adds	r6, #1
 80125b6:	442c      	add	r4, r5
 80125b8:	b2a4      	uxth	r4, r4
 80125ba:	2702      	movs	r7, #2
 80125bc:	e7c9      	b.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 80125be:	2200      	movs	r2, #0
 80125c0:	b12b      	cbz	r3, 80125ce <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x46e>
 80125c2:	3601      	adds	r6, #1
 80125c4:	442c      	add	r4, r5
 80125c6:	b2a4      	uxth	r4, r4
 80125c8:	e7df      	b.n	801258a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 80125ca:	2201      	movs	r2, #1
 80125cc:	e7f8      	b.n	80125c0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x460>
 80125ce:	f02a 0302 	bic.w	r3, sl, #2
 80125d2:	b29b      	uxth	r3, r3
 80125d4:	2b2c      	cmp	r3, #44	; 0x2c
 80125d6:	d06f      	beq.n	80126b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 80125d8:	f1ba 0f3a 	cmp.w	sl, #58	; 0x3a
 80125dc:	d06c      	beq.n	80126b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 80125de:	f2aa 636b 	subw	r3, sl, #1643	; 0x66b
 80125e2:	b29b      	uxth	r3, r3
 80125e4:	2b01      	cmp	r3, #1
 80125e6:	d967      	bls.n	80126b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 80125e8:	b11a      	cbz	r2, 80125f2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x492>
 80125ea:	3601      	adds	r6, #1
 80125ec:	442c      	add	r4, r5
 80125ee:	b2a4      	uxth	r4, r4
 80125f0:	e7de      	b.n	80125b0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x450>
 80125f2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80125f4:	9601      	str	r6, [sp, #4]
 80125f6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80125fa:	ab0d      	add	r3, sp, #52	; 0x34
 80125fc:	9300      	str	r3, [sp, #0]
 80125fe:	4613      	mov	r3, r2
 8012600:	4642      	mov	r2, r8
 8012602:	4649      	mov	r1, r9
 8012604:	9804      	ldr	r0, [sp, #16]
 8012606:	f7ff fd42 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801260a:	462c      	mov	r4, r5
 801260c:	2601      	movs	r6, #1
 801260e:	e7d4      	b.n	80125ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8012610:	2200      	movs	r2, #0
 8012612:	b143      	cbz	r3, 8012626 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4c6>
 8012614:	9b05      	ldr	r3, [sp, #20]
 8012616:	445c      	add	r4, fp
 8012618:	3301      	adds	r3, #1
 801261a:	441e      	add	r6, r3
 801261c:	fa15 f484 	uxtah	r4, r5, r4
 8012620:	e7d1      	b.n	80125c6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x466>
 8012622:	2201      	movs	r2, #1
 8012624:	e7f5      	b.n	8012612 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4b2>
 8012626:	af0d      	add	r7, sp, #52	; 0x34
 8012628:	b182      	cbz	r2, 801264c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4ec>
 801262a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801262c:	9804      	ldr	r0, [sp, #16]
 801262e:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8012632:	e9cd 7600 	strd	r7, r6, [sp]
 8012636:	4642      	mov	r2, r8
 8012638:	4649      	mov	r1, r9
 801263a:	f7ff fd28 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801263e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8012640:	e9cd b302 	strd	fp, r3, [sp, #8]
 8012644:	9b05      	ldr	r3, [sp, #20]
 8012646:	e9cd 7300 	strd	r7, r3, [sp]
 801264a:	e7a9      	b.n	80125a0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x440>
 801264c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801264e:	9804      	ldr	r0, [sp, #16]
 8012650:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8012654:	e9cd 7600 	strd	r7, r6, [sp]
 8012658:	4613      	mov	r3, r2
 801265a:	4649      	mov	r1, r9
 801265c:	4642      	mov	r2, r8
 801265e:	f7ff fd16 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8012662:	9b05      	ldr	r3, [sp, #20]
 8012664:	eb0b 0405 	add.w	r4, fp, r5
 8012668:	1c5e      	adds	r6, r3, #1
 801266a:	e7a5      	b.n	80125b8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x458>
 801266c:	2b00      	cmp	r3, #0
 801266e:	d1bc      	bne.n	80125ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48a>
 8012670:	b339      	cbz	r1, 80126c2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x562>
 8012672:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8012674:	9601      	str	r6, [sp, #4]
 8012676:	e9cd 4202 	strd	r4, r2, [sp, #8]
 801267a:	aa0d      	add	r2, sp, #52	; 0x34
 801267c:	9200      	str	r2, [sp, #0]
 801267e:	e7bf      	b.n	8012600 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a0>
 8012680:	b133      	cbz	r3, 8012690 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x530>
 8012682:	9b05      	ldr	r3, [sp, #20]
 8012684:	445c      	add	r4, fp
 8012686:	3301      	adds	r3, #1
 8012688:	441e      	add	r6, r3
 801268a:	fa15 f484 	uxtah	r4, r5, r4
 801268e:	e7ae      	b.n	80125ee <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48e>
 8012690:	9a05      	ldr	r2, [sp, #20]
 8012692:	445d      	add	r5, fp
 8012694:	3201      	adds	r2, #1
 8012696:	920a      	str	r2, [sp, #40]	; 0x28
 8012698:	b2ad      	uxth	r5, r5
 801269a:	b1b9      	cbz	r1, 80126cc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x56c>
 801269c:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801269e:	9601      	str	r6, [sp, #4]
 80126a0:	e9cd 4202 	strd	r4, r2, [sp, #8]
 80126a4:	aa0d      	add	r2, sp, #52	; 0x34
 80126a6:	9200      	str	r2, [sp, #0]
 80126a8:	4649      	mov	r1, r9
 80126aa:	4642      	mov	r2, r8
 80126ac:	9804      	ldr	r0, [sp, #16]
 80126ae:	f7ff fcee 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80126b2:	462c      	mov	r4, r5
 80126b4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80126b6:	e780      	b.n	80125ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 80126b8:	2301      	movs	r3, #1
 80126ba:	46ab      	mov	fp, r5
 80126bc:	9305      	str	r3, [sp, #20]
 80126be:	2705      	movs	r7, #5
 80126c0:	e747      	b.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 80126c2:	2301      	movs	r3, #1
 80126c4:	46ab      	mov	fp, r5
 80126c6:	9305      	str	r3, [sp, #20]
 80126c8:	2707      	movs	r7, #7
 80126ca:	e742      	b.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 80126cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80126ce:	9305      	str	r3, [sp, #20]
 80126d0:	46ab      	mov	fp, r5
 80126d2:	e73e      	b.n	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 80126d4:	2f02      	cmp	r7, #2
 80126d6:	f43f ae60 	beq.w	801239a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x23a>
 80126da:	f007 0705 	and.w	r7, r7, #5
 80126de:	2f04      	cmp	r7, #4
 80126e0:	f43f ae52 	beq.w	8012388 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x228>
 80126e4:	2f05      	cmp	r7, #5
 80126e6:	f47f ae7c 	bne.w	80123e2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 80126ea:	9b07      	ldr	r3, [sp, #28]
 80126ec:	ad0d      	add	r5, sp, #52	; 0x34
 80126ee:	b18b      	cbz	r3, 8012714 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5b4>
 80126f0:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80126f2:	9804      	ldr	r0, [sp, #16]
 80126f4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80126f8:	e9cd 5600 	strd	r5, r6, [sp]
 80126fc:	2300      	movs	r3, #0
 80126fe:	4642      	mov	r2, r8
 8012700:	4649      	mov	r1, r9
 8012702:	f7ff fcc4 	bl	801208e <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8012706:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8012708:	e9cd b302 	strd	fp, r3, [sp, #8]
 801270c:	9b05      	ldr	r3, [sp, #20]
 801270e:	e9cd 5300 	strd	r5, r3, [sp]
 8012712:	e681      	b.n	8012418 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8012714:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8012716:	9303      	str	r3, [sp, #12]
 8012718:	9b05      	ldr	r3, [sp, #20]
 801271a:	445c      	add	r4, fp
 801271c:	441e      	add	r6, r3
 801271e:	b2a4      	uxth	r4, r4
 8012720:	9402      	str	r4, [sp, #8]
 8012722:	e9cd 5600 	strd	r5, r6, [sp]
 8012726:	9b07      	ldr	r3, [sp, #28]
 8012728:	e656      	b.n	80123d8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 801272a:	2b00      	cmp	r3, #0
 801272c:	f47f adbf 	bne.w	80122ae <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14e>
 8012730:	2a00      	cmp	r2, #0
 8012732:	f47f adab 	bne.w	801228c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 8012736:	2f03      	cmp	r7, #3
 8012738:	f63f adef 	bhi.w	801231a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 801273c:	a301      	add	r3, pc, #4	; (adr r3, 8012744 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5e4>)
 801273e:	f853 f027 	ldr.w	pc, [r3, r7, lsl #2]
 8012742:	bf00      	nop
 8012744:	080122bb 	.word	0x080122bb
 8012748:	080122c5 	.word	0x080122c5
 801274c:	0801230d 	.word	0x0801230d
 8012750:	08012343 	.word	0x08012343
 8012754:	2f07      	cmp	r7, #7
 8012756:	f63f aefc 	bhi.w	8012552 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 801275a:	a201      	add	r2, pc, #4	; (adr r2, 8012760 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x600>)
 801275c:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 8012760:	08012543 	.word	0x08012543
 8012764:	08012553 	.word	0x08012553
 8012768:	0801256b 	.word	0x0801256b
 801276c:	08012553 	.word	0x08012553
 8012770:	080125bf 	.word	0x080125bf
 8012774:	08012611 	.word	0x08012611
 8012778:	0801266d 	.word	0x0801266d
 801277c:	08012681 	.word	0x08012681

08012780 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8012780:	b530      	push	{r4, r5, lr}
 8012782:	8a44      	ldrh	r4, [r0, #18]
 8012784:	8ac5      	ldrh	r5, [r0, #22]
 8012786:	82c3      	strh	r3, [r0, #22]
 8012788:	442c      	add	r4, r5
 801278a:	1ae4      	subs	r4, r4, r3
 801278c:	8244      	strh	r4, [r0, #18]
 801278e:	8b03      	ldrh	r3, [r0, #24]
 8012790:	8a84      	ldrh	r4, [r0, #20]
 8012792:	4422      	add	r2, r4
 8012794:	440c      	add	r4, r1
 8012796:	1a59      	subs	r1, r3, r1
 8012798:	8342      	strh	r2, [r0, #26]
 801279a:	8284      	strh	r4, [r0, #20]
 801279c:	8301      	strh	r1, [r0, #24]
 801279e:	bd30      	pop	{r4, r5, pc}

080127a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 80127a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127a4:	7a43      	ldrb	r3, [r0, #9]
 80127a6:	1eda      	subs	r2, r3, #3
 80127a8:	b087      	sub	sp, #28
 80127aa:	4604      	mov	r4, r0
 80127ac:	b2d2      	uxtb	r2, r2
 80127ae:	460f      	mov	r7, r1
 80127b0:	2900      	cmp	r1, #0
 80127b2:	d036      	beq.n	8012822 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80127b4:	2a01      	cmp	r2, #1
 80127b6:	d932      	bls.n	801281e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80127b8:	1e58      	subs	r0, r3, #1
 80127ba:	f1d0 0b00 	rsbs	fp, r0, #0
 80127be:	eb4b 0b00 	adc.w	fp, fp, r0
 80127c2:	1e99      	subs	r1, r3, #2
 80127c4:	424b      	negs	r3, r1
 80127c6:	414b      	adcs	r3, r1
 80127c8:	9303      	str	r3, [sp, #12]
 80127ca:	2300      	movs	r3, #0
 80127cc:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80127d0:	2500      	movs	r5, #0
 80127d2:	8265      	strh	r5, [r4, #18]
 80127d4:	82a5      	strh	r5, [r4, #20]
 80127d6:	46a9      	mov	r9, r5
 80127d8:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80127dc:	2300      	movs	r3, #0
 80127de:	9305      	str	r3, [sp, #20]
 80127e0:	8823      	ldrh	r3, [r4, #0]
 80127e2:	2b20      	cmp	r3, #32
 80127e4:	d02b      	beq.n	801283e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80127e6:	eba3 020a 	sub.w	r2, r3, sl
 80127ea:	4256      	negs	r6, r2
 80127ec:	4156      	adcs	r6, r2
 80127ee:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80127f2:	4293      	cmp	r3, r2
 80127f4:	d004      	beq.n	8012800 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80127f6:	4553      	cmp	r3, sl
 80127f8:	bf16      	itet	ne
 80127fa:	4699      	movne	r9, r3
 80127fc:	2601      	moveq	r6, #1
 80127fe:	2600      	movne	r6, #0
 8012800:	ab05      	add	r3, sp, #20
 8012802:	68e2      	ldr	r2, [r4, #12]
 8012804:	7a21      	ldrb	r1, [r4, #8]
 8012806:	6860      	ldr	r0, [r4, #4]
 8012808:	f003 fa20 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801280c:	8020      	strh	r0, [r4, #0]
 801280e:	b9c8      	cbnz	r0, 8012844 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8012810:	8b22      	ldrh	r2, [r4, #24]
 8012812:	2300      	movs	r3, #0
 8012814:	4611      	mov	r1, r2
 8012816:	4620      	mov	r0, r4
 8012818:	f7ff ffb2 	bl	8012780 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801281c:	e066      	b.n	80128ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801281e:	468b      	mov	fp, r1
 8012820:	e7cf      	b.n	80127c2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8012822:	3b01      	subs	r3, #1
 8012824:	2a01      	cmp	r2, #1
 8012826:	bf8c      	ite	hi
 8012828:	2200      	movhi	r2, #0
 801282a:	2201      	movls	r2, #1
 801282c:	2b01      	cmp	r3, #1
 801282e:	bf8c      	ite	hi
 8012830:	2300      	movhi	r3, #0
 8012832:	2301      	movls	r3, #1
 8012834:	9202      	str	r2, [sp, #8]
 8012836:	9301      	str	r3, [sp, #4]
 8012838:	9103      	str	r1, [sp, #12]
 801283a:	468b      	mov	fp, r1
 801283c:	e7c8      	b.n	80127d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801283e:	4699      	mov	r9, r3
 8012840:	2601      	movs	r6, #1
 8012842:	e7dd      	b.n	8012800 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8012844:	8ae3      	ldrh	r3, [r4, #22]
 8012846:	280a      	cmp	r0, #10
 8012848:	f103 0301 	add.w	r3, r3, #1
 801284c:	82e3      	strh	r3, [r4, #22]
 801284e:	d0df      	beq.n	8012810 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8012850:	9a05      	ldr	r2, [sp, #20]
 8012852:	bb42      	cbnz	r2, 80128a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8012854:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012858:	4298      	cmp	r0, r3
 801285a:	d001      	beq.n	8012860 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801285c:	4550      	cmp	r0, sl
 801285e:	d1bd      	bne.n	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8012860:	8823      	ldrh	r3, [r4, #0]
 8012862:	8b21      	ldrh	r1, [r4, #24]
 8012864:	2b20      	cmp	r3, #32
 8012866:	d001      	beq.n	801286c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8012868:	4553      	cmp	r3, sl
 801286a:	d131      	bne.n	80128d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801286c:	2e00      	cmp	r6, #0
 801286e:	bf0a      	itet	eq
 8012870:	460d      	moveq	r5, r1
 8012872:	4630      	movne	r0, r6
 8012874:	2001      	moveq	r0, #1
 8012876:	440a      	add	r2, r1
 8012878:	8aa3      	ldrh	r3, [r4, #20]
 801287a:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801287e:	b292      	uxth	r2, r2
 8012880:	8322      	strh	r2, [r4, #24]
 8012882:	4413      	add	r3, r2
 8012884:	2f00      	cmp	r7, #0
 8012886:	d03a      	beq.n	80128fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8012888:	f1bb 0f00 	cmp.w	fp, #0
 801288c:	d102      	bne.n	8012894 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801288e:	9903      	ldr	r1, [sp, #12]
 8012890:	b301      	cbz	r1, 80128d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8012892:	b1f8      	cbz	r0, 80128d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8012894:	8ba1      	ldrh	r1, [r4, #28]
 8012896:	4419      	add	r1, r3
 8012898:	458c      	cmp	ip, r1
 801289a:	da2a      	bge.n	80128f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801289c:	8a61      	ldrh	r1, [r4, #18]
 801289e:	b341      	cbz	r1, 80128f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80128a0:	4563      	cmp	r3, ip
 80128a2:	dd9b      	ble.n	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80128a4:	e01c      	b.n	80128e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 80128a6:	8893      	ldrh	r3, [r2, #4]
 80128a8:	8023      	strh	r3, [r4, #0]
 80128aa:	f892 800d 	ldrb.w	r8, [r2, #13]
 80128ae:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80128b2:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80128b6:	f892 800a 	ldrb.w	r8, [r2, #10]
 80128ba:	ea48 0800 	orr.w	r8, r8, r0
 80128be:	68e0      	ldr	r0, [r4, #12]
 80128c0:	6803      	ldr	r3, [r0, #0]
 80128c2:	4649      	mov	r1, r9
 80128c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80128c6:	4798      	blx	r3
 80128c8:	eb08 0200 	add.w	r2, r8, r0
 80128cc:	b292      	uxth	r2, r2
 80128ce:	e7c7      	b.n	8012860 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80128d0:	2000      	movs	r0, #0
 80128d2:	e7d0      	b.n	8012876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80128d4:	4563      	cmp	r3, ip
 80128d6:	dd81      	ble.n	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80128d8:	8a63      	ldrh	r3, [r4, #18]
 80128da:	2b00      	cmp	r3, #0
 80128dc:	f43f af7e 	beq.w	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80128e0:	2301      	movs	r3, #1
 80128e2:	77a3      	strb	r3, [r4, #30]
 80128e4:	8ba2      	ldrh	r2, [r4, #28]
 80128e6:	8b63      	ldrh	r3, [r4, #26]
 80128e8:	4413      	add	r3, r2
 80128ea:	8363      	strh	r3, [r4, #26]
 80128ec:	b007      	add	sp, #28
 80128ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128f2:	2300      	movs	r3, #0
 80128f4:	4611      	mov	r1, r2
 80128f6:	4620      	mov	r0, r4
 80128f8:	f7ff ff42 	bl	8012780 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80128fc:	e76e      	b.n	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80128fe:	4563      	cmp	r3, ip
 8012900:	dd14      	ble.n	801292c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8012902:	9b02      	ldr	r3, [sp, #8]
 8012904:	b113      	cbz	r3, 801290c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8012906:	2301      	movs	r3, #1
 8012908:	460a      	mov	r2, r1
 801290a:	e783      	b.n	8012814 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801290c:	9b01      	ldr	r3, [sp, #4]
 801290e:	2b00      	cmp	r3, #0
 8012910:	f43f af64 	beq.w	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8012914:	2800      	cmp	r0, #0
 8012916:	f47f af61 	bne.w	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801291a:	b116      	cbz	r6, 8012922 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801291c:	2301      	movs	r3, #1
 801291e:	462a      	mov	r2, r5
 8012920:	e779      	b.n	8012816 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8012922:	8a63      	ldrh	r3, [r4, #18]
 8012924:	2b00      	cmp	r3, #0
 8012926:	f43f af59 	beq.w	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801292a:	e7df      	b.n	80128ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801292c:	2800      	cmp	r0, #0
 801292e:	f47f af55 	bne.w	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8012932:	2e00      	cmp	r6, #0
 8012934:	f43f af52 	beq.w	80127dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8012938:	2301      	movs	r3, #1
 801293a:	462a      	mov	r2, r5
 801293c:	e7db      	b.n	80128f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801293e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801293e:	b530      	push	{r4, r5, lr}
 8012940:	4605      	mov	r5, r0
 8012942:	b08b      	sub	sp, #44	; 0x2c
 8012944:	b191      	cbz	r1, 801296c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8012946:	e9cd 3100 	strd	r3, r1, [sp]
 801294a:	4613      	mov	r3, r2
 801294c:	4601      	mov	r1, r0
 801294e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8012952:	a802      	add	r0, sp, #8
 8012954:	f7ff f994 	bl	8011c80 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8012958:	2401      	movs	r4, #1
 801295a:	2100      	movs	r1, #0
 801295c:	a802      	add	r0, sp, #8
 801295e:	f7ff ff1f 	bl	80127a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8012962:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012966:	b163      	cbz	r3, 8012982 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8012968:	3401      	adds	r4, #1
 801296a:	e7f6      	b.n	801295a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801296c:	f003 fa68 	bl	8015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012970:	2401      	movs	r4, #1
 8012972:	280a      	cmp	r0, #10
 8012974:	4628      	mov	r0, r5
 8012976:	bf08      	it	eq
 8012978:	3401      	addeq	r4, #1
 801297a:	f003 fa61 	bl	8015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801297e:	2800      	cmp	r0, #0
 8012980:	d1f7      	bne.n	8012972 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8012982:	b2a0      	uxth	r0, r4
 8012984:	b00b      	add	sp, #44	; 0x2c
 8012986:	bd30      	pop	{r4, r5, pc}

08012988 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8012988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801298c:	b0e9      	sub	sp, #420	; 0x1a4
 801298e:	468b      	mov	fp, r1
 8012990:	f8dd a1c8 	ldr.w	sl, [sp, #456]	; 0x1c8
 8012994:	9007      	str	r0, [sp, #28]
 8012996:	461c      	mov	r4, r3
 8012998:	f1ba 0f00 	cmp.w	sl, #0
 801299c:	f000 80cd 	beq.w	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80129a0:	681b      	ldr	r3, [r3, #0]
 80129a2:	2b00      	cmp	r3, #0
 80129a4:	f000 80c9 	beq.w	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80129a8:	7ba3      	ldrb	r3, [r4, #14]
 80129aa:	2b00      	cmp	r3, #0
 80129ac:	f000 80c5 	beq.w	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80129b0:	6810      	ldr	r0, [r2, #0]
 80129b2:	6851      	ldr	r1, [r2, #4]
 80129b4:	f9bb 2004 	ldrsh.w	r2, [fp, #4]
 80129b8:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 80129bc:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80129c0:	464b      	mov	r3, r9
 80129c2:	c303      	stmia	r3!, {r0, r1}
 80129c4:	79a2      	ldrb	r2, [r4, #6]
 80129c6:	f9bb 3006 	ldrsh.w	r3, [fp, #6]
 80129ca:	7967      	ldrb	r7, [r4, #5]
 80129cc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80129d0:	a90e      	add	r1, sp, #56	; 0x38
 80129d2:	4648      	mov	r0, r9
 80129d4:	2500      	movs	r5, #0
 80129d6:	950e      	str	r5, [sp, #56]	; 0x38
 80129d8:	f7ff f9c8 	bl	8011d6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80129dc:	a90e      	add	r1, sp, #56	; 0x38
 80129de:	79a2      	ldrb	r2, [r4, #6]
 80129e0:	4608      	mov	r0, r1
 80129e2:	f7ff f9c3 	bl	8011d6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80129e6:	2f00      	cmp	r7, #0
 80129e8:	d16a      	bne.n	8012ac0 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80129ea:	f894 8004 	ldrb.w	r8, [r4, #4]
 80129ee:	ebb8 0805 	subs.w	r8, r8, r5
 80129f2:	bf18      	it	ne
 80129f4:	f04f 0801 	movne.w	r8, #1
 80129f8:	f8cd 8014 	str.w	r8, [sp, #20]
 80129fc:	a81d      	add	r0, sp, #116	; 0x74
 80129fe:	f002 f92a 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 8012a02:	6820      	ldr	r0, [r4, #0]
 8012a04:	6803      	ldr	r3, [r0, #0]
 8012a06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012a08:	4798      	blx	r3
 8012a0a:	4605      	mov	r5, r0
 8012a0c:	6820      	ldr	r0, [r4, #0]
 8012a0e:	6803      	ldr	r3, [r0, #0]
 8012a10:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012a12:	4798      	blx	r3
 8012a14:	462b      	mov	r3, r5
 8012a16:	9000      	str	r0, [sp, #0]
 8012a18:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8012a1a:	4651      	mov	r1, sl
 8012a1c:	a81d      	add	r0, sp, #116	; 0x74
 8012a1e:	f002 f985 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012a22:	6820      	ldr	r0, [r4, #0]
 8012a24:	6803      	ldr	r3, [r0, #0]
 8012a26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012a28:	4798      	blx	r3
 8012a2a:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8012a2e:	182e      	adds	r6, r5, r0
 8012a30:	2e00      	cmp	r6, #0
 8012a32:	dd51      	ble.n	8012ad8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 8012a34:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8012a38:	4283      	cmp	r3, r0
 8012a3a:	db4d      	blt.n	8012ad8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 8012a3c:	441d      	add	r5, r3
 8012a3e:	fb95 f5f6 	sdiv	r5, r5, r6
 8012a42:	a836      	add	r0, sp, #216	; 0xd8
 8012a44:	f002 f907 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 8012a48:	7c23      	ldrb	r3, [r4, #16]
 8012a4a:	b17b      	cbz	r3, 8012a6c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xe4>
 8012a4c:	6820      	ldr	r0, [r4, #0]
 8012a4e:	6803      	ldr	r3, [r0, #0]
 8012a50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012a52:	4798      	blx	r3
 8012a54:	9006      	str	r0, [sp, #24]
 8012a56:	6820      	ldr	r0, [r4, #0]
 8012a58:	6802      	ldr	r2, [r0, #0]
 8012a5a:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8012a5c:	4790      	blx	r2
 8012a5e:	9b06      	ldr	r3, [sp, #24]
 8012a60:	9000      	str	r0, [sp, #0]
 8012a62:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8012a64:	4651      	mov	r1, sl
 8012a66:	a836      	add	r0, sp, #216	; 0xd8
 8012a68:	f002 f960 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012a6c:	7be1      	ldrb	r1, [r4, #15]
 8012a6e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012a72:	7963      	ldrb	r3, [r4, #5]
 8012a74:	1a52      	subs	r2, r2, r1
 8012a76:	7c21      	ldrb	r1, [r4, #16]
 8012a78:	9101      	str	r1, [sp, #4]
 8012a7a:	f10d 0a54 	add.w	sl, sp, #84	; 0x54
 8012a7e:	6821      	ldr	r1, [r4, #0]
 8012a80:	9100      	str	r1, [sp, #0]
 8012a82:	b292      	uxth	r2, r2
 8012a84:	a936      	add	r1, sp, #216	; 0xd8
 8012a86:	4650      	mov	r0, sl
 8012a88:	f7ff f8fa 	bl	8011c80 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8012a8c:	7c23      	ldrb	r3, [r4, #16]
 8012a8e:	bb2b      	cbnz	r3, 8012adc <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x154>
 8012a90:	fa1f fa86 	uxth.w	sl, r6
 8012a94:	2d00      	cmp	r5, #0
 8012a96:	dd53      	ble.n	8012b40 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8012a98:	a81d      	add	r0, sp, #116	; 0x74
 8012a9a:	f003 f9d1 	bl	8015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012a9e:	2800      	cmp	r0, #0
 8012aa0:	d04b      	beq.n	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8012aa2:	280a      	cmp	r0, #10
 8012aa4:	d1f6      	bne.n	8012a94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 8012aa6:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8012aaa:	4453      	add	r3, sl
 8012aac:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8012ab0:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8012ab4:	eba3 030a 	sub.w	r3, r3, sl
 8012ab8:	3d01      	subs	r5, #1
 8012aba:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8012abe:	e7e9      	b.n	8012a94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 8012ac0:	2f01      	cmp	r7, #1
 8012ac2:	d107      	bne.n	8012ad4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14c>
 8012ac4:	7923      	ldrb	r3, [r4, #4]
 8012ac6:	3b02      	subs	r3, #2
 8012ac8:	bf18      	it	ne
 8012aca:	2301      	movne	r3, #1
 8012acc:	9305      	str	r3, [sp, #20]
 8012ace:	f04f 0801 	mov.w	r8, #1
 8012ad2:	e793      	b.n	80129fc <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x74>
 8012ad4:	9505      	str	r5, [sp, #20]
 8012ad6:	e7fa      	b.n	8012ace <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x146>
 8012ad8:	2500      	movs	r5, #0
 8012ada:	e7b2      	b.n	8012a42 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 8012adc:	0073      	lsls	r3, r6, #1
 8012ade:	9306      	str	r3, [sp, #24]
 8012ae0:	2d00      	cmp	r5, #0
 8012ae2:	dd2d      	ble.n	8012b40 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8012ae4:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8012ae8:	9b06      	ldr	r3, [sp, #24]
 8012aea:	428b      	cmp	r3, r1
 8012aec:	bfd4      	ite	le
 8012aee:	2100      	movle	r1, #0
 8012af0:	2101      	movgt	r1, #1
 8012af2:	4650      	mov	r0, sl
 8012af4:	f7ff fe54 	bl	80127a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8012af8:	f8ba 3012 	ldrh.w	r3, [sl, #18]
 8012afc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012b00:	3b01      	subs	r3, #1
 8012b02:	b29b      	uxth	r3, r3
 8012b04:	4293      	cmp	r3, r2
 8012b06:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012b0a:	d006      	beq.n	8012b1a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x192>
 8012b0c:	4639      	mov	r1, r7
 8012b0e:	a81d      	add	r0, sp, #116	; 0x74
 8012b10:	f7f3 fe74 	bl	80067fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012b14:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8012b18:	e7f2      	b.n	8012b00 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x178>
 8012b1a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012b1e:	b2b3      	uxth	r3, r6
 8012b20:	441a      	add	r2, r3
 8012b22:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 8012b26:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 8012b2a:	1ad3      	subs	r3, r2, r3
 8012b2c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8012b30:	f8ba 3000 	ldrh.w	r3, [sl]
 8012b34:	3d01      	subs	r5, #1
 8012b36:	2b00      	cmp	r3, #0
 8012b38:	d1d2      	bne.n	8012ae0 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x158>
 8012b3a:	b069      	add	sp, #420	; 0x1a4
 8012b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b40:	2500      	movs	r5, #0
 8012b42:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8012b46:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8012b4a:	e9cd 5b10 	strd	r5, fp, [sp, #64]	; 0x40
 8012b4e:	e9cd 9413 	strd	r9, r4, [sp, #76]	; 0x4c
 8012b52:	0073      	lsls	r3, r6, #1
 8012b54:	9306      	str	r3, [sp, #24]
 8012b56:	f10d 0a74 	add.w	sl, sp, #116	; 0x74
 8012b5a:	7c23      	ldrb	r3, [r4, #16]
 8012b5c:	f8ad 502e 	strh.w	r5, [sp, #46]	; 0x2e
 8012b60:	b14b      	cbz	r3, 8012b76 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 8012b62:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8012b66:	9b06      	ldr	r3, [sp, #24]
 8012b68:	428b      	cmp	r3, r1
 8012b6a:	bfd4      	ite	le
 8012b6c:	2100      	movle	r1, #0
 8012b6e:	2101      	movgt	r1, #1
 8012b70:	a815      	add	r0, sp, #84	; 0x54
 8012b72:	f7ff fe15 	bl	80127a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8012b76:	f1b8 0f00 	cmp.w	r8, #0
 8012b7a:	d069      	beq.n	8012c50 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2c8>
 8012b7c:	9b05      	ldr	r3, [sp, #20]
 8012b7e:	2b00      	cmp	r3, #0
 8012b80:	d061      	beq.n	8012c46 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2be>
 8012b82:	7c23      	ldrb	r3, [r4, #16]
 8012b84:	b9c3      	cbnz	r3, 8012bb8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8012b86:	2264      	movs	r2, #100	; 0x64
 8012b88:	4651      	mov	r1, sl
 8012b8a:	a84f      	add	r0, sp, #316	; 0x13c
 8012b8c:	f010 fc54 	bl	8023438 <memcpy>
 8012b90:	463b      	mov	r3, r7
 8012b92:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012b96:	6821      	ldr	r1, [r4, #0]
 8012b98:	a84f      	add	r0, sp, #316	; 0x13c
 8012b9a:	f7ff f8ab 	bl	8011cf4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012b9e:	b200      	sxth	r0, r0
 8012ba0:	7922      	ldrb	r2, [r4, #4]
 8012ba2:	2f00      	cmp	r7, #0
 8012ba4:	d144      	bne.n	8012c30 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2a8>
 8012ba6:	2a01      	cmp	r2, #1
 8012ba8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012bac:	d107      	bne.n	8012bbe <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 8012bae:	1a1b      	subs	r3, r3, r0
 8012bb0:	2002      	movs	r0, #2
 8012bb2:	fb93 f3f0 	sdiv	r3, r3, r0
 8012bb6:	e005      	b.n	8012bc4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8012bb8:	f9bd 006e 	ldrsh.w	r0, [sp, #110]	; 0x6e
 8012bbc:	e7f0      	b.n	8012ba0 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8012bbe:	7be2      	ldrb	r2, [r4, #15]
 8012bc0:	1a9b      	subs	r3, r3, r2
 8012bc2:	1a1b      	subs	r3, r3, r0
 8012bc4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012bc8:	7c23      	ldrb	r3, [r4, #16]
 8012bca:	2b00      	cmp	r3, #0
 8012bcc:	d042      	beq.n	8012c54 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2cc>
 8012bce:	f8bd 2066 	ldrh.w	r2, [sp, #102]	; 0x66
 8012bd2:	f89d 3072 	ldrb.w	r3, [sp, #114]	; 0x72
 8012bd6:	9807      	ldr	r0, [sp, #28]
 8012bd8:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
 8012bdc:	e9cd 3b02 	strd	r3, fp, [sp, #8]
 8012be0:	e9cd a200 	strd	sl, r2, [sp]
 8012be4:	463b      	mov	r3, r7
 8012be6:	6822      	ldr	r2, [r4, #0]
 8012be8:	f10d 012e 	add.w	r1, sp, #46	; 0x2e
 8012bec:	f7ff fab8 	bl	8012160 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>
 8012bf0:	f8bb 3008 	ldrh.w	r3, [fp, #8]
 8012bf4:	b2b2      	uxth	r2, r6
 8012bf6:	4611      	mov	r1, r2
 8012bf8:	4413      	add	r3, r2
 8012bfa:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 8012bfe:	1a52      	subs	r2, r2, r1
 8012c00:	7c21      	ldrb	r1, [r4, #16]
 8012c02:	b21b      	sxth	r3, r3
 8012c04:	b212      	sxth	r2, r2
 8012c06:	f8ab 3008 	strh.w	r3, [fp, #8]
 8012c0a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 8012c0e:	b109      	cbz	r1, 8012c14 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x28c>
 8012c10:	42b2      	cmp	r2, r6
 8012c12:	db92      	blt.n	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8012c14:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 8012c18:	f8b9 1002 	ldrh.w	r1, [r9, #2]
 8012c1c:	440a      	add	r2, r1
 8012c1e:	b212      	sxth	r2, r2
 8012c20:	4293      	cmp	r3, r2
 8012c22:	dc8a      	bgt.n	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8012c24:	4650      	mov	r0, sl
 8012c26:	f002 f83d 	bl	8014ca4 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012c2a:	2800      	cmp	r0, #0
 8012c2c:	d095      	beq.n	8012b5a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 8012c2e:	e784      	b.n	8012b3a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8012c30:	2a01      	cmp	r2, #1
 8012c32:	d103      	bne.n	8012c3c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2b4>
 8012c34:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012c38:	4403      	add	r3, r0
 8012c3a:	e7b9      	b.n	8012bb0 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x228>
 8012c3c:	2a00      	cmp	r2, #0
 8012c3e:	d1c3      	bne.n	8012bc8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x240>
 8012c40:	7be3      	ldrb	r3, [r4, #15]
 8012c42:	4403      	add	r3, r0
 8012c44:	e7be      	b.n	8012bc4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8012c46:	7be2      	ldrb	r2, [r4, #15]
 8012c48:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012c4c:	1a9b      	subs	r3, r3, r2
 8012c4e:	e7b9      	b.n	8012bc4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8012c50:	7be3      	ldrb	r3, [r4, #15]
 8012c52:	e7b7      	b.n	8012bc4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8012c54:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012c58:	e7bd      	b.n	8012bd6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>

08012c5a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8012c5a:	b510      	push	{r4, lr}
 8012c5c:	2b02      	cmp	r3, #2
 8012c5e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012c62:	d00b      	beq.n	8012c7c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8012c64:	2b03      	cmp	r3, #3
 8012c66:	d00e      	beq.n	8012c86 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8012c68:	2b01      	cmp	r3, #1
 8012c6a:	d001      	beq.n	8012c70 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8012c6c:	1860      	adds	r0, r4, r1
 8012c6e:	bd10      	pop	{r4, pc}
 8012c70:	8880      	ldrh	r0, [r0, #4]
 8012c72:	4420      	add	r0, r4
 8012c74:	b200      	sxth	r0, r0
 8012c76:	1a80      	subs	r0, r0, r2
 8012c78:	3801      	subs	r0, #1
 8012c7a:	e7f8      	b.n	8012c6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8012c7c:	8880      	ldrh	r0, [r0, #4]
 8012c7e:	4420      	add	r0, r4
 8012c80:	b200      	sxth	r0, r0
 8012c82:	1a40      	subs	r0, r0, r1
 8012c84:	e7f8      	b.n	8012c78 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8012c86:	18a0      	adds	r0, r4, r2
 8012c88:	e7f1      	b.n	8012c6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08012c8a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8012c8a:	b510      	push	{r4, lr}
 8012c8c:	2b02      	cmp	r3, #2
 8012c8e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8012c92:	d006      	beq.n	8012ca2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8012c94:	2b03      	cmp	r3, #3
 8012c96:	d00a      	beq.n	8012cae <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8012c98:	2b01      	cmp	r3, #1
 8012c9a:	bf14      	ite	ne
 8012c9c:	18a0      	addne	r0, r4, r2
 8012c9e:	1860      	addeq	r0, r4, r1
 8012ca0:	bd10      	pop	{r4, pc}
 8012ca2:	88c0      	ldrh	r0, [r0, #6]
 8012ca4:	4420      	add	r0, r4
 8012ca6:	b200      	sxth	r0, r0
 8012ca8:	1a80      	subs	r0, r0, r2
 8012caa:	3801      	subs	r0, #1
 8012cac:	e7f8      	b.n	8012ca0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8012cae:	88c0      	ldrh	r0, [r0, #6]
 8012cb0:	4420      	add	r0, r4
 8012cb2:	b200      	sxth	r0, r0
 8012cb4:	1a40      	subs	r0, r0, r1
 8012cb6:	e7f8      	b.n	8012caa <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08012cb8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8012cb8:	4b01      	ldr	r3, [pc, #4]	; (8012cc0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8012cba:	2200      	movs	r2, #0
 8012cbc:	601a      	str	r2, [r3, #0]
 8012cbe:	4770      	bx	lr
 8012cc0:	20020094 	.word	0x20020094

08012cc4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8012cc4:	4603      	mov	r3, r0
 8012cc6:	b1c8      	cbz	r0, 8012cfc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8012cc8:	0c02      	lsrs	r2, r0, #16
 8012cca:	0412      	lsls	r2, r2, #16
 8012ccc:	b9a2      	cbnz	r2, 8012cf8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8012cce:	0403      	lsls	r3, r0, #16
 8012cd0:	2010      	movs	r0, #16
 8012cd2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012cd6:	bf04      	itt	eq
 8012cd8:	021b      	lsleq	r3, r3, #8
 8012cda:	3008      	addeq	r0, #8
 8012cdc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012ce0:	bf04      	itt	eq
 8012ce2:	011b      	lsleq	r3, r3, #4
 8012ce4:	3004      	addeq	r0, #4
 8012ce6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012cea:	bf04      	itt	eq
 8012cec:	009b      	lsleq	r3, r3, #2
 8012cee:	3002      	addeq	r0, #2
 8012cf0:	2b00      	cmp	r3, #0
 8012cf2:	db04      	blt.n	8012cfe <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8012cf4:	3001      	adds	r0, #1
 8012cf6:	4770      	bx	lr
 8012cf8:	2000      	movs	r0, #0
 8012cfa:	e7ea      	b.n	8012cd2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8012cfc:	2020      	movs	r0, #32
 8012cfe:	4770      	bx	lr

08012d00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8012d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d04:	b087      	sub	sp, #28
 8012d06:	4681      	mov	r9, r0
 8012d08:	4698      	mov	r8, r3
 8012d0a:	4610      	mov	r0, r2
 8012d0c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8012d10:	460d      	mov	r5, r1
 8012d12:	b981      	cbnz	r1, 8012d36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8012d14:	b14b      	cbz	r3, 8012d2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8012d16:	460b      	mov	r3, r1
 8012d18:	e9cd 4700 	strd	r4, r7, [sp]
 8012d1c:	464a      	mov	r2, r9
 8012d1e:	4641      	mov	r1, r8
 8012d20:	f7ff ffee 	bl	8012d00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012d24:	b007      	add	sp, #28
 8012d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d2a:	f04f 33ff 	mov.w	r3, #4294967295
 8012d2e:	603b      	str	r3, [r7, #0]
 8012d30:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012d34:	e7f6      	b.n	8012d24 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8012d36:	fa32 fa01 	lsrs.w	sl, r2, r1
 8012d3a:	d107      	bne.n	8012d4c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8012d3c:	fb09 f602 	mul.w	r6, r9, r2
 8012d40:	fbb6 f0f4 	udiv	r0, r6, r4
 8012d44:	fb04 6610 	mls	r6, r4, r0, r6
 8012d48:	603e      	str	r6, [r7, #0]
 8012d4a:	e7eb      	b.n	8012d24 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8012d4c:	2601      	movs	r6, #1
 8012d4e:	408e      	lsls	r6, r1
 8012d50:	3e01      	subs	r6, #1
 8012d52:	4016      	ands	r6, r2
 8012d54:	fa09 fb01 	lsl.w	fp, r9, r1
 8012d58:	4630      	mov	r0, r6
 8012d5a:	fbbb f3f4 	udiv	r3, fp, r4
 8012d5e:	9302      	str	r3, [sp, #8]
 8012d60:	fb0a f303 	mul.w	r3, sl, r3
 8012d64:	9303      	str	r3, [sp, #12]
 8012d66:	f7ff ffad 	bl	8012cc4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012d6a:	464a      	mov	r2, r9
 8012d6c:	460b      	mov	r3, r1
 8012d6e:	e9cd 4700 	strd	r4, r7, [sp]
 8012d72:	4601      	mov	r1, r0
 8012d74:	4630      	mov	r0, r6
 8012d76:	f7ff ffc3 	bl	8012d00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012d7a:	9b02      	ldr	r3, [sp, #8]
 8012d7c:	fb04 bb13 	mls	fp, r4, r3, fp
 8012d80:	4606      	mov	r6, r0
 8012d82:	4658      	mov	r0, fp
 8012d84:	eb05 0108 	add.w	r1, r5, r8
 8012d88:	f7ff ff9c 	bl	8012cc4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012d8c:	ab05      	add	r3, sp, #20
 8012d8e:	e9cd 4300 	strd	r4, r3, [sp]
 8012d92:	465a      	mov	r2, fp
 8012d94:	4603      	mov	r3, r0
 8012d96:	4650      	mov	r0, sl
 8012d98:	f7ff ffb2 	bl	8012d00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012d9c:	6839      	ldr	r1, [r7, #0]
 8012d9e:	9a05      	ldr	r2, [sp, #20]
 8012da0:	9b03      	ldr	r3, [sp, #12]
 8012da2:	4411      	add	r1, r2
 8012da4:	fbb1 f2f4 	udiv	r2, r1, r4
 8012da8:	18d3      	adds	r3, r2, r3
 8012daa:	441e      	add	r6, r3
 8012dac:	fb04 1412 	mls	r4, r4, r2, r1
 8012db0:	4430      	add	r0, r6
 8012db2:	603c      	str	r4, [r7, #0]
 8012db4:	e7b6      	b.n	8012d24 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08012db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8012db6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012dba:	b085      	sub	sp, #20
 8012dbc:	f1b0 0900 	subs.w	r9, r0, #0
 8012dc0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8012dc2:	461d      	mov	r5, r3
 8012dc4:	bfbf      	itttt	lt
 8012dc6:	6823      	ldrlt	r3, [r4, #0]
 8012dc8:	425b      	neglt	r3, r3
 8012dca:	f1c9 0900 	rsblt	r9, r9, #0
 8012dce:	6023      	strlt	r3, [r4, #0]
 8012dd0:	bfb4      	ite	lt
 8012dd2:	f04f 36ff 	movlt.w	r6, #4294967295
 8012dd6:	2601      	movge	r6, #1
 8012dd8:	2a00      	cmp	r2, #0
 8012dda:	4617      	mov	r7, r2
 8012ddc:	da04      	bge.n	8012de8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8012dde:	6823      	ldr	r3, [r4, #0]
 8012de0:	425b      	negs	r3, r3
 8012de2:	4257      	negs	r7, r2
 8012de4:	4276      	negs	r6, r6
 8012de6:	6023      	str	r3, [r4, #0]
 8012de8:	2d00      	cmp	r5, #0
 8012dea:	4638      	mov	r0, r7
 8012dec:	bfba      	itte	lt
 8012dee:	426d      	neglt	r5, r5
 8012df0:	f04f 38ff 	movlt.w	r8, #4294967295
 8012df4:	f04f 0801 	movge.w	r8, #1
 8012df8:	f7ff ff64 	bl	8012cc4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012dfc:	ab03      	add	r3, sp, #12
 8012dfe:	e9cd 5300 	strd	r5, r3, [sp]
 8012e02:	463a      	mov	r2, r7
 8012e04:	4603      	mov	r3, r0
 8012e06:	4648      	mov	r0, r9
 8012e08:	f7ff ff7a 	bl	8012d00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012e0c:	6823      	ldr	r3, [r4, #0]
 8012e0e:	9a03      	ldr	r2, [sp, #12]
 8012e10:	4546      	cmp	r6, r8
 8012e12:	441a      	add	r2, r3
 8012e14:	fb92 f3f5 	sdiv	r3, r2, r5
 8012e18:	4418      	add	r0, r3
 8012e1a:	bf18      	it	ne
 8012e1c:	4240      	negne	r0, r0
 8012e1e:	fb05 2313 	mls	r3, r5, r3, r2
 8012e22:	1c72      	adds	r2, r6, #1
 8012e24:	6023      	str	r3, [r4, #0]
 8012e26:	d105      	bne.n	8012e34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8012e28:	2b00      	cmp	r3, #0
 8012e2a:	f1c3 0200 	rsb	r2, r3, #0
 8012e2e:	db0b      	blt.n	8012e48 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8012e30:	6022      	str	r2, [r4, #0]
 8012e32:	e006      	b.n	8012e42 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012e34:	2e01      	cmp	r6, #1
 8012e36:	d104      	bne.n	8012e42 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012e38:	2b00      	cmp	r3, #0
 8012e3a:	da02      	bge.n	8012e42 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012e3c:	442b      	add	r3, r5
 8012e3e:	3801      	subs	r0, #1
 8012e40:	6023      	str	r3, [r4, #0]
 8012e42:	b005      	add	sp, #20
 8012e44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e48:	3801      	subs	r0, #1
 8012e4a:	1b52      	subs	r2, r2, r5
 8012e4c:	e7f0      	b.n	8012e30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08012e50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8012e50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012e54:	4c1c      	ldr	r4, [pc, #112]	; (8012ec8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8012e56:	6807      	ldr	r7, [r0, #0]
 8012e58:	69a3      	ldr	r3, [r4, #24]
 8012e5a:	4605      	mov	r5, r0
 8012e5c:	b92b      	cbnz	r3, 8012e6a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8012e5e:	6840      	ldr	r0, [r0, #4]
 8012e60:	e9c5 7000 	strd	r7, r0, [r5]
 8012e64:	b004      	add	sp, #16
 8012e66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012e6a:	68a2      	ldr	r2, [r4, #8]
 8012e6c:	6820      	ldr	r0, [r4, #0]
 8012e6e:	ae04      	add	r6, sp, #16
 8012e70:	f04f 0802 	mov.w	r8, #2
 8012e74:	fb93 f1f8 	sdiv	r1, r3, r8
 8012e78:	440a      	add	r2, r1
 8012e7a:	f846 2d04 	str.w	r2, [r6, #-4]!
 8012e7e:	69e1      	ldr	r1, [r4, #28]
 8012e80:	9600      	str	r6, [sp, #0]
 8012e82:	463a      	mov	r2, r7
 8012e84:	f7ff ff97 	bl	8012db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012e88:	69a3      	ldr	r3, [r4, #24]
 8012e8a:	686a      	ldr	r2, [r5, #4]
 8012e8c:	6a21      	ldr	r1, [r4, #32]
 8012e8e:	9600      	str	r6, [sp, #0]
 8012e90:	4607      	mov	r7, r0
 8012e92:	6860      	ldr	r0, [r4, #4]
 8012e94:	f7ff ff8f 	bl	8012db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012e98:	6962      	ldr	r2, [r4, #20]
 8012e9a:	69a3      	ldr	r3, [r4, #24]
 8012e9c:	fb93 f8f8 	sdiv	r8, r3, r8
 8012ea0:	4442      	add	r2, r8
 8012ea2:	9203      	str	r2, [sp, #12]
 8012ea4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8012ea6:	682a      	ldr	r2, [r5, #0]
 8012ea8:	9600      	str	r6, [sp, #0]
 8012eaa:	4407      	add	r7, r0
 8012eac:	68e0      	ldr	r0, [r4, #12]
 8012eae:	f7ff ff82 	bl	8012db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012eb2:	9600      	str	r6, [sp, #0]
 8012eb4:	4680      	mov	r8, r0
 8012eb6:	69a3      	ldr	r3, [r4, #24]
 8012eb8:	686a      	ldr	r2, [r5, #4]
 8012eba:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8012ebc:	6920      	ldr	r0, [r4, #16]
 8012ebe:	f7ff ff7a 	bl	8012db6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012ec2:	4440      	add	r0, r8
 8012ec4:	e7cc      	b.n	8012e60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8012ec6:	bf00      	nop
 8012ec8:	20020098 	.word	0x20020098

08012ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8012ecc:	4b07      	ldr	r3, [pc, #28]	; (8012eec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8012ece:	781b      	ldrb	r3, [r3, #0]
 8012ed0:	2b01      	cmp	r3, #1
 8012ed2:	d109      	bne.n	8012ee8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8012ed4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012ed8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012edc:	8003      	strh	r3, [r0, #0]
 8012ede:	4b04      	ldr	r3, [pc, #16]	; (8012ef0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8012ee0:	881b      	ldrh	r3, [r3, #0]
 8012ee2:	3b01      	subs	r3, #1
 8012ee4:	1a9b      	subs	r3, r3, r2
 8012ee6:	800b      	strh	r3, [r1, #0]
 8012ee8:	4770      	bx	lr
 8012eea:	bf00      	nop
 8012eec:	20020084 	.word	0x20020084
 8012ef0:	20020088 	.word	0x20020088

08012ef4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8012ef4:	b510      	push	{r4, lr}
 8012ef6:	4b07      	ldr	r3, [pc, #28]	; (8012f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8012ef8:	781b      	ldrb	r3, [r3, #0]
 8012efa:	2b01      	cmp	r3, #1
 8012efc:	d108      	bne.n	8012f10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8012efe:	4b06      	ldr	r3, [pc, #24]	; (8012f18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8012f00:	880c      	ldrh	r4, [r1, #0]
 8012f02:	881b      	ldrh	r3, [r3, #0]
 8012f04:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012f08:	3b01      	subs	r3, #1
 8012f0a:	1b1b      	subs	r3, r3, r4
 8012f0c:	8003      	strh	r3, [r0, #0]
 8012f0e:	800a      	strh	r2, [r1, #0]
 8012f10:	bd10      	pop	{r4, pc}
 8012f12:	bf00      	nop
 8012f14:	20020084 	.word	0x20020084
 8012f18:	20020088 	.word	0x20020088

08012f1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8012f1c:	b510      	push	{r4, lr}
 8012f1e:	4b0a      	ldr	r3, [pc, #40]	; (8012f48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8012f20:	781b      	ldrb	r3, [r3, #0]
 8012f22:	2b01      	cmp	r3, #1
 8012f24:	d10e      	bne.n	8012f44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8012f26:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012f2a:	8843      	ldrh	r3, [r0, #2]
 8012f2c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012f30:	8044      	strh	r4, [r0, #2]
 8012f32:	18ca      	adds	r2, r1, r3
 8012f34:	4b05      	ldr	r3, [pc, #20]	; (8012f4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8012f36:	881b      	ldrh	r3, [r3, #0]
 8012f38:	1a9b      	subs	r3, r3, r2
 8012f3a:	8003      	strh	r3, [r0, #0]
 8012f3c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012f40:	80c3      	strh	r3, [r0, #6]
 8012f42:	8081      	strh	r1, [r0, #4]
 8012f44:	bd10      	pop	{r4, pc}
 8012f46:	bf00      	nop
 8012f48:	20020084 	.word	0x20020084
 8012f4c:	20020088 	.word	0x20020088

08012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8012f50:	4b08      	ldr	r3, [pc, #32]	; (8012f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8012f52:	781b      	ldrb	r3, [r3, #0]
 8012f54:	2b01      	cmp	r3, #1
 8012f56:	d10c      	bne.n	8012f72 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8012f58:	8803      	ldrh	r3, [r0, #0]
 8012f5a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8012f5e:	8842      	ldrh	r2, [r0, #2]
 8012f60:	8002      	strh	r2, [r0, #0]
 8012f62:	185a      	adds	r2, r3, r1
 8012f64:	4b04      	ldr	r3, [pc, #16]	; (8012f78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8012f66:	881b      	ldrh	r3, [r3, #0]
 8012f68:	1a9b      	subs	r3, r3, r2
 8012f6a:	8043      	strh	r3, [r0, #2]
 8012f6c:	88c3      	ldrh	r3, [r0, #6]
 8012f6e:	8083      	strh	r3, [r0, #4]
 8012f70:	80c1      	strh	r1, [r0, #6]
 8012f72:	4770      	bx	lr
 8012f74:	20020084 	.word	0x20020084
 8012f78:	20020088 	.word	0x20020088

08012f7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8012f7c:	b510      	push	{r4, lr}
 8012f7e:	4b07      	ldr	r3, [pc, #28]	; (8012f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8012f80:	781b      	ldrb	r3, [r3, #0]
 8012f82:	2b01      	cmp	r3, #1
 8012f84:	d108      	bne.n	8012f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8012f86:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012f8a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012f8e:	8003      	strh	r3, [r0, #0]
 8012f90:	8893      	ldrh	r3, [r2, #4]
 8012f92:	3b01      	subs	r3, #1
 8012f94:	1b1b      	subs	r3, r3, r4
 8012f96:	800b      	strh	r3, [r1, #0]
 8012f98:	bd10      	pop	{r4, pc}
 8012f9a:	bf00      	nop
 8012f9c:	20020084 	.word	0x20020084

08012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8012fa0:	b510      	push	{r4, lr}
 8012fa2:	4b0a      	ldr	r3, [pc, #40]	; (8012fcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8012fa4:	781b      	ldrb	r3, [r3, #0]
 8012fa6:	2b01      	cmp	r3, #1
 8012fa8:	460a      	mov	r2, r1
 8012faa:	d10d      	bne.n	8012fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8012fac:	8881      	ldrh	r1, [r0, #4]
 8012fae:	8803      	ldrh	r3, [r0, #0]
 8012fb0:	440b      	add	r3, r1
 8012fb2:	4601      	mov	r1, r0
 8012fb4:	3b01      	subs	r3, #1
 8012fb6:	f821 3b02 	strh.w	r3, [r1], #2
 8012fba:	f7ff ffdf 	bl	8012f7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8012fbe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012fc2:	88c2      	ldrh	r2, [r0, #6]
 8012fc4:	8082      	strh	r2, [r0, #4]
 8012fc6:	80c3      	strh	r3, [r0, #6]
 8012fc8:	bd10      	pop	{r4, pc}
 8012fca:	bf00      	nop
 8012fcc:	20020084 	.word	0x20020084

08012fd0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8012fd0:	4b06      	ldr	r3, [pc, #24]	; (8012fec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8012fd2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012fd6:	4b06      	ldr	r3, [pc, #24]	; (8012ff0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8012fd8:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8012fdc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012fe0:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8012fe4:	2100      	movs	r1, #0
 8012fe6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8012fea:	4770      	bx	lr
 8012fec:	20020080 	.word	0x20020080
 8012ff0:	20020082 	.word	0x20020082

08012ff4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8012ff4:	4b03      	ldr	r3, [pc, #12]	; (8013004 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8012ff6:	6818      	ldr	r0, [r3, #0]
 8012ff8:	b110      	cbz	r0, 8013000 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8012ffa:	6803      	ldr	r3, [r0, #0]
 8012ffc:	699b      	ldr	r3, [r3, #24]
 8012ffe:	4718      	bx	r3
 8013000:	4770      	bx	lr
 8013002:	bf00      	nop
 8013004:	200200c8 	.word	0x200200c8

08013008 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013008:	4770      	bx	lr
	...

0801300c <_ZN8touchgfx11Application4drawEv>:
 801300c:	b507      	push	{r0, r1, r2, lr}
 801300e:	4b09      	ldr	r3, [pc, #36]	; (8013034 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013010:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013014:	4b08      	ldr	r3, [pc, #32]	; (8013038 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013016:	f8ad 2004 	strh.w	r2, [sp, #4]
 801301a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801301e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013022:	6803      	ldr	r3, [r0, #0]
 8013024:	2100      	movs	r1, #0
 8013026:	9100      	str	r1, [sp, #0]
 8013028:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801302a:	4669      	mov	r1, sp
 801302c:	4798      	blx	r3
 801302e:	b003      	add	sp, #12
 8013030:	f85d fb04 	ldr.w	pc, [sp], #4
 8013034:	20020080 	.word	0x20020080
 8013038:	20020082 	.word	0x20020082

0801303c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801303c:	4b03      	ldr	r3, [pc, #12]	; (801304c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801303e:	6818      	ldr	r0, [r3, #0]
 8013040:	b110      	cbz	r0, 8013048 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8013042:	6803      	ldr	r3, [r0, #0]
 8013044:	69db      	ldr	r3, [r3, #28]
 8013046:	4718      	bx	r3
 8013048:	4770      	bx	lr
 801304a:	bf00      	nop
 801304c:	200200c8 	.word	0x200200c8

08013050 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8013050:	4b03      	ldr	r3, [pc, #12]	; (8013060 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8013052:	6818      	ldr	r0, [r3, #0]
 8013054:	b110      	cbz	r0, 801305c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8013056:	6803      	ldr	r3, [r0, #0]
 8013058:	6a1b      	ldr	r3, [r3, #32]
 801305a:	4718      	bx	r3
 801305c:	4770      	bx	lr
 801305e:	bf00      	nop
 8013060:	200200c8 	.word	0x200200c8

08013064 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8013064:	4b03      	ldr	r3, [pc, #12]	; (8013074 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8013066:	6818      	ldr	r0, [r3, #0]
 8013068:	b110      	cbz	r0, 8013070 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801306a:	6803      	ldr	r3, [r0, #0]
 801306c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801306e:	4718      	bx	r3
 8013070:	4770      	bx	lr
 8013072:	bf00      	nop
 8013074:	200200c8 	.word	0x200200c8

08013078 <_ZN8touchgfx11ApplicationD1Ev>:
 8013078:	4770      	bx	lr

0801307a <_ZN8touchgfx11ApplicationD0Ev>:
 801307a:	b510      	push	{r4, lr}
 801307c:	f44f 719c 	mov.w	r1, #312	; 0x138
 8013080:	4604      	mov	r4, r0
 8013082:	f00f ff13 	bl	8022eac <_ZdlPvj>
 8013086:	4620      	mov	r0, r4
 8013088:	bd10      	pop	{r4, pc}
	...

0801308c <_ZN8touchgfx11Application15handleTickEventEv>:
 801308c:	b570      	push	{r4, r5, r6, lr}
 801308e:	4d38      	ldr	r5, [pc, #224]	; (8013170 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 8013090:	4604      	mov	r4, r0
 8013092:	6828      	ldr	r0, [r5, #0]
 8013094:	b140      	cbz	r0, 80130a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013096:	7a03      	ldrb	r3, [r0, #8]
 8013098:	b933      	cbnz	r3, 80130a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801309a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 801309e:	6803      	ldr	r3, [r0, #0]
 80130a0:	689b      	ldr	r3, [r3, #8]
 80130a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130a6:	4718      	bx	r3
 80130a8:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 80130ac:	b97b      	cbnz	r3, 80130ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80130ae:	b170      	cbz	r0, 80130ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80130b0:	7a03      	ldrb	r3, [r0, #8]
 80130b2:	b163      	cbz	r3, 80130ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80130b4:	4b2f      	ldr	r3, [pc, #188]	; (8013174 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80130b6:	6818      	ldr	r0, [r3, #0]
 80130b8:	b110      	cbz	r0, 80130c0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80130ba:	6803      	ldr	r3, [r0, #0]
 80130bc:	691b      	ldr	r3, [r3, #16]
 80130be:	4798      	blx	r3
 80130c0:	6828      	ldr	r0, [r5, #0]
 80130c2:	6803      	ldr	r3, [r0, #0]
 80130c4:	68db      	ldr	r3, [r3, #12]
 80130c6:	4798      	blx	r3
 80130c8:	2301      	movs	r3, #1
 80130ca:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 80130ce:	2500      	movs	r5, #0
 80130d0:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80130d4:	42a8      	cmp	r0, r5
 80130d6:	dd0c      	ble.n	80130f2 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80130d8:	1963      	adds	r3, r4, r5
 80130da:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80130de:	b132      	cbz	r2, 80130ee <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80130e0:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80130e4:	4413      	add	r3, r2
 80130e6:	6858      	ldr	r0, [r3, #4]
 80130e8:	6803      	ldr	r3, [r0, #0]
 80130ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80130ec:	4798      	blx	r3
 80130ee:	3501      	adds	r5, #1
 80130f0:	e7ee      	b.n	80130d0 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80130f2:	2300      	movs	r3, #0
 80130f4:	461a      	mov	r2, r3
 80130f6:	4298      	cmp	r0, r3
 80130f8:	d10f      	bne.n	801311a <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 80130fa:	1d25      	adds	r5, r4, #4
 80130fc:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 8013100:	4291      	cmp	r1, r2
 8013102:	dd2d      	ble.n	8013160 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 8013104:	1e48      	subs	r0, r1, #1
 8013106:	b280      	uxth	r0, r0
 8013108:	4288      	cmp	r0, r1
 801310a:	d31a      	bcc.n	8013142 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 801310c:	4b1a      	ldr	r3, [pc, #104]	; (8013178 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 801310e:	4a1b      	ldr	r2, [pc, #108]	; (801317c <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 8013110:	481b      	ldr	r0, [pc, #108]	; (8013180 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 8013112:	f240 11a9 	movw	r1, #425	; 0x1a9
 8013116:	f00f fef7 	bl	8022f08 <__assert_func>
 801311a:	18e1      	adds	r1, r4, r3
 801311c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8013120:	b16d      	cbz	r5, 801313e <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 8013122:	429a      	cmp	r2, r3
 8013124:	d00a      	beq.n	801313c <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 8013126:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 801312a:	4431      	add	r1, r6
 801312c:	684e      	ldr	r6, [r1, #4]
 801312e:	b291      	uxth	r1, r2
 8013130:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013134:	604e      	str	r6, [r1, #4]
 8013136:	18a1      	adds	r1, r4, r2
 8013138:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 801313c:	3201      	adds	r2, #1
 801313e:	3301      	adds	r3, #1
 8013140:	e7d9      	b.n	80130f6 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8013142:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 8013146:	3304      	adds	r3, #4
 8013148:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801314c:	428b      	cmp	r3, r1
 801314e:	d004      	beq.n	801315a <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 8013150:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8013154:	f843 6c04 	str.w	r6, [r3, #-4]
 8013158:	e7f8      	b.n	801314c <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 801315a:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 801315e:	e7cd      	b.n	80130fc <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 8013160:	4b04      	ldr	r3, [pc, #16]	; (8013174 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8013162:	6818      	ldr	r0, [r3, #0]
 8013164:	b110      	cbz	r0, 801316c <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 8013166:	6803      	ldr	r3, [r0, #0]
 8013168:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801316a:	e79a      	b.n	80130a2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801316c:	bd70      	pop	{r4, r5, r6, pc}
 801316e:	bf00      	nop
 8013170:	200200cc 	.word	0x200200cc
 8013174:	200200c8 	.word	0x200200c8
 8013178:	08028374 	.word	0x08028374
 801317c:	080285cd 	.word	0x080285cd
 8013180:	08028382 	.word	0x08028382

08013184 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8013184:	b570      	push	{r4, r5, r6, lr}
 8013186:	4606      	mov	r6, r0
 8013188:	460c      	mov	r4, r1
 801318a:	b929      	cbnz	r1, 8013198 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 801318c:	4b0c      	ldr	r3, [pc, #48]	; (80131c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 801318e:	4a0d      	ldr	r2, [pc, #52]	; (80131c4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 8013190:	480d      	ldr	r0, [pc, #52]	; (80131c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 8013192:	2167      	movs	r1, #103	; 0x67
 8013194:	f00f feb8 	bl	8022f08 <__assert_func>
 8013198:	4d0c      	ldr	r5, [pc, #48]	; (80131cc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 801319a:	2300      	movs	r3, #0
 801319c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80131a0:	6828      	ldr	r0, [r5, #0]
 80131a2:	b110      	cbz	r0, 80131aa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 80131a4:	6803      	ldr	r3, [r0, #0]
 80131a6:	695b      	ldr	r3, [r3, #20]
 80131a8:	4798      	blx	r3
 80131aa:	602c      	str	r4, [r5, #0]
 80131ac:	6823      	ldr	r3, [r4, #0]
 80131ae:	4620      	mov	r0, r4
 80131b0:	68db      	ldr	r3, [r3, #12]
 80131b2:	4798      	blx	r3
 80131b4:	6833      	ldr	r3, [r6, #0]
 80131b6:	4630      	mov	r0, r6
 80131b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80131ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131be:	4718      	bx	r3
 80131c0:	08028340 	.word	0x08028340
 80131c4:	08028448 	.word	0x08028448
 80131c8:	0802834a 	.word	0x0802834a
 80131cc:	200200c8 	.word	0x200200c8

080131d0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80131d0:	b510      	push	{r4, lr}
 80131d2:	f9b1 4000 	ldrsh.w	r4, [r1]
 80131d6:	888a      	ldrh	r2, [r1, #4]
 80131d8:	f9b0 3000 	ldrsh.w	r3, [r0]
 80131dc:	4422      	add	r2, r4
 80131de:	b212      	sxth	r2, r2
 80131e0:	4293      	cmp	r3, r2
 80131e2:	da15      	bge.n	8013210 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80131e4:	8882      	ldrh	r2, [r0, #4]
 80131e6:	4413      	add	r3, r2
 80131e8:	b21b      	sxth	r3, r3
 80131ea:	429c      	cmp	r4, r3
 80131ec:	da10      	bge.n	8013210 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80131ee:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80131f2:	88c9      	ldrh	r1, [r1, #6]
 80131f4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80131f8:	4419      	add	r1, r3
 80131fa:	b209      	sxth	r1, r1
 80131fc:	428a      	cmp	r2, r1
 80131fe:	da07      	bge.n	8013210 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013200:	88c0      	ldrh	r0, [r0, #6]
 8013202:	4410      	add	r0, r2
 8013204:	b200      	sxth	r0, r0
 8013206:	4283      	cmp	r3, r0
 8013208:	bfac      	ite	ge
 801320a:	2000      	movge	r0, #0
 801320c:	2001      	movlt	r0, #1
 801320e:	bd10      	pop	{r4, pc}
 8013210:	2000      	movs	r0, #0
 8013212:	e7fc      	b.n	801320e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013214 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8013214:	b570      	push	{r4, r5, r6, lr}
 8013216:	f9b1 4000 	ldrsh.w	r4, [r1]
 801321a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801321e:	42ac      	cmp	r4, r5
 8013220:	db18      	blt.n	8013254 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 8013222:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8013226:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801322a:	429a      	cmp	r2, r3
 801322c:	db12      	blt.n	8013254 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801322e:	8886      	ldrh	r6, [r0, #4]
 8013230:	4435      	add	r5, r6
 8013232:	888e      	ldrh	r6, [r1, #4]
 8013234:	4434      	add	r4, r6
 8013236:	b22d      	sxth	r5, r5
 8013238:	b224      	sxth	r4, r4
 801323a:	42a5      	cmp	r5, r4
 801323c:	db0a      	blt.n	8013254 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801323e:	88c0      	ldrh	r0, [r0, #6]
 8013240:	4418      	add	r0, r3
 8013242:	88cb      	ldrh	r3, [r1, #6]
 8013244:	441a      	add	r2, r3
 8013246:	b200      	sxth	r0, r0
 8013248:	b212      	sxth	r2, r2
 801324a:	4290      	cmp	r0, r2
 801324c:	bfb4      	ite	lt
 801324e:	2000      	movlt	r0, #0
 8013250:	2001      	movge	r0, #1
 8013252:	bd70      	pop	{r4, r5, r6, pc}
 8013254:	2000      	movs	r0, #0
 8013256:	e7fc      	b.n	8013252 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

08013258 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801325a:	4604      	mov	r4, r0
 801325c:	4608      	mov	r0, r1
 801325e:	460d      	mov	r5, r1
 8013260:	f7fc f93f 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013264:	b978      	cbnz	r0, 8013286 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8013266:	4620      	mov	r0, r4
 8013268:	f7fc f93b 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801326c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013270:	b150      	cbz	r0, 8013288 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8013272:	8026      	strh	r6, [r4, #0]
 8013274:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013278:	8063      	strh	r3, [r4, #2]
 801327a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801327e:	80a3      	strh	r3, [r4, #4]
 8013280:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013284:	80e3      	strh	r3, [r4, #6]
 8013286:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013288:	f9b4 1000 	ldrsh.w	r1, [r4]
 801328c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013290:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013294:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013298:	88ed      	ldrh	r5, [r5, #6]
 801329a:	42b1      	cmp	r1, r6
 801329c:	460f      	mov	r7, r1
 801329e:	bfa8      	it	ge
 80132a0:	4637      	movge	r7, r6
 80132a2:	4293      	cmp	r3, r2
 80132a4:	4618      	mov	r0, r3
 80132a6:	4466      	add	r6, ip
 80132a8:	bfa8      	it	ge
 80132aa:	4610      	movge	r0, r2
 80132ac:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80132b0:	8027      	strh	r7, [r4, #0]
 80132b2:	442a      	add	r2, r5
 80132b4:	88e5      	ldrh	r5, [r4, #6]
 80132b6:	8060      	strh	r0, [r4, #2]
 80132b8:	4461      	add	r1, ip
 80132ba:	442b      	add	r3, r5
 80132bc:	b236      	sxth	r6, r6
 80132be:	b209      	sxth	r1, r1
 80132c0:	b212      	sxth	r2, r2
 80132c2:	b21b      	sxth	r3, r3
 80132c4:	428e      	cmp	r6, r1
 80132c6:	bfac      	ite	ge
 80132c8:	ebc7 0106 	rsbge	r1, r7, r6
 80132cc:	ebc7 0101 	rsblt	r1, r7, r1
 80132d0:	429a      	cmp	r2, r3
 80132d2:	bfac      	ite	ge
 80132d4:	ebc0 0202 	rsbge	r2, r0, r2
 80132d8:	ebc0 0203 	rsblt	r2, r0, r3
 80132dc:	80a1      	strh	r1, [r4, #4]
 80132de:	80e2      	strh	r2, [r4, #6]
 80132e0:	e7d1      	b.n	8013286 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080132e4 <_ZN8touchgfx11Application11getInstanceEv>:
 80132e4:	4b01      	ldr	r3, [pc, #4]	; (80132ec <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80132e6:	6818      	ldr	r0, [r3, #0]
 80132e8:	4770      	bx	lr
 80132ea:	bf00      	nop
 80132ec:	200200d8 	.word	0x200200d8

080132f0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 80132f0:	b570      	push	{r4, r5, r6, lr}
 80132f2:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 80132f6:	1d04      	adds	r4, r0, #4
 80132f8:	2200      	movs	r2, #0
 80132fa:	b295      	uxth	r5, r2
 80132fc:	42ab      	cmp	r3, r5
 80132fe:	d90f      	bls.n	8013320 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8013300:	f854 6b04 	ldr.w	r6, [r4], #4
 8013304:	428e      	cmp	r6, r1
 8013306:	4615      	mov	r5, r2
 8013308:	f102 0201 	add.w	r2, r2, #1
 801330c:	d1f5      	bne.n	80132fa <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 801330e:	4428      	add	r0, r5
 8013310:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8013314:	2bff      	cmp	r3, #255	; 0xff
 8013316:	d002      	beq.n	801331e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8013318:	3301      	adds	r3, #1
 801331a:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 801331e:	bd70      	pop	{r4, r5, r6, pc}
 8013320:	2b20      	cmp	r3, #32
 8013322:	d106      	bne.n	8013332 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 8013324:	4b08      	ldr	r3, [pc, #32]	; (8013348 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 8013326:	4a09      	ldr	r2, [pc, #36]	; (801334c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 8013328:	4809      	ldr	r0, [pc, #36]	; (8013350 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 801332a:	f240 215f 	movw	r1, #607	; 0x25f
 801332e:	f00f fdeb 	bl	8022f08 <__assert_func>
 8013332:	18c2      	adds	r2, r0, r3
 8013334:	2401      	movs	r4, #1
 8013336:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 801333a:	191a      	adds	r2, r3, r4
 801333c:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 8013340:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8013344:	6041      	str	r1, [r0, #4]
 8013346:	e7ea      	b.n	801331e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8013348:	080283ab 	.word	0x080283ab
 801334c:	0802848c 	.word	0x0802848c
 8013350:	0802834a 	.word	0x0802834a

08013354 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 8013354:	b570      	push	{r4, r5, r6, lr}
 8013356:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 801335a:	1d04      	adds	r4, r0, #4
 801335c:	2300      	movs	r3, #0
 801335e:	b29a      	uxth	r2, r3
 8013360:	4296      	cmp	r6, r2
 8013362:	d90a      	bls.n	801337a <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 8013364:	f854 2b04 	ldr.w	r2, [r4], #4
 8013368:	428a      	cmp	r2, r1
 801336a:	d107      	bne.n	801337c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 801336c:	18c5      	adds	r5, r0, r3
 801336e:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 8013372:	b11a      	cbz	r2, 801337c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8013374:	3a01      	subs	r2, #1
 8013376:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 801337a:	bd70      	pop	{r4, r5, r6, pc}
 801337c:	3301      	adds	r3, #1
 801337e:	e7ee      	b.n	801335e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08013380 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8013380:	2300      	movs	r3, #0
 8013382:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8013386:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801338a:	30a8      	adds	r0, #168	; 0xa8
 801338c:	f802 3b01 	strb.w	r3, [r2], #1
 8013390:	4282      	cmp	r2, r0
 8013392:	d1fb      	bne.n	801338c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8013394:	4770      	bx	lr

08013396 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8013396:	4603      	mov	r3, r0
 8013398:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801339c:	2200      	movs	r2, #0
 801339e:	801a      	strh	r2, [r3, #0]
 80133a0:	805a      	strh	r2, [r3, #2]
 80133a2:	809a      	strh	r2, [r3, #4]
 80133a4:	80da      	strh	r2, [r3, #6]
 80133a6:	3308      	adds	r3, #8
 80133a8:	428b      	cmp	r3, r1
 80133aa:	d1f8      	bne.n	801339e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80133ac:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80133b0:	4770      	bx	lr
	...

080133b4 <_ZN8touchgfx11ApplicationC1Ev>:
 80133b4:	b570      	push	{r4, r5, r6, lr}
 80133b6:	4b1a      	ldr	r3, [pc, #104]	; (8013420 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80133b8:	6003      	str	r3, [r0, #0]
 80133ba:	2500      	movs	r5, #0
 80133bc:	4604      	mov	r4, r0
 80133be:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80133c2:	30a8      	adds	r0, #168	; 0xa8
 80133c4:	f7ff ffe7 	bl	8013396 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80133c8:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80133cc:	f7ff ffe3 	bl	8013396 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80133d0:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80133d4:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80133d8:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80133dc:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80133e0:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80133e4:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 80133e8:	490e      	ldr	r1, [pc, #56]	; (8013424 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80133ea:	480f      	ldr	r0, [pc, #60]	; (8013428 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80133ec:	4e0f      	ldr	r6, [pc, #60]	; (801342c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80133ee:	f00f fc31 	bl	8022c54 <CRC_Lock>
 80133f2:	4b0f      	ldr	r3, [pc, #60]	; (8013430 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80133f4:	b158      	cbz	r0, 801340e <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 80133f6:	801d      	strh	r5, [r3, #0]
 80133f8:	4a0e      	ldr	r2, [pc, #56]	; (8013434 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80133fa:	2300      	movs	r3, #0
 80133fc:	6013      	str	r3, [r2, #0]
 80133fe:	4a0e      	ldr	r2, [pc, #56]	; (8013438 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8013400:	6033      	str	r3, [r6, #0]
 8013402:	4620      	mov	r0, r4
 8013404:	6013      	str	r3, [r2, #0]
 8013406:	f7ff ffbb 	bl	8013380 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801340a:	4620      	mov	r0, r4
 801340c:	bd70      	pop	{r4, r5, r6, pc}
 801340e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8013412:	2002      	movs	r0, #2
 8013414:	801a      	strh	r2, [r3, #0]
 8013416:	6030      	str	r0, [r6, #0]
 8013418:	f001 f9e2 	bl	80147e0 <_ZN8touchgfx6Screen4drawEv>
 801341c:	e7ec      	b.n	80133f8 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 801341e:	bf00      	nop
 8013420:	0802840c 	.word	0x0802840c
 8013424:	b5e8b5cd 	.word	0xb5e8b5cd
 8013428:	f407a5c2 	.word	0xf407a5c2
 801342c:	200200c8 	.word	0x200200c8
 8013430:	20000064 	.word	0x20000064
 8013434:	200200d8 	.word	0x200200d8
 8013438:	200200cc 	.word	0x200200cc

0801343c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801343c:	b510      	push	{r4, lr}
 801343e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8013442:	428b      	cmp	r3, r1
 8013444:	d806      	bhi.n	8013454 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8013446:	4b0b      	ldr	r3, [pc, #44]	; (8013474 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8013448:	4a0b      	ldr	r2, [pc, #44]	; (8013478 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 801344a:	480c      	ldr	r0, [pc, #48]	; (801347c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 801344c:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 8013450:	f00f fd5a 	bl	8022f08 <__assert_func>
 8013454:	3b01      	subs	r3, #1
 8013456:	b29b      	uxth	r3, r3
 8013458:	428b      	cmp	r3, r1
 801345a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801345e:	d908      	bls.n	8013472 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 8013460:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8013464:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8013468:	681a      	ldr	r2, [r3, #0]
 801346a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801346e:	685a      	ldr	r2, [r3, #4]
 8013470:	6062      	str	r2, [r4, #4]
 8013472:	bd10      	pop	{r4, pc}
 8013474:	08028374 	.word	0x08028374
 8013478:	080284d1 	.word	0x080284d1
 801347c:	08028382 	.word	0x08028382

08013480 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8013480:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013482:	466b      	mov	r3, sp
 8013484:	e883 0006 	stmia.w	r3, {r1, r2}
 8013488:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801348c:	2a07      	cmp	r2, #7
 801348e:	4604      	mov	r4, r0
 8013490:	d906      	bls.n	80134a0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 8013492:	4b09      	ldr	r3, [pc, #36]	; (80134b8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8013494:	4a09      	ldr	r2, [pc, #36]	; (80134bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8013496:	480a      	ldr	r0, [pc, #40]	; (80134c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8013498:	f44f 71c1 	mov.w	r1, #386	; 0x182
 801349c:	f00f fd34 	bl	8022f08 <__assert_func>
 80134a0:	1c51      	adds	r1, r2, #1
 80134a2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80134a6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 80134aa:	cb03      	ldmia	r3!, {r0, r1}
 80134ac:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 80134b0:	6069      	str	r1, [r5, #4]
 80134b2:	b003      	add	sp, #12
 80134b4:	bd30      	pop	{r4, r5, pc}
 80134b6:	bf00      	nop
 80134b8:	080283d3 	.word	0x080283d3
 80134bc:	08028567 	.word	0x08028567
 80134c0:	08028382 	.word	0x08028382

080134c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80134c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134c8:	b08d      	sub	sp, #52	; 0x34
 80134ca:	ac08      	add	r4, sp, #32
 80134cc:	4683      	mov	fp, r0
 80134ce:	4620      	mov	r0, r4
 80134d0:	e884 0006 	stmia.w	r4, {r1, r2}
 80134d4:	f7fc f805 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80134d8:	2800      	cmp	r0, #0
 80134da:	d16a      	bne.n	80135b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 80134dc:	9402      	str	r4, [sp, #8]
 80134de:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80134e2:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80134e6:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80134ea:	2400      	movs	r4, #0
 80134ec:	9301      	str	r3, [sp, #4]
 80134ee:	36a0      	adds	r6, #160	; 0xa0
 80134f0:	42a5      	cmp	r5, r4
 80134f2:	d00d      	beq.n	8013510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 80134f4:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80134f8:	9802      	ldr	r0, [sp, #8]
 80134fa:	f7ff fe8b 	bl	8013214 <_ZNK8touchgfx4Rect8includesERKS0_>
 80134fe:	b128      	cbz	r0, 801350c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8013500:	1e69      	subs	r1, r5, #1
 8013502:	1b09      	subs	r1, r1, r4
 8013504:	b289      	uxth	r1, r1
 8013506:	9801      	ldr	r0, [sp, #4]
 8013508:	f7ff ff98 	bl	801343c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801350c:	3401      	adds	r4, #1
 801350e:	e7ef      	b.n	80134f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013510:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8013514:	9703      	str	r7, [sp, #12]
 8013516:	1e7b      	subs	r3, r7, #1
 8013518:	9300      	str	r3, [sp, #0]
 801351a:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 801351e:	2400      	movs	r4, #0
 8013520:	4655      	mov	r5, sl
 8013522:	9704      	str	r7, [sp, #16]
 8013524:	4626      	mov	r6, r4
 8013526:	9b04      	ldr	r3, [sp, #16]
 8013528:	2b00      	cmp	r3, #0
 801352a:	d078      	beq.n	801361e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 801352c:	9902      	ldr	r1, [sp, #8]
 801352e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8013532:	f7ff fe4d 	bl	80131d0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013536:	b360      	cbz	r0, 8013592 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8013538:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801353c:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8013540:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8013544:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8013548:	45e6      	cmp	lr, ip
 801354a:	db35      	blt.n	80135b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 801354c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8013550:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8013554:	4472      	add	r2, lr
 8013556:	4463      	add	r3, ip
 8013558:	b212      	sxth	r2, r2
 801355a:	b21b      	sxth	r3, r3
 801355c:	429a      	cmp	r2, r3
 801355e:	dc2b      	bgt.n	80135b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 8013560:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8013564:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8013568:	fa1f f288 	uxth.w	r2, r8
 801356c:	4413      	add	r3, r2
 801356e:	b29b      	uxth	r3, r3
 8013570:	45c1      	cmp	r9, r8
 8013572:	fa0f fe83 	sxth.w	lr, r3
 8013576:	fa1f fc89 	uxth.w	ip, r9
 801357a:	db0f      	blt.n	801359c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 801357c:	eba3 030c 	sub.w	r3, r3, ip
 8013580:	1ac9      	subs	r1, r1, r3
 8013582:	b209      	sxth	r1, r1
 8013584:	2900      	cmp	r1, #0
 8013586:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801358a:	dd12      	ble.n	80135b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801358c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8013590:	4604      	mov	r4, r0
 8013592:	9b04      	ldr	r3, [sp, #16]
 8013594:	3b01      	subs	r3, #1
 8013596:	9304      	str	r3, [sp, #16]
 8013598:	3d08      	subs	r5, #8
 801359a:	e7c4      	b.n	8013526 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 801359c:	4461      	add	r1, ip
 801359e:	b209      	sxth	r1, r1
 80135a0:	4571      	cmp	r1, lr
 80135a2:	dc3a      	bgt.n	801361a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 80135a4:	eba2 020c 	sub.w	r2, r2, ip
 80135a8:	b212      	sxth	r2, r2
 80135aa:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80135ae:	2a00      	cmp	r2, #0
 80135b0:	dcee      	bgt.n	8013590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 80135b2:	b00d      	add	sp, #52	; 0x34
 80135b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135b8:	45c1      	cmp	r9, r8
 80135ba:	db2e      	blt.n	801361a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 80135bc:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80135c0:	4499      	add	r9, r3
 80135c2:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80135c6:	4498      	add	r8, r3
 80135c8:	fa0f f989 	sxth.w	r9, r9
 80135cc:	fa0f f888 	sxth.w	r8, r8
 80135d0:	45c1      	cmp	r9, r8
 80135d2:	dc22      	bgt.n	801361a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 80135d4:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80135d8:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80135dc:	fa1f f28c 	uxth.w	r2, ip
 80135e0:	4413      	add	r3, r2
 80135e2:	b29b      	uxth	r3, r3
 80135e4:	45e6      	cmp	lr, ip
 80135e6:	fa1f f88e 	uxth.w	r8, lr
 80135ea:	fa0f f983 	sxth.w	r9, r3
 80135ee:	db0a      	blt.n	8013606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 80135f0:	eba3 0308 	sub.w	r3, r3, r8
 80135f4:	1ac9      	subs	r1, r1, r3
 80135f6:	b209      	sxth	r1, r1
 80135f8:	2900      	cmp	r1, #0
 80135fa:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80135fe:	ddd8      	ble.n	80135b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8013600:	f8ad 9020 	strh.w	r9, [sp, #32]
 8013604:	e7c4      	b.n	8013590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8013606:	4441      	add	r1, r8
 8013608:	b209      	sxth	r1, r1
 801360a:	4549      	cmp	r1, r9
 801360c:	dc05      	bgt.n	801361a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801360e:	eba2 0208 	sub.w	r2, r2, r8
 8013612:	b212      	sxth	r2, r2
 8013614:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8013618:	e7c9      	b.n	80135ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801361a:	4606      	mov	r6, r0
 801361c:	e7b9      	b.n	8013592 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 801361e:	2c00      	cmp	r4, #0
 8013620:	f47f af7d 	bne.w	801351e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8013624:	2e00      	cmp	r6, #0
 8013626:	f000 81dd 	beq.w	80139e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 801362a:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 801362e:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8013632:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8013636:	b2b9      	uxth	r1, r7
 8013638:	9104      	str	r1, [sp, #16]
 801363a:	9804      	ldr	r0, [sp, #16]
 801363c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8013640:	4401      	add	r1, r0
 8013642:	b2b3      	uxth	r3, r6
 8013644:	b289      	uxth	r1, r1
 8013646:	441a      	add	r2, r3
 8013648:	9105      	str	r1, [sp, #20]
 801364a:	b292      	uxth	r2, r2
 801364c:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8013650:	fa0f f882 	sxth.w	r8, r2
 8013654:	4655      	mov	r5, sl
 8013656:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801365a:	9b03      	ldr	r3, [sp, #12]
 801365c:	2b00      	cmp	r3, #0
 801365e:	d054      	beq.n	801370a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8013660:	9902      	ldr	r1, [sp, #8]
 8013662:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8013666:	f7ff fdb3 	bl	80131d0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801366a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801366e:	b1d8      	cbz	r0, 80136a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8013670:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8013674:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8013678:	4576      	cmp	r6, lr
 801367a:	dc26      	bgt.n	80136ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801367c:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8013680:	44f4      	add	ip, lr
 8013682:	fa0f fc8c 	sxth.w	ip, ip
 8013686:	45e0      	cmp	r8, ip
 8013688:	db1f      	blt.n	80136ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801368a:	428f      	cmp	r7, r1
 801368c:	fa1f fc81 	uxth.w	ip, r1
 8013690:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8013694:	dc0f      	bgt.n	80136b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8013696:	9805      	ldr	r0, [sp, #20]
 8013698:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801369c:	eba0 0c0c 	sub.w	ip, r0, ip
 80136a0:	eba1 010c 	sub.w	r1, r1, ip
 80136a4:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 80136a8:	4620      	mov	r0, r4
 80136aa:	9903      	ldr	r1, [sp, #12]
 80136ac:	3901      	subs	r1, #1
 80136ae:	9103      	str	r1, [sp, #12]
 80136b0:	3d08      	subs	r5, #8
 80136b2:	4604      	mov	r4, r0
 80136b4:	e7cf      	b.n	8013656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 80136b6:	4461      	add	r1, ip
 80136b8:	b209      	sxth	r1, r1
 80136ba:	4549      	cmp	r1, r9
 80136bc:	dcf5      	bgt.n	80136aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80136be:	9904      	ldr	r1, [sp, #16]
 80136c0:	eba1 0c0c 	sub.w	ip, r1, ip
 80136c4:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80136c8:	e7ee      	b.n	80136a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 80136ca:	428f      	cmp	r7, r1
 80136cc:	dced      	bgt.n	80136aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80136ce:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80136d2:	4461      	add	r1, ip
 80136d4:	b209      	sxth	r1, r1
 80136d6:	4589      	cmp	r9, r1
 80136d8:	dbe7      	blt.n	80136aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80136da:	4576      	cmp	r6, lr
 80136dc:	fa1f fc8e 	uxth.w	ip, lr
 80136e0:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80136e4:	dc08      	bgt.n	80136f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 80136e6:	eba2 0c0c 	sub.w	ip, r2, ip
 80136ea:	eba1 010c 	sub.w	r1, r1, ip
 80136ee:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80136f2:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80136f6:	e7d7      	b.n	80136a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 80136f8:	4461      	add	r1, ip
 80136fa:	b209      	sxth	r1, r1
 80136fc:	4588      	cmp	r8, r1
 80136fe:	dbd4      	blt.n	80136aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013700:	eba3 0c0c 	sub.w	ip, r3, ip
 8013704:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8013708:	e7ce      	b.n	80136a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 801370a:	2c00      	cmp	r4, #0
 801370c:	f000 816a 	beq.w	80139e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8013710:	9b00      	ldr	r3, [sp, #0]
 8013712:	3301      	adds	r3, #1
 8013714:	f000 8166 	beq.w	80139e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8013718:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801371c:	4621      	mov	r1, r4
 801371e:	9802      	ldr	r0, [sp, #8]
 8013720:	f7ff fd78 	bl	8013214 <_ZNK8touchgfx4Rect8includesERKS0_>
 8013724:	b120      	cbz	r0, 8013730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8013726:	f8bd 1000 	ldrh.w	r1, [sp]
 801372a:	9801      	ldr	r0, [sp, #4]
 801372c:	f7ff fe86 	bl	801343c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013730:	9902      	ldr	r1, [sp, #8]
 8013732:	4620      	mov	r0, r4
 8013734:	f7ff fd4c 	bl	80131d0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013738:	2800      	cmp	r0, #0
 801373a:	f000 809b 	beq.w	8013874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 801373e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8013742:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8013746:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 801374a:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 801374e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013752:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8013756:	fa1f f288 	uxth.w	r2, r8
 801375a:	19d5      	adds	r5, r2, r7
 801375c:	fa1f f985 	uxth.w	r9, r5
 8013760:	fa0f f589 	sxth.w	r5, r9
 8013764:	b2a1      	uxth	r1, r4
 8013766:	440b      	add	r3, r1
 8013768:	9503      	str	r5, [sp, #12]
 801376a:	45a0      	cmp	r8, r4
 801376c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8013770:	9507      	str	r5, [sp, #28]
 8013772:	b29b      	uxth	r3, r3
 8013774:	f340 809d 	ble.w	80138b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8013778:	1a52      	subs	r2, r2, r1
 801377a:	b292      	uxth	r2, r2
 801377c:	4584      	cmp	ip, r0
 801377e:	fa0f fe83 	sxth.w	lr, r3
 8013782:	b215      	sxth	r5, r2
 8013784:	dd2f      	ble.n	80137e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8013786:	9e00      	ldr	r6, [sp, #0]
 8013788:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801378c:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8013790:	9e03      	ldr	r6, [sp, #12]
 8013792:	eba6 060e 	sub.w	r6, r6, lr
 8013796:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 801379a:	fa1f fc8c 	uxth.w	ip, ip
 801379e:	b280      	uxth	r0, r0
 80137a0:	ebac 0300 	sub.w	r3, ip, r0
 80137a4:	448c      	add	ip, r1
 80137a6:	4470      	add	r0, lr
 80137a8:	b29b      	uxth	r3, r3
 80137aa:	fa0f fc8c 	sxth.w	ip, ip
 80137ae:	b200      	sxth	r0, r0
 80137b0:	b21c      	sxth	r4, r3
 80137b2:	ebac 0000 	sub.w	r0, ip, r0
 80137b6:	4366      	muls	r6, r4
 80137b8:	4368      	muls	r0, r5
 80137ba:	4286      	cmp	r6, r0
 80137bc:	db09      	blt.n	80137d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 80137be:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 80137c2:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80137c6:	4417      	add	r7, r2
 80137c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80137cc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80137d0:	e685      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80137d2:	440b      	add	r3, r1
 80137d4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80137d8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80137dc:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 80137e0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80137e4:	e67b      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80137e6:	9e03      	ldr	r6, [sp, #12]
 80137e8:	45b6      	cmp	lr, r6
 80137ea:	da28      	bge.n	801383e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 80137ec:	9b00      	ldr	r3, [sp, #0]
 80137ee:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80137f2:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 80137f6:	eb04 030c 	add.w	r3, r4, ip
 80137fa:	fa1f f883 	uxth.w	r8, r3
 80137fe:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8013802:	4403      	add	r3, r0
 8013804:	eba3 0308 	sub.w	r3, r3, r8
 8013808:	b29b      	uxth	r3, r3
 801380a:	fa0f f988 	sxth.w	r9, r8
 801380e:	eba0 000c 	sub.w	r0, r0, ip
 8013812:	fa0f f883 	sxth.w	r8, r3
 8013816:	eba6 060e 	sub.w	r6, r6, lr
 801381a:	4368      	muls	r0, r5
 801381c:	fb08 f606 	mul.w	r6, r8, r6
 8013820:	42b0      	cmp	r0, r6
 8013822:	dc06      	bgt.n	8013832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 8013824:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8013828:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 801382c:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8013830:	e7c9      	b.n	80137c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 8013832:	4423      	add	r3, r4
 8013834:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8013838:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801383c:	e64f      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801383e:	9807      	ldr	r0, [sp, #28]
 8013840:	eba3 0309 	sub.w	r3, r3, r9
 8013844:	b29b      	uxth	r3, r3
 8013846:	2806      	cmp	r0, #6
 8013848:	fa0f fc83 	sxth.w	ip, r3
 801384c:	d818      	bhi.n	8013880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 801384e:	4652      	mov	r2, sl
 8013850:	ab0a      	add	r3, sp, #40	; 0x28
 8013852:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8013856:	6851      	ldr	r1, [r2, #4]
 8013858:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 801385c:	c303      	stmia	r3!, {r0, r1}
 801385e:	9b03      	ldr	r3, [sp, #12]
 8013860:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8013864:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8013868:	ab0a      	add	r3, sp, #40	; 0x28
 801386a:	e893 0006 	ldmia.w	r3, {r1, r2}
 801386e:	9801      	ldr	r0, [sp, #4]
 8013870:	f7ff fe06 	bl	8013480 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8013874:	9b00      	ldr	r3, [sp, #0]
 8013876:	3b01      	subs	r3, #1
 8013878:	9300      	str	r3, [sp, #0]
 801387a:	f1aa 0a08 	sub.w	sl, sl, #8
 801387e:	e747      	b.n	8013710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8013880:	9800      	ldr	r0, [sp, #0]
 8013882:	45ac      	cmp	ip, r5
 8013884:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8013888:	db0c      	blt.n	80138a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 801388a:	4417      	add	r7, r2
 801388c:	b2bf      	uxth	r7, r7
 801388e:	4458      	add	r0, fp
 8013890:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8013894:	440f      	add	r7, r1
 8013896:	f8ad 4020 	strh.w	r4, [sp, #32]
 801389a:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 801389e:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 80138a2:	e61c      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80138a4:	4458      	add	r0, fp
 80138a6:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 80138aa:	443b      	add	r3, r7
 80138ac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80138b0:	e615      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80138b2:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 80138b6:	fa1f f18c 	uxth.w	r1, ip
 80138ba:	eb01 0e05 	add.w	lr, r1, r5
 80138be:	b282      	uxth	r2, r0
 80138c0:	fa1f fe8e 	uxth.w	lr, lr
 80138c4:	9204      	str	r2, [sp, #16]
 80138c6:	fa0f f28e 	sxth.w	r2, lr
 80138ca:	9205      	str	r2, [sp, #20]
 80138cc:	9e04      	ldr	r6, [sp, #16]
 80138ce:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 80138d2:	4432      	add	r2, r6
 80138d4:	b292      	uxth	r2, r2
 80138d6:	4584      	cmp	ip, r0
 80138d8:	9206      	str	r2, [sp, #24]
 80138da:	da26      	bge.n	801392a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 80138dc:	eba3 0309 	sub.w	r3, r3, r9
 80138e0:	eba2 020e 	sub.w	r2, r2, lr
 80138e4:	b29b      	uxth	r3, r3
 80138e6:	b292      	uxth	r2, r2
 80138e8:	fa0f fa83 	sxth.w	sl, r3
 80138ec:	b211      	sxth	r1, r2
 80138ee:	eba0 000c 	sub.w	r0, r0, ip
 80138f2:	eba4 0408 	sub.w	r4, r4, r8
 80138f6:	fb0a f000 	mul.w	r0, sl, r0
 80138fa:	434c      	muls	r4, r1
 80138fc:	42a0      	cmp	r0, r4
 80138fe:	9800      	ldr	r0, [sp, #0]
 8013900:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8013904:	dc06      	bgt.n	8013914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 8013906:	4458      	add	r0, fp
 8013908:	9a05      	ldr	r2, [sp, #20]
 801390a:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 801390e:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8013912:	e7ca      	b.n	80138aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8013914:	eb0b 0300 	add.w	r3, fp, r0
 8013918:	9903      	ldr	r1, [sp, #12]
 801391a:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 801391e:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8013922:	442a      	add	r2, r5
 8013924:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8013928:	e5d9      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801392a:	9e04      	ldr	r6, [sp, #16]
 801392c:	9a03      	ldr	r2, [sp, #12]
 801392e:	1b89      	subs	r1, r1, r6
 8013930:	b21e      	sxth	r6, r3
 8013932:	b289      	uxth	r1, r1
 8013934:	4296      	cmp	r6, r2
 8013936:	fa0f fc81 	sxth.w	ip, r1
 801393a:	dd26      	ble.n	801398a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 801393c:	eba3 0309 	sub.w	r3, r3, r9
 8013940:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8013944:	9e05      	ldr	r6, [sp, #20]
 8013946:	b29b      	uxth	r3, r3
 8013948:	eba6 0902 	sub.w	r9, r6, r2
 801394c:	b218      	sxth	r0, r3
 801394e:	eba4 0408 	sub.w	r4, r4, r8
 8013952:	fb0c f404 	mul.w	r4, ip, r4
 8013956:	fb00 f909 	mul.w	r9, r0, r9
 801395a:	9a00      	ldr	r2, [sp, #0]
 801395c:	454c      	cmp	r4, r9
 801395e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8013962:	db03      	blt.n	801396c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 8013964:	445a      	add	r2, fp
 8013966:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 801396a:	e79e      	b.n	80138aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 801396c:	eb0b 0302 	add.w	r3, fp, r2
 8013970:	9a03      	ldr	r2, [sp, #12]
 8013972:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8013976:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 801397a:	4429      	add	r1, r5
 801397c:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8013980:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013984:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8013988:	e5a9      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801398a:	9b06      	ldr	r3, [sp, #24]
 801398c:	9c07      	ldr	r4, [sp, #28]
 801398e:	eba3 020e 	sub.w	r2, r3, lr
 8013992:	b292      	uxth	r2, r2
 8013994:	2c06      	cmp	r4, #6
 8013996:	b213      	sxth	r3, r2
 8013998:	d80d      	bhi.n	80139b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 801399a:	4651      	mov	r1, sl
 801399c:	aa0a      	add	r2, sp, #40	; 0x28
 801399e:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 80139a2:	6849      	ldr	r1, [r1, #4]
 80139a4:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 80139a8:	9b05      	ldr	r3, [sp, #20]
 80139aa:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 80139ae:	c203      	stmia	r2!, {r0, r1}
 80139b0:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 80139b4:	e758      	b.n	8013868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 80139b6:	9c00      	ldr	r4, [sp, #0]
 80139b8:	4563      	cmp	r3, ip
 80139ba:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80139be:	db0d      	blt.n	80139dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 80139c0:	4429      	add	r1, r5
 80139c2:	9a04      	ldr	r2, [sp, #16]
 80139c4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80139c8:	b289      	uxth	r1, r1
 80139ca:	445c      	add	r4, fp
 80139cc:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 80139d0:	4411      	add	r1, r2
 80139d2:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 80139d6:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 80139da:	e580      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80139dc:	445c      	add	r4, fp
 80139de:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 80139e2:	e79e      	b.n	8013922 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 80139e4:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80139e8:	2f07      	cmp	r7, #7
 80139ea:	d806      	bhi.n	80139fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 80139ec:	ab08      	add	r3, sp, #32
 80139ee:	e893 0006 	ldmia.w	r3, {r1, r2}
 80139f2:	9801      	ldr	r0, [sp, #4]
 80139f4:	f7ff fd44 	bl	8013480 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80139f8:	e5db      	b.n	80135b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 80139fa:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80139fe:	f107 39ff 	add.w	r9, r7, #4294967295
 8013a02:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8013a06:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8013a0a:	f04f 35ff 	mov.w	r5, #4294967295
 8013a0e:	2400      	movs	r4, #0
 8013a10:	9304      	str	r3, [sp, #16]
 8013a12:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8013a16:	9300      	str	r3, [sp, #0]
 8013a18:	f109 32ff 	add.w	r2, r9, #4294967295
 8013a1c:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8013a20:	9303      	str	r3, [sp, #12]
 8013a22:	4690      	mov	r8, r2
 8013a24:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8013a28:	f1b8 3fff 	cmp.w	r8, #4294967295
 8013a2c:	bf14      	ite	ne
 8013a2e:	9904      	ldrne	r1, [sp, #16]
 8013a30:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8013a34:	6818      	ldr	r0, [r3, #0]
 8013a36:	9206      	str	r2, [sp, #24]
 8013a38:	bf18      	it	ne
 8013a3a:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8013a3e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8013a42:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8013a46:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8013a4a:	9305      	str	r3, [sp, #20]
 8013a4c:	fb16 f601 	smulbb	r6, r6, r1
 8013a50:	6859      	ldr	r1, [r3, #4]
 8013a52:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013a56:	4671      	mov	r1, lr
 8013a58:	a80a      	add	r0, sp, #40	; 0x28
 8013a5a:	f7ff fbfd 	bl	8013258 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013a5e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8013a62:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013a66:	9b03      	ldr	r3, [sp, #12]
 8013a68:	9a00      	ldr	r2, [sp, #0]
 8013a6a:	fb11 f100 	smulbb	r1, r1, r0
 8013a6e:	fb02 6603 	mla	r6, r2, r3, r6
 8013a72:	1b8e      	subs	r6, r1, r6
 8013a74:	2008      	movs	r0, #8
 8013a76:	fb91 f1f0 	sdiv	r1, r1, r0
 8013a7a:	42b1      	cmp	r1, r6
 8013a7c:	dc21      	bgt.n	8013ac2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8013a7e:	4556      	cmp	r6, sl
 8013a80:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8013a84:	da03      	bge.n	8013a8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8013a86:	b1e6      	cbz	r6, 8013ac2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8013a88:	46b2      	mov	sl, r6
 8013a8a:	4645      	mov	r5, r8
 8013a8c:	464c      	mov	r4, r9
 8013a8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013a92:	f118 0f02 	cmn.w	r8, #2
 8013a96:	d1c7      	bne.n	8013a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 8013a98:	f1b2 3fff 	cmp.w	r2, #4294967295
 8013a9c:	f1a7 0708 	sub.w	r7, r7, #8
 8013aa0:	4691      	mov	r9, r2
 8013aa2:	d1b6      	bne.n	8013a12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 8013aa4:	9b01      	ldr	r3, [sp, #4]
 8013aa6:	b2a6      	uxth	r6, r4
 8013aa8:	00e4      	lsls	r4, r4, #3
 8013aaa:	1918      	adds	r0, r3, r4
 8013aac:	1c6b      	adds	r3, r5, #1
 8013aae:	d10b      	bne.n	8013ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 8013ab0:	4601      	mov	r1, r0
 8013ab2:	9802      	ldr	r0, [sp, #8]
 8013ab4:	f7ff fbd0 	bl	8013258 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013ab8:	4631      	mov	r1, r6
 8013aba:	9801      	ldr	r0, [sp, #4]
 8013abc:	f7ff fcbe 	bl	801343c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013ac0:	e50d      	b.n	80134de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8013ac2:	4645      	mov	r5, r8
 8013ac4:	464c      	mov	r4, r9
 8013ac6:	e7ed      	b.n	8013aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8013ac8:	9b01      	ldr	r3, [sp, #4]
 8013aca:	00ed      	lsls	r5, r5, #3
 8013acc:	1959      	adds	r1, r3, r5
 8013ace:	f7ff fbc3 	bl	8013258 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013ad2:	9b02      	ldr	r3, [sp, #8]
 8013ad4:	cb03      	ldmia	r3!, {r0, r1}
 8013ad6:	445d      	add	r5, fp
 8013ad8:	445c      	add	r4, fp
 8013ada:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8013ade:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8013ae2:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8013ae6:	9b02      	ldr	r3, [sp, #8]
 8013ae8:	6861      	ldr	r1, [r4, #4]
 8013aea:	c303      	stmia	r3!, {r0, r1}
 8013aec:	e7e4      	b.n	8013ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

08013af0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8013af0:	b530      	push	{r4, r5, lr}
 8013af2:	4b1d      	ldr	r3, [pc, #116]	; (8013b68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 8013af4:	b085      	sub	sp, #20
 8013af6:	460c      	mov	r4, r1
 8013af8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013afc:	4b1b      	ldr	r3, [pc, #108]	; (8013b6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 8013afe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013b02:	2100      	movs	r1, #0
 8013b04:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b08:	9100      	str	r1, [sp, #0]
 8013b0a:	4605      	mov	r5, r0
 8013b0c:	6861      	ldr	r1, [r4, #4]
 8013b0e:	6820      	ldr	r0, [r4, #0]
 8013b10:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013b14:	ab02      	add	r3, sp, #8
 8013b16:	c303      	stmia	r3!, {r0, r1}
 8013b18:	4669      	mov	r1, sp
 8013b1a:	a802      	add	r0, sp, #8
 8013b1c:	f7fb fc9e 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8013b20:	ab02      	add	r3, sp, #8
 8013b22:	cb03      	ldmia	r3!, {r0, r1}
 8013b24:	4b12      	ldr	r3, [pc, #72]	; (8013b70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 8013b26:	6020      	str	r0, [r4, #0]
 8013b28:	6818      	ldr	r0, [r3, #0]
 8013b2a:	6061      	str	r1, [r4, #4]
 8013b2c:	b138      	cbz	r0, 8013b3e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8013b2e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 8013b32:	b133      	cbz	r3, 8013b42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 8013b34:	6821      	ldr	r1, [r4, #0]
 8013b36:	6862      	ldr	r2, [r4, #4]
 8013b38:	4628      	mov	r0, r5
 8013b3a:	f7ff fcc3 	bl	80134c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8013b3e:	b005      	add	sp, #20
 8013b40:	bd30      	pop	{r4, r5, pc}
 8013b42:	6803      	ldr	r3, [r0, #0]
 8013b44:	4621      	mov	r1, r4
 8013b46:	689b      	ldr	r3, [r3, #8]
 8013b48:	4798      	blx	r3
 8013b4a:	4b0a      	ldr	r3, [pc, #40]	; (8013b74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 8013b4c:	6818      	ldr	r0, [r3, #0]
 8013b4e:	b118      	cbz	r0, 8013b58 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 8013b50:	6803      	ldr	r3, [r0, #0]
 8013b52:	4621      	mov	r1, r4
 8013b54:	689b      	ldr	r3, [r3, #8]
 8013b56:	4798      	blx	r3
 8013b58:	4b07      	ldr	r3, [pc, #28]	; (8013b78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 8013b5a:	6818      	ldr	r0, [r3, #0]
 8013b5c:	6803      	ldr	r3, [r0, #0]
 8013b5e:	4621      	mov	r1, r4
 8013b60:	69db      	ldr	r3, [r3, #28]
 8013b62:	4798      	blx	r3
 8013b64:	e7eb      	b.n	8013b3e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8013b66:	bf00      	nop
 8013b68:	20020080 	.word	0x20020080
 8013b6c:	20020082 	.word	0x20020082
 8013b70:	200200c8 	.word	0x200200c8
 8013b74:	200200c4 	.word	0x200200c4
 8013b78:	2002008c 	.word	0x2002008c

08013b7c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 8013b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b80:	4604      	mov	r4, r0
 8013b82:	b09b      	sub	sp, #108	; 0x6c
 8013b84:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 8013b88:	b129      	cbz	r1, 8013b96 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 8013b8a:	2300      	movs	r3, #0
 8013b8c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8013b90:	b01b      	add	sp, #108	; 0x6c
 8013b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b96:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8013b9a:	4630      	mov	r0, r6
 8013b9c:	f7fb fca1 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013ba0:	4605      	mov	r5, r0
 8013ba2:	b940      	cbnz	r0, 8013bb6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 8013ba4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013ba8:	4620      	mov	r0, r4
 8013baa:	f7ff fc8b 	bl	80134c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8013bae:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8013bb2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8013bb6:	4ba7      	ldr	r3, [pc, #668]	; (8013e54 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 8013bb8:	681b      	ldr	r3, [r3, #0]
 8013bba:	b33b      	cbz	r3, 8013c0c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8013bbc:	4da6      	ldr	r5, [pc, #664]	; (8013e58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 8013bbe:	4628      	mov	r0, r5
 8013bc0:	f7fb fc8f 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013bc4:	4606      	mov	r6, r0
 8013bc6:	bb08      	cbnz	r0, 8013c0c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8013bc8:	4628      	mov	r0, r5
 8013bca:	f7ff f9a7 	bl	8012f1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013bce:	6829      	ldr	r1, [r5, #0]
 8013bd0:	686a      	ldr	r2, [r5, #4]
 8013bd2:	4620      	mov	r0, r4
 8013bd4:	f7ff fc76 	bl	80134c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8013bd8:	802e      	strh	r6, [r5, #0]
 8013bda:	806e      	strh	r6, [r5, #2]
 8013bdc:	80ae      	strh	r6, [r5, #4]
 8013bde:	80ee      	strh	r6, [r5, #6]
 8013be0:	4f9e      	ldr	r7, [pc, #632]	; (8013e5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 8013be2:	a809      	add	r0, sp, #36	; 0x24
 8013be4:	f7ff fbd7 	bl	8013396 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013be8:	883d      	ldrh	r5, [r7, #0]
 8013bea:	462e      	mov	r6, r5
 8013bec:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8013bf0:	42b3      	cmp	r3, r6
 8013bf2:	d910      	bls.n	8013c16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 8013bf4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8013bf8:	a809      	add	r0, sp, #36	; 0x24
 8013bfa:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8013bfe:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8013c02:	3601      	adds	r6, #1
 8013c04:	f7ff fc3c 	bl	8013480 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8013c08:	b2b6      	uxth	r6, r6
 8013c0a:	e7ef      	b.n	8013bec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 8013c0c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8013c10:	2b00      	cmp	r3, #0
 8013c12:	d1e5      	bne.n	8013be0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 8013c14:	e7bc      	b.n	8013b90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8013c16:	462e      	mov	r6, r5
 8013c18:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8013c1c:	42b3      	cmp	r3, r6
 8013c1e:	d90b      	bls.n	8013c38 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 8013c20:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8013c24:	4620      	mov	r0, r4
 8013c26:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8013c2a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8013c2e:	3601      	adds	r6, #1
 8013c30:	f7ff fc48 	bl	80134c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8013c34:	b2b6      	uxth	r6, r6
 8013c36:	e7ef      	b.n	8013c18 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 8013c38:	4a89      	ldr	r2, [pc, #548]	; (8013e60 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 8013c3a:	6813      	ldr	r3, [r2, #0]
 8013c3c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8013c40:	2b01      	cmp	r3, #1
 8013c42:	4690      	mov	r8, r2
 8013c44:	f040 8094 	bne.w	8013d70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 8013c48:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8013c4c:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 8013c50:	33aa      	adds	r3, #170	; 0xaa
 8013c52:	f04f 0900 	mov.w	r9, #0
 8013c56:	42a8      	cmp	r0, r5
 8013c58:	f103 0308 	add.w	r3, r3, #8
 8013c5c:	dd0a      	ble.n	8013c74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 8013c5e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8013c62:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 8013c66:	440a      	add	r2, r1
 8013c68:	b212      	sxth	r2, r2
 8013c6a:	4591      	cmp	r9, r2
 8013c6c:	bfb8      	it	lt
 8013c6e:	4691      	movlt	r9, r2
 8013c70:	3501      	adds	r5, #1
 8013c72:	e7f0      	b.n	8013c56 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 8013c74:	4b7b      	ldr	r3, [pc, #492]	; (8013e64 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 8013c76:	4e7c      	ldr	r6, [pc, #496]	; (8013e68 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 8013c78:	881d      	ldrh	r5, [r3, #0]
 8013c7a:	2300      	movs	r3, #0
 8013c7c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8013c80:	2d0f      	cmp	r5, #15
 8013c82:	bf8c      	ite	hi
 8013c84:	08ed      	lsrhi	r5, r5, #3
 8013c86:	2501      	movls	r5, #1
 8013c88:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013c8c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8013c90:	f8d8 0000 	ldr.w	r0, [r8]
 8013c94:	440b      	add	r3, r1
 8013c96:	b21b      	sxth	r3, r3
 8013c98:	4599      	cmp	r9, r3
 8013c9a:	6802      	ldr	r2, [r0, #0]
 8013c9c:	dd4b      	ble.n	8013d36 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 8013c9e:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 8013ca2:	4798      	blx	r3
 8013ca4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013ca8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013cac:	4413      	add	r3, r2
 8013cae:	b21b      	sxth	r3, r3
 8013cb0:	195a      	adds	r2, r3, r5
 8013cb2:	4290      	cmp	r0, r2
 8013cb4:	da07      	bge.n	8013cc6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8013cb6:	4581      	cmp	r9, r0
 8013cb8:	dd05      	ble.n	8013cc6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8013cba:	4298      	cmp	r0, r3
 8013cbc:	da33      	bge.n	8013d26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8013cbe:	2b00      	cmp	r3, #0
 8013cc0:	dd31      	ble.n	8013d26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8013cc2:	4648      	mov	r0, r9
 8013cc4:	e004      	b.n	8013cd0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 8013cc6:	4298      	cmp	r0, r3
 8013cc8:	dbfb      	blt.n	8013cc2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8013cca:	4548      	cmp	r0, r9
 8013ccc:	bfa8      	it	ge
 8013cce:	4648      	movge	r0, r9
 8013cd0:	f9b6 2000 	ldrsh.w	r2, [r6]
 8013cd4:	f8b7 a000 	ldrh.w	sl, [r7]
 8013cd8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013cdc:	2100      	movs	r1, #0
 8013cde:	1ac0      	subs	r0, r0, r3
 8013ce0:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013ce4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013ce8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013cec:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8013cf0:	4553      	cmp	r3, sl
 8013cf2:	d9c9      	bls.n	8013c88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8013cf4:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8013cf8:	ab07      	add	r3, sp, #28
 8013cfa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8013cfe:	6851      	ldr	r1, [r2, #4]
 8013d00:	c303      	stmia	r3!, {r0, r1}
 8013d02:	a807      	add	r0, sp, #28
 8013d04:	a905      	add	r1, sp, #20
 8013d06:	f7fb fba9 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8013d0a:	a807      	add	r0, sp, #28
 8013d0c:	f7fb fbe9 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d10:	b920      	cbnz	r0, 8013d1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 8013d12:	6823      	ldr	r3, [r4, #0]
 8013d14:	a907      	add	r1, sp, #28
 8013d16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013d18:	4620      	mov	r0, r4
 8013d1a:	4798      	blx	r3
 8013d1c:	f10a 0a01 	add.w	sl, sl, #1
 8013d20:	fa1f fa8a 	uxth.w	sl, sl
 8013d24:	e7e2      	b.n	8013cec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 8013d26:	f8d8 0000 	ldr.w	r0, [r8]
 8013d2a:	6803      	ldr	r3, [r0, #0]
 8013d2c:	2101      	movs	r1, #1
 8013d2e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8013d32:	4798      	blx	r3
 8013d34:	e7a8      	b.n	8013c88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8013d36:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8013d38:	4798      	blx	r3
 8013d3a:	4b4c      	ldr	r3, [pc, #304]	; (8013e6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 8013d3c:	781b      	ldrb	r3, [r3, #0]
 8013d3e:	2b00      	cmp	r3, #0
 8013d40:	f43f af26 	beq.w	8013b90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8013d44:	2300      	movs	r3, #0
 8013d46:	883d      	ldrh	r5, [r7, #0]
 8013d48:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8013d4c:	34ea      	adds	r4, #234	; 0xea
 8013d4e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8013d52:	42ab      	cmp	r3, r5
 8013d54:	f67f af1c 	bls.w	8013b90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8013d58:	ab1a      	add	r3, sp, #104	; 0x68
 8013d5a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8013d5e:	3b44      	subs	r3, #68	; 0x44
 8013d60:	e893 0006 	ldmia.w	r3, {r1, r2}
 8013d64:	4620      	mov	r0, r4
 8013d66:	3501      	adds	r5, #1
 8013d68:	f7ff fb8a 	bl	8013480 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8013d6c:	b2ad      	uxth	r5, r5
 8013d6e:	e7ee      	b.n	8013d4e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 8013d70:	2b02      	cmp	r3, #2
 8013d72:	f040 813e 	bne.w	8013ff2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 8013d76:	4b3e      	ldr	r3, [pc, #248]	; (8013e70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 8013d78:	781b      	ldrb	r3, [r3, #0]
 8013d7a:	2b01      	cmp	r3, #1
 8013d7c:	d02c      	beq.n	8013dd8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 8013d7e:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 8013d82:	883a      	ldrh	r2, [r7, #0]
 8013d84:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8013d88:	3201      	adds	r2, #1
 8013d8a:	b292      	uxth	r2, r2
 8013d8c:	2900      	cmp	r1, #0
 8013d8e:	d0d4      	beq.n	8013d3a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8013d90:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8013d94:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8013d98:	441d      	add	r5, r3
 8013d9a:	b22d      	sxth	r5, r5
 8013d9c:	4610      	mov	r0, r2
 8013d9e:	f04f 0a00 	mov.w	sl, #0
 8013da2:	b283      	uxth	r3, r0
 8013da4:	4299      	cmp	r1, r3
 8013da6:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 8013daa:	f240 80c5 	bls.w	8013f38 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 8013dae:	4426      	add	r6, r4
 8013db0:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 8013db4:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 8013db8:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 8013dbc:	4573      	cmp	r3, lr
 8013dbe:	4684      	mov	ip, r0
 8013dc0:	f340 80a7 	ble.w	8013f12 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 8013dc4:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 8013dc8:	4475      	add	r5, lr
 8013dca:	b22d      	sxth	r5, r5
 8013dcc:	429d      	cmp	r5, r3
 8013dce:	bfa8      	it	ge
 8013dd0:	461d      	movge	r5, r3
 8013dd2:	3001      	adds	r0, #1
 8013dd4:	46e2      	mov	sl, ip
 8013dd6:	e7e4      	b.n	8013da2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 8013dd8:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8013ddc:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8013de0:	f1bb 0f00 	cmp.w	fp, #0
 8013de4:	d0a9      	beq.n	8013d3a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8013de6:	883b      	ldrh	r3, [r7, #0]
 8013de8:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8013dec:	3301      	adds	r3, #1
 8013dee:	b29b      	uxth	r3, r3
 8013df0:	2600      	movs	r6, #0
 8013df2:	b299      	uxth	r1, r3
 8013df4:	458b      	cmp	fp, r1
 8013df6:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 8013dfa:	d93b      	bls.n	8013e74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 8013dfc:	4425      	add	r5, r4
 8013dfe:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8013e02:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8013e06:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8013e0a:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8013e0e:	4408      	add	r0, r1
 8013e10:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8013e14:	4471      	add	r1, lr
 8013e16:	b200      	sxth	r0, r0
 8013e18:	b209      	sxth	r1, r1
 8013e1a:	4288      	cmp	r0, r1
 8013e1c:	469c      	mov	ip, r3
 8013e1e:	da06      	bge.n	8013e2e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 8013e20:	4586      	cmp	lr, r0
 8013e22:	4672      	mov	r2, lr
 8013e24:	bfb8      	it	lt
 8013e26:	4602      	movlt	r2, r0
 8013e28:	3301      	adds	r3, #1
 8013e2a:	4666      	mov	r6, ip
 8013e2c:	e7e1      	b.n	8013df2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 8013e2e:	d10b      	bne.n	8013e48 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 8013e30:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8013e34:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8013e38:	458c      	cmp	ip, r1
 8013e3a:	bfb4      	ite	lt
 8013e3c:	469c      	movlt	ip, r3
 8013e3e:	46b4      	movge	ip, r6
 8013e40:	4572      	cmp	r2, lr
 8013e42:	bfb8      	it	lt
 8013e44:	4672      	movlt	r2, lr
 8013e46:	e7ef      	b.n	8013e28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 8013e48:	428a      	cmp	r2, r1
 8013e4a:	bfb8      	it	lt
 8013e4c:	460a      	movlt	r2, r1
 8013e4e:	46b4      	mov	ip, r6
 8013e50:	e7ea      	b.n	8013e28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 8013e52:	bf00      	nop
 8013e54:	200200c4 	.word	0x200200c4
 8013e58:	200200d0 	.word	0x200200d0
 8013e5c:	20000064 	.word	0x20000064
 8013e60:	2002008c 	.word	0x2002008c
 8013e64:	20020082 	.word	0x20020082
 8013e68:	20020080 	.word	0x20020080
 8013e6c:	2002008a 	.word	0x2002008a
 8013e70:	20020084 	.word	0x20020084
 8013e74:	1961      	adds	r1, r4, r5
 8013e76:	ab07      	add	r3, sp, #28
 8013e78:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8013e7c:	6849      	ldr	r1, [r1, #4]
 8013e7e:	c303      	stmia	r3!, {r0, r1}
 8013e80:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8013e84:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013e88:	2b13      	cmp	r3, #19
 8013e8a:	bfd8      	it	le
 8013e8c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8013e90:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013e94:	440b      	add	r3, r1
 8013e96:	1a9b      	subs	r3, r3, r2
 8013e98:	a807      	add	r0, sp, #28
 8013e9a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013e9e:	f7ff f857 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013ea2:	a807      	add	r0, sp, #28
 8013ea4:	f7fb fb1d 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013ea8:	2800      	cmp	r0, #0
 8013eaa:	d197      	bne.n	8013ddc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8013eac:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013eb0:	f8d8 0000 	ldr.w	r0, [r8]
 8013eb4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013eb8:	f8d0 e000 	ldr.w	lr, [r0]
 8013ebc:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8013ec0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013ec4:	f1bc 0f14 	cmp.w	ip, #20
 8013ec8:	bfa8      	it	ge
 8013eca:	f04f 0c14 	movge.w	ip, #20
 8013ece:	fa1f fc8c 	uxth.w	ip, ip
 8013ed2:	f8cd c000 	str.w	ip, [sp]
 8013ed6:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 8013eda:	47d0      	blx	sl
 8013edc:	4682      	mov	sl, r0
 8013ede:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013ee2:	a807      	add	r0, sp, #28
 8013ee4:	f7ff f81a 	bl	8012f1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013ee8:	6823      	ldr	r3, [r4, #0]
 8013eea:	4425      	add	r5, r4
 8013eec:	4620      	mov	r0, r4
 8013eee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013ef0:	a907      	add	r1, sp, #28
 8013ef2:	4798      	blx	r3
 8013ef4:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8013ef8:	eba0 000a 	sub.w	r0, r0, sl
 8013efc:	b200      	sxth	r0, r0
 8013efe:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8013f02:	2800      	cmp	r0, #0
 8013f04:	f47f af6a 	bne.w	8013ddc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8013f08:	b2b1      	uxth	r1, r6
 8013f0a:	4648      	mov	r0, r9
 8013f0c:	f7ff fa96 	bl	801343c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013f10:	e764      	b.n	8013ddc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8013f12:	d10c      	bne.n	8013f2e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 8013f14:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 8013f18:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 8013f1c:	45b4      	cmp	ip, r6
 8013f1e:	bfb4      	ite	lt
 8013f20:	4684      	movlt	ip, r0
 8013f22:	46d4      	movge	ip, sl
 8013f24:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 8013f28:	4433      	add	r3, r6
 8013f2a:	b21b      	sxth	r3, r3
 8013f2c:	e74e      	b.n	8013dcc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 8013f2e:	4575      	cmp	r5, lr
 8013f30:	bfa8      	it	ge
 8013f32:	4675      	movge	r5, lr
 8013f34:	46d4      	mov	ip, sl
 8013f36:	e74c      	b.n	8013dd2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 8013f38:	eb0b 0006 	add.w	r0, fp, r6
 8013f3c:	4426      	add	r6, r4
 8013f3e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8013f42:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 8013f46:	f1b9 0f13 	cmp.w	r9, #19
 8013f4a:	bfde      	ittt	le
 8013f4c:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 8013f50:	444d      	addle	r5, r9
 8013f52:	b22d      	sxthle	r5, r5
 8013f54:	f7fb fac5 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f58:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013f5c:	2800      	cmp	r0, #0
 8013f5e:	f47f af15 	bne.w	8013d8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 8013f62:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 8013f66:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013f6a:	eba5 050c 	sub.w	r5, r5, ip
 8013f6e:	fa1f f28c 	uxth.w	r2, ip
 8013f72:	fa1f f989 	uxth.w	r9, r9
 8013f76:	eb02 0009 	add.w	r0, r2, r9
 8013f7a:	2d14      	cmp	r5, #20
 8013f7c:	bfa8      	it	ge
 8013f7e:	2514      	movge	r5, #20
 8013f80:	b200      	sxth	r0, r0
 8013f82:	fa1f fe85 	uxth.w	lr, r5
 8013f86:	eba0 000c 	sub.w	r0, r0, ip
 8013f8a:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 8013f8e:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 8013f92:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013f96:	4586      	cmp	lr, r0
 8013f98:	f8d8 0000 	ldr.w	r0, [r8]
 8013f9c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8013fa0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013fa4:	bfb8      	it	lt
 8013fa6:	46f1      	movlt	r9, lr
 8013fa8:	6805      	ldr	r5, [r0, #0]
 8013faa:	f8cd 9000 	str.w	r9, [sp]
 8013fae:	b29b      	uxth	r3, r3
 8013fb0:	b289      	uxth	r1, r1
 8013fb2:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 8013fb6:	47a8      	blx	r5
 8013fb8:	6823      	ldr	r3, [r4, #0]
 8013fba:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013fbe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013fc0:	a907      	add	r1, sp, #28
 8013fc2:	4620      	mov	r0, r4
 8013fc4:	4798      	blx	r3
 8013fc6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013fca:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 8013fce:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 8013fd2:	1a5b      	subs	r3, r3, r1
 8013fd4:	440a      	add	r2, r1
 8013fd6:	b21b      	sxth	r3, r3
 8013fd8:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8013fdc:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 8013fe0:	2b00      	cmp	r3, #0
 8013fe2:	f47f aece 	bne.w	8013d82 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 8013fe6:	fa1f f18a 	uxth.w	r1, sl
 8013fea:	4658      	mov	r0, fp
 8013fec:	f7ff fa26 	bl	801343c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013ff0:	e6c7      	b.n	8013d82 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 8013ff2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8013ff6:	42ab      	cmp	r3, r5
 8013ff8:	f67f ae9f 	bls.w	8013d3a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8013ffc:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8014000:	ab07      	add	r3, sp, #28
 8014002:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8014006:	6851      	ldr	r1, [r2, #4]
 8014008:	c303      	stmia	r3!, {r0, r1}
 801400a:	a807      	add	r0, sp, #28
 801400c:	f7fb fa69 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014010:	b920      	cbnz	r0, 801401c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 8014012:	6823      	ldr	r3, [r4, #0]
 8014014:	a907      	add	r1, sp, #28
 8014016:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014018:	4620      	mov	r0, r4
 801401a:	4798      	blx	r3
 801401c:	3501      	adds	r5, #1
 801401e:	b2ad      	uxth	r5, r5
 8014020:	e7e7      	b.n	8013ff2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 8014022:	bf00      	nop

08014024 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014024:	4b03      	ldr	r3, [pc, #12]	; (8014034 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014026:	2200      	movs	r2, #0
 8014028:	801a      	strh	r2, [r3, #0]
 801402a:	805a      	strh	r2, [r3, #2]
 801402c:	809a      	strh	r2, [r3, #4]
 801402e:	80da      	strh	r2, [r3, #6]
 8014030:	4770      	bx	lr
 8014032:	bf00      	nop
 8014034:	200200d0 	.word	0x200200d0

08014038 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>:
 8014038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801403c:	4604      	mov	r4, r0
 801403e:	b09c      	sub	sp, #112	; 0x70
 8014040:	a803      	add	r0, sp, #12
 8014042:	4615      	mov	r5, r2
 8014044:	460e      	mov	r6, r1
 8014046:	461f      	mov	r7, r3
 8014048:	f000 fe05 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 801404c:	6823      	ldr	r3, [r4, #0]
 801404e:	4620      	mov	r0, r4
 8014050:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014052:	4798      	blx	r3
 8014054:	6823      	ldr	r3, [r4, #0]
 8014056:	4680      	mov	r8, r0
 8014058:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801405a:	4620      	mov	r0, r4
 801405c:	4798      	blx	r3
 801405e:	4629      	mov	r1, r5
 8014060:	9000      	str	r0, [sp, #0]
 8014062:	4643      	mov	r3, r8
 8014064:	463a      	mov	r2, r7
 8014066:	a803      	add	r0, sp, #12
 8014068:	f000 fe60 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801406c:	2500      	movs	r5, #0
 801406e:	a803      	add	r0, sp, #12
 8014070:	f000 fe18 	bl	8014ca4 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014074:	b958      	cbnz	r0, 801408e <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x56>
 8014076:	4633      	mov	r3, r6
 8014078:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801407c:	4621      	mov	r1, r4
 801407e:	a803      	add	r0, sp, #12
 8014080:	f7fd fe38 	bl	8011cf4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014084:	b203      	sxth	r3, r0
 8014086:	42ab      	cmp	r3, r5
 8014088:	bfc8      	it	gt
 801408a:	4605      	movgt	r5, r0
 801408c:	e7ef      	b.n	801406e <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x36>
 801408e:	4628      	mov	r0, r5
 8014090:	b01c      	add	sp, #112	; 0x70
 8014092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014096 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8014096:	b508      	push	{r3, lr}
 8014098:	6803      	ldr	r3, [r0, #0]
 801409a:	68db      	ldr	r3, [r3, #12]
 801409c:	4798      	blx	r3
 801409e:	b128      	cbz	r0, 80140ac <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80140a0:	7b43      	ldrb	r3, [r0, #13]
 80140a2:	7a80      	ldrb	r0, [r0, #10]
 80140a4:	005b      	lsls	r3, r3, #1
 80140a6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80140aa:	4318      	orrs	r0, r3
 80140ac:	bd08      	pop	{r3, pc}

080140ae <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80140ae:	b40e      	push	{r1, r2, r3}
 80140b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140b2:	b09e      	sub	sp, #120	; 0x78
 80140b4:	ab23      	add	r3, sp, #140	; 0x8c
 80140b6:	4605      	mov	r5, r0
 80140b8:	f853 4b04 	ldr.w	r4, [r3], #4
 80140bc:	9303      	str	r3, [sp, #12]
 80140be:	a805      	add	r0, sp, #20
 80140c0:	f000 fdc9 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 80140c4:	682b      	ldr	r3, [r5, #0]
 80140c6:	4628      	mov	r0, r5
 80140c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80140ca:	4798      	blx	r3
 80140cc:	682b      	ldr	r3, [r5, #0]
 80140ce:	4606      	mov	r6, r0
 80140d0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80140d2:	4628      	mov	r0, r5
 80140d4:	4798      	blx	r3
 80140d6:	4633      	mov	r3, r6
 80140d8:	ae1e      	add	r6, sp, #120	; 0x78
 80140da:	4621      	mov	r1, r4
 80140dc:	9000      	str	r0, [sp, #0]
 80140de:	9a03      	ldr	r2, [sp, #12]
 80140e0:	2400      	movs	r4, #0
 80140e2:	a805      	add	r0, sp, #20
 80140e4:	f000 fe22 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80140e8:	f846 4d68 	str.w	r4, [r6, #-104]!
 80140ec:	462a      	mov	r2, r5
 80140ee:	4633      	mov	r3, r6
 80140f0:	4621      	mov	r1, r4
 80140f2:	a805      	add	r0, sp, #20
 80140f4:	f001 fdaa 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80140f8:	b1f0      	cbz	r0, 8014138 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80140fa:	280a      	cmp	r0, #10
 80140fc:	d018      	beq.n	8014130 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80140fe:	9f04      	ldr	r7, [sp, #16]
 8014100:	b1b7      	cbz	r7, 8014130 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014102:	7b78      	ldrb	r0, [r7, #13]
 8014104:	7a3b      	ldrb	r3, [r7, #8]
 8014106:	88aa      	ldrh	r2, [r5, #4]
 8014108:	00c1      	lsls	r1, r0, #3
 801410a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801410e:	4319      	orrs	r1, r3
 8014110:	0643      	lsls	r3, r0, #25
 8014112:	bf44      	itt	mi
 8014114:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8014118:	b219      	sxthmi	r1, r3
 801411a:	0100      	lsls	r0, r0, #4
 801411c:	79fb      	ldrb	r3, [r7, #7]
 801411e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014122:	4303      	orrs	r3, r0
 8014124:	4413      	add	r3, r2
 8014126:	1a5b      	subs	r3, r3, r1
 8014128:	b29b      	uxth	r3, r3
 801412a:	42a3      	cmp	r3, r4
 801412c:	bfc8      	it	gt
 801412e:	b21c      	sxthgt	r4, r3
 8014130:	4633      	mov	r3, r6
 8014132:	462a      	mov	r2, r5
 8014134:	2100      	movs	r1, #0
 8014136:	e7dc      	b.n	80140f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014138:	b2a0      	uxth	r0, r4
 801413a:	b01e      	add	sp, #120	; 0x78
 801413c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014140:	b003      	add	sp, #12
 8014142:	4770      	bx	lr

08014144 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8014144:	b40e      	push	{r1, r2, r3}
 8014146:	b570      	push	{r4, r5, r6, lr}
 8014148:	b09d      	sub	sp, #116	; 0x74
 801414a:	ab21      	add	r3, sp, #132	; 0x84
 801414c:	4604      	mov	r4, r0
 801414e:	f853 5b04 	ldr.w	r5, [r3], #4
 8014152:	9302      	str	r3, [sp, #8]
 8014154:	a803      	add	r0, sp, #12
 8014156:	f000 fd7e 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 801415a:	6823      	ldr	r3, [r4, #0]
 801415c:	4620      	mov	r0, r4
 801415e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014160:	4798      	blx	r3
 8014162:	6823      	ldr	r3, [r4, #0]
 8014164:	4606      	mov	r6, r0
 8014166:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014168:	4620      	mov	r0, r4
 801416a:	4798      	blx	r3
 801416c:	4633      	mov	r3, r6
 801416e:	9000      	str	r0, [sp, #0]
 8014170:	9a02      	ldr	r2, [sp, #8]
 8014172:	4629      	mov	r1, r5
 8014174:	a803      	add	r0, sp, #12
 8014176:	f000 fdd9 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801417a:	a803      	add	r0, sp, #12
 801417c:	f001 fe60 	bl	8015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014180:	2401      	movs	r4, #1
 8014182:	b2a3      	uxth	r3, r4
 8014184:	b140      	cbz	r0, 8014198 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8014186:	280a      	cmp	r0, #10
 8014188:	bf08      	it	eq
 801418a:	3301      	addeq	r3, #1
 801418c:	a803      	add	r0, sp, #12
 801418e:	bf08      	it	eq
 8014190:	b21c      	sxtheq	r4, r3
 8014192:	f001 fe55 	bl	8015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014196:	e7f4      	b.n	8014182 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8014198:	4618      	mov	r0, r3
 801419a:	b01d      	add	sp, #116	; 0x74
 801419c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141a0:	b003      	add	sp, #12
 80141a2:	4770      	bx	lr

080141a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80141a4:	b40e      	push	{r1, r2, r3}
 80141a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80141a8:	b09e      	sub	sp, #120	; 0x78
 80141aa:	ab23      	add	r3, sp, #140	; 0x8c
 80141ac:	4604      	mov	r4, r0
 80141ae:	f853 5b04 	ldr.w	r5, [r3], #4
 80141b2:	9303      	str	r3, [sp, #12]
 80141b4:	a805      	add	r0, sp, #20
 80141b6:	f000 fd4e 	bl	8014c56 <_ZN8touchgfx12TextProviderC1Ev>
 80141ba:	6823      	ldr	r3, [r4, #0]
 80141bc:	4620      	mov	r0, r4
 80141be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141c0:	4798      	blx	r3
 80141c2:	6823      	ldr	r3, [r4, #0]
 80141c4:	4606      	mov	r6, r0
 80141c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80141c8:	4620      	mov	r0, r4
 80141ca:	4798      	blx	r3
 80141cc:	4633      	mov	r3, r6
 80141ce:	4629      	mov	r1, r5
 80141d0:	9000      	str	r0, [sp, #0]
 80141d2:	9a03      	ldr	r2, [sp, #12]
 80141d4:	a805      	add	r0, sp, #20
 80141d6:	ad1e      	add	r5, sp, #120	; 0x78
 80141d8:	f000 fda8 	bl	8014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80141dc:	2100      	movs	r1, #0
 80141de:	f845 1d68 	str.w	r1, [r5, #-104]!
 80141e2:	4622      	mov	r2, r4
 80141e4:	462b      	mov	r3, r5
 80141e6:	a805      	add	r0, sp, #20
 80141e8:	f001 fd30 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80141ec:	26ff      	movs	r6, #255	; 0xff
 80141ee:	b1d8      	cbz	r0, 8014228 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 80141f0:	280a      	cmp	r0, #10
 80141f2:	d012      	beq.n	801421a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 80141f4:	9804      	ldr	r0, [sp, #16]
 80141f6:	b180      	cbz	r0, 801421a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 80141f8:	7b47      	ldrb	r7, [r0, #13]
 80141fa:	7922      	ldrb	r2, [r4, #4]
 80141fc:	00fb      	lsls	r3, r7, #3
 80141fe:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014202:	7a03      	ldrb	r3, [r0, #8]
 8014204:	430b      	orrs	r3, r1
 8014206:	0679      	lsls	r1, r7, #25
 8014208:	bf44      	itt	mi
 801420a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801420e:	b21b      	sxthmi	r3, r3
 8014210:	1ad3      	subs	r3, r2, r3
 8014212:	b2db      	uxtb	r3, r3
 8014214:	429e      	cmp	r6, r3
 8014216:	bf28      	it	cs
 8014218:	461e      	movcs	r6, r3
 801421a:	462b      	mov	r3, r5
 801421c:	4622      	mov	r2, r4
 801421e:	2100      	movs	r1, #0
 8014220:	a805      	add	r0, sp, #20
 8014222:	f001 fd13 	bl	8015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014226:	e7e2      	b.n	80141ee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8014228:	4630      	mov	r0, r6
 801422a:	b01e      	add	sp, #120	; 0x78
 801422c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014230:	b003      	add	sp, #12
 8014232:	4770      	bx	lr

08014234 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8014234:	b513      	push	{r0, r1, r4, lr}
 8014236:	6803      	ldr	r3, [r0, #0]
 8014238:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801423c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014240:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014244:	2400      	movs	r4, #0
 8014246:	9400      	str	r4, [sp, #0]
 8014248:	f8ad 2006 	strh.w	r2, [sp, #6]
 801424c:	691b      	ldr	r3, [r3, #16]
 801424e:	4669      	mov	r1, sp
 8014250:	4798      	blx	r3
 8014252:	b002      	add	sp, #8
 8014254:	bd10      	pop	{r4, pc}

08014256 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8014256:	b538      	push	{r3, r4, r5, lr}
 8014258:	680b      	ldr	r3, [r1, #0]
 801425a:	460c      	mov	r4, r1
 801425c:	68db      	ldr	r3, [r3, #12]
 801425e:	4605      	mov	r5, r0
 8014260:	4798      	blx	r3
 8014262:	6823      	ldr	r3, [r4, #0]
 8014264:	4620      	mov	r0, r4
 8014266:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014268:	4629      	mov	r1, r5
 801426a:	4798      	blx	r3
 801426c:	4628      	mov	r0, r5
 801426e:	bd38      	pop	{r3, r4, r5, pc}

08014270 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8014270:	b410      	push	{r4}
 8014272:	880a      	ldrh	r2, [r1, #0]
 8014274:	8884      	ldrh	r4, [r0, #4]
 8014276:	4422      	add	r2, r4
 8014278:	800a      	strh	r2, [r1, #0]
 801427a:	88c4      	ldrh	r4, [r0, #6]
 801427c:	884a      	ldrh	r2, [r1, #2]
 801427e:	4422      	add	r2, r4
 8014280:	804a      	strh	r2, [r1, #2]
 8014282:	6940      	ldr	r0, [r0, #20]
 8014284:	b120      	cbz	r0, 8014290 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8014286:	6803      	ldr	r3, [r0, #0]
 8014288:	f85d 4b04 	ldr.w	r4, [sp], #4
 801428c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801428e:	4718      	bx	r3
 8014290:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014294:	4770      	bx	lr

08014296 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8014296:	b570      	push	{r4, r5, r6, lr}
 8014298:	8882      	ldrh	r2, [r0, #4]
 801429a:	880b      	ldrh	r3, [r1, #0]
 801429c:	4413      	add	r3, r2
 801429e:	800b      	strh	r3, [r1, #0]
 80142a0:	88c2      	ldrh	r2, [r0, #6]
 80142a2:	884b      	ldrh	r3, [r1, #2]
 80142a4:	460c      	mov	r4, r1
 80142a6:	4413      	add	r3, r2
 80142a8:	804b      	strh	r3, [r1, #2]
 80142aa:	4605      	mov	r5, r0
 80142ac:	1d01      	adds	r1, r0, #4
 80142ae:	4620      	mov	r0, r4
 80142b0:	f7fb f8d4 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 80142b4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80142b8:	2b00      	cmp	r3, #0
 80142ba:	dd0b      	ble.n	80142d4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80142bc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80142c0:	2b00      	cmp	r3, #0
 80142c2:	dd07      	ble.n	80142d4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80142c4:	6968      	ldr	r0, [r5, #20]
 80142c6:	b128      	cbz	r0, 80142d4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80142c8:	6803      	ldr	r3, [r0, #0]
 80142ca:	4621      	mov	r1, r4
 80142cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80142ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142d2:	4718      	bx	r3
 80142d4:	bd70      	pop	{r4, r5, r6, pc}
	...

080142d8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80142d8:	b570      	push	{r4, r5, r6, lr}
 80142da:	8882      	ldrh	r2, [r0, #4]
 80142dc:	880b      	ldrh	r3, [r1, #0]
 80142de:	4413      	add	r3, r2
 80142e0:	800b      	strh	r3, [r1, #0]
 80142e2:	88c2      	ldrh	r2, [r0, #6]
 80142e4:	884b      	ldrh	r3, [r1, #2]
 80142e6:	460c      	mov	r4, r1
 80142e8:	4413      	add	r3, r2
 80142ea:	804b      	strh	r3, [r1, #2]
 80142ec:	4605      	mov	r5, r0
 80142ee:	1d01      	adds	r1, r0, #4
 80142f0:	4620      	mov	r0, r4
 80142f2:	f7fb f8b3 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 80142f6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80142fa:	2b00      	cmp	r3, #0
 80142fc:	dd15      	ble.n	801432a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 80142fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014302:	2b00      	cmp	r3, #0
 8014304:	dd11      	ble.n	801432a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8014306:	6968      	ldr	r0, [r5, #20]
 8014308:	b128      	cbz	r0, 8014316 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801430a:	6803      	ldr	r3, [r0, #0]
 801430c:	691b      	ldr	r3, [r3, #16]
 801430e:	4621      	mov	r1, r4
 8014310:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014314:	4718      	bx	r3
 8014316:	4b05      	ldr	r3, [pc, #20]	; (801432c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 8014318:	681b      	ldr	r3, [r3, #0]
 801431a:	3304      	adds	r3, #4
 801431c:	429d      	cmp	r5, r3
 801431e:	d104      	bne.n	801432a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8014320:	f7fe ffe0 	bl	80132e4 <_ZN8touchgfx11Application11getInstanceEv>
 8014324:	6803      	ldr	r3, [r0, #0]
 8014326:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014328:	e7f1      	b.n	801430e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 801432a:	bd70      	pop	{r4, r5, r6, pc}
 801432c:	200200c8 	.word	0x200200c8

08014330 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8014330:	b570      	push	{r4, r5, r6, lr}
 8014332:	4604      	mov	r4, r0
 8014334:	4616      	mov	r6, r2
 8014336:	460d      	mov	r5, r1
 8014338:	b901      	cbnz	r1, 801433c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801433a:	b192      	cbz	r2, 8014362 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801433c:	6823      	ldr	r3, [r4, #0]
 801433e:	4620      	mov	r0, r4
 8014340:	695b      	ldr	r3, [r3, #20]
 8014342:	4798      	blx	r3
 8014344:	88e2      	ldrh	r2, [r4, #6]
 8014346:	88a1      	ldrh	r1, [r4, #4]
 8014348:	4432      	add	r2, r6
 801434a:	4429      	add	r1, r5
 801434c:	4620      	mov	r0, r4
 801434e:	b212      	sxth	r2, r2
 8014350:	b209      	sxth	r1, r1
 8014352:	f7ed ff9f 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8014356:	6823      	ldr	r3, [r4, #0]
 8014358:	4620      	mov	r0, r4
 801435a:	695b      	ldr	r3, [r3, #20]
 801435c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014360:	4718      	bx	r3
 8014362:	bd70      	pop	{r4, r5, r6, pc}

08014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8014364:	b510      	push	{r4, lr}
 8014366:	4604      	mov	r4, r0
 8014368:	4608      	mov	r0, r1
 801436a:	2300      	movs	r3, #0
 801436c:	8023      	strh	r3, [r4, #0]
 801436e:	8063      	strh	r3, [r4, #2]
 8014370:	6803      	ldr	r3, [r0, #0]
 8014372:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014376:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801437a:	80a1      	strh	r1, [r4, #4]
 801437c:	80e2      	strh	r2, [r4, #6]
 801437e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014380:	4621      	mov	r1, r4
 8014382:	4798      	blx	r3
 8014384:	4620      	mov	r0, r4
 8014386:	bd10      	pop	{r4, pc}

08014388 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8014388:	b530      	push	{r4, r5, lr}
 801438a:	8083      	strh	r3, [r0, #4]
 801438c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8014390:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8014394:	7183      	strb	r3, [r0, #6]
 8014396:	79c3      	ldrb	r3, [r0, #7]
 8014398:	6101      	str	r1, [r0, #16]
 801439a:	f365 0306 	bfi	r3, r5, #0, #7
 801439e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80143a2:	8282      	strh	r2, [r0, #20]
 80143a4:	f365 13c7 	bfi	r3, r5, #7, #1
 80143a8:	71c3      	strb	r3, [r0, #7]
 80143aa:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80143ae:	7203      	strb	r3, [r0, #8]
 80143b0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 80143b4:	7243      	strb	r3, [r0, #9]
 80143b6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80143ba:	8143      	strh	r3, [r0, #10]
 80143bc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 80143c0:	8183      	strh	r3, [r0, #12]
 80143c2:	4b01      	ldr	r3, [pc, #4]	; (80143c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 80143c4:	6003      	str	r3, [r0, #0]
 80143c6:	bd30      	pop	{r4, r5, pc}
 80143c8:	080286d0 	.word	0x080286d0

080143cc <_ZNK8touchgfx9ConstFont4findEt>:
 80143cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143ce:	6904      	ldr	r4, [r0, #16]
 80143d0:	b3bc      	cbz	r4, 8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80143d2:	88a3      	ldrh	r3, [r4, #4]
 80143d4:	8a82      	ldrh	r2, [r0, #20]
 80143d6:	1acb      	subs	r3, r1, r3
 80143d8:	f102 32ff 	add.w	r2, r2, #4294967295
 80143dc:	d431      	bmi.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80143de:	4293      	cmp	r3, r2
 80143e0:	dd0c      	ble.n	80143fc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80143e2:	230e      	movs	r3, #14
 80143e4:	fb03 4302 	mla	r3, r3, r2, r4
 80143e8:	889b      	ldrh	r3, [r3, #4]
 80143ea:	1a5b      	subs	r3, r3, r1
 80143ec:	1ad3      	subs	r3, r2, r3
 80143ee:	429a      	cmp	r2, r3
 80143f0:	db27      	blt.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80143f2:	2b00      	cmp	r3, #0
 80143f4:	bfbc      	itt	lt
 80143f6:	2302      	movlt	r3, #2
 80143f8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80143fc:	2500      	movs	r5, #0
 80143fe:	260e      	movs	r6, #14
 8014400:	4295      	cmp	r5, r2
 8014402:	dc1e      	bgt.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014404:	fb06 4003 	mla	r0, r6, r3, r4
 8014408:	8887      	ldrh	r7, [r0, #4]
 801440a:	42b9      	cmp	r1, r7
 801440c:	d01a      	beq.n	8014444 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801440e:	d20d      	bcs.n	801442c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8014410:	1e5a      	subs	r2, r3, #1
 8014412:	4295      	cmp	r5, r2
 8014414:	dc15      	bgt.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014416:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801441a:	1a5b      	subs	r3, r3, r1
 801441c:	1ad3      	subs	r3, r2, r3
 801441e:	429a      	cmp	r2, r3
 8014420:	db0f      	blt.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014422:	429d      	cmp	r5, r3
 8014424:	ddec      	ble.n	8014400 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014426:	1953      	adds	r3, r2, r5
 8014428:	105b      	asrs	r3, r3, #1
 801442a:	e7e9      	b.n	8014400 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801442c:	1c5d      	adds	r5, r3, #1
 801442e:	42aa      	cmp	r2, r5
 8014430:	db07      	blt.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014432:	8a43      	ldrh	r3, [r0, #18]
 8014434:	1acb      	subs	r3, r1, r3
 8014436:	442b      	add	r3, r5
 8014438:	429d      	cmp	r5, r3
 801443a:	dc02      	bgt.n	8014442 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801443c:	429a      	cmp	r2, r3
 801443e:	dadf      	bge.n	8014400 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014440:	e7f1      	b.n	8014426 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8014442:	2000      	movs	r0, #0
 8014444:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014446 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8014446:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014448:	4604      	mov	r4, r0
 801444a:	4617      	mov	r7, r2
 801444c:	461e      	mov	r6, r3
 801444e:	b911      	cbnz	r1, 8014456 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8014450:	2500      	movs	r5, #0
 8014452:	4628      	mov	r0, r5
 8014454:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014456:	290a      	cmp	r1, #10
 8014458:	d0fa      	beq.n	8014450 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801445a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801445e:	4291      	cmp	r1, r2
 8014460:	d0f6      	beq.n	8014450 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014462:	f242 020b 	movw	r2, #8203	; 0x200b
 8014466:	4291      	cmp	r1, r2
 8014468:	d0f2      	beq.n	8014450 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801446a:	f7ff ffaf 	bl	80143cc <_ZNK8touchgfx9ConstFont4findEt>
 801446e:	4605      	mov	r5, r0
 8014470:	b950      	cbnz	r0, 8014488 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8014472:	6823      	ldr	r3, [r4, #0]
 8014474:	4620      	mov	r0, r4
 8014476:	691b      	ldr	r3, [r3, #16]
 8014478:	4798      	blx	r3
 801447a:	4601      	mov	r1, r0
 801447c:	4620      	mov	r0, r4
 801447e:	f7ff ffa5 	bl	80143cc <_ZNK8touchgfx9ConstFont4findEt>
 8014482:	4605      	mov	r5, r0
 8014484:	2800      	cmp	r0, #0
 8014486:	d0e3      	beq.n	8014450 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014488:	6823      	ldr	r3, [r4, #0]
 801448a:	4629      	mov	r1, r5
 801448c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801448e:	4620      	mov	r0, r4
 8014490:	4798      	blx	r3
 8014492:	6038      	str	r0, [r7, #0]
 8014494:	6823      	ldr	r3, [r4, #0]
 8014496:	4620      	mov	r0, r4
 8014498:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801449a:	4798      	blx	r3
 801449c:	7030      	strb	r0, [r6, #0]
 801449e:	e7d8      	b.n	8014452 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080144a0 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 80144a0:	2000      	movs	r0, #0
 80144a2:	4770      	bx	lr

080144a4 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 80144a4:	2001      	movs	r0, #1
 80144a6:	4770      	bx	lr

080144a8 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 80144a8:	2002      	movs	r0, #2
 80144aa:	4770      	bx	lr

080144ac <_ZN8touchgfx6ScreenD1Ev>:
 80144ac:	4770      	bx	lr

080144ae <_ZN8touchgfx12GestureEventD1Ev>:
 80144ae:	4770      	bx	lr

080144b0 <_ZN8touchgfx9DragEventD1Ev>:
 80144b0:	4770      	bx	lr

080144b2 <_ZN8touchgfx10ClickEventD1Ev>:
 80144b2:	4770      	bx	lr

080144b4 <_ZN8touchgfx10ClickEventD0Ev>:
 80144b4:	b510      	push	{r4, lr}
 80144b6:	210c      	movs	r1, #12
 80144b8:	4604      	mov	r4, r0
 80144ba:	f00e fcf7 	bl	8022eac <_ZdlPvj>
 80144be:	4620      	mov	r0, r4
 80144c0:	bd10      	pop	{r4, pc}

080144c2 <_ZN8touchgfx9DragEventD0Ev>:
 80144c2:	b510      	push	{r4, lr}
 80144c4:	2110      	movs	r1, #16
 80144c6:	4604      	mov	r4, r0
 80144c8:	f00e fcf0 	bl	8022eac <_ZdlPvj>
 80144cc:	4620      	mov	r0, r4
 80144ce:	bd10      	pop	{r4, pc}

080144d0 <_ZN8touchgfx12GestureEventD0Ev>:
 80144d0:	b510      	push	{r4, lr}
 80144d2:	210c      	movs	r1, #12
 80144d4:	4604      	mov	r4, r0
 80144d6:	f00e fce9 	bl	8022eac <_ZdlPvj>
 80144da:	4620      	mov	r0, r4
 80144dc:	bd10      	pop	{r4, pc}

080144de <_ZN8touchgfx6ScreenD0Ev>:
 80144de:	b510      	push	{r4, lr}
 80144e0:	213c      	movs	r1, #60	; 0x3c
 80144e2:	4604      	mov	r4, r0
 80144e4:	f00e fce2 	bl	8022eac <_ZdlPvj>
 80144e8:	4620      	mov	r0, r4
 80144ea:	bd10      	pop	{r4, pc}

080144ec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80144ec:	b530      	push	{r4, r5, lr}
 80144ee:	460d      	mov	r5, r1
 80144f0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80144f2:	b087      	sub	sp, #28
 80144f4:	4604      	mov	r4, r0
 80144f6:	b301      	cbz	r1, 801453a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80144f8:	a801      	add	r0, sp, #4
 80144fa:	f7ff ff33 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80144fe:	892a      	ldrh	r2, [r5, #8]
 8014500:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014504:	7928      	ldrb	r0, [r5, #4]
 8014506:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801450a:	f88d 0010 	strb.w	r0, [sp, #16]
 801450e:	1ad2      	subs	r2, r2, r3
 8014510:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014512:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8014514:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014518:	441a      	add	r2, r3
 801451a:	896b      	ldrh	r3, [r5, #10]
 801451c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8014520:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014524:	1b5b      	subs	r3, r3, r5
 8014526:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8014528:	442b      	add	r3, r5
 801452a:	4d05      	ldr	r5, [pc, #20]	; (8014540 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801452c:	9503      	str	r5, [sp, #12]
 801452e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014532:	6803      	ldr	r3, [r0, #0]
 8014534:	a903      	add	r1, sp, #12
 8014536:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014538:	4798      	blx	r3
 801453a:	b007      	add	sp, #28
 801453c:	bd30      	pop	{r4, r5, pc}
 801453e:	bf00      	nop
 8014540:	08028750 	.word	0x08028750

08014544 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8014544:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014548:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801454a:	b08a      	sub	sp, #40	; 0x28
 801454c:	4604      	mov	r4, r0
 801454e:	460d      	mov	r5, r1
 8014550:	b113      	cbz	r3, 8014558 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8014552:	790b      	ldrb	r3, [r1, #4]
 8014554:	2b00      	cmp	r3, #0
 8014556:	d044      	beq.n	80145e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8014558:	f104 0804 	add.w	r8, r4, #4
 801455c:	4641      	mov	r1, r8
 801455e:	a803      	add	r0, sp, #12
 8014560:	f7ff ff00 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014564:	792b      	ldrb	r3, [r5, #4]
 8014566:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801456a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801456e:	b983      	cbnz	r3, 8014592 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8014570:	892a      	ldrh	r2, [r5, #8]
 8014572:	88e9      	ldrh	r1, [r5, #6]
 8014574:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8014578:	1b92      	subs	r2, r2, r6
 801457a:	1bc9      	subs	r1, r1, r7
 801457c:	9301      	str	r3, [sp, #4]
 801457e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8014582:	9300      	str	r3, [sp, #0]
 8014584:	b212      	sxth	r2, r2
 8014586:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801458a:	b209      	sxth	r1, r1
 801458c:	4640      	mov	r0, r8
 801458e:	f7fa fe81 	bl	800f294 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8014592:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8014594:	b329      	cbz	r1, 80145e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8014596:	a805      	add	r0, sp, #20
 8014598:	f7ff fee4 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801459c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80145a0:	792b      	ldrb	r3, [r5, #4]
 80145a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80145a4:	f88d 3020 	strb.w	r3, [sp, #32]
 80145a8:	1abf      	subs	r7, r7, r2
 80145aa:	88ea      	ldrh	r2, [r5, #6]
 80145ac:	4417      	add	r7, r2
 80145ae:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80145b0:	4417      	add	r7, r2
 80145b2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80145b6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80145ba:	1ab6      	subs	r6, r6, r2
 80145bc:	892a      	ldrh	r2, [r5, #8]
 80145be:	4416      	add	r6, r2
 80145c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80145c2:	4416      	add	r6, r2
 80145c4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80145c8:	4a07      	ldr	r2, [pc, #28]	; (80145e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80145ca:	9207      	str	r2, [sp, #28]
 80145cc:	2600      	movs	r6, #0
 80145ce:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80145d2:	6803      	ldr	r3, [r0, #0]
 80145d4:	a907      	add	r1, sp, #28
 80145d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80145d8:	4798      	blx	r3
 80145da:	792b      	ldrb	r3, [r5, #4]
 80145dc:	b10b      	cbz	r3, 80145e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80145de:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80145e2:	b00a      	add	sp, #40	; 0x28
 80145e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80145e8:	08028728 	.word	0x08028728

080145ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80145ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80145f0:	460c      	mov	r4, r1
 80145f2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80145f4:	b088      	sub	sp, #32
 80145f6:	4605      	mov	r5, r0
 80145f8:	2900      	cmp	r1, #0
 80145fa:	d06d      	beq.n	80146d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80145fc:	4668      	mov	r0, sp
 80145fe:	f7ff feb1 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014602:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8014604:	88e3      	ldrh	r3, [r4, #6]
 8014606:	f9bd 8000 	ldrsh.w	r8, [sp]
 801460a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801460e:	440b      	add	r3, r1
 8014610:	b21b      	sxth	r3, r3
 8014612:	4543      	cmp	r3, r8
 8014614:	db31      	blt.n	801467a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014616:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801461a:	44c4      	add	ip, r8
 801461c:	fa0f fc8c 	sxth.w	ip, ip
 8014620:	4563      	cmp	r3, ip
 8014622:	da2a      	bge.n	801467a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014624:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8014626:	8926      	ldrh	r6, [r4, #8]
 8014628:	4416      	add	r6, r2
 801462a:	b236      	sxth	r6, r6
 801462c:	42be      	cmp	r6, r7
 801462e:	db24      	blt.n	801467a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014630:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014634:	4438      	add	r0, r7
 8014636:	b200      	sxth	r0, r0
 8014638:	4286      	cmp	r6, r0
 801463a:	da1e      	bge.n	801467a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801463c:	8963      	ldrh	r3, [r4, #10]
 801463e:	4419      	add	r1, r3
 8014640:	b209      	sxth	r1, r1
 8014642:	4541      	cmp	r1, r8
 8014644:	db08      	blt.n	8014658 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014646:	4561      	cmp	r1, ip
 8014648:	da06      	bge.n	8014658 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801464a:	89a3      	ldrh	r3, [r4, #12]
 801464c:	441a      	add	r2, r3
 801464e:	b212      	sxth	r2, r2
 8014650:	42ba      	cmp	r2, r7
 8014652:	db01      	blt.n	8014658 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014654:	4282      	cmp	r2, r0
 8014656:	db10      	blt.n	801467a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014658:	4b21      	ldr	r3, [pc, #132]	; (80146e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801465a:	9304      	str	r3, [sp, #16]
 801465c:	2302      	movs	r3, #2
 801465e:	f88d 3014 	strb.w	r3, [sp, #20]
 8014662:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8014664:	2300      	movs	r3, #0
 8014666:	f8ad 3016 	strh.w	r3, [sp, #22]
 801466a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801466e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014672:	6803      	ldr	r3, [r0, #0]
 8014674:	a904      	add	r1, sp, #16
 8014676:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014678:	4798      	blx	r3
 801467a:	1d29      	adds	r1, r5, #4
 801467c:	a802      	add	r0, sp, #8
 801467e:	f7ff fe71 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014682:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014686:	88e0      	ldrh	r0, [r4, #6]
 8014688:	7921      	ldrb	r1, [r4, #4]
 801468a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801468e:	8922      	ldrh	r2, [r4, #8]
 8014690:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8014692:	f88d 1014 	strb.w	r1, [sp, #20]
 8014696:	eba3 0808 	sub.w	r8, r3, r8
 801469a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801469e:	1bdf      	subs	r7, r3, r7
 80146a0:	b2bb      	uxth	r3, r7
 80146a2:	fa1f f888 	uxth.w	r8, r8
 80146a6:	8967      	ldrh	r7, [r4, #10]
 80146a8:	89a4      	ldrh	r4, [r4, #12]
 80146aa:	4440      	add	r0, r8
 80146ac:	4460      	add	r0, ip
 80146ae:	441a      	add	r2, r3
 80146b0:	44b8      	add	r8, r7
 80146b2:	4423      	add	r3, r4
 80146b4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80146b8:	4433      	add	r3, r6
 80146ba:	4432      	add	r2, r6
 80146bc:	44e0      	add	r8, ip
 80146be:	4c09      	ldr	r4, [pc, #36]	; (80146e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80146c0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80146c2:	9404      	str	r4, [sp, #16]
 80146c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80146c8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80146cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80146d0:	6803      	ldr	r3, [r0, #0]
 80146d2:	a904      	add	r1, sp, #16
 80146d4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80146d6:	4798      	blx	r3
 80146d8:	b008      	add	sp, #32
 80146da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80146de:	bf00      	nop
 80146e0:	08028728 	.word	0x08028728
 80146e4:	0802873c 	.word	0x0802873c

080146e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80146e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80146ea:	4604      	mov	r4, r0
 80146ec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80146f0:	3201      	adds	r2, #1
 80146f2:	d112      	bne.n	801471a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80146f4:	6803      	ldr	r3, [r0, #0]
 80146f6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80146fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80146fe:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014702:	2500      	movs	r5, #0
 8014704:	9500      	str	r5, [sp, #0]
 8014706:	466d      	mov	r5, sp
 8014708:	4629      	mov	r1, r5
 801470a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801470e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014710:	4798      	blx	r3
 8014712:	e895 0003 	ldmia.w	r5, {r0, r1}
 8014716:	e884 0003 	stmia.w	r4, {r0, r1}
 801471a:	4620      	mov	r0, r4
 801471c:	b003      	add	sp, #12
 801471e:	bd30      	pop	{r4, r5, pc}

08014720 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8014720:	b513      	push	{r0, r1, r4, lr}
 8014722:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8014726:	3301      	adds	r3, #1
 8014728:	4604      	mov	r4, r0
 801472a:	d109      	bne.n	8014740 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801472c:	4601      	mov	r1, r0
 801472e:	4668      	mov	r0, sp
 8014730:	f7ff fe18 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014734:	f8bd 3000 	ldrh.w	r3, [sp]
 8014738:	8423      	strh	r3, [r4, #32]
 801473a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801473e:	8463      	strh	r3, [r4, #34]	; 0x22
 8014740:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8014744:	b002      	add	sp, #8
 8014746:	bd10      	pop	{r4, pc}

08014748 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8014748:	b513      	push	{r0, r1, r4, lr}
 801474a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801474e:	3301      	adds	r3, #1
 8014750:	4604      	mov	r4, r0
 8014752:	d109      	bne.n	8014768 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8014754:	4601      	mov	r1, r0
 8014756:	4668      	mov	r0, sp
 8014758:	f7ff fe04 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801475c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014760:	8423      	strh	r3, [r4, #32]
 8014762:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014766:	8463      	strh	r3, [r4, #34]	; 0x22
 8014768:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801476c:	b002      	add	sp, #8
 801476e:	bd10      	pop	{r4, pc}

08014770 <_ZN8touchgfx6ScreenC1Ev>:
 8014770:	b570      	push	{r4, r5, r6, lr}
 8014772:	4605      	mov	r5, r0
 8014774:	4b16      	ldr	r3, [pc, #88]	; (80147d0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8014776:	f845 3b04 	str.w	r3, [r5], #4
 801477a:	2300      	movs	r3, #0
 801477c:	8103      	strh	r3, [r0, #8]
 801477e:	8143      	strh	r3, [r0, #10]
 8014780:	8183      	strh	r3, [r0, #12]
 8014782:	81c3      	strh	r3, [r0, #14]
 8014784:	8203      	strh	r3, [r0, #16]
 8014786:	8243      	strh	r3, [r0, #18]
 8014788:	8283      	strh	r3, [r0, #20]
 801478a:	82c3      	strh	r3, [r0, #22]
 801478c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8014790:	6203      	str	r3, [r0, #32]
 8014792:	8483      	strh	r3, [r0, #36]	; 0x24
 8014794:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014796:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801479a:	4a0e      	ldr	r2, [pc, #56]	; (80147d4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801479c:	6343      	str	r3, [r0, #52]	; 0x34
 801479e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80147a2:	4b0d      	ldr	r3, [pc, #52]	; (80147d8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80147a4:	6042      	str	r2, [r0, #4]
 80147a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80147aa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80147ac:	4a0b      	ldr	r2, [pc, #44]	; (80147dc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80147ae:	4604      	mov	r4, r0
 80147b0:	2101      	movs	r1, #1
 80147b2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80147b6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80147ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 80147be:	4628      	mov	r0, r5
 80147c0:	4798      	blx	r3
 80147c2:	6863      	ldr	r3, [r4, #4]
 80147c4:	4628      	mov	r0, r5
 80147c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80147c8:	4631      	mov	r1, r6
 80147ca:	4798      	blx	r3
 80147cc:	4620      	mov	r0, r4
 80147ce:	bd70      	pop	{r4, r5, r6, pc}
 80147d0:	08028764 	.word	0x08028764
 80147d4:	080275c0 	.word	0x080275c0
 80147d8:	20020082 	.word	0x20020082
 80147dc:	20020080 	.word	0x20020080

080147e0 <_ZN8touchgfx6Screen4drawEv>:
 80147e0:	b507      	push	{r0, r1, r2, lr}
 80147e2:	4b09      	ldr	r3, [pc, #36]	; (8014808 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80147e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80147e8:	4b08      	ldr	r3, [pc, #32]	; (801480c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80147ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 80147ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 80147f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80147f6:	6803      	ldr	r3, [r0, #0]
 80147f8:	2100      	movs	r1, #0
 80147fa:	9100      	str	r1, [sp, #0]
 80147fc:	689b      	ldr	r3, [r3, #8]
 80147fe:	4669      	mov	r1, sp
 8014800:	4798      	blx	r3
 8014802:	b003      	add	sp, #12
 8014804:	f85d fb04 	ldr.w	pc, [sp], #4
 8014808:	20020080 	.word	0x20020080
 801480c:	20020082 	.word	0x20020082

08014810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8014810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014814:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8014818:	2b00      	cmp	r3, #0
 801481a:	b089      	sub	sp, #36	; 0x24
 801481c:	4680      	mov	r8, r0
 801481e:	460c      	mov	r4, r1
 8014820:	4615      	mov	r5, r2
 8014822:	dd0e      	ble.n	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014824:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8014828:	2b00      	cmp	r3, #0
 801482a:	dd0a      	ble.n	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801482c:	4628      	mov	r0, r5
 801482e:	f7ff ff5b 	bl	80146e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014832:	4621      	mov	r1, r4
 8014834:	f7fe fccc 	bl	80131d0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014838:	69eb      	ldr	r3, [r5, #28]
 801483a:	b928      	cbnz	r0, 8014848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801483c:	461d      	mov	r5, r3
 801483e:	2b00      	cmp	r3, #0
 8014840:	d1f4      	bne.n	801482c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8014842:	b009      	add	sp, #36	; 0x24
 8014844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014848:	ae04      	add	r6, sp, #16
 801484a:	2b00      	cmp	r3, #0
 801484c:	f000 80b5 	beq.w	80149ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8014850:	682b      	ldr	r3, [r5, #0]
 8014852:	4629      	mov	r1, r5
 8014854:	68db      	ldr	r3, [r3, #12]
 8014856:	a802      	add	r0, sp, #8
 8014858:	4798      	blx	r3
 801485a:	4628      	mov	r0, r5
 801485c:	f7ff ff60 	bl	8014720 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8014860:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8014864:	4407      	add	r7, r0
 8014866:	4628      	mov	r0, r5
 8014868:	f7ff ff6e 	bl	8014748 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801486c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014870:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014874:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014878:	4418      	add	r0, r3
 801487a:	4621      	mov	r1, r4
 801487c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8014880:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014884:	b23f      	sxth	r7, r7
 8014886:	4630      	mov	r0, r6
 8014888:	f8ad 3016 	strh.w	r3, [sp, #22]
 801488c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8014890:	f7fa fde4 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8014894:	4628      	mov	r0, r5
 8014896:	f7ff ff27 	bl	80146e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801489a:	4602      	mov	r2, r0
 801489c:	e896 0003 	ldmia.w	r6, {r0, r1}
 80148a0:	ab06      	add	r3, sp, #24
 80148a2:	e883 0003 	stmia.w	r3, {r0, r1}
 80148a6:	4611      	mov	r1, r2
 80148a8:	4618      	mov	r0, r3
 80148aa:	f7fa fdd7 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 80148ae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80148b2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80148b6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80148ba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80148be:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80148c2:	4299      	cmp	r1, r3
 80148c4:	d10b      	bne.n	80148de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80148c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80148ca:	4552      	cmp	r2, sl
 80148cc:	d107      	bne.n	80148de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80148ce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80148d2:	455a      	cmp	r2, fp
 80148d4:	d103      	bne.n	80148de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80148d6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80148da:	454a      	cmp	r2, r9
 80148dc:	d06d      	beq.n	80149ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80148de:	f1bb 0f00 	cmp.w	fp, #0
 80148e2:	dd65      	ble.n	80149b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80148e4:	f1b9 0f00 	cmp.w	r9, #0
 80148e8:	dd62      	ble.n	80149b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80148ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80148ee:	fa1f f08a 	uxth.w	r0, sl
 80148f2:	4552      	cmp	r2, sl
 80148f4:	9000      	str	r0, [sp, #0]
 80148f6:	da12      	bge.n	801491e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80148f8:	9301      	str	r3, [sp, #4]
 80148fa:	9b00      	ldr	r3, [sp, #0]
 80148fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014900:	f8ad 2012 	strh.w	r2, [sp, #18]
 8014904:	1a9a      	subs	r2, r3, r2
 8014906:	f8ad 1010 	strh.w	r1, [sp, #16]
 801490a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801490e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8014912:	69ea      	ldr	r2, [r5, #28]
 8014914:	4631      	mov	r1, r6
 8014916:	4640      	mov	r0, r8
 8014918:	f7ff ff7a 	bl	8014810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801491c:	9b01      	ldr	r3, [sp, #4]
 801491e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014922:	429a      	cmp	r2, r3
 8014924:	b29f      	uxth	r7, r3
 8014926:	da0d      	bge.n	8014944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8014928:	f8ad 2010 	strh.w	r2, [sp, #16]
 801492c:	1aba      	subs	r2, r7, r2
 801492e:	f8ad a012 	strh.w	sl, [sp, #18]
 8014932:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014936:	f8ad 9016 	strh.w	r9, [sp, #22]
 801493a:	69ea      	ldr	r2, [r5, #28]
 801493c:	4631      	mov	r1, r6
 801493e:	4640      	mov	r0, r8
 8014940:	f7ff ff66 	bl	8014810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014944:	8822      	ldrh	r2, [r4, #0]
 8014946:	88a3      	ldrh	r3, [r4, #4]
 8014948:	445f      	add	r7, fp
 801494a:	4413      	add	r3, r2
 801494c:	b29b      	uxth	r3, r3
 801494e:	b2bf      	uxth	r7, r7
 8014950:	b23a      	sxth	r2, r7
 8014952:	b219      	sxth	r1, r3
 8014954:	4291      	cmp	r1, r2
 8014956:	dd0d      	ble.n	8014974 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8014958:	1bdb      	subs	r3, r3, r7
 801495a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801495e:	f8ad a012 	strh.w	sl, [sp, #18]
 8014962:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014966:	f8ad 9016 	strh.w	r9, [sp, #22]
 801496a:	69ea      	ldr	r2, [r5, #28]
 801496c:	4631      	mov	r1, r6
 801496e:	4640      	mov	r0, r8
 8014970:	f7ff ff4e 	bl	8014810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014974:	88e2      	ldrh	r2, [r4, #6]
 8014976:	8863      	ldrh	r3, [r4, #2]
 8014978:	4413      	add	r3, r2
 801497a:	9a00      	ldr	r2, [sp, #0]
 801497c:	444a      	add	r2, r9
 801497e:	b29b      	uxth	r3, r3
 8014980:	fa1f f982 	uxth.w	r9, r2
 8014984:	fa0f f289 	sxth.w	r2, r9
 8014988:	b219      	sxth	r1, r3
 801498a:	428a      	cmp	r2, r1
 801498c:	da15      	bge.n	80149ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801498e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014992:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014996:	f8ad 1014 	strh.w	r1, [sp, #20]
 801499a:	eba3 0309 	sub.w	r3, r3, r9
 801499e:	f8ad 0010 	strh.w	r0, [sp, #16]
 80149a2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80149a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80149aa:	69ea      	ldr	r2, [r5, #28]
 80149ac:	4631      	mov	r1, r6
 80149ae:	e001      	b.n	80149b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80149b0:	69ea      	ldr	r2, [r5, #28]
 80149b2:	4621      	mov	r1, r4
 80149b4:	4640      	mov	r0, r8
 80149b6:	f7ff ff2b 	bl	8014810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80149ba:	4628      	mov	r0, r5
 80149bc:	f7ff fe94 	bl	80146e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80149c0:	6861      	ldr	r1, [r4, #4]
 80149c2:	4602      	mov	r2, r0
 80149c4:	6820      	ldr	r0, [r4, #0]
 80149c6:	4633      	mov	r3, r6
 80149c8:	c303      	stmia	r3!, {r0, r1}
 80149ca:	4611      	mov	r1, r2
 80149cc:	4630      	mov	r0, r6
 80149ce:	f7fa fd45 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 80149d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80149d6:	2b00      	cmp	r3, #0
 80149d8:	f77f af33 	ble.w	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80149dc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80149e0:	2b00      	cmp	r3, #0
 80149e2:	f77f af2e 	ble.w	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80149e6:	4628      	mov	r0, r5
 80149e8:	f7ff fe9a 	bl	8014720 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80149ec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80149f0:	1a18      	subs	r0, r3, r0
 80149f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80149f6:	4628      	mov	r0, r5
 80149f8:	f7ff fea6 	bl	8014748 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80149fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014a00:	1a18      	subs	r0, r3, r0
 8014a02:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014a06:	682b      	ldr	r3, [r5, #0]
 8014a08:	4631      	mov	r1, r6
 8014a0a:	689b      	ldr	r3, [r3, #8]
 8014a0c:	4628      	mov	r0, r5
 8014a0e:	4798      	blx	r3
 8014a10:	e717      	b.n	8014842 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08014a12 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8014a12:	b570      	push	{r4, r5, r6, lr}
 8014a14:	460c      	mov	r4, r1
 8014a16:	b086      	sub	sp, #24
 8014a18:	1d06      	adds	r6, r0, #4
 8014a1a:	2300      	movs	r3, #0
 8014a1c:	4631      	mov	r1, r6
 8014a1e:	4605      	mov	r5, r0
 8014a20:	a802      	add	r0, sp, #8
 8014a22:	9301      	str	r3, [sp, #4]
 8014a24:	f7ff fc9e 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014a28:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014a2c:	8822      	ldrh	r2, [r4, #0]
 8014a2e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8014a32:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014a36:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014a3a:	1ad2      	subs	r2, r2, r3
 8014a3c:	8863      	ldrh	r3, [r4, #2]
 8014a3e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014a42:	1a5b      	subs	r3, r3, r1
 8014a44:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014a48:	f8ad 1016 	strh.w	r1, [sp, #22]
 8014a4c:	aa01      	add	r2, sp, #4
 8014a4e:	a904      	add	r1, sp, #16
 8014a50:	4630      	mov	r0, r6
 8014a52:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014a56:	f7fa fdd9 	bl	800f60c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8014a5a:	9a01      	ldr	r2, [sp, #4]
 8014a5c:	b11a      	cbz	r2, 8014a66 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8014a5e:	4621      	mov	r1, r4
 8014a60:	4628      	mov	r0, r5
 8014a62:	f7ff fed5 	bl	8014810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014a66:	b006      	add	sp, #24
 8014a68:	bd70      	pop	{r4, r5, r6, pc}

08014a6a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8014a6a:	b530      	push	{r4, r5, lr}
 8014a6c:	4602      	mov	r2, r0
 8014a6e:	4604      	mov	r4, r0
 8014a70:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8014a74:	b085      	sub	sp, #20
 8014a76:	460d      	mov	r5, r1
 8014a78:	6851      	ldr	r1, [r2, #4]
 8014a7a:	466b      	mov	r3, sp
 8014a7c:	c303      	stmia	r3!, {r0, r1}
 8014a7e:	4629      	mov	r1, r5
 8014a80:	4668      	mov	r0, sp
 8014a82:	f7fa fceb 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8014a86:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014a8a:	b12b      	cbz	r3, 8014a98 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8014a8c:	4669      	mov	r1, sp
 8014a8e:	4620      	mov	r0, r4
 8014a90:	f7ff ffbf 	bl	8014a12 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8014a94:	b005      	add	sp, #20
 8014a96:	bd30      	pop	{r4, r5, pc}
 8014a98:	3404      	adds	r4, #4
 8014a9a:	4621      	mov	r1, r4
 8014a9c:	a802      	add	r0, sp, #8
 8014a9e:	f7ff fc61 	bl	8014364 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014aa2:	f8bd 3000 	ldrh.w	r3, [sp]
 8014aa6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8014aaa:	1a9b      	subs	r3, r3, r2
 8014aac:	f8ad 3000 	strh.w	r3, [sp]
 8014ab0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014ab4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014ab8:	4669      	mov	r1, sp
 8014aba:	1a9b      	subs	r3, r3, r2
 8014abc:	4620      	mov	r0, r4
 8014abe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014ac2:	f7fa fd6a 	bl	800f59a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8014ac6:	e7e5      	b.n	8014a94 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08014ac8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8014ac8:	680a      	ldr	r2, [r1, #0]
 8014aca:	460b      	mov	r3, r1
 8014acc:	6992      	ldr	r2, [r2, #24]
 8014ace:	1d01      	adds	r1, r0, #4
 8014ad0:	4618      	mov	r0, r3
 8014ad2:	4710      	bx	r2

08014ad4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8014ad4:	4298      	cmp	r0, r3
 8014ad6:	d200      	bcs.n	8014ada <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8014ad8:	b913      	cbnz	r3, 8014ae0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8014ada:	440a      	add	r2, r1
 8014adc:	b210      	sxth	r0, r2
 8014ade:	4770      	bx	lr
 8014ae0:	ee07 0a90 	vmov	s15, r0
 8014ae4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8014ae8:	ee07 3a90 	vmov	s15, r3
 8014aec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014af0:	eddf 4a15 	vldr	s9, [pc, #84]	; 8014b48 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8014af4:	eddf 5a15 	vldr	s11, [pc, #84]	; 8014b4c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8014af8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8014afc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014b00:	ee37 7a66 	vsub.f32	s14, s14, s13
 8014b04:	ee07 2a90 	vmov	s15, r2
 8014b08:	eee7 5a24 	vfma.f32	s11, s14, s9
 8014b0c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8014b10:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8014b14:	eee5 6a25 	vfma.f32	s13, s10, s11
 8014b18:	ee07 1a90 	vmov	s15, r1
 8014b1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014b20:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8014b24:	eee6 7a26 	vfma.f32	s15, s12, s13
 8014b28:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014b2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b30:	bfcc      	ite	gt
 8014b32:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8014b36:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8014b3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014b3e:	ee17 3a90 	vmov	r3, s15
 8014b42:	b218      	sxth	r0, r3
 8014b44:	4770      	bx	lr
 8014b46:	bf00      	nop
 8014b48:	402ce6b0 	.word	0x402ce6b0
 8014b4c:	3fd9cd60 	.word	0x3fd9cd60

08014b50 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst>:
 8014b50:	4298      	cmp	r0, r3
 8014b52:	d200      	bcs.n	8014b56 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x6>
 8014b54:	b913      	cbnz	r3, 8014b5c <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xc>
 8014b56:	1888      	adds	r0, r1, r2
 8014b58:	b200      	sxth	r0, r0
 8014b5a:	4770      	bx	lr
 8014b5c:	ee07 0a90 	vmov	s15, r0
 8014b60:	ee07 3a10 	vmov	s14, r3
 8014b64:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8014b68:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8014b6c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8014b70:	2002      	movs	r0, #2
 8014b72:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014b76:	fb92 f0f0 	sdiv	r0, r2, r0
 8014b7a:	ee07 0a90 	vmov	s15, r0
 8014b7e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8014b82:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8014b86:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8014b8a:	ee07 1a90 	vmov	s15, r1
 8014b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014b92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014b96:	eddf 4a16 	vldr	s9, [pc, #88]	; 8014bf0 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa0>
 8014b9a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8014b9e:	d518      	bpl.n	8014bd2 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x82>
 8014ba0:	ed9f 5a14 	vldr	s10, [pc, #80]	; 8014bf4 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa4>
 8014ba4:	eea7 5a24 	vfma.f32	s10, s14, s9
 8014ba8:	ee67 5a07 	vmul.f32	s11, s14, s14
 8014bac:	ee25 7a85 	vmul.f32	s14, s11, s10
 8014bb0:	eee7 7a26 	vfma.f32	s15, s14, s13
 8014bb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014bb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014bbc:	bfcc      	ite	gt
 8014bbe:	ee77 7a86 	vaddgt.f32	s15, s15, s12
 8014bc2:	ee77 7ac6 	vsuble.f32	s15, s15, s12
 8014bc6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014bca:	ee17 3a90 	vmov	r3, s15
 8014bce:	b218      	sxth	r0, r3
 8014bd0:	4770      	bx	lr
 8014bd2:	eef0 5a00 	vmov.f32	s11, #0	; 0x40000000  2.0
 8014bd6:	ee37 7a65 	vsub.f32	s14, s14, s11
 8014bda:	ed9f 5a07 	vldr	s10, [pc, #28]	; 8014bf8 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa8>
 8014bde:	eea7 5a24 	vfma.f32	s10, s14, s9
 8014be2:	ee27 4a07 	vmul.f32	s8, s14, s14
 8014be6:	eee4 5a05 	vfma.f32	s11, s8, s10
 8014bea:	eee5 7aa6 	vfma.f32	s15, s11, s13
 8014bee:	e7e1      	b.n	8014bb4 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x64>
 8014bf0:	406612ff 	.word	0x406612ff
 8014bf4:	c02612ff 	.word	0xc02612ff
 8014bf8:	402612ff 	.word	0x402612ff

08014bfc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8014bfc:	4298      	cmp	r0, r3
 8014bfe:	d200      	bcs.n	8014c02 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8014c00:	b913      	cbnz	r3, 8014c08 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8014c02:	440a      	add	r2, r1
 8014c04:	b210      	sxth	r0, r2
 8014c06:	4770      	bx	lr
 8014c08:	ee07 2a90 	vmov	s15, r2
 8014c0c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8014c10:	ee07 0a90 	vmov	s15, r0
 8014c14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8014c18:	ee67 7a27 	vmul.f32	s15, s14, s15
 8014c1c:	ee07 3a10 	vmov	s14, r3
 8014c20:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8014c24:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014c28:	ee07 1a90 	vmov	s15, r1
 8014c2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014c30:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014c34:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8014c38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014c3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c40:	bfcc      	ite	gt
 8014c42:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8014c46:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8014c4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014c4e:	ee17 3a90 	vmov	r3, s15
 8014c52:	b218      	sxth	r0, r3
 8014c54:	4770      	bx	lr

08014c56 <_ZN8touchgfx12TextProviderC1Ev>:
 8014c56:	b538      	push	{r3, r4, r5, lr}
 8014c58:	2500      	movs	r5, #0
 8014c5a:	2302      	movs	r3, #2
 8014c5c:	4604      	mov	r4, r0
 8014c5e:	e9c0 5500 	strd	r5, r5, [r0]
 8014c62:	7403      	strb	r3, [r0, #16]
 8014c64:	6145      	str	r5, [r0, #20]
 8014c66:	7605      	strb	r5, [r0, #24]
 8014c68:	83c5      	strh	r5, [r0, #30]
 8014c6a:	8405      	strh	r5, [r0, #32]
 8014c6c:	86c5      	strh	r5, [r0, #54]	; 0x36
 8014c6e:	8705      	strh	r5, [r0, #56]	; 0x38
 8014c70:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8014c72:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8014c76:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8014c7a:	220e      	movs	r2, #14
 8014c7c:	4629      	mov	r1, r5
 8014c7e:	304c      	adds	r0, #76	; 0x4c
 8014c80:	f00e fbe8 	bl	8023454 <memset>
 8014c84:	2301      	movs	r3, #1
 8014c86:	4620      	mov	r0, r4
 8014c88:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8014c8c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014c90:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8014c94:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8014c98:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8014c9c:	f7f1 fdf4 	bl	8006888 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8014ca0:	4620      	mov	r0, r4
 8014ca2:	bd38      	pop	{r3, r4, r5, pc}

08014ca4 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8014ca4:	b508      	push	{r3, lr}
 8014ca6:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8014ca8:	b92b      	cbnz	r3, 8014cb6 <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 8014caa:	4b07      	ldr	r3, [pc, #28]	; (8014cc8 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 8014cac:	4a07      	ldr	r2, [pc, #28]	; (8014ccc <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 8014cae:	4808      	ldr	r0, [pc, #32]	; (8014cd0 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 8014cb0:	21c0      	movs	r1, #192	; 0xc0
 8014cb2:	f00e f929 	bl	8022f08 <__assert_func>
 8014cb6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8014cb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014cbc:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8014cbe:	fab0 f080 	clz	r0, r0
 8014cc2:	0940      	lsrs	r0, r0, #5
 8014cc4:	bd08      	pop	{r3, pc}
 8014cc6:	bf00      	nop
 8014cc8:	080267ac 	.word	0x080267ac
 8014ccc:	080289bf 	.word	0x080289bf
 8014cd0:	0802687e 	.word	0x0802687e

08014cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8014cd4:	b530      	push	{r4, r5, lr}
 8014cd6:	2500      	movs	r5, #0
 8014cd8:	2401      	movs	r4, #1
 8014cda:	6843      	ldr	r3, [r0, #4]
 8014cdc:	b913      	cbnz	r3, 8014ce4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8014cde:	6803      	ldr	r3, [r0, #0]
 8014ce0:	b313      	cbz	r3, 8014d28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014ce2:	6043      	str	r3, [r0, #4]
 8014ce4:	7e03      	ldrb	r3, [r0, #24]
 8014ce6:	b143      	cbz	r3, 8014cfa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8014ce8:	6943      	ldr	r3, [r0, #20]
 8014cea:	b12b      	cbz	r3, 8014cf8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014cec:	881a      	ldrh	r2, [r3, #0]
 8014cee:	b11a      	cbz	r2, 8014cf8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014cf0:	1c9a      	adds	r2, r3, #2
 8014cf2:	6142      	str	r2, [r0, #20]
 8014cf4:	8818      	ldrh	r0, [r3, #0]
 8014cf6:	bd30      	pop	{r4, r5, pc}
 8014cf8:	7605      	strb	r5, [r0, #24]
 8014cfa:	6843      	ldr	r3, [r0, #4]
 8014cfc:	8819      	ldrh	r1, [r3, #0]
 8014cfe:	b199      	cbz	r1, 8014d28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014d00:	1c9a      	adds	r2, r3, #2
 8014d02:	2902      	cmp	r1, #2
 8014d04:	6042      	str	r2, [r0, #4]
 8014d06:	d1f5      	bne.n	8014cf4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8014d08:	7c03      	ldrb	r3, [r0, #16]
 8014d0a:	2b01      	cmp	r3, #1
 8014d0c:	d8e5      	bhi.n	8014cda <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014d0e:	1c5a      	adds	r2, r3, #1
 8014d10:	3302      	adds	r3, #2
 8014d12:	7402      	strb	r2, [r0, #16]
 8014d14:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8014d18:	6143      	str	r3, [r0, #20]
 8014d1a:	2b00      	cmp	r3, #0
 8014d1c:	d0dd      	beq.n	8014cda <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014d1e:	881b      	ldrh	r3, [r3, #0]
 8014d20:	2b00      	cmp	r3, #0
 8014d22:	d0da      	beq.n	8014cda <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014d24:	7604      	strb	r4, [r0, #24]
 8014d26:	e7d8      	b.n	8014cda <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014d28:	2000      	movs	r0, #0
 8014d2a:	e7e4      	b.n	8014cf6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08014d2c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8014d2c:	b430      	push	{r4, r5}
 8014d2e:	6815      	ldr	r5, [r2, #0]
 8014d30:	6085      	str	r5, [r0, #8]
 8014d32:	6852      	ldr	r2, [r2, #4]
 8014d34:	60c2      	str	r2, [r0, #12]
 8014d36:	6443      	str	r3, [r0, #68]	; 0x44
 8014d38:	2200      	movs	r2, #0
 8014d3a:	9b02      	ldr	r3, [sp, #8]
 8014d3c:	7402      	strb	r2, [r0, #16]
 8014d3e:	6001      	str	r1, [r0, #0]
 8014d40:	6483      	str	r3, [r0, #72]	; 0x48
 8014d42:	6042      	str	r2, [r0, #4]
 8014d44:	6142      	str	r2, [r0, #20]
 8014d46:	7602      	strb	r2, [r0, #24]
 8014d48:	8702      	strh	r2, [r0, #56]	; 0x38
 8014d4a:	8402      	strh	r2, [r0, #32]
 8014d4c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014d50:	bc30      	pop	{r4, r5}
 8014d52:	f7f1 bd99 	b.w	8006888 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08014d56 <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>:
 8014d56:	2301      	movs	r3, #1
 8014d58:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8014d5c:	4770      	bx	lr
	...

08014d60 <_ZN8touchgfx12TextProvider16unicodeConverterEh>:
 8014d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d64:	b089      	sub	sp, #36	; 0x24
 8014d66:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8014d68:	9302      	str	r3, [sp, #8]
 8014d6a:	b92b      	cbnz	r3, 8014d78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x18>
 8014d6c:	4bb4      	ldr	r3, [pc, #720]	; (8015040 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e0>)
 8014d6e:	4ab5      	ldr	r2, [pc, #724]	; (8015044 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e4>)
 8014d70:	21c0      	movs	r1, #192	; 0xc0
 8014d72:	48b5      	ldr	r0, [pc, #724]	; (8015048 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e8>)
 8014d74:	f00e f8c8 	bl	8022f08 <__assert_func>
 8014d78:	f8b0 b036 	ldrh.w	fp, [r0, #54]	; 0x36
 8014d7c:	eb00 064b 	add.w	r6, r0, fp, lsl #1
 8014d80:	8c73      	ldrh	r3, [r6, #34]	; 0x22
 8014d82:	2b00      	cmp	r3, #0
 8014d84:	f000 8158 	beq.w	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8014d88:	2b7f      	cmp	r3, #127	; 0x7f
 8014d8a:	d819      	bhi.n	8014dc0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 8014d8c:	2901      	cmp	r1, #1
 8014d8e:	d117      	bne.n	8014dc0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 8014d90:	2b3c      	cmp	r3, #60	; 0x3c
 8014d92:	f000 83fd 	beq.w	8015590 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x830>
 8014d96:	2b3e      	cmp	r3, #62	; 0x3e
 8014d98:	f000 83fc 	beq.w	8015594 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x834>
 8014d9c:	2b28      	cmp	r3, #40	; 0x28
 8014d9e:	f000 83fb 	beq.w	8015598 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x838>
 8014da2:	2b29      	cmp	r3, #41	; 0x29
 8014da4:	f000 83fa 	beq.w	801559c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x83c>
 8014da8:	2b5b      	cmp	r3, #91	; 0x5b
 8014daa:	f000 83f9 	beq.w	80155a0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 8014dae:	2b5d      	cmp	r3, #93	; 0x5d
 8014db0:	f000 83f8 	beq.w	80155a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x844>
 8014db4:	2b7b      	cmp	r3, #123	; 0x7b
 8014db6:	f000 83f7 	beq.w	80155a8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x848>
 8014dba:	2b7d      	cmp	r3, #125	; 0x7d
 8014dbc:	f000 83f6 	beq.w	80155ac <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84c>
 8014dc0:	9a02      	ldr	r2, [sp, #8]
 8014dc2:	2a01      	cmp	r2, #1
 8014dc4:	d803      	bhi.n	8014dce <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e>
 8014dc6:	4ba1      	ldr	r3, [pc, #644]	; (801504c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ec>)
 8014dc8:	4aa1      	ldr	r2, [pc, #644]	; (8015050 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f0>)
 8014dca:	21c5      	movs	r1, #197	; 0xc5
 8014dcc:	e7d1      	b.n	8014d72 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x12>
 8014dce:	f10b 0201 	add.w	r2, fp, #1
 8014dd2:	b292      	uxth	r2, r2
 8014dd4:	2a09      	cmp	r2, #9
 8014dd6:	4611      	mov	r1, r2
 8014dd8:	bf88      	it	hi
 8014dda:	f1a2 010a 	subhi.w	r1, r2, #10
 8014dde:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014de2:	9104      	str	r1, [sp, #16]
 8014de4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8014de6:	9101      	str	r1, [sp, #4]
 8014de8:	9902      	ldr	r1, [sp, #8]
 8014dea:	2902      	cmp	r1, #2
 8014dec:	d0eb      	beq.n	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8014dee:	f10b 0102 	add.w	r1, fp, #2
 8014df2:	b289      	uxth	r1, r1
 8014df4:	2909      	cmp	r1, #9
 8014df6:	bf88      	it	hi
 8014df8:	390a      	subhi	r1, #10
 8014dfa:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014dfe:	9c01      	ldr	r4, [sp, #4]
 8014e00:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8014e02:	f240 6151 	movw	r1, #1617	; 0x651
 8014e06:	428c      	cmp	r4, r1
 8014e08:	d125      	bne.n	8014e56 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 8014e0a:	f2a3 614b 	subw	r1, r3, #1611	; 0x64b
 8014e0e:	b289      	uxth	r1, r1
 8014e10:	2914      	cmp	r1, #20
 8014e12:	d914      	bls.n	8014e3e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 8014e14:	f023 0104 	bic.w	r1, r3, #4
 8014e18:	b289      	uxth	r1, r1
 8014e1a:	f5b1 6fce 	cmp.w	r1, #1648	; 0x670
 8014e1e:	d00e      	beq.n	8014e3e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 8014e20:	f2a3 61d6 	subw	r1, r3, #1750	; 0x6d6
 8014e24:	b289      	uxth	r1, r1
 8014e26:	2917      	cmp	r1, #23
 8014e28:	d804      	bhi.n	8014e34 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xd4>
 8014e2a:	4f8a      	ldr	r7, [pc, #552]	; (8015054 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 8014e2c:	fa27 f101 	lsr.w	r1, r7, r1
 8014e30:	07c9      	lsls	r1, r1, #31
 8014e32:	d404      	bmi.n	8014e3e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 8014e34:	f6a3 01e4 	subw	r1, r3, #2276	; 0x8e4
 8014e38:	b289      	uxth	r1, r1
 8014e3a:	291a      	cmp	r1, #26
 8014e3c:	d80b      	bhi.n	8014e56 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 8014e3e:	2a0a      	cmp	r2, #10
 8014e40:	bf28      	it	cs
 8014e42:	2200      	movcs	r2, #0
 8014e44:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014e48:	f240 6151 	movw	r1, #1617	; 0x651
 8014e4c:	8471      	strh	r1, [r6, #34]	; 0x22
 8014e4e:	8453      	strh	r3, [r2, #34]	; 0x22
 8014e50:	461a      	mov	r2, r3
 8014e52:	9b01      	ldr	r3, [sp, #4]
 8014e54:	9201      	str	r2, [sp, #4]
 8014e56:	f2a3 6222 	subw	r2, r3, #1570	; 0x622
 8014e5a:	b292      	uxth	r2, r2
 8014e5c:	2a18      	cmp	r2, #24
 8014e5e:	d90e      	bls.n	8014e7e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8014e60:	f5a3 62c8 	sub.w	r2, r3, #1600	; 0x640
 8014e64:	b292      	uxth	r2, r2
 8014e66:	2a0a      	cmp	r2, #10
 8014e68:	d909      	bls.n	8014e7e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8014e6a:	f46f 69ce 	mvn.w	r9, #1648	; 0x670
 8014e6e:	eb03 0209 	add.w	r2, r3, r9
 8014e72:	b292      	uxth	r2, r2
 8014e74:	2a62      	cmp	r2, #98	; 0x62
 8014e76:	d902      	bls.n	8014e7e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8014e78:	2b20      	cmp	r3, #32
 8014e7a:	f040 80dd 	bne.w	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8014e7e:	9a02      	ldr	r2, [sp, #8]
 8014e80:	2a03      	cmp	r2, #3
 8014e82:	d0a0      	beq.n	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8014e84:	f10b 0103 	add.w	r1, fp, #3
 8014e88:	b289      	uxth	r1, r1
 8014e8a:	2909      	cmp	r1, #9
 8014e8c:	460a      	mov	r2, r1
 8014e8e:	bf88      	it	hi
 8014e90:	f1a1 020a 	subhi.w	r2, r1, #10
 8014e94:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014e98:	f8b2 c022 	ldrh.w	ip, [r2, #34]	; 0x22
 8014e9c:	9a02      	ldr	r2, [sp, #8]
 8014e9e:	2a04      	cmp	r2, #4
 8014ea0:	d091      	beq.n	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8014ea2:	f10b 0204 	add.w	r2, fp, #4
 8014ea6:	b292      	uxth	r2, r2
 8014ea8:	2a09      	cmp	r2, #9
 8014eaa:	bf88      	it	hi
 8014eac:	3a0a      	subhi	r2, #10
 8014eae:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014eb2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8014eb4:	f2a2 6622 	subw	r6, r2, #1570	; 0x622
 8014eb8:	2e18      	cmp	r6, #24
 8014eba:	f240 80cd 	bls.w	8015058 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8014ebe:	f5a2 66c8 	sub.w	r6, r2, #1600	; 0x640
 8014ec2:	2e0a      	cmp	r6, #10
 8014ec4:	f240 80c8 	bls.w	8015058 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8014ec8:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8014ecc:	4442      	add	r2, r8
 8014ece:	2a62      	cmp	r2, #98	; 0x62
 8014ed0:	f240 80c2 	bls.w	8015058 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8014ed4:	f2a3 6227 	subw	r2, r3, #1575	; 0x627
 8014ed8:	b292      	uxth	r2, r2
 8014eda:	2a21      	cmp	r2, #33	; 0x21
 8014edc:	f200 80bc 	bhi.w	8015058 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8014ee0:	f2a5 6227 	subw	r2, r5, #1575	; 0x627
 8014ee4:	b292      	uxth	r2, r2
 8014ee6:	2a23      	cmp	r2, #35	; 0x23
 8014ee8:	d82d      	bhi.n	8014f46 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8014eea:	f2ac 622f 	subw	r2, ip, #1583	; 0x62f
 8014eee:	b292      	uxth	r2, r2
 8014ef0:	2a18      	cmp	r2, #24
 8014ef2:	d828      	bhi.n	8014f46 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8014ef4:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 8014ef8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8014efc:	f5a2 4282 	sub.w	r2, r2, #16640	; 0x4100
 8014f00:	ebc3 1603 	rsb	r6, r3, r3, lsl #4
 8014f04:	3a1a      	subs	r2, #26
 8014f06:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
 8014f0a:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 8014f0e:	6c87      	ldr	r7, [r0, #72]	; 0x48
 8014f10:	4462      	add	r2, ip
 8014f12:	b292      	uxth	r2, r2
 8014f14:	b1bf      	cbz	r7, 8014f46 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8014f16:	8b3e      	ldrh	r6, [r7, #24]
 8014f18:	b1ae      	cbz	r6, 8014f46 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8014f1a:	f8d7 9000 	ldr.w	r9, [r7]
 8014f1e:	f04f 0e00 	mov.w	lr, #0
 8014f22:	eb06 070e 	add.w	r7, r6, lr
 8014f26:	107f      	asrs	r7, r7, #1
 8014f28:	240a      	movs	r4, #10
 8014f2a:	fb04 fa07 	mul.w	sl, r4, r7
 8014f2e:	eb09 080a 	add.w	r8, r9, sl
 8014f32:	f839 a00a 	ldrh.w	sl, [r9, sl]
 8014f36:	4552      	cmp	r2, sl
 8014f38:	d968      	bls.n	801500c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ac>
 8014f3a:	f107 0e01 	add.w	lr, r7, #1
 8014f3e:	e000      	b.n	8014f42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e2>
 8014f40:	463e      	mov	r6, r7
 8014f42:	4576      	cmp	r6, lr
 8014f44:	dced      	bgt.n	8014f22 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1c2>
 8014f46:	f5a3 62c5 	sub.w	r2, r3, #1576	; 0x628
 8014f4a:	b292      	uxth	r2, r2
 8014f4c:	2a22      	cmp	r2, #34	; 0x22
 8014f4e:	f240 8086 	bls.w	801505e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2fe>
 8014f52:	9a01      	ldr	r2, [sp, #4]
 8014f54:	f2a2 624b 	subw	r2, r2, #1611	; 0x64b
 8014f58:	b292      	uxth	r2, r2
 8014f5a:	2a14      	cmp	r2, #20
 8014f5c:	d91c      	bls.n	8014f98 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8014f5e:	9a01      	ldr	r2, [sp, #4]
 8014f60:	f5b2 6fce 	cmp.w	r2, #1648	; 0x670
 8014f64:	d018      	beq.n	8014f98 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8014f66:	9901      	ldr	r1, [sp, #4]
 8014f68:	f240 6274 	movw	r2, #1652	; 0x674
 8014f6c:	4291      	cmp	r1, r2
 8014f6e:	d013      	beq.n	8014f98 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8014f70:	f2a1 62d6 	subw	r2, r1, #1750	; 0x6d6
 8014f74:	b292      	uxth	r2, r2
 8014f76:	2a17      	cmp	r2, #23
 8014f78:	d804      	bhi.n	8014f84 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x224>
 8014f7a:	4936      	ldr	r1, [pc, #216]	; (8015054 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 8014f7c:	fa21 f202 	lsr.w	r2, r1, r2
 8014f80:	07d7      	lsls	r7, r2, #31
 8014f82:	d409      	bmi.n	8014f98 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8014f84:	9a01      	ldr	r2, [sp, #4]
 8014f86:	f6a2 02e4 	subw	r2, r2, #2276	; 0x8e4
 8014f8a:	b292      	uxth	r2, r2
 8014f8c:	2a1a      	cmp	r2, #26
 8014f8e:	d903      	bls.n	8014f98 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8014f90:	2200      	movs	r2, #0
 8014f92:	46ac      	mov	ip, r5
 8014f94:	9d01      	ldr	r5, [sp, #4]
 8014f96:	9201      	str	r2, [sp, #4]
 8014f98:	2b20      	cmp	r3, #32
 8014f9a:	d005      	beq.n	8014fa8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x248>
 8014f9c:	f2a3 6226 	subw	r2, r3, #1574	; 0x626
 8014fa0:	b292      	uxth	r2, r2
 8014fa2:	2a24      	cmp	r2, #36	; 0x24
 8014fa4:	f200 814e 	bhi.w	8015244 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8014fa8:	f2a5 6222 	subw	r2, r5, #1570	; 0x622
 8014fac:	b292      	uxth	r2, r2
 8014fae:	2ab3      	cmp	r2, #179	; 0xb3
 8014fb0:	f200 8148 	bhi.w	8015244 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8014fb4:	f240 6244 	movw	r2, #1604	; 0x644
 8014fb8:	4295      	cmp	r5, r2
 8014fba:	d104      	bne.n	8014fc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x266>
 8014fbc:	f240 6227 	movw	r2, #1575	; 0x627
 8014fc0:	4594      	cmp	ip, r2
 8014fc2:	f000 813f 	beq.w	8015244 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8014fc6:	9901      	ldr	r1, [sp, #4]
 8014fc8:	f240 624f 	movw	r2, #1615	; 0x64f
 8014fcc:	4291      	cmp	r1, r2
 8014fce:	f000 8139 	beq.w	8015244 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8014fd2:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8014fd4:	2900      	cmp	r1, #0
 8014fd6:	f000 8135 	beq.w	8015244 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8014fda:	8b8a      	ldrh	r2, [r1, #28]
 8014fdc:	2a00      	cmp	r2, #0
 8014fde:	f000 8132 	beq.w	8015246 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e6>
 8014fe2:	b2ed      	uxtb	r5, r5
 8014fe4:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
 8014fe8:	6889      	ldr	r1, [r1, #8]
 8014fea:	b2ad      	uxth	r5, r5
 8014fec:	2700      	movs	r7, #0
 8014fee:	f04f 080a 	mov.w	r8, #10
 8014ff2:	19d6      	adds	r6, r2, r7
 8014ff4:	1076      	asrs	r6, r6, #1
 8014ff6:	fb08 fc06 	mul.w	ip, r8, r6
 8014ffa:	eb01 0e0c 	add.w	lr, r1, ip
 8014ffe:	f831 c00c 	ldrh.w	ip, [r1, ip]
 8015002:	4565      	cmp	r5, ip
 8015004:	f240 8121 	bls.w	801524a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4ea>
 8015008:	1c77      	adds	r7, r6, #1
 801500a:	e118      	b.n	801523e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4de>
 801500c:	d398      	bcc.n	8014f40 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e0>
 801500e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015012:	9c01      	ldr	r4, [sp, #4]
 8015014:	42a2      	cmp	r2, r4
 8015016:	d196      	bne.n	8014f46 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8015018:	9b02      	ldr	r3, [sp, #8]
 801501a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801501c:	3b03      	subs	r3, #3
 801501e:	2909      	cmp	r1, #9
 8015020:	8703      	strh	r3, [r0, #56]	; 0x38
 8015022:	bf88      	it	hi
 8015024:	f1ab 0207 	subhi.w	r2, fp, #7
 8015028:	f04f 0301 	mov.w	r3, #1
 801502c:	bf88      	it	hi
 801502e:	86c2      	strhhi	r2, [r0, #54]	; 0x36
 8015030:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8015034:	f8b8 3002 	ldrh.w	r3, [r8, #2]
 8015038:	4618      	mov	r0, r3
 801503a:	b009      	add	sp, #36	; 0x24
 801503c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015040:	080267ac 	.word	0x080267ac
 8015044:	080289bf 	.word	0x080289bf
 8015048:	0802687e 	.word	0x0802687e
 801504c:	080268aa 	.word	0x080268aa
 8015050:	080288ed 	.word	0x080288ed
 8015054:	00f67e7f 	.word	0x00f67e7f
 8015058:	2b20      	cmp	r3, #32
 801505a:	f47f af74 	bne.w	8014f46 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 801505e:	9a01      	ldr	r2, [sp, #4]
 8015060:	f2a2 622c 	subw	r2, r2, #1580	; 0x62c
 8015064:	b292      	uxth	r2, r2
 8015066:	2a25      	cmp	r2, #37	; 0x25
 8015068:	f63f af73 	bhi.w	8014f52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 801506c:	f2a5 612c 	subw	r1, r5, #1580	; 0x62c
 8015070:	b289      	uxth	r1, r1
 8015072:	2925      	cmp	r1, #37	; 0x25
 8015074:	d915      	bls.n	80150a2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x342>
 8015076:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 801507a:	f000 82ee 	beq.w	801565a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8fa>
 801507e:	f240 62d2 	movw	r2, #1746	; 0x6d2
 8015082:	4295      	cmp	r5, r2
 8015084:	f47f af65 	bne.w	8014f52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8015088:	9a01      	ldr	r2, [sp, #4]
 801508a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801508e:	00d2      	lsls	r2, r2, #3
 8015090:	2b20      	cmp	r3, #32
 8015092:	b292      	uxth	r2, r2
 8015094:	d107      	bne.n	80150a6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 8015096:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 801509a:	3a30      	subs	r2, #48	; 0x30
 801509c:	b292      	uxth	r2, r2
 801509e:	2127      	movs	r1, #39	; 0x27
 80150a0:	e018      	b.n	80150d4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>
 80150a2:	2b20      	cmp	r3, #32
 80150a4:	d035      	beq.n	8015112 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b2>
 80150a6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80150aa:	ebc3 1242 	rsb	r2, r3, r2, lsl #5
 80150ae:	0112      	lsls	r2, r2, #4
 80150b0:	f502 42e5 	add.w	r2, r2, #29312	; 0x7280
 80150b4:	b292      	uxth	r2, r2
 80150b6:	9c01      	ldr	r4, [sp, #4]
 80150b8:	eb04 0684 	add.w	r6, r4, r4, lsl #2
 80150bc:	eb02 02c6 	add.w	r2, r2, r6, lsl #3
 80150c0:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 80150c4:	b292      	uxth	r2, r2
 80150c6:	f000 82d4 	beq.w	8015672 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x912>
 80150ca:	f240 66d2 	movw	r6, #1746	; 0x6d2
 80150ce:	42b5      	cmp	r5, r6
 80150d0:	bf08      	it	eq
 80150d2:	2127      	moveq	r1, #39	; 0x27
 80150d4:	6c87      	ldr	r7, [r0, #72]	; 0x48
 80150d6:	2f00      	cmp	r7, #0
 80150d8:	f43f af3b 	beq.w	8014f52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 80150dc:	8b7e      	ldrh	r6, [r7, #26]
 80150de:	2e00      	cmp	r6, #0
 80150e0:	f43f af37 	beq.w	8014f52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 80150e4:	440a      	add	r2, r1
 80150e6:	f502 6212 	add.w	r2, r2, #2336	; 0x920
 80150ea:	6879      	ldr	r1, [r7, #4]
 80150ec:	b292      	uxth	r2, r2
 80150ee:	f04f 0e00 	mov.w	lr, #0
 80150f2:	f04f 0a0a 	mov.w	sl, #10
 80150f6:	eb06 070e 	add.w	r7, r6, lr
 80150fa:	107f      	asrs	r7, r7, #1
 80150fc:	fb0a f807 	mul.w	r8, sl, r7
 8015100:	eb01 0908 	add.w	r9, r1, r8
 8015104:	f831 8008 	ldrh.w	r8, [r1, r8]
 8015108:	4542      	cmp	r2, r8
 801510a:	d909      	bls.n	8015120 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3c0>
 801510c:	f107 0e01 	add.w	lr, r7, #1
 8015110:	e003      	b.n	801511a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3ba>
 8015112:	f64c 72d0 	movw	r2, #53200	; 0xcfd0
 8015116:	e7ce      	b.n	80150b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x356>
 8015118:	463e      	mov	r6, r7
 801511a:	4576      	cmp	r6, lr
 801511c:	dceb      	bgt.n	80150f6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x396>
 801511e:	e718      	b.n	8014f52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8015120:	d3fa      	bcc.n	8015118 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b8>
 8015122:	2200      	movs	r2, #0
 8015124:	9201      	str	r2, [sp, #4]
 8015126:	f109 0102 	add.w	r1, r9, #2
 801512a:	2202      	movs	r2, #2
 801512c:	9c01      	ldr	r4, [sp, #4]
 801512e:	4fbe      	ldr	r7, [pc, #760]	; (8015428 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>)
 8015130:	2c00      	cmp	r4, #0
 8015132:	bf0c      	ite	eq
 8015134:	4616      	moveq	r6, r2
 8015136:	1c56      	addne	r6, r2, #1
 8015138:	3601      	adds	r6, #1
 801513a:	9c02      	ldr	r4, [sp, #8]
 801513c:	b2b5      	uxth	r5, r6
 801513e:	42ac      	cmp	r4, r5
 8015140:	f67f ae41 	bls.w	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8015144:	445d      	add	r5, fp
 8015146:	b2ad      	uxth	r5, r5
 8015148:	2d09      	cmp	r5, #9
 801514a:	bf88      	it	hi
 801514c:	3d0a      	subhi	r5, #10
 801514e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015152:	8c6d      	ldrh	r5, [r5, #34]	; 0x22
 8015154:	f2a5 6c4b 	subw	ip, r5, #1611	; 0x64b
 8015158:	f1bc 0f14 	cmp.w	ip, #20
 801515c:	d97a      	bls.n	8015254 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 801515e:	f025 0c04 	bic.w	ip, r5, #4
 8015162:	f5bc 6fce 	cmp.w	ip, #1648	; 0x670
 8015166:	d075      	beq.n	8015254 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8015168:	f2a5 6cd6 	subw	ip, r5, #1750	; 0x6d6
 801516c:	fa1f fc8c 	uxth.w	ip, ip
 8015170:	f1bc 0f17 	cmp.w	ip, #23
 8015174:	d804      	bhi.n	8015180 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x420>
 8015176:	fa27 fc0c 	lsr.w	ip, r7, ip
 801517a:	f01c 0f01 	tst.w	ip, #1
 801517e:	d169      	bne.n	8015254 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8015180:	f6a5 0ce4 	subw	ip, r5, #2276	; 0x8e4
 8015184:	f1bc 0f1a 	cmp.w	ip, #26
 8015188:	d964      	bls.n	8015254 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 801518a:	f2a5 6622 	subw	r6, r5, #1570	; 0x622
 801518e:	2e18      	cmp	r6, #24
 8015190:	d962      	bls.n	8015258 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 8015192:	f5a5 66c8 	sub.w	r6, r5, #1600	; 0x640
 8015196:	2e0a      	cmp	r6, #10
 8015198:	d95e      	bls.n	8015258 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 801519a:	f46f 66ce 	mvn.w	r6, #1648	; 0x670
 801519e:	4435      	add	r5, r6
 80151a0:	2d62      	cmp	r5, #98	; 0x62
 80151a2:	bf94      	ite	ls
 80151a4:	2400      	movls	r4, #0
 80151a6:	2401      	movhi	r4, #1
 80151a8:	f890 5060 	ldrb.w	r5, [r0, #96]	; 0x60
 80151ac:	9403      	str	r4, [sp, #12]
 80151ae:	f085 0401 	eor.w	r4, r5, #1
 80151b2:	9406      	str	r4, [sp, #24]
 80151b4:	9c03      	ldr	r4, [sp, #12]
 80151b6:	2c00      	cmp	r4, #0
 80151b8:	9c06      	ldr	r4, [sp, #24]
 80151ba:	bf0c      	ite	eq
 80151bc:	2502      	moveq	r5, #2
 80151be:	2500      	movne	r5, #0
 80151c0:	eb05 0904 	add.w	r9, r5, r4
 80151c4:	2900      	cmp	r1, #0
 80151c6:	f000 817f 	beq.w	80154c8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x768>
 80151ca:	f831 5019 	ldrh.w	r5, [r1, r9, lsl #1]
 80151ce:	2d00      	cmp	r5, #0
 80151d0:	f040 821a 	bne.w	8015608 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 80151d4:	2a00      	cmp	r2, #0
 80151d6:	f000 8217 	beq.w	8015608 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 80151da:	eb0b 0502 	add.w	r5, fp, r2
 80151de:	b2ad      	uxth	r5, r5
 80151e0:	2d09      	cmp	r5, #9
 80151e2:	bf88      	it	hi
 80151e4:	3d0a      	subhi	r5, #10
 80151e6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80151ea:	f8df c23c 	ldr.w	ip, [pc, #572]	; 8015428 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 80151ee:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 80151f0:	1c56      	adds	r6, r2, #1
 80151f2:	f2a7 654b 	subw	r5, r7, #1611	; 0x64b
 80151f6:	2d14      	cmp	r5, #20
 80151f8:	d911      	bls.n	801521e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 80151fa:	f027 0504 	bic.w	r5, r7, #4
 80151fe:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 8015202:	d00c      	beq.n	801521e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8015204:	f2a7 65d6 	subw	r5, r7, #1750	; 0x6d6
 8015208:	b2ad      	uxth	r5, r5
 801520a:	2d17      	cmp	r5, #23
 801520c:	d803      	bhi.n	8015216 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b6>
 801520e:	fa2c f505 	lsr.w	r5, ip, r5
 8015212:	07ed      	lsls	r5, r5, #31
 8015214:	d403      	bmi.n	801521e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8015216:	f6a7 05e4 	subw	r5, r7, #2276	; 0x8e4
 801521a:	2d1a      	cmp	r5, #26
 801521c:	d81e      	bhi.n	801525c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4fc>
 801521e:	9c02      	ldr	r4, [sp, #8]
 8015220:	b2b5      	uxth	r5, r6
 8015222:	42ac      	cmp	r4, r5
 8015224:	f67f adcf 	bls.w	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8015228:	445d      	add	r5, fp
 801522a:	b2ad      	uxth	r5, r5
 801522c:	2d09      	cmp	r5, #9
 801522e:	bf88      	it	hi
 8015230:	3d0a      	subhi	r5, #10
 8015232:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015236:	3601      	adds	r6, #1
 8015238:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 801523a:	e7da      	b.n	80151f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x492>
 801523c:	4632      	mov	r2, r6
 801523e:	4297      	cmp	r7, r2
 8015240:	f6ff aed7 	blt.w	8014ff2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 8015244:	2200      	movs	r2, #0
 8015246:	4611      	mov	r1, r2
 8015248:	e770      	b.n	801512c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 801524a:	d3f7      	bcc.n	801523c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4dc>
 801524c:	f10e 0102 	add.w	r1, lr, #2
 8015250:	2201      	movs	r2, #1
 8015252:	e76b      	b.n	801512c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 8015254:	3601      	adds	r6, #1
 8015256:	e770      	b.n	801513a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3da>
 8015258:	2400      	movs	r4, #0
 801525a:	e7a5      	b.n	80151a8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x448>
 801525c:	f8d0 c048 	ldr.w	ip, [r0, #72]	; 0x48
 8015260:	f1bc 0f00 	cmp.w	ip, #0
 8015264:	d076      	beq.n	8015354 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 8015266:	f46f 64c4 	mvn.w	r4, #1568	; 0x620
 801526a:	193d      	adds	r5, r7, r4
 801526c:	2d19      	cmp	r5, #25
 801526e:	d840      	bhi.n	80152f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x592>
 8015270:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8015274:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 8015278:	f8dc 500c 	ldr.w	r5, [ip, #12]
 801527c:	4457      	add	r7, sl
 801527e:	eb05 05c7 	add.w	r5, r5, r7, lsl #3
 8015282:	9c02      	ldr	r4, [sp, #8]
 8015284:	f106 0e01 	add.w	lr, r6, #1
 8015288:	b2b6      	uxth	r6, r6
 801528a:	42a6      	cmp	r6, r4
 801528c:	f4bf ad9b 	bcs.w	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8015290:	445e      	add	r6, fp
 8015292:	b2b6      	uxth	r6, r6
 8015294:	2e09      	cmp	r6, #9
 8015296:	bf88      	it	hi
 8015298:	3e0a      	subhi	r6, #10
 801529a:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801529e:	f8df 8188 	ldr.w	r8, [pc, #392]	; 8015428 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 80152a2:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 80152a4:	f2a7 664b 	subw	r6, r7, #1611	; 0x64b
 80152a8:	2e14      	cmp	r6, #20
 80152aa:	d911      	bls.n	80152d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 80152ac:	f027 0604 	bic.w	r6, r7, #4
 80152b0:	f5b6 6fce 	cmp.w	r6, #1648	; 0x670
 80152b4:	d00c      	beq.n	80152d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 80152b6:	f2a7 66d6 	subw	r6, r7, #1750	; 0x6d6
 80152ba:	b2b6      	uxth	r6, r6
 80152bc:	2e17      	cmp	r6, #23
 80152be:	d803      	bhi.n	80152c8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x568>
 80152c0:	fa28 f606 	lsr.w	r6, r8, r6
 80152c4:	07f4      	lsls	r4, r6, #31
 80152c6:	d403      	bmi.n	80152d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 80152c8:	f6a7 06e4 	subw	r6, r7, #2276	; 0x8e4
 80152cc:	2e1a      	cmp	r6, #26
 80152ce:	d847      	bhi.n	8015360 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x600>
 80152d0:	9c02      	ldr	r4, [sp, #8]
 80152d2:	fa1f f68e 	uxth.w	r6, lr
 80152d6:	42b4      	cmp	r4, r6
 80152d8:	f67f ad75 	bls.w	8014dc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80152dc:	445e      	add	r6, fp
 80152de:	b2b6      	uxth	r6, r6
 80152e0:	2e09      	cmp	r6, #9
 80152e2:	bf88      	it	hi
 80152e4:	3e0a      	subhi	r6, #10
 80152e6:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80152ea:	f10e 0e01 	add.w	lr, lr, #1
 80152ee:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 80152f0:	e7d8      	b.n	80152a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x544>
 80152f2:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 80152f6:	eb07 0508 	add.w	r5, r7, r8
 80152fa:	2d09      	cmp	r5, #9
 80152fc:	d807      	bhi.n	801530e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ae>
 80152fe:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8015302:	f46f 6ec8 	mvn.w	lr, #1600	; 0x640
 8015306:	4477      	add	r7, lr
 8015308:	f8dc 5010 	ldr.w	r5, [ip, #16]
 801530c:	e7b7      	b.n	801527e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x51e>
 801530e:	f46f 65ce 	mvn.w	r5, #1648	; 0x670
 8015312:	197d      	adds	r5, r7, r5
 8015314:	2d62      	cmp	r5, #98	; 0x62
 8015316:	d81d      	bhi.n	8015354 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 8015318:	f8bc 501e 	ldrh.w	r5, [ip, #30]
 801531c:	2d00      	cmp	r5, #0
 801531e:	d0b0      	beq.n	8015282 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 8015320:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8015324:	9405      	str	r4, [sp, #20]
 8015326:	f04f 0800 	mov.w	r8, #0
 801532a:	eb05 0e08 	add.w	lr, r5, r8
 801532e:	240a      	movs	r4, #10
 8015330:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 8015334:	fb04 fa0e 	mul.w	sl, r4, lr
 8015338:	9c05      	ldr	r4, [sp, #20]
 801533a:	4454      	add	r4, sl
 801533c:	9407      	str	r4, [sp, #28]
 801533e:	9c05      	ldr	r4, [sp, #20]
 8015340:	f834 a00a 	ldrh.w	sl, [r4, sl]
 8015344:	45ba      	cmp	sl, r7
 8015346:	d207      	bcs.n	8015358 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f8>
 8015348:	f10e 0801 	add.w	r8, lr, #1
 801534c:	e000      	b.n	8015350 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f0>
 801534e:	4675      	mov	r5, lr
 8015350:	45a8      	cmp	r8, r5
 8015352:	dbea      	blt.n	801532a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ca>
 8015354:	2500      	movs	r5, #0
 8015356:	e794      	b.n	8015282 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 8015358:	d8f9      	bhi.n	801534e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ee>
 801535a:	9d07      	ldr	r5, [sp, #28]
 801535c:	3502      	adds	r5, #2
 801535e:	e790      	b.n	8015282 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 8015360:	f1bc 0f00 	cmp.w	ip, #0
 8015364:	d05a      	beq.n	801541c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 8015366:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 801536a:	eb07 0608 	add.w	r6, r7, r8
 801536e:	2e19      	cmp	r6, #25
 8015370:	d823      	bhi.n	80153ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x65a>
 8015372:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 8015376:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 801537a:	4437      	add	r7, r6
 801537c:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8015380:	eb06 06c7 	add.w	r6, r6, r7, lsl #3
 8015384:	b155      	cbz	r5, 801539c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 8015386:	88ed      	ldrh	r5, [r5, #6]
 8015388:	b145      	cbz	r5, 801539c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 801538a:	b13e      	cbz	r6, 801539c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 801538c:	8875      	ldrh	r5, [r6, #2]
 801538e:	2d00      	cmp	r5, #0
 8015390:	f040 810e 	bne.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8015394:	88f5      	ldrh	r5, [r6, #6]
 8015396:	2d00      	cmp	r5, #0
 8015398:	f040 810a 	bne.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 801539c:	f1b9 0f02 	cmp.w	r9, #2
 80153a0:	d144      	bne.n	801542c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6cc>
 80153a2:	880d      	ldrh	r5, [r1, #0]
 80153a4:	2d00      	cmp	r5, #0
 80153a6:	f000 8103 	beq.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80153aa:	f240 6544 	movw	r5, #1604	; 0x644
 80153ae:	42ab      	cmp	r3, r5
 80153b0:	f040 80fe 	bne.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80153b4:	2401      	movs	r4, #1
 80153b6:	9403      	str	r4, [sp, #12]
 80153b8:	e0de      	b.n	8015578 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 80153ba:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 80153be:	193e      	adds	r6, r7, r4
 80153c0:	2e09      	cmp	r6, #9
 80153c2:	d807      	bhi.n	80153d4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x674>
 80153c4:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 80153c8:	f46f 6ac8 	mvn.w	sl, #1600	; 0x640
 80153cc:	4457      	add	r7, sl
 80153ce:	f8dc 6010 	ldr.w	r6, [ip, #16]
 80153d2:	e7d5      	b.n	8015380 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x620>
 80153d4:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 80153d8:	eb07 0608 	add.w	r6, r7, r8
 80153dc:	2e62      	cmp	r6, #98	; 0x62
 80153de:	d81d      	bhi.n	801541c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 80153e0:	f8bc 601e 	ldrh.w	r6, [ip, #30]
 80153e4:	2e00      	cmp	r6, #0
 80153e6:	d0cd      	beq.n	8015384 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 80153e8:	f8dc 4014 	ldr.w	r4, [ip, #20]
 80153ec:	9405      	str	r4, [sp, #20]
 80153ee:	f04f 0800 	mov.w	r8, #0
 80153f2:	eb06 0e08 	add.w	lr, r6, r8
 80153f6:	240a      	movs	r4, #10
 80153f8:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 80153fc:	fb04 fa0e 	mul.w	sl, r4, lr
 8015400:	9c05      	ldr	r4, [sp, #20]
 8015402:	4454      	add	r4, sl
 8015404:	9407      	str	r4, [sp, #28]
 8015406:	9c05      	ldr	r4, [sp, #20]
 8015408:	f834 a00a 	ldrh.w	sl, [r4, sl]
 801540c:	45ba      	cmp	sl, r7
 801540e:	d207      	bcs.n	8015420 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c0>
 8015410:	f10e 0801 	add.w	r8, lr, #1
 8015414:	e000      	b.n	8015418 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b8>
 8015416:	4676      	mov	r6, lr
 8015418:	45b0      	cmp	r8, r6
 801541a:	dbea      	blt.n	80153f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x692>
 801541c:	2600      	movs	r6, #0
 801541e:	e7b1      	b.n	8015384 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8015420:	d8f9      	bhi.n	8015416 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b6>
 8015422:	9e07      	ldr	r6, [sp, #28]
 8015424:	3602      	adds	r6, #2
 8015426:	e7ad      	b.n	8015384 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8015428:	00f67e7f 	.word	0x00f67e7f
 801542c:	f1b9 0f03 	cmp.w	r9, #3
 8015430:	f040 80be 	bne.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8015434:	884d      	ldrh	r5, [r1, #2]
 8015436:	2d00      	cmp	r5, #0
 8015438:	f000 80ba 	beq.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 801543c:	f240 6544 	movw	r5, #1604	; 0x644
 8015440:	42ab      	cmp	r3, r5
 8015442:	f040 80b5 	bne.w	80155b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8015446:	2401      	movs	r4, #1
 8015448:	9403      	str	r4, [sp, #12]
 801544a:	884d      	ldrh	r5, [r1, #2]
 801544c:	2d00      	cmp	r5, #0
 801544e:	f000 8093 	beq.w	8015578 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 8015452:	f04f 0901 	mov.w	r9, #1
 8015456:	e0de      	b.n	8015616 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8015458:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 801545c:	195d      	adds	r5, r3, r5
 801545e:	b2ad      	uxth	r5, r5
 8015460:	2d09      	cmp	r5, #9
 8015462:	d807      	bhi.n	8015474 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x714>
 8015464:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 8015468:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 801546c:	4425      	add	r5, r4
 801546e:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8015472:	e0ae      	b.n	80155d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x872>
 8015474:	f46f 6ace 	mvn.w	sl, #1648	; 0x670
 8015478:	eb03 050a 	add.w	r5, r3, sl
 801547c:	b2ad      	uxth	r5, r5
 801547e:	2d62      	cmp	r5, #98	; 0x62
 8015480:	d81b      	bhi.n	80154ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 8015482:	f8bc 801e 	ldrh.w	r8, [ip, #30]
 8015486:	f1b8 0f00 	cmp.w	r8, #0
 801548a:	f000 80a4 	beq.w	80155d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 801548e:	f8dc 7014 	ldr.w	r7, [ip, #20]
 8015492:	2600      	movs	r6, #0
 8015494:	46c4      	mov	ip, r8
 8015496:	f04f 0a0a 	mov.w	sl, #10
 801549a:	eb0c 0506 	add.w	r5, ip, r6
 801549e:	106d      	asrs	r5, r5, #1
 80154a0:	fb0a fe05 	mul.w	lr, sl, r5
 80154a4:	eb07 080e 	add.w	r8, r7, lr
 80154a8:	f837 e00e 	ldrh.w	lr, [r7, lr]
 80154ac:	459e      	cmp	lr, r3
 80154ae:	d207      	bcs.n	80154c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x760>
 80154b0:	1c6e      	adds	r6, r5, #1
 80154b2:	e000      	b.n	80154b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x756>
 80154b4:	46ac      	mov	ip, r5
 80154b6:	4566      	cmp	r6, ip
 80154b8:	dbef      	blt.n	801549a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x73a>
 80154ba:	f04f 0800 	mov.w	r8, #0
 80154be:	e08a      	b.n	80155d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 80154c0:	d8f8      	bhi.n	80154b4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x754>
 80154c2:	f108 0802 	add.w	r8, r8, #2
 80154c6:	e086      	b.n	80155d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 80154c8:	6c86      	ldr	r6, [r0, #72]	; 0x48
 80154ca:	b18e      	cbz	r6, 80154f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 80154cc:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 80154d0:	eb03 0508 	add.w	r5, r3, r8
 80154d4:	b2ad      	uxth	r5, r5
 80154d6:	2d19      	cmp	r5, #25
 80154d8:	d812      	bhi.n	8015500 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7a0>
 80154da:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 80154de:	f46f 6cc4 	mvn.w	ip, #1568	; 0x620
 80154e2:	68f5      	ldr	r5, [r6, #12]
 80154e4:	4461      	add	r1, ip
 80154e6:	eb05 01c1 	add.w	r1, r5, r1, lsl #3
 80154ea:	2900      	cmp	r1, #0
 80154ec:	f040 808c 	bne.w	8015608 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 80154f0:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 80154f4:	f47f ada0 	bne.w	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80154f8:	2200      	movs	r2, #0
 80154fa:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
 80154fe:	e59b      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8015500:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 8015504:	19dd      	adds	r5, r3, r7
 8015506:	b2ad      	uxth	r5, r5
 8015508:	2d09      	cmp	r5, #9
 801550a:	d806      	bhi.n	801551a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ba>
 801550c:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 8015510:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8015514:	4429      	add	r1, r5
 8015516:	6935      	ldr	r5, [r6, #16]
 8015518:	e7e5      	b.n	80154e6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x786>
 801551a:	f46f 64ce 	mvn.w	r4, #1648	; 0x670
 801551e:	191d      	adds	r5, r3, r4
 8015520:	b2ad      	uxth	r5, r5
 8015522:	2d62      	cmp	r5, #98	; 0x62
 8015524:	d8e4      	bhi.n	80154f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8015526:	8bf5      	ldrh	r5, [r6, #30]
 8015528:	2d00      	cmp	r5, #0
 801552a:	d0e1      	beq.n	80154f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 801552c:	6977      	ldr	r7, [r6, #20]
 801552e:	f04f 080a 	mov.w	r8, #10
 8015532:	186e      	adds	r6, r5, r1
 8015534:	1076      	asrs	r6, r6, #1
 8015536:	fb08 fc06 	mul.w	ip, r8, r6
 801553a:	eb07 0e0c 	add.w	lr, r7, ip
 801553e:	f837 c00c 	ldrh.w	ip, [r7, ip]
 8015542:	459c      	cmp	ip, r3
 8015544:	d205      	bcs.n	8015552 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7f2>
 8015546:	1c71      	adds	r1, r6, #1
 8015548:	e000      	b.n	801554c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ec>
 801554a:	4635      	mov	r5, r6
 801554c:	428d      	cmp	r5, r1
 801554e:	dcf0      	bgt.n	8015532 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d2>
 8015550:	e7ce      	b.n	80154f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8015552:	d8fa      	bhi.n	801554a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ea>
 8015554:	f10e 0102 	add.w	r1, lr, #2
 8015558:	e056      	b.n	8015608 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 801555a:	f1b9 0f03 	cmp.w	r9, #3
 801555e:	d104      	bne.n	801556a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 8015560:	88cd      	ldrh	r5, [r1, #6]
 8015562:	2d00      	cmp	r5, #0
 8015564:	f43f af6f 	beq.w	8015446 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e6>
 8015568:	e055      	b.n	8015616 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 801556a:	f1b9 0f01 	cmp.w	r9, #1
 801556e:	f43f af6c 	beq.w	801544a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ea>
 8015572:	f1b9 0f00 	cmp.w	r9, #0
 8015576:	d14e      	bne.n	8015616 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8015578:	880d      	ldrh	r5, [r1, #0]
 801557a:	b935      	cbnz	r5, 801558a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x82a>
 801557c:	884d      	ldrh	r5, [r1, #2]
 801557e:	f115 0900 	adds.w	r9, r5, #0
 8015582:	bf18      	it	ne
 8015584:	f04f 0901 	movne.w	r9, #1
 8015588:	e045      	b.n	8015616 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 801558a:	f04f 0900 	mov.w	r9, #0
 801558e:	e042      	b.n	8015616 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8015590:	233e      	movs	r3, #62	; 0x3e
 8015592:	e551      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8015594:	233c      	movs	r3, #60	; 0x3c
 8015596:	e54f      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8015598:	2329      	movs	r3, #41	; 0x29
 801559a:	e54d      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 801559c:	2328      	movs	r3, #40	; 0x28
 801559e:	e54b      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80155a0:	235d      	movs	r3, #93	; 0x5d
 80155a2:	e549      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80155a4:	235b      	movs	r3, #91	; 0x5b
 80155a6:	e547      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80155a8:	237d      	movs	r3, #125	; 0x7d
 80155aa:	e545      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80155ac:	237b      	movs	r3, #123	; 0x7b
 80155ae:	e543      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80155b0:	f1bc 0f00 	cmp.w	ip, #0
 80155b4:	d081      	beq.n	80154ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 80155b6:	f46f 67c4 	mvn.w	r7, #1568	; 0x620
 80155ba:	19dd      	adds	r5, r3, r7
 80155bc:	b2ad      	uxth	r5, r5
 80155be:	2d19      	cmp	r5, #25
 80155c0:	f63f af4a 	bhi.w	8015458 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6f8>
 80155c4:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 80155c8:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 80155cc:	4435      	add	r5, r6
 80155ce:	f8dc 600c 	ldr.w	r6, [ip, #12]
 80155d2:	eb06 08c5 	add.w	r8, r6, r5, lsl #3
 80155d6:	9c04      	ldr	r4, [sp, #16]
 80155d8:	8c65      	ldrh	r5, [r4, #34]	; 0x22
 80155da:	f2a5 6522 	subw	r5, r5, #1570	; 0x622
 80155de:	b2ad      	uxth	r5, r5
 80155e0:	2db1      	cmp	r5, #177	; 0xb1
 80155e2:	bf8c      	ite	hi
 80155e4:	2600      	movhi	r6, #0
 80155e6:	2602      	movls	r6, #2
 80155e8:	f1b8 0f00 	cmp.w	r8, #0
 80155ec:	d00c      	beq.n	8015608 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 80155ee:	9c06      	ldr	r4, [sp, #24]
 80155f0:	4426      	add	r6, r4
 80155f2:	f838 7016 	ldrh.w	r7, [r8, r6, lsl #1]
 80155f6:	b13f      	cbz	r7, 8015608 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 80155f8:	2db1      	cmp	r5, #177	; 0xb1
 80155fa:	bf94      	ite	ls
 80155fc:	2200      	movls	r2, #0
 80155fe:	2201      	movhi	r2, #1
 8015600:	9203      	str	r2, [sp, #12]
 8015602:	46b1      	mov	r9, r6
 8015604:	4641      	mov	r1, r8
 8015606:	2200      	movs	r2, #0
 8015608:	f1b9 0f02 	cmp.w	r9, #2
 801560c:	d1a5      	bne.n	801555a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7fa>
 801560e:	888d      	ldrh	r5, [r1, #4]
 8015610:	2d00      	cmp	r5, #0
 8015612:	f43f aecf 	beq.w	80153b4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x654>
 8015616:	eb01 0549 	add.w	r5, r1, r9, lsl #1
 801561a:	f831 1019 	ldrh.w	r1, [r1, r9, lsl #1]
 801561e:	2900      	cmp	r1, #0
 8015620:	f43f ad0a 	beq.w	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8015624:	9b03      	ldr	r3, [sp, #12]
 8015626:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 801562a:	9b02      	ldr	r3, [sp, #8]
 801562c:	b292      	uxth	r2, r2
 801562e:	1a9b      	subs	r3, r3, r2
 8015630:	445a      	add	r2, fp
 8015632:	b292      	uxth	r2, r2
 8015634:	8703      	strh	r3, [r0, #56]	; 0x38
 8015636:	2a09      	cmp	r2, #9
 8015638:	9b01      	ldr	r3, [sp, #4]
 801563a:	bf88      	it	hi
 801563c:	3a0a      	subhi	r2, #10
 801563e:	86c2      	strh	r2, [r0, #54]	; 0x36
 8015640:	b14b      	cbz	r3, 8015656 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8f6>
 8015642:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015644:	3301      	adds	r3, #1
 8015646:	b29b      	uxth	r3, r3
 8015648:	2b0a      	cmp	r3, #10
 801564a:	bf28      	it	cs
 801564c:	2300      	movcs	r3, #0
 801564e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015652:	9b01      	ldr	r3, [sp, #4]
 8015654:	8443      	strh	r3, [r0, #34]	; 0x22
 8015656:	882b      	ldrh	r3, [r5, #0]
 8015658:	e4ee      	b.n	8015038 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 801565a:	9a01      	ldr	r2, [sp, #4]
 801565c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015660:	00d2      	lsls	r2, r2, #3
 8015662:	2b20      	cmp	r3, #32
 8015664:	b292      	uxth	r2, r2
 8015666:	f47f ad1e 	bne.w	80150a6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 801566a:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 801566e:	3a30      	subs	r2, #48	; 0x30
 8015670:	b292      	uxth	r2, r2
 8015672:	f240 6152 	movw	r1, #1618	; 0x652
 8015676:	e52d      	b.n	80150d4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>

08015678 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015678:	b5f0      	push	{r4, r5, r6, r7, lr}
 801567a:	4605      	mov	r5, r0
 801567c:	4608      	mov	r0, r1
 801567e:	b1e9      	cbz	r1, 80156bc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015680:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8015684:	460b      	mov	r3, r1
 8015686:	f101 0708 	add.w	r7, r1, #8
 801568a:	4622      	mov	r2, r4
 801568c:	6818      	ldr	r0, [r3, #0]
 801568e:	6859      	ldr	r1, [r3, #4]
 8015690:	4626      	mov	r6, r4
 8015692:	c603      	stmia	r6!, {r0, r1}
 8015694:	3308      	adds	r3, #8
 8015696:	42bb      	cmp	r3, r7
 8015698:	4634      	mov	r4, r6
 801569a:	d1f7      	bne.n	801568c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801569c:	6818      	ldr	r0, [r3, #0]
 801569e:	6030      	str	r0, [r6, #0]
 80156a0:	889b      	ldrh	r3, [r3, #4]
 80156a2:	80b3      	strh	r3, [r6, #4]
 80156a4:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80156a8:	015b      	lsls	r3, r3, #5
 80156aa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80156ae:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80156b2:	430b      	orrs	r3, r1
 80156b4:	425b      	negs	r3, r3
 80156b6:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80156ba:	4610      	mov	r0, r2
 80156bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080156be <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80156be:	b538      	push	{r3, r4, r5, lr}
 80156c0:	460c      	mov	r4, r1
 80156c2:	6811      	ldr	r1, [r2, #0]
 80156c4:	4610      	mov	r0, r2
 80156c6:	68cd      	ldr	r5, [r1, #12]
 80156c8:	4619      	mov	r1, r3
 80156ca:	47a8      	blx	r5
 80156cc:	2800      	cmp	r0, #0
 80156ce:	bf08      	it	eq
 80156d0:	4620      	moveq	r0, r4
 80156d2:	bd38      	pop	{r3, r4, r5, pc}

080156d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80156d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80156d6:	4604      	mov	r4, r0
 80156d8:	4615      	mov	r5, r2
 80156da:	4608      	mov	r0, r1
 80156dc:	b93a      	cbnz	r2, 80156ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80156de:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80156e2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80156e6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80156ea:	4628      	mov	r0, r5
 80156ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80156ee:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80156f2:	8893      	ldrh	r3, [r2, #4]
 80156f4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80156f8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80156fc:	79ee      	ldrb	r6, [r5, #7]
 80156fe:	4316      	orrs	r6, r2
 8015700:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 8015704:	189a      	adds	r2, r3, r2
 8015706:	b291      	uxth	r1, r2
 8015708:	291d      	cmp	r1, #29
 801570a:	b2b7      	uxth	r7, r6
 801570c:	f200 8083 	bhi.w	8015816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8015710:	2201      	movs	r2, #1
 8015712:	408a      	lsls	r2, r1
 8015714:	4978      	ldr	r1, [pc, #480]	; (80158f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8015716:	420a      	tst	r2, r1
 8015718:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801571c:	d12d      	bne.n	801577a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 801571e:	f412 7f60 	tst.w	r2, #896	; 0x380
 8015722:	d078      	beq.n	8015816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8015724:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8015728:	462b      	mov	r3, r5
 801572a:	f105 0e08 	add.w	lr, r5, #8
 801572e:	4615      	mov	r5, r2
 8015730:	6818      	ldr	r0, [r3, #0]
 8015732:	6859      	ldr	r1, [r3, #4]
 8015734:	4694      	mov	ip, r2
 8015736:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801573a:	3308      	adds	r3, #8
 801573c:	4573      	cmp	r3, lr
 801573e:	4662      	mov	r2, ip
 8015740:	d1f6      	bne.n	8015730 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 8015742:	6818      	ldr	r0, [r3, #0]
 8015744:	f8cc 0000 	str.w	r0, [ip]
 8015748:	889b      	ldrh	r3, [r3, #4]
 801574a:	f8ac 3004 	strh.w	r3, [ip, #4]
 801574e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8015752:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8015756:	b2b3      	uxth	r3, r6
 8015758:	1aca      	subs	r2, r1, r3
 801575a:	b292      	uxth	r2, r2
 801575c:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8015760:	10d2      	asrs	r2, r2, #3
 8015762:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8015766:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801576a:	4302      	orrs	r2, r0
 801576c:	1bcf      	subs	r7, r1, r7
 801576e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8015772:	1afb      	subs	r3, r7, r3
 8015774:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8015778:	e7b7      	b.n	80156ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801577a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801577c:	b92b      	cbnz	r3, 801578a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 801577e:	4b5f      	ldr	r3, [pc, #380]	; (80158fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8015780:	4a5f      	ldr	r2, [pc, #380]	; (8015900 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8015782:	4860      	ldr	r0, [pc, #384]	; (8015904 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8015784:	21c0      	movs	r1, #192	; 0xc0
 8015786:	f00d fbbf 	bl	8022f08 <__assert_func>
 801578a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801578c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015790:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8015792:	f640 6333 	movw	r3, #3635	; 0xe33
 8015796:	4299      	cmp	r1, r3
 8015798:	d110      	bne.n	80157bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 801579a:	6803      	ldr	r3, [r0, #0]
 801579c:	68db      	ldr	r3, [r3, #12]
 801579e:	4798      	blx	r3
 80157a0:	7b41      	ldrb	r1, [r0, #13]
 80157a2:	00cb      	lsls	r3, r1, #3
 80157a4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80157a8:	7a03      	ldrb	r3, [r0, #8]
 80157aa:	0648      	lsls	r0, r1, #25
 80157ac:	ea43 0302 	orr.w	r3, r3, r2
 80157b0:	bf44      	itt	mi
 80157b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80157b6:	b21b      	sxthmi	r3, r3
 80157b8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80157bc:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80157c0:	443b      	add	r3, r7
 80157c2:	4433      	add	r3, r6
 80157c4:	b29b      	uxth	r3, r3
 80157c6:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80157ca:	462a      	mov	r2, r5
 80157cc:	f105 0c08 	add.w	ip, r5, #8
 80157d0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80157d4:	4635      	mov	r5, r6
 80157d6:	6810      	ldr	r0, [r2, #0]
 80157d8:	6851      	ldr	r1, [r2, #4]
 80157da:	4637      	mov	r7, r6
 80157dc:	c703      	stmia	r7!, {r0, r1}
 80157de:	3208      	adds	r2, #8
 80157e0:	4562      	cmp	r2, ip
 80157e2:	463e      	mov	r6, r7
 80157e4:	d1f7      	bne.n	80157d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80157e6:	6810      	ldr	r0, [r2, #0]
 80157e8:	6038      	str	r0, [r7, #0]
 80157ea:	8892      	ldrh	r2, [r2, #4]
 80157ec:	80ba      	strh	r2, [r7, #4]
 80157ee:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80157f2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80157f6:	10db      	asrs	r3, r3, #3
 80157f8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80157fc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015800:	4313      	orrs	r3, r2
 8015802:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015806:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801580a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801580e:	1a9b      	subs	r3, r3, r2
 8015810:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8015814:	e769      	b.n	80156ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015816:	f023 0204 	bic.w	r2, r3, #4
 801581a:	f640 611b 	movw	r1, #3611	; 0xe1b
 801581e:	428a      	cmp	r2, r1
 8015820:	d003      	beq.n	801582a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 8015822:	f640 621d 	movw	r2, #3613	; 0xe1d
 8015826:	4293      	cmp	r3, r2
 8015828:	d120      	bne.n	801586c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 801582a:	3b01      	subs	r3, #1
 801582c:	4602      	mov	r2, r0
 801582e:	b29b      	uxth	r3, r3
 8015830:	4629      	mov	r1, r5
 8015832:	4620      	mov	r0, r4
 8015834:	f7ff ff43 	bl	80156be <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015838:	7b41      	ldrb	r1, [r0, #13]
 801583a:	00cb      	lsls	r3, r1, #3
 801583c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015840:	7a03      	ldrb	r3, [r0, #8]
 8015842:	0649      	lsls	r1, r1, #25
 8015844:	ea43 0302 	orr.w	r3, r3, r2
 8015848:	bf44      	itt	mi
 801584a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801584e:	b21b      	sxthmi	r3, r3
 8015850:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015854:	7b6b      	ldrb	r3, [r5, #13]
 8015856:	7aaa      	ldrb	r2, [r5, #10]
 8015858:	005b      	lsls	r3, r3, #1
 801585a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801585e:	4313      	orrs	r3, r2
 8015860:	115a      	asrs	r2, r3, #5
 8015862:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015866:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801586a:	e036      	b.n	80158da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 801586c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8015870:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8015874:	7a2a      	ldrb	r2, [r5, #8]
 8015876:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801587a:	ea42 0201 	orr.w	r2, r2, r1
 801587e:	bf1c      	itt	ne
 8015880:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8015884:	b212      	sxthne	r2, r2
 8015886:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801588a:	f640 6109 	movw	r1, #3593	; 0xe09
 801588e:	f023 0210 	bic.w	r2, r3, #16
 8015892:	428a      	cmp	r2, r1
 8015894:	d003      	beq.n	801589e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 8015896:	f640 6213 	movw	r2, #3603	; 0xe13
 801589a:	4293      	cmp	r3, r2
 801589c:	d12a      	bne.n	80158f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 801589e:	7b6e      	ldrb	r6, [r5, #13]
 80158a0:	0076      	lsls	r6, r6, #1
 80158a2:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80158a6:	7aae      	ldrb	r6, [r5, #10]
 80158a8:	4316      	orrs	r6, r2
 80158aa:	f640 6213 	movw	r2, #3603	; 0xe13
 80158ae:	4293      	cmp	r3, r2
 80158b0:	bf18      	it	ne
 80158b2:	f103 33ff 	addne.w	r3, r3, #4294967295
 80158b6:	4602      	mov	r2, r0
 80158b8:	bf14      	ite	ne
 80158ba:	b29b      	uxthne	r3, r3
 80158bc:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80158c0:	4629      	mov	r1, r5
 80158c2:	4620      	mov	r0, r4
 80158c4:	f7ff fefb 	bl	80156be <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80158c8:	7b43      	ldrb	r3, [r0, #13]
 80158ca:	7a82      	ldrb	r2, [r0, #10]
 80158cc:	005b      	lsls	r3, r3, #1
 80158ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80158d2:	4313      	orrs	r3, r2
 80158d4:	1af6      	subs	r6, r6, r3
 80158d6:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80158da:	7b69      	ldrb	r1, [r5, #13]
 80158dc:	00cb      	lsls	r3, r1, #3
 80158de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80158e2:	7a2b      	ldrb	r3, [r5, #8]
 80158e4:	4313      	orrs	r3, r2
 80158e6:	064a      	lsls	r2, r1, #25
 80158e8:	bf44      	itt	mi
 80158ea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80158ee:	b21b      	sxthmi	r3, r3
 80158f0:	1bdb      	subs	r3, r3, r7
 80158f2:	e73f      	b.n	8015774 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80158f4:	2300      	movs	r3, #0
 80158f6:	e7b6      	b.n	8015866 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 80158f8:	3fc00079 	.word	0x3fc00079
 80158fc:	080267ac 	.word	0x080267ac
 8015900:	080289bf 	.word	0x080289bf
 8015904:	0802687e 	.word	0x0802687e

08015908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015908:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801590c:	4604      	mov	r4, r0
 801590e:	b942      	cbnz	r2, 8015922 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015910:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015914:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8015918:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801591c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015920:	e046      	b.n	80159b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8015922:	7b51      	ldrb	r1, [r2, #13]
 8015924:	8893      	ldrh	r3, [r2, #4]
 8015926:	010f      	lsls	r7, r1, #4
 8015928:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801592c:	79d7      	ldrb	r7, [r2, #7]
 801592e:	4307      	orrs	r7, r0
 8015930:	2f04      	cmp	r7, #4
 8015932:	b2bd      	uxth	r5, r7
 8015934:	bfcc      	ite	gt
 8015936:	08bf      	lsrgt	r7, r7, #2
 8015938:	2701      	movle	r7, #1
 801593a:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801593e:	f200 80ab 	bhi.w	8015a98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 8015942:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8015946:	4283      	cmp	r3, r0
 8015948:	d216      	bcs.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801594a:	f240 605b 	movw	r0, #1627	; 0x65b
 801594e:	4283      	cmp	r3, r0
 8015950:	d859      	bhi.n	8015a06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 8015952:	f240 6057 	movw	r0, #1623	; 0x657
 8015956:	4283      	cmp	r3, r0
 8015958:	d20e      	bcs.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801595a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801595e:	d24a      	bcs.n	80159f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8015960:	f240 604e 	movw	r0, #1614	; 0x64e
 8015964:	4283      	cmp	r3, r0
 8015966:	d207      	bcs.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015968:	f240 601a 	movw	r0, #1562	; 0x61a
 801596c:	4283      	cmp	r3, r0
 801596e:	d02a      	beq.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015970:	d821      	bhi.n	80159b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 8015972:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8015976:	d35b      	bcc.n	8015a30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015978:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801597c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015980:	f040 80d0 	bne.w	8015b24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8015984:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8015988:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801598c:	f040 80ca 	bne.w	8015b24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8015990:	00cb      	lsls	r3, r1, #3
 8015992:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015996:	7a13      	ldrb	r3, [r2, #8]
 8015998:	0649      	lsls	r1, r1, #25
 801599a:	ea43 0300 	orr.w	r3, r3, r0
 801599e:	bf44      	itt	mi
 80159a0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80159a4:	b21b      	sxthmi	r3, r3
 80159a6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80159aa:	1b5d      	subs	r5, r3, r5
 80159ac:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80159b0:	4610      	mov	r0, r2
 80159b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80159b6:	f240 604b 	movw	r0, #1611	; 0x64b
 80159ba:	4283      	cmp	r3, r0
 80159bc:	d338      	bcc.n	8015a30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80159be:	f240 604c 	movw	r0, #1612	; 0x64c
 80159c2:	4283      	cmp	r3, r0
 80159c4:	d9d8      	bls.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80159c6:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80159ca:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80159ce:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80159d2:	f040 80f1 	bne.w	8015bb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 80159d6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80159da:	f040 80ed 	bne.w	8015bb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 80159de:	00cb      	lsls	r3, r1, #3
 80159e0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80159e4:	7a13      	ldrb	r3, [r2, #8]
 80159e6:	064e      	lsls	r6, r1, #25
 80159e8:	ea43 0300 	orr.w	r3, r3, r0
 80159ec:	bf44      	itt	mi
 80159ee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80159f2:	b21b      	sxthmi	r3, r3
 80159f4:	e7d9      	b.n	80159aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80159f6:	f240 6054 	movw	r0, #1620	; 0x654
 80159fa:	4283      	cmp	r3, r0
 80159fc:	d8e3      	bhi.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80159fe:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015a02:	d9e0      	bls.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015a04:	e7b8      	b.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015a06:	f240 6074 	movw	r0, #1652	; 0x674
 8015a0a:	4283      	cmp	r3, r0
 8015a0c:	d0b4      	beq.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015a0e:	d82d      	bhi.n	8015a6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 8015a10:	f240 605e 	movw	r0, #1630	; 0x65e
 8015a14:	4283      	cmp	r3, r0
 8015a16:	d804      	bhi.n	8015a22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8015a18:	f240 605d 	movw	r0, #1629	; 0x65d
 8015a1c:	4283      	cmp	r3, r0
 8015a1e:	d3d2      	bcc.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015a20:	e7aa      	b.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015a22:	f240 605f 	movw	r0, #1631	; 0x65f
 8015a26:	4283      	cmp	r3, r0
 8015a28:	d0cd      	beq.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015a2a:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8015a2e:	d0a3      	beq.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015a30:	00cb      	lsls	r3, r1, #3
 8015a32:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015a36:	7a13      	ldrb	r3, [r2, #8]
 8015a38:	0649      	lsls	r1, r1, #25
 8015a3a:	ea43 0300 	orr.w	r3, r3, r0
 8015a3e:	bf44      	itt	mi
 8015a40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015a44:	b21b      	sxthmi	r3, r3
 8015a46:	1b5d      	subs	r5, r3, r5
 8015a48:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015a4c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015a50:	7b53      	ldrb	r3, [r2, #13]
 8015a52:	015b      	lsls	r3, r3, #5
 8015a54:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015a58:	7993      	ldrb	r3, [r2, #6]
 8015a5a:	430b      	orrs	r3, r1
 8015a5c:	005b      	lsls	r3, r3, #1
 8015a5e:	2105      	movs	r1, #5
 8015a60:	fb93 f3f1 	sdiv	r3, r3, r1
 8015a64:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8015a68:	440b      	add	r3, r1
 8015a6a:	e757      	b.n	801591c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8015a6c:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8015a70:	4283      	cmp	r3, r0
 8015a72:	d809      	bhi.n	8015a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8015a74:	f240 60df 	movw	r0, #1759	; 0x6df
 8015a78:	4283      	cmp	r3, r0
 8015a7a:	f4bf af7d 	bcs.w	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015a7e:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8015a82:	2b05      	cmp	r3, #5
 8015a84:	d8d4      	bhi.n	8015a30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015a86:	e777      	b.n	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015a88:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8015a8c:	4283      	cmp	r3, r0
 8015a8e:	d09a      	beq.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015a90:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8015a94:	4283      	cmp	r3, r0
 8015a96:	e7ca      	b.n	8015a2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8015a98:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8015a9c:	d22b      	bcs.n	8015af6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8015a9e:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8015aa2:	4283      	cmp	r3, r0
 8015aa4:	d28f      	bcs.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015aa6:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8015aaa:	4283      	cmp	r3, r0
 8015aac:	d816      	bhi.n	8015adc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8015aae:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8015ab2:	4283      	cmp	r3, r0
 8015ab4:	f4bf af60 	bcs.w	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015ab8:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8015abc:	4283      	cmp	r3, r0
 8015abe:	d80a      	bhi.n	8015ad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8015ac0:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8015ac4:	4283      	cmp	r3, r0
 8015ac6:	f4bf af57 	bcs.w	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015aca:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8015ace:	4283      	cmp	r3, r0
 8015ad0:	f43f af79 	beq.w	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015ad4:	e7ac      	b.n	8015a30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015ad6:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8015ada:	e7f8      	b.n	8015ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8015adc:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8015ae0:	4283      	cmp	r3, r0
 8015ae2:	d802      	bhi.n	8015aea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 8015ae4:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8015ae8:	e798      	b.n	8015a1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 8015aea:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8015aee:	4283      	cmp	r3, r0
 8015af0:	f47f af42 	bne.w	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015af4:	e767      	b.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015af6:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8015afa:	4283      	cmp	r3, r0
 8015afc:	f43f af63 	beq.w	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015b00:	d802      	bhi.n	8015b08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 8015b02:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8015b06:	e7f2      	b.n	8015aee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8015b08:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8015b0c:	4283      	cmp	r3, r0
 8015b0e:	d805      	bhi.n	8015b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 8015b10:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8015b14:	4283      	cmp	r3, r0
 8015b16:	f4ff af2f 	bcc.w	8015978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8015b1a:	e754      	b.n	80159c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8015b1c:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8015b20:	4283      	cmp	r3, r0
 8015b22:	e7af      	b.n	8015a84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 8015b24:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8015b28:	4617      	mov	r7, r2
 8015b2a:	f102 0808 	add.w	r8, r2, #8
 8015b2e:	4666      	mov	r6, ip
 8015b30:	6838      	ldr	r0, [r7, #0]
 8015b32:	6879      	ldr	r1, [r7, #4]
 8015b34:	46e6      	mov	lr, ip
 8015b36:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015b3a:	3708      	adds	r7, #8
 8015b3c:	4547      	cmp	r7, r8
 8015b3e:	46f4      	mov	ip, lr
 8015b40:	d1f6      	bne.n	8015b30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 8015b42:	6838      	ldr	r0, [r7, #0]
 8015b44:	f8ce 0000 	str.w	r0, [lr]
 8015b48:	88b9      	ldrh	r1, [r7, #4]
 8015b4a:	f8ae 1004 	strh.w	r1, [lr, #4]
 8015b4e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8015b52:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015b56:	d009      	beq.n	8015b6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8015b58:	7b51      	ldrb	r1, [r2, #13]
 8015b5a:	7992      	ldrb	r2, [r2, #6]
 8015b5c:	0149      	lsls	r1, r1, #5
 8015b5e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015b62:	4311      	orrs	r1, r2
 8015b64:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015b68:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015b6c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015b70:	d00d      	beq.n	8015b8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 8015b72:	442b      	add	r3, r5
 8015b74:	b29b      	uxth	r3, r3
 8015b76:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015b7a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015b7e:	10db      	asrs	r3, r3, #3
 8015b80:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015b84:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015b88:	4313      	orrs	r3, r2
 8015b8a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015b8e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8015b92:	00cb      	lsls	r3, r1, #3
 8015b94:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015b98:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8015b9c:	064f      	lsls	r7, r1, #25
 8015b9e:	ea43 0302 	orr.w	r3, r3, r2
 8015ba2:	bf44      	itt	mi
 8015ba4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015ba8:	b21b      	sxthmi	r3, r3
 8015baa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015bae:	1b5d      	subs	r5, r3, r5
 8015bb0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015bb4:	4632      	mov	r2, r6
 8015bb6:	e6fb      	b.n	80159b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8015bb8:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 8015bbc:	4694      	mov	ip, r2
 8015bbe:	f102 0908 	add.w	r9, r2, #8
 8015bc2:	4676      	mov	r6, lr
 8015bc4:	f8dc 0000 	ldr.w	r0, [ip]
 8015bc8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8015bcc:	46f0      	mov	r8, lr
 8015bce:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8015bd2:	f10c 0c08 	add.w	ip, ip, #8
 8015bd6:	45cc      	cmp	ip, r9
 8015bd8:	46c6      	mov	lr, r8
 8015bda:	d1f3      	bne.n	8015bc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8015bdc:	f8dc 0000 	ldr.w	r0, [ip]
 8015be0:	f8c8 0000 	str.w	r0, [r8]
 8015be4:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 8015be8:	f8a8 1004 	strh.w	r1, [r8, #4]
 8015bec:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8015bf0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015bf4:	d009      	beq.n	8015c0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 8015bf6:	7b51      	ldrb	r1, [r2, #13]
 8015bf8:	7992      	ldrb	r2, [r2, #6]
 8015bfa:	0149      	lsls	r1, r1, #5
 8015bfc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015c00:	4311      	orrs	r1, r2
 8015c02:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015c06:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015c0a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015c0e:	d00d      	beq.n	8015c2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8015c10:	1bdb      	subs	r3, r3, r7
 8015c12:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015c16:	b29b      	uxth	r3, r3
 8015c18:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015c1c:	10db      	asrs	r3, r3, #3
 8015c1e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015c22:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015c26:	4313      	orrs	r3, r2
 8015c28:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015c2c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8015c30:	00cb      	lsls	r3, r1, #3
 8015c32:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015c36:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8015c3a:	0648      	lsls	r0, r1, #25
 8015c3c:	ea43 0302 	orr.w	r3, r3, r2
 8015c40:	bf44      	itt	mi
 8015c42:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015c46:	b21b      	sxthmi	r3, r3
 8015c48:	e7b1      	b.n	8015bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08015c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8015c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c50:	461e      	mov	r6, r3
 8015c52:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8015c54:	4604      	mov	r4, r0
 8015c56:	4617      	mov	r7, r2
 8015c58:	b92b      	cbnz	r3, 8015c66 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8015c5a:	4b25      	ldr	r3, [pc, #148]	; (8015cf0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8015c5c:	4a25      	ldr	r2, [pc, #148]	; (8015cf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8015c5e:	4826      	ldr	r0, [pc, #152]	; (8015cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8015c60:	21c0      	movs	r1, #192	; 0xc0
 8015c62:	f00d f951 	bl	8022f08 <__assert_func>
 8015c66:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015c68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015c6c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015c70:	f7f0 fdc4 	bl	80067fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015c74:	4605      	mov	r5, r0
 8015c76:	b918      	cbnz	r0, 8015c80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8015c78:	6030      	str	r0, [r6, #0]
 8015c7a:	4628      	mov	r0, r5
 8015c7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015c80:	683b      	ldr	r3, [r7, #0]
 8015c82:	4601      	mov	r1, r0
 8015c84:	68db      	ldr	r3, [r3, #12]
 8015c86:	4638      	mov	r0, r7
 8015c88:	4798      	blx	r3
 8015c8a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8015c8e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015c92:	4602      	mov	r2, r0
 8015c94:	6030      	str	r0, [r6, #0]
 8015c96:	d213      	bcs.n	8015cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8015c98:	4643      	mov	r3, r8
 8015c9a:	4639      	mov	r1, r7
 8015c9c:	4620      	mov	r0, r4
 8015c9e:	f7ff fe33 	bl	8015908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8015ca2:	6030      	str	r0, [r6, #0]
 8015ca4:	6833      	ldr	r3, [r6, #0]
 8015ca6:	b143      	cbz	r3, 8015cba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8015ca8:	7b5a      	ldrb	r2, [r3, #13]
 8015caa:	7a9b      	ldrb	r3, [r3, #10]
 8015cac:	0052      	lsls	r2, r2, #1
 8015cae:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015cb2:	4313      	orrs	r3, r2
 8015cb4:	bf0c      	ite	eq
 8015cb6:	2301      	moveq	r3, #1
 8015cb8:	2300      	movne	r3, #0
 8015cba:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8015cbe:	e7dc      	b.n	8015c7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8015cc0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8015cc4:	b29b      	uxth	r3, r3
 8015cc6:	2b7f      	cmp	r3, #127	; 0x7f
 8015cc8:	d804      	bhi.n	8015cd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8015cca:	4639      	mov	r1, r7
 8015ccc:	4620      	mov	r0, r4
 8015cce:	f7ff fd01 	bl	80156d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8015cd2:	e7e6      	b.n	8015ca2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8015cd4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8015cd8:	2b00      	cmp	r3, #0
 8015cda:	d0e3      	beq.n	8015ca4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8015cdc:	f640 1302 	movw	r3, #2306	; 0x902
 8015ce0:	429d      	cmp	r5, r3
 8015ce2:	d1df      	bne.n	8015ca4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8015ce4:	4601      	mov	r1, r0
 8015ce6:	4620      	mov	r0, r4
 8015ce8:	f7ff fcc6 	bl	8015678 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015cec:	e7d9      	b.n	8015ca2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8015cee:	bf00      	nop
 8015cf0:	080267ac 	.word	0x080267ac
 8015cf4:	080289bf 	.word	0x080289bf
 8015cf8:	0802687e 	.word	0x0802687e

08015cfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8015cfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015d00:	461e      	mov	r6, r3
 8015d02:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8015d04:	4604      	mov	r4, r0
 8015d06:	4617      	mov	r7, r2
 8015d08:	b92b      	cbnz	r3, 8015d16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8015d0a:	4b26      	ldr	r3, [pc, #152]	; (8015da4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8015d0c:	4a26      	ldr	r2, [pc, #152]	; (8015da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 8015d0e:	4827      	ldr	r0, [pc, #156]	; (8015dac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 8015d10:	21c0      	movs	r1, #192	; 0xc0
 8015d12:	f00d f8f9 	bl	8022f08 <__assert_func>
 8015d16:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015d18:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015d1c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015d20:	f7f0 fd6c 	bl	80067fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015d24:	4605      	mov	r5, r0
 8015d26:	b918      	cbnz	r0, 8015d30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8015d28:	6030      	str	r0, [r6, #0]
 8015d2a:	4628      	mov	r0, r5
 8015d2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015d30:	683b      	ldr	r3, [r7, #0]
 8015d32:	4601      	mov	r1, r0
 8015d34:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8015d38:	4638      	mov	r0, r7
 8015d3a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015d3e:	47c8      	blx	r9
 8015d40:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8015d44:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015d48:	4602      	mov	r2, r0
 8015d4a:	6030      	str	r0, [r6, #0]
 8015d4c:	d213      	bcs.n	8015d76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8015d4e:	4643      	mov	r3, r8
 8015d50:	4639      	mov	r1, r7
 8015d52:	4620      	mov	r0, r4
 8015d54:	f7ff fdd8 	bl	8015908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8015d58:	6030      	str	r0, [r6, #0]
 8015d5a:	6833      	ldr	r3, [r6, #0]
 8015d5c:	b143      	cbz	r3, 8015d70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8015d5e:	7b5a      	ldrb	r2, [r3, #13]
 8015d60:	7a9b      	ldrb	r3, [r3, #10]
 8015d62:	0052      	lsls	r2, r2, #1
 8015d64:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015d68:	4313      	orrs	r3, r2
 8015d6a:	bf0c      	ite	eq
 8015d6c:	2301      	moveq	r3, #1
 8015d6e:	2300      	movne	r3, #0
 8015d70:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8015d74:	e7d9      	b.n	8015d2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 8015d76:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8015d7a:	b29b      	uxth	r3, r3
 8015d7c:	2b7f      	cmp	r3, #127	; 0x7f
 8015d7e:	d804      	bhi.n	8015d8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8015d80:	4639      	mov	r1, r7
 8015d82:	4620      	mov	r0, r4
 8015d84:	f7ff fca6 	bl	80156d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8015d88:	e7e6      	b.n	8015d58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8015d8a:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8015d8e:	2b00      	cmp	r3, #0
 8015d90:	d0e3      	beq.n	8015d5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8015d92:	f640 1302 	movw	r3, #2306	; 0x902
 8015d96:	429d      	cmp	r5, r3
 8015d98:	d1df      	bne.n	8015d5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8015d9a:	4601      	mov	r1, r0
 8015d9c:	4620      	mov	r0, r4
 8015d9e:	f7ff fc6b 	bl	8015678 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015da2:	e7d9      	b.n	8015d58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8015da4:	080267ac 	.word	0x080267ac
 8015da8:	080289bf 	.word	0x080289bf
 8015dac:	0802687e 	.word	0x0802687e

08015db0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8015db0:	b510      	push	{r4, lr}
 8015db2:	4604      	mov	r4, r0
 8015db4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015db8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015dba:	b9d9      	cbnz	r1, 8015df4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 8015dbc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015dbe:	2b0a      	cmp	r3, #10
 8015dc0:	d037      	beq.n	8015e32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8015dc2:	4620      	mov	r0, r4
 8015dc4:	f7fe ff86 	bl	8014cd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8015dc8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015dca:	2b09      	cmp	r3, #9
 8015dcc:	d906      	bls.n	8015ddc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 8015dce:	4b19      	ldr	r3, [pc, #100]	; (8015e34 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8015dd0:	4a19      	ldr	r2, [pc, #100]	; (8015e38 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 8015dd2:	481a      	ldr	r0, [pc, #104]	; (8015e3c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 8015dd4:	f44f 7182 	mov.w	r1, #260	; 0x104
 8015dd8:	f00d f896 	bl	8022f08 <__assert_func>
 8015ddc:	1c5a      	adds	r2, r3, #1
 8015dde:	8722      	strh	r2, [r4, #56]	; 0x38
 8015de0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015de2:	4413      	add	r3, r2
 8015de4:	b29b      	uxth	r3, r3
 8015de6:	2b09      	cmp	r3, #9
 8015de8:	bf88      	it	hi
 8015dea:	3b0a      	subhi	r3, #10
 8015dec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015df0:	8458      	strh	r0, [r3, #34]	; 0x22
 8015df2:	e7e3      	b.n	8015dbc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 8015df4:	2b0a      	cmp	r3, #10
 8015df6:	d01c      	beq.n	8015e32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8015df8:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8015dfa:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8015dfe:	3901      	subs	r1, #1
 8015e00:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8015e02:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8015e06:	1c51      	adds	r1, r2, #1
 8015e08:	b289      	uxth	r1, r1
 8015e0a:	2901      	cmp	r1, #1
 8015e0c:	bf8a      	itet	hi
 8015e0e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8015e12:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8015e14:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8015e16:	2b09      	cmp	r3, #9
 8015e18:	d8d9      	bhi.n	8015dce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8015e1a:	1c5a      	adds	r2, r3, #1
 8015e1c:	8722      	strh	r2, [r4, #56]	; 0x38
 8015e1e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015e20:	4413      	add	r3, r2
 8015e22:	b29b      	uxth	r3, r3
 8015e24:	2b09      	cmp	r3, #9
 8015e26:	bf88      	it	hi
 8015e28:	3b0a      	subhi	r3, #10
 8015e2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015e2e:	8458      	strh	r0, [r3, #34]	; 0x22
 8015e30:	e7c0      	b.n	8015db4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8015e32:	bd10      	pop	{r4, pc}
 8015e34:	08028790 	.word	0x08028790
 8015e38:	08028b15 	.word	0x08028b15
 8015e3c:	0802687e 	.word	0x0802687e

08015e40 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8015e40:	b538      	push	{r3, r4, r5, lr}
 8015e42:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8015e44:	4604      	mov	r4, r0
 8015e46:	b92a      	cbnz	r2, 8015e54 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8015e48:	4b13      	ldr	r3, [pc, #76]	; (8015e98 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8015e4a:	4a14      	ldr	r2, [pc, #80]	; (8015e9c <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8015e4c:	4814      	ldr	r0, [pc, #80]	; (8015ea0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8015e4e:	21d5      	movs	r1, #213	; 0xd5
 8015e50:	f00d f85a 	bl	8022f08 <__assert_func>
 8015e54:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015e56:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8015e5a:	3a01      	subs	r2, #1
 8015e5c:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8015e5e:	8702      	strh	r2, [r0, #56]	; 0x38
 8015e60:	1c5a      	adds	r2, r3, #1
 8015e62:	b292      	uxth	r2, r2
 8015e64:	2a09      	cmp	r2, #9
 8015e66:	bf86      	itte	hi
 8015e68:	3b09      	subhi	r3, #9
 8015e6a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8015e6c:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8015e6e:	f7ff ff9f 	bl	8015db0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8015e72:	8c23      	ldrh	r3, [r4, #32]
 8015e74:	2b01      	cmp	r3, #1
 8015e76:	bf9c      	itt	ls
 8015e78:	3301      	addls	r3, #1
 8015e7a:	8423      	strhls	r3, [r4, #32]
 8015e7c:	8be3      	ldrh	r3, [r4, #30]
 8015e7e:	b90b      	cbnz	r3, 8015e84 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8015e80:	2302      	movs	r3, #2
 8015e82:	83e3      	strh	r3, [r4, #30]
 8015e84:	8be3      	ldrh	r3, [r4, #30]
 8015e86:	3b01      	subs	r3, #1
 8015e88:	b29b      	uxth	r3, r3
 8015e8a:	83e3      	strh	r3, [r4, #30]
 8015e8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e90:	4628      	mov	r0, r5
 8015e92:	8365      	strh	r5, [r4, #26]
 8015e94:	bd38      	pop	{r3, r4, r5, pc}
 8015e96:	bf00      	nop
 8015e98:	080267ac 	.word	0x080267ac
 8015e9c:	08028a6a 	.word	0x08028a6a
 8015ea0:	0802687e 	.word	0x0802687e

08015ea4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8015ea4:	b538      	push	{r3, r4, r5, lr}
 8015ea6:	428a      	cmp	r2, r1
 8015ea8:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8015eaa:	d90c      	bls.n	8015ec6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8015eac:	b92c      	cbnz	r4, 8015eba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8015eae:	4b1c      	ldr	r3, [pc, #112]	; (8015f20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8015eb0:	4a1c      	ldr	r2, [pc, #112]	; (8015f24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8015eb2:	21e1      	movs	r1, #225	; 0xe1
 8015eb4:	481c      	ldr	r0, [pc, #112]	; (8015f28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8015eb6:	f00d f827 	bl	8022f08 <__assert_func>
 8015eba:	3c01      	subs	r4, #1
 8015ebc:	8704      	strh	r4, [r0, #56]	; 0x38
 8015ebe:	4b1b      	ldr	r3, [pc, #108]	; (8015f2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8015ec0:	4a1b      	ldr	r2, [pc, #108]	; (8015f30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8015ec2:	21c5      	movs	r1, #197	; 0xc5
 8015ec4:	e7f6      	b.n	8015eb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8015ec6:	428c      	cmp	r4, r1
 8015ec8:	d203      	bcs.n	8015ed2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8015eca:	4b1a      	ldr	r3, [pc, #104]	; (8015f34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8015ecc:	4a1a      	ldr	r2, [pc, #104]	; (8015f38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8015ece:	21cb      	movs	r1, #203	; 0xcb
 8015ed0:	e7f0      	b.n	8015eb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8015ed2:	1a64      	subs	r4, r4, r1
 8015ed4:	8704      	strh	r4, [r0, #56]	; 0x38
 8015ed6:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8015ed8:	4421      	add	r1, r4
 8015eda:	b289      	uxth	r1, r1
 8015edc:	2909      	cmp	r1, #9
 8015ede:	bf88      	it	hi
 8015ee0:	390a      	subhi	r1, #10
 8015ee2:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015ee4:	250a      	movs	r5, #10
 8015ee6:	b1ba      	cbz	r2, 8015f18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8015ee8:	3a01      	subs	r2, #1
 8015eea:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8015eec:	b292      	uxth	r2, r2
 8015eee:	2909      	cmp	r1, #9
 8015ef0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8015ef4:	d903      	bls.n	8015efe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 8015ef6:	4b11      	ldr	r3, [pc, #68]	; (8015f3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8015ef8:	4a11      	ldr	r2, [pc, #68]	; (8015f40 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8015efa:	21e6      	movs	r1, #230	; 0xe6
 8015efc:	e7da      	b.n	8015eb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8015efe:	3101      	adds	r1, #1
 8015f00:	8701      	strh	r1, [r0, #56]	; 0x38
 8015f02:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8015f04:	b901      	cbnz	r1, 8015f08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 8015f06:	86c5      	strh	r5, [r0, #54]	; 0x36
 8015f08:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8015f0a:	3901      	subs	r1, #1
 8015f0c:	b289      	uxth	r1, r1
 8015f0e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015f10:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8015f14:	844c      	strh	r4, [r1, #34]	; 0x22
 8015f16:	e7e6      	b.n	8015ee6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8015f18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015f1c:	f7ff bf48 	b.w	8015db0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8015f20:	080267ac 	.word	0x080267ac
 8015f24:	08028843 	.word	0x08028843
 8015f28:	0802687e 	.word	0x0802687e
 8015f2c:	080268aa 	.word	0x080268aa
 8015f30:	080288ed 	.word	0x080288ed
 8015f34:	0802879c 	.word	0x0802879c
 8015f38:	08028bc4 	.word	0x08028bc4
 8015f3c:	080287a8 	.word	0x080287a8
 8015f40:	080287bb 	.word	0x080287bb

08015f44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8015f44:	3a01      	subs	r2, #1
 8015f46:	b570      	push	{r4, r5, r6, lr}
 8015f48:	b292      	uxth	r2, r2
 8015f4a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015f4e:	42b2      	cmp	r2, r6
 8015f50:	d019      	beq.n	8015f86 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8015f52:	8c04      	ldrh	r4, [r0, #32]
 8015f54:	f831 5b02 	ldrh.w	r5, [r1], #2
 8015f58:	4294      	cmp	r4, r2
 8015f5a:	d805      	bhi.n	8015f68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8015f5c:	4b19      	ldr	r3, [pc, #100]	; (8015fc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8015f5e:	4a1a      	ldr	r2, [pc, #104]	; (8015fc8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8015f60:	481a      	ldr	r0, [pc, #104]	; (8015fcc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8015f62:	21c5      	movs	r1, #197	; 0xc5
 8015f64:	f00c ffd0 	bl	8022f08 <__assert_func>
 8015f68:	8bc4      	ldrh	r4, [r0, #30]
 8015f6a:	4414      	add	r4, r2
 8015f6c:	b2a4      	uxth	r4, r4
 8015f6e:	2c01      	cmp	r4, #1
 8015f70:	bf88      	it	hi
 8015f72:	3c02      	subhi	r4, #2
 8015f74:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015f78:	3a01      	subs	r2, #1
 8015f7a:	8b64      	ldrh	r4, [r4, #26]
 8015f7c:	42ac      	cmp	r4, r5
 8015f7e:	b292      	uxth	r2, r2
 8015f80:	d0e5      	beq.n	8015f4e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8015f82:	2000      	movs	r0, #0
 8015f84:	bd70      	pop	{r4, r5, r6, pc}
 8015f86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015f8a:	2400      	movs	r4, #0
 8015f8c:	4413      	add	r3, r2
 8015f8e:	b2a2      	uxth	r2, r4
 8015f90:	429a      	cmp	r2, r3
 8015f92:	da14      	bge.n	8015fbe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8015f94:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 8015f96:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8015f9a:	4296      	cmp	r6, r2
 8015f9c:	d802      	bhi.n	8015fa4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8015f9e:	4b09      	ldr	r3, [pc, #36]	; (8015fc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8015fa0:	4a0b      	ldr	r2, [pc, #44]	; (8015fd0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8015fa2:	e7dd      	b.n	8015f60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8015fa4:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8015fa6:	4432      	add	r2, r6
 8015fa8:	b292      	uxth	r2, r2
 8015faa:	2a09      	cmp	r2, #9
 8015fac:	bf88      	it	hi
 8015fae:	3a0a      	subhi	r2, #10
 8015fb0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015fb4:	3401      	adds	r4, #1
 8015fb6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8015fb8:	42aa      	cmp	r2, r5
 8015fba:	d0e8      	beq.n	8015f8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8015fbc:	e7e1      	b.n	8015f82 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8015fbe:	2001      	movs	r0, #1
 8015fc0:	e7e0      	b.n	8015f84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8015fc2:	bf00      	nop
 8015fc4:	080268aa 	.word	0x080268aa
 8015fc8:	08028c48 	.word	0x08028c48
 8015fcc:	0802687e 	.word	0x0802687e
 8015fd0:	080288ed 	.word	0x080288ed

08015fd4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8015fd4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fd8:	4605      	mov	r5, r0
 8015fda:	4616      	mov	r6, r2
 8015fdc:	1c8c      	adds	r4, r1, #2
 8015fde:	8809      	ldrh	r1, [r1, #0]
 8015fe0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8015fe4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8015fe8:	42b3      	cmp	r3, r6
 8015fea:	d124      	bne.n	8016036 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8015fec:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8015ff0:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8015ff4:	f001 070f 	and.w	r7, r1, #15
 8015ff8:	f8cd 8000 	str.w	r8, [sp]
 8015ffc:	464b      	mov	r3, r9
 8015ffe:	4652      	mov	r2, sl
 8016000:	4621      	mov	r1, r4
 8016002:	4628      	mov	r0, r5
 8016004:	f7ff ff9e 	bl	8015f44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016008:	4683      	mov	fp, r0
 801600a:	b168      	cbz	r0, 8016028 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801600c:	eb0a 0109 	add.w	r1, sl, r9
 8016010:	4441      	add	r1, r8
 8016012:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016016:	463a      	mov	r2, r7
 8016018:	4649      	mov	r1, r9
 801601a:	4628      	mov	r0, r5
 801601c:	f7ff ff42 	bl	8015ea4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8016020:	4658      	mov	r0, fp
 8016022:	b003      	add	sp, #12
 8016024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016028:	eb07 010a 	add.w	r1, r7, sl
 801602c:	4449      	add	r1, r9
 801602e:	4441      	add	r1, r8
 8016030:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016034:	e7d2      	b.n	8015fdc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016036:	f04f 0b00 	mov.w	fp, #0
 801603a:	e7f1      	b.n	8016020 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801603c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801603c:	b570      	push	{r4, r5, r6, lr}
 801603e:	8810      	ldrh	r0, [r2, #0]
 8016040:	4298      	cmp	r0, r3
 8016042:	d817      	bhi.n	8016074 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016044:	1e48      	subs	r0, r1, #1
 8016046:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801604a:	4298      	cmp	r0, r3
 801604c:	d312      	bcc.n	8016074 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801604e:	2400      	movs	r4, #0
 8016050:	428c      	cmp	r4, r1
 8016052:	d20f      	bcs.n	8016074 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016054:	1860      	adds	r0, r4, r1
 8016056:	1040      	asrs	r0, r0, #1
 8016058:	0085      	lsls	r5, r0, #2
 801605a:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801605e:	42b3      	cmp	r3, r6
 8016060:	d902      	bls.n	8016068 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016062:	3001      	adds	r0, #1
 8016064:	b284      	uxth	r4, r0
 8016066:	e7f3      	b.n	8016050 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016068:	d201      	bcs.n	801606e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801606a:	b281      	uxth	r1, r0
 801606c:	e7f0      	b.n	8016050 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801606e:	442a      	add	r2, r5
 8016070:	8850      	ldrh	r0, [r2, #2]
 8016072:	bd70      	pop	{r4, r5, r6, pc}
 8016074:	2000      	movs	r0, #0
 8016076:	e7fc      	b.n	8016072 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016078 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801607c:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801607e:	886f      	ldrh	r7, [r5, #2]
 8016080:	4604      	mov	r4, r0
 8016082:	087f      	lsrs	r7, r7, #1
 8016084:	260b      	movs	r6, #11
 8016086:	3e01      	subs	r6, #1
 8016088:	d01b      	beq.n	80160c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801608a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801608c:	b92b      	cbnz	r3, 801609a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801608e:	4b0e      	ldr	r3, [pc, #56]	; (80160c8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8016090:	4a0e      	ldr	r2, [pc, #56]	; (80160cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8016092:	480f      	ldr	r0, [pc, #60]	; (80160d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8016094:	21c0      	movs	r1, #192	; 0xc0
 8016096:	f00c ff37 	bl	8022f08 <__assert_func>
 801609a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801609c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80160a0:	462a      	mov	r2, r5
 80160a2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80160a6:	4639      	mov	r1, r7
 80160a8:	4643      	mov	r3, r8
 80160aa:	4620      	mov	r0, r4
 80160ac:	f7ff ffc6 	bl	801603c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80160b0:	b138      	cbz	r0, 80160c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80160b2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80160b6:	4642      	mov	r2, r8
 80160b8:	4620      	mov	r0, r4
 80160ba:	f7ff ff8b 	bl	8015fd4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80160be:	2800      	cmp	r0, #0
 80160c0:	d1e1      	bne.n	8016086 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80160c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80160c6:	bf00      	nop
 80160c8:	080267ac 	.word	0x080267ac
 80160cc:	080289bf 	.word	0x080289bf
 80160d0:	0802687e 	.word	0x0802687e

080160d4 <_ZN8touchgfx8ceil28_4El>:
 80160d4:	f110 030f 	adds.w	r3, r0, #15
 80160d8:	d401      	bmi.n	80160de <_ZN8touchgfx8ceil28_4El+0xa>
 80160da:	1118      	asrs	r0, r3, #4
 80160dc:	4770      	bx	lr
 80160de:	f1c0 0001 	rsb	r0, r0, #1
 80160e2:	f010 000f 	ands.w	r0, r0, #15
 80160e6:	bf18      	it	ne
 80160e8:	2001      	movne	r0, #1
 80160ea:	2210      	movs	r2, #16
 80160ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80160f0:	1a18      	subs	r0, r3, r0
 80160f2:	4770      	bx	lr

080160f4 <_ZN8touchgfx11floorDivModEllRlS0_>:
 80160f4:	2900      	cmp	r1, #0
 80160f6:	b538      	push	{r3, r4, r5, lr}
 80160f8:	dc05      	bgt.n	8016106 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 80160fa:	4b0f      	ldr	r3, [pc, #60]	; (8016138 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 80160fc:	4a0f      	ldr	r2, [pc, #60]	; (801613c <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 80160fe:	4810      	ldr	r0, [pc, #64]	; (8016140 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 8016100:	21f7      	movs	r1, #247	; 0xf7
 8016102:	f00c ff01 	bl	8022f08 <__assert_func>
 8016106:	2800      	cmp	r0, #0
 8016108:	db06      	blt.n	8016118 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 801610a:	fb90 f4f1 	sdiv	r4, r0, r1
 801610e:	6014      	str	r4, [r2, #0]
 8016110:	fb01 0114 	mls	r1, r1, r4, r0
 8016114:	6019      	str	r1, [r3, #0]
 8016116:	bd38      	pop	{r3, r4, r5, pc}
 8016118:	4240      	negs	r0, r0
 801611a:	fb90 f4f1 	sdiv	r4, r0, r1
 801611e:	4265      	negs	r5, r4
 8016120:	fb01 0014 	mls	r0, r1, r4, r0
 8016124:	6015      	str	r5, [r2, #0]
 8016126:	6018      	str	r0, [r3, #0]
 8016128:	2800      	cmp	r0, #0
 801612a:	d0f4      	beq.n	8016116 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 801612c:	6810      	ldr	r0, [r2, #0]
 801612e:	3801      	subs	r0, #1
 8016130:	6010      	str	r0, [r2, #0]
 8016132:	6818      	ldr	r0, [r3, #0]
 8016134:	1a09      	subs	r1, r1, r0
 8016136:	e7ed      	b.n	8016114 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 8016138:	08028d19 	.word	0x08028d19
 801613c:	08028d58 	.word	0x08028d58
 8016140:	08028d29 	.word	0x08028d29

08016144 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016144:	b570      	push	{r4, r5, r6, lr}
 8016146:	694a      	ldr	r2, [r1, #20]
 8016148:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801614a:	684b      	ldr	r3, [r1, #4]
 801614c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801614e:	1b54      	subs	r4, r2, r5
 8016150:	f000 8106 	beq.w	8016360 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016154:	1b9b      	subs	r3, r3, r6
 8016156:	d003      	beq.n	8016160 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016158:	4363      	muls	r3, r4
 801615a:	2210      	movs	r2, #16
 801615c:	fb93 f3f2 	sdiv	r3, r3, r2
 8016160:	680c      	ldr	r4, [r1, #0]
 8016162:	698a      	ldr	r2, [r1, #24]
 8016164:	1b65      	subs	r5, r4, r5
 8016166:	f000 80fd 	beq.w	8016364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801616a:	1b92      	subs	r2, r2, r6
 801616c:	d003      	beq.n	8016176 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801616e:	436a      	muls	r2, r5
 8016170:	2410      	movs	r4, #16
 8016172:	fb92 f2f4 	sdiv	r2, r2, r4
 8016176:	1a9b      	subs	r3, r3, r2
 8016178:	ee07 3a90 	vmov	s15, r3
 801617c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80163a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8016180:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016184:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016188:	ee67 7a84 	vmul.f32	s15, s15, s8
 801618c:	460a      	mov	r2, r1
 801618e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016192:	4603      	mov	r3, r0
 8016194:	f100 040c 	add.w	r4, r0, #12
 8016198:	eeb1 6a43 	vneg.f32	s12, s6
 801619c:	edd2 7a02 	vldr	s15, [r2, #8]
 80161a0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80161a4:	3214      	adds	r2, #20
 80161a6:	ece3 6a01 	vstmia	r3!, {s13}
 80161aa:	ed52 7a02 	vldr	s15, [r2, #-8]
 80161ae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80161b2:	429c      	cmp	r4, r3
 80161b4:	edc3 7a02 	vstr	s15, [r3, #8]
 80161b8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80161bc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80161c0:	edc3 7a05 	vstr	s15, [r3, #20]
 80161c4:	d1ea      	bne.n	801619c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80161c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80161c8:	698b      	ldr	r3, [r1, #24]
 80161ca:	edd0 4a02 	vldr	s9, [r0, #8]
 80161ce:	edd0 3a00 	vldr	s7, [r0]
 80161d2:	edd0 6a01 	vldr	s13, [r0, #4]
 80161d6:	ed90 5a05 	vldr	s10, [r0, #20]
 80161da:	ed90 2a03 	vldr	s4, [r0, #12]
 80161de:	edd0 5a04 	vldr	s11, [r0, #16]
 80161e2:	ed90 1a07 	vldr	s2, [r0, #28]
 80161e6:	edd0 2a06 	vldr	s5, [r0, #24]
 80161ea:	1a9b      	subs	r3, r3, r2
 80161ec:	ee07 3a90 	vmov	s15, r3
 80161f0:	684b      	ldr	r3, [r1, #4]
 80161f2:	1a9b      	subs	r3, r3, r2
 80161f4:	ee07 3a10 	vmov	s14, r3
 80161f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80161fc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016200:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016204:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016208:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801620c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016210:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016214:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016218:	eee6 7a87 	vfma.f32	s15, s13, s14
 801621c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016220:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016224:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8016228:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801622a:	694a      	ldr	r2, [r1, #20]
 801622c:	1b13      	subs	r3, r2, r4
 801622e:	ee07 3a10 	vmov	s14, r3
 8016232:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016236:	680b      	ldr	r3, [r1, #0]
 8016238:	ee27 7a04 	vmul.f32	s14, s14, s8
 801623c:	1b1b      	subs	r3, r3, r4
 801623e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8016242:	ee07 3a10 	vmov	s14, r3
 8016246:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801624a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801624e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016252:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016256:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801625a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801625c:	698b      	ldr	r3, [r1, #24]
 801625e:	1a9b      	subs	r3, r3, r2
 8016260:	ee06 3a90 	vmov	s13, r3
 8016264:	684b      	ldr	r3, [r1, #4]
 8016266:	1a9b      	subs	r3, r3, r2
 8016268:	ee07 3a10 	vmov	s14, r3
 801626c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016270:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016274:	ee66 6a84 	vmul.f32	s13, s13, s8
 8016278:	ee27 7a04 	vmul.f32	s14, s14, s8
 801627c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016280:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016284:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016288:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801628c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801628e:	694a      	ldr	r2, [r1, #20]
 8016290:	1b13      	subs	r3, r2, r4
 8016292:	ee07 3a10 	vmov	s14, r3
 8016296:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801629a:	680b      	ldr	r3, [r1, #0]
 801629c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80162a0:	1b1b      	subs	r3, r3, r4
 80162a2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80162a6:	ee07 3a10 	vmov	s14, r3
 80162aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80162ae:	ee27 7a04 	vmul.f32	s14, s14, s8
 80162b2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80162b6:	edd0 5a08 	vldr	s11, [r0, #32]
 80162ba:	ee25 5a06 	vmul.f32	s10, s10, s12
 80162be:	ee31 1a65 	vsub.f32	s2, s2, s11
 80162c2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80162c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80162c8:	698b      	ldr	r3, [r1, #24]
 80162ca:	1a9b      	subs	r3, r3, r2
 80162cc:	ee07 3a10 	vmov	s14, r3
 80162d0:	684b      	ldr	r3, [r1, #4]
 80162d2:	1a9b      	subs	r3, r3, r2
 80162d4:	ee01 3a90 	vmov	s3, r3
 80162d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80162dc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80162e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80162e4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80162e8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80162ec:	ee61 1a84 	vmul.f32	s3, s3, s8
 80162f0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80162f4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80162f8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80162fc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80162fe:	694a      	ldr	r2, [r1, #20]
 8016300:	1b13      	subs	r3, r2, r4
 8016302:	ee03 3a10 	vmov	s6, r3
 8016306:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801630a:	680b      	ldr	r3, [r1, #0]
 801630c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016310:	1b1b      	subs	r3, r3, r4
 8016312:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016316:	ee03 3a10 	vmov	s6, r3
 801631a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801631e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016322:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016326:	ee25 6a86 	vmul.f32	s12, s11, s12
 801632a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801632e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8016332:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8016336:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801633a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801633e:	dd13      	ble.n	8016368 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8016340:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016344:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016348:	63c3      	str	r3, [r0, #60]	; 0x3c
 801634a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801634e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016352:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016356:	dd15      	ble.n	8016384 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016358:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801635c:	6403      	str	r3, [r0, #64]	; 0x40
 801635e:	bd70      	pop	{r4, r5, r6, pc}
 8016360:	4623      	mov	r3, r4
 8016362:	e6fd      	b.n	8016160 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016364:	462a      	mov	r2, r5
 8016366:	e706      	b.n	8016176 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016368:	d502      	bpl.n	8016370 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801636a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801636e:	e7e9      	b.n	8016344 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8016370:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016374:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016378:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801637c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016380:	dade      	bge.n	8016340 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8016382:	e7f2      	b.n	801636a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016384:	d502      	bpl.n	801638c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8016386:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801638a:	e7e7      	b.n	801635c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801638c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016390:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016394:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016398:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801639c:	dadc      	bge.n	8016358 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801639e:	e7f2      	b.n	8016386 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80163a0:	3d800000 	.word	0x3d800000

080163a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80163a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163a8:	f04f 0814 	mov.w	r8, #20
 80163ac:	fb08 f903 	mul.w	r9, r8, r3
 80163b0:	eb02 0a09 	add.w	sl, r2, r9
 80163b4:	4604      	mov	r4, r0
 80163b6:	f8da 0004 	ldr.w	r0, [sl, #4]
 80163ba:	4617      	mov	r7, r2
 80163bc:	460d      	mov	r5, r1
 80163be:	461e      	mov	r6, r3
 80163c0:	f7ff fe88 	bl	80160d4 <_ZN8touchgfx8ceil28_4El>
 80163c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80163c6:	6160      	str	r0, [r4, #20]
 80163c8:	fb08 f803 	mul.w	r8, r8, r3
 80163cc:	eb07 0b08 	add.w	fp, r7, r8
 80163d0:	9001      	str	r0, [sp, #4]
 80163d2:	f8db 0004 	ldr.w	r0, [fp, #4]
 80163d6:	f7ff fe7d 	bl	80160d4 <_ZN8touchgfx8ceil28_4El>
 80163da:	9a01      	ldr	r2, [sp, #4]
 80163dc:	1a80      	subs	r0, r0, r2
 80163de:	61a0      	str	r0, [r4, #24]
 80163e0:	2800      	cmp	r0, #0
 80163e2:	f000 8088 	beq.w	80164f6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 80163e6:	f857 3009 	ldr.w	r3, [r7, r9]
 80163ea:	f857 c008 	ldr.w	ip, [r7, r8]
 80163ee:	f8da 1004 	ldr.w	r1, [sl, #4]
 80163f2:	f8db 0004 	ldr.w	r0, [fp, #4]
 80163f6:	ebac 0c03 	sub.w	ip, ip, r3
 80163fa:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 80163fe:	fb0b f202 	mul.w	r2, fp, r2
 8016402:	fb0c 2211 	mls	r2, ip, r1, r2
 8016406:	1a40      	subs	r0, r0, r1
 8016408:	ea4f 1800 	mov.w	r8, r0, lsl #4
 801640c:	fb00 2003 	mla	r0, r0, r3, r2
 8016410:	3801      	subs	r0, #1
 8016412:	f104 0310 	add.w	r3, r4, #16
 8016416:	4622      	mov	r2, r4
 8016418:	4641      	mov	r1, r8
 801641a:	4440      	add	r0, r8
 801641c:	f7ff fe6a 	bl	80160f4 <_ZN8touchgfx11floorDivModEllRlS0_>
 8016420:	f104 0308 	add.w	r3, r4, #8
 8016424:	1d22      	adds	r2, r4, #4
 8016426:	4641      	mov	r1, r8
 8016428:	4658      	mov	r0, fp
 801642a:	f7ff fe63 	bl	80160f4 <_ZN8touchgfx11floorDivModEllRlS0_>
 801642e:	f8c4 800c 	str.w	r8, [r4, #12]
 8016432:	f8da 3004 	ldr.w	r3, [sl, #4]
 8016436:	6962      	ldr	r2, [r4, #20]
 8016438:	eddf 6a31 	vldr	s13, [pc, #196]	; 8016500 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801643c:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8016440:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8016444:	ee07 3a10 	vmov	s14, r3
 8016448:	6822      	ldr	r2, [r4, #0]
 801644a:	f857 3009 	ldr.w	r3, [r7, r9]
 801644e:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8016452:	ee07 3a90 	vmov	s15, r3
 8016456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801645a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801645e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8016462:	ee27 7a26 	vmul.f32	s14, s14, s13
 8016466:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801646a:	edd3 6a00 	vldr	s13, [r3]
 801646e:	eee6 6a07 	vfma.f32	s13, s12, s14
 8016472:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8016476:	eee6 6a27 	vfma.f32	s13, s12, s15
 801647a:	edc4 6a07 	vstr	s13, [r4, #28]
 801647e:	edd4 6a01 	vldr	s13, [r4, #4]
 8016482:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 8016486:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801648a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801648e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016492:	ed84 6a08 	vstr	s12, [r4, #32]
 8016496:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8016498:	6262      	str	r2, [r4, #36]	; 0x24
 801649a:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 801649e:	ed93 6a03 	vldr	s12, [r3, #12]
 80164a2:	eea5 6a87 	vfma.f32	s12, s11, s14
 80164a6:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 80164aa:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80164ae:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 80164b2:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 80164b6:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 80164ba:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80164be:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 80164c2:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 80164c4:	6322      	str	r2, [r4, #48]	; 0x30
 80164c6:	ed93 6a06 	vldr	s12, [r3, #24]
 80164ca:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 80164ce:	eea5 6a87 	vfma.f32	s12, s11, s14
 80164d2:	eeb0 7a46 	vmov.f32	s14, s12
 80164d6:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 80164da:	eea6 7a27 	vfma.f32	s14, s12, s15
 80164de:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 80164e2:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 80164e6:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 80164ea:	eee6 7a87 	vfma.f32	s15, s13, s14
 80164ee:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 80164f2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80164f4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80164f6:	4620      	mov	r0, r4
 80164f8:	b003      	add	sp, #12
 80164fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164fe:	bf00      	nop
 8016500:	3d800000 	.word	0x3d800000

08016504 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8016504:	4602      	mov	r2, r0
 8016506:	b148      	cbz	r0, 801651c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8016508:	2300      	movs	r3, #0
 801650a:	b298      	uxth	r0, r3
 801650c:	3301      	adds	r3, #1
 801650e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8016512:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8016516:	2900      	cmp	r1, #0
 8016518:	d1f7      	bne.n	801650a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801651a:	4770      	bx	lr
 801651c:	4770      	bx	lr

0801651e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801651e:	b530      	push	{r4, r5, lr}
 8016520:	4604      	mov	r4, r0
 8016522:	b159      	cbz	r1, 801653c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8016524:	b148      	cbz	r0, 801653a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016526:	2300      	movs	r3, #0
 8016528:	b298      	uxth	r0, r3
 801652a:	4282      	cmp	r2, r0
 801652c:	d905      	bls.n	801653a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801652e:	5ccd      	ldrb	r5, [r1, r3]
 8016530:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8016534:	3301      	adds	r3, #1
 8016536:	2d00      	cmp	r5, #0
 8016538:	d1f6      	bne.n	8016528 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801653a:	bd30      	pop	{r4, r5, pc}
 801653c:	4608      	mov	r0, r1
 801653e:	e7fc      	b.n	801653a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08016540 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8016540:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016542:	b08b      	sub	sp, #44	; 0x2c
 8016544:	468c      	mov	ip, r1
 8016546:	2100      	movs	r1, #0
 8016548:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801654c:	ae01      	add	r6, sp, #4
 801654e:	211f      	movs	r1, #31
 8016550:	fbb0 f7f3 	udiv	r7, r0, r3
 8016554:	fb03 0517 	mls	r5, r3, r7, r0
 8016558:	b2ec      	uxtb	r4, r5
 801655a:	2d09      	cmp	r5, #9
 801655c:	bfd4      	ite	le
 801655e:	3430      	addle	r4, #48	; 0x30
 8016560:	3457      	addgt	r4, #87	; 0x57
 8016562:	b2e4      	uxtb	r4, r4
 8016564:	558c      	strb	r4, [r1, r6]
 8016566:	4638      	mov	r0, r7
 8016568:	1e4c      	subs	r4, r1, #1
 801656a:	b92f      	cbnz	r7, 8016578 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801656c:	4431      	add	r1, r6
 801656e:	4660      	mov	r0, ip
 8016570:	f7ff ffd5 	bl	801651e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016574:	b00b      	add	sp, #44	; 0x2c
 8016576:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016578:	4621      	mov	r1, r4
 801657a:	e7e9      	b.n	8016550 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801657c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801657c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801657e:	4607      	mov	r7, r0
 8016580:	b08b      	sub	sp, #44	; 0x2c
 8016582:	4608      	mov	r0, r1
 8016584:	b341      	cbz	r1, 80165d8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8016586:	1e99      	subs	r1, r3, #2
 8016588:	2922      	cmp	r1, #34	; 0x22
 801658a:	d825      	bhi.n	80165d8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801658c:	2100      	movs	r1, #0
 801658e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8016592:	463c      	mov	r4, r7
 8016594:	261f      	movs	r6, #31
 8016596:	f10d 0c04 	add.w	ip, sp, #4
 801659a:	fb94 fef3 	sdiv	lr, r4, r3
 801659e:	fb03 441e 	mls	r4, r3, lr, r4
 80165a2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80165a6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80165aa:	b2ec      	uxtb	r4, r5
 80165ac:	2d09      	cmp	r5, #9
 80165ae:	bfd4      	ite	le
 80165b0:	3430      	addle	r4, #48	; 0x30
 80165b2:	3457      	addgt	r4, #87	; 0x57
 80165b4:	b2e4      	uxtb	r4, r4
 80165b6:	f80c 4006 	strb.w	r4, [ip, r6]
 80165ba:	4674      	mov	r4, lr
 80165bc:	1e71      	subs	r1, r6, #1
 80165be:	b96c      	cbnz	r4, 80165dc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80165c0:	2f00      	cmp	r7, #0
 80165c2:	da05      	bge.n	80165d0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80165c4:	ab0a      	add	r3, sp, #40	; 0x28
 80165c6:	4419      	add	r1, r3
 80165c8:	232d      	movs	r3, #45	; 0x2d
 80165ca:	f801 3c24 	strb.w	r3, [r1, #-36]
 80165ce:	1eb1      	subs	r1, r6, #2
 80165d0:	3101      	adds	r1, #1
 80165d2:	4461      	add	r1, ip
 80165d4:	f7ff ffa3 	bl	801651e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80165d8:	b00b      	add	sp, #44	; 0x2c
 80165da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80165dc:	460e      	mov	r6, r1
 80165de:	e7dc      	b.n	801659a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080165e0 <_ZN8touchgfx7Unicode4atoiEPKt>:
 80165e0:	b510      	push	{r4, lr}
 80165e2:	b158      	cbz	r0, 80165fc <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 80165e4:	1e82      	subs	r2, r0, #2
 80165e6:	210a      	movs	r1, #10
 80165e8:	2000      	movs	r0, #0
 80165ea:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80165ee:	3b30      	subs	r3, #48	; 0x30
 80165f0:	b29c      	uxth	r4, r3
 80165f2:	2c09      	cmp	r4, #9
 80165f4:	d802      	bhi.n	80165fc <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 80165f6:	fb01 3000 	mla	r0, r1, r0, r3
 80165fa:	e7f6      	b.n	80165ea <_ZN8touchgfx7Unicode4atoiEPKt+0xa>
 80165fc:	bd10      	pop	{r4, pc}

080165fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80165fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016602:	4691      	mov	r9, r2
 8016604:	b085      	sub	sp, #20
 8016606:	6802      	ldr	r2, [r0, #0]
 8016608:	9201      	str	r2, [sp, #4]
 801660a:	4688      	mov	r8, r1
 801660c:	4683      	mov	fp, r0
 801660e:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8016612:	9103      	str	r1, [sp, #12]
 8016614:	4610      	mov	r0, r2
 8016616:	461c      	mov	r4, r3
 8016618:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801661c:	9302      	str	r3, [sp, #8]
 801661e:	f7ff ff71 	bl	8016504 <_ZN8touchgfx7Unicode6strlenEPKt>
 8016622:	f1b8 0f00 	cmp.w	r8, #0
 8016626:	bf0c      	ite	eq
 8016628:	4684      	moveq	ip, r0
 801662a:	f100 0c01 	addne.w	ip, r0, #1
 801662e:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8016632:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8016636:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016638:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801663a:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801663e:	9903      	ldr	r1, [sp, #12]
 8016640:	fa1f fc8c 	uxth.w	ip, ip
 8016644:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8016648:	d041      	beq.n	80166ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801664a:	d834      	bhi.n	80166b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801664c:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8016650:	d059      	beq.n	8016706 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8016652:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8016656:	d03a      	beq.n	80166ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016658:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801665c:	d034      	beq.n	80166c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801665e:	2400      	movs	r4, #0
 8016660:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8016664:	3a01      	subs	r2, #1
 8016666:	b169      	cbz	r1, 8016684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016668:	9911      	ldr	r1, [sp, #68]	; 0x44
 801666a:	458c      	cmp	ip, r1
 801666c:	da09      	bge.n	8016682 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801666e:	eba1 010c 	sub.w	r1, r1, ip
 8016672:	b289      	uxth	r1, r1
 8016674:	b933      	cbnz	r3, 8016684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016676:	2e00      	cmp	r6, #0
 8016678:	d051      	beq.n	801671e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801667a:	2800      	cmp	r0, #0
 801667c:	d04f      	beq.n	801671e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801667e:	440c      	add	r4, r1
 8016680:	b2a4      	uxth	r4, r4
 8016682:	2100      	movs	r1, #0
 8016684:	682b      	ldr	r3, [r5, #0]
 8016686:	4293      	cmp	r3, r2
 8016688:	da07      	bge.n	801669a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801668a:	f1b8 0f00 	cmp.w	r8, #0
 801668e:	d004      	beq.n	801669a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016690:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8016694:	682b      	ldr	r3, [r5, #0]
 8016696:	3301      	adds	r3, #1
 8016698:	602b      	str	r3, [r5, #0]
 801669a:	2730      	movs	r7, #48	; 0x30
 801669c:	2c00      	cmp	r4, #0
 801669e:	d04e      	beq.n	801673e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80166a0:	682e      	ldr	r6, [r5, #0]
 80166a2:	3c01      	subs	r4, #1
 80166a4:	42b2      	cmp	r2, r6
 80166a6:	b2a4      	uxth	r4, r4
 80166a8:	dd49      	ble.n	801673e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80166aa:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80166ae:	682b      	ldr	r3, [r5, #0]
 80166b0:	3301      	adds	r3, #1
 80166b2:	602b      	str	r3, [r5, #0]
 80166b4:	e7f2      	b.n	801669c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80166b6:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80166ba:	d01d      	beq.n	80166f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80166bc:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80166c0:	d002      	beq.n	80166c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80166c2:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80166c6:	e7c9      	b.n	801665c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80166c8:	4684      	mov	ip, r0
 80166ca:	f04f 0800 	mov.w	r8, #0
 80166ce:	2c00      	cmp	r4, #0
 80166d0:	d0c6      	beq.n	8016660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80166d2:	b947      	cbnz	r7, 80166e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80166d4:	2801      	cmp	r0, #1
 80166d6:	d106      	bne.n	80166e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80166d8:	8814      	ldrh	r4, [r2, #0]
 80166da:	2c30      	cmp	r4, #48	; 0x30
 80166dc:	bf02      	ittt	eq
 80166de:	3202      	addeq	r2, #2
 80166e0:	f8cb 2000 	streq.w	r2, [fp]
 80166e4:	4638      	moveq	r0, r7
 80166e6:	45bc      	cmp	ip, r7
 80166e8:	da14      	bge.n	8016714 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80166ea:	b2bf      	uxth	r7, r7
 80166ec:	eba7 040c 	sub.w	r4, r7, ip
 80166f0:	b2a4      	uxth	r4, r4
 80166f2:	46bc      	mov	ip, r7
 80166f4:	2600      	movs	r6, #0
 80166f6:	e7b3      	b.n	8016660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80166f8:	4684      	mov	ip, r0
 80166fa:	b16c      	cbz	r4, 8016718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80166fc:	42b8      	cmp	r0, r7
 80166fe:	dd00      	ble.n	8016702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8016700:	b2b8      	uxth	r0, r7
 8016702:	2400      	movs	r4, #0
 8016704:	e003      	b.n	801670e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016706:	f04f 0c01 	mov.w	ip, #1
 801670a:	2400      	movs	r4, #0
 801670c:	4660      	mov	r0, ip
 801670e:	4626      	mov	r6, r4
 8016710:	46a0      	mov	r8, r4
 8016712:	e7a5      	b.n	8016660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016714:	2400      	movs	r4, #0
 8016716:	e7ed      	b.n	80166f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8016718:	4626      	mov	r6, r4
 801671a:	46a0      	mov	r8, r4
 801671c:	e7a0      	b.n	8016660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801671e:	2900      	cmp	r1, #0
 8016720:	d0b0      	beq.n	8016684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016722:	2720      	movs	r7, #32
 8016724:	682e      	ldr	r6, [r5, #0]
 8016726:	2900      	cmp	r1, #0
 8016728:	d0ac      	beq.n	8016684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801672a:	3901      	subs	r1, #1
 801672c:	4296      	cmp	r6, r2
 801672e:	b289      	uxth	r1, r1
 8016730:	daa7      	bge.n	8016682 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016732:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016736:	682b      	ldr	r3, [r5, #0]
 8016738:	3301      	adds	r3, #1
 801673a:	602b      	str	r3, [r5, #0]
 801673c:	e7f2      	b.n	8016724 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801673e:	b188      	cbz	r0, 8016764 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016740:	682b      	ldr	r3, [r5, #0]
 8016742:	3801      	subs	r0, #1
 8016744:	429a      	cmp	r2, r3
 8016746:	b280      	uxth	r0, r0
 8016748:	dd0c      	ble.n	8016764 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801674a:	f8db 3000 	ldr.w	r3, [fp]
 801674e:	1c9c      	adds	r4, r3, #2
 8016750:	f8cb 4000 	str.w	r4, [fp]
 8016754:	881c      	ldrh	r4, [r3, #0]
 8016756:	682b      	ldr	r3, [r5, #0]
 8016758:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801675c:	682b      	ldr	r3, [r5, #0]
 801675e:	3301      	adds	r3, #1
 8016760:	602b      	str	r3, [r5, #0]
 8016762:	e7ec      	b.n	801673e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016764:	2620      	movs	r6, #32
 8016766:	b151      	cbz	r1, 801677e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016768:	6828      	ldr	r0, [r5, #0]
 801676a:	3901      	subs	r1, #1
 801676c:	4282      	cmp	r2, r0
 801676e:	b289      	uxth	r1, r1
 8016770:	dd05      	ble.n	801677e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016772:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016776:	682b      	ldr	r3, [r5, #0]
 8016778:	3301      	adds	r3, #1
 801677a:	602b      	str	r3, [r5, #0]
 801677c:	e7f3      	b.n	8016766 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801677e:	b005      	add	sp, #20
 8016780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016784 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016788:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801678c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8016790:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8016794:	2400      	movs	r4, #0
 8016796:	8014      	strh	r4, [r2, #0]
 8016798:	701c      	strb	r4, [r3, #0]
 801679a:	f888 4000 	strb.w	r4, [r8]
 801679e:	f88c 4000 	strb.w	r4, [ip]
 80167a2:	f88e 4000 	strb.w	r4, [lr]
 80167a6:	703c      	strb	r4, [r7, #0]
 80167a8:	6804      	ldr	r4, [r0, #0]
 80167aa:	b1a4      	cbz	r4, 80167d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80167ac:	8824      	ldrh	r4, [r4, #0]
 80167ae:	f04f 0901 	mov.w	r9, #1
 80167b2:	b314      	cbz	r4, 80167fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80167b4:	2c2b      	cmp	r4, #43	; 0x2b
 80167b6:	d001      	beq.n	80167bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80167b8:	2c20      	cmp	r4, #32
 80167ba:	d110      	bne.n	80167de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80167bc:	8014      	strh	r4, [r2, #0]
 80167be:	6804      	ldr	r4, [r0, #0]
 80167c0:	b10c      	cbz	r4, 80167c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80167c2:	3402      	adds	r4, #2
 80167c4:	6004      	str	r4, [r0, #0]
 80167c6:	680c      	ldr	r4, [r1, #0]
 80167c8:	b10c      	cbz	r4, 80167ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80167ca:	3401      	adds	r4, #1
 80167cc:	600c      	str	r4, [r1, #0]
 80167ce:	6804      	ldr	r4, [r0, #0]
 80167d0:	b17c      	cbz	r4, 80167f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80167d2:	8824      	ldrh	r4, [r4, #0]
 80167d4:	e7ed      	b.n	80167b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80167d6:	680c      	ldr	r4, [r1, #0]
 80167d8:	b17c      	cbz	r4, 80167fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80167da:	7824      	ldrb	r4, [r4, #0]
 80167dc:	e7e7      	b.n	80167ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80167de:	2c2d      	cmp	r4, #45	; 0x2d
 80167e0:	d102      	bne.n	80167e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80167e2:	f883 9000 	strb.w	r9, [r3]
 80167e6:	e7ea      	b.n	80167be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80167e8:	2c23      	cmp	r4, #35	; 0x23
 80167ea:	d107      	bne.n	80167fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80167ec:	f888 9000 	strb.w	r9, [r8]
 80167f0:	e7e5      	b.n	80167be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80167f2:	680c      	ldr	r4, [r1, #0]
 80167f4:	b10c      	cbz	r4, 80167fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80167f6:	7824      	ldrb	r4, [r4, #0]
 80167f8:	e7db      	b.n	80167b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80167fa:	2400      	movs	r4, #0
 80167fc:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8016800:	2b09      	cmp	r3, #9
 8016802:	d901      	bls.n	8016808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016804:	2c2a      	cmp	r4, #42	; 0x2a
 8016806:	d122      	bne.n	801684e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016808:	2301      	movs	r3, #1
 801680a:	2c30      	cmp	r4, #48	; 0x30
 801680c:	f88e 3000 	strb.w	r3, [lr]
 8016810:	d10d      	bne.n	801682e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016812:	f88c 3000 	strb.w	r3, [ip]
 8016816:	6803      	ldr	r3, [r0, #0]
 8016818:	b10b      	cbz	r3, 801681e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801681a:	3302      	adds	r3, #2
 801681c:	6003      	str	r3, [r0, #0]
 801681e:	680b      	ldr	r3, [r1, #0]
 8016820:	b10b      	cbz	r3, 8016826 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8016822:	3301      	adds	r3, #1
 8016824:	600b      	str	r3, [r1, #0]
 8016826:	6803      	ldr	r3, [r0, #0]
 8016828:	2b00      	cmp	r3, #0
 801682a:	d02f      	beq.n	801688c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801682c:	881c      	ldrh	r4, [r3, #0]
 801682e:	2c2a      	cmp	r4, #42	; 0x2a
 8016830:	d135      	bne.n	801689e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016832:	f04f 33ff 	mov.w	r3, #4294967295
 8016836:	6033      	str	r3, [r6, #0]
 8016838:	6803      	ldr	r3, [r0, #0]
 801683a:	b10b      	cbz	r3, 8016840 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801683c:	3302      	adds	r3, #2
 801683e:	6003      	str	r3, [r0, #0]
 8016840:	680b      	ldr	r3, [r1, #0]
 8016842:	b10b      	cbz	r3, 8016848 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8016844:	3301      	adds	r3, #1
 8016846:	600b      	str	r3, [r1, #0]
 8016848:	6803      	ldr	r3, [r0, #0]
 801684a:	b31b      	cbz	r3, 8016894 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801684c:	881c      	ldrh	r4, [r3, #0]
 801684e:	2c2e      	cmp	r4, #46	; 0x2e
 8016850:	d11a      	bne.n	8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016852:	2301      	movs	r3, #1
 8016854:	703b      	strb	r3, [r7, #0]
 8016856:	6803      	ldr	r3, [r0, #0]
 8016858:	b10b      	cbz	r3, 801685e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801685a:	3302      	adds	r3, #2
 801685c:	6003      	str	r3, [r0, #0]
 801685e:	680b      	ldr	r3, [r1, #0]
 8016860:	b10b      	cbz	r3, 8016866 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8016862:	3301      	adds	r3, #1
 8016864:	600b      	str	r3, [r1, #0]
 8016866:	6803      	ldr	r3, [r0, #0]
 8016868:	2b00      	cmp	r3, #0
 801686a:	d036      	beq.n	80168da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801686c:	881b      	ldrh	r3, [r3, #0]
 801686e:	2b2a      	cmp	r3, #42	; 0x2a
 8016870:	d137      	bne.n	80168e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016872:	f04f 33ff 	mov.w	r3, #4294967295
 8016876:	602b      	str	r3, [r5, #0]
 8016878:	6803      	ldr	r3, [r0, #0]
 801687a:	b10b      	cbz	r3, 8016880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801687c:	3302      	adds	r3, #2
 801687e:	6003      	str	r3, [r0, #0]
 8016880:	680b      	ldr	r3, [r1, #0]
 8016882:	b10b      	cbz	r3, 8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016884:	3301      	adds	r3, #1
 8016886:	600b      	str	r3, [r1, #0]
 8016888:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801688c:	680c      	ldr	r4, [r1, #0]
 801688e:	b134      	cbz	r4, 801689e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016890:	7824      	ldrb	r4, [r4, #0]
 8016892:	e7cc      	b.n	801682e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016894:	680b      	ldr	r3, [r1, #0]
 8016896:	2b00      	cmp	r3, #0
 8016898:	d0f6      	beq.n	8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801689a:	781c      	ldrb	r4, [r3, #0]
 801689c:	e7d7      	b.n	801684e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801689e:	2300      	movs	r3, #0
 80168a0:	6033      	str	r3, [r6, #0]
 80168a2:	220a      	movs	r2, #10
 80168a4:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80168a8:	fa1f f38c 	uxth.w	r3, ip
 80168ac:	2b09      	cmp	r3, #9
 80168ae:	d8ce      	bhi.n	801684e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80168b0:	6833      	ldr	r3, [r6, #0]
 80168b2:	fb02 c303 	mla	r3, r2, r3, ip
 80168b6:	6033      	str	r3, [r6, #0]
 80168b8:	6803      	ldr	r3, [r0, #0]
 80168ba:	b10b      	cbz	r3, 80168c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80168bc:	3302      	adds	r3, #2
 80168be:	6003      	str	r3, [r0, #0]
 80168c0:	680b      	ldr	r3, [r1, #0]
 80168c2:	b10b      	cbz	r3, 80168c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80168c4:	3301      	adds	r3, #1
 80168c6:	600b      	str	r3, [r1, #0]
 80168c8:	6803      	ldr	r3, [r0, #0]
 80168ca:	b10b      	cbz	r3, 80168d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80168cc:	881c      	ldrh	r4, [r3, #0]
 80168ce:	e7e9      	b.n	80168a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80168d0:	680c      	ldr	r4, [r1, #0]
 80168d2:	2c00      	cmp	r4, #0
 80168d4:	d0e6      	beq.n	80168a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80168d6:	7824      	ldrb	r4, [r4, #0]
 80168d8:	e7e4      	b.n	80168a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80168da:	680b      	ldr	r3, [r1, #0]
 80168dc:	b10b      	cbz	r3, 80168e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80168de:	781b      	ldrb	r3, [r3, #0]
 80168e0:	e7c5      	b.n	801686e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80168e2:	2200      	movs	r2, #0
 80168e4:	602a      	str	r2, [r5, #0]
 80168e6:	240a      	movs	r4, #10
 80168e8:	3b30      	subs	r3, #48	; 0x30
 80168ea:	b29e      	uxth	r6, r3
 80168ec:	2e09      	cmp	r6, #9
 80168ee:	682a      	ldr	r2, [r5, #0]
 80168f0:	d813      	bhi.n	801691a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80168f2:	fb04 3302 	mla	r3, r4, r2, r3
 80168f6:	602b      	str	r3, [r5, #0]
 80168f8:	6803      	ldr	r3, [r0, #0]
 80168fa:	b10b      	cbz	r3, 8016900 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80168fc:	3302      	adds	r3, #2
 80168fe:	6003      	str	r3, [r0, #0]
 8016900:	680b      	ldr	r3, [r1, #0]
 8016902:	b10b      	cbz	r3, 8016908 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016904:	3301      	adds	r3, #1
 8016906:	600b      	str	r3, [r1, #0]
 8016908:	6803      	ldr	r3, [r0, #0]
 801690a:	b10b      	cbz	r3, 8016910 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801690c:	881b      	ldrh	r3, [r3, #0]
 801690e:	e7eb      	b.n	80168e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016910:	680b      	ldr	r3, [r1, #0]
 8016912:	2b00      	cmp	r3, #0
 8016914:	d0e8      	beq.n	80168e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016916:	781b      	ldrb	r3, [r3, #0]
 8016918:	e7e6      	b.n	80168e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801691a:	2a06      	cmp	r2, #6
 801691c:	bfa8      	it	ge
 801691e:	2206      	movge	r2, #6
 8016920:	602a      	str	r2, [r5, #0]
 8016922:	e7b1      	b.n	8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08016924 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8016924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016928:	b0a3      	sub	sp, #140	; 0x8c
 801692a:	2600      	movs	r6, #0
 801692c:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8016930:	4607      	mov	r7, r0
 8016932:	4688      	mov	r8, r1
 8016934:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016938:	4631      	mov	r1, r6
 801693a:	2242      	movs	r2, #66	; 0x42
 801693c:	4648      	mov	r0, r9
 801693e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8016940:	960d      	str	r6, [sp, #52]	; 0x34
 8016942:	f00c fd87 	bl	8023454 <memset>
 8016946:	b15f      	cbz	r7, 8016960 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8016948:	f108 3aff 	add.w	sl, r8, #4294967295
 801694c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801694e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016950:	b152      	cbz	r2, 8016968 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8016952:	8812      	ldrh	r2, [r2, #0]
 8016954:	b10a      	cbz	r2, 801695a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016956:	459a      	cmp	sl, r3
 8016958:	dc2e      	bgt.n	80169b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801695a:	2200      	movs	r2, #0
 801695c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016960:	4638      	mov	r0, r7
 8016962:	b023      	add	sp, #140	; 0x8c
 8016964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016968:	9a08      	ldr	r2, [sp, #32]
 801696a:	2a00      	cmp	r2, #0
 801696c:	d0f5      	beq.n	801695a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801696e:	7812      	ldrb	r2, [r2, #0]
 8016970:	e7f0      	b.n	8016954 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016972:	2d00      	cmp	r5, #0
 8016974:	d0ea      	beq.n	801694c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016976:	782a      	ldrb	r2, [r5, #0]
 8016978:	b142      	cbz	r2, 801698c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801697a:	2a25      	cmp	r2, #37	; 0x25
 801697c:	d001      	beq.n	8016982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801697e:	459a      	cmp	sl, r3
 8016980:	dc08      	bgt.n	8016994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016982:	f1bb 0f00 	cmp.w	fp, #0
 8016986:	d121      	bne.n	80169cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016988:	2d00      	cmp	r5, #0
 801698a:	d0df      	beq.n	801694c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801698c:	782a      	ldrb	r2, [r5, #0]
 801698e:	f04f 0b00 	mov.w	fp, #0
 8016992:	e01d      	b.n	80169d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016994:	f1bb 0f00 	cmp.w	fp, #0
 8016998:	d078      	beq.n	8016a8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801699a:	f8bb 2000 	ldrh.w	r2, [fp]
 801699e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80169a2:	f1bb 0f00 	cmp.w	fp, #0
 80169a6:	d002      	beq.n	80169ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80169a8:	f10b 0202 	add.w	r2, fp, #2
 80169ac:	9209      	str	r2, [sp, #36]	; 0x24
 80169ae:	b10d      	cbz	r5, 80169b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80169b0:	3501      	adds	r5, #1
 80169b2:	9508      	str	r5, [sp, #32]
 80169b4:	3301      	adds	r3, #1
 80169b6:	930d      	str	r3, [sp, #52]	; 0x34
 80169b8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80169bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80169be:	f1bb 0f00 	cmp.w	fp, #0
 80169c2:	d0d6      	beq.n	8016972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80169c4:	f8bb 2000 	ldrh.w	r2, [fp]
 80169c8:	2a00      	cmp	r2, #0
 80169ca:	d1d6      	bne.n	801697a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80169cc:	f8bb 2000 	ldrh.w	r2, [fp]
 80169d0:	2a00      	cmp	r2, #0
 80169d2:	d0bb      	beq.n	801694c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80169d4:	459a      	cmp	sl, r3
 80169d6:	ddb9      	ble.n	801694c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80169d8:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80169dc:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80169e0:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80169e4:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80169e8:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80169ec:	960e      	str	r6, [sp, #56]	; 0x38
 80169ee:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80169f2:	960f      	str	r6, [sp, #60]	; 0x3c
 80169f4:	f1bb 0f00 	cmp.w	fp, #0
 80169f8:	d002      	beq.n	8016a00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80169fa:	f10b 0302 	add.w	r3, fp, #2
 80169fe:	9309      	str	r3, [sp, #36]	; 0x24
 8016a00:	b10d      	cbz	r5, 8016a06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016a02:	1c6b      	adds	r3, r5, #1
 8016a04:	9308      	str	r3, [sp, #32]
 8016a06:	ab0f      	add	r3, sp, #60	; 0x3c
 8016a08:	9305      	str	r3, [sp, #20]
 8016a0a:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8016a0e:	9304      	str	r3, [sp, #16]
 8016a10:	ab0e      	add	r3, sp, #56	; 0x38
 8016a12:	9303      	str	r3, [sp, #12]
 8016a14:	ab0c      	add	r3, sp, #48	; 0x30
 8016a16:	9302      	str	r3, [sp, #8]
 8016a18:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8016a1c:	9301      	str	r3, [sp, #4]
 8016a1e:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8016a22:	9300      	str	r3, [sp, #0]
 8016a24:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8016a28:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8016a2c:	a908      	add	r1, sp, #32
 8016a2e:	a809      	add	r0, sp, #36	; 0x24
 8016a30:	f7ff fea8 	bl	8016784 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016a34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a36:	2b00      	cmp	r3, #0
 8016a38:	bfbe      	ittt	lt
 8016a3a:	6823      	ldrlt	r3, [r4, #0]
 8016a3c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016a40:	930e      	strlt	r3, [sp, #56]	; 0x38
 8016a42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a44:	bfb8      	it	lt
 8016a46:	3404      	addlt	r4, #4
 8016a48:	2b00      	cmp	r3, #0
 8016a4a:	bfb8      	it	lt
 8016a4c:	6823      	ldrlt	r3, [r4, #0]
 8016a4e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016a52:	bfbe      	ittt	lt
 8016a54:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016a58:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8016a5a:	3404      	addlt	r4, #4
 8016a5c:	b1d9      	cbz	r1, 8016a96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8016a5e:	880b      	ldrh	r3, [r1, #0]
 8016a60:	2b69      	cmp	r3, #105	; 0x69
 8016a62:	d01f      	beq.n	8016aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016a64:	d82f      	bhi.n	8016ac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8016a66:	2b58      	cmp	r3, #88	; 0x58
 8016a68:	d01c      	beq.n	8016aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016a6a:	d818      	bhi.n	8016a9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8016a6c:	2b25      	cmp	r3, #37	; 0x25
 8016a6e:	d034      	beq.n	8016ada <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8016a70:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8016a74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016a76:	f1bb 0f00 	cmp.w	fp, #0
 8016a7a:	f000 80b8 	beq.w	8016bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8016a7e:	f8bb 5000 	ldrh.w	r5, [fp]
 8016a82:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8016a86:	3301      	adds	r3, #1
 8016a88:	930d      	str	r3, [sp, #52]	; 0x34
 8016a8a:	e029      	b.n	8016ae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016a8c:	b10d      	cbz	r5, 8016a92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8016a8e:	782a      	ldrb	r2, [r5, #0]
 8016a90:	e785      	b.n	801699e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016a92:	462a      	mov	r2, r5
 8016a94:	e783      	b.n	801699e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016a96:	2a00      	cmp	r2, #0
 8016a98:	d0ea      	beq.n	8016a70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016a9a:	7813      	ldrb	r3, [r2, #0]
 8016a9c:	e7e0      	b.n	8016a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8016a9e:	3b63      	subs	r3, #99	; 0x63
 8016aa0:	2b01      	cmp	r3, #1
 8016aa2:	d8e5      	bhi.n	8016a70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016aa4:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8016aa8:	b329      	cbz	r1, 8016af6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8016aaa:	880b      	ldrh	r3, [r1, #0]
 8016aac:	2b69      	cmp	r3, #105	; 0x69
 8016aae:	d063      	beq.n	8016b78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016ab0:	d825      	bhi.n	8016afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8016ab2:	2b63      	cmp	r3, #99	; 0x63
 8016ab4:	d038      	beq.n	8016b28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8016ab6:	2b64      	cmp	r3, #100	; 0x64
 8016ab8:	d05e      	beq.n	8016b78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016aba:	2b58      	cmp	r3, #88	; 0x58
 8016abc:	d07b      	beq.n	8016bb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8016abe:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8016ac2:	4625      	mov	r5, r4
 8016ac4:	e036      	b.n	8016b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016ac6:	2b73      	cmp	r3, #115	; 0x73
 8016ac8:	d0ec      	beq.n	8016aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016aca:	d802      	bhi.n	8016ad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8016acc:	2b6f      	cmp	r3, #111	; 0x6f
 8016ace:	d1cf      	bne.n	8016a70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016ad0:	e7e8      	b.n	8016aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016ad2:	2b75      	cmp	r3, #117	; 0x75
 8016ad4:	d0e6      	beq.n	8016aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016ad6:	2b78      	cmp	r3, #120	; 0x78
 8016ad8:	e7f9      	b.n	8016ace <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8016ada:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016adc:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8016ae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ae2:	b10b      	cbz	r3, 8016ae8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8016ae4:	3302      	adds	r3, #2
 8016ae6:	9309      	str	r3, [sp, #36]	; 0x24
 8016ae8:	9b08      	ldr	r3, [sp, #32]
 8016aea:	2b00      	cmp	r3, #0
 8016aec:	f43f af2e 	beq.w	801694c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016af0:	3301      	adds	r3, #1
 8016af2:	9308      	str	r3, [sp, #32]
 8016af4:	e72a      	b.n	801694c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016af6:	2a00      	cmp	r2, #0
 8016af8:	d0e1      	beq.n	8016abe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016afa:	7813      	ldrb	r3, [r2, #0]
 8016afc:	e7d6      	b.n	8016aac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8016afe:	2b73      	cmp	r3, #115	; 0x73
 8016b00:	d036      	beq.n	8016b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8016b02:	d807      	bhi.n	8016b14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8016b04:	2b6f      	cmp	r3, #111	; 0x6f
 8016b06:	d1da      	bne.n	8016abe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016b08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b0a:	1d25      	adds	r5, r4, #4
 8016b0c:	eba8 0202 	sub.w	r2, r8, r2
 8016b10:	2308      	movs	r3, #8
 8016b12:	e04a      	b.n	8016baa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016b14:	2b75      	cmp	r3, #117	; 0x75
 8016b16:	d043      	beq.n	8016ba0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8016b18:	2b78      	cmp	r3, #120	; 0x78
 8016b1a:	d1d0      	bne.n	8016abe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016b1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b1e:	1d25      	adds	r5, r4, #4
 8016b20:	eba8 0202 	sub.w	r2, r8, r2
 8016b24:	2310      	movs	r3, #16
 8016b26:	e040      	b.n	8016baa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016b28:	7823      	ldrb	r3, [r4, #0]
 8016b2a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8016b2e:	1d25      	adds	r5, r4, #4
 8016b30:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8016b34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b36:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8016b3a:	2b00      	cmp	r3, #0
 8016b3c:	d052      	beq.n	8016be4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8016b3e:	881a      	ldrh	r2, [r3, #0]
 8016b40:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8016b44:	a80d      	add	r0, sp, #52	; 0x34
 8016b46:	9005      	str	r0, [sp, #20]
 8016b48:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8016b4c:	9004      	str	r0, [sp, #16]
 8016b4e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016b50:	9003      	str	r0, [sp, #12]
 8016b52:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8016b56:	9002      	str	r0, [sp, #8]
 8016b58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016b5a:	9001      	str	r0, [sp, #4]
 8016b5c:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8016b60:	9000      	str	r0, [sp, #0]
 8016b62:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8016b66:	a810      	add	r0, sp, #64	; 0x40
 8016b68:	f7ff fd49 	bl	80165fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8016b6c:	462c      	mov	r4, r5
 8016b6e:	e7b7      	b.n	8016ae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016b70:	6823      	ldr	r3, [r4, #0]
 8016b72:	1d25      	adds	r5, r4, #4
 8016b74:	9310      	str	r3, [sp, #64]	; 0x40
 8016b76:	e7dd      	b.n	8016b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016b78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b7a:	6820      	ldr	r0, [r4, #0]
 8016b7c:	eba8 0202 	sub.w	r2, r8, r2
 8016b80:	230a      	movs	r3, #10
 8016b82:	b292      	uxth	r2, r2
 8016b84:	4649      	mov	r1, r9
 8016b86:	f7ff fcf9 	bl	801657c <_ZN8touchgfx7Unicode4itoaElPtti>
 8016b8a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8016b8e:	2b2d      	cmp	r3, #45	; 0x2d
 8016b90:	f104 0504 	add.w	r5, r4, #4
 8016b94:	d1ce      	bne.n	8016b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016b96:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016b9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b9c:	3302      	adds	r3, #2
 8016b9e:	e7e9      	b.n	8016b74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8016ba0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016ba2:	1d25      	adds	r5, r4, #4
 8016ba4:	eba8 0202 	sub.w	r2, r8, r2
 8016ba8:	230a      	movs	r3, #10
 8016baa:	b292      	uxth	r2, r2
 8016bac:	4649      	mov	r1, r9
 8016bae:	6820      	ldr	r0, [r4, #0]
 8016bb0:	f7ff fcc6 	bl	8016540 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8016bb4:	e7be      	b.n	8016b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016bb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016bb8:	6820      	ldr	r0, [r4, #0]
 8016bba:	eba8 0202 	sub.w	r2, r8, r2
 8016bbe:	b292      	uxth	r2, r2
 8016bc0:	2310      	movs	r3, #16
 8016bc2:	4649      	mov	r1, r9
 8016bc4:	f7ff fcbc 	bl	8016540 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8016bc8:	1d25      	adds	r5, r4, #4
 8016bca:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8016bce:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8016bd2:	2b00      	cmp	r3, #0
 8016bd4:	d0ae      	beq.n	8016b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016bd6:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8016bda:	2919      	cmp	r1, #25
 8016bdc:	d8f7      	bhi.n	8016bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016bde:	3b20      	subs	r3, #32
 8016be0:	8013      	strh	r3, [r2, #0]
 8016be2:	e7f4      	b.n	8016bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016be4:	9a08      	ldr	r2, [sp, #32]
 8016be6:	2a00      	cmp	r2, #0
 8016be8:	d0aa      	beq.n	8016b40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016bea:	7812      	ldrb	r2, [r2, #0]
 8016bec:	e7a8      	b.n	8016b40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016bee:	2d00      	cmp	r5, #0
 8016bf0:	f43f af47 	beq.w	8016a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8016bf4:	782d      	ldrb	r5, [r5, #0]
 8016bf6:	e744      	b.n	8016a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08016bf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>:
 8016bf8:	b507      	push	{r0, r1, r2, lr}
 8016bfa:	9300      	str	r3, [sp, #0]
 8016bfc:	2300      	movs	r3, #0
 8016bfe:	f7ff fe91 	bl	8016924 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8016c02:	b003      	add	sp, #12
 8016c04:	f85d fb04 	ldr.w	pc, [sp], #4

08016c08 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>:
 8016c08:	b40c      	push	{r2, r3}
 8016c0a:	b507      	push	{r0, r1, r2, lr}
 8016c0c:	ab04      	add	r3, sp, #16
 8016c0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8016c12:	9301      	str	r3, [sp, #4]
 8016c14:	f7ff fff0 	bl	8016bf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>
 8016c18:	b003      	add	sp, #12
 8016c1a:	f85d eb04 	ldr.w	lr, [sp], #4
 8016c1e:	b002      	add	sp, #8
 8016c20:	4770      	bx	lr

08016c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8016c22:	b507      	push	{r0, r1, r2, lr}
 8016c24:	9300      	str	r3, [sp, #0]
 8016c26:	4613      	mov	r3, r2
 8016c28:	2200      	movs	r2, #0
 8016c2a:	f7ff fe7b 	bl	8016924 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8016c2e:	b003      	add	sp, #12
 8016c30:	f85d fb04 	ldr.w	pc, [sp], #4

08016c34 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8016c34:	b40c      	push	{r2, r3}
 8016c36:	b507      	push	{r0, r1, r2, lr}
 8016c38:	ab04      	add	r3, sp, #16
 8016c3a:	f853 2b04 	ldr.w	r2, [r3], #4
 8016c3e:	9301      	str	r3, [sp, #4]
 8016c40:	f7ff ffef 	bl	8016c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8016c44:	b003      	add	sp, #12
 8016c46:	f85d eb04 	ldr.w	lr, [sp], #4
 8016c4a:	b002      	add	sp, #8
 8016c4c:	4770      	bx	lr
	...

08016c50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8016c50:	4b01      	ldr	r3, [pc, #4]	; (8016c58 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8016c52:	6018      	str	r0, [r3, #0]
 8016c54:	4770      	bx	lr
 8016c56:	bf00      	nop
 8016c58:	200200ec 	.word	0x200200ec

08016c5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8016c5c:	4b06      	ldr	r3, [pc, #24]	; (8016c78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8016c5e:	881a      	ldrh	r2, [r3, #0]
 8016c60:	4282      	cmp	r2, r0
 8016c62:	d807      	bhi.n	8016c74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8016c64:	4b05      	ldr	r3, [pc, #20]	; (8016c7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8016c66:	881b      	ldrh	r3, [r3, #0]
 8016c68:	4413      	add	r3, r2
 8016c6a:	4298      	cmp	r0, r3
 8016c6c:	bfac      	ite	ge
 8016c6e:	2000      	movge	r0, #0
 8016c70:	2001      	movlt	r0, #1
 8016c72:	4770      	bx	lr
 8016c74:	2000      	movs	r0, #0
 8016c76:	4770      	bx	lr
 8016c78:	2002010c 	.word	0x2002010c
 8016c7c:	20020110 	.word	0x20020110

08016c80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8016c80:	b508      	push	{r3, lr}
 8016c82:	4601      	mov	r1, r0
 8016c84:	f7ff ffea 	bl	8016c5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8016c88:	b118      	cbz	r0, 8016c92 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8016c8a:	4b02      	ldr	r3, [pc, #8]	; (8016c94 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8016c8c:	681b      	ldr	r3, [r3, #0]
 8016c8e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8016c92:	bd08      	pop	{r3, pc}
 8016c94:	200200f0 	.word	0x200200f0

08016c98 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8016c98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c9c:	4d28      	ldr	r5, [pc, #160]	; (8016d40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8016c9e:	682b      	ldr	r3, [r5, #0]
 8016ca0:	2b00      	cmp	r3, #0
 8016ca2:	d04a      	beq.n	8016d3a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8016ca4:	4a27      	ldr	r2, [pc, #156]	; (8016d44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8016ca6:	4e28      	ldr	r6, [pc, #160]	; (8016d48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8016ca8:	8810      	ldrh	r0, [r2, #0]
 8016caa:	f8b6 8000 	ldrh.w	r8, [r6]
 8016cae:	4c27      	ldr	r4, [pc, #156]	; (8016d4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8016cb0:	4f27      	ldr	r7, [pc, #156]	; (8016d50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8016cb2:	4440      	add	r0, r8
 8016cb4:	1c41      	adds	r1, r0, #1
 8016cb6:	f021 0101 	bic.w	r1, r1, #1
 8016cba:	0409      	lsls	r1, r1, #16
 8016cbc:	0c09      	lsrs	r1, r1, #16
 8016cbe:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 8016cc2:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8016cc6:	eb03 020e 	add.w	r2, r3, lr
 8016cca:	eb0e 010c 	add.w	r1, lr, ip
 8016cce:	6022      	str	r2, [r4, #0]
 8016cd0:	185a      	adds	r2, r3, r1
 8016cd2:	603a      	str	r2, [r7, #0]
 8016cd4:	220e      	movs	r2, #14
 8016cd6:	fb02 f208 	mul.w	r2, r2, r8
 8016cda:	3203      	adds	r2, #3
 8016cdc:	f022 0203 	bic.w	r2, r2, #3
 8016ce0:	4411      	add	r1, r2
 8016ce2:	440b      	add	r3, r1
 8016ce4:	491b      	ldr	r1, [pc, #108]	; (8016d54 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8016ce6:	600b      	str	r3, [r1, #0]
 8016ce8:	491b      	ldr	r1, [pc, #108]	; (8016d58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8016cea:	2300      	movs	r3, #0
 8016cec:	800b      	strh	r3, [r1, #0]
 8016cee:	491b      	ldr	r1, [pc, #108]	; (8016d5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 8016cf0:	6809      	ldr	r1, [r1, #0]
 8016cf2:	eba1 010e 	sub.w	r1, r1, lr
 8016cf6:	eba1 010c 	sub.w	r1, r1, ip
 8016cfa:	1a8a      	subs	r2, r1, r2
 8016cfc:	4918      	ldr	r1, [pc, #96]	; (8016d60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 8016cfe:	600a      	str	r2, [r1, #0]
 8016d00:	4a18      	ldr	r2, [pc, #96]	; (8016d64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 8016d02:	469c      	mov	ip, r3
 8016d04:	8013      	strh	r3, [r2, #0]
 8016d06:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016d0a:	4283      	cmp	r3, r0
 8016d0c:	d10d      	bne.n	8016d2a <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 8016d0e:	8835      	ldrh	r5, [r6, #0]
 8016d10:	6838      	ldr	r0, [r7, #0]
 8016d12:	2300      	movs	r3, #0
 8016d14:	240e      	movs	r4, #14
 8016d16:	429d      	cmp	r5, r3
 8016d18:	d90f      	bls.n	8016d3a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8016d1a:	fb04 0203 	mla	r2, r4, r3, r0
 8016d1e:	3301      	adds	r3, #1
 8016d20:	7b11      	ldrb	r1, [r2, #12]
 8016d22:	f36f 1145 	bfc	r1, #5, #1
 8016d26:	7311      	strb	r1, [r2, #12]
 8016d28:	e7f5      	b.n	8016d16 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8016d2a:	682a      	ldr	r2, [r5, #0]
 8016d2c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8016d30:	6822      	ldr	r2, [r4, #0]
 8016d32:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8016d36:	3301      	adds	r3, #1
 8016d38:	e7e7      	b.n	8016d0a <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 8016d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016d3e:	bf00      	nop
 8016d40:	200200f0 	.word	0x200200f0
 8016d44:	2002010c 	.word	0x2002010c
 8016d48:	20020110 	.word	0x20020110
 8016d4c:	20020104 	.word	0x20020104
 8016d50:	200200f4 	.word	0x200200f4
 8016d54:	200200fc 	.word	0x200200fc
 8016d58:	2002010e 	.word	0x2002010e
 8016d5c:	200200f8 	.word	0x200200f8
 8016d60:	20020108 	.word	0x20020108
 8016d64:	20020100 	.word	0x20020100

08016d68 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8016d68:	b510      	push	{r4, lr}
 8016d6a:	4b10      	ldr	r3, [pc, #64]	; (8016dac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8016d6c:	681b      	ldr	r3, [r3, #0]
 8016d6e:	b9db      	cbnz	r3, 8016da8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8016d70:	b1d1      	cbz	r1, 8016da8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8016d72:	4b0f      	ldr	r3, [pc, #60]	; (8016db0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8016d74:	801a      	strh	r2, [r3, #0]
 8016d76:	4b0f      	ldr	r3, [pc, #60]	; (8016db4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8016d78:	881b      	ldrh	r3, [r3, #0]
 8016d7a:	b292      	uxth	r2, r2
 8016d7c:	240e      	movs	r4, #14
 8016d7e:	4413      	add	r3, r2
 8016d80:	4362      	muls	r2, r4
 8016d82:	2406      	movs	r4, #6
 8016d84:	fb04 2203 	mla	r2, r4, r3, r2
 8016d88:	428a      	cmp	r2, r1
 8016d8a:	d305      	bcc.n	8016d98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8016d8c:	4b0a      	ldr	r3, [pc, #40]	; (8016db8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8016d8e:	4a0b      	ldr	r2, [pc, #44]	; (8016dbc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8016d90:	480b      	ldr	r0, [pc, #44]	; (8016dc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8016d92:	2135      	movs	r1, #53	; 0x35
 8016d94:	f00c f8b8 	bl	8022f08 <__assert_func>
 8016d98:	4b0a      	ldr	r3, [pc, #40]	; (8016dc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8016d9a:	6019      	str	r1, [r3, #0]
 8016d9c:	4b0a      	ldr	r3, [pc, #40]	; (8016dc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8016d9e:	6018      	str	r0, [r3, #0]
 8016da0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016da4:	f7ff bf78 	b.w	8016c98 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8016da8:	bd10      	pop	{r4, pc}
 8016daa:	bf00      	nop
 8016dac:	200200fc 	.word	0x200200fc
 8016db0:	20020110 	.word	0x20020110
 8016db4:	2002010c 	.word	0x2002010c
 8016db8:	08028df6 	.word	0x08028df6
 8016dbc:	08028e4f 	.word	0x08028e4f
 8016dc0:	08028dd1 	.word	0x08028dd1
 8016dc4:	200200f8 	.word	0x200200f8
 8016dc8:	200200f0 	.word	0x200200f0

08016dcc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8016dcc:	b470      	push	{r4, r5, r6}
 8016dce:	4c07      	ldr	r4, [pc, #28]	; (8016dec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8016dd0:	6826      	ldr	r6, [r4, #0]
 8016dd2:	4605      	mov	r5, r0
 8016dd4:	4610      	mov	r0, r2
 8016dd6:	9a03      	ldr	r2, [sp, #12]
 8016dd8:	b936      	cbnz	r6, 8016de8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8016dda:	6025      	str	r5, [r4, #0]
 8016ddc:	4c04      	ldr	r4, [pc, #16]	; (8016df0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8016dde:	8021      	strh	r1, [r4, #0]
 8016de0:	bc70      	pop	{r4, r5, r6}
 8016de2:	4619      	mov	r1, r3
 8016de4:	f7ff bfc0 	b.w	8016d68 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8016de8:	bc70      	pop	{r4, r5, r6}
 8016dea:	4770      	bx	lr
 8016dec:	20020114 	.word	0x20020114
 8016df0:	2002010c 	.word	0x2002010c

08016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8016df4:	b508      	push	{r3, lr}
 8016df6:	4b14      	ldr	r3, [pc, #80]	; (8016e48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8016df8:	6819      	ldr	r1, [r3, #0]
 8016dfa:	b931      	cbnz	r1, 8016e0a <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8016dfc:	4b13      	ldr	r3, [pc, #76]	; (8016e4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8016dfe:	4a14      	ldr	r2, [pc, #80]	; (8016e50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8016e00:	4814      	ldr	r0, [pc, #80]	; (8016e54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8016e02:	f240 4185 	movw	r1, #1157	; 0x485
 8016e06:	f00c f87f 	bl	8022f08 <__assert_func>
 8016e0a:	4a13      	ldr	r2, [pc, #76]	; (8016e58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8016e0c:	8803      	ldrh	r3, [r0, #0]
 8016e0e:	8812      	ldrh	r2, [r2, #0]
 8016e10:	4293      	cmp	r3, r2
 8016e12:	d204      	bcs.n	8016e1e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8016e14:	2214      	movs	r2, #20
 8016e16:	fb02 1303 	mla	r3, r2, r3, r1
 8016e1a:	8918      	ldrh	r0, [r3, #8]
 8016e1c:	bd08      	pop	{r3, pc}
 8016e1e:	490f      	ldr	r1, [pc, #60]	; (8016e5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8016e20:	8809      	ldrh	r1, [r1, #0]
 8016e22:	4411      	add	r1, r2
 8016e24:	428b      	cmp	r3, r1
 8016e26:	da06      	bge.n	8016e36 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8016e28:	1a9b      	subs	r3, r3, r2
 8016e2a:	4a0d      	ldr	r2, [pc, #52]	; (8016e60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8016e2c:	6812      	ldr	r2, [r2, #0]
 8016e2e:	210e      	movs	r1, #14
 8016e30:	fb01 2303 	mla	r3, r1, r3, r2
 8016e34:	e7f1      	b.n	8016e1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8016e36:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8016e3a:	4293      	cmp	r3, r2
 8016e3c:	bf0a      	itet	eq
 8016e3e:	4b09      	ldreq	r3, [pc, #36]	; (8016e64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8016e40:	2000      	movne	r0, #0
 8016e42:	8818      	ldrheq	r0, [r3, #0]
 8016e44:	e7ea      	b.n	8016e1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8016e46:	bf00      	nop
 8016e48:	20020114 	.word	0x20020114
 8016e4c:	080280c4 	.word	0x080280c4
 8016e50:	08028efc 	.word	0x08028efc
 8016e54:	08028dd1 	.word	0x08028dd1
 8016e58:	2002010c 	.word	0x2002010c
 8016e5c:	20020110 	.word	0x20020110
 8016e60:	200200f4 	.word	0x200200f4
 8016e64:	20020080 	.word	0x20020080

08016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8016e68:	b508      	push	{r3, lr}
 8016e6a:	4b14      	ldr	r3, [pc, #80]	; (8016ebc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8016e6c:	6819      	ldr	r1, [r3, #0]
 8016e6e:	b931      	cbnz	r1, 8016e7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8016e70:	4b13      	ldr	r3, [pc, #76]	; (8016ec0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8016e72:	4a14      	ldr	r2, [pc, #80]	; (8016ec4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8016e74:	4814      	ldr	r0, [pc, #80]	; (8016ec8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8016e76:	f240 4199 	movw	r1, #1177	; 0x499
 8016e7a:	f00c f845 	bl	8022f08 <__assert_func>
 8016e7e:	4a13      	ldr	r2, [pc, #76]	; (8016ecc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8016e80:	8803      	ldrh	r3, [r0, #0]
 8016e82:	8812      	ldrh	r2, [r2, #0]
 8016e84:	4293      	cmp	r3, r2
 8016e86:	d204      	bcs.n	8016e92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8016e88:	2214      	movs	r2, #20
 8016e8a:	fb02 1303 	mla	r3, r2, r3, r1
 8016e8e:	8958      	ldrh	r0, [r3, #10]
 8016e90:	bd08      	pop	{r3, pc}
 8016e92:	490f      	ldr	r1, [pc, #60]	; (8016ed0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8016e94:	8809      	ldrh	r1, [r1, #0]
 8016e96:	4411      	add	r1, r2
 8016e98:	428b      	cmp	r3, r1
 8016e9a:	da06      	bge.n	8016eaa <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8016e9c:	1a9b      	subs	r3, r3, r2
 8016e9e:	4a0d      	ldr	r2, [pc, #52]	; (8016ed4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8016ea0:	6812      	ldr	r2, [r2, #0]
 8016ea2:	210e      	movs	r1, #14
 8016ea4:	fb01 2303 	mla	r3, r1, r3, r2
 8016ea8:	e7f1      	b.n	8016e8e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8016eaa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8016eae:	4293      	cmp	r3, r2
 8016eb0:	bf0a      	itet	eq
 8016eb2:	4b09      	ldreq	r3, [pc, #36]	; (8016ed8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8016eb4:	2000      	movne	r0, #0
 8016eb6:	8818      	ldrheq	r0, [r3, #0]
 8016eb8:	e7ea      	b.n	8016e90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8016eba:	bf00      	nop
 8016ebc:	20020114 	.word	0x20020114
 8016ec0:	080280c4 	.word	0x080280c4
 8016ec4:	08028f28 	.word	0x08028f28
 8016ec8:	08028dd1 	.word	0x08028dd1
 8016ecc:	2002010c 	.word	0x2002010c
 8016ed0:	20020110 	.word	0x20020110
 8016ed4:	200200f4 	.word	0x200200f4
 8016ed8:	20020082 	.word	0x20020082

08016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8016edc:	b510      	push	{r4, lr}
 8016ede:	4b23      	ldr	r3, [pc, #140]	; (8016f6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8016ee0:	681c      	ldr	r4, [r3, #0]
 8016ee2:	b934      	cbnz	r4, 8016ef2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8016ee4:	4b22      	ldr	r3, [pc, #136]	; (8016f70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8016ee6:	4a23      	ldr	r2, [pc, #140]	; (8016f74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8016ee8:	4823      	ldr	r0, [pc, #140]	; (8016f78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8016eea:	f240 41ad 	movw	r1, #1197	; 0x4ad
 8016eee:	f00c f80b 	bl	8022f08 <__assert_func>
 8016ef2:	4a22      	ldr	r2, [pc, #136]	; (8016f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8016ef4:	880b      	ldrh	r3, [r1, #0]
 8016ef6:	8812      	ldrh	r2, [r2, #0]
 8016ef8:	4293      	cmp	r3, r2
 8016efa:	d211      	bcs.n	8016f20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8016efc:	2214      	movs	r2, #20
 8016efe:	fb02 4303 	mla	r3, r2, r3, r4
 8016f02:	8a1a      	ldrh	r2, [r3, #16]
 8016f04:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8016f08:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8016f0c:	8a5b      	ldrh	r3, [r3, #18]
 8016f0e:	8004      	strh	r4, [r0, #0]
 8016f10:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016f14:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8016f18:	8041      	strh	r1, [r0, #2]
 8016f1a:	8082      	strh	r2, [r0, #4]
 8016f1c:	80c3      	strh	r3, [r0, #6]
 8016f1e:	e00e      	b.n	8016f3e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8016f20:	4917      	ldr	r1, [pc, #92]	; (8016f80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8016f22:	8809      	ldrh	r1, [r1, #0]
 8016f24:	4411      	add	r1, r2
 8016f26:	428b      	cmp	r3, r1
 8016f28:	da0a      	bge.n	8016f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8016f2a:	1a9b      	subs	r3, r3, r2
 8016f2c:	4a15      	ldr	r2, [pc, #84]	; (8016f84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8016f2e:	6812      	ldr	r2, [r2, #0]
 8016f30:	210e      	movs	r1, #14
 8016f32:	fb01 2303 	mla	r3, r1, r3, r2
 8016f36:	681a      	ldr	r2, [r3, #0]
 8016f38:	6002      	str	r2, [r0, #0]
 8016f3a:	685a      	ldr	r2, [r3, #4]
 8016f3c:	6042      	str	r2, [r0, #4]
 8016f3e:	bd10      	pop	{r4, pc}
 8016f40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8016f44:	4293      	cmp	r3, r2
 8016f46:	d10b      	bne.n	8016f60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8016f48:	4b0f      	ldr	r3, [pc, #60]	; (8016f88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8016f4a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016f4e:	4b0f      	ldr	r3, [pc, #60]	; (8016f8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8016f50:	8081      	strh	r1, [r0, #4]
 8016f52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016f56:	80c2      	strh	r2, [r0, #6]
 8016f58:	2300      	movs	r3, #0
 8016f5a:	8003      	strh	r3, [r0, #0]
 8016f5c:	8043      	strh	r3, [r0, #2]
 8016f5e:	e7ee      	b.n	8016f3e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8016f60:	2300      	movs	r3, #0
 8016f62:	8003      	strh	r3, [r0, #0]
 8016f64:	8043      	strh	r3, [r0, #2]
 8016f66:	8083      	strh	r3, [r0, #4]
 8016f68:	e7d8      	b.n	8016f1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8016f6a:	bf00      	nop
 8016f6c:	20020114 	.word	0x20020114
 8016f70:	080280c4 	.word	0x080280c4
 8016f74:	08028e95 	.word	0x08028e95
 8016f78:	08028dd1 	.word	0x08028dd1
 8016f7c:	2002010c 	.word	0x2002010c
 8016f80:	20020110 	.word	0x20020110
 8016f84:	200200f4 	.word	0x200200f4
 8016f88:	20020080 	.word	0x20020080
 8016f8c:	20020082 	.word	0x20020082

08016f90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8016f90:	4b18      	ldr	r3, [pc, #96]	; (8016ff4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8016f92:	681b      	ldr	r3, [r3, #0]
 8016f94:	b34b      	cbz	r3, 8016fea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8016f96:	4a18      	ldr	r2, [pc, #96]	; (8016ff8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8016f98:	8800      	ldrh	r0, [r0, #0]
 8016f9a:	8812      	ldrh	r2, [r2, #0]
 8016f9c:	4290      	cmp	r0, r2
 8016f9e:	d211      	bcs.n	8016fc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8016fa0:	2214      	movs	r2, #20
 8016fa2:	fb02 3300 	mla	r3, r2, r0, r3
 8016fa6:	8a1a      	ldrh	r2, [r3, #16]
 8016fa8:	8919      	ldrh	r1, [r3, #8]
 8016faa:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016fae:	428a      	cmp	r2, r1
 8016fb0:	db1d      	blt.n	8016fee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8016fb2:	8a58      	ldrh	r0, [r3, #18]
 8016fb4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8016fb8:	895b      	ldrh	r3, [r3, #10]
 8016fba:	4298      	cmp	r0, r3
 8016fbc:	bfac      	ite	ge
 8016fbe:	2000      	movge	r0, #0
 8016fc0:	2001      	movlt	r0, #1
 8016fc2:	4770      	bx	lr
 8016fc4:	4b0d      	ldr	r3, [pc, #52]	; (8016ffc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8016fc6:	881b      	ldrh	r3, [r3, #0]
 8016fc8:	4413      	add	r3, r2
 8016fca:	4298      	cmp	r0, r3
 8016fcc:	da0d      	bge.n	8016fea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8016fce:	4b0c      	ldr	r3, [pc, #48]	; (8017000 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8016fd0:	681b      	ldr	r3, [r3, #0]
 8016fd2:	1a80      	subs	r0, r0, r2
 8016fd4:	220e      	movs	r2, #14
 8016fd6:	fb02 3300 	mla	r3, r2, r0, r3
 8016fda:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8016fde:	891a      	ldrh	r2, [r3, #8]
 8016fe0:	4291      	cmp	r1, r2
 8016fe2:	db04      	blt.n	8016fee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8016fe4:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8016fe8:	e7e6      	b.n	8016fb8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8016fea:	2000      	movs	r0, #0
 8016fec:	4770      	bx	lr
 8016fee:	2001      	movs	r0, #1
 8016ff0:	4770      	bx	lr
 8016ff2:	bf00      	nop
 8016ff4:	20020114 	.word	0x20020114
 8016ff8:	2002010c 	.word	0x2002010c
 8016ffc:	20020110 	.word	0x20020110
 8017000:	200200f4 	.word	0x200200f4

08017004 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017004:	b508      	push	{r3, lr}
 8017006:	4b12      	ldr	r3, [pc, #72]	; (8017050 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017008:	6819      	ldr	r1, [r3, #0]
 801700a:	b931      	cbnz	r1, 801701a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801700c:	4b11      	ldr	r3, [pc, #68]	; (8017054 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801700e:	4a12      	ldr	r2, [pc, #72]	; (8017058 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8017010:	4812      	ldr	r0, [pc, #72]	; (801705c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017012:	f240 41d1 	movw	r1, #1233	; 0x4d1
 8017016:	f00b ff77 	bl	8022f08 <__assert_func>
 801701a:	8803      	ldrh	r3, [r0, #0]
 801701c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8017020:	4293      	cmp	r3, r2
 8017022:	d012      	beq.n	801704a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8017024:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017028:	4293      	cmp	r3, r2
 801702a:	d103      	bne.n	8017034 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 801702c:	4b0c      	ldr	r3, [pc, #48]	; (8017060 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801702e:	681b      	ldr	r3, [r3, #0]
 8017030:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8017032:	bd08      	pop	{r3, pc}
 8017034:	4a0b      	ldr	r2, [pc, #44]	; (8017064 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8017036:	6812      	ldr	r2, [r2, #0]
 8017038:	b11a      	cbz	r2, 8017042 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801703a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801703e:	2800      	cmp	r0, #0
 8017040:	d1f7      	bne.n	8017032 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8017042:	2214      	movs	r2, #20
 8017044:	4353      	muls	r3, r2
 8017046:	58c8      	ldr	r0, [r1, r3]
 8017048:	e7f3      	b.n	8017032 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801704a:	2000      	movs	r0, #0
 801704c:	e7f1      	b.n	8017032 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801704e:	bf00      	nop
 8017050:	20020114 	.word	0x20020114
 8017054:	080280c4 	.word	0x080280c4
 8017058:	08028ecb 	.word	0x08028ecb
 801705c:	08028dd1 	.word	0x08028dd1
 8017060:	2002008c 	.word	0x2002008c
 8017064:	200200f0 	.word	0x200200f0

08017068 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017068:	8802      	ldrh	r2, [r0, #0]
 801706a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801706e:	429a      	cmp	r2, r3
 8017070:	d845      	bhi.n	80170fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8017072:	4b24      	ldr	r3, [pc, #144]	; (8017104 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017074:	8818      	ldrh	r0, [r3, #0]
 8017076:	4282      	cmp	r2, r0
 8017078:	d221      	bcs.n	80170be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 801707a:	4b23      	ldr	r3, [pc, #140]	; (8017108 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801707c:	6819      	ldr	r1, [r3, #0]
 801707e:	2314      	movs	r3, #20
 8017080:	fb03 1302 	mla	r3, r3, r2, r1
 8017084:	6858      	ldr	r0, [r3, #4]
 8017086:	2800      	cmp	r0, #0
 8017088:	d03a      	beq.n	8017100 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801708a:	4920      	ldr	r1, [pc, #128]	; (801710c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801708c:	6809      	ldr	r1, [r1, #0]
 801708e:	2900      	cmp	r1, #0
 8017090:	d036      	beq.n	8017100 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8017092:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8017096:	2900      	cmp	r1, #0
 8017098:	d032      	beq.n	8017100 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801709a:	891a      	ldrh	r2, [r3, #8]
 801709c:	8958      	ldrh	r0, [r3, #10]
 801709e:	4350      	muls	r0, r2
 80170a0:	7c5a      	ldrb	r2, [r3, #17]
 80170a2:	7cdb      	ldrb	r3, [r3, #19]
 80170a4:	0952      	lsrs	r2, r2, #5
 80170a6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80170aa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80170ae:	2b0b      	cmp	r3, #11
 80170b0:	bf18      	it	ne
 80170b2:	0040      	lslne	r0, r0, #1
 80170b4:	3003      	adds	r0, #3
 80170b6:	f020 0003 	bic.w	r0, r0, #3
 80170ba:	4408      	add	r0, r1
 80170bc:	4770      	bx	lr
 80170be:	4b14      	ldr	r3, [pc, #80]	; (8017110 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 80170c0:	881b      	ldrh	r3, [r3, #0]
 80170c2:	4403      	add	r3, r0
 80170c4:	429a      	cmp	r2, r3
 80170c6:	da1a      	bge.n	80170fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80170c8:	4b12      	ldr	r3, [pc, #72]	; (8017114 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 80170ca:	681b      	ldr	r3, [r3, #0]
 80170cc:	1a10      	subs	r0, r2, r0
 80170ce:	210e      	movs	r1, #14
 80170d0:	fb01 3000 	mla	r0, r1, r0, r3
 80170d4:	7b03      	ldrb	r3, [r0, #12]
 80170d6:	f003 031f 	and.w	r3, r3, #31
 80170da:	2b0b      	cmp	r3, #11
 80170dc:	d10b      	bne.n	80170f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80170de:	8903      	ldrh	r3, [r0, #8]
 80170e0:	8940      	ldrh	r0, [r0, #10]
 80170e2:	4358      	muls	r0, r3
 80170e4:	4b09      	ldr	r3, [pc, #36]	; (801710c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80170e6:	6819      	ldr	r1, [r3, #0]
 80170e8:	3003      	adds	r0, #3
 80170ea:	f020 0303 	bic.w	r3, r0, #3
 80170ee:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80170f2:	4418      	add	r0, r3
 80170f4:	4770      	bx	lr
 80170f6:	2b0d      	cmp	r3, #13
 80170f8:	d101      	bne.n	80170fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80170fa:	300d      	adds	r0, #13
 80170fc:	4770      	bx	lr
 80170fe:	2000      	movs	r0, #0
 8017100:	4770      	bx	lr
 8017102:	bf00      	nop
 8017104:	2002010c 	.word	0x2002010c
 8017108:	20020114 	.word	0x20020114
 801710c:	200200f0 	.word	0x200200f0
 8017110:	20020110 	.word	0x20020110
 8017114:	200200f4 	.word	0x200200f4

08017118 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8017118:	b510      	push	{r4, lr}
 801711a:	4b17      	ldr	r3, [pc, #92]	; (8017178 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801711c:	6819      	ldr	r1, [r3, #0]
 801711e:	8803      	ldrh	r3, [r0, #0]
 8017120:	b1e9      	cbz	r1, 801715e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8017122:	4a16      	ldr	r2, [pc, #88]	; (801717c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8017124:	8812      	ldrh	r2, [r2, #0]
 8017126:	429a      	cmp	r2, r3
 8017128:	d90a      	bls.n	8017140 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 801712a:	2214      	movs	r2, #20
 801712c:	fb02 1303 	mla	r3, r2, r3, r1
 8017130:	7c58      	ldrb	r0, [r3, #17]
 8017132:	0942      	lsrs	r2, r0, #5
 8017134:	7cd8      	ldrb	r0, [r3, #19]
 8017136:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801713a:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801713e:	bd10      	pop	{r4, pc}
 8017140:	490f      	ldr	r1, [pc, #60]	; (8017180 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8017142:	8809      	ldrh	r1, [r1, #0]
 8017144:	4411      	add	r1, r2
 8017146:	428b      	cmp	r3, r1
 8017148:	da09      	bge.n	801715e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801714a:	1a9b      	subs	r3, r3, r2
 801714c:	4a0d      	ldr	r2, [pc, #52]	; (8017184 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801714e:	6812      	ldr	r2, [r2, #0]
 8017150:	210e      	movs	r1, #14
 8017152:	fb01 2303 	mla	r3, r1, r3, r2
 8017156:	7b18      	ldrb	r0, [r3, #12]
 8017158:	f000 001f 	and.w	r0, r0, #31
 801715c:	e7ef      	b.n	801713e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801715e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017162:	4293      	cmp	r3, r2
 8017164:	d106      	bne.n	8017174 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8017166:	f7f8 fe27 	bl	800fdb8 <_ZN8touchgfx3HAL3lcdEv>
 801716a:	6803      	ldr	r3, [r0, #0]
 801716c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017170:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017172:	4718      	bx	r3
 8017174:	2000      	movs	r0, #0
 8017176:	e7e2      	b.n	801713e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8017178:	20020114 	.word	0x20020114
 801717c:	2002010c 	.word	0x2002010c
 8017180:	20020110 	.word	0x20020110
 8017184:	200200f4 	.word	0x200200f4

08017188 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8017188:	2010      	movs	r0, #16
 801718a:	4770      	bx	lr

0801718c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801718c:	2000      	movs	r0, #0
 801718e:	4770      	bx	lr

08017190 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017190:	2bff      	cmp	r3, #255	; 0xff
 8017192:	d050      	beq.n	8017236 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8017194:	2a0b      	cmp	r2, #11
 8017196:	d04a      	beq.n	801722e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8017198:	d80e      	bhi.n	80171b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801719a:	2a03      	cmp	r2, #3
 801719c:	d03f      	beq.n	801721e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801719e:	d804      	bhi.n	80171aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80171a0:	2a01      	cmp	r2, #1
 80171a2:	d03e      	beq.n	8017222 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80171a4:	d93f      	bls.n	8017226 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80171a6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80171a8:	4770      	bx	lr
 80171aa:	2a09      	cmp	r2, #9
 80171ac:	d03f      	beq.n	801722e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80171ae:	d83c      	bhi.n	801722a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80171b0:	2a08      	cmp	r2, #8
 80171b2:	d03a      	beq.n	801722a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80171b4:	2000      	movs	r0, #0
 80171b6:	4770      	bx	lr
 80171b8:	2a2f      	cmp	r2, #47	; 0x2f
 80171ba:	d024      	beq.n	8017206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80171bc:	d80d      	bhi.n	80171da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80171be:	2a2d      	cmp	r2, #45	; 0x2d
 80171c0:	d014      	beq.n	80171ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80171c2:	d826      	bhi.n	8017212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80171c4:	2a2c      	cmp	r2, #44	; 0x2c
 80171c6:	d1f5      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171c8:	684b      	ldr	r3, [r1, #4]
 80171ca:	781b      	ldrb	r3, [r3, #0]
 80171cc:	2b01      	cmp	r3, #1
 80171ce:	d018      	beq.n	8017202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80171d0:	d323      	bcc.n	801721a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80171d2:	2b02      	cmp	r3, #2
 80171d4:	d1ee      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171d6:	6880      	ldr	r0, [r0, #8]
 80171d8:	4770      	bx	lr
 80171da:	2a31      	cmp	r2, #49	; 0x31
 80171dc:	d004      	beq.n	80171e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80171de:	d328      	bcc.n	8017232 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80171e0:	2a32      	cmp	r2, #50	; 0x32
 80171e2:	d026      	beq.n	8017232 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80171e4:	2a33      	cmp	r2, #51	; 0x33
 80171e6:	d1e5      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171e8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80171ea:	4770      	bx	lr
 80171ec:	684b      	ldr	r3, [r1, #4]
 80171ee:	781b      	ldrb	r3, [r3, #0]
 80171f0:	2b01      	cmp	r3, #1
 80171f2:	d004      	beq.n	80171fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80171f4:	d30b      	bcc.n	801720e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80171f6:	2b02      	cmp	r3, #2
 80171f8:	d1dc      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171fa:	6900      	ldr	r0, [r0, #16]
 80171fc:	4770      	bx	lr
 80171fe:	6a00      	ldr	r0, [r0, #32]
 8017200:	4770      	bx	lr
 8017202:	6980      	ldr	r0, [r0, #24]
 8017204:	4770      	bx	lr
 8017206:	684b      	ldr	r3, [r1, #4]
 8017208:	781b      	ldrb	r3, [r3, #0]
 801720a:	2b00      	cmp	r3, #0
 801720c:	d1d2      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801720e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8017210:	4770      	bx	lr
 8017212:	684b      	ldr	r3, [r1, #4]
 8017214:	781b      	ldrb	r3, [r3, #0]
 8017216:	2b00      	cmp	r3, #0
 8017218:	d1cc      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801721a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801721c:	4770      	bx	lr
 801721e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8017220:	4770      	bx	lr
 8017222:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8017224:	4770      	bx	lr
 8017226:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8017228:	4770      	bx	lr
 801722a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801722c:	4770      	bx	lr
 801722e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8017230:	4770      	bx	lr
 8017232:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8017234:	4770      	bx	lr
 8017236:	2a0b      	cmp	r2, #11
 8017238:	d049      	beq.n	80172ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801723a:	d80e      	bhi.n	801725a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801723c:	2a03      	cmp	r2, #3
 801723e:	d040      	beq.n	80172c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8017240:	d804      	bhi.n	801724c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8017242:	2a01      	cmp	r2, #1
 8017244:	d03f      	beq.n	80172c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8017246:	d940      	bls.n	80172ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8017248:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801724a:	4770      	bx	lr
 801724c:	2a09      	cmp	r2, #9
 801724e:	d03e      	beq.n	80172ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017250:	d801      	bhi.n	8017256 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8017252:	2a08      	cmp	r2, #8
 8017254:	d1ae      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017256:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8017258:	4770      	bx	lr
 801725a:	2a2f      	cmp	r2, #47	; 0x2f
 801725c:	d024      	beq.n	80172a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801725e:	d80d      	bhi.n	801727c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8017260:	2a2d      	cmp	r2, #45	; 0x2d
 8017262:	d014      	beq.n	801728e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8017264:	d826      	bhi.n	80172b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8017266:	2a2c      	cmp	r2, #44	; 0x2c
 8017268:	d1a4      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801726a:	684b      	ldr	r3, [r1, #4]
 801726c:	781b      	ldrb	r3, [r3, #0]
 801726e:	2b01      	cmp	r3, #1
 8017270:	d018      	beq.n	80172a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8017272:	d324      	bcc.n	80172be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8017274:	2b02      	cmp	r3, #2
 8017276:	d19d      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017278:	68c0      	ldr	r0, [r0, #12]
 801727a:	4770      	bx	lr
 801727c:	2a31      	cmp	r2, #49	; 0x31
 801727e:	d004      	beq.n	801728a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8017280:	d327      	bcc.n	80172d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017282:	2a32      	cmp	r2, #50	; 0x32
 8017284:	d025      	beq.n	80172d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017286:	2a33      	cmp	r2, #51	; 0x33
 8017288:	d194      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801728a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801728c:	4770      	bx	lr
 801728e:	684b      	ldr	r3, [r1, #4]
 8017290:	781b      	ldrb	r3, [r3, #0]
 8017292:	2b01      	cmp	r3, #1
 8017294:	d004      	beq.n	80172a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8017296:	d30b      	bcc.n	80172b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8017298:	2b02      	cmp	r3, #2
 801729a:	d18b      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801729c:	6940      	ldr	r0, [r0, #20]
 801729e:	4770      	bx	lr
 80172a0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80172a2:	4770      	bx	lr
 80172a4:	69c0      	ldr	r0, [r0, #28]
 80172a6:	4770      	bx	lr
 80172a8:	684b      	ldr	r3, [r1, #4]
 80172aa:	781b      	ldrb	r3, [r3, #0]
 80172ac:	2b00      	cmp	r3, #0
 80172ae:	d181      	bne.n	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80172b0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80172b2:	4770      	bx	lr
 80172b4:	684b      	ldr	r3, [r1, #4]
 80172b6:	781b      	ldrb	r3, [r3, #0]
 80172b8:	2b00      	cmp	r3, #0
 80172ba:	f47f af7b 	bne.w	80171b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80172be:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80172c0:	4770      	bx	lr
 80172c2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80172c4:	4770      	bx	lr
 80172c6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80172c8:	4770      	bx	lr
 80172ca:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80172cc:	4770      	bx	lr
 80172ce:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80172d0:	4770      	bx	lr
 80172d2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80172d4:	4770      	bx	lr

080172d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80172d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172da:	b087      	sub	sp, #28
 80172dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80172de:	9205      	str	r2, [sp, #20]
 80172e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80172e4:	9202      	str	r2, [sp, #8]
 80172e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80172ea:	9101      	str	r1, [sp, #4]
 80172ec:	6841      	ldr	r1, [r0, #4]
 80172ee:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80172f2:	fb01 2404 	mla	r4, r1, r4, r2
 80172f6:	6802      	ldr	r2, [r0, #0]
 80172f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80172fc:	f8de 2000 	ldr.w	r2, [lr]
 8017300:	9203      	str	r2, [sp, #12]
 8017302:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017306:	3204      	adds	r2, #4
 8017308:	9204      	str	r2, [sp, #16]
 801730a:	9a02      	ldr	r2, [sp, #8]
 801730c:	43d6      	mvns	r6, r2
 801730e:	b2f6      	uxtb	r6, r6
 8017310:	9a01      	ldr	r2, [sp, #4]
 8017312:	2a00      	cmp	r2, #0
 8017314:	dc03      	bgt.n	801731e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017316:	9a05      	ldr	r2, [sp, #20]
 8017318:	2a00      	cmp	r2, #0
 801731a:	f340 8129 	ble.w	8017570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801731e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017320:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017324:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017328:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801732c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801732e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017332:	2b00      	cmp	r3, #0
 8017334:	dd0e      	ble.n	8017354 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017336:	1408      	asrs	r0, r1, #16
 8017338:	d405      	bmi.n	8017346 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801733a:	4560      	cmp	r0, ip
 801733c:	da03      	bge.n	8017346 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801733e:	1410      	asrs	r0, r2, #16
 8017340:	d401      	bmi.n	8017346 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017342:	42b8      	cmp	r0, r7
 8017344:	db07      	blt.n	8017356 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017346:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017348:	4401      	add	r1, r0
 801734a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801734c:	3b01      	subs	r3, #1
 801734e:	4402      	add	r2, r0
 8017350:	3402      	adds	r4, #2
 8017352:	e7ee      	b.n	8017332 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017354:	d071      	beq.n	801743a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017356:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017358:	1e58      	subs	r0, r3, #1
 801735a:	fb05 1500 	mla	r5, r5, r0, r1
 801735e:	142d      	asrs	r5, r5, #16
 8017360:	d45f      	bmi.n	8017422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017362:	4565      	cmp	r5, ip
 8017364:	da5d      	bge.n	8017422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017366:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017368:	fb05 2000 	mla	r0, r5, r0, r2
 801736c:	1400      	asrs	r0, r0, #16
 801736e:	d458      	bmi.n	8017422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017370:	42b8      	cmp	r0, r7
 8017372:	da56      	bge.n	8017422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017374:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8017378:	4699      	mov	r9, r3
 801737a:	46a2      	mov	sl, r4
 801737c:	f1b9 0f00 	cmp.w	r9, #0
 8017380:	dd57      	ble.n	8017432 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017382:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017386:	9803      	ldr	r0, [sp, #12]
 8017388:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801738c:	140d      	asrs	r5, r1, #16
 801738e:	fb07 000c 	mla	r0, r7, ip, r0
 8017392:	f109 39ff 	add.w	r9, r9, #4294967295
 8017396:	5d40      	ldrb	r0, [r0, r5]
 8017398:	9d04      	ldr	r5, [sp, #16]
 801739a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801739e:	f8ba 5000 	ldrh.w	r5, [sl]
 80173a2:	122f      	asrs	r7, r5, #8
 80173a4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80173a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80173ac:	fb17 f706 	smulbb	r7, r7, r6
 80173b0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80173b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80173b8:	00ed      	lsls	r5, r5, #3
 80173ba:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80173be:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80173c2:	10c7      	asrs	r7, r0, #3
 80173c4:	b2ed      	uxtb	r5, r5
 80173c6:	00c0      	lsls	r0, r0, #3
 80173c8:	fb18 f806 	smulbb	r8, r8, r6
 80173cc:	fb15 f506 	smulbb	r5, r5, r6
 80173d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80173d4:	b2c0      	uxtb	r0, r0
 80173d6:	fa1f fc8c 	uxth.w	ip, ip
 80173da:	fb07 870b 	mla	r7, r7, fp, r8
 80173de:	fb00 500b 	mla	r0, r0, fp, r5
 80173e2:	b280      	uxth	r0, r0
 80173e4:	b2bf      	uxth	r7, r7
 80173e6:	f10c 0501 	add.w	r5, ip, #1
 80173ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80173ee:	f107 0801 	add.w	r8, r7, #1
 80173f2:	1c45      	adds	r5, r0, #1
 80173f4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80173f8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80173fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80173fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017402:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017406:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801740a:	ea45 0c0c 	orr.w	ip, r5, ip
 801740e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017412:	4401      	add	r1, r0
 8017414:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017416:	ea4c 0c08 	orr.w	ip, ip, r8
 801741a:	f82a cb02 	strh.w	ip, [sl], #2
 801741e:	4402      	add	r2, r0
 8017420:	e7ac      	b.n	801737c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017422:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8017426:	f04f 0800 	mov.w	r8, #0
 801742a:	eb03 0008 	add.w	r0, r3, r8
 801742e:	2800      	cmp	r0, #0
 8017430:	dc41      	bgt.n	80174b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017432:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017436:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801743a:	9b01      	ldr	r3, [sp, #4]
 801743c:	2b00      	cmp	r3, #0
 801743e:	f340 8097 	ble.w	8017570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017442:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017446:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801744a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801744e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017450:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017454:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017458:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801745c:	eef0 6a62 	vmov.f32	s13, s5
 8017460:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017464:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017468:	ee77 2a62 	vsub.f32	s5, s14, s5
 801746c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017470:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017474:	eef0 6a43 	vmov.f32	s13, s6
 8017478:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801747c:	ee12 2a90 	vmov	r2, s5
 8017480:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017484:	fb92 f3f3 	sdiv	r3, r2, r3
 8017488:	ee13 2a10 	vmov	r2, s6
 801748c:	9313      	str	r3, [sp, #76]	; 0x4c
 801748e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017490:	fb92 f3f3 	sdiv	r3, r2, r3
 8017494:	9314      	str	r3, [sp, #80]	; 0x50
 8017496:	9b01      	ldr	r3, [sp, #4]
 8017498:	9a05      	ldr	r2, [sp, #20]
 801749a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801749e:	3b01      	subs	r3, #1
 80174a0:	9301      	str	r3, [sp, #4]
 80174a2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80174a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80174a8:	eeb0 3a67 	vmov.f32	s6, s15
 80174ac:	bf08      	it	eq
 80174ae:	4613      	moveq	r3, r2
 80174b0:	eef0 2a47 	vmov.f32	s5, s14
 80174b4:	e72c      	b.n	8017310 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80174b6:	140f      	asrs	r7, r1, #16
 80174b8:	d453      	bmi.n	8017562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174ba:	f8de 5008 	ldr.w	r5, [lr, #8]
 80174be:	42bd      	cmp	r5, r7
 80174c0:	dd4f      	ble.n	8017562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174c2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80174c6:	d44c      	bmi.n	8017562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174c8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80174cc:	4560      	cmp	r0, ip
 80174ce:	dd48      	ble.n	8017562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174d0:	9803      	ldr	r0, [sp, #12]
 80174d2:	b22d      	sxth	r5, r5
 80174d4:	fb0c 0505 	mla	r5, ip, r5, r0
 80174d8:	5de8      	ldrb	r0, [r5, r7]
 80174da:	9d04      	ldr	r5, [sp, #16]
 80174dc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80174e0:	f06f 0501 	mvn.w	r5, #1
 80174e4:	fb05 fb08 	mul.w	fp, r5, r8
 80174e8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80174ec:	f834 500b 	ldrh.w	r5, [r4, fp]
 80174f0:	122f      	asrs	r7, r5, #8
 80174f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80174f6:	fb17 f706 	smulbb	r7, r7, r6
 80174fa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80174fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017502:	00ed      	lsls	r5, r5, #3
 8017504:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017508:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801750c:	10c7      	asrs	r7, r0, #3
 801750e:	b2ed      	uxtb	r5, r5
 8017510:	00c0      	lsls	r0, r0, #3
 8017512:	fb19 f906 	smulbb	r9, r9, r6
 8017516:	fb15 f506 	smulbb	r5, r5, r6
 801751a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801751e:	b2c0      	uxtb	r0, r0
 8017520:	fa1f fc8c 	uxth.w	ip, ip
 8017524:	fb07 970a 	mla	r7, r7, sl, r9
 8017528:	fb00 500a 	mla	r0, r0, sl, r5
 801752c:	b2bf      	uxth	r7, r7
 801752e:	b280      	uxth	r0, r0
 8017530:	f10c 0501 	add.w	r5, ip, #1
 8017534:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017538:	f107 0901 	add.w	r9, r7, #1
 801753c:	1c45      	adds	r5, r0, #1
 801753e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017542:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017546:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801754a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801754e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017552:	ea45 0c0c 	orr.w	ip, r5, ip
 8017556:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801755a:	ea4c 0c09 	orr.w	ip, ip, r9
 801755e:	f824 c00b 	strh.w	ip, [r4, fp]
 8017562:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017564:	4401      	add	r1, r0
 8017566:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017568:	f108 38ff 	add.w	r8, r8, #4294967295
 801756c:	4402      	add	r2, r0
 801756e:	e75c      	b.n	801742a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017570:	b007      	add	sp, #28
 8017572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017576 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017576:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801757a:	b085      	sub	sp, #20
 801757c:	4693      	mov	fp, r2
 801757e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017580:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017582:	6870      	ldr	r0, [r6, #4]
 8017584:	9100      	str	r1, [sp, #0]
 8017586:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801758a:	fb00 2404 	mla	r4, r0, r4, r2
 801758e:	6832      	ldr	r2, [r6, #0]
 8017590:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017594:	682a      	ldr	r2, [r5, #0]
 8017596:	9201      	str	r2, [sp, #4]
 8017598:	686a      	ldr	r2, [r5, #4]
 801759a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801759e:	3204      	adds	r2, #4
 80175a0:	9202      	str	r2, [sp, #8]
 80175a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80175a6:	9a00      	ldr	r2, [sp, #0]
 80175a8:	2a00      	cmp	r2, #0
 80175aa:	dc03      	bgt.n	80175b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80175ac:	f1bb 0f00 	cmp.w	fp, #0
 80175b0:	f340 80a0 	ble.w	80176f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80175b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80175b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80175ba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80175be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80175c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80175c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80175c8:	2b00      	cmp	r3, #0
 80175ca:	dd0c      	ble.n	80175e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80175cc:	1406      	asrs	r6, r0, #16
 80175ce:	d405      	bmi.n	80175dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175d0:	454e      	cmp	r6, r9
 80175d2:	da03      	bge.n	80175dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175d4:	1416      	asrs	r6, r2, #16
 80175d6:	d401      	bmi.n	80175dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175d8:	4546      	cmp	r6, r8
 80175da:	db05      	blt.n	80175e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80175dc:	4470      	add	r0, lr
 80175de:	4462      	add	r2, ip
 80175e0:	3b01      	subs	r3, #1
 80175e2:	3402      	adds	r4, #2
 80175e4:	e7f0      	b.n	80175c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80175e6:	d00f      	beq.n	8017608 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80175e8:	1e5e      	subs	r6, r3, #1
 80175ea:	fb0e 0706 	mla	r7, lr, r6, r0
 80175ee:	143f      	asrs	r7, r7, #16
 80175f0:	d541      	bpl.n	8017676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80175f2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80175f6:	4698      	mov	r8, r3
 80175f8:	9603      	str	r6, [sp, #12]
 80175fa:	f1b8 0f00 	cmp.w	r8, #0
 80175fe:	dc59      	bgt.n	80176b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017600:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017604:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017608:	9b00      	ldr	r3, [sp, #0]
 801760a:	2b00      	cmp	r3, #0
 801760c:	dd72      	ble.n	80176f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801760e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017612:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017616:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801761a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801761c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017620:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017624:	eeb0 6a62 	vmov.f32	s12, s5
 8017628:	ee61 7a27 	vmul.f32	s15, s2, s15
 801762c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017630:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017634:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017638:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801763c:	eeb0 6a43 	vmov.f32	s12, s6
 8017640:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017644:	ee12 2a90 	vmov	r2, s5
 8017648:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801764c:	fb92 fef3 	sdiv	lr, r2, r3
 8017650:	ee13 2a10 	vmov	r2, s6
 8017654:	fb92 fcf3 	sdiv	ip, r2, r3
 8017658:	9b00      	ldr	r3, [sp, #0]
 801765a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801765e:	3b01      	subs	r3, #1
 8017660:	9300      	str	r3, [sp, #0]
 8017662:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017666:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017668:	eeb0 3a67 	vmov.f32	s6, s15
 801766c:	bf08      	it	eq
 801766e:	465b      	moveq	r3, fp
 8017670:	eef0 2a47 	vmov.f32	s5, s14
 8017674:	e797      	b.n	80175a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017676:	454f      	cmp	r7, r9
 8017678:	dabb      	bge.n	80175f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801767a:	fb0c 2606 	mla	r6, ip, r6, r2
 801767e:	1436      	asrs	r6, r6, #16
 8017680:	d4b7      	bmi.n	80175f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017682:	4546      	cmp	r6, r8
 8017684:	dab5      	bge.n	80175f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017686:	461e      	mov	r6, r3
 8017688:	46a0      	mov	r8, r4
 801768a:	2e00      	cmp	r6, #0
 801768c:	ddb8      	ble.n	8017600 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801768e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017692:	9901      	ldr	r1, [sp, #4]
 8017694:	1417      	asrs	r7, r2, #16
 8017696:	ea4f 4920 	mov.w	r9, r0, asr #16
 801769a:	fb0a 1707 	mla	r7, sl, r7, r1
 801769e:	9902      	ldr	r1, [sp, #8]
 80176a0:	f817 7009 	ldrb.w	r7, [r7, r9]
 80176a4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80176a8:	f828 7b02 	strh.w	r7, [r8], #2
 80176ac:	4470      	add	r0, lr
 80176ae:	4462      	add	r2, ip
 80176b0:	3e01      	subs	r6, #1
 80176b2:	e7ea      	b.n	801768a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80176b4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80176b8:	d417      	bmi.n	80176ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176ba:	68ae      	ldr	r6, [r5, #8]
 80176bc:	454e      	cmp	r6, r9
 80176be:	dd14      	ble.n	80176ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176c0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80176c4:	d411      	bmi.n	80176ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176c6:	68ef      	ldr	r7, [r5, #12]
 80176c8:	4557      	cmp	r7, sl
 80176ca:	dd0e      	ble.n	80176ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176cc:	9f01      	ldr	r7, [sp, #4]
 80176ce:	b236      	sxth	r6, r6
 80176d0:	fb0a 7606 	mla	r6, sl, r6, r7
 80176d4:	9f02      	ldr	r7, [sp, #8]
 80176d6:	f816 6009 	ldrb.w	r6, [r6, r9]
 80176da:	f06f 0101 	mvn.w	r1, #1
 80176de:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80176e2:	fb01 f608 	mul.w	r6, r1, r8
 80176e6:	9903      	ldr	r1, [sp, #12]
 80176e8:	538f      	strh	r7, [r1, r6]
 80176ea:	4470      	add	r0, lr
 80176ec:	4462      	add	r2, ip
 80176ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80176f2:	e782      	b.n	80175fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80176f4:	b005      	add	sp, #20
 80176f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080176fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80176fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176fe:	b087      	sub	sp, #28
 8017700:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017702:	9205      	str	r2, [sp, #20]
 8017704:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017708:	9203      	str	r2, [sp, #12]
 801770a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801770e:	9102      	str	r1, [sp, #8]
 8017710:	6861      	ldr	r1, [r4, #4]
 8017712:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017716:	fb01 2000 	mla	r0, r1, r0, r2
 801771a:	6822      	ldr	r2, [r4, #0]
 801771c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017720:	9200      	str	r2, [sp, #0]
 8017722:	f8dc 2000 	ldr.w	r2, [ip]
 8017726:	9204      	str	r2, [sp, #16]
 8017728:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801772c:	3204      	adds	r2, #4
 801772e:	9201      	str	r2, [sp, #4]
 8017730:	9a03      	ldr	r2, [sp, #12]
 8017732:	43d5      	mvns	r5, r2
 8017734:	b2ed      	uxtb	r5, r5
 8017736:	9a02      	ldr	r2, [sp, #8]
 8017738:	2a00      	cmp	r2, #0
 801773a:	dc03      	bgt.n	8017744 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801773c:	9a05      	ldr	r2, [sp, #20]
 801773e:	2a00      	cmp	r2, #0
 8017740:	f340 812c 	ble.w	801799c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017744:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017746:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801774a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801774e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017752:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017754:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017758:	2b00      	cmp	r3, #0
 801775a:	dd10      	ble.n	801777e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801775c:	140c      	asrs	r4, r1, #16
 801775e:	d405      	bmi.n	801776c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017760:	4574      	cmp	r4, lr
 8017762:	da03      	bge.n	801776c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017764:	1414      	asrs	r4, r2, #16
 8017766:	d401      	bmi.n	801776c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017768:	42bc      	cmp	r4, r7
 801776a:	db09      	blt.n	8017780 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801776c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801776e:	9800      	ldr	r0, [sp, #0]
 8017770:	4421      	add	r1, r4
 8017772:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017774:	3002      	adds	r0, #2
 8017776:	4422      	add	r2, r4
 8017778:	3b01      	subs	r3, #1
 801777a:	9000      	str	r0, [sp, #0]
 801777c:	e7ec      	b.n	8017758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801777e:	d071      	beq.n	8017864 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017780:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017782:	1e5c      	subs	r4, r3, #1
 8017784:	fb06 1604 	mla	r6, r6, r4, r1
 8017788:	1436      	asrs	r6, r6, #16
 801778a:	d45d      	bmi.n	8017848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801778c:	4576      	cmp	r6, lr
 801778e:	da5b      	bge.n	8017848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017790:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8017792:	fb06 2404 	mla	r4, r6, r4, r2
 8017796:	1424      	asrs	r4, r4, #16
 8017798:	d456      	bmi.n	8017848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801779a:	42bc      	cmp	r4, r7
 801779c:	da54      	bge.n	8017848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801779e:	f8dd 9000 	ldr.w	r9, [sp]
 80177a2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80177a6:	4698      	mov	r8, r3
 80177a8:	f1b8 0f00 	cmp.w	r8, #0
 80177ac:	dd54      	ble.n	8017858 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80177ae:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80177b2:	9804      	ldr	r0, [sp, #16]
 80177b4:	1414      	asrs	r4, r2, #16
 80177b6:	fb07 0404 	mla	r4, r7, r4, r0
 80177ba:	140e      	asrs	r6, r1, #16
 80177bc:	9801      	ldr	r0, [sp, #4]
 80177be:	f814 e006 	ldrb.w	lr, [r4, r6]
 80177c2:	f8b9 4000 	ldrh.w	r4, [r9]
 80177c6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80177ca:	eb00 0b0e 	add.w	fp, r0, lr
 80177ce:	1227      	asrs	r7, r4, #8
 80177d0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80177d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80177d8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80177dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80177de:	fb16 f60a 	smulbb	r6, r6, sl
 80177e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80177e6:	fb07 6705 	mla	r7, r7, r5, r6
 80177ea:	10e6      	asrs	r6, r4, #3
 80177ec:	00e4      	lsls	r4, r4, #3
 80177ee:	b2e4      	uxtb	r4, r4
 80177f0:	fb1b fb0a 	smulbb	fp, fp, sl
 80177f4:	fb14 f405 	smulbb	r4, r4, r5
 80177f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80177fc:	b2bf      	uxth	r7, r7
 80177fe:	fb06 b605 	mla	r6, r6, r5, fp
 8017802:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8017806:	b2b6      	uxth	r6, r6
 8017808:	fa1f fe8e 	uxth.w	lr, lr
 801780c:	1c7c      	adds	r4, r7, #1
 801780e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017812:	f106 0b01 	add.w	fp, r6, #1
 8017816:	f10e 0401 	add.w	r4, lr, #1
 801781a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801781e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017822:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017826:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801782a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801782e:	4327      	orrs	r7, r4
 8017830:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017834:	4401      	add	r1, r0
 8017836:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017838:	ea47 070b 	orr.w	r7, r7, fp
 801783c:	f829 7b02 	strh.w	r7, [r9], #2
 8017840:	4402      	add	r2, r0
 8017842:	f108 38ff 	add.w	r8, r8, #4294967295
 8017846:	e7af      	b.n	80177a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8017848:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801784c:	f04f 0e00 	mov.w	lr, #0
 8017850:	eb03 040e 	add.w	r4, r3, lr
 8017854:	2c00      	cmp	r4, #0
 8017856:	dc43      	bgt.n	80178e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017858:	9a00      	ldr	r2, [sp, #0]
 801785a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801785e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017862:	9300      	str	r3, [sp, #0]
 8017864:	9b02      	ldr	r3, [sp, #8]
 8017866:	2b00      	cmp	r3, #0
 8017868:	f340 8098 	ble.w	801799c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801786c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017870:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017874:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017878:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801787a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801787e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017882:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017886:	eef0 6a62 	vmov.f32	s13, s5
 801788a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801788e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017892:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017896:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801789a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801789e:	eef0 6a43 	vmov.f32	s13, s6
 80178a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80178a6:	ee12 2a90 	vmov	r2, s5
 80178aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80178ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80178b2:	ee13 2a10 	vmov	r2, s6
 80178b6:	9313      	str	r3, [sp, #76]	; 0x4c
 80178b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80178be:	9314      	str	r3, [sp, #80]	; 0x50
 80178c0:	9b02      	ldr	r3, [sp, #8]
 80178c2:	9a05      	ldr	r2, [sp, #20]
 80178c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178c8:	3b01      	subs	r3, #1
 80178ca:	9302      	str	r3, [sp, #8]
 80178cc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80178d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178d2:	eeb0 3a67 	vmov.f32	s6, s15
 80178d6:	bf08      	it	eq
 80178d8:	4613      	moveq	r3, r2
 80178da:	eef0 2a47 	vmov.f32	s5, s14
 80178de:	e72a      	b.n	8017736 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80178e0:	140f      	asrs	r7, r1, #16
 80178e2:	d454      	bmi.n	801798e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178e4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80178e8:	42be      	cmp	r6, r7
 80178ea:	dd50      	ble.n	801798e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178ec:	ea5f 4822 	movs.w	r8, r2, asr #16
 80178f0:	d44d      	bmi.n	801798e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178f2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80178f6:	4544      	cmp	r4, r8
 80178f8:	dd49      	ble.n	801798e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178fa:	9c04      	ldr	r4, [sp, #16]
 80178fc:	b236      	sxth	r6, r6
 80178fe:	fb08 4606 	mla	r6, r8, r6, r4
 8017902:	f06f 0001 	mvn.w	r0, #1
 8017906:	f816 8007 	ldrb.w	r8, [r6, r7]
 801790a:	9c01      	ldr	r4, [sp, #4]
 801790c:	fb00 fa0e 	mul.w	sl, r0, lr
 8017910:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017914:	9800      	ldr	r0, [sp, #0]
 8017916:	eb04 0b08 	add.w	fp, r4, r8
 801791a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801791e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017922:	9801      	ldr	r0, [sp, #4]
 8017924:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017928:	f810 8008 	ldrb.w	r8, [r0, r8]
 801792c:	9800      	ldr	r0, [sp, #0]
 801792e:	1227      	asrs	r7, r4, #8
 8017930:	fb16 f609 	smulbb	r6, r6, r9
 8017934:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017938:	fb07 6705 	mla	r7, r7, r5, r6
 801793c:	10e6      	asrs	r6, r4, #3
 801793e:	00e4      	lsls	r4, r4, #3
 8017940:	b2e4      	uxtb	r4, r4
 8017942:	fb1b fb09 	smulbb	fp, fp, r9
 8017946:	fb14 f405 	smulbb	r4, r4, r5
 801794a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801794e:	b2bf      	uxth	r7, r7
 8017950:	fb06 b605 	mla	r6, r6, r5, fp
 8017954:	fb08 4809 	mla	r8, r8, r9, r4
 8017958:	b2b6      	uxth	r6, r6
 801795a:	fa1f f888 	uxth.w	r8, r8
 801795e:	1c7c      	adds	r4, r7, #1
 8017960:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017964:	f106 0b01 	add.w	fp, r6, #1
 8017968:	f108 0401 	add.w	r4, r8, #1
 801796c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8017970:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017974:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017978:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801797c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017980:	4327      	orrs	r7, r4
 8017982:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017986:	ea47 070b 	orr.w	r7, r7, fp
 801798a:	f820 700a 	strh.w	r7, [r0, sl]
 801798e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017990:	4401      	add	r1, r0
 8017992:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017994:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017998:	4402      	add	r2, r0
 801799a:	e759      	b.n	8017850 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801799c:	b007      	add	sp, #28
 801799e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080179a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80179a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179a8:	b085      	sub	sp, #20
 80179aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80179ae:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80179b0:	9203      	str	r2, [sp, #12]
 80179b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80179b6:	6870      	ldr	r0, [r6, #4]
 80179b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80179ba:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80179be:	686f      	ldr	r7, [r5, #4]
 80179c0:	9101      	str	r1, [sp, #4]
 80179c2:	fb00 2404 	mla	r4, r0, r4, r2
 80179c6:	6832      	ldr	r2, [r6, #0]
 80179c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80179cc:	682a      	ldr	r2, [r5, #0]
 80179ce:	9202      	str	r2, [sp, #8]
 80179d0:	3704      	adds	r7, #4
 80179d2:	9a01      	ldr	r2, [sp, #4]
 80179d4:	2a00      	cmp	r2, #0
 80179d6:	dc03      	bgt.n	80179e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80179d8:	9a03      	ldr	r2, [sp, #12]
 80179da:	2a00      	cmp	r2, #0
 80179dc:	f340 80cc 	ble.w	8017b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80179e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80179e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80179ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80179ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80179f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80179f4:	2b00      	cmp	r3, #0
 80179f6:	dd0d      	ble.n	8017a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80179f8:	1406      	asrs	r6, r0, #16
 80179fa:	d405      	bmi.n	8017a08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80179fc:	454e      	cmp	r6, r9
 80179fe:	da03      	bge.n	8017a08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017a00:	1416      	asrs	r6, r2, #16
 8017a02:	d401      	bmi.n	8017a08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017a04:	4546      	cmp	r6, r8
 8017a06:	db06      	blt.n	8017a16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017a08:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8017a0a:	4460      	add	r0, ip
 8017a0c:	4432      	add	r2, r6
 8017a0e:	3b01      	subs	r3, #1
 8017a10:	3402      	adds	r4, #2
 8017a12:	e7ef      	b.n	80179f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8017a14:	d00f      	beq.n	8017a36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017a16:	1e5e      	subs	r6, r3, #1
 8017a18:	fb0c 0e06 	mla	lr, ip, r6, r0
 8017a1c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8017a20:	d543      	bpl.n	8017aaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017a22:	4698      	mov	r8, r3
 8017a24:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8017a28:	f1b8 0f00 	cmp.w	r8, #0
 8017a2c:	dc71      	bgt.n	8017b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8017a2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017a32:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017a36:	9b01      	ldr	r3, [sp, #4]
 8017a38:	2b00      	cmp	r3, #0
 8017a3a:	f340 809d 	ble.w	8017b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017a3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a54:	eeb0 6a62 	vmov.f32	s12, s5
 8017a58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a64:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017a68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a6c:	eeb0 6a43 	vmov.f32	s12, s6
 8017a70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a74:	ee12 2a90 	vmov	r2, s5
 8017a78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a7c:	fb92 fcf3 	sdiv	ip, r2, r3
 8017a80:	ee13 2a10 	vmov	r2, s6
 8017a84:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a88:	9312      	str	r3, [sp, #72]	; 0x48
 8017a8a:	9b01      	ldr	r3, [sp, #4]
 8017a8c:	9a03      	ldr	r2, [sp, #12]
 8017a8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a92:	3b01      	subs	r3, #1
 8017a94:	9301      	str	r3, [sp, #4]
 8017a96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017a9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a9c:	eeb0 3a67 	vmov.f32	s6, s15
 8017aa0:	bf08      	it	eq
 8017aa2:	4613      	moveq	r3, r2
 8017aa4:	eef0 2a47 	vmov.f32	s5, s14
 8017aa8:	e793      	b.n	80179d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017aaa:	45ce      	cmp	lr, r9
 8017aac:	dab9      	bge.n	8017a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017aae:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017ab0:	fb01 2606 	mla	r6, r1, r6, r2
 8017ab4:	1436      	asrs	r6, r6, #16
 8017ab6:	d4b4      	bmi.n	8017a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017ab8:	4546      	cmp	r6, r8
 8017aba:	dab2      	bge.n	8017a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017abc:	4698      	mov	r8, r3
 8017abe:	46a2      	mov	sl, r4
 8017ac0:	f1b8 0f00 	cmp.w	r8, #0
 8017ac4:	ddb3      	ble.n	8017a2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017ac6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017aca:	9902      	ldr	r1, [sp, #8]
 8017acc:	1416      	asrs	r6, r2, #16
 8017ace:	fb09 1606 	mla	r6, r9, r6, r1
 8017ad2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8017ad6:	492a      	ldr	r1, [pc, #168]	; (8017b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8017ad8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8017adc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017ae0:	eb07 0b0e 	add.w	fp, r7, lr
 8017ae4:	4460      	add	r0, ip
 8017ae6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8017aea:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8017aee:	00f6      	lsls	r6, r6, #3
 8017af0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8017af4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017af8:	ea49 0606 	orr.w	r6, r9, r6
 8017afc:	f817 900e 	ldrb.w	r9, [r7, lr]
 8017b00:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017b02:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8017b06:	f82a 6b02 	strh.w	r6, [sl], #2
 8017b0a:	440a      	add	r2, r1
 8017b0c:	f108 38ff 	add.w	r8, r8, #4294967295
 8017b10:	e7d6      	b.n	8017ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017b12:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017b16:	d429      	bmi.n	8017b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b18:	68ae      	ldr	r6, [r5, #8]
 8017b1a:	454e      	cmp	r6, r9
 8017b1c:	dd26      	ble.n	8017b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b1e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8017b22:	d423      	bmi.n	8017b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b24:	68e9      	ldr	r1, [r5, #12]
 8017b26:	4559      	cmp	r1, fp
 8017b28:	dd20      	ble.n	8017b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b2a:	9902      	ldr	r1, [sp, #8]
 8017b2c:	fa0f fe86 	sxth.w	lr, r6
 8017b30:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8017b34:	f06f 0101 	mvn.w	r1, #1
 8017b38:	f81e e009 	ldrb.w	lr, [lr, r9]
 8017b3c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017b40:	eb07 060e 	add.w	r6, r7, lr
 8017b44:	fb01 f908 	mul.w	r9, r1, r8
 8017b48:	f896 b002 	ldrb.w	fp, [r6, #2]
 8017b4c:	7876      	ldrb	r6, [r6, #1]
 8017b4e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8017b52:	00f6      	lsls	r6, r6, #3
 8017b54:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8017b58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017b5c:	ea4b 0606 	orr.w	r6, fp, r6
 8017b60:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8017b64:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8017b68:	f82a 6009 	strh.w	r6, [sl, r9]
 8017b6c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017b6e:	4460      	add	r0, ip
 8017b70:	440a      	add	r2, r1
 8017b72:	f108 38ff 	add.w	r8, r8, #4294967295
 8017b76:	e757      	b.n	8017a28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017b78:	b005      	add	sp, #20
 8017b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b7e:	bf00      	nop
 8017b80:	fffff800 	.word	0xfffff800

08017b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b88:	b087      	sub	sp, #28
 8017b8a:	468b      	mov	fp, r1
 8017b8c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017b8e:	9204      	str	r2, [sp, #16]
 8017b90:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017b94:	9205      	str	r2, [sp, #20]
 8017b96:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017b9a:	6841      	ldr	r1, [r0, #4]
 8017b9c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017ba0:	fb01 2404 	mla	r4, r1, r4, r2
 8017ba4:	6802      	ldr	r2, [r0, #0]
 8017ba6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017baa:	f8dc 2000 	ldr.w	r2, [ip]
 8017bae:	9201      	str	r2, [sp, #4]
 8017bb0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017bb4:	3204      	adds	r2, #4
 8017bb6:	9202      	str	r2, [sp, #8]
 8017bb8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017bbc:	f1bb 0f00 	cmp.w	fp, #0
 8017bc0:	dc03      	bgt.n	8017bca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8017bc2:	9a04      	ldr	r2, [sp, #16]
 8017bc4:	2a00      	cmp	r2, #0
 8017bc6:	f340 8138 	ble.w	8017e3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017bca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017bcc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017bd0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8017bd4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017bd8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017bda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017bde:	2b00      	cmp	r3, #0
 8017be0:	dd0e      	ble.n	8017c00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017be2:	1402      	asrs	r2, r0, #16
 8017be4:	d405      	bmi.n	8017bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017be6:	42ba      	cmp	r2, r7
 8017be8:	da03      	bge.n	8017bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017bea:	140a      	asrs	r2, r1, #16
 8017bec:	d401      	bmi.n	8017bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017bee:	42b2      	cmp	r2, r6
 8017bf0:	db07      	blt.n	8017c02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017bf2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017bf4:	4410      	add	r0, r2
 8017bf6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017bf8:	3b01      	subs	r3, #1
 8017bfa:	4411      	add	r1, r2
 8017bfc:	3402      	adds	r4, #2
 8017bfe:	e7ee      	b.n	8017bde <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8017c00:	d019      	beq.n	8017c36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017c02:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017c04:	1e5a      	subs	r2, r3, #1
 8017c06:	fb05 0502 	mla	r5, r5, r2, r0
 8017c0a:	142d      	asrs	r5, r5, #16
 8017c0c:	d409      	bmi.n	8017c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017c0e:	42bd      	cmp	r5, r7
 8017c10:	da07      	bge.n	8017c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017c12:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017c14:	fb05 1202 	mla	r2, r5, r2, r1
 8017c18:	1412      	asrs	r2, r2, #16
 8017c1a:	d402      	bmi.n	8017c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017c1c:	42b2      	cmp	r2, r6
 8017c1e:	f2c0 80ac 	blt.w	8017d7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8017c22:	f04f 0e00 	mov.w	lr, #0
 8017c26:	eb03 020e 	add.w	r2, r3, lr
 8017c2a:	2a00      	cmp	r2, #0
 8017c2c:	dc3e      	bgt.n	8017cac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017c2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017c32:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017c36:	f1bb 0f00 	cmp.w	fp, #0
 8017c3a:	f340 80fe 	ble.w	8017e3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017c3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017c4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c4c:	f1bb 0b01 	subs.w	fp, fp, #1
 8017c50:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017c54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017c58:	eeb0 6a62 	vmov.f32	s12, s5
 8017c5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017c60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017c68:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017c6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017c70:	eeb0 6a43 	vmov.f32	s12, s6
 8017c74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017c78:	ee12 2a90 	vmov	r2, s5
 8017c7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017c80:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c84:	ee13 2a10 	vmov	r2, s6
 8017c88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c90:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c94:	9a04      	ldr	r2, [sp, #16]
 8017c96:	9314      	str	r3, [sp, #80]	; 0x50
 8017c98:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017c9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c9e:	eeb0 3a67 	vmov.f32	s6, s15
 8017ca2:	bf08      	it	eq
 8017ca4:	4613      	moveq	r3, r2
 8017ca6:	eef0 2a47 	vmov.f32	s5, s14
 8017caa:	e787      	b.n	8017bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017cac:	1406      	asrs	r6, r0, #16
 8017cae:	d45d      	bmi.n	8017d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017cb0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8017cb4:	42b5      	cmp	r5, r6
 8017cb6:	dd59      	ble.n	8017d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017cb8:	140f      	asrs	r7, r1, #16
 8017cba:	d457      	bmi.n	8017d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017cbc:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8017cc0:	42ba      	cmp	r2, r7
 8017cc2:	dd53      	ble.n	8017d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017cc4:	9a01      	ldr	r2, [sp, #4]
 8017cc6:	b22d      	sxth	r5, r5
 8017cc8:	fb07 2505 	mla	r5, r7, r5, r2
 8017ccc:	5daa      	ldrb	r2, [r5, r6]
 8017cce:	9d02      	ldr	r5, [sp, #8]
 8017cd0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8017cd4:	0e2e      	lsrs	r6, r5, #24
 8017cd6:	d049      	beq.n	8017d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017cd8:	f06f 0201 	mvn.w	r2, #1
 8017cdc:	fb02 f20e 	mul.w	r2, r2, lr
 8017ce0:	9203      	str	r2, [sp, #12]
 8017ce2:	f834 8002 	ldrh.w	r8, [r4, r2]
 8017ce6:	9a05      	ldr	r2, [sp, #20]
 8017ce8:	4356      	muls	r6, r2
 8017cea:	1c72      	adds	r2, r6, #1
 8017cec:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8017cf0:	1212      	asrs	r2, r2, #8
 8017cf2:	fa1f f982 	uxth.w	r9, r2
 8017cf6:	ea4f 2728 	mov.w	r7, r8, asr #8
 8017cfa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017cfe:	43d2      	mvns	r2, r2
 8017d00:	b2d2      	uxtb	r2, r2
 8017d02:	fb16 f609 	smulbb	r6, r6, r9
 8017d06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017d0a:	fb07 6702 	mla	r7, r7, r2, r6
 8017d0e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017d12:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8017d16:	b2ed      	uxtb	r5, r5
 8017d18:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017d1c:	fa5f f888 	uxtb.w	r8, r8
 8017d20:	fb15 f509 	smulbb	r5, r5, r9
 8017d24:	fb08 5502 	mla	r5, r8, r2, r5
 8017d28:	b2bf      	uxth	r7, r7
 8017d2a:	fb1a fa09 	smulbb	sl, sl, r9
 8017d2e:	b2ad      	uxth	r5, r5
 8017d30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017d34:	fb06 a602 	mla	r6, r6, r2, sl
 8017d38:	1c7a      	adds	r2, r7, #1
 8017d3a:	f105 0a01 	add.w	sl, r5, #1
 8017d3e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017d42:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017d46:	b2b6      	uxth	r6, r6
 8017d48:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017d4c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017d50:	ea4a 0707 	orr.w	r7, sl, r7
 8017d54:	f106 0a01 	add.w	sl, r6, #1
 8017d58:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017d5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017d60:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017d64:	9a03      	ldr	r2, [sp, #12]
 8017d66:	ea47 070a 	orr.w	r7, r7, sl
 8017d6a:	52a7      	strh	r7, [r4, r2]
 8017d6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017d6e:	4410      	add	r0, r2
 8017d70:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017d72:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017d76:	4411      	add	r1, r2
 8017d78:	e755      	b.n	8017c26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017d7a:	f04f 0800 	mov.w	r8, #0
 8017d7e:	eba3 0208 	sub.w	r2, r3, r8
 8017d82:	2a00      	cmp	r2, #0
 8017d84:	f77f af53 	ble.w	8017c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d88:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8017d8c:	9f01      	ldr	r7, [sp, #4]
 8017d8e:	140a      	asrs	r2, r1, #16
 8017d90:	1405      	asrs	r5, r0, #16
 8017d92:	fb06 7202 	mla	r2, r6, r2, r7
 8017d96:	5d52      	ldrb	r2, [r2, r5]
 8017d98:	9d02      	ldr	r5, [sp, #8]
 8017d9a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8017d9e:	0e2e      	lsrs	r6, r5, #24
 8017da0:	d044      	beq.n	8017e2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017da2:	9a05      	ldr	r2, [sp, #20]
 8017da4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017da8:	4356      	muls	r6, r2
 8017daa:	1c72      	adds	r2, r6, #1
 8017dac:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8017db0:	1212      	asrs	r2, r2, #8
 8017db2:	fa1f f982 	uxth.w	r9, r2
 8017db6:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017dba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017dbe:	43d2      	mvns	r2, r2
 8017dc0:	b2d2      	uxtb	r2, r2
 8017dc2:	fb16 f609 	smulbb	r6, r6, r9
 8017dc6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017dca:	fb07 6702 	mla	r7, r7, r2, r6
 8017dce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017dd2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017dd6:	b2ed      	uxtb	r5, r5
 8017dd8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017ddc:	fa5f fe8e 	uxtb.w	lr, lr
 8017de0:	fb15 f509 	smulbb	r5, r5, r9
 8017de4:	fb0e 5502 	mla	r5, lr, r2, r5
 8017de8:	b2bf      	uxth	r7, r7
 8017dea:	fb1a fa09 	smulbb	sl, sl, r9
 8017dee:	b2ad      	uxth	r5, r5
 8017df0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017df4:	fb06 a602 	mla	r6, r6, r2, sl
 8017df8:	1c7a      	adds	r2, r7, #1
 8017dfa:	f105 0a01 	add.w	sl, r5, #1
 8017dfe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017e02:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017e06:	b2b6      	uxth	r6, r6
 8017e08:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017e0c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017e10:	ea4a 0707 	orr.w	r7, sl, r7
 8017e14:	f106 0a01 	add.w	sl, r6, #1
 8017e18:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017e1c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017e20:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017e24:	ea47 070a 	orr.w	r7, r7, sl
 8017e28:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8017e2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017e2e:	4410      	add	r0, r2
 8017e30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017e32:	f108 0801 	add.w	r8, r8, #1
 8017e36:	4411      	add	r1, r2
 8017e38:	e7a1      	b.n	8017d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8017e3a:	b007      	add	sp, #28
 8017e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017e40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e44:	b085      	sub	sp, #20
 8017e46:	468b      	mov	fp, r1
 8017e48:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017e4a:	9203      	str	r2, [sp, #12]
 8017e4c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017e50:	6841      	ldr	r1, [r0, #4]
 8017e52:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8017e56:	fb01 2404 	mla	r4, r1, r4, r2
 8017e5a:	6802      	ldr	r2, [r0, #0]
 8017e5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017e60:	f8de 2000 	ldr.w	r2, [lr]
 8017e64:	9200      	str	r2, [sp, #0]
 8017e66:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017e6a:	3204      	adds	r2, #4
 8017e6c:	9201      	str	r2, [sp, #4]
 8017e6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017e72:	f1bb 0f00 	cmp.w	fp, #0
 8017e76:	dc03      	bgt.n	8017e80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017e78:	9a03      	ldr	r2, [sp, #12]
 8017e7a:	2a00      	cmp	r2, #0
 8017e7c:	f340 8153 	ble.w	8018126 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8017e80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017e82:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017e86:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8017e8a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017e8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017e90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017e94:	2b00      	cmp	r3, #0
 8017e96:	dd0e      	ble.n	8017eb6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017e98:	1408      	asrs	r0, r1, #16
 8017e9a:	d405      	bmi.n	8017ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017e9c:	42b8      	cmp	r0, r7
 8017e9e:	da03      	bge.n	8017ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017ea0:	1410      	asrs	r0, r2, #16
 8017ea2:	d401      	bmi.n	8017ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017ea4:	42b0      	cmp	r0, r6
 8017ea6:	db07      	blt.n	8017eb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017ea8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017eaa:	4401      	add	r1, r0
 8017eac:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017eae:	3b01      	subs	r3, #1
 8017eb0:	4402      	add	r2, r0
 8017eb2:	3402      	adds	r4, #2
 8017eb4:	e7ee      	b.n	8017e94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017eb6:	d017      	beq.n	8017ee8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017eb8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017eba:	1e58      	subs	r0, r3, #1
 8017ebc:	fb05 1500 	mla	r5, r5, r0, r1
 8017ec0:	142d      	asrs	r5, r5, #16
 8017ec2:	d409      	bmi.n	8017ed8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017ec4:	42bd      	cmp	r5, r7
 8017ec6:	da07      	bge.n	8017ed8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017ec8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017eca:	fb05 2000 	mla	r0, r5, r0, r2
 8017ece:	1400      	asrs	r0, r0, #16
 8017ed0:	d402      	bmi.n	8017ed8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017ed2:	42b0      	cmp	r0, r6
 8017ed4:	f2c0 80bc 	blt.w	8018050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8017ed8:	2600      	movs	r6, #0
 8017eda:	1998      	adds	r0, r3, r6
 8017edc:	2800      	cmp	r0, #0
 8017ede:	dc3e      	bgt.n	8017f5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8017ee0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017ee4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017ee8:	f1bb 0f00 	cmp.w	fp, #0
 8017eec:	f340 811b 	ble.w	8018126 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8017ef0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017ef4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017ef8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017efc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017efe:	f1bb 0b01 	subs.w	fp, fp, #1
 8017f02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017f06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017f0a:	eeb0 6a62 	vmov.f32	s12, s5
 8017f0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017f12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017f16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017f1a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017f1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017f22:	eeb0 6a43 	vmov.f32	s12, s6
 8017f26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017f2a:	ee12 2a90 	vmov	r2, s5
 8017f2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017f32:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f36:	ee13 2a10 	vmov	r2, s6
 8017f3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017f3e:	9311      	str	r3, [sp, #68]	; 0x44
 8017f40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017f42:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f46:	9a03      	ldr	r2, [sp, #12]
 8017f48:	9312      	str	r3, [sp, #72]	; 0x48
 8017f4a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017f4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017f50:	eeb0 3a67 	vmov.f32	s6, s15
 8017f54:	bf08      	it	eq
 8017f56:	4613      	moveq	r3, r2
 8017f58:	eef0 2a47 	vmov.f32	s5, s14
 8017f5c:	e789      	b.n	8017e72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8017f5e:	140f      	asrs	r7, r1, #16
 8017f60:	d426      	bmi.n	8017fb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f62:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017f66:	42bd      	cmp	r5, r7
 8017f68:	dd22      	ble.n	8017fb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f6a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017f6e:	d41f      	bmi.n	8017fb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f70:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017f74:	4560      	cmp	r0, ip
 8017f76:	dd1b      	ble.n	8017fb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f78:	9800      	ldr	r0, [sp, #0]
 8017f7a:	b22d      	sxth	r5, r5
 8017f7c:	fb0c 0505 	mla	r5, ip, r5, r0
 8017f80:	5de8      	ldrb	r0, [r5, r7]
 8017f82:	9d01      	ldr	r5, [sp, #4]
 8017f84:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8017f88:	0e07      	lsrs	r7, r0, #24
 8017f8a:	2fff      	cmp	r7, #255	; 0xff
 8017f8c:	d116      	bne.n	8017fbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017f8e:	f06f 0501 	mvn.w	r5, #1
 8017f92:	fb05 f706 	mul.w	r7, r5, r6
 8017f96:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8017f9a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8017f9e:	0945      	lsrs	r5, r0, #5
 8017fa0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017fa4:	ea4c 0505 	orr.w	r5, ip, r5
 8017fa8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017fac:	4305      	orrs	r5, r0
 8017fae:	53e5      	strh	r5, [r4, r7]
 8017fb0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017fb2:	4401      	add	r1, r0
 8017fb4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017fb6:	3e01      	subs	r6, #1
 8017fb8:	4402      	add	r2, r0
 8017fba:	e78e      	b.n	8017eda <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017fbc:	b2fd      	uxtb	r5, r7
 8017fbe:	2f00      	cmp	r7, #0
 8017fc0:	d0f6      	beq.n	8017fb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017fc2:	f06f 0701 	mvn.w	r7, #1
 8017fc6:	4377      	muls	r7, r6
 8017fc8:	fa1f f985 	uxth.w	r9, r5
 8017fcc:	f834 8007 	ldrh.w	r8, [r4, r7]
 8017fd0:	9702      	str	r7, [sp, #8]
 8017fd2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8017fd6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017fda:	43ed      	mvns	r5, r5
 8017fdc:	b2ed      	uxtb	r5, r5
 8017fde:	fb17 f709 	smulbb	r7, r7, r9
 8017fe2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017fe6:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017fea:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8017fee:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017ff2:	b2c0      	uxtb	r0, r0
 8017ff4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017ff8:	fa5f f888 	uxtb.w	r8, r8
 8017ffc:	fb10 f009 	smulbb	r0, r0, r9
 8018000:	fb08 0005 	mla	r0, r8, r5, r0
 8018004:	b280      	uxth	r0, r0
 8018006:	fa1f fc8c 	uxth.w	ip, ip
 801800a:	fb1a fa09 	smulbb	sl, sl, r9
 801800e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018012:	fb07 a705 	mla	r7, r7, r5, sl
 8018016:	f100 0a01 	add.w	sl, r0, #1
 801801a:	f10c 0501 	add.w	r5, ip, #1
 801801e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018022:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018026:	b2bf      	uxth	r7, r7
 8018028:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801802c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018030:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018034:	f107 0a01 	add.w	sl, r7, #1
 8018038:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801803c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018040:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018044:	9802      	ldr	r0, [sp, #8]
 8018046:	ea4c 0c0a 	orr.w	ip, ip, sl
 801804a:	f824 c000 	strh.w	ip, [r4, r0]
 801804e:	e7af      	b.n	8017fb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018050:	f04f 0800 	mov.w	r8, #0
 8018054:	eba3 0008 	sub.w	r0, r3, r8
 8018058:	2800      	cmp	r0, #0
 801805a:	f77f af41 	ble.w	8017ee0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801805e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018062:	9f00      	ldr	r7, [sp, #0]
 8018064:	1410      	asrs	r0, r2, #16
 8018066:	140d      	asrs	r5, r1, #16
 8018068:	fb06 7000 	mla	r0, r6, r0, r7
 801806c:	5d40      	ldrb	r0, [r0, r5]
 801806e:	9d01      	ldr	r5, [sp, #4]
 8018070:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018074:	0e2e      	lsrs	r6, r5, #24
 8018076:	2eff      	cmp	r6, #255	; 0xff
 8018078:	d112      	bne.n	80180a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801807a:	482c      	ldr	r0, [pc, #176]	; (801812c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801807c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018080:	0968      	lsrs	r0, r5, #5
 8018082:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018086:	4330      	orrs	r0, r6
 8018088:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801808c:	4328      	orrs	r0, r5
 801808e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8018092:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018094:	4401      	add	r1, r0
 8018096:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018098:	f108 0801 	add.w	r8, r8, #1
 801809c:	4402      	add	r2, r0
 801809e:	e7d9      	b.n	8018054 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80180a0:	b2f0      	uxtb	r0, r6
 80180a2:	2e00      	cmp	r6, #0
 80180a4:	d0f5      	beq.n	8018092 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80180a6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80180aa:	fa1f f980 	uxth.w	r9, r0
 80180ae:	ea4f 272c 	mov.w	r7, ip, asr #8
 80180b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80180b6:	43c0      	mvns	r0, r0
 80180b8:	b2c0      	uxtb	r0, r0
 80180ba:	fb16 f609 	smulbb	r6, r6, r9
 80180be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80180c2:	fb07 6700 	mla	r7, r7, r0, r6
 80180c6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80180ca:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80180ce:	b2ed      	uxtb	r5, r5
 80180d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80180d4:	fa5f fc8c 	uxtb.w	ip, ip
 80180d8:	fb15 f509 	smulbb	r5, r5, r9
 80180dc:	fb0c 5500 	mla	r5, ip, r0, r5
 80180e0:	b2bf      	uxth	r7, r7
 80180e2:	fb1a fa09 	smulbb	sl, sl, r9
 80180e6:	b2ad      	uxth	r5, r5
 80180e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80180ec:	fb06 a600 	mla	r6, r6, r0, sl
 80180f0:	1c78      	adds	r0, r7, #1
 80180f2:	f105 0a01 	add.w	sl, r5, #1
 80180f6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80180fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80180fe:	b2b6      	uxth	r6, r6
 8018100:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018104:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018108:	ea4a 0707 	orr.w	r7, sl, r7
 801810c:	f106 0a01 	add.w	sl, r6, #1
 8018110:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018114:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018118:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801811c:	ea47 070a 	orr.w	r7, r7, sl
 8018120:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018124:	e7b5      	b.n	8018092 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018126:	b005      	add	sp, #20
 8018128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801812c:	fffff800 	.word	0xfffff800

08018130 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018134:	b087      	sub	sp, #28
 8018136:	468b      	mov	fp, r1
 8018138:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801813a:	9204      	str	r2, [sp, #16]
 801813c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018140:	9205      	str	r2, [sp, #20]
 8018142:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018146:	6861      	ldr	r1, [r4, #4]
 8018148:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801814c:	fb01 2000 	mla	r0, r1, r0, r2
 8018150:	6822      	ldr	r2, [r4, #0]
 8018152:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018156:	f8de 2000 	ldr.w	r2, [lr]
 801815a:	9201      	str	r2, [sp, #4]
 801815c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018160:	9202      	str	r2, [sp, #8]
 8018162:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018166:	f1bb 0f00 	cmp.w	fp, #0
 801816a:	dc03      	bgt.n	8018174 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801816c:	9a04      	ldr	r2, [sp, #16]
 801816e:	2a00      	cmp	r2, #0
 8018170:	f340 8142 	ble.w	80183f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018174:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018176:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801817a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801817e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018182:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018184:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018188:	2b00      	cmp	r3, #0
 801818a:	dd0e      	ble.n	80181aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801818c:	140c      	asrs	r4, r1, #16
 801818e:	d405      	bmi.n	801819c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018190:	42bc      	cmp	r4, r7
 8018192:	da03      	bge.n	801819c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018194:	1414      	asrs	r4, r2, #16
 8018196:	d401      	bmi.n	801819c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018198:	42b4      	cmp	r4, r6
 801819a:	db07      	blt.n	80181ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801819c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801819e:	4421      	add	r1, r4
 80181a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80181a2:	3b01      	subs	r3, #1
 80181a4:	4422      	add	r2, r4
 80181a6:	3002      	adds	r0, #2
 80181a8:	e7ee      	b.n	8018188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80181aa:	d019      	beq.n	80181e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80181ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80181ae:	1e5c      	subs	r4, r3, #1
 80181b0:	fb05 1504 	mla	r5, r5, r4, r1
 80181b4:	142d      	asrs	r5, r5, #16
 80181b6:	d409      	bmi.n	80181cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80181b8:	42bd      	cmp	r5, r7
 80181ba:	da07      	bge.n	80181cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80181bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80181be:	fb05 2404 	mla	r4, r5, r4, r2
 80181c2:	1424      	asrs	r4, r4, #16
 80181c4:	d402      	bmi.n	80181cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80181c6:	42b4      	cmp	r4, r6
 80181c8:	f2c0 80b1 	blt.w	801832e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80181cc:	f04f 0800 	mov.w	r8, #0
 80181d0:	eb03 0408 	add.w	r4, r3, r8
 80181d4:	2c00      	cmp	r4, #0
 80181d6:	dc3e      	bgt.n	8018256 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80181d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80181dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181e0:	f1bb 0f00 	cmp.w	fp, #0
 80181e4:	f340 8108 	ble.w	80183f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80181e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80181ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80181f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80181f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181f6:	f1bb 0b01 	subs.w	fp, fp, #1
 80181fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80181fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018202:	eeb0 6a62 	vmov.f32	s12, s5
 8018206:	ee61 7a27 	vmul.f32	s15, s2, s15
 801820a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801820e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018212:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018216:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801821a:	eeb0 6a43 	vmov.f32	s12, s6
 801821e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018222:	ee12 2a90 	vmov	r2, s5
 8018226:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801822a:	fb92 f3f3 	sdiv	r3, r2, r3
 801822e:	ee13 2a10 	vmov	r2, s6
 8018232:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018236:	9313      	str	r3, [sp, #76]	; 0x4c
 8018238:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801823a:	fb92 f3f3 	sdiv	r3, r2, r3
 801823e:	9a04      	ldr	r2, [sp, #16]
 8018240:	9314      	str	r3, [sp, #80]	; 0x50
 8018242:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018246:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018248:	eeb0 3a67 	vmov.f32	s6, s15
 801824c:	bf08      	it	eq
 801824e:	4613      	moveq	r3, r2
 8018250:	eef0 2a47 	vmov.f32	s5, s14
 8018254:	e787      	b.n	8018166 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8018256:	140e      	asrs	r6, r1, #16
 8018258:	d462      	bmi.n	8018320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801825a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801825e:	42b5      	cmp	r5, r6
 8018260:	dd5e      	ble.n	8018320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018262:	1417      	asrs	r7, r2, #16
 8018264:	d45c      	bmi.n	8018320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018266:	f8de 400c 	ldr.w	r4, [lr, #12]
 801826a:	42bc      	cmp	r4, r7
 801826c:	dd58      	ble.n	8018320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801826e:	b22d      	sxth	r5, r5
 8018270:	fb07 6505 	mla	r5, r7, r5, r6
 8018274:	9c02      	ldr	r4, [sp, #8]
 8018276:	5d66      	ldrb	r6, [r4, r5]
 8018278:	2e00      	cmp	r6, #0
 801827a:	d051      	beq.n	8018320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801827c:	9c01      	ldr	r4, [sp, #4]
 801827e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018282:	f06f 0401 	mvn.w	r4, #1
 8018286:	fb04 f408 	mul.w	r4, r4, r8
 801828a:	9403      	str	r4, [sp, #12]
 801828c:	5b05      	ldrh	r5, [r0, r4]
 801828e:	9c05      	ldr	r4, [sp, #20]
 8018290:	4366      	muls	r6, r4
 8018292:	1c74      	adds	r4, r6, #1
 8018294:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018298:	1224      	asrs	r4, r4, #8
 801829a:	b2a7      	uxth	r7, r4
 801829c:	122e      	asrs	r6, r5, #8
 801829e:	43e4      	mvns	r4, r4
 80182a0:	b2e4      	uxtb	r4, r4
 80182a2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80182a6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80182aa:	fb16 f604 	smulbb	r6, r6, r4
 80182ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80182b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80182b6:	00ed      	lsls	r5, r5, #3
 80182b8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80182bc:	b2ed      	uxtb	r5, r5
 80182be:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80182c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80182c6:	fb15 f504 	smulbb	r5, r5, r4
 80182ca:	fa5f f989 	uxtb.w	r9, r9
 80182ce:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80182d2:	fb09 5507 	mla	r5, r9, r7, r5
 80182d6:	fb1a fa04 	smulbb	sl, sl, r4
 80182da:	fa1f fc8c 	uxth.w	ip, ip
 80182de:	b2ad      	uxth	r5, r5
 80182e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80182e4:	fb06 a607 	mla	r6, r6, r7, sl
 80182e8:	f10c 0401 	add.w	r4, ip, #1
 80182ec:	f105 0a01 	add.w	sl, r5, #1
 80182f0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80182f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80182f8:	b2b6      	uxth	r6, r6
 80182fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80182fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018302:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018306:	f106 0a01 	add.w	sl, r6, #1
 801830a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801830e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018312:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018316:	9c03      	ldr	r4, [sp, #12]
 8018318:	ea4c 0c0a 	orr.w	ip, ip, sl
 801831c:	f820 c004 	strh.w	ip, [r0, r4]
 8018320:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018322:	4421      	add	r1, r4
 8018324:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018326:	f108 38ff 	add.w	r8, r8, #4294967295
 801832a:	4422      	add	r2, r4
 801832c:	e750      	b.n	80181d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801832e:	f04f 0900 	mov.w	r9, #0
 8018332:	eba3 0409 	sub.w	r4, r3, r9
 8018336:	2c00      	cmp	r4, #0
 8018338:	f77f af4e 	ble.w	80181d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801833c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018340:	140d      	asrs	r5, r1, #16
 8018342:	1414      	asrs	r4, r2, #16
 8018344:	fb06 5404 	mla	r4, r6, r4, r5
 8018348:	9d02      	ldr	r5, [sp, #8]
 801834a:	5d2e      	ldrb	r6, [r5, r4]
 801834c:	2e00      	cmp	r6, #0
 801834e:	d04c      	beq.n	80183ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018350:	9d01      	ldr	r5, [sp, #4]
 8018352:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8018356:	9c05      	ldr	r4, [sp, #20]
 8018358:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801835c:	4366      	muls	r6, r4
 801835e:	1c74      	adds	r4, r6, #1
 8018360:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018364:	1224      	asrs	r4, r4, #8
 8018366:	b2a7      	uxth	r7, r4
 8018368:	122e      	asrs	r6, r5, #8
 801836a:	43e4      	mvns	r4, r4
 801836c:	b2e4      	uxtb	r4, r4
 801836e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018372:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018376:	fb16 f604 	smulbb	r6, r6, r4
 801837a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801837e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018382:	00ed      	lsls	r5, r5, #3
 8018384:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018388:	b2ed      	uxtb	r5, r5
 801838a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801838e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018392:	fb15 f504 	smulbb	r5, r5, r4
 8018396:	fa5f f888 	uxtb.w	r8, r8
 801839a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801839e:	fb08 5507 	mla	r5, r8, r7, r5
 80183a2:	fb1a fa04 	smulbb	sl, sl, r4
 80183a6:	fa1f fc8c 	uxth.w	ip, ip
 80183aa:	b2ad      	uxth	r5, r5
 80183ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80183b0:	fb06 a607 	mla	r6, r6, r7, sl
 80183b4:	f10c 0401 	add.w	r4, ip, #1
 80183b8:	f105 0a01 	add.w	sl, r5, #1
 80183bc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80183c0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80183c4:	b2b6      	uxth	r6, r6
 80183c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80183ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80183ce:	ea4a 0c0c 	orr.w	ip, sl, ip
 80183d2:	f106 0a01 	add.w	sl, r6, #1
 80183d6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80183da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80183de:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80183e2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80183e6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80183ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80183ec:	4421      	add	r1, r4
 80183ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80183f0:	f109 0901 	add.w	r9, r9, #1
 80183f4:	4422      	add	r2, r4
 80183f6:	e79c      	b.n	8018332 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80183f8:	b007      	add	sp, #28
 80183fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080183fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80183fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018402:	b085      	sub	sp, #20
 8018404:	468b      	mov	fp, r1
 8018406:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018408:	9203      	str	r2, [sp, #12]
 801840a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801840e:	6861      	ldr	r1, [r4, #4]
 8018410:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8018414:	fb01 2000 	mla	r0, r1, r0, r2
 8018418:	6822      	ldr	r2, [r4, #0]
 801841a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801841e:	f8d8 2000 	ldr.w	r2, [r8]
 8018422:	9200      	str	r2, [sp, #0]
 8018424:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018428:	9201      	str	r2, [sp, #4]
 801842a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801842e:	f1bb 0f00 	cmp.w	fp, #0
 8018432:	dc03      	bgt.n	801843c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018434:	9a03      	ldr	r2, [sp, #12]
 8018436:	2a00      	cmp	r2, #0
 8018438:	f340 8146 	ble.w	80186c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801843c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801843e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018442:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018446:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801844a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801844c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018450:	2b00      	cmp	r3, #0
 8018452:	dd0e      	ble.n	8018472 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018454:	140c      	asrs	r4, r1, #16
 8018456:	d405      	bmi.n	8018464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018458:	42bc      	cmp	r4, r7
 801845a:	da03      	bge.n	8018464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801845c:	1414      	asrs	r4, r2, #16
 801845e:	d401      	bmi.n	8018464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018460:	42b4      	cmp	r4, r6
 8018462:	db07      	blt.n	8018474 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018464:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018466:	4421      	add	r1, r4
 8018468:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801846a:	3b01      	subs	r3, #1
 801846c:	4422      	add	r2, r4
 801846e:	3002      	adds	r0, #2
 8018470:	e7ee      	b.n	8018450 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018472:	d017      	beq.n	80184a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018474:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018476:	1e5c      	subs	r4, r3, #1
 8018478:	fb05 1504 	mla	r5, r5, r4, r1
 801847c:	142d      	asrs	r5, r5, #16
 801847e:	d409      	bmi.n	8018494 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018480:	42bd      	cmp	r5, r7
 8018482:	da07      	bge.n	8018494 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018484:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018486:	fb05 2404 	mla	r4, r5, r4, r2
 801848a:	1424      	asrs	r4, r4, #16
 801848c:	d402      	bmi.n	8018494 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801848e:	42b4      	cmp	r4, r6
 8018490:	f2c0 80b3 	blt.w	80185fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018494:	2600      	movs	r6, #0
 8018496:	199c      	adds	r4, r3, r6
 8018498:	2c00      	cmp	r4, #0
 801849a:	dc3e      	bgt.n	801851a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801849c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80184a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184a4:	f1bb 0f00 	cmp.w	fp, #0
 80184a8:	f340 810e 	ble.w	80186c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80184ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80184b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80184b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80184b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80184ba:	f1bb 0b01 	subs.w	fp, fp, #1
 80184be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80184c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80184c6:	eeb0 6a62 	vmov.f32	s12, s5
 80184ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80184ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80184d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80184d6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80184da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80184de:	eeb0 6a43 	vmov.f32	s12, s6
 80184e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80184e6:	ee12 2a90 	vmov	r2, s5
 80184ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80184ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80184f2:	ee13 2a10 	vmov	r2, s6
 80184f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80184fa:	9311      	str	r3, [sp, #68]	; 0x44
 80184fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80184fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018502:	9a03      	ldr	r2, [sp, #12]
 8018504:	9312      	str	r3, [sp, #72]	; 0x48
 8018506:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801850a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801850c:	eeb0 3a67 	vmov.f32	s6, s15
 8018510:	bf08      	it	eq
 8018512:	4613      	moveq	r3, r2
 8018514:	eef0 2a47 	vmov.f32	s5, s14
 8018518:	e789      	b.n	801842e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801851a:	140f      	asrs	r7, r1, #16
 801851c:	d418      	bmi.n	8018550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801851e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018522:	42bd      	cmp	r5, r7
 8018524:	dd14      	ble.n	8018550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018526:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801852a:	d411      	bmi.n	8018550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801852c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018530:	4564      	cmp	r4, ip
 8018532:	dd0d      	ble.n	8018550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018534:	b22d      	sxth	r5, r5
 8018536:	fb0c 7505 	mla	r5, ip, r5, r7
 801853a:	9c01      	ldr	r4, [sp, #4]
 801853c:	5d64      	ldrb	r4, [r4, r5]
 801853e:	2cff      	cmp	r4, #255	; 0xff
 8018540:	d10c      	bne.n	801855c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018542:	9c00      	ldr	r4, [sp, #0]
 8018544:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8018548:	f06f 0401 	mvn.w	r4, #1
 801854c:	4374      	muls	r4, r6
 801854e:	5305      	strh	r5, [r0, r4]
 8018550:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018552:	4421      	add	r1, r4
 8018554:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018556:	3e01      	subs	r6, #1
 8018558:	4422      	add	r2, r4
 801855a:	e79c      	b.n	8018496 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801855c:	2c00      	cmp	r4, #0
 801855e:	d0f7      	beq.n	8018550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018560:	9f00      	ldr	r7, [sp, #0]
 8018562:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8018566:	f06f 0501 	mvn.w	r5, #1
 801856a:	4375      	muls	r5, r6
 801856c:	9502      	str	r5, [sp, #8]
 801856e:	5b45      	ldrh	r5, [r0, r5]
 8018570:	fa1f fc84 	uxth.w	ip, r4
 8018574:	122f      	asrs	r7, r5, #8
 8018576:	43e4      	mvns	r4, r4
 8018578:	b2e4      	uxtb	r4, r4
 801857a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801857e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018582:	fb17 f704 	smulbb	r7, r7, r4
 8018586:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801858a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801858e:	00ed      	lsls	r5, r5, #3
 8018590:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8018594:	b2ed      	uxtb	r5, r5
 8018596:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801859a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801859e:	fb15 f504 	smulbb	r5, r5, r4
 80185a2:	fa5f f989 	uxtb.w	r9, r9
 80185a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80185aa:	fb09 550c 	mla	r5, r9, ip, r5
 80185ae:	fb1a fa04 	smulbb	sl, sl, r4
 80185b2:	fa1f fe8e 	uxth.w	lr, lr
 80185b6:	b2ad      	uxth	r5, r5
 80185b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80185bc:	fb07 a70c 	mla	r7, r7, ip, sl
 80185c0:	f10e 0401 	add.w	r4, lr, #1
 80185c4:	f105 0a01 	add.w	sl, r5, #1
 80185c8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80185cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80185d0:	b2bf      	uxth	r7, r7
 80185d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80185d6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80185da:	ea4a 0e0e 	orr.w	lr, sl, lr
 80185de:	f107 0a01 	add.w	sl, r7, #1
 80185e2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80185e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80185ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80185ee:	9c02      	ldr	r4, [sp, #8]
 80185f0:	ea4e 0e0a 	orr.w	lr, lr, sl
 80185f4:	f820 e004 	strh.w	lr, [r0, r4]
 80185f8:	e7aa      	b.n	8018550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80185fa:	f04f 0900 	mov.w	r9, #0
 80185fe:	eba3 0409 	sub.w	r4, r3, r9
 8018602:	2c00      	cmp	r4, #0
 8018604:	f77f af4a 	ble.w	801849c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018608:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801860c:	1414      	asrs	r4, r2, #16
 801860e:	140d      	asrs	r5, r1, #16
 8018610:	fb06 5504 	mla	r5, r6, r4, r5
 8018614:	9c01      	ldr	r4, [sp, #4]
 8018616:	5d64      	ldrb	r4, [r4, r5]
 8018618:	2cff      	cmp	r4, #255	; 0xff
 801861a:	d10b      	bne.n	8018634 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801861c:	9c00      	ldr	r4, [sp, #0]
 801861e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018622:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8018626:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018628:	4421      	add	r1, r4
 801862a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801862c:	f109 0901 	add.w	r9, r9, #1
 8018630:	4422      	add	r2, r4
 8018632:	e7e4      	b.n	80185fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018634:	2c00      	cmp	r4, #0
 8018636:	d0f6      	beq.n	8018626 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018638:	9e00      	ldr	r6, [sp, #0]
 801863a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801863e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018642:	b2a7      	uxth	r7, r4
 8018644:	122e      	asrs	r6, r5, #8
 8018646:	43e4      	mvns	r4, r4
 8018648:	b2e4      	uxtb	r4, r4
 801864a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801864e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018652:	fb16 f604 	smulbb	r6, r6, r4
 8018656:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801865a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801865e:	00ed      	lsls	r5, r5, #3
 8018660:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018664:	b2ed      	uxtb	r5, r5
 8018666:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801866a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801866e:	fb15 f504 	smulbb	r5, r5, r4
 8018672:	fa5f fe8e 	uxtb.w	lr, lr
 8018676:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801867a:	fb0e 5507 	mla	r5, lr, r7, r5
 801867e:	fb1a fa04 	smulbb	sl, sl, r4
 8018682:	fa1f fc8c 	uxth.w	ip, ip
 8018686:	b2ad      	uxth	r5, r5
 8018688:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801868c:	fb06 a607 	mla	r6, r6, r7, sl
 8018690:	f10c 0401 	add.w	r4, ip, #1
 8018694:	f105 0a01 	add.w	sl, r5, #1
 8018698:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801869c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80186a0:	b2b6      	uxth	r6, r6
 80186a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80186a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80186aa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80186ae:	f106 0a01 	add.w	sl, r6, #1
 80186b2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80186b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80186ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80186be:	ea4c 0c0a 	orr.w	ip, ip, sl
 80186c2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80186c6:	e7ae      	b.n	8018626 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80186c8:	b005      	add	sp, #20
 80186ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080186ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186d2:	b085      	sub	sp, #20
 80186d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80186d6:	9203      	str	r2, [sp, #12]
 80186d8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80186dc:	9201      	str	r2, [sp, #4]
 80186de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80186e2:	9100      	str	r1, [sp, #0]
 80186e4:	6841      	ldr	r1, [r0, #4]
 80186e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80186ea:	fb01 2404 	mla	r4, r1, r4, r2
 80186ee:	6802      	ldr	r2, [r0, #0]
 80186f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80186f4:	f8de 2000 	ldr.w	r2, [lr]
 80186f8:	9202      	str	r2, [sp, #8]
 80186fa:	9a01      	ldr	r2, [sp, #4]
 80186fc:	43d6      	mvns	r6, r2
 80186fe:	b2f6      	uxtb	r6, r6
 8018700:	9a00      	ldr	r2, [sp, #0]
 8018702:	2a00      	cmp	r2, #0
 8018704:	dc03      	bgt.n	801870e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018706:	9a03      	ldr	r2, [sp, #12]
 8018708:	2a00      	cmp	r2, #0
 801870a:	f340 8124 	ble.w	8018956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801870e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018710:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018714:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018718:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801871c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801871e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018722:	2b00      	cmp	r3, #0
 8018724:	dd0e      	ble.n	8018744 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018726:	1408      	asrs	r0, r1, #16
 8018728:	d405      	bmi.n	8018736 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801872a:	4560      	cmp	r0, ip
 801872c:	da03      	bge.n	8018736 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801872e:	1410      	asrs	r0, r2, #16
 8018730:	d401      	bmi.n	8018736 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018732:	42b8      	cmp	r0, r7
 8018734:	db07      	blt.n	8018746 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018736:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018738:	4401      	add	r1, r0
 801873a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801873c:	3b01      	subs	r3, #1
 801873e:	4402      	add	r2, r0
 8018740:	3402      	adds	r4, #2
 8018742:	e7ee      	b.n	8018722 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018744:	d06e      	beq.n	8018824 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018746:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018748:	1e58      	subs	r0, r3, #1
 801874a:	fb05 1500 	mla	r5, r5, r0, r1
 801874e:	142d      	asrs	r5, r5, #16
 8018750:	d45c      	bmi.n	801880c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018752:	4565      	cmp	r5, ip
 8018754:	da5a      	bge.n	801880c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018756:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018758:	fb05 2000 	mla	r0, r5, r0, r2
 801875c:	1400      	asrs	r0, r0, #16
 801875e:	d455      	bmi.n	801880c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018760:	42b8      	cmp	r0, r7
 8018762:	da53      	bge.n	801880c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018764:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8018768:	4699      	mov	r9, r3
 801876a:	46a2      	mov	sl, r4
 801876c:	f1b9 0f00 	cmp.w	r9, #0
 8018770:	dd54      	ble.n	801881c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018772:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018776:	140d      	asrs	r5, r1, #16
 8018778:	1410      	asrs	r0, r2, #16
 801877a:	fb07 5000 	mla	r0, r7, r0, r5
 801877e:	9d02      	ldr	r5, [sp, #8]
 8018780:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018784:	f8ba 5000 	ldrh.w	r5, [sl]
 8018788:	122f      	asrs	r7, r5, #8
 801878a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801878e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018792:	fb17 f706 	smulbb	r7, r7, r6
 8018796:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801879a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801879e:	00ed      	lsls	r5, r5, #3
 80187a0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80187a4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80187a8:	10c7      	asrs	r7, r0, #3
 80187aa:	b2ed      	uxtb	r5, r5
 80187ac:	00c0      	lsls	r0, r0, #3
 80187ae:	fb18 f806 	smulbb	r8, r8, r6
 80187b2:	fb15 f506 	smulbb	r5, r5, r6
 80187b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80187ba:	b2c0      	uxtb	r0, r0
 80187bc:	fa1f fc8c 	uxth.w	ip, ip
 80187c0:	fb07 870b 	mla	r7, r7, fp, r8
 80187c4:	fb00 500b 	mla	r0, r0, fp, r5
 80187c8:	b280      	uxth	r0, r0
 80187ca:	b2bf      	uxth	r7, r7
 80187cc:	f10c 0501 	add.w	r5, ip, #1
 80187d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80187d4:	f107 0801 	add.w	r8, r7, #1
 80187d8:	1c45      	adds	r5, r0, #1
 80187da:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80187de:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80187e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80187e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80187e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80187ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80187f0:	ea45 0c0c 	orr.w	ip, r5, ip
 80187f4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80187f8:	4401      	add	r1, r0
 80187fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80187fc:	ea4c 0c08 	orr.w	ip, ip, r8
 8018800:	f82a cb02 	strh.w	ip, [sl], #2
 8018804:	4402      	add	r2, r0
 8018806:	f109 39ff 	add.w	r9, r9, #4294967295
 801880a:	e7af      	b.n	801876c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801880c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8018810:	f04f 0800 	mov.w	r8, #0
 8018814:	eb03 0008 	add.w	r0, r3, r8
 8018818:	2800      	cmp	r0, #0
 801881a:	dc41      	bgt.n	80188a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801881c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018820:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018824:	9b00      	ldr	r3, [sp, #0]
 8018826:	2b00      	cmp	r3, #0
 8018828:	f340 8095 	ble.w	8018956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801882c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018830:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018834:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018838:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801883a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801883e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018842:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018846:	eef0 6a62 	vmov.f32	s13, s5
 801884a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801884e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018852:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018856:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801885a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801885e:	eef0 6a43 	vmov.f32	s13, s6
 8018862:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018866:	ee12 2a90 	vmov	r2, s5
 801886a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801886e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018872:	ee13 2a10 	vmov	r2, s6
 8018876:	9311      	str	r3, [sp, #68]	; 0x44
 8018878:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801887a:	fb92 f3f3 	sdiv	r3, r2, r3
 801887e:	9312      	str	r3, [sp, #72]	; 0x48
 8018880:	9b00      	ldr	r3, [sp, #0]
 8018882:	9a03      	ldr	r2, [sp, #12]
 8018884:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018888:	3b01      	subs	r3, #1
 801888a:	9300      	str	r3, [sp, #0]
 801888c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8018890:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018892:	eeb0 3a67 	vmov.f32	s6, s15
 8018896:	bf08      	it	eq
 8018898:	4613      	moveq	r3, r2
 801889a:	eef0 2a47 	vmov.f32	s5, s14
 801889e:	e72f      	b.n	8018700 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80188a0:	140f      	asrs	r7, r1, #16
 80188a2:	d451      	bmi.n	8018948 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80188a4:	f8de 5008 	ldr.w	r5, [lr, #8]
 80188a8:	42bd      	cmp	r5, r7
 80188aa:	dd4d      	ble.n	8018948 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80188ac:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80188b0:	d44a      	bmi.n	8018948 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80188b2:	f8de 000c 	ldr.w	r0, [lr, #12]
 80188b6:	4560      	cmp	r0, ip
 80188b8:	dd46      	ble.n	8018948 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80188ba:	b22d      	sxth	r5, r5
 80188bc:	fb0c 7505 	mla	r5, ip, r5, r7
 80188c0:	9802      	ldr	r0, [sp, #8]
 80188c2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80188c6:	f06f 0501 	mvn.w	r5, #1
 80188ca:	fb05 fb08 	mul.w	fp, r5, r8
 80188ce:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80188d2:	f834 500b 	ldrh.w	r5, [r4, fp]
 80188d6:	122f      	asrs	r7, r5, #8
 80188d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80188dc:	fb17 f706 	smulbb	r7, r7, r6
 80188e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80188e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80188e8:	00ed      	lsls	r5, r5, #3
 80188ea:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80188ee:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80188f2:	10c7      	asrs	r7, r0, #3
 80188f4:	b2ed      	uxtb	r5, r5
 80188f6:	00c0      	lsls	r0, r0, #3
 80188f8:	fb19 f906 	smulbb	r9, r9, r6
 80188fc:	fb15 f506 	smulbb	r5, r5, r6
 8018900:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018904:	b2c0      	uxtb	r0, r0
 8018906:	fa1f fc8c 	uxth.w	ip, ip
 801890a:	fb07 970a 	mla	r7, r7, sl, r9
 801890e:	fb00 500a 	mla	r0, r0, sl, r5
 8018912:	b2bf      	uxth	r7, r7
 8018914:	b280      	uxth	r0, r0
 8018916:	f10c 0501 	add.w	r5, ip, #1
 801891a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801891e:	f107 0901 	add.w	r9, r7, #1
 8018922:	1c45      	adds	r5, r0, #1
 8018924:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018928:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801892c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018930:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018934:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018938:	ea45 0c0c 	orr.w	ip, r5, ip
 801893c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018940:	ea4c 0c09 	orr.w	ip, ip, r9
 8018944:	f824 c00b 	strh.w	ip, [r4, fp]
 8018948:	9811      	ldr	r0, [sp, #68]	; 0x44
 801894a:	4401      	add	r1, r0
 801894c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801894e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018952:	4402      	add	r2, r0
 8018954:	e75e      	b.n	8018814 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8018956:	b005      	add	sp, #20
 8018958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801895c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801895c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018960:	b085      	sub	sp, #20
 8018962:	4693      	mov	fp, r2
 8018964:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018966:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018968:	6870      	ldr	r0, [r6, #4]
 801896a:	9101      	str	r1, [sp, #4]
 801896c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018970:	fb00 2404 	mla	r4, r0, r4, r2
 8018974:	6832      	ldr	r2, [r6, #0]
 8018976:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801897a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801897e:	682a      	ldr	r2, [r5, #0]
 8018980:	9202      	str	r2, [sp, #8]
 8018982:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018986:	9a01      	ldr	r2, [sp, #4]
 8018988:	2a00      	cmp	r2, #0
 801898a:	dc03      	bgt.n	8018994 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801898c:	f1bb 0f00 	cmp.w	fp, #0
 8018990:	f340 809a 	ble.w	8018ac8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018994:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018996:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801899a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801899e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80189a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80189a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80189a8:	2b00      	cmp	r3, #0
 80189aa:	dd0c      	ble.n	80189c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80189ac:	1406      	asrs	r6, r0, #16
 80189ae:	d405      	bmi.n	80189bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80189b0:	454e      	cmp	r6, r9
 80189b2:	da03      	bge.n	80189bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80189b4:	1416      	asrs	r6, r2, #16
 80189b6:	d401      	bmi.n	80189bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80189b8:	4546      	cmp	r6, r8
 80189ba:	db05      	blt.n	80189c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80189bc:	4470      	add	r0, lr
 80189be:	4462      	add	r2, ip
 80189c0:	3b01      	subs	r3, #1
 80189c2:	3402      	adds	r4, #2
 80189c4:	e7f0      	b.n	80189a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80189c6:	d00f      	beq.n	80189e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80189c8:	1e5e      	subs	r6, r3, #1
 80189ca:	fb0e 0706 	mla	r7, lr, r6, r0
 80189ce:	143f      	asrs	r7, r7, #16
 80189d0:	d541      	bpl.n	8018a56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80189d2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80189d6:	4698      	mov	r8, r3
 80189d8:	9603      	str	r6, [sp, #12]
 80189da:	f1b8 0f00 	cmp.w	r8, #0
 80189de:	dc56      	bgt.n	8018a8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80189e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80189e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80189e8:	9b01      	ldr	r3, [sp, #4]
 80189ea:	2b00      	cmp	r3, #0
 80189ec:	dd6c      	ble.n	8018ac8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80189ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80189fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80189fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a04:	eeb0 6a62 	vmov.f32	s12, s5
 8018a08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a14:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018a18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a1c:	eeb0 6a43 	vmov.f32	s12, s6
 8018a20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a24:	ee12 2a90 	vmov	r2, s5
 8018a28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a2c:	fb92 fef3 	sdiv	lr, r2, r3
 8018a30:	ee13 2a10 	vmov	r2, s6
 8018a34:	fb92 fcf3 	sdiv	ip, r2, r3
 8018a38:	9b01      	ldr	r3, [sp, #4]
 8018a3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a3e:	3b01      	subs	r3, #1
 8018a40:	9301      	str	r3, [sp, #4]
 8018a42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018a46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018a48:	eeb0 3a67 	vmov.f32	s6, s15
 8018a4c:	bf08      	it	eq
 8018a4e:	465b      	moveq	r3, fp
 8018a50:	eef0 2a47 	vmov.f32	s5, s14
 8018a54:	e797      	b.n	8018986 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018a56:	454f      	cmp	r7, r9
 8018a58:	dabb      	bge.n	80189d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018a5a:	fb0c 2606 	mla	r6, ip, r6, r2
 8018a5e:	1436      	asrs	r6, r6, #16
 8018a60:	d4b7      	bmi.n	80189d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018a62:	4546      	cmp	r6, r8
 8018a64:	dab5      	bge.n	80189d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018a66:	461e      	mov	r6, r3
 8018a68:	46a0      	mov	r8, r4
 8018a6a:	2e00      	cmp	r6, #0
 8018a6c:	ddb8      	ble.n	80189e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018a6e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018a72:	9902      	ldr	r1, [sp, #8]
 8018a74:	1417      	asrs	r7, r2, #16
 8018a76:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018a7a:	fb0a 9707 	mla	r7, sl, r7, r9
 8018a7e:	4470      	add	r0, lr
 8018a80:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018a84:	f828 7b02 	strh.w	r7, [r8], #2
 8018a88:	4462      	add	r2, ip
 8018a8a:	3e01      	subs	r6, #1
 8018a8c:	e7ed      	b.n	8018a6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018a8e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018a92:	d414      	bmi.n	8018abe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018a94:	68ae      	ldr	r6, [r5, #8]
 8018a96:	454e      	cmp	r6, r9
 8018a98:	dd11      	ble.n	8018abe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018a9a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018a9e:	d40e      	bmi.n	8018abe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018aa0:	68ef      	ldr	r7, [r5, #12]
 8018aa2:	4557      	cmp	r7, sl
 8018aa4:	dd0b      	ble.n	8018abe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018aa6:	b236      	sxth	r6, r6
 8018aa8:	fb0a 9606 	mla	r6, sl, r6, r9
 8018aac:	9f02      	ldr	r7, [sp, #8]
 8018aae:	f06f 0101 	mvn.w	r1, #1
 8018ab2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018ab6:	fb01 f608 	mul.w	r6, r1, r8
 8018aba:	9903      	ldr	r1, [sp, #12]
 8018abc:	538f      	strh	r7, [r1, r6]
 8018abe:	4470      	add	r0, lr
 8018ac0:	4462      	add	r2, ip
 8018ac2:	f108 38ff 	add.w	r8, r8, #4294967295
 8018ac6:	e788      	b.n	80189da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018ac8:	b005      	add	sp, #20
 8018aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ace <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ace:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ad2:	b087      	sub	sp, #28
 8018ad4:	468b      	mov	fp, r1
 8018ad6:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018ad8:	9203      	str	r2, [sp, #12]
 8018ada:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018ade:	9204      	str	r2, [sp, #16]
 8018ae0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8018ae4:	6841      	ldr	r1, [r0, #4]
 8018ae6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8018aea:	fb01 2505 	mla	r5, r1, r5, r2
 8018aee:	6802      	ldr	r2, [r0, #0]
 8018af0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018af4:	f8d9 2000 	ldr.w	r2, [r9]
 8018af8:	9201      	str	r2, [sp, #4]
 8018afa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018afe:	f1bb 0f00 	cmp.w	fp, #0
 8018b02:	dc03      	bgt.n	8018b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018b04:	9a03      	ldr	r2, [sp, #12]
 8018b06:	2a00      	cmp	r2, #0
 8018b08:	f340 8159 	ble.w	8018dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018b0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018b0e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018b12:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8018b16:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018b1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018b1c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018b20:	2b00      	cmp	r3, #0
 8018b22:	dd0e      	ble.n	8018b42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018b24:	1402      	asrs	r2, r0, #16
 8018b26:	d405      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b28:	42ba      	cmp	r2, r7
 8018b2a:	da03      	bge.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b2c:	140a      	asrs	r2, r1, #16
 8018b2e:	d401      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b30:	42b2      	cmp	r2, r6
 8018b32:	db07      	blt.n	8018b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018b34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018b36:	4410      	add	r0, r2
 8018b38:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018b3a:	3b01      	subs	r3, #1
 8018b3c:	4411      	add	r1, r2
 8018b3e:	3502      	adds	r5, #2
 8018b40:	e7ee      	b.n	8018b20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018b42:	d017      	beq.n	8018b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018b44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018b46:	1e5a      	subs	r2, r3, #1
 8018b48:	fb04 0402 	mla	r4, r4, r2, r0
 8018b4c:	1424      	asrs	r4, r4, #16
 8018b4e:	d409      	bmi.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b50:	42bc      	cmp	r4, r7
 8018b52:	da07      	bge.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018b56:	fb04 1202 	mla	r2, r4, r2, r1
 8018b5a:	1412      	asrs	r2, r2, #16
 8018b5c:	d402      	bmi.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b5e:	42b2      	cmp	r2, r6
 8018b60:	f2c0 80bf 	blt.w	8018ce2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018b64:	2700      	movs	r7, #0
 8018b66:	19da      	adds	r2, r3, r7
 8018b68:	2a00      	cmp	r2, #0
 8018b6a:	dc3e      	bgt.n	8018bea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018b6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b70:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018b74:	f1bb 0f00 	cmp.w	fp, #0
 8018b78:	f340 8121 	ble.w	8018dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018b7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018b8a:	f1bb 0b01 	subs.w	fp, fp, #1
 8018b8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b96:	eeb0 6a62 	vmov.f32	s12, s5
 8018b9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ba2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ba6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018baa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018bae:	eeb0 6a43 	vmov.f32	s12, s6
 8018bb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bb6:	ee12 2a90 	vmov	r2, s5
 8018bba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018bbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bc2:	ee13 2a10 	vmov	r2, s6
 8018bc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bca:	9313      	str	r3, [sp, #76]	; 0x4c
 8018bcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bce:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bd2:	9a03      	ldr	r2, [sp, #12]
 8018bd4:	9314      	str	r3, [sp, #80]	; 0x50
 8018bd6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018bda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bdc:	eeb0 3a67 	vmov.f32	s6, s15
 8018be0:	bf08      	it	eq
 8018be2:	4613      	moveq	r3, r2
 8018be4:	eef0 2a47 	vmov.f32	s5, s14
 8018be8:	e789      	b.n	8018afe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018bea:	1406      	asrs	r6, r0, #16
 8018bec:	d42d      	bmi.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018bee:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8018bf2:	42b4      	cmp	r4, r6
 8018bf4:	dd29      	ble.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018bf6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8018bfa:	d426      	bmi.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018bfc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8018c00:	4562      	cmp	r2, ip
 8018c02:	dd22      	ble.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018c04:	b224      	sxth	r4, r4
 8018c06:	9a01      	ldr	r2, [sp, #4]
 8018c08:	fb0c 6404 	mla	r4, ip, r4, r6
 8018c0c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8018c10:	0e22      	lsrs	r2, r4, #24
 8018c12:	d01a      	beq.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018c14:	9e04      	ldr	r6, [sp, #16]
 8018c16:	4372      	muls	r2, r6
 8018c18:	1c56      	adds	r6, r2, #1
 8018c1a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8018c1e:	1212      	asrs	r2, r2, #8
 8018c20:	0a26      	lsrs	r6, r4, #8
 8018c22:	2aff      	cmp	r2, #255	; 0xff
 8018c24:	9605      	str	r6, [sp, #20]
 8018c26:	d116      	bne.n	8018c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018c28:	f06f 0201 	mvn.w	r2, #1
 8018c2c:	fb02 fc07 	mul.w	ip, r2, r7
 8018c30:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8018c34:	0962      	lsrs	r2, r4, #5
 8018c36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c3a:	f026 0607 	bic.w	r6, r6, #7
 8018c3e:	4316      	orrs	r6, r2
 8018c40:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018c44:	4326      	orrs	r6, r4
 8018c46:	f825 600c 	strh.w	r6, [r5, ip]
 8018c4a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018c4c:	4410      	add	r0, r2
 8018c4e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018c50:	3f01      	subs	r7, #1
 8018c52:	4411      	add	r1, r2
 8018c54:	e787      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018c56:	f06f 0601 	mvn.w	r6, #1
 8018c5a:	437e      	muls	r6, r7
 8018c5c:	fa1f fa82 	uxth.w	sl, r2
 8018c60:	f835 8006 	ldrh.w	r8, [r5, r6]
 8018c64:	9602      	str	r6, [sp, #8]
 8018c66:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8018c6a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8018c6e:	43d2      	mvns	r2, r2
 8018c70:	b2d2      	uxtb	r2, r2
 8018c72:	fb1c fc0a 	smulbb	ip, ip, sl
 8018c76:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018c7a:	fb0e ce02 	mla	lr, lr, r2, ip
 8018c7e:	b2e4      	uxtb	r4, r4
 8018c80:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8018c84:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018c88:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8018c8c:	fa5f f888 	uxtb.w	r8, r8
 8018c90:	fb14 f40a 	smulbb	r4, r4, sl
 8018c94:	fb08 4402 	mla	r4, r8, r2, r4
 8018c98:	fa1f fe8e 	uxth.w	lr, lr
 8018c9c:	fb16 f60a 	smulbb	r6, r6, sl
 8018ca0:	b2a4      	uxth	r4, r4
 8018ca2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018ca6:	fb0c 6c02 	mla	ip, ip, r2, r6
 8018caa:	f10e 0201 	add.w	r2, lr, #1
 8018cae:	1c66      	adds	r6, r4, #1
 8018cb0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018cb4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8018cb8:	fa1f fc8c 	uxth.w	ip, ip
 8018cbc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018cc0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8018cc4:	ea46 0e0e 	orr.w	lr, r6, lr
 8018cc8:	f10c 0601 	add.w	r6, ip, #1
 8018ccc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8018cd0:	0976      	lsrs	r6, r6, #5
 8018cd2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018cd6:	9a02      	ldr	r2, [sp, #8]
 8018cd8:	ea4e 0e06 	orr.w	lr, lr, r6
 8018cdc:	f825 e002 	strh.w	lr, [r5, r2]
 8018ce0:	e7b3      	b.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018ce2:	f04f 0800 	mov.w	r8, #0
 8018ce6:	eba3 0208 	sub.w	r2, r3, r8
 8018cea:	2a00      	cmp	r2, #0
 8018cec:	f77f af3e 	ble.w	8018b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cf0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8018cf4:	1404      	asrs	r4, r0, #16
 8018cf6:	140a      	asrs	r2, r1, #16
 8018cf8:	fb06 4202 	mla	r2, r6, r2, r4
 8018cfc:	9c01      	ldr	r4, [sp, #4]
 8018cfe:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8018d02:	0e22      	lsrs	r2, r4, #24
 8018d04:	d016      	beq.n	8018d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018d06:	9e04      	ldr	r6, [sp, #16]
 8018d08:	4372      	muls	r2, r6
 8018d0a:	1c56      	adds	r6, r2, #1
 8018d0c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8018d10:	1212      	asrs	r2, r2, #8
 8018d12:	2aff      	cmp	r2, #255	; 0xff
 8018d14:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8018d18:	d113      	bne.n	8018d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8018d1a:	0962      	lsrs	r2, r4, #5
 8018d1c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8018d20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d24:	f026 0607 	bic.w	r6, r6, #7
 8018d28:	4316      	orrs	r6, r2
 8018d2a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018d2e:	4326      	orrs	r6, r4
 8018d30:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8018d34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018d36:	4410      	add	r0, r2
 8018d38:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018d3a:	f108 0801 	add.w	r8, r8, #1
 8018d3e:	4411      	add	r1, r2
 8018d40:	e7d1      	b.n	8018ce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8018d42:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8018d46:	fa1f fa82 	uxth.w	sl, r2
 8018d4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018d4e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8018d52:	43d2      	mvns	r2, r2
 8018d54:	b2d2      	uxtb	r2, r2
 8018d56:	fb17 f70a 	smulbb	r7, r7, sl
 8018d5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d5e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8018d62:	b2e4      	uxtb	r4, r4
 8018d64:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018d68:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018d6c:	fa5f fe8e 	uxtb.w	lr, lr
 8018d70:	fb14 f40a 	smulbb	r4, r4, sl
 8018d74:	fb0e 4402 	mla	r4, lr, r2, r4
 8018d78:	b2f6      	uxtb	r6, r6
 8018d7a:	fa1f fc8c 	uxth.w	ip, ip
 8018d7e:	fb16 f60a 	smulbb	r6, r6, sl
 8018d82:	b2a4      	uxth	r4, r4
 8018d84:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018d88:	fb07 6702 	mla	r7, r7, r2, r6
 8018d8c:	f10c 0201 	add.w	r2, ip, #1
 8018d90:	1c66      	adds	r6, r4, #1
 8018d92:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018d96:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8018d9a:	b2bf      	uxth	r7, r7
 8018d9c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018da0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018da4:	ea46 0c0c 	orr.w	ip, r6, ip
 8018da8:	1c7e      	adds	r6, r7, #1
 8018daa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018dae:	0976      	lsrs	r6, r6, #5
 8018db0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018db4:	ea4c 0c06 	orr.w	ip, ip, r6
 8018db8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8018dbc:	e7ba      	b.n	8018d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018dbe:	b007      	add	sp, #28
 8018dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018dc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dc8:	b085      	sub	sp, #20
 8018dca:	468b      	mov	fp, r1
 8018dcc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018dce:	9203      	str	r2, [sp, #12]
 8018dd0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018dd4:	6841      	ldr	r1, [r0, #4]
 8018dd6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8018dda:	fb01 2404 	mla	r4, r1, r4, r2
 8018dde:	6802      	ldr	r2, [r0, #0]
 8018de0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018de4:	f8d8 2000 	ldr.w	r2, [r8]
 8018de8:	9201      	str	r2, [sp, #4]
 8018dea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018dee:	f1bb 0f00 	cmp.w	fp, #0
 8018df2:	dc03      	bgt.n	8018dfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018df4:	9a03      	ldr	r2, [sp, #12]
 8018df6:	2a00      	cmp	r2, #0
 8018df8:	f340 814f 	ble.w	801909a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018dfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018dfe:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018e02:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018e06:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018e0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018e10:	2b00      	cmp	r3, #0
 8018e12:	dd0e      	ble.n	8018e32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018e14:	1408      	asrs	r0, r1, #16
 8018e16:	d405      	bmi.n	8018e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018e18:	42b8      	cmp	r0, r7
 8018e1a:	da03      	bge.n	8018e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018e1c:	1410      	asrs	r0, r2, #16
 8018e1e:	d401      	bmi.n	8018e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018e20:	42b0      	cmp	r0, r6
 8018e22:	db07      	blt.n	8018e34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018e24:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018e26:	4401      	add	r1, r0
 8018e28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018e2a:	3b01      	subs	r3, #1
 8018e2c:	4402      	add	r2, r0
 8018e2e:	3402      	adds	r4, #2
 8018e30:	e7ee      	b.n	8018e10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018e32:	d017      	beq.n	8018e64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e34:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018e36:	1e58      	subs	r0, r3, #1
 8018e38:	fb05 1500 	mla	r5, r5, r0, r1
 8018e3c:	142d      	asrs	r5, r5, #16
 8018e3e:	d409      	bmi.n	8018e54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e40:	42bd      	cmp	r5, r7
 8018e42:	da07      	bge.n	8018e54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e44:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018e46:	fb05 2000 	mla	r0, r5, r0, r2
 8018e4a:	1400      	asrs	r0, r0, #16
 8018e4c:	d402      	bmi.n	8018e54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e4e:	42b0      	cmp	r0, r6
 8018e50:	f2c0 80ba 	blt.w	8018fc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018e54:	2600      	movs	r6, #0
 8018e56:	1998      	adds	r0, r3, r6
 8018e58:	2800      	cmp	r0, #0
 8018e5a:	dc3e      	bgt.n	8018eda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018e5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e64:	f1bb 0f00 	cmp.w	fp, #0
 8018e68:	f340 8117 	ble.w	801909a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018e6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e7a:	f1bb 0b01 	subs.w	fp, fp, #1
 8018e7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e86:	eeb0 6a62 	vmov.f32	s12, s5
 8018e8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e96:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018e9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e9e:	eeb0 6a43 	vmov.f32	s12, s6
 8018ea2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ea6:	ee12 2a90 	vmov	r2, s5
 8018eaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018eae:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eb2:	ee13 2a10 	vmov	r2, s6
 8018eb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018eba:	9311      	str	r3, [sp, #68]	; 0x44
 8018ebc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ebe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ec2:	9a03      	ldr	r2, [sp, #12]
 8018ec4:	9312      	str	r3, [sp, #72]	; 0x48
 8018ec6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018eca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ecc:	eeb0 3a67 	vmov.f32	s6, s15
 8018ed0:	bf08      	it	eq
 8018ed2:	4613      	moveq	r3, r2
 8018ed4:	eef0 2a47 	vmov.f32	s5, s14
 8018ed8:	e789      	b.n	8018dee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018eda:	140f      	asrs	r7, r1, #16
 8018edc:	d424      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ede:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018ee2:	42bd      	cmp	r5, r7
 8018ee4:	dd20      	ble.n	8018f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ee6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018eea:	d41d      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018eec:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8018ef0:	4560      	cmp	r0, ip
 8018ef2:	dd19      	ble.n	8018f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ef4:	b22d      	sxth	r5, r5
 8018ef6:	fb0c 7505 	mla	r5, ip, r5, r7
 8018efa:	9801      	ldr	r0, [sp, #4]
 8018efc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8018f00:	0e07      	lsrs	r7, r0, #24
 8018f02:	2fff      	cmp	r7, #255	; 0xff
 8018f04:	d116      	bne.n	8018f34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018f06:	f06f 0501 	mvn.w	r5, #1
 8018f0a:	fb05 f706 	mul.w	r7, r5, r6
 8018f0e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8018f12:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8018f16:	0945      	lsrs	r5, r0, #5
 8018f18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018f1c:	ea4c 0505 	orr.w	r5, ip, r5
 8018f20:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018f24:	4305      	orrs	r5, r0
 8018f26:	53e5      	strh	r5, [r4, r7]
 8018f28:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018f2a:	4401      	add	r1, r0
 8018f2c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018f2e:	3e01      	subs	r6, #1
 8018f30:	4402      	add	r2, r0
 8018f32:	e790      	b.n	8018e56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018f34:	b2fd      	uxtb	r5, r7
 8018f36:	2f00      	cmp	r7, #0
 8018f38:	d0f6      	beq.n	8018f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018f3a:	f06f 0701 	mvn.w	r7, #1
 8018f3e:	4377      	muls	r7, r6
 8018f40:	fa1f f985 	uxth.w	r9, r5
 8018f44:	f834 e007 	ldrh.w	lr, [r4, r7]
 8018f48:	9702      	str	r7, [sp, #8]
 8018f4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018f4e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8018f52:	43ed      	mvns	r5, r5
 8018f54:	b2ed      	uxtb	r5, r5
 8018f56:	fb17 f709 	smulbb	r7, r7, r9
 8018f5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018f5e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8018f62:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018f66:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018f6a:	b2c0      	uxtb	r0, r0
 8018f6c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018f70:	fa5f fe8e 	uxtb.w	lr, lr
 8018f74:	fb10 f009 	smulbb	r0, r0, r9
 8018f78:	fb0e 0005 	mla	r0, lr, r5, r0
 8018f7c:	b280      	uxth	r0, r0
 8018f7e:	fa1f fc8c 	uxth.w	ip, ip
 8018f82:	fb1a fa09 	smulbb	sl, sl, r9
 8018f86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018f8a:	fb07 a705 	mla	r7, r7, r5, sl
 8018f8e:	f100 0a01 	add.w	sl, r0, #1
 8018f92:	f10c 0501 	add.w	r5, ip, #1
 8018f96:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018f9a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018f9e:	b2bf      	uxth	r7, r7
 8018fa0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018fa4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018fa8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018fac:	f107 0a01 	add.w	sl, r7, #1
 8018fb0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018fb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018fb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018fbc:	9802      	ldr	r0, [sp, #8]
 8018fbe:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018fc2:	f824 c000 	strh.w	ip, [r4, r0]
 8018fc6:	e7af      	b.n	8018f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018fc8:	f04f 0e00 	mov.w	lr, #0
 8018fcc:	eba3 000e 	sub.w	r0, r3, lr
 8018fd0:	2800      	cmp	r0, #0
 8018fd2:	f77f af43 	ble.w	8018e5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018fd6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018fda:	140d      	asrs	r5, r1, #16
 8018fdc:	1410      	asrs	r0, r2, #16
 8018fde:	fb06 5000 	mla	r0, r6, r0, r5
 8018fe2:	9d01      	ldr	r5, [sp, #4]
 8018fe4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018fe8:	0e2e      	lsrs	r6, r5, #24
 8018fea:	2eff      	cmp	r6, #255	; 0xff
 8018fec:	d112      	bne.n	8019014 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8018fee:	482c      	ldr	r0, [pc, #176]	; (80190a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8018ff0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018ff4:	0968      	lsrs	r0, r5, #5
 8018ff6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ffa:	4330      	orrs	r0, r6
 8018ffc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019000:	4328      	orrs	r0, r5
 8019002:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8019006:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019008:	4401      	add	r1, r0
 801900a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801900c:	f10e 0e01 	add.w	lr, lr, #1
 8019010:	4402      	add	r2, r0
 8019012:	e7db      	b.n	8018fcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019014:	b2f0      	uxtb	r0, r6
 8019016:	2e00      	cmp	r6, #0
 8019018:	d0f5      	beq.n	8019006 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801901a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801901e:	fa1f f980 	uxth.w	r9, r0
 8019022:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019026:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801902a:	43c0      	mvns	r0, r0
 801902c:	b2c0      	uxtb	r0, r0
 801902e:	fb16 f609 	smulbb	r6, r6, r9
 8019032:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019036:	fb07 6700 	mla	r7, r7, r0, r6
 801903a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801903e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019042:	b2ed      	uxtb	r5, r5
 8019044:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019048:	fa5f fc8c 	uxtb.w	ip, ip
 801904c:	fb15 f509 	smulbb	r5, r5, r9
 8019050:	fb0c 5500 	mla	r5, ip, r0, r5
 8019054:	b2bf      	uxth	r7, r7
 8019056:	fb1a fa09 	smulbb	sl, sl, r9
 801905a:	b2ad      	uxth	r5, r5
 801905c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019060:	fb06 a600 	mla	r6, r6, r0, sl
 8019064:	1c78      	adds	r0, r7, #1
 8019066:	f105 0a01 	add.w	sl, r5, #1
 801906a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801906e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019072:	b2b6      	uxth	r6, r6
 8019074:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019078:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801907c:	ea4a 0707 	orr.w	r7, sl, r7
 8019080:	f106 0a01 	add.w	sl, r6, #1
 8019084:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019088:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801908c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019090:	ea47 070a 	orr.w	r7, r7, sl
 8019094:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8019098:	e7b5      	b.n	8019006 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801909a:	b005      	add	sp, #20
 801909c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190a0:	fffff800 	.word	0xfffff800

080190a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190a8:	b087      	sub	sp, #28
 80190aa:	468b      	mov	fp, r1
 80190ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 80190ae:	9203      	str	r2, [sp, #12]
 80190b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80190b4:	9204      	str	r2, [sp, #16]
 80190b6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80190ba:	6841      	ldr	r1, [r0, #4]
 80190bc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80190c0:	fb01 2404 	mla	r4, r1, r4, r2
 80190c4:	6802      	ldr	r2, [r0, #0]
 80190c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80190ca:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80190ce:	3201      	adds	r2, #1
 80190d0:	f022 0201 	bic.w	r2, r2, #1
 80190d4:	9200      	str	r2, [sp, #0]
 80190d6:	f8d9 2000 	ldr.w	r2, [r9]
 80190da:	9201      	str	r2, [sp, #4]
 80190dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80190e0:	f1bb 0f00 	cmp.w	fp, #0
 80190e4:	dc03      	bgt.n	80190ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80190e6:	9a03      	ldr	r2, [sp, #12]
 80190e8:	2a00      	cmp	r2, #0
 80190ea:	f340 8169 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80190ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80190f0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80190f4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80190f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80190fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80190fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019102:	2b00      	cmp	r3, #0
 8019104:	dd0e      	ble.n	8019124 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019106:	1402      	asrs	r2, r0, #16
 8019108:	d405      	bmi.n	8019116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801910a:	42ba      	cmp	r2, r7
 801910c:	da03      	bge.n	8019116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801910e:	140a      	asrs	r2, r1, #16
 8019110:	d401      	bmi.n	8019116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019112:	42b2      	cmp	r2, r6
 8019114:	db07      	blt.n	8019126 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019116:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019118:	4410      	add	r0, r2
 801911a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801911c:	3b01      	subs	r3, #1
 801911e:	4411      	add	r1, r2
 8019120:	3402      	adds	r4, #2
 8019122:	e7ee      	b.n	8019102 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019124:	d017      	beq.n	8019156 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019126:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019128:	1e5a      	subs	r2, r3, #1
 801912a:	fb05 0502 	mla	r5, r5, r2, r0
 801912e:	142d      	asrs	r5, r5, #16
 8019130:	d409      	bmi.n	8019146 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019132:	42bd      	cmp	r5, r7
 8019134:	da07      	bge.n	8019146 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019136:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019138:	fb05 1202 	mla	r2, r5, r2, r1
 801913c:	1412      	asrs	r2, r2, #16
 801913e:	d402      	bmi.n	8019146 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019140:	42b2      	cmp	r2, r6
 8019142:	f2c0 80c7 	blt.w	80192d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8019146:	2700      	movs	r7, #0
 8019148:	19da      	adds	r2, r3, r7
 801914a:	2a00      	cmp	r2, #0
 801914c:	dc3e      	bgt.n	80191cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801914e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019152:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019156:	f1bb 0f00 	cmp.w	fp, #0
 801915a:	f340 8131 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801915e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019162:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019166:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801916a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801916c:	f1bb 0b01 	subs.w	fp, fp, #1
 8019170:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019174:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019178:	eeb0 6a62 	vmov.f32	s12, s5
 801917c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019180:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019184:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019188:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801918c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019190:	eeb0 6a43 	vmov.f32	s12, s6
 8019194:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019198:	ee12 2a90 	vmov	r2, s5
 801919c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80191a4:	ee13 2a10 	vmov	r2, s6
 80191a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80191ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80191b4:	9a03      	ldr	r2, [sp, #12]
 80191b6:	9314      	str	r3, [sp, #80]	; 0x50
 80191b8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80191bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191be:	eeb0 3a67 	vmov.f32	s6, s15
 80191c2:	bf08      	it	eq
 80191c4:	4613      	moveq	r3, r2
 80191c6:	eef0 2a47 	vmov.f32	s5, s14
 80191ca:	e789      	b.n	80190e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80191cc:	1405      	asrs	r5, r0, #16
 80191ce:	d435      	bmi.n	801923c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191d0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80191d4:	42aa      	cmp	r2, r5
 80191d6:	dd31      	ble.n	801923c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191d8:	140e      	asrs	r6, r1, #16
 80191da:	d42f      	bmi.n	801923c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191dc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80191e0:	42b2      	cmp	r2, r6
 80191e2:	dd2b      	ble.n	801923c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191e4:	9a00      	ldr	r2, [sp, #0]
 80191e6:	fb06 5502 	mla	r5, r6, r2, r5
 80191ea:	086a      	lsrs	r2, r5, #1
 80191ec:	9e01      	ldr	r6, [sp, #4]
 80191ee:	5cb2      	ldrb	r2, [r6, r2]
 80191f0:	07ee      	lsls	r6, r5, #31
 80191f2:	bf54      	ite	pl
 80191f4:	f002 020f 	andpl.w	r2, r2, #15
 80191f8:	1112      	asrmi	r2, r2, #4
 80191fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80191fe:	b2d2      	uxtb	r2, r2
 8019200:	b1e2      	cbz	r2, 801923c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019202:	9d04      	ldr	r5, [sp, #16]
 8019204:	436a      	muls	r2, r5
 8019206:	1c55      	adds	r5, r2, #1
 8019208:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801920c:	4d6e      	ldr	r5, [pc, #440]	; (80193c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801920e:	682d      	ldr	r5, [r5, #0]
 8019210:	1212      	asrs	r2, r2, #8
 8019212:	0a2e      	lsrs	r6, r5, #8
 8019214:	2aff      	cmp	r2, #255	; 0xff
 8019216:	9605      	str	r6, [sp, #20]
 8019218:	d116      	bne.n	8019248 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801921a:	f06f 0201 	mvn.w	r2, #1
 801921e:	fb02 fc07 	mul.w	ip, r2, r7
 8019222:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019226:	096a      	lsrs	r2, r5, #5
 8019228:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801922c:	f026 0607 	bic.w	r6, r6, #7
 8019230:	4316      	orrs	r6, r2
 8019232:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019236:	432e      	orrs	r6, r5
 8019238:	f824 600c 	strh.w	r6, [r4, ip]
 801923c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801923e:	4410      	add	r0, r2
 8019240:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019242:	3f01      	subs	r7, #1
 8019244:	4411      	add	r1, r2
 8019246:	e77f      	b.n	8019148 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8019248:	f06f 0601 	mvn.w	r6, #1
 801924c:	437e      	muls	r6, r7
 801924e:	fa1f fa82 	uxth.w	sl, r2
 8019252:	f834 8006 	ldrh.w	r8, [r4, r6]
 8019256:	9602      	str	r6, [sp, #8]
 8019258:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801925c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019260:	43d2      	mvns	r2, r2
 8019262:	b2d2      	uxtb	r2, r2
 8019264:	fb1c fc0a 	smulbb	ip, ip, sl
 8019268:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801926c:	fb0e ce02 	mla	lr, lr, r2, ip
 8019270:	b2ed      	uxtb	r5, r5
 8019272:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019276:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801927a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801927e:	fa5f f888 	uxtb.w	r8, r8
 8019282:	fb15 f50a 	smulbb	r5, r5, sl
 8019286:	fb08 5502 	mla	r5, r8, r2, r5
 801928a:	fa1f fe8e 	uxth.w	lr, lr
 801928e:	fb16 f60a 	smulbb	r6, r6, sl
 8019292:	b2ad      	uxth	r5, r5
 8019294:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019298:	fb0c 6c02 	mla	ip, ip, r2, r6
 801929c:	f10e 0201 	add.w	r2, lr, #1
 80192a0:	1c6e      	adds	r6, r5, #1
 80192a2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80192a6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80192aa:	fa1f fc8c 	uxth.w	ip, ip
 80192ae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80192b2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80192b6:	ea46 0e0e 	orr.w	lr, r6, lr
 80192ba:	f10c 0601 	add.w	r6, ip, #1
 80192be:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80192c2:	0976      	lsrs	r6, r6, #5
 80192c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80192c8:	9a02      	ldr	r2, [sp, #8]
 80192ca:	ea4e 0e06 	orr.w	lr, lr, r6
 80192ce:	f824 e002 	strh.w	lr, [r4, r2]
 80192d2:	e7b3      	b.n	801923c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80192d4:	f04f 0800 	mov.w	r8, #0
 80192d8:	eba3 0208 	sub.w	r2, r3, r8
 80192dc:	2a00      	cmp	r2, #0
 80192de:	f77f af36 	ble.w	801914e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192e2:	9e00      	ldr	r6, [sp, #0]
 80192e4:	1402      	asrs	r2, r0, #16
 80192e6:	140d      	asrs	r5, r1, #16
 80192e8:	fb06 2505 	mla	r5, r6, r5, r2
 80192ec:	086a      	lsrs	r2, r5, #1
 80192ee:	9e01      	ldr	r6, [sp, #4]
 80192f0:	5cb2      	ldrb	r2, [r6, r2]
 80192f2:	07ed      	lsls	r5, r5, #31
 80192f4:	bf54      	ite	pl
 80192f6:	f002 020f 	andpl.w	r2, r2, #15
 80192fa:	1112      	asrmi	r2, r2, #4
 80192fc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019300:	b2d2      	uxtb	r2, r2
 8019302:	b1c2      	cbz	r2, 8019336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019304:	9d04      	ldr	r5, [sp, #16]
 8019306:	436a      	muls	r2, r5
 8019308:	1c55      	adds	r5, r2, #1
 801930a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801930e:	4d2e      	ldr	r5, [pc, #184]	; (80193c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019310:	1212      	asrs	r2, r2, #8
 8019312:	682e      	ldr	r6, [r5, #0]
 8019314:	2aff      	cmp	r2, #255	; 0xff
 8019316:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801931a:	d113      	bne.n	8019344 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801931c:	0972      	lsrs	r2, r6, #5
 801931e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8019322:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019326:	f025 0507 	bic.w	r5, r5, #7
 801932a:	4315      	orrs	r5, r2
 801932c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019330:	4335      	orrs	r5, r6
 8019332:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8019336:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019338:	4410      	add	r0, r2
 801933a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801933c:	f108 0801 	add.w	r8, r8, #1
 8019340:	4411      	add	r1, r2
 8019342:	e7c9      	b.n	80192d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019344:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019348:	fa1f fa82 	uxth.w	sl, r2
 801934c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019350:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019354:	43d2      	mvns	r2, r2
 8019356:	b2d2      	uxtb	r2, r2
 8019358:	fb17 f70a 	smulbb	r7, r7, sl
 801935c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019360:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019364:	b2f6      	uxtb	r6, r6
 8019366:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801936a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801936e:	fa5f fe8e 	uxtb.w	lr, lr
 8019372:	fb16 f60a 	smulbb	r6, r6, sl
 8019376:	fb0e 6602 	mla	r6, lr, r2, r6
 801937a:	b2ed      	uxtb	r5, r5
 801937c:	fa1f fc8c 	uxth.w	ip, ip
 8019380:	fb15 f50a 	smulbb	r5, r5, sl
 8019384:	b2b6      	uxth	r6, r6
 8019386:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801938a:	fb07 5702 	mla	r7, r7, r2, r5
 801938e:	f10c 0201 	add.w	r2, ip, #1
 8019392:	1c75      	adds	r5, r6, #1
 8019394:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019398:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801939c:	b2bf      	uxth	r7, r7
 801939e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80193a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80193a6:	ea45 0c0c 	orr.w	ip, r5, ip
 80193aa:	1c7d      	adds	r5, r7, #1
 80193ac:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80193b0:	096d      	lsrs	r5, r5, #5
 80193b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80193b6:	ea4c 0c05 	orr.w	ip, ip, r5
 80193ba:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80193be:	e7ba      	b.n	8019336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80193c0:	b007      	add	sp, #28
 80193c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193c6:	bf00      	nop
 80193c8:	20020094 	.word	0x20020094

080193cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193d0:	b087      	sub	sp, #28
 80193d2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80196e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80193d6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80193d8:	9205      	str	r2, [sp, #20]
 80193da:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80193de:	9101      	str	r1, [sp, #4]
 80193e0:	6841      	ldr	r1, [r0, #4]
 80193e2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80193e6:	fb01 2404 	mla	r4, r1, r4, r2
 80193ea:	6802      	ldr	r2, [r0, #0]
 80193ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80193f0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80193f4:	3201      	adds	r2, #1
 80193f6:	f022 0201 	bic.w	r2, r2, #1
 80193fa:	9202      	str	r2, [sp, #8]
 80193fc:	f8db 2000 	ldr.w	r2, [fp]
 8019400:	9203      	str	r2, [sp, #12]
 8019402:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019406:	9a01      	ldr	r2, [sp, #4]
 8019408:	2a00      	cmp	r2, #0
 801940a:	dc03      	bgt.n	8019414 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801940c:	9a05      	ldr	r2, [sp, #20]
 801940e:	2a00      	cmp	r2, #0
 8019410:	f340 8162 	ble.w	80196d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019414:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019416:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801941a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801941e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019422:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019424:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019428:	2b00      	cmp	r3, #0
 801942a:	dd0e      	ble.n	801944a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801942c:	1402      	asrs	r2, r0, #16
 801942e:	d405      	bmi.n	801943c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019430:	42ba      	cmp	r2, r7
 8019432:	da03      	bge.n	801943c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019434:	140a      	asrs	r2, r1, #16
 8019436:	d401      	bmi.n	801943c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019438:	42b2      	cmp	r2, r6
 801943a:	db07      	blt.n	801944c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801943c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801943e:	4410      	add	r0, r2
 8019440:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019442:	3b01      	subs	r3, #1
 8019444:	4411      	add	r1, r2
 8019446:	3402      	adds	r4, #2
 8019448:	e7ee      	b.n	8019428 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801944a:	d017      	beq.n	801947c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801944c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801944e:	1e5a      	subs	r2, r3, #1
 8019450:	fb05 0502 	mla	r5, r5, r2, r0
 8019454:	142d      	asrs	r5, r5, #16
 8019456:	d409      	bmi.n	801946c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019458:	42bd      	cmp	r5, r7
 801945a:	da07      	bge.n	801946c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801945c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801945e:	fb05 1202 	mla	r2, r5, r2, r1
 8019462:	1412      	asrs	r2, r2, #16
 8019464:	d402      	bmi.n	801946c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019466:	42b2      	cmp	r2, r6
 8019468:	f2c0 80c3 	blt.w	80195f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801946c:	2500      	movs	r5, #0
 801946e:	195a      	adds	r2, r3, r5
 8019470:	2a00      	cmp	r2, #0
 8019472:	dc3f      	bgt.n	80194f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019474:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019478:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801947c:	9b01      	ldr	r3, [sp, #4]
 801947e:	2b00      	cmp	r3, #0
 8019480:	f340 812a 	ble.w	80196d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019484:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019488:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801948c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019490:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019492:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801949a:	eeb0 6a62 	vmov.f32	s12, s5
 801949e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80194a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80194aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80194ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80194b2:	eeb0 6a43 	vmov.f32	s12, s6
 80194b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80194ba:	ee12 2a90 	vmov	r2, s5
 80194be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80194c6:	ee13 2a10 	vmov	r2, s6
 80194ca:	9313      	str	r3, [sp, #76]	; 0x4c
 80194cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80194d2:	9314      	str	r3, [sp, #80]	; 0x50
 80194d4:	9b01      	ldr	r3, [sp, #4]
 80194d6:	9a05      	ldr	r2, [sp, #20]
 80194d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194dc:	3b01      	subs	r3, #1
 80194de:	9301      	str	r3, [sp, #4]
 80194e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80194e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194e6:	eeb0 3a67 	vmov.f32	s6, s15
 80194ea:	bf08      	it	eq
 80194ec:	4613      	moveq	r3, r2
 80194ee:	eef0 2a47 	vmov.f32	s5, s14
 80194f2:	e788      	b.n	8019406 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80194f4:	1406      	asrs	r6, r0, #16
 80194f6:	d42c      	bmi.n	8019552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80194f8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80194fc:	42b2      	cmp	r2, r6
 80194fe:	dd28      	ble.n	8019552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019500:	140f      	asrs	r7, r1, #16
 8019502:	d426      	bmi.n	8019552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019504:	f8db 200c 	ldr.w	r2, [fp, #12]
 8019508:	42ba      	cmp	r2, r7
 801950a:	dd22      	ble.n	8019552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801950c:	9a02      	ldr	r2, [sp, #8]
 801950e:	fb07 6602 	mla	r6, r7, r2, r6
 8019512:	0872      	lsrs	r2, r6, #1
 8019514:	9f03      	ldr	r7, [sp, #12]
 8019516:	5cba      	ldrb	r2, [r7, r2]
 8019518:	07f6      	lsls	r6, r6, #31
 801951a:	bf54      	ite	pl
 801951c:	f002 020f 	andpl.w	r2, r2, #15
 8019520:	1112      	asrmi	r2, r2, #4
 8019522:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019526:	b2d2      	uxtb	r2, r2
 8019528:	2aff      	cmp	r2, #255	; 0xff
 801952a:	d118      	bne.n	801955e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801952c:	f8d8 2000 	ldr.w	r2, [r8]
 8019530:	f06f 0601 	mvn.w	r6, #1
 8019534:	fb06 f705 	mul.w	r7, r6, r5
 8019538:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801953c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019540:	0956      	lsrs	r6, r2, #5
 8019542:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019546:	ea4c 0606 	orr.w	r6, ip, r6
 801954a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801954e:	4316      	orrs	r6, r2
 8019550:	53e6      	strh	r6, [r4, r7]
 8019552:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019554:	4410      	add	r0, r2
 8019556:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019558:	3d01      	subs	r5, #1
 801955a:	4411      	add	r1, r2
 801955c:	e787      	b.n	801946e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801955e:	2a00      	cmp	r2, #0
 8019560:	d0f7      	beq.n	8019552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019562:	f06f 0601 	mvn.w	r6, #1
 8019566:	436e      	muls	r6, r5
 8019568:	f8d8 c000 	ldr.w	ip, [r8]
 801956c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019570:	9604      	str	r6, [sp, #16]
 8019572:	fa1f f982 	uxth.w	r9, r2
 8019576:	ea4f 272e 	mov.w	r7, lr, asr #8
 801957a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801957e:	43d2      	mvns	r2, r2
 8019580:	b2d2      	uxtb	r2, r2
 8019582:	fb16 f609 	smulbb	r6, r6, r9
 8019586:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801958a:	fb07 6702 	mla	r7, r7, r2, r6
 801958e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8019592:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019596:	fa5f fc8c 	uxtb.w	ip, ip
 801959a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801959e:	fa5f fe8e 	uxtb.w	lr, lr
 80195a2:	fb1c fc09 	smulbb	ip, ip, r9
 80195a6:	fb0e cc02 	mla	ip, lr, r2, ip
 80195aa:	b2bf      	uxth	r7, r7
 80195ac:	fb1a fa09 	smulbb	sl, sl, r9
 80195b0:	fa1f fc8c 	uxth.w	ip, ip
 80195b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80195b8:	fb06 a602 	mla	r6, r6, r2, sl
 80195bc:	1c7a      	adds	r2, r7, #1
 80195be:	f10c 0a01 	add.w	sl, ip, #1
 80195c2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80195c6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80195ca:	b2b6      	uxth	r6, r6
 80195cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195d4:	ea4a 0707 	orr.w	r7, sl, r7
 80195d8:	f106 0a01 	add.w	sl, r6, #1
 80195dc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80195e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195e8:	9a04      	ldr	r2, [sp, #16]
 80195ea:	ea47 070a 	orr.w	r7, r7, sl
 80195ee:	52a7      	strh	r7, [r4, r2]
 80195f0:	e7af      	b.n	8019552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80195f2:	f04f 0e00 	mov.w	lr, #0
 80195f6:	eba3 020e 	sub.w	r2, r3, lr
 80195fa:	2a00      	cmp	r2, #0
 80195fc:	f77f af3a 	ble.w	8019474 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019600:	9e02      	ldr	r6, [sp, #8]
 8019602:	1402      	asrs	r2, r0, #16
 8019604:	140d      	asrs	r5, r1, #16
 8019606:	fb06 2505 	mla	r5, r6, r5, r2
 801960a:	086a      	lsrs	r2, r5, #1
 801960c:	9e03      	ldr	r6, [sp, #12]
 801960e:	5cb2      	ldrb	r2, [r6, r2]
 8019610:	07ed      	lsls	r5, r5, #31
 8019612:	bf54      	ite	pl
 8019614:	f002 020f 	andpl.w	r2, r2, #15
 8019618:	1112      	asrmi	r2, r2, #4
 801961a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801961e:	b2d2      	uxtb	r2, r2
 8019620:	2aff      	cmp	r2, #255	; 0xff
 8019622:	d115      	bne.n	8019650 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019624:	f8d8 5000 	ldr.w	r5, [r8]
 8019628:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801962c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019630:	096a      	lsrs	r2, r5, #5
 8019632:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019636:	4332      	orrs	r2, r6
 8019638:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801963c:	432a      	orrs	r2, r5
 801963e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019642:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019644:	4410      	add	r0, r2
 8019646:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019648:	f10e 0e01 	add.w	lr, lr, #1
 801964c:	4411      	add	r1, r2
 801964e:	e7d2      	b.n	80195f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019650:	2a00      	cmp	r2, #0
 8019652:	d0f6      	beq.n	8019642 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019654:	f8d8 7000 	ldr.w	r7, [r8]
 8019658:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801965c:	fa1f f982 	uxth.w	r9, r2
 8019660:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019664:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8019668:	43d2      	mvns	r2, r2
 801966a:	b2d2      	uxtb	r2, r2
 801966c:	fb15 f509 	smulbb	r5, r5, r9
 8019670:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019674:	fb06 5602 	mla	r6, r6, r2, r5
 8019678:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801967c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019680:	b2ff      	uxtb	r7, r7
 8019682:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019686:	fa5f fc8c 	uxtb.w	ip, ip
 801968a:	fb17 f709 	smulbb	r7, r7, r9
 801968e:	fb0c 7702 	mla	r7, ip, r2, r7
 8019692:	b2b6      	uxth	r6, r6
 8019694:	fb1a fa09 	smulbb	sl, sl, r9
 8019698:	b2bf      	uxth	r7, r7
 801969a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801969e:	fb05 a502 	mla	r5, r5, r2, sl
 80196a2:	1c72      	adds	r2, r6, #1
 80196a4:	f107 0a01 	add.w	sl, r7, #1
 80196a8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80196ac:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80196b0:	b2ad      	uxth	r5, r5
 80196b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196b6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80196ba:	ea4a 0606 	orr.w	r6, sl, r6
 80196be:	f105 0a01 	add.w	sl, r5, #1
 80196c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80196c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196ce:	ea46 060a 	orr.w	r6, r6, sl
 80196d2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80196d6:	e7b4      	b.n	8019642 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80196d8:	b007      	add	sp, #28
 80196da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196de:	bf00      	nop
 80196e0:	20020094 	.word	0x20020094

080196e4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80196e4:	4770      	bx	lr

080196e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80196e6:	4770      	bx	lr

080196e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80196e8:	4770      	bx	lr

080196ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80196ea:	4770      	bx	lr

080196ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80196ec:	4770      	bx	lr

080196ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80196ee:	4770      	bx	lr

080196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80196f0:	4770      	bx	lr

080196f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80196f2:	4770      	bx	lr

080196f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80196f4:	4770      	bx	lr

080196f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80196f6:	4770      	bx	lr

080196f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80196f8:	4770      	bx	lr

080196fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80196fa:	4770      	bx	lr

080196fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80196fc:	4770      	bx	lr

080196fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80196fe:	4770      	bx	lr

08019700 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019700:	4770      	bx	lr

08019702 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019702:	4770      	bx	lr

08019704 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019704:	4770      	bx	lr

08019706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019706:	4770      	bx	lr

08019708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019708:	4770      	bx	lr

0801970a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801970a:	4770      	bx	lr

0801970c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801970c:	4770      	bx	lr

0801970e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801970e:	4770      	bx	lr

08019710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8019710:	4770      	bx	lr

08019712 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019712:	4770      	bx	lr

08019714 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8019714:	4770      	bx	lr

08019716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019716:	4770      	bx	lr

08019718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019718:	4770      	bx	lr

0801971a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801971a:	4770      	bx	lr

0801971c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801971c:	4770      	bx	lr
	...

08019720 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019720:	b508      	push	{r3, lr}
 8019722:	4b06      	ldr	r3, [pc, #24]	; (801973c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8019724:	8818      	ldrh	r0, [r3, #0]
 8019726:	b928      	cbnz	r0, 8019734 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8019728:	4b05      	ldr	r3, [pc, #20]	; (8019740 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801972a:	4a06      	ldr	r2, [pc, #24]	; (8019744 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801972c:	4806      	ldr	r0, [pc, #24]	; (8019748 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801972e:	2150      	movs	r1, #80	; 0x50
 8019730:	f009 fbea 	bl	8022f08 <__assert_func>
 8019734:	0040      	lsls	r0, r0, #1
 8019736:	b280      	uxth	r0, r0
 8019738:	bd08      	pop	{r3, pc}
 801973a:	bf00      	nop
 801973c:	20020086 	.word	0x20020086
 8019740:	080292ac 	.word	0x080292ac
 8019744:	080298a8 	.word	0x080298a8
 8019748:	080292ee 	.word	0x080292ee

0801974c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801974c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019750:	b08b      	sub	sp, #44	; 0x2c
 8019752:	460f      	mov	r7, r1
 8019754:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8019758:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801975c:	4616      	mov	r6, r2
 801975e:	f1bb 0f00 	cmp.w	fp, #0
 8019762:	d049      	beq.n	80197f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8019764:	6810      	ldr	r0, [r2, #0]
 8019766:	6851      	ldr	r1, [r2, #4]
 8019768:	ad06      	add	r5, sp, #24
 801976a:	c503      	stmia	r5!, {r0, r1}
 801976c:	6818      	ldr	r0, [r3, #0]
 801976e:	6859      	ldr	r1, [r3, #4]
 8019770:	ad08      	add	r5, sp, #32
 8019772:	c503      	stmia	r5!, {r0, r1}
 8019774:	a806      	add	r0, sp, #24
 8019776:	f7f9 fbeb 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801977a:	4631      	mov	r1, r6
 801977c:	a808      	add	r0, sp, #32
 801977e:	f7f9 fc0f 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019782:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019786:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801978a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801978e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8019792:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8019796:	fb16 2103 	smlabb	r1, r6, r3, r2
 801979a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801979e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80197a2:	4f5f      	ldr	r7, [pc, #380]	; (8019920 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80197a4:	440a      	add	r2, r1
 80197a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80197aa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80197ae:	6838      	ldr	r0, [r7, #0]
 80197b0:	4413      	add	r3, r2
 80197b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80197b6:	6803      	ldr	r3, [r0, #0]
 80197b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80197ba:	4798      	blx	r3
 80197bc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80197c0:	46b9      	mov	r9, r7
 80197c2:	d01c      	beq.n	80197fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80197c4:	f010 0f04 	tst.w	r0, #4
 80197c8:	d01d      	beq.n	8019806 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80197ca:	f8d9 0000 	ldr.w	r0, [r9]
 80197ce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80197d2:	6801      	ldr	r1, [r0, #0]
 80197d4:	f8cd b00c 	str.w	fp, [sp, #12]
 80197d8:	2700      	movs	r7, #0
 80197da:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80197de:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80197e2:	9402      	str	r4, [sp, #8]
 80197e4:	b2ad      	uxth	r5, r5
 80197e6:	fa1f f488 	uxth.w	r4, r8
 80197ea:	9501      	str	r5, [sp, #4]
 80197ec:	9400      	str	r4, [sp, #0]
 80197ee:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80197f0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80197f4:	4631      	mov	r1, r6
 80197f6:	47a0      	blx	r4
 80197f8:	b00b      	add	sp, #44	; 0x2c
 80197fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197fe:	b914      	cbnz	r4, 8019806 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019800:	f010 0f01 	tst.w	r0, #1
 8019804:	e7e0      	b.n	80197c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8019806:	f8d9 0000 	ldr.w	r0, [r9]
 801980a:	6803      	ldr	r3, [r0, #0]
 801980c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801980e:	4798      	blx	r3
 8019810:	4b44      	ldr	r3, [pc, #272]	; (8019924 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8019812:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8019816:	881a      	ldrh	r2, [r3, #0]
 8019818:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801981c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019820:	fb02 1404 	mla	r4, r2, r4, r1
 8019824:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019828:	469a      	mov	sl, r3
 801982a:	fb05 f502 	mul.w	r5, r5, r2
 801982e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8019832:	d059      	beq.n	80198e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8019834:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8019838:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801983c:	fa1f f28b 	uxth.w	r2, fp
 8019840:	fa1f f989 	uxth.w	r9, r9
 8019844:	469e      	mov	lr, r3
 8019846:	42ac      	cmp	r4, r5
 8019848:	d264      	bcs.n	8019914 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801984a:	eb04 0a07 	add.w	sl, r4, r7
 801984e:	4554      	cmp	r4, sl
 8019850:	d23d      	bcs.n	80198ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8019852:	8821      	ldrh	r1, [r4, #0]
 8019854:	f836 3b02 	ldrh.w	r3, [r6], #2
 8019858:	1208      	asrs	r0, r1, #8
 801985a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801985e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019862:	fb10 f009 	smulbb	r0, r0, r9
 8019866:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801986a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801986e:	00c9      	lsls	r1, r1, #3
 8019870:	fb0c 0c02 	mla	ip, ip, r2, r0
 8019874:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019878:	10d8      	asrs	r0, r3, #3
 801987a:	b2c9      	uxtb	r1, r1
 801987c:	00db      	lsls	r3, r3, #3
 801987e:	fa1f fc8c 	uxth.w	ip, ip
 8019882:	fb1b fb09 	smulbb	fp, fp, r9
 8019886:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801988a:	b2db      	uxtb	r3, r3
 801988c:	fb11 f109 	smulbb	r1, r1, r9
 8019890:	fb00 b002 	mla	r0, r0, r2, fp
 8019894:	fb03 1302 	mla	r3, r3, r2, r1
 8019898:	f10c 0b01 	add.w	fp, ip, #1
 801989c:	b29b      	uxth	r3, r3
 801989e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80198a2:	b280      	uxth	r0, r0
 80198a4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80198a8:	f103 0c01 	add.w	ip, r3, #1
 80198ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80198b0:	1c43      	adds	r3, r0, #1
 80198b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80198b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80198ba:	0940      	lsrs	r0, r0, #5
 80198bc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80198c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80198c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80198c8:	f824 cb02 	strh.w	ip, [r4], #2
 80198cc:	e7bf      	b.n	801984e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80198ce:	f8be 3000 	ldrh.w	r3, [lr]
 80198d2:	eba3 0308 	sub.w	r3, r3, r8
 80198d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80198da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80198de:	eba3 0308 	sub.w	r3, r3, r8
 80198e2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80198e6:	e7ae      	b.n	8019846 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80198e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80198ec:	f8d9 0000 	ldr.w	r0, [r9]
 80198f0:	42ac      	cmp	r4, r5
 80198f2:	6803      	ldr	r3, [r0, #0]
 80198f4:	d20e      	bcs.n	8019914 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80198f6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80198fa:	4632      	mov	r2, r6
 80198fc:	463b      	mov	r3, r7
 80198fe:	4621      	mov	r1, r4
 8019900:	47c0      	blx	r8
 8019902:	f8ba 3000 	ldrh.w	r3, [sl]
 8019906:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801990a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801990e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019912:	e7eb      	b.n	80198ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8019914:	4b02      	ldr	r3, [pc, #8]	; (8019920 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019916:	6818      	ldr	r0, [r3, #0]
 8019918:	6803      	ldr	r3, [r0, #0]
 801991a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801991c:	4798      	blx	r3
 801991e:	e76b      	b.n	80197f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8019920:	2002008c 	.word	0x2002008c
 8019924:	20020086 	.word	0x20020086

08019928 <_ZN8touchgfx8LCD16bppD0Ev>:
 8019928:	b510      	push	{r4, lr}
 801992a:	2178      	movs	r1, #120	; 0x78
 801992c:	4604      	mov	r4, r0
 801992e:	f009 fabd 	bl	8022eac <_ZdlPvj>
 8019932:	4620      	mov	r0, r4
 8019934:	bd10      	pop	{r4, pc}

08019936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019936:	b510      	push	{r4, lr}
 8019938:	2104      	movs	r1, #4
 801993a:	4604      	mov	r4, r0
 801993c:	f009 fab6 	bl	8022eac <_ZdlPvj>
 8019940:	4620      	mov	r0, r4
 8019942:	bd10      	pop	{r4, pc}

08019944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019944:	b510      	push	{r4, lr}
 8019946:	2104      	movs	r1, #4
 8019948:	4604      	mov	r4, r0
 801994a:	f009 faaf 	bl	8022eac <_ZdlPvj>
 801994e:	4620      	mov	r0, r4
 8019950:	bd10      	pop	{r4, pc}

08019952 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019952:	b510      	push	{r4, lr}
 8019954:	2104      	movs	r1, #4
 8019956:	4604      	mov	r4, r0
 8019958:	f009 faa8 	bl	8022eac <_ZdlPvj>
 801995c:	4620      	mov	r0, r4
 801995e:	bd10      	pop	{r4, pc}

08019960 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019960:	b510      	push	{r4, lr}
 8019962:	2104      	movs	r1, #4
 8019964:	4604      	mov	r4, r0
 8019966:	f009 faa1 	bl	8022eac <_ZdlPvj>
 801996a:	4620      	mov	r0, r4
 801996c:	bd10      	pop	{r4, pc}

0801996e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801996e:	b510      	push	{r4, lr}
 8019970:	2104      	movs	r1, #4
 8019972:	4604      	mov	r4, r0
 8019974:	f009 fa9a 	bl	8022eac <_ZdlPvj>
 8019978:	4620      	mov	r0, r4
 801997a:	bd10      	pop	{r4, pc}

0801997c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801997c:	b510      	push	{r4, lr}
 801997e:	2104      	movs	r1, #4
 8019980:	4604      	mov	r4, r0
 8019982:	f009 fa93 	bl	8022eac <_ZdlPvj>
 8019986:	4620      	mov	r0, r4
 8019988:	bd10      	pop	{r4, pc}

0801998a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801998a:	b510      	push	{r4, lr}
 801998c:	2104      	movs	r1, #4
 801998e:	4604      	mov	r4, r0
 8019990:	f009 fa8c 	bl	8022eac <_ZdlPvj>
 8019994:	4620      	mov	r0, r4
 8019996:	bd10      	pop	{r4, pc}

08019998 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8019998:	b510      	push	{r4, lr}
 801999a:	2104      	movs	r1, #4
 801999c:	4604      	mov	r4, r0
 801999e:	f009 fa85 	bl	8022eac <_ZdlPvj>
 80199a2:	4620      	mov	r0, r4
 80199a4:	bd10      	pop	{r4, pc}

080199a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80199a6:	b510      	push	{r4, lr}
 80199a8:	2104      	movs	r1, #4
 80199aa:	4604      	mov	r4, r0
 80199ac:	f009 fa7e 	bl	8022eac <_ZdlPvj>
 80199b0:	4620      	mov	r0, r4
 80199b2:	bd10      	pop	{r4, pc}

080199b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80199b4:	b510      	push	{r4, lr}
 80199b6:	2104      	movs	r1, #4
 80199b8:	4604      	mov	r4, r0
 80199ba:	f009 fa77 	bl	8022eac <_ZdlPvj>
 80199be:	4620      	mov	r0, r4
 80199c0:	bd10      	pop	{r4, pc}

080199c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80199c2:	b510      	push	{r4, lr}
 80199c4:	2104      	movs	r1, #4
 80199c6:	4604      	mov	r4, r0
 80199c8:	f009 fa70 	bl	8022eac <_ZdlPvj>
 80199cc:	4620      	mov	r0, r4
 80199ce:	bd10      	pop	{r4, pc}

080199d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80199d0:	b510      	push	{r4, lr}
 80199d2:	2104      	movs	r1, #4
 80199d4:	4604      	mov	r4, r0
 80199d6:	f009 fa69 	bl	8022eac <_ZdlPvj>
 80199da:	4620      	mov	r0, r4
 80199dc:	bd10      	pop	{r4, pc}

080199de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80199de:	b510      	push	{r4, lr}
 80199e0:	2104      	movs	r1, #4
 80199e2:	4604      	mov	r4, r0
 80199e4:	f009 fa62 	bl	8022eac <_ZdlPvj>
 80199e8:	4620      	mov	r0, r4
 80199ea:	bd10      	pop	{r4, pc}

080199ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80199ec:	b510      	push	{r4, lr}
 80199ee:	2104      	movs	r1, #4
 80199f0:	4604      	mov	r4, r0
 80199f2:	f009 fa5b 	bl	8022eac <_ZdlPvj>
 80199f6:	4620      	mov	r0, r4
 80199f8:	bd10      	pop	{r4, pc}

080199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80199fa:	b510      	push	{r4, lr}
 80199fc:	2104      	movs	r1, #4
 80199fe:	4604      	mov	r4, r0
 8019a00:	f009 fa54 	bl	8022eac <_ZdlPvj>
 8019a04:	4620      	mov	r0, r4
 8019a06:	bd10      	pop	{r4, pc}

08019a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019a08:	b510      	push	{r4, lr}
 8019a0a:	2104      	movs	r1, #4
 8019a0c:	4604      	mov	r4, r0
 8019a0e:	f009 fa4d 	bl	8022eac <_ZdlPvj>
 8019a12:	4620      	mov	r0, r4
 8019a14:	bd10      	pop	{r4, pc}

08019a16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019a16:	b510      	push	{r4, lr}
 8019a18:	2104      	movs	r1, #4
 8019a1a:	4604      	mov	r4, r0
 8019a1c:	f009 fa46 	bl	8022eac <_ZdlPvj>
 8019a20:	4620      	mov	r0, r4
 8019a22:	bd10      	pop	{r4, pc}

08019a24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019a24:	b510      	push	{r4, lr}
 8019a26:	2104      	movs	r1, #4
 8019a28:	4604      	mov	r4, r0
 8019a2a:	f009 fa3f 	bl	8022eac <_ZdlPvj>
 8019a2e:	4620      	mov	r0, r4
 8019a30:	bd10      	pop	{r4, pc}

08019a32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019a32:	b510      	push	{r4, lr}
 8019a34:	2104      	movs	r1, #4
 8019a36:	4604      	mov	r4, r0
 8019a38:	f009 fa38 	bl	8022eac <_ZdlPvj>
 8019a3c:	4620      	mov	r0, r4
 8019a3e:	bd10      	pop	{r4, pc}

08019a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019a40:	b510      	push	{r4, lr}
 8019a42:	2104      	movs	r1, #4
 8019a44:	4604      	mov	r4, r0
 8019a46:	f009 fa31 	bl	8022eac <_ZdlPvj>
 8019a4a:	4620      	mov	r0, r4
 8019a4c:	bd10      	pop	{r4, pc}

08019a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019a4e:	b510      	push	{r4, lr}
 8019a50:	2104      	movs	r1, #4
 8019a52:	4604      	mov	r4, r0
 8019a54:	f009 fa2a 	bl	8022eac <_ZdlPvj>
 8019a58:	4620      	mov	r0, r4
 8019a5a:	bd10      	pop	{r4, pc}

08019a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019a5c:	b510      	push	{r4, lr}
 8019a5e:	2104      	movs	r1, #4
 8019a60:	4604      	mov	r4, r0
 8019a62:	f009 fa23 	bl	8022eac <_ZdlPvj>
 8019a66:	4620      	mov	r0, r4
 8019a68:	bd10      	pop	{r4, pc}

08019a6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019a6a:	b510      	push	{r4, lr}
 8019a6c:	2104      	movs	r1, #4
 8019a6e:	4604      	mov	r4, r0
 8019a70:	f009 fa1c 	bl	8022eac <_ZdlPvj>
 8019a74:	4620      	mov	r0, r4
 8019a76:	bd10      	pop	{r4, pc}

08019a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019a78:	b510      	push	{r4, lr}
 8019a7a:	2104      	movs	r1, #4
 8019a7c:	4604      	mov	r4, r0
 8019a7e:	f009 fa15 	bl	8022eac <_ZdlPvj>
 8019a82:	4620      	mov	r0, r4
 8019a84:	bd10      	pop	{r4, pc}

08019a86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8019a86:	b510      	push	{r4, lr}
 8019a88:	2104      	movs	r1, #4
 8019a8a:	4604      	mov	r4, r0
 8019a8c:	f009 fa0e 	bl	8022eac <_ZdlPvj>
 8019a90:	4620      	mov	r0, r4
 8019a92:	bd10      	pop	{r4, pc}

08019a94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8019a94:	b510      	push	{r4, lr}
 8019a96:	2104      	movs	r1, #4
 8019a98:	4604      	mov	r4, r0
 8019a9a:	f009 fa07 	bl	8022eac <_ZdlPvj>
 8019a9e:	4620      	mov	r0, r4
 8019aa0:	bd10      	pop	{r4, pc}

08019aa2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8019aa2:	b510      	push	{r4, lr}
 8019aa4:	2104      	movs	r1, #4
 8019aa6:	4604      	mov	r4, r0
 8019aa8:	f009 fa00 	bl	8022eac <_ZdlPvj>
 8019aac:	4620      	mov	r0, r4
 8019aae:	bd10      	pop	{r4, pc}

08019ab0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8019ab0:	b510      	push	{r4, lr}
 8019ab2:	2104      	movs	r1, #4
 8019ab4:	4604      	mov	r4, r0
 8019ab6:	f009 f9f9 	bl	8022eac <_ZdlPvj>
 8019aba:	4620      	mov	r0, r4
 8019abc:	bd10      	pop	{r4, pc}
	...

08019ac0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8019ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019ac2:	4606      	mov	r6, r0
 8019ac4:	b087      	sub	sp, #28
 8019ac6:	460c      	mov	r4, r1
 8019ac8:	4617      	mov	r7, r2
 8019aca:	461d      	mov	r5, r3
 8019acc:	b333      	cbz	r3, 8019b1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019ace:	4608      	mov	r0, r1
 8019ad0:	f7f5 fd07 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019ad4:	bb10      	cbnz	r0, 8019b1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019ad6:	6820      	ldr	r0, [r4, #0]
 8019ad8:	6861      	ldr	r1, [r4, #4]
 8019ada:	4c1c      	ldr	r4, [pc, #112]	; (8019b4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8019adc:	ab04      	add	r3, sp, #16
 8019ade:	c303      	stmia	r3!, {r0, r1}
 8019ae0:	a804      	add	r0, sp, #16
 8019ae2:	f7f9 fa35 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019ae6:	6820      	ldr	r0, [r4, #0]
 8019ae8:	6803      	ldr	r3, [r0, #0]
 8019aea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019aec:	4798      	blx	r3
 8019aee:	2dff      	cmp	r5, #255	; 0xff
 8019af0:	d016      	beq.n	8019b20 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8019af2:	f010 0f08 	tst.w	r0, #8
 8019af6:	6820      	ldr	r0, [r4, #0]
 8019af8:	d015      	beq.n	8019b26 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8019afa:	2400      	movs	r4, #0
 8019afc:	6801      	ldr	r1, [r0, #0]
 8019afe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8019b02:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019b06:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8019b0a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8019b0e:	9401      	str	r4, [sp, #4]
 8019b10:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8019b14:	9400      	str	r4, [sp, #0]
 8019b16:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 8019b18:	4639      	mov	r1, r7
 8019b1a:	47a0      	blx	r4
 8019b1c:	b007      	add	sp, #28
 8019b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019b20:	f010 0f02 	tst.w	r0, #2
 8019b24:	e7e7      	b.n	8019af6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8019b26:	6803      	ldr	r3, [r0, #0]
 8019b28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019b2a:	4798      	blx	r3
 8019b2c:	4b08      	ldr	r3, [pc, #32]	; (8019b50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8019b2e:	881a      	ldrh	r2, [r3, #0]
 8019b30:	6833      	ldr	r3, [r6, #0]
 8019b32:	e9cd 7500 	strd	r7, r5, [sp]
 8019b36:	4601      	mov	r1, r0
 8019b38:	69dd      	ldr	r5, [r3, #28]
 8019b3a:	4630      	mov	r0, r6
 8019b3c:	ab04      	add	r3, sp, #16
 8019b3e:	47a8      	blx	r5
 8019b40:	6820      	ldr	r0, [r4, #0]
 8019b42:	6803      	ldr	r3, [r0, #0]
 8019b44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b46:	4798      	blx	r3
 8019b48:	e7e8      	b.n	8019b1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019b4a:	bf00      	nop
 8019b4c:	2002008c 	.word	0x2002008c
 8019b50:	20020086 	.word	0x20020086

08019b54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b58:	4f97      	ldr	r7, [pc, #604]	; (8019db8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 8019b5a:	4616      	mov	r6, r2
 8019b5c:	683a      	ldr	r2, [r7, #0]
 8019b5e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8019b62:	2a02      	cmp	r2, #2
 8019b64:	b08f      	sub	sp, #60	; 0x3c
 8019b66:	4604      	mov	r4, r0
 8019b68:	4689      	mov	r9, r1
 8019b6a:	d106      	bne.n	8019b7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8019b6c:	4b93      	ldr	r3, [pc, #588]	; (8019dbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8019b6e:	4a94      	ldr	r2, [pc, #592]	; (8019dc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8019b70:	f44f 7159 	mov.w	r1, #868	; 0x364
 8019b74:	4893      	ldr	r0, [pc, #588]	; (8019dc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 8019b76:	f009 f9c7 	bl	8022f08 <__assert_func>
 8019b7a:	ad0e      	add	r5, sp, #56	; 0x38
 8019b7c:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8019b80:	4628      	mov	r0, r5
 8019b82:	f7fd fac9 	bl	8017118 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019b86:	6823      	ldr	r3, [r4, #0]
 8019b88:	4680      	mov	r8, r0
 8019b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019b8c:	4620      	mov	r0, r4
 8019b8e:	4798      	blx	r3
 8019b90:	4580      	cmp	r8, r0
 8019b92:	d004      	beq.n	8019b9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8019b94:	4b8c      	ldr	r3, [pc, #560]	; (8019dc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8019b96:	4a8a      	ldr	r2, [pc, #552]	; (8019dc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8019b98:	f240 3166 	movw	r1, #870	; 0x366
 8019b9c:	e7ea      	b.n	8019b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8019b9e:	4628      	mov	r0, r5
 8019ba0:	f7fd fa30 	bl	8017004 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019ba4:	4680      	mov	r8, r0
 8019ba6:	b920      	cbnz	r0, 8019bb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8019ba8:	4b88      	ldr	r3, [pc, #544]	; (8019dcc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8019baa:	4a85      	ldr	r2, [pc, #532]	; (8019dc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8019bac:	f44f 715a 	mov.w	r1, #872	; 0x368
 8019bb0:	e7e0      	b.n	8019b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8019bb2:	6830      	ldr	r0, [r6, #0]
 8019bb4:	6871      	ldr	r1, [r6, #4]
 8019bb6:	f9b6 a000 	ldrsh.w	sl, [r6]
 8019bba:	ab06      	add	r3, sp, #24
 8019bbc:	c303      	stmia	r3!, {r0, r1}
 8019bbe:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8019bc2:	f8d9 0000 	ldr.w	r0, [r9]
 8019bc6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8019bca:	ab08      	add	r3, sp, #32
 8019bcc:	c303      	stmia	r3!, {r0, r1}
 8019bce:	4628      	mov	r0, r5
 8019bd0:	f7fd f910 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019bd4:	4606      	mov	r6, r0
 8019bd6:	4628      	mov	r0, r5
 8019bd8:	f7fd f946 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019bdc:	f10d 0b20 	add.w	fp, sp, #32
 8019be0:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8019be4:	a806      	add	r0, sp, #24
 8019be6:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8019bea:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8019bee:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8019bf2:	f7f9 f9ad 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019bf6:	4658      	mov	r0, fp
 8019bf8:	f7f9 f9aa 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019bfc:	a80a      	add	r0, sp, #40	; 0x28
 8019bfe:	f7f9 f9a7 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c02:	4d73      	ldr	r5, [pc, #460]	; (8019dd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8019c04:	4b73      	ldr	r3, [pc, #460]	; (8019dd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8019c06:	f9b5 2000 	ldrsh.w	r2, [r5]
 8019c0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019c0e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8019c12:	2100      	movs	r1, #0
 8019c14:	910c      	str	r1, [sp, #48]	; 0x30
 8019c16:	4658      	mov	r0, fp
 8019c18:	a90c      	add	r1, sp, #48	; 0x30
 8019c1a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8019c1e:	f7f5 fc1d 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 8019c22:	4658      	mov	r0, fp
 8019c24:	f7f5 fc5d 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c28:	2800      	cmp	r0, #0
 8019c2a:	f040 8099 	bne.w	8019d60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8019c2e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8019c32:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8019c36:	4288      	cmp	r0, r1
 8019c38:	db37      	blt.n	8019caa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8019c3a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8019c3e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8019c42:	429a      	cmp	r2, r3
 8019c44:	db31      	blt.n	8019caa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8019c46:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8019c4a:	4430      	add	r0, r6
 8019c4c:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019c50:	4431      	add	r1, r6
 8019c52:	b200      	sxth	r0, r0
 8019c54:	b209      	sxth	r1, r1
 8019c56:	4288      	cmp	r0, r1
 8019c58:	dc27      	bgt.n	8019caa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8019c5a:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8019c5e:	440a      	add	r2, r1
 8019c60:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8019c64:	440b      	add	r3, r1
 8019c66:	b212      	sxth	r2, r2
 8019c68:	b21b      	sxth	r3, r3
 8019c6a:	429a      	cmp	r2, r3
 8019c6c:	dc1d      	bgt.n	8019caa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8019c6e:	6823      	ldr	r3, [r4, #0]
 8019c70:	4620      	mov	r0, r4
 8019c72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019c74:	4798      	blx	r3
 8019c76:	4682      	mov	sl, r0
 8019c78:	6838      	ldr	r0, [r7, #0]
 8019c7a:	6803      	ldr	r3, [r0, #0]
 8019c7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019c7e:	4798      	blx	r3
 8019c80:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019c84:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019c88:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8019c8c:	1a5b      	subs	r3, r3, r1
 8019c8e:	b29b      	uxth	r3, r3
 8019c90:	b21c      	sxth	r4, r3
 8019c92:	2c00      	cmp	r4, #0
 8019c94:	dc0e      	bgt.n	8019cb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 8019c96:	bf1f      	itttt	ne
 8019c98:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8019c9c:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8019ca0:	185b      	addne	r3, r3, r1
 8019ca2:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8019ca6:	4644      	mov	r4, r8
 8019ca8:	e009      	b.n	8019cbe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8019caa:	4b4b      	ldr	r3, [pc, #300]	; (8019dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8019cac:	4a44      	ldr	r2, [pc, #272]	; (8019dc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8019cae:	f240 3176 	movw	r1, #886	; 0x376
 8019cb2:	e75f      	b.n	8019b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8019cb4:	1ad3      	subs	r3, r2, r3
 8019cb6:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8019cba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8019cbe:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8019cc2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8019cc6:	1b9b      	subs	r3, r3, r6
 8019cc8:	b29b      	uxth	r3, r3
 8019cca:	b219      	sxth	r1, r3
 8019ccc:	2900      	cmp	r1, #0
 8019cce:	dd4b      	ble.n	8019d68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8019cd0:	4351      	muls	r1, r2
 8019cd2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8019cd6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019cda:	1acb      	subs	r3, r1, r3
 8019cdc:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019ce0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019ce4:	2e00      	cmp	r6, #0
 8019ce6:	dd3b      	ble.n	8019d60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8019ce8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019cec:	2b00      	cmp	r3, #0
 8019cee:	dd37      	ble.n	8019d60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8019cf0:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8019cf4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8019cf8:	fb0a f90c 	mul.w	r9, sl, ip
 8019cfc:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8019d00:	4481      	add	r9, r0
 8019d02:	8828      	ldrh	r0, [r5, #0]
 8019d04:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8019d08:	42ae      	cmp	r6, r5
 8019d0a:	bfa8      	it	ge
 8019d0c:	462e      	movge	r6, r5
 8019d0e:	1a41      	subs	r1, r0, r1
 8019d10:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8019d14:	428e      	cmp	r6, r1
 8019d16:	bfa8      	it	ge
 8019d18:	460e      	movge	r6, r1
 8019d1a:	429d      	cmp	r5, r3
 8019d1c:	bfa8      	it	ge
 8019d1e:	461d      	movge	r5, r3
 8019d20:	4b2c      	ldr	r3, [pc, #176]	; (8019dd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8019d22:	881b      	ldrh	r3, [r3, #0]
 8019d24:	eba3 030c 	sub.w	r3, r3, ip
 8019d28:	429d      	cmp	r5, r3
 8019d2a:	bfa8      	it	ge
 8019d2c:	461d      	movge	r5, r3
 8019d2e:	42b0      	cmp	r0, r6
 8019d30:	d12c      	bne.n	8019d8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8019d32:	4290      	cmp	r0, r2
 8019d34:	d12a      	bne.n	8019d8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8019d36:	6838      	ldr	r0, [r7, #0]
 8019d38:	9203      	str	r2, [sp, #12]
 8019d3a:	6803      	ldr	r3, [r0, #0]
 8019d3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019d3e:	4798      	blx	r3
 8019d40:	07c3      	lsls	r3, r0, #31
 8019d42:	d51a      	bpl.n	8019d7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8019d44:	9a03      	ldr	r2, [sp, #12]
 8019d46:	6838      	ldr	r0, [r7, #0]
 8019d48:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8019d4c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8019d50:	6803      	ldr	r3, [r0, #0]
 8019d52:	9200      	str	r2, [sp, #0]
 8019d54:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 8019d56:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8019d5a:	4623      	mov	r3, r4
 8019d5c:	47a8      	blx	r5
 8019d5e:	4680      	mov	r8, r0
 8019d60:	4640      	mov	r0, r8
 8019d62:	b00f      	add	sp, #60	; 0x3c
 8019d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d68:	bf1f      	itttt	ne
 8019d6a:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8019d6e:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8019d72:	185b      	addne	r3, r3, r1
 8019d74:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8019d78:	e7b2      	b.n	8019ce0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 8019d7a:	6838      	ldr	r0, [r7, #0]
 8019d7c:	6803      	ldr	r3, [r0, #0]
 8019d7e:	464a      	mov	r2, r9
 8019d80:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 8019d82:	4621      	mov	r1, r4
 8019d84:	fb05 f30a 	mul.w	r3, r5, sl
 8019d88:	47b0      	blx	r6
 8019d8a:	e7e9      	b.n	8019d60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8019d8c:	4355      	muls	r5, r2
 8019d8e:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8019d92:	9303      	str	r3, [sp, #12]
 8019d94:	0076      	lsls	r6, r6, #1
 8019d96:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8019d9a:	9b03      	ldr	r3, [sp, #12]
 8019d9c:	429c      	cmp	r4, r3
 8019d9e:	d2df      	bcs.n	8019d60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8019da0:	6838      	ldr	r0, [r7, #0]
 8019da2:	6803      	ldr	r3, [r0, #0]
 8019da4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8019da6:	464a      	mov	r2, r9
 8019da8:	461d      	mov	r5, r3
 8019daa:	4621      	mov	r1, r4
 8019dac:	4633      	mov	r3, r6
 8019dae:	47a8      	blx	r5
 8019db0:	44d1      	add	r9, sl
 8019db2:	445c      	add	r4, fp
 8019db4:	e7f1      	b.n	8019d9a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8019db6:	bf00      	nop
 8019db8:	2002008c 	.word	0x2002008c
 8019dbc:	080290a4 	.word	0x080290a4
 8019dc0:	08029958 	.word	0x08029958
 8019dc4:	08029156 	.word	0x08029156
 8019dc8:	08029188 	.word	0x08029188
 8019dcc:	080291dd 	.word	0x080291dd
 8019dd0:	20020086 	.word	0x20020086
 8019dd4:	20020088 	.word	0x20020088
 8019dd8:	0802921b 	.word	0x0802921b

08019ddc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8019ddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019de0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8019de4:	9e08      	ldr	r6, [sp, #32]
 8019de6:	4688      	mov	r8, r1
 8019de8:	4614      	mov	r4, r2
 8019dea:	461d      	mov	r5, r3
 8019dec:	2f00      	cmp	r7, #0
 8019dee:	f000 80b3 	beq.w	8019f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8019df2:	4618      	mov	r0, r3
 8019df4:	f7f5 fb75 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019df8:	2800      	cmp	r0, #0
 8019dfa:	f040 80ad 	bne.w	8019f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8019dfe:	f9b5 1000 	ldrsh.w	r1, [r5]
 8019e02:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8019e06:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8019e0a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8019e0e:	fb04 1303 	mla	r3, r4, r3, r1
 8019e12:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8019e16:	4365      	muls	r5, r4
 8019e18:	2fff      	cmp	r7, #255	; 0xff
 8019e1a:	eba4 0200 	sub.w	r2, r4, r0
 8019e1e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8019e22:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8019e26:	d04b      	beq.n	8019ec0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8019e28:	b2bc      	uxth	r4, r7
 8019e2a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8019e2e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8019e32:	fa5f f788 	uxtb.w	r7, r8
 8019e36:	b2f3      	uxtb	r3, r6
 8019e38:	0040      	lsls	r0, r0, #1
 8019e3a:	fb0e fe04 	mul.w	lr, lr, r4
 8019e3e:	4367      	muls	r7, r4
 8019e40:	4363      	muls	r3, r4
 8019e42:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8019e46:	fa1f fc8c 	uxth.w	ip, ip
 8019e4a:	42a9      	cmp	r1, r5
 8019e4c:	f080 8084 	bcs.w	8019f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8019e50:	eb01 0900 	add.w	r9, r1, r0
 8019e54:	4549      	cmp	r1, r9
 8019e56:	d231      	bcs.n	8019ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8019e58:	880a      	ldrh	r2, [r1, #0]
 8019e5a:	1214      	asrs	r4, r2, #8
 8019e5c:	10d6      	asrs	r6, r2, #3
 8019e5e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019e62:	00d2      	lsls	r2, r2, #3
 8019e64:	b2d2      	uxtb	r2, r2
 8019e66:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019e6a:	fb14 f40c 	smulbb	r4, r4, ip
 8019e6e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019e72:	4474      	add	r4, lr
 8019e74:	fb12 f20c 	smulbb	r2, r2, ip
 8019e78:	b2a4      	uxth	r4, r4
 8019e7a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019e7e:	441a      	add	r2, r3
 8019e80:	b292      	uxth	r2, r2
 8019e82:	f104 0a01 	add.w	sl, r4, #1
 8019e86:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019e8a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019e8e:	fb16 f60c 	smulbb	r6, r6, ip
 8019e92:	f102 0a01 	add.w	sl, r2, #1
 8019e96:	443e      	add	r6, r7
 8019e98:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8019e9c:	b2b6      	uxth	r6, r6
 8019e9e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019ea2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019ea6:	4322      	orrs	r2, r4
 8019ea8:	1c74      	adds	r4, r6, #1
 8019eaa:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8019eae:	0976      	lsrs	r6, r6, #5
 8019eb0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019eb4:	4332      	orrs	r2, r6
 8019eb6:	f821 2b02 	strh.w	r2, [r1], #2
 8019eba:	e7cb      	b.n	8019e54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8019ebc:	4441      	add	r1, r8
 8019ebe:	e7c4      	b.n	8019e4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8019ec0:	4f26      	ldr	r7, [pc, #152]	; (8019f5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8019ec2:	0973      	lsrs	r3, r6, #5
 8019ec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019ec8:	ea08 0707 	and.w	r7, r8, r7
 8019ecc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019ed0:	433b      	orrs	r3, r7
 8019ed2:	4333      	orrs	r3, r6
 8019ed4:	07e6      	lsls	r6, r4, #31
 8019ed6:	b29b      	uxth	r3, r3
 8019ed8:	d50b      	bpl.n	8019ef2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8019eda:	0040      	lsls	r0, r0, #1
 8019edc:	0052      	lsls	r2, r2, #1
 8019ede:	42a9      	cmp	r1, r5
 8019ee0:	d23a      	bcs.n	8019f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8019ee2:	180c      	adds	r4, r1, r0
 8019ee4:	42a1      	cmp	r1, r4
 8019ee6:	d202      	bcs.n	8019eee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8019ee8:	f821 3b02 	strh.w	r3, [r1], #2
 8019eec:	e7fa      	b.n	8019ee4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8019eee:	4411      	add	r1, r2
 8019ef0:	e7f5      	b.n	8019ede <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8019ef2:	078f      	lsls	r7, r1, #30
 8019ef4:	d008      	beq.n	8019f08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8019ef6:	0066      	lsls	r6, r4, #1
 8019ef8:	460a      	mov	r2, r1
 8019efa:	42aa      	cmp	r2, r5
 8019efc:	d202      	bcs.n	8019f04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8019efe:	8013      	strh	r3, [r2, #0]
 8019f00:	4432      	add	r2, r6
 8019f02:	e7fa      	b.n	8019efa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8019f04:	3102      	adds	r1, #2
 8019f06:	3801      	subs	r0, #1
 8019f08:	07c6      	lsls	r6, r0, #31
 8019f0a:	d50b      	bpl.n	8019f24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8019f0c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8019f10:	3a01      	subs	r2, #1
 8019f12:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8019f16:	0066      	lsls	r6, r4, #1
 8019f18:	42aa      	cmp	r2, r5
 8019f1a:	d202      	bcs.n	8019f22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8019f1c:	8013      	strh	r3, [r2, #0]
 8019f1e:	4432      	add	r2, r6
 8019f20:	e7fa      	b.n	8019f18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8019f22:	3801      	subs	r0, #1
 8019f24:	b1c0      	cbz	r0, 8019f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8019f26:	1040      	asrs	r0, r0, #1
 8019f28:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8019f2c:	0080      	lsls	r0, r0, #2
 8019f2e:	0064      	lsls	r4, r4, #1
 8019f30:	42a9      	cmp	r1, r5
 8019f32:	d211      	bcs.n	8019f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8019f34:	078a      	lsls	r2, r1, #30
 8019f36:	d006      	beq.n	8019f46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8019f38:	4b09      	ldr	r3, [pc, #36]	; (8019f60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8019f3a:	4a0a      	ldr	r2, [pc, #40]	; (8019f64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8019f3c:	480a      	ldr	r0, [pc, #40]	; (8019f68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8019f3e:	f44f 6185 	mov.w	r1, #1064	; 0x428
 8019f42:	f008 ffe1 	bl	8022f08 <__assert_func>
 8019f46:	180e      	adds	r6, r1, r0
 8019f48:	460a      	mov	r2, r1
 8019f4a:	42b2      	cmp	r2, r6
 8019f4c:	d202      	bcs.n	8019f54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8019f4e:	f842 3b04 	str.w	r3, [r2], #4
 8019f52:	e7fa      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8019f54:	4421      	add	r1, r4
 8019f56:	e7eb      	b.n	8019f30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8019f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019f5c:	00fff800 	.word	0x00fff800
 8019f60:	08028f55 	.word	0x08028f55
 8019f64:	080295a4 	.word	0x080295a4
 8019f68:	08029156 	.word	0x08029156

08019f6c <_ZN8touchgfx8LCD16bppC1Ev>:
 8019f6c:	2200      	movs	r2, #0
 8019f6e:	4910      	ldr	r1, [pc, #64]	; (8019fb0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8019f70:	6042      	str	r2, [r0, #4]
 8019f72:	6001      	str	r1, [r0, #0]
 8019f74:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8019f78:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8019f7c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8019f80:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8019f84:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8019f88:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8019f8c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8019f90:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8019f94:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8019f98:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8019f9c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8019fa0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8019fa4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8019fa8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8019fac:	4770      	bx	lr
 8019fae:	bf00      	nop
 8019fb0:	0802955c 	.word	0x0802955c

08019fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8019fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fb8:	460d      	mov	r5, r1
 8019fba:	b08d      	sub	sp, #52	; 0x34
 8019fbc:	4604      	mov	r4, r0
 8019fbe:	6808      	ldr	r0, [r1, #0]
 8019fc0:	6849      	ldr	r1, [r1, #4]
 8019fc2:	4699      	mov	r9, r3
 8019fc4:	ab08      	add	r3, sp, #32
 8019fc6:	c303      	stmia	r3!, {r0, r1}
 8019fc8:	6810      	ldr	r0, [r2, #0]
 8019fca:	6851      	ldr	r1, [r2, #4]
 8019fcc:	ab0a      	add	r3, sp, #40	; 0x28
 8019fce:	c303      	stmia	r3!, {r0, r1}
 8019fd0:	a808      	add	r0, sp, #32
 8019fd2:	f7f8 ffbd 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019fd6:	4629      	mov	r1, r5
 8019fd8:	a80a      	add	r0, sp, #40	; 0x28
 8019fda:	f7f8 ffe1 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019fde:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8019fe2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8019fe6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8019fea:	4d63      	ldr	r5, [pc, #396]	; (801a178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019fec:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8019ff0:	6828      	ldr	r0, [r5, #0]
 8019ff2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8019ff6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019ffa:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8019ffe:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801a002:	440a      	add	r2, r1
 801a004:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801a008:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801a00c:	4413      	add	r3, r2
 801a00e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801a012:	6803      	ldr	r3, [r0, #0]
 801a014:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a016:	4798      	blx	r3
 801a018:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a01c:	d119      	bne.n	801a052 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801a01e:	f010 0f20 	tst.w	r0, #32
 801a022:	6828      	ldr	r0, [r5, #0]
 801a024:	d018      	beq.n	801a058 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801a026:	2500      	movs	r5, #0
 801a028:	6801      	ldr	r1, [r0, #0]
 801a02a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a02e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801a032:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801a036:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801a03a:	9502      	str	r5, [sp, #8]
 801a03c:	b2b6      	uxth	r6, r6
 801a03e:	fa1f f588 	uxth.w	r5, r8
 801a042:	9601      	str	r6, [sp, #4]
 801a044:	9500      	str	r5, [sp, #0]
 801a046:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801a048:	4621      	mov	r1, r4
 801a04a:	47a8      	blx	r5
 801a04c:	b00d      	add	sp, #52	; 0x34
 801a04e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a052:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a056:	e7e4      	b.n	801a022 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801a058:	6803      	ldr	r3, [r0, #0]
 801a05a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a05c:	4798      	blx	r3
 801a05e:	4947      	ldr	r1, [pc, #284]	; (801a17c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801a060:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801a064:	880b      	ldrh	r3, [r1, #0]
 801a066:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801a06a:	fb03 5202 	mla	r2, r3, r2, r5
 801a06e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a072:	4373      	muls	r3, r6
 801a074:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a078:	9307      	str	r3, [sp, #28]
 801a07a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a07e:	9306      	str	r3, [sp, #24]
 801a080:	468a      	mov	sl, r1
 801a082:	9b07      	ldr	r3, [sp, #28]
 801a084:	4298      	cmp	r0, r3
 801a086:	d270      	bcs.n	801a16a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801a088:	9b06      	ldr	r3, [sp, #24]
 801a08a:	4621      	mov	r1, r4
 801a08c:	eb00 0b03 	add.w	fp, r0, r3
 801a090:	4558      	cmp	r0, fp
 801a092:	d25d      	bcs.n	801a150 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801a094:	f851 4b04 	ldr.w	r4, [r1], #4
 801a098:	0e23      	lsrs	r3, r4, #24
 801a09a:	d014      	beq.n	801a0c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a09c:	2bff      	cmp	r3, #255	; 0xff
 801a09e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801a0a2:	d112      	bne.n	801a0ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a0a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a0a8:	d10f      	bne.n	801a0ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a0aa:	0963      	lsrs	r3, r4, #5
 801a0ac:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801a0b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a0b4:	f02c 0c07 	bic.w	ip, ip, #7
 801a0b8:	ea43 0c0c 	orr.w	ip, r3, ip
 801a0bc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a0c0:	ea4c 0404 	orr.w	r4, ip, r4
 801a0c4:	8004      	strh	r4, [r0, #0]
 801a0c6:	3002      	adds	r0, #2
 801a0c8:	e7e2      	b.n	801a090 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801a0ca:	fb09 f303 	mul.w	r3, r9, r3
 801a0ce:	8807      	ldrh	r7, [r0, #0]
 801a0d0:	1c5a      	adds	r2, r3, #1
 801a0d2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801a0d6:	1212      	asrs	r2, r2, #8
 801a0d8:	123e      	asrs	r6, r7, #8
 801a0da:	b293      	uxth	r3, r2
 801a0dc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801a0e0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a0e4:	43d2      	mvns	r2, r2
 801a0e6:	b2d2      	uxtb	r2, r2
 801a0e8:	10fd      	asrs	r5, r7, #3
 801a0ea:	fb1e fe03 	smulbb	lr, lr, r3
 801a0ee:	00ff      	lsls	r7, r7, #3
 801a0f0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a0f4:	fb06 e602 	mla	r6, r6, r2, lr
 801a0f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a0fc:	b2ff      	uxtb	r7, r7
 801a0fe:	fa5f fc8c 	uxtb.w	ip, ip
 801a102:	b2e4      	uxtb	r4, r4
 801a104:	b2b6      	uxth	r6, r6
 801a106:	fb1c fc03 	smulbb	ip, ip, r3
 801a10a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a10e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a112:	fb14 f403 	smulbb	r4, r4, r3
 801a116:	fb05 c502 	mla	r5, r5, r2, ip
 801a11a:	f106 0e01 	add.w	lr, r6, #1
 801a11e:	fb07 4702 	mla	r7, r7, r2, r4
 801a122:	b2ad      	uxth	r5, r5
 801a124:	b2bf      	uxth	r7, r7
 801a126:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801a12a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801a12e:	f105 0c01 	add.w	ip, r5, #1
 801a132:	1c7e      	adds	r6, r7, #1
 801a134:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a138:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a13c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a140:	096d      	lsrs	r5, r5, #5
 801a142:	ea46 060e 	orr.w	r6, r6, lr
 801a146:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a14a:	432e      	orrs	r6, r5
 801a14c:	8006      	strh	r6, [r0, #0]
 801a14e:	e7ba      	b.n	801a0c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a150:	f8ba 3000 	ldrh.w	r3, [sl]
 801a154:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801a158:	eba3 0308 	sub.w	r3, r3, r8
 801a15c:	eba4 0408 	sub.w	r4, r4, r8
 801a160:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a164:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801a168:	e78b      	b.n	801a082 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801a16a:	4b03      	ldr	r3, [pc, #12]	; (801a178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a16c:	6818      	ldr	r0, [r3, #0]
 801a16e:	6803      	ldr	r3, [r0, #0]
 801a170:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a172:	4798      	blx	r3
 801a174:	e76a      	b.n	801a04c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801a176:	bf00      	nop
 801a178:	2002008c 	.word	0x2002008c
 801a17c:	20020086 	.word	0x20020086

0801a180 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801a180:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a184:	460c      	mov	r4, r1
 801a186:	b085      	sub	sp, #20
 801a188:	6810      	ldr	r0, [r2, #0]
 801a18a:	6851      	ldr	r1, [r2, #4]
 801a18c:	466d      	mov	r5, sp
 801a18e:	c503      	stmia	r5!, {r0, r1}
 801a190:	6818      	ldr	r0, [r3, #0]
 801a192:	6859      	ldr	r1, [r3, #4]
 801a194:	4616      	mov	r6, r2
 801a196:	c503      	stmia	r5!, {r0, r1}
 801a198:	4668      	mov	r0, sp
 801a19a:	f7f8 fed9 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a19e:	4631      	mov	r1, r6
 801a1a0:	a802      	add	r0, sp, #8
 801a1a2:	f7f8 fefd 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a1a6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801a1aa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801a1ae:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a1b2:	4d28      	ldr	r5, [pc, #160]	; (801a254 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801a1b4:	4e28      	ldr	r6, [pc, #160]	; (801a258 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801a1b6:	6828      	ldr	r0, [r5, #0]
 801a1b8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a1bc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801a1c0:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a1c4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a1c8:	f8bd 1000 	ldrh.w	r1, [sp]
 801a1cc:	440a      	add	r2, r1
 801a1ce:	f8ad 2008 	strh.w	r2, [sp, #8]
 801a1d2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a1d6:	4413      	add	r3, r2
 801a1d8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a1dc:	6803      	ldr	r3, [r0, #0]
 801a1de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a1e0:	4798      	blx	r3
 801a1e2:	8833      	ldrh	r3, [r6, #0]
 801a1e4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801a1e8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a1ec:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801a25c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801a1f0:	fb03 1202 	mla	r2, r3, r2, r1
 801a1f4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a1f8:	fb08 f303 	mul.w	r3, r8, r3
 801a1fc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a200:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801a204:	4298      	cmp	r0, r3
 801a206:	d21d      	bcs.n	801a244 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801a208:	eb00 080c 	add.w	r8, r0, ip
 801a20c:	4540      	cmp	r0, r8
 801a20e:	d20f      	bcs.n	801a230 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801a210:	f854 1b04 	ldr.w	r1, [r4], #4
 801a214:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801a218:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801a21c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a220:	ea42 0209 	orr.w	r2, r2, r9
 801a224:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801a228:	430a      	orrs	r2, r1
 801a22a:	f820 2b02 	strh.w	r2, [r0], #2
 801a22e:	e7ed      	b.n	801a20c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801a230:	8832      	ldrh	r2, [r6, #0]
 801a232:	1bd2      	subs	r2, r2, r7
 801a234:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a238:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801a23c:	1bd2      	subs	r2, r2, r7
 801a23e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801a242:	e7df      	b.n	801a204 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801a244:	6828      	ldr	r0, [r5, #0]
 801a246:	6803      	ldr	r3, [r0, #0]
 801a248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a24a:	4798      	blx	r3
 801a24c:	b005      	add	sp, #20
 801a24e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a252:	bf00      	nop
 801a254:	2002008c 	.word	0x2002008c
 801a258:	20020086 	.word	0x20020086
 801a25c:	fffff800 	.word	0xfffff800

0801a260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801a260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a264:	460e      	mov	r6, r1
 801a266:	b08e      	sub	sp, #56	; 0x38
 801a268:	4604      	mov	r4, r0
 801a26a:	6808      	ldr	r0, [r1, #0]
 801a26c:	6849      	ldr	r1, [r1, #4]
 801a26e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801a448 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801a272:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801a44c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801a276:	461d      	mov	r5, r3
 801a278:	ab0a      	add	r3, sp, #40	; 0x28
 801a27a:	c303      	stmia	r3!, {r0, r1}
 801a27c:	6810      	ldr	r0, [r2, #0]
 801a27e:	6851      	ldr	r1, [r2, #4]
 801a280:	ab0c      	add	r3, sp, #48	; 0x30
 801a282:	c303      	stmia	r3!, {r0, r1}
 801a284:	a80a      	add	r0, sp, #40	; 0x28
 801a286:	f7f8 fe63 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a28a:	4631      	mov	r1, r6
 801a28c:	a80c      	add	r0, sp, #48	; 0x30
 801a28e:	f7f8 fe87 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a292:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801a296:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801a29a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801a29e:	f8d8 0000 	ldr.w	r0, [r8]
 801a2a2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801a2a6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a2aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a2ae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a2b2:	440c      	add	r4, r1
 801a2b4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801a2b8:	440a      	add	r2, r1
 801a2ba:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801a2be:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801a2c2:	4413      	add	r3, r2
 801a2c4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a2c8:	6803      	ldr	r3, [r0, #0]
 801a2ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a2cc:	4798      	blx	r3
 801a2ce:	2dff      	cmp	r5, #255	; 0xff
 801a2d0:	d124      	bne.n	801a31c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801a2d2:	f010 0f01 	tst.w	r0, #1
 801a2d6:	f8d8 0000 	ldr.w	r0, [r8]
 801a2da:	d022      	beq.n	801a322 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801a2dc:	2100      	movs	r1, #0
 801a2de:	f8d0 c000 	ldr.w	ip, [r0]
 801a2e2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801a2e6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801a2ea:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801a2ee:	f04f 0e01 	mov.w	lr, #1
 801a2f2:	f8cd e018 	str.w	lr, [sp, #24]
 801a2f6:	f8b9 e000 	ldrh.w	lr, [r9]
 801a2fa:	9503      	str	r5, [sp, #12]
 801a2fc:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801a300:	b2b6      	uxth	r6, r6
 801a302:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801a306:	9102      	str	r1, [sp, #8]
 801a308:	b2bf      	uxth	r7, r7
 801a30a:	9601      	str	r6, [sp, #4]
 801a30c:	9700      	str	r7, [sp, #0]
 801a30e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801a312:	4621      	mov	r1, r4
 801a314:	47a8      	blx	r5
 801a316:	b00e      	add	sp, #56	; 0x38
 801a318:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a31c:	f010 0f04 	tst.w	r0, #4
 801a320:	e7d9      	b.n	801a2d6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801a322:	6803      	ldr	r3, [r0, #0]
 801a324:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a326:	4798      	blx	r3
 801a328:	f8b9 3000 	ldrh.w	r3, [r9]
 801a32c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a330:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801a334:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801a338:	fb03 1202 	mla	r2, r3, r2, r1
 801a33c:	ebac 0c07 	sub.w	ip, ip, r7
 801a340:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a344:	435e      	muls	r6, r3
 801a346:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801a34a:	2dff      	cmp	r5, #255	; 0xff
 801a34c:	eba3 0707 	sub.w	r7, r3, r7
 801a350:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a354:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a358:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801a35c:	d049      	beq.n	801a3f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801a35e:	43eb      	mvns	r3, r5
 801a360:	fa1f f985 	uxth.w	r9, r5
 801a364:	b2db      	uxtb	r3, r3
 801a366:	42b0      	cmp	r0, r6
 801a368:	d266      	bcs.n	801a438 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801a36a:	eb00 0a0e 	add.w	sl, r0, lr
 801a36e:	4550      	cmp	r0, sl
 801a370:	4621      	mov	r1, r4
 801a372:	f104 0403 	add.w	r4, r4, #3
 801a376:	d25b      	bcs.n	801a430 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801a378:	8802      	ldrh	r2, [r0, #0]
 801a37a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801a37e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801a382:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801a386:	fb11 f109 	smulbb	r1, r1, r9
 801a38a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801a38e:	10d5      	asrs	r5, r2, #3
 801a390:	fb08 1803 	mla	r8, r8, r3, r1
 801a394:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801a398:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a39c:	fb11 f109 	smulbb	r1, r1, r9
 801a3a0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a3a4:	fb05 1503 	mla	r5, r5, r3, r1
 801a3a8:	00d2      	lsls	r2, r2, #3
 801a3aa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801a3ae:	b2d2      	uxtb	r2, r2
 801a3b0:	fb11 f109 	smulbb	r1, r1, r9
 801a3b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a3b8:	fa1f f888 	uxth.w	r8, r8
 801a3bc:	fb02 1203 	mla	r2, r2, r3, r1
 801a3c0:	b292      	uxth	r2, r2
 801a3c2:	f108 0101 	add.w	r1, r8, #1
 801a3c6:	b2ad      	uxth	r5, r5
 801a3c8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801a3cc:	1c51      	adds	r1, r2, #1
 801a3ce:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a3d2:	1c69      	adds	r1, r5, #1
 801a3d4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a3d8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801a3dc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a3e0:	096d      	lsrs	r5, r5, #5
 801a3e2:	ea42 0208 	orr.w	r2, r2, r8
 801a3e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a3ea:	432a      	orrs	r2, r5
 801a3ec:	f820 2b02 	strh.w	r2, [r0], #2
 801a3f0:	e7bd      	b.n	801a36e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801a3f2:	4a14      	ldr	r2, [pc, #80]	; (801a444 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801a3f4:	42b0      	cmp	r0, r6
 801a3f6:	d21f      	bcs.n	801a438 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801a3f8:	eb00 050e 	add.w	r5, r0, lr
 801a3fc:	42a8      	cmp	r0, r5
 801a3fe:	4621      	mov	r1, r4
 801a400:	f104 0403 	add.w	r4, r4, #3
 801a404:	d210      	bcs.n	801a428 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801a406:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801a40a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801a40e:	00db      	lsls	r3, r3, #3
 801a410:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801a414:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a418:	430b      	orrs	r3, r1
 801a41a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801a41e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801a422:	f820 3b02 	strh.w	r3, [r0], #2
 801a426:	e7e9      	b.n	801a3fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801a428:	4438      	add	r0, r7
 801a42a:	eb01 040c 	add.w	r4, r1, ip
 801a42e:	e7e1      	b.n	801a3f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801a430:	4438      	add	r0, r7
 801a432:	eb01 040c 	add.w	r4, r1, ip
 801a436:	e796      	b.n	801a366 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801a438:	4b03      	ldr	r3, [pc, #12]	; (801a448 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801a43a:	6818      	ldr	r0, [r3, #0]
 801a43c:	6803      	ldr	r3, [r0, #0]
 801a43e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a440:	4798      	blx	r3
 801a442:	e768      	b.n	801a316 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801a444:	fffff800 	.word	0xfffff800
 801a448:	2002008c 	.word	0x2002008c
 801a44c:	20020086 	.word	0x20020086

0801a450 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801a450:	b570      	push	{r4, r5, r6, lr}
 801a452:	9c04      	ldr	r4, [sp, #16]
 801a454:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801a458:	4605      	mov	r5, r0
 801a45a:	4608      	mov	r0, r1
 801a45c:	4619      	mov	r1, r3
 801a45e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801a462:	2a0d      	cmp	r2, #13
 801a464:	d825      	bhi.n	801a4b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801a466:	e8df f002 	tbb	[pc, r2]
 801a46a:	1807      	.short	0x1807
 801a46c:	1d1d1d13 	.word	0x1d1d1d13
 801a470:	1d1d1d1d 	.word	0x1d1d1d1d
 801a474:	1d1d1d1d 	.word	0x1d1d1d1d
 801a478:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801a47c:	682a      	ldr	r2, [r5, #0]
 801a47e:	68d6      	ldr	r6, [r2, #12]
 801a480:	4623      	mov	r3, r4
 801a482:	460a      	mov	r2, r1
 801a484:	46b4      	mov	ip, r6
 801a486:	4601      	mov	r1, r0
 801a488:	4628      	mov	r0, r5
 801a48a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a48e:	4760      	bx	ip
 801a490:	4622      	mov	r2, r4
 801a492:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a496:	f7ff bd8d 	b.w	8019fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a49a:	4622      	mov	r2, r4
 801a49c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a4a0:	f7ff bede 	b.w	801a260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801a4a4:	4b03      	ldr	r3, [pc, #12]	; (801a4b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801a4a6:	4a04      	ldr	r2, [pc, #16]	; (801a4b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801a4a8:	4804      	ldr	r0, [pc, #16]	; (801a4bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801a4aa:	f240 315d 	movw	r1, #861	; 0x35d
 801a4ae:	f008 fd2b 	bl	8022f08 <__assert_func>
 801a4b2:	bd70      	pop	{r4, r5, r6, pc}
 801a4b4:	0802927b 	.word	0x0802927b
 801a4b8:	080299de 	.word	0x080299de
 801a4bc:	08029156 	.word	0x08029156

0801a4c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801a4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4c4:	b093      	sub	sp, #76	; 0x4c
 801a4c6:	880e      	ldrh	r6, [r1, #0]
 801a4c8:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801a4cc:	4681      	mov	r9, r0
 801a4ce:	4688      	mov	r8, r1
 801a4d0:	4615      	mov	r5, r2
 801a4d2:	b136      	cbz	r6, 801a4e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801a4d4:	4b70      	ldr	r3, [pc, #448]	; (801a698 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801a4d6:	4a71      	ldr	r2, [pc, #452]	; (801a69c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801a4d8:	4871      	ldr	r0, [pc, #452]	; (801a6a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801a4da:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 801a4de:	f008 fd13 	bl	8022f08 <__assert_func>
 801a4e2:	6810      	ldr	r0, [r2, #0]
 801a4e4:	6851      	ldr	r1, [r2, #4]
 801a4e6:	4f6f      	ldr	r7, [pc, #444]	; (801a6a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801a4e8:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801a6a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801a4ec:	ac0e      	add	r4, sp, #56	; 0x38
 801a4ee:	c403      	stmia	r4!, {r0, r1}
 801a4f0:	6818      	ldr	r0, [r3, #0]
 801a4f2:	6859      	ldr	r1, [r3, #4]
 801a4f4:	ac10      	add	r4, sp, #64	; 0x40
 801a4f6:	c403      	stmia	r4!, {r0, r1}
 801a4f8:	a80e      	add	r0, sp, #56	; 0x38
 801a4fa:	f7f8 fd29 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a4fe:	4629      	mov	r1, r5
 801a500:	a810      	add	r0, sp, #64	; 0x40
 801a502:	f7f8 fd4d 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a506:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801a50a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801a50e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801a512:	6838      	ldr	r0, [r7, #0]
 801a514:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801a518:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801a51c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a520:	4489      	add	r9, r1
 801a522:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801a526:	440a      	add	r2, r1
 801a528:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801a52c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801a530:	4413      	add	r3, r2
 801a532:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801a536:	6803      	ldr	r3, [r0, #0]
 801a538:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a53a:	4798      	blx	r3
 801a53c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801a540:	6838      	ldr	r0, [r7, #0]
 801a542:	d01d      	beq.n	801a580 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801a544:	6802      	ldr	r2, [r0, #0]
 801a546:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801a54a:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801a54e:	210b      	movs	r1, #11
 801a550:	9107      	str	r1, [sp, #28]
 801a552:	f8bb 1000 	ldrh.w	r1, [fp]
 801a556:	9106      	str	r1, [sp, #24]
 801a558:	2101      	movs	r1, #1
 801a55a:	e9cd a104 	strd	sl, r1, [sp, #16]
 801a55e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801a562:	9103      	str	r1, [sp, #12]
 801a564:	b2a4      	uxth	r4, r4
 801a566:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801a56a:	9100      	str	r1, [sp, #0]
 801a56c:	b2ad      	uxth	r5, r5
 801a56e:	9502      	str	r5, [sp, #8]
 801a570:	9401      	str	r4, [sp, #4]
 801a572:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801a574:	4649      	mov	r1, r9
 801a576:	4642      	mov	r2, r8
 801a578:	47a0      	blx	r4
 801a57a:	b013      	add	sp, #76	; 0x4c
 801a57c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a580:	6803      	ldr	r3, [r0, #0]
 801a582:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a584:	4798      	blx	r3
 801a586:	f8bb 3000 	ldrh.w	r3, [fp]
 801a58a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a58e:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801a592:	fb03 1202 	mla	r2, r3, r2, r1
 801a596:	435d      	muls	r5, r3
 801a598:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a59c:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801a5a0:	920c      	str	r2, [sp, #48]	; 0x30
 801a5a2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801a5a6:	1b12      	subs	r2, r2, r4
 801a5a8:	920d      	str	r2, [sp, #52]	; 0x34
 801a5aa:	0062      	lsls	r2, r4, #1
 801a5ac:	1b1c      	subs	r4, r3, r4
 801a5ae:	0063      	lsls	r3, r4, #1
 801a5b0:	920a      	str	r2, [sp, #40]	; 0x28
 801a5b2:	930b      	str	r3, [sp, #44]	; 0x2c
 801a5b4:	f04f 0e04 	mov.w	lr, #4
 801a5b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a5ba:	4298      	cmp	r0, r3
 801a5bc:	d266      	bcs.n	801a68c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801a5be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5c0:	eb00 0b03 	add.w	fp, r0, r3
 801a5c4:	4558      	cmp	r0, fp
 801a5c6:	d25c      	bcs.n	801a682 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 801a5c8:	f819 3b01 	ldrb.w	r3, [r9], #1
 801a5cc:	fb1e e303 	smlabb	r3, lr, r3, lr
 801a5d0:	f858 2003 	ldr.w	r2, [r8, r3]
 801a5d4:	0e11      	lsrs	r1, r2, #24
 801a5d6:	d012      	beq.n	801a5fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801a5d8:	29ff      	cmp	r1, #255	; 0xff
 801a5da:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801a5de:	d110      	bne.n	801a602 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801a5e0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a5e4:	d10d      	bne.n	801a602 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801a5e6:	0953      	lsrs	r3, r2, #5
 801a5e8:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801a5ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5f0:	f027 0707 	bic.w	r7, r7, #7
 801a5f4:	431f      	orrs	r7, r3
 801a5f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a5fa:	433a      	orrs	r2, r7
 801a5fc:	8002      	strh	r2, [r0, #0]
 801a5fe:	3002      	adds	r0, #2
 801a600:	e7e0      	b.n	801a5c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801a602:	fb0a f101 	mul.w	r1, sl, r1
 801a606:	8806      	ldrh	r6, [r0, #0]
 801a608:	1c4b      	adds	r3, r1, #1
 801a60a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801a60e:	1235      	asrs	r5, r6, #8
 801a610:	10f4      	asrs	r4, r6, #3
 801a612:	121b      	asrs	r3, r3, #8
 801a614:	00f6      	lsls	r6, r6, #3
 801a616:	b299      	uxth	r1, r3
 801a618:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801a61c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a620:	b2f6      	uxtb	r6, r6
 801a622:	43db      	mvns	r3, r3
 801a624:	b2d2      	uxtb	r2, r2
 801a626:	b2db      	uxtb	r3, r3
 801a628:	fb1c fc01 	smulbb	ip, ip, r1
 801a62c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801a630:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a634:	fb12 f201 	smulbb	r2, r2, r1
 801a638:	fb05 c503 	mla	r5, r5, r3, ip
 801a63c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a640:	b2ff      	uxtb	r7, r7
 801a642:	fb06 2203 	mla	r2, r6, r3, r2
 801a646:	b2ad      	uxth	r5, r5
 801a648:	fb17 f701 	smulbb	r7, r7, r1
 801a64c:	b292      	uxth	r2, r2
 801a64e:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801a652:	fb04 7403 	mla	r4, r4, r3, r7
 801a656:	f105 0c01 	add.w	ip, r5, #1
 801a65a:	1c57      	adds	r7, r2, #1
 801a65c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a660:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a664:	b2a4      	uxth	r4, r4
 801a666:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a66a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a66e:	433d      	orrs	r5, r7
 801a670:	1c67      	adds	r7, r4, #1
 801a672:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801a676:	0964      	lsrs	r4, r4, #5
 801a678:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a67c:	4325      	orrs	r5, r4
 801a67e:	8005      	strh	r5, [r0, #0]
 801a680:	e7bd      	b.n	801a5fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801a682:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a684:	4418      	add	r0, r3
 801a686:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a688:	4499      	add	r9, r3
 801a68a:	e795      	b.n	801a5b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 801a68c:	4b05      	ldr	r3, [pc, #20]	; (801a6a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801a68e:	6818      	ldr	r0, [r3, #0]
 801a690:	6803      	ldr	r3, [r0, #0]
 801a692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a694:	4798      	blx	r3
 801a696:	e770      	b.n	801a57a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801a698:	08029054 	.word	0x08029054
 801a69c:	080297af 	.word	0x080297af
 801a6a0:	08029156 	.word	0x08029156
 801a6a4:	2002008c 	.word	0x2002008c
 801a6a8:	20020086 	.word	0x20020086

0801a6ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801a6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6b0:	4614      	mov	r4, r2
 801a6b2:	880a      	ldrh	r2, [r1, #0]
 801a6b4:	b087      	sub	sp, #28
 801a6b6:	2a02      	cmp	r2, #2
 801a6b8:	4680      	mov	r8, r0
 801a6ba:	460d      	mov	r5, r1
 801a6bc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801a6c0:	d006      	beq.n	801a6d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801a6c2:	4b63      	ldr	r3, [pc, #396]	; (801a850 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801a6c4:	4a63      	ldr	r2, [pc, #396]	; (801a854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801a6c6:	4864      	ldr	r0, [pc, #400]	; (801a858 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 801a6c8:	f240 11e1 	movw	r1, #481	; 0x1e1
 801a6cc:	f008 fc1c 	bl	8022f08 <__assert_func>
 801a6d0:	2e00      	cmp	r6, #0
 801a6d2:	f000 80b9 	beq.w	801a848 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801a6d6:	6820      	ldr	r0, [r4, #0]
 801a6d8:	6861      	ldr	r1, [r4, #4]
 801a6da:	af02      	add	r7, sp, #8
 801a6dc:	c703      	stmia	r7!, {r0, r1}
 801a6de:	6818      	ldr	r0, [r3, #0]
 801a6e0:	6859      	ldr	r1, [r3, #4]
 801a6e2:	af04      	add	r7, sp, #16
 801a6e4:	c703      	stmia	r7!, {r0, r1}
 801a6e6:	a802      	add	r0, sp, #8
 801a6e8:	f7f8 fc32 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a6ec:	4621      	mov	r1, r4
 801a6ee:	a804      	add	r0, sp, #16
 801a6f0:	f7f8 fc56 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a6f4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a6f8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a6fc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801a700:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801a704:	fb14 2103 	smlabb	r1, r4, r3, r2
 801a708:	eb08 0401 	add.w	r4, r8, r1
 801a70c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a710:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801a714:	440a      	add	r2, r1
 801a716:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a71a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a71e:	4413      	add	r3, r2
 801a720:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a724:	4b4d      	ldr	r3, [pc, #308]	; (801a85c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801a726:	6818      	ldr	r0, [r3, #0]
 801a728:	6803      	ldr	r3, [r0, #0]
 801a72a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a72c:	4798      	blx	r3
 801a72e:	4b4c      	ldr	r3, [pc, #304]	; (801a860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801a730:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801a734:	881a      	ldrh	r2, [r3, #0]
 801a736:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801a73a:	2eff      	cmp	r6, #255	; 0xff
 801a73c:	fb02 c101 	mla	r1, r2, r1, ip
 801a740:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a744:	fb02 f207 	mul.w	r2, r2, r7
 801a748:	f105 0104 	add.w	r1, r5, #4
 801a74c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801a750:	461d      	mov	r5, r3
 801a752:	d05a      	beq.n	801a80a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 801a754:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801a758:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a75c:	b2b6      	uxth	r6, r6
 801a75e:	fa1f fe8e 	uxth.w	lr, lr
 801a762:	9301      	str	r3, [sp, #4]
 801a764:	4282      	cmp	r2, r0
 801a766:	d96a      	bls.n	801a83e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801a768:	eb00 0b0a 	add.w	fp, r0, sl
 801a76c:	4583      	cmp	fp, r0
 801a76e:	d940      	bls.n	801a7f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801a770:	f814 3b01 	ldrb.w	r3, [r4], #1
 801a774:	8805      	ldrh	r5, [r0, #0]
 801a776:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801a77a:	122f      	asrs	r7, r5, #8
 801a77c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a780:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a784:	fb17 f70e 	smulbb	r7, r7, lr
 801a788:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a78c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a790:	00ed      	lsls	r5, r5, #3
 801a792:	fb0c 7c06 	mla	ip, ip, r6, r7
 801a796:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a79a:	10df      	asrs	r7, r3, #3
 801a79c:	b2ed      	uxtb	r5, r5
 801a79e:	00db      	lsls	r3, r3, #3
 801a7a0:	fa1f fc8c 	uxth.w	ip, ip
 801a7a4:	fb19 f90e 	smulbb	r9, r9, lr
 801a7a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a7ac:	b2db      	uxtb	r3, r3
 801a7ae:	fb15 f50e 	smulbb	r5, r5, lr
 801a7b2:	fb07 9706 	mla	r7, r7, r6, r9
 801a7b6:	fb03 5306 	mla	r3, r3, r6, r5
 801a7ba:	f10c 0901 	add.w	r9, ip, #1
 801a7be:	b29b      	uxth	r3, r3
 801a7c0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801a7c4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801a7c8:	f103 0c01 	add.w	ip, r3, #1
 801a7cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a7d0:	b2bf      	uxth	r7, r7
 801a7d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a7d6:	ea4c 0c09 	orr.w	ip, ip, r9
 801a7da:	f107 0901 	add.w	r9, r7, #1
 801a7de:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801a7e2:	097f      	lsrs	r7, r7, #5
 801a7e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a7e8:	ea4c 0c07 	orr.w	ip, ip, r7
 801a7ec:	f820 cb02 	strh.w	ip, [r0], #2
 801a7f0:	e7bc      	b.n	801a76c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801a7f2:	9b01      	ldr	r3, [sp, #4]
 801a7f4:	881b      	ldrh	r3, [r3, #0]
 801a7f6:	eba3 0308 	sub.w	r3, r3, r8
 801a7fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a7fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a802:	eba3 0308 	sub.w	r3, r3, r8
 801a806:	441c      	add	r4, r3
 801a808:	e7ac      	b.n	801a764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801a80a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a80e:	4282      	cmp	r2, r0
 801a810:	d915      	bls.n	801a83e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801a812:	eb00 060a 	add.w	r6, r0, sl
 801a816:	4286      	cmp	r6, r0
 801a818:	d906      	bls.n	801a828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801a81a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801a81e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801a822:	f820 3b02 	strh.w	r3, [r0], #2
 801a826:	e7f6      	b.n	801a816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 801a828:	882b      	ldrh	r3, [r5, #0]
 801a82a:	eba3 0308 	sub.w	r3, r3, r8
 801a82e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a832:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a836:	eba3 0308 	sub.w	r3, r3, r8
 801a83a:	441c      	add	r4, r3
 801a83c:	e7e7      	b.n	801a80e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801a83e:	4b07      	ldr	r3, [pc, #28]	; (801a85c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801a840:	6818      	ldr	r0, [r3, #0]
 801a842:	6803      	ldr	r3, [r0, #0]
 801a844:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a846:	4798      	blx	r3
 801a848:	b007      	add	sp, #28
 801a84a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a84e:	bf00      	nop
 801a850:	08028f84 	.word	0x08028f84
 801a854:	08029619 	.word	0x08029619
 801a858:	08029156 	.word	0x08029156
 801a85c:	2002008c 	.word	0x2002008c
 801a860:	20020086 	.word	0x20020086

0801a864 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801a864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a868:	f8b1 9000 	ldrh.w	r9, [r1]
 801a86c:	b091      	sub	sp, #68	; 0x44
 801a86e:	f1b9 0f01 	cmp.w	r9, #1
 801a872:	4604      	mov	r4, r0
 801a874:	460f      	mov	r7, r1
 801a876:	4690      	mov	r8, r2
 801a878:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801a87c:	d006      	beq.n	801a88c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801a87e:	4b84      	ldr	r3, [pc, #528]	; (801aa90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801a880:	4a84      	ldr	r2, [pc, #528]	; (801aa94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801a882:	4885      	ldr	r0, [pc, #532]	; (801aa98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801a884:	f240 212f 	movw	r1, #559	; 0x22f
 801a888:	f008 fb3e 	bl	8022f08 <__assert_func>
 801a88c:	2d00      	cmp	r5, #0
 801a88e:	d04f      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801a890:	6810      	ldr	r0, [r2, #0]
 801a892:	6851      	ldr	r1, [r2, #4]
 801a894:	f8df b208 	ldr.w	fp, [pc, #520]	; 801aaa0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801a898:	ae0c      	add	r6, sp, #48	; 0x30
 801a89a:	c603      	stmia	r6!, {r0, r1}
 801a89c:	6818      	ldr	r0, [r3, #0]
 801a89e:	6859      	ldr	r1, [r3, #4]
 801a8a0:	ae0e      	add	r6, sp, #56	; 0x38
 801a8a2:	c603      	stmia	r6!, {r0, r1}
 801a8a4:	a80c      	add	r0, sp, #48	; 0x30
 801a8a6:	f7f8 fb53 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a8aa:	4641      	mov	r1, r8
 801a8ac:	a80e      	add	r0, sp, #56	; 0x38
 801a8ae:	f7f8 fb77 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a8b2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801a8b6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801a8ba:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801a8be:	f8db 0000 	ldr.w	r0, [fp]
 801a8c2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801a8c6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801a8ca:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801aaa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801a8ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a8d2:	440c      	add	r4, r1
 801a8d4:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801a8d8:	440a      	add	r2, r1
 801a8da:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801a8de:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801a8e2:	4413      	add	r3, r2
 801a8e4:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801a8e8:	6803      	ldr	r3, [r0, #0]
 801a8ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a8ec:	4798      	blx	r3
 801a8ee:	f010 0f80 	tst.w	r0, #128	; 0x80
 801a8f2:	f8db 0000 	ldr.w	r0, [fp]
 801a8f6:	d01e      	beq.n	801a936 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 801a8f8:	2200      	movs	r2, #0
 801a8fa:	6801      	ldr	r1, [r0, #0]
 801a8fc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801a900:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801a904:	220b      	movs	r2, #11
 801a906:	9207      	str	r2, [sp, #28]
 801a908:	f8b8 2000 	ldrh.w	r2, [r8]
 801a90c:	9504      	str	r5, [sp, #16]
 801a90e:	e9cd 9205 	strd	r9, r2, [sp, #20]
 801a912:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801a916:	9203      	str	r2, [sp, #12]
 801a918:	fa1f f28a 	uxth.w	r2, sl
 801a91c:	9202      	str	r2, [sp, #8]
 801a91e:	b2b6      	uxth	r6, r6
 801a920:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801a924:	9200      	str	r2, [sp, #0]
 801a926:	9601      	str	r6, [sp, #4]
 801a928:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801a92a:	463a      	mov	r2, r7
 801a92c:	4621      	mov	r1, r4
 801a92e:	47a8      	blx	r5
 801a930:	b011      	add	sp, #68	; 0x44
 801a932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a936:	6803      	ldr	r3, [r0, #0]
 801a938:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a93a:	4798      	blx	r3
 801a93c:	f8b8 2000 	ldrh.w	r2, [r8]
 801a940:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801a944:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801a948:	2dff      	cmp	r5, #255	; 0xff
 801a94a:	fb02 1303 	mla	r3, r2, r3, r1
 801a94e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a952:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801a956:	fb0a fa02 	mul.w	sl, sl, r2
 801a95a:	d062      	beq.n	801aa22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 801a95c:	ea6f 0c05 	mvn.w	ip, r5
 801a960:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801a964:	930a      	str	r3, [sp, #40]	; 0x28
 801a966:	b2ad      	uxth	r5, r5
 801a968:	fa5f fc8c 	uxtb.w	ip, ip
 801a96c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801a970:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a972:	4298      	cmp	r0, r3
 801a974:	f080 8085 	bcs.w	801aa82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801a978:	eb00 0b09 	add.w	fp, r0, r9
 801a97c:	4558      	cmp	r0, fp
 801a97e:	d246      	bcs.n	801aa0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801a980:	f814 eb01 	ldrb.w	lr, [r4], #1
 801a984:	2303      	movs	r3, #3
 801a986:	2204      	movs	r2, #4
 801a988:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801a98c:	eb07 0a0e 	add.w	sl, r7, lr
 801a990:	8803      	ldrh	r3, [r0, #0]
 801a992:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801a996:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a99a:	1219      	asrs	r1, r3, #8
 801a99c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a9a0:	fb18 f805 	smulbb	r8, r8, r5
 801a9a4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801a9a8:	10da      	asrs	r2, r3, #3
 801a9aa:	fb01 810c 	mla	r1, r1, ip, r8
 801a9ae:	00db      	lsls	r3, r3, #3
 801a9b0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a9b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9b8:	b2db      	uxtb	r3, r3
 801a9ba:	fb18 f805 	smulbb	r8, r8, r5
 801a9be:	fb1e fe05 	smulbb	lr, lr, r5
 801a9c2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801a9c6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801a9ca:	b289      	uxth	r1, r1
 801a9cc:	fb02 820c 	mla	r2, r2, ip, r8
 801a9d0:	fb03 e30c 	mla	r3, r3, ip, lr
 801a9d4:	b292      	uxth	r2, r2
 801a9d6:	b29b      	uxth	r3, r3
 801a9d8:	f101 0801 	add.w	r8, r1, #1
 801a9dc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801a9e0:	f103 0e01 	add.w	lr, r3, #1
 801a9e4:	f102 0801 	add.w	r8, r2, #1
 801a9e8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801a9ec:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801a9f0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a9f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a9f8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a9fc:	ea4e 0101 	orr.w	r1, lr, r1
 801aa00:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801aa04:	ea41 0108 	orr.w	r1, r1, r8
 801aa08:	f820 1b02 	strh.w	r1, [r0], #2
 801aa0c:	e7b6      	b.n	801a97c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801aa0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aa10:	881b      	ldrh	r3, [r3, #0]
 801aa12:	1b9b      	subs	r3, r3, r6
 801aa14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa18:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801aa1c:	1b9b      	subs	r3, r3, r6
 801aa1e:	441c      	add	r4, r3
 801aa20:	e7a6      	b.n	801a970 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801aa22:	491e      	ldr	r1, [pc, #120]	; (801aa9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801aa24:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801aa28:	2203      	movs	r2, #3
 801aa2a:	2504      	movs	r5, #4
 801aa2c:	4550      	cmp	r0, sl
 801aa2e:	d228      	bcs.n	801aa82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801aa30:	eb00 0c09 	add.w	ip, r0, r9
 801aa34:	4560      	cmp	r0, ip
 801aa36:	4623      	mov	r3, r4
 801aa38:	d219      	bcs.n	801aa6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801aa3a:	f893 e000 	ldrb.w	lr, [r3]
 801aa3e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801aa42:	eb07 0b0e 	add.w	fp, r7, lr
 801aa46:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801aa4a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801aa4e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801aa52:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801aa56:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801aa5a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801aa5e:	ea43 030b 	orr.w	r3, r3, fp
 801aa62:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801aa66:	3401      	adds	r4, #1
 801aa68:	f820 3b02 	strh.w	r3, [r0], #2
 801aa6c:	e7e2      	b.n	801aa34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801aa6e:	f8b8 3000 	ldrh.w	r3, [r8]
 801aa72:	1b9b      	subs	r3, r3, r6
 801aa74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa78:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801aa7c:	1b9b      	subs	r3, r3, r6
 801aa7e:	441c      	add	r4, r3
 801aa80:	e7d4      	b.n	801aa2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801aa82:	4b07      	ldr	r3, [pc, #28]	; (801aaa0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801aa84:	6818      	ldr	r0, [r3, #0]
 801aa86:	6803      	ldr	r3, [r0, #0]
 801aa88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aa8a:	4798      	blx	r3
 801aa8c:	e750      	b.n	801a930 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801aa8e:	bf00      	nop
 801aa90:	08028fd2 	.word	0x08028fd2
 801aa94:	080296a2 	.word	0x080296a2
 801aa98:	08029156 	.word	0x08029156
 801aa9c:	fffff800 	.word	0xfffff800
 801aaa0:	2002008c 	.word	0x2002008c
 801aaa4:	20020086 	.word	0x20020086

0801aaa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801aaa8:	b430      	push	{r4, r5}
 801aaaa:	780d      	ldrb	r5, [r1, #0]
 801aaac:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801aab0:	2d01      	cmp	r5, #1
 801aab2:	d00a      	beq.n	801aaca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801aab4:	d305      	bcc.n	801aac2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801aab6:	2d02      	cmp	r5, #2
 801aab8:	d10b      	bne.n	801aad2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801aaba:	9402      	str	r4, [sp, #8]
 801aabc:	bc30      	pop	{r4, r5}
 801aabe:	f7ff bdf5 	b.w	801a6ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801aac2:	9402      	str	r4, [sp, #8]
 801aac4:	bc30      	pop	{r4, r5}
 801aac6:	f7ff bcfb 	b.w	801a4c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801aaca:	9402      	str	r4, [sp, #8]
 801aacc:	bc30      	pop	{r4, r5}
 801aace:	f7ff bec9 	b.w	801a864 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801aad2:	bc30      	pop	{r4, r5}
 801aad4:	4770      	bx	lr
	...

0801aad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801aad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aadc:	4604      	mov	r4, r0
 801aade:	b087      	sub	sp, #28
 801aae0:	6810      	ldr	r0, [r2, #0]
 801aae2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801aae6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801ad20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801aaea:	460e      	mov	r6, r1
 801aaec:	6851      	ldr	r1, [r2, #4]
 801aaee:	ad02      	add	r5, sp, #8
 801aaf0:	c503      	stmia	r5!, {r0, r1}
 801aaf2:	6818      	ldr	r0, [r3, #0]
 801aaf4:	6859      	ldr	r1, [r3, #4]
 801aaf6:	ad04      	add	r5, sp, #16
 801aaf8:	4617      	mov	r7, r2
 801aafa:	c503      	stmia	r5!, {r0, r1}
 801aafc:	a802      	add	r0, sp, #8
 801aafe:	f7f8 fa27 	bl	8012f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab02:	4639      	mov	r1, r7
 801ab04:	a804      	add	r0, sp, #16
 801ab06:	f7f8 fa4b 	bl	8012fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab0a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ab0e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ab12:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801ab16:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ab1a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801ab1e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ab22:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801ab26:	440e      	add	r6, r1
 801ab28:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ab2c:	440a      	add	r2, r1
 801ab2e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ab32:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ab36:	4413      	add	r3, r2
 801ab38:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ab3c:	4b77      	ldr	r3, [pc, #476]	; (801ad1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ab3e:	6818      	ldr	r0, [r3, #0]
 801ab40:	6803      	ldr	r3, [r0, #0]
 801ab42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ab44:	4798      	blx	r3
 801ab46:	f8b9 b000 	ldrh.w	fp, [r9]
 801ab4a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ab4e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ab52:	fb0b 2303 	mla	r3, fp, r3, r2
 801ab56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ab5a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ab5e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ab62:	fb05 f50b 	mul.w	r5, r5, fp
 801ab66:	9300      	str	r3, [sp, #0]
 801ab68:	d069      	beq.n	801ac3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801ab6a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801ab6e:	4558      	cmp	r0, fp
 801ab70:	f080 80cc 	bcs.w	801ad0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ab74:	9b00      	ldr	r3, [sp, #0]
 801ab76:	18c3      	adds	r3, r0, r3
 801ab78:	9301      	str	r3, [sp, #4]
 801ab7a:	4631      	mov	r1, r6
 801ab7c:	9b01      	ldr	r3, [sp, #4]
 801ab7e:	4298      	cmp	r0, r3
 801ab80:	d24f      	bcs.n	801ac22 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801ab82:	f811 2b01 	ldrb.w	r2, [r1], #1
 801ab86:	2a00      	cmp	r2, #0
 801ab88:	d048      	beq.n	801ac1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801ab8a:	fb0a f202 	mul.w	r2, sl, r2
 801ab8e:	1c53      	adds	r3, r2, #1
 801ab90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ab94:	121b      	asrs	r3, r3, #8
 801ab96:	d041      	beq.n	801ac1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801ab98:	8802      	ldrh	r2, [r0, #0]
 801ab9a:	f8b4 c000 	ldrh.w	ip, [r4]
 801ab9e:	b29e      	uxth	r6, r3
 801aba0:	1215      	asrs	r5, r2, #8
 801aba2:	43db      	mvns	r3, r3
 801aba4:	b2db      	uxtb	r3, r3
 801aba6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801abaa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801abae:	fb15 f503 	smulbb	r5, r5, r3
 801abb2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801abb6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801abba:	00d2      	lsls	r2, r2, #3
 801abbc:	fb07 5706 	mla	r7, r7, r6, r5
 801abc0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801abc4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801abc8:	b2d2      	uxtb	r2, r2
 801abca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801abce:	b2bf      	uxth	r7, r7
 801abd0:	fb1e fe03 	smulbb	lr, lr, r3
 801abd4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801abd8:	fa5f fc8c 	uxtb.w	ip, ip
 801abdc:	fb12 f203 	smulbb	r2, r2, r3
 801abe0:	fb05 e506 	mla	r5, r5, r6, lr
 801abe4:	fb0c 2c06 	mla	ip, ip, r6, r2
 801abe8:	f107 0e01 	add.w	lr, r7, #1
 801abec:	fa1f fc8c 	uxth.w	ip, ip
 801abf0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801abf4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801abf8:	f10c 0701 	add.w	r7, ip, #1
 801abfc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ac00:	b2ad      	uxth	r5, r5
 801ac02:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ac06:	ea47 070e 	orr.w	r7, r7, lr
 801ac0a:	f105 0e01 	add.w	lr, r5, #1
 801ac0e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ac12:	096d      	lsrs	r5, r5, #5
 801ac14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac18:	432f      	orrs	r7, r5
 801ac1a:	8007      	strh	r7, [r0, #0]
 801ac1c:	3002      	adds	r0, #2
 801ac1e:	3402      	adds	r4, #2
 801ac20:	e7ac      	b.n	801ab7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ac22:	f8b9 3000 	ldrh.w	r3, [r9]
 801ac26:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ac2a:	eba3 0308 	sub.w	r3, r3, r8
 801ac2e:	eba6 0608 	sub.w	r6, r6, r8
 801ac32:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ac36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ac3a:	440e      	add	r6, r1
 801ac3c:	e797      	b.n	801ab6e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801ac3e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801ac42:	42a8      	cmp	r0, r5
 801ac44:	d262      	bcs.n	801ad0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ac46:	9b00      	ldr	r3, [sp, #0]
 801ac48:	4631      	mov	r1, r6
 801ac4a:	eb00 0b03 	add.w	fp, r0, r3
 801ac4e:	4558      	cmp	r0, fp
 801ac50:	d24e      	bcs.n	801acf0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801ac52:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ac56:	b12b      	cbz	r3, 801ac64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ac58:	2bff      	cmp	r3, #255	; 0xff
 801ac5a:	f8b4 e000 	ldrh.w	lr, [r4]
 801ac5e:	d104      	bne.n	801ac6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801ac60:	f8a0 e000 	strh.w	lr, [r0]
 801ac64:	3002      	adds	r0, #2
 801ac66:	3402      	adds	r4, #2
 801ac68:	e7f1      	b.n	801ac4e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801ac6a:	8802      	ldrh	r2, [r0, #0]
 801ac6c:	b29f      	uxth	r7, r3
 801ac6e:	1216      	asrs	r6, r2, #8
 801ac70:	43db      	mvns	r3, r3
 801ac72:	b2db      	uxtb	r3, r3
 801ac74:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ac78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac7c:	fb16 f603 	smulbb	r6, r6, r3
 801ac80:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801ac84:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac88:	00d2      	lsls	r2, r2, #3
 801ac8a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ac8e:	b2d2      	uxtb	r2, r2
 801ac90:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ac94:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac9c:	fb1a fa03 	smulbb	sl, sl, r3
 801aca0:	fa1f fc8c 	uxth.w	ip, ip
 801aca4:	fb12 f303 	smulbb	r3, r2, r3
 801aca8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801acac:	fa5f fe8e 	uxtb.w	lr, lr
 801acb0:	fb06 a607 	mla	r6, r6, r7, sl
 801acb4:	f10c 0201 	add.w	r2, ip, #1
 801acb8:	fb0e 3307 	mla	r3, lr, r7, r3
 801acbc:	b2b6      	uxth	r6, r6
 801acbe:	b29b      	uxth	r3, r3
 801acc0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801acc4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801acc8:	f106 0a01 	add.w	sl, r6, #1
 801accc:	f103 0c01 	add.w	ip, r3, #1
 801acd0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801acd4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801acd8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801acdc:	0976      	lsrs	r6, r6, #5
 801acde:	ea4c 0c02 	orr.w	ip, ip, r2
 801ace2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ace6:	ea4c 0c06 	orr.w	ip, ip, r6
 801acea:	f8a0 c000 	strh.w	ip, [r0]
 801acee:	e7b9      	b.n	801ac64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801acf0:	f8b9 3000 	ldrh.w	r3, [r9]
 801acf4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801acf8:	eba3 0308 	sub.w	r3, r3, r8
 801acfc:	eba6 0608 	sub.w	r6, r6, r8
 801ad00:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ad04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad08:	440e      	add	r6, r1
 801ad0a:	e79a      	b.n	801ac42 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801ad0c:	4b03      	ldr	r3, [pc, #12]	; (801ad1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ad0e:	6818      	ldr	r0, [r3, #0]
 801ad10:	6803      	ldr	r3, [r0, #0]
 801ad12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ad14:	4798      	blx	r3
 801ad16:	b007      	add	sp, #28
 801ad18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad1c:	2002008c 	.word	0x2002008c
 801ad20:	20020086 	.word	0x20020086

0801ad24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801ad24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad28:	b089      	sub	sp, #36	; 0x24
 801ad2a:	4682      	mov	sl, r0
 801ad2c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801ad30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad32:	460f      	mov	r7, r1
 801ad34:	4691      	mov	r9, r2
 801ad36:	4698      	mov	r8, r3
 801ad38:	2e00      	cmp	r6, #0
 801ad3a:	d03d      	beq.n	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ad3c:	4608      	mov	r0, r1
 801ad3e:	f7fc f859 	bl	8016df4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ad42:	4605      	mov	r5, r0
 801ad44:	4638      	mov	r0, r7
 801ad46:	f7fc f88f 	bl	8016e68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ad4a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801ad4e:	4638      	mov	r0, r7
 801ad50:	f8ad 9008 	strh.w	r9, [sp, #8]
 801ad54:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ad58:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ad5c:	f7fc f952 	bl	8017004 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ad60:	4605      	mov	r5, r0
 801ad62:	4638      	mov	r0, r7
 801ad64:	f7fc f980 	bl	8017068 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801ad68:	4681      	mov	r9, r0
 801ad6a:	4638      	mov	r0, r7
 801ad6c:	f7fc f9d4 	bl	8017118 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801ad70:	280b      	cmp	r0, #11
 801ad72:	f200 816f 	bhi.w	801b054 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 801ad76:	e8df f010 	tbh	[pc, r0, lsl #1]
 801ad7a:	00c3      	.short	0x00c3
 801ad7c:	000c00b4 	.word	0x000c00b4
 801ad80:	016d016d 	.word	0x016d016d
 801ad84:	016d016d 	.word	0x016d016d
 801ad88:	016d016d 	.word	0x016d016d
 801ad8c:	016d016d 	.word	0x016d016d
 801ad90:	00bb      	.short	0x00bb
 801ad92:	4bb3      	ldr	r3, [pc, #716]	; (801b060 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 801ad94:	6818      	ldr	r0, [r3, #0]
 801ad96:	6803      	ldr	r3, [r0, #0]
 801ad98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ad9a:	4798      	blx	r3
 801ad9c:	2eff      	cmp	r6, #255	; 0xff
 801ad9e:	d121      	bne.n	801ade4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801ada0:	0683      	lsls	r3, r0, #26
 801ada2:	d41f      	bmi.n	801ade4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801ada4:	4638      	mov	r0, r7
 801ada6:	f7fc f8f3 	bl	8016f90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801adaa:	b940      	cbnz	r0, 801adbe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801adac:	4623      	mov	r3, r4
 801adae:	aa02      	add	r2, sp, #8
 801adb0:	4629      	mov	r1, r5
 801adb2:	4650      	mov	r0, sl
 801adb4:	f7ff f9e4 	bl	801a180 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801adb8:	b009      	add	sp, #36	; 0x24
 801adba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adbe:	f10d 0818 	add.w	r8, sp, #24
 801adc2:	4639      	mov	r1, r7
 801adc4:	4640      	mov	r0, r8
 801adc6:	f7fc f889 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801adca:	e898 0003 	ldmia.w	r8, {r0, r1}
 801adce:	af04      	add	r7, sp, #16
 801add0:	e887 0003 	stmia.w	r7, {r0, r1}
 801add4:	4638      	mov	r0, r7
 801add6:	4621      	mov	r1, r4
 801add8:	f7f4 fb40 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 801addc:	4638      	mov	r0, r7
 801adde:	f7f4 fb80 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ade2:	b130      	cbz	r0, 801adf2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 801ade4:	4633      	mov	r3, r6
 801ade6:	4622      	mov	r2, r4
 801ade8:	a902      	add	r1, sp, #8
 801adea:	4628      	mov	r0, r5
 801adec:	f7ff f8e2 	bl	8019fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801adf0:	e7e2      	b.n	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801adf2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801adf6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801adfa:	4293      	cmp	r3, r2
 801adfc:	dd12      	ble.n	801ae24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 801adfe:	1a9b      	subs	r3, r3, r2
 801ae00:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ae04:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ae08:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ae0c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ae10:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ae14:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ae18:	4642      	mov	r2, r8
 801ae1a:	4633      	mov	r3, r6
 801ae1c:	a902      	add	r1, sp, #8
 801ae1e:	4628      	mov	r0, r5
 801ae20:	f7ff f8c8 	bl	8019fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ae24:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ae28:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ae2c:	4293      	cmp	r3, r2
 801ae2e:	dd12      	ble.n	801ae56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 801ae30:	1a9b      	subs	r3, r3, r2
 801ae32:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ae36:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ae3a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ae3e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ae42:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ae46:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ae4a:	23ff      	movs	r3, #255	; 0xff
 801ae4c:	4642      	mov	r2, r8
 801ae4e:	a902      	add	r1, sp, #8
 801ae50:	4628      	mov	r0, r5
 801ae52:	f7ff f8af 	bl	8019fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ae56:	463b      	mov	r3, r7
 801ae58:	aa02      	add	r2, sp, #8
 801ae5a:	4629      	mov	r1, r5
 801ae5c:	4650      	mov	r0, sl
 801ae5e:	f7ff f98f 	bl	801a180 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ae62:	88a2      	ldrh	r2, [r4, #4]
 801ae64:	8823      	ldrh	r3, [r4, #0]
 801ae66:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ae6a:	4413      	add	r3, r2
 801ae6c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ae70:	440a      	add	r2, r1
 801ae72:	b29b      	uxth	r3, r3
 801ae74:	b292      	uxth	r2, r2
 801ae76:	b211      	sxth	r1, r2
 801ae78:	b218      	sxth	r0, r3
 801ae7a:	4288      	cmp	r0, r1
 801ae7c:	dd12      	ble.n	801aea4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 801ae7e:	1a9b      	subs	r3, r3, r2
 801ae80:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ae84:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801ae88:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ae8c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ae90:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ae94:	23ff      	movs	r3, #255	; 0xff
 801ae96:	4642      	mov	r2, r8
 801ae98:	a902      	add	r1, sp, #8
 801ae9a:	4628      	mov	r0, r5
 801ae9c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801aea0:	f7ff f888 	bl	8019fb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801aea4:	88e2      	ldrh	r2, [r4, #6]
 801aea6:	8863      	ldrh	r3, [r4, #2]
 801aea8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801aeac:	4413      	add	r3, r2
 801aeae:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801aeb2:	440a      	add	r2, r1
 801aeb4:	b29b      	uxth	r3, r3
 801aeb6:	b292      	uxth	r2, r2
 801aeb8:	b211      	sxth	r1, r2
 801aeba:	b218      	sxth	r0, r3
 801aebc:	4288      	cmp	r0, r1
 801aebe:	f77f af7b 	ble.w	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801aec2:	1a9b      	subs	r3, r3, r2
 801aec4:	f9b4 6000 	ldrsh.w	r6, [r4]
 801aec8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801aecc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801aed0:	f8ad 6018 	strh.w	r6, [sp, #24]
 801aed4:	f8ad 101a 	strh.w	r1, [sp, #26]
 801aed8:	f8ad 001c 	strh.w	r0, [sp, #28]
 801aedc:	23ff      	movs	r3, #255	; 0xff
 801aede:	4642      	mov	r2, r8
 801aee0:	e782      	b.n	801ade8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 801aee2:	4633      	mov	r3, r6
 801aee4:	4622      	mov	r2, r4
 801aee6:	a902      	add	r1, sp, #8
 801aee8:	4628      	mov	r0, r5
 801aeea:	f7ff f9b9 	bl	801a260 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801aeee:	e763      	b.n	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801aef0:	9600      	str	r6, [sp, #0]
 801aef2:	4623      	mov	r3, r4
 801aef4:	aa02      	add	r2, sp, #8
 801aef6:	4649      	mov	r1, r9
 801aef8:	4628      	mov	r0, r5
 801aefa:	f7ff fdd5 	bl	801aaa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801aefe:	e75b      	b.n	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801af00:	4638      	mov	r0, r7
 801af02:	f7fc f845 	bl	8016f90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801af06:	b950      	cbnz	r0, 801af1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 801af08:	e9cd 6000 	strd	r6, r0, [sp]
 801af0c:	f8da 3000 	ldr.w	r3, [sl]
 801af10:	aa02      	add	r2, sp, #8
 801af12:	68de      	ldr	r6, [r3, #12]
 801af14:	4629      	mov	r1, r5
 801af16:	4623      	mov	r3, r4
 801af18:	4650      	mov	r0, sl
 801af1a:	47b0      	blx	r6
 801af1c:	e74c      	b.n	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801af1e:	f10d 0818 	add.w	r8, sp, #24
 801af22:	4639      	mov	r1, r7
 801af24:	4640      	mov	r0, r8
 801af26:	f7fb ffd9 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801af2a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801af2e:	af04      	add	r7, sp, #16
 801af30:	e887 0003 	stmia.w	r7, {r0, r1}
 801af34:	4638      	mov	r0, r7
 801af36:	4621      	mov	r1, r4
 801af38:	f7f4 fa90 	bl	800f45c <_ZN8touchgfx4RectaNERKS0_>
 801af3c:	4638      	mov	r0, r7
 801af3e:	f7f4 fad0 	bl	800f4e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801af42:	b138      	cbz	r0, 801af54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801af44:	9600      	str	r6, [sp, #0]
 801af46:	4623      	mov	r3, r4
 801af48:	aa02      	add	r2, sp, #8
 801af4a:	4649      	mov	r1, r9
 801af4c:	4628      	mov	r0, r5
 801af4e:	f7ff fdc3 	bl	801aad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801af52:	e731      	b.n	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801af54:	e9cd 6000 	strd	r6, r0, [sp]
 801af58:	f8da 3000 	ldr.w	r3, [sl]
 801af5c:	aa02      	add	r2, sp, #8
 801af5e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801af62:	4629      	mov	r1, r5
 801af64:	463b      	mov	r3, r7
 801af66:	4650      	mov	r0, sl
 801af68:	47d8      	blx	fp
 801af6a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801af6e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801af72:	4293      	cmp	r3, r2
 801af74:	dd13      	ble.n	801af9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 801af76:	f9b4 0000 	ldrsh.w	r0, [r4]
 801af7a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801af7e:	f8ad 0018 	strh.w	r0, [sp, #24]
 801af82:	1a9b      	subs	r3, r3, r2
 801af84:	f8ad 201a 	strh.w	r2, [sp, #26]
 801af88:	f8ad 101c 	strh.w	r1, [sp, #28]
 801af8c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801af90:	9600      	str	r6, [sp, #0]
 801af92:	4643      	mov	r3, r8
 801af94:	aa02      	add	r2, sp, #8
 801af96:	4649      	mov	r1, r9
 801af98:	4628      	mov	r0, r5
 801af9a:	f7ff fd9d 	bl	801aad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801af9e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801afa2:	f9b4 2000 	ldrsh.w	r2, [r4]
 801afa6:	4293      	cmp	r3, r2
 801afa8:	dd13      	ble.n	801afd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 801afaa:	1a9b      	subs	r3, r3, r2
 801afac:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801afb0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801afb4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801afb8:	f8ad 001a 	strh.w	r0, [sp, #26]
 801afbc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801afc0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801afc4:	9600      	str	r6, [sp, #0]
 801afc6:	4643      	mov	r3, r8
 801afc8:	aa02      	add	r2, sp, #8
 801afca:	4649      	mov	r1, r9
 801afcc:	4628      	mov	r0, r5
 801afce:	f7ff fd83 	bl	801aad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801afd2:	88a2      	ldrh	r2, [r4, #4]
 801afd4:	8823      	ldrh	r3, [r4, #0]
 801afd6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801afda:	4413      	add	r3, r2
 801afdc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801afe0:	440a      	add	r2, r1
 801afe2:	b29b      	uxth	r3, r3
 801afe4:	b292      	uxth	r2, r2
 801afe6:	b211      	sxth	r1, r2
 801afe8:	b218      	sxth	r0, r3
 801afea:	4288      	cmp	r0, r1
 801afec:	dd13      	ble.n	801b016 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 801afee:	1a9b      	subs	r3, r3, r2
 801aff0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801aff4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801aff8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801affc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b000:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b004:	9600      	str	r6, [sp, #0]
 801b006:	4643      	mov	r3, r8
 801b008:	aa02      	add	r2, sp, #8
 801b00a:	4649      	mov	r1, r9
 801b00c:	4628      	mov	r0, r5
 801b00e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801b012:	f7ff fd61 	bl	801aad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b016:	88e2      	ldrh	r2, [r4, #6]
 801b018:	8863      	ldrh	r3, [r4, #2]
 801b01a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b01e:	4413      	add	r3, r2
 801b020:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b024:	440a      	add	r2, r1
 801b026:	b29b      	uxth	r3, r3
 801b028:	b292      	uxth	r2, r2
 801b02a:	b211      	sxth	r1, r2
 801b02c:	b218      	sxth	r0, r3
 801b02e:	4288      	cmp	r0, r1
 801b030:	f77f aec2 	ble.w	801adb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b034:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b038:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b03c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801b040:	1a9b      	subs	r3, r3, r2
 801b042:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b046:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b04a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b04e:	9600      	str	r6, [sp, #0]
 801b050:	4643      	mov	r3, r8
 801b052:	e779      	b.n	801af48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801b054:	4b03      	ldr	r3, [pc, #12]	; (801b064 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 801b056:	4a04      	ldr	r2, [pc, #16]	; (801b068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 801b058:	4804      	ldr	r0, [pc, #16]	; (801b06c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 801b05a:	21b4      	movs	r1, #180	; 0xb4
 801b05c:	f007 ff54 	bl	8022f08 <__assert_func>
 801b060:	2002008c 	.word	0x2002008c
 801b064:	08029020 	.word	0x08029020
 801b068:	0802972b 	.word	0x0802972b
 801b06c:	08029156 	.word	0x08029156

0801b070 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801b070:	b508      	push	{r3, lr}
 801b072:	b180      	cbz	r0, 801b096 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801b074:	2902      	cmp	r1, #2
 801b076:	d014      	beq.n	801b0a2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801b078:	2903      	cmp	r1, #3
 801b07a:	d01d      	beq.n	801b0b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801b07c:	2901      	cmp	r1, #1
 801b07e:	d101      	bne.n	801b084 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801b080:	2001      	movs	r0, #1
 801b082:	bd08      	pop	{r3, pc}
 801b084:	4b0e      	ldr	r3, [pc, #56]	; (801b0c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b086:	8818      	ldrh	r0, [r3, #0]
 801b088:	b990      	cbnz	r0, 801b0b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b08a:	4b0e      	ldr	r3, [pc, #56]	; (801b0c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801b08c:	4a0e      	ldr	r2, [pc, #56]	; (801b0c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801b08e:	480f      	ldr	r0, [pc, #60]	; (801b0cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801b090:	2150      	movs	r1, #80	; 0x50
 801b092:	f007 ff39 	bl	8022f08 <__assert_func>
 801b096:	2902      	cmp	r1, #2
 801b098:	d00e      	beq.n	801b0b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801b09a:	2903      	cmp	r1, #3
 801b09c:	d0f2      	beq.n	801b084 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801b09e:	2901      	cmp	r1, #1
 801b0a0:	d1ee      	bne.n	801b080 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801b0a2:	4b07      	ldr	r3, [pc, #28]	; (801b0c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b0a4:	8818      	ldrh	r0, [r3, #0]
 801b0a6:	2800      	cmp	r0, #0
 801b0a8:	d0ef      	beq.n	801b08a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801b0aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b0ae:	e7e8      	b.n	801b082 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801b0b0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b0b4:	4240      	negs	r0, r0
 801b0b6:	e7e4      	b.n	801b082 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801b0b8:	f04f 30ff 	mov.w	r0, #4294967295
 801b0bc:	e7e1      	b.n	801b082 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801b0be:	bf00      	nop
 801b0c0:	20020086 	.word	0x20020086
 801b0c4:	080292ac 	.word	0x080292ac
 801b0c8:	080298a8 	.word	0x080298a8
 801b0cc:	080292ee 	.word	0x080292ee

0801b0d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801b0d0:	b508      	push	{r3, lr}
 801b0d2:	b180      	cbz	r0, 801b0f6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801b0d4:	2902      	cmp	r1, #2
 801b0d6:	d014      	beq.n	801b102 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 801b0d8:	2903      	cmp	r1, #3
 801b0da:	d018      	beq.n	801b10e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801b0dc:	2901      	cmp	r1, #1
 801b0de:	d001      	beq.n	801b0e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801b0e0:	2001      	movs	r0, #1
 801b0e2:	e013      	b.n	801b10c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801b0e4:	4b0e      	ldr	r3, [pc, #56]	; (801b120 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b0e6:	8818      	ldrh	r0, [r3, #0]
 801b0e8:	b970      	cbnz	r0, 801b108 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801b0ea:	4b0e      	ldr	r3, [pc, #56]	; (801b124 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801b0ec:	4a0e      	ldr	r2, [pc, #56]	; (801b128 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801b0ee:	480f      	ldr	r0, [pc, #60]	; (801b12c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801b0f0:	2150      	movs	r1, #80	; 0x50
 801b0f2:	f007 ff09 	bl	8022f08 <__assert_func>
 801b0f6:	2902      	cmp	r1, #2
 801b0f8:	d009      	beq.n	801b10e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801b0fa:	2903      	cmp	r1, #3
 801b0fc:	d0f0      	beq.n	801b0e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801b0fe:	2901      	cmp	r1, #1
 801b100:	d1f0      	bne.n	801b0e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801b102:	f04f 30ff 	mov.w	r0, #4294967295
 801b106:	e001      	b.n	801b10c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801b108:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b10c:	bd08      	pop	{r3, pc}
 801b10e:	4b04      	ldr	r3, [pc, #16]	; (801b120 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b110:	8818      	ldrh	r0, [r3, #0]
 801b112:	2800      	cmp	r0, #0
 801b114:	d0e9      	beq.n	801b0ea <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801b116:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b11a:	4240      	negs	r0, r0
 801b11c:	e7f6      	b.n	801b10c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801b11e:	bf00      	nop
 801b120:	20020086 	.word	0x20020086
 801b124:	080292ac 	.word	0x080292ac
 801b128:	080298a8 	.word	0x080298a8
 801b12c:	080292ee 	.word	0x080292ee

0801b130 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801b130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b134:	b099      	sub	sp, #100	; 0x64
 801b136:	910b      	str	r1, [sp, #44]	; 0x2c
 801b138:	a914      	add	r1, sp, #80	; 0x50
 801b13a:	e881 000c 	stmia.w	r1, {r2, r3}
 801b13e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801b142:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801b146:	930a      	str	r3, [sp, #40]	; 0x28
 801b148:	f891 900d 	ldrb.w	r9, [r1, #13]
 801b14c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801b150:	9311      	str	r3, [sp, #68]	; 0x44
 801b152:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801b156:	930c      	str	r3, [sp, #48]	; 0x30
 801b158:	7988      	ldrb	r0, [r1, #6]
 801b15a:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 801b15e:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801b162:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801b166:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801b16a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801b16e:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801b172:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b176:	4303      	orrs	r3, r0
 801b178:	9309      	str	r3, [sp, #36]	; 0x24
 801b17a:	f000 81a1 	beq.w	801b4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801b17e:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801b182:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801b186:	f891 9007 	ldrb.w	r9, [r1, #7]
 801b18a:	ea59 0903 	orrs.w	r9, r9, r3
 801b18e:	f000 8197 	beq.w	801b4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801b192:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801b196:	b29b      	uxth	r3, r3
 801b198:	2e00      	cmp	r6, #0
 801b19a:	f000 813a 	beq.w	801b412 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801b19e:	1af6      	subs	r6, r6, r3
 801b1a0:	b2b6      	uxth	r6, r6
 801b1a2:	0433      	lsls	r3, r6, #16
 801b1a4:	d502      	bpl.n	801b1ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801b1a6:	1bad      	subs	r5, r5, r6
 801b1a8:	b22d      	sxth	r5, r5
 801b1aa:	2600      	movs	r6, #0
 801b1ac:	f9b2 1000 	ldrsh.w	r1, [r2]
 801b1b0:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801b1b4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801b1b8:	428d      	cmp	r5, r1
 801b1ba:	b28b      	uxth	r3, r1
 801b1bc:	bfbf      	itttt	lt
 801b1be:	18f6      	addlt	r6, r6, r3
 801b1c0:	1b75      	sublt	r5, r6, r5
 801b1c2:	b2ae      	uxthlt	r6, r5
 801b1c4:	460d      	movlt	r5, r1
 801b1c6:	8891      	ldrh	r1, [r2, #4]
 801b1c8:	440b      	add	r3, r1
 801b1ca:	b21b      	sxth	r3, r3
 801b1cc:	9310      	str	r3, [sp, #64]	; 0x40
 801b1ce:	88d3      	ldrh	r3, [r2, #6]
 801b1d0:	8852      	ldrh	r2, [r2, #2]
 801b1d2:	4413      	add	r3, r2
 801b1d4:	b21b      	sxth	r3, r3
 801b1d6:	930f      	str	r3, [sp, #60]	; 0x3c
 801b1d8:	4bbc      	ldr	r3, [pc, #752]	; (801b4cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801b1da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b1dc:	f893 b000 	ldrb.w	fp, [r3]
 801b1e0:	f10b 3cff 	add.w	ip, fp, #4294967295
 801b1e4:	f1dc 0300 	rsbs	r3, ip, #0
 801b1e8:	eb43 030c 	adc.w	r3, r3, ip
 801b1ec:	930e      	str	r3, [sp, #56]	; 0x38
 801b1ee:	4629      	mov	r1, r5
 801b1f0:	4653      	mov	r3, sl
 801b1f2:	a814      	add	r0, sp, #80	; 0x50
 801b1f4:	f7f7 fd31 	bl	8012c5a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801b1f8:	4629      	mov	r1, r5
 801b1fa:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801b1fe:	4653      	mov	r3, sl
 801b200:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b202:	a814      	add	r0, sp, #80	; 0x50
 801b204:	f7f7 fd41 	bl	8012c8a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801b208:	a918      	add	r1, sp, #96	; 0x60
 801b20a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801b20e:	a817      	add	r0, sp, #92	; 0x5c
 801b210:	f7f7 fe5c 	bl	8012ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801b214:	f1ba 0f00 	cmp.w	sl, #0
 801b218:	f040 80fe 	bne.w	801b418 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 801b21c:	f1bb 0f01 	cmp.w	fp, #1
 801b220:	f040 8102 	bne.w	801b428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 801b224:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b226:	b153      	cbz	r3, 801b23e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801b228:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b22a:	2408      	movs	r4, #8
 801b22c:	fb94 f3f8 	sdiv	r3, r4, r8
 801b230:	1e5c      	subs	r4, r3, #1
 801b232:	4414      	add	r4, r2
 801b234:	fb94 f4f3 	sdiv	r4, r4, r3
 801b238:	fb14 f403 	smulbb	r4, r4, r3
 801b23c:	b2a4      	uxth	r4, r4
 801b23e:	b906      	cbnz	r6, 801b242 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801b240:	b16f      	cbz	r7, 801b25e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 801b242:	fb07 6304 	mla	r3, r7, r4, r6
 801b246:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b248:	fb08 f303 	mul.w	r3, r8, r3
 801b24c:	463a      	mov	r2, r7
 801b24e:	f003 0707 	and.w	r7, r3, #7
 801b252:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801b256:	9328      	str	r3, [sp, #160]	; 0xa0
 801b258:	eba9 0302 	sub.w	r3, r9, r2
 801b25c:	930d      	str	r3, [sp, #52]	; 0x34
 801b25e:	4651      	mov	r1, sl
 801b260:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b262:	f7ff ff05 	bl	801b070 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801b266:	4651      	mov	r1, sl
 801b268:	4681      	mov	r9, r0
 801b26a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b26c:	f7ff ff30 	bl	801b0d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801b270:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b272:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b274:	eba3 0a02 	sub.w	sl, r3, r2
 801b278:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b27a:	459a      	cmp	sl, r3
 801b27c:	bfa8      	it	ge
 801b27e:	469a      	movge	sl, r3
 801b280:	f1ba 0f00 	cmp.w	sl, #0
 801b284:	4683      	mov	fp, r0
 801b286:	f340 811b 	ble.w	801b4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801b28a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b28c:	1bad      	subs	r5, r5, r6
 801b28e:	1b5d      	subs	r5, r3, r5
 801b290:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b292:	429d      	cmp	r5, r3
 801b294:	bfd4      	ite	le
 801b296:	ebc6 0605 	rsble	r6, r6, r5
 801b29a:	ebc6 0603 	rsbgt	r6, r6, r3
 801b29e:	2e00      	cmp	r6, #0
 801b2a0:	f340 810e 	ble.w	801b4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801b2a4:	1ba4      	subs	r4, r4, r6
 801b2a6:	fb08 f304 	mul.w	r3, r8, r4
 801b2aa:	930f      	str	r3, [sp, #60]	; 0x3c
 801b2ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b2ae:	2b00      	cmp	r3, #0
 801b2b0:	f040 8114 	bne.w	801b4dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801b2b4:	4b86      	ldr	r3, [pc, #536]	; (801b4d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801b2b6:	6818      	ldr	r0, [r3, #0]
 801b2b8:	6803      	ldr	r3, [r0, #0]
 801b2ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b2bc:	4798      	blx	r3
 801b2be:	2301      	movs	r3, #1
 801b2c0:	fa03 f308 	lsl.w	r3, r3, r8
 801b2c4:	4a83      	ldr	r2, [pc, #524]	; (801b4d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801b2c6:	3b01      	subs	r3, #1
 801b2c8:	b2db      	uxtb	r3, r3
 801b2ca:	8811      	ldrh	r1, [r2, #0]
 801b2cc:	930e      	str	r3, [sp, #56]	; 0x38
 801b2ce:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801b2d2:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801b2d6:	fb01 2303 	mla	r3, r1, r3, r2
 801b2da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b2de:	930a      	str	r3, [sp, #40]	; 0x28
 801b2e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2e2:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801b2e6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b2e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2ea:	0a19      	lsrs	r1, r3, #8
 801b2ec:	b2cb      	uxtb	r3, r1
 801b2ee:	9312      	str	r3, [sp, #72]	; 0x48
 801b2f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2f2:	b2db      	uxtb	r3, r3
 801b2f4:	9311      	str	r3, [sp, #68]	; 0x44
 801b2f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2f8:	095a      	lsrs	r2, r3, #5
 801b2fa:	4b77      	ldr	r3, [pc, #476]	; (801b4d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801b2fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b300:	400b      	ands	r3, r1
 801b302:	4313      	orrs	r3, r2
 801b304:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b306:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b30a:	4313      	orrs	r3, r2
 801b30c:	b29b      	uxth	r3, r3
 801b30e:	9310      	str	r3, [sp, #64]	; 0x40
 801b310:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b312:	781a      	ldrb	r2, [r3, #0]
 801b314:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801b318:	413a      	asrs	r2, r7
 801b31a:	fb06 b919 	mls	r9, r6, r9, fp
 801b31e:	fb03 fb06 	mul.w	fp, r3, r6
 801b322:	b2d2      	uxtb	r2, r2
 801b324:	930d      	str	r3, [sp, #52]	; 0x34
 801b326:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801b32a:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801b32e:	f0c0 80ea 	bcc.w	801b506 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 801b332:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801b336:	46b6      	mov	lr, r6
 801b338:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801b33c:	f0c0 80d2 	bcc.w	801b4e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801b340:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b342:	4013      	ands	r3, r2
 801b344:	d055      	beq.n	801b3f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 801b346:	20ff      	movs	r0, #255	; 0xff
 801b348:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b34a:	fb90 f1f1 	sdiv	r1, r0, r1
 801b34e:	434b      	muls	r3, r1
 801b350:	2bfe      	cmp	r3, #254	; 0xfe
 801b352:	dd03      	ble.n	801b35c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 801b354:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b356:	4281      	cmp	r1, r0
 801b358:	f000 80c2 	beq.w	801b4e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801b35c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b35e:	f8bc 4000 	ldrh.w	r4, [ip]
 801b362:	fb11 f303 	smulbb	r3, r1, r3
 801b366:	b29b      	uxth	r3, r3
 801b368:	1c59      	adds	r1, r3, #1
 801b36a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b36e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b372:	b29d      	uxth	r5, r3
 801b374:	43db      	mvns	r3, r3
 801b376:	b2db      	uxtb	r3, r3
 801b378:	9309      	str	r3, [sp, #36]	; 0x24
 801b37a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b37c:	1220      	asrs	r0, r4, #8
 801b37e:	fb13 f905 	smulbb	r9, r3, r5
 801b382:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b386:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b388:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801b38c:	fb00 9003 	mla	r0, r0, r3, r9
 801b390:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b392:	10e1      	asrs	r1, r4, #3
 801b394:	fb13 f905 	smulbb	r9, r3, r5
 801b398:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b39c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b39e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b3a2:	fb01 9103 	mla	r1, r1, r3, r9
 801b3a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b3a8:	00e4      	lsls	r4, r4, #3
 801b3aa:	fb13 f505 	smulbb	r5, r3, r5
 801b3ae:	b2e4      	uxtb	r4, r4
 801b3b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b3b2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b3b6:	fb04 5403 	mla	r4, r4, r3, r5
 801b3ba:	b280      	uxth	r0, r0
 801b3bc:	b2a4      	uxth	r4, r4
 801b3be:	1c43      	adds	r3, r0, #1
 801b3c0:	f104 0901 	add.w	r9, r4, #1
 801b3c4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b3c8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801b3cc:	b289      	uxth	r1, r1
 801b3ce:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801b3d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b3d6:	ea49 0000 	orr.w	r0, r9, r0
 801b3da:	f101 0901 	add.w	r9, r1, #1
 801b3de:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801b3e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b3e6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b3ea:	ea40 0009 	orr.w	r0, r0, r9
 801b3ee:	f8ac 0000 	strh.w	r0, [ip]
 801b3f2:	4447      	add	r7, r8
 801b3f4:	b2bf      	uxth	r7, r7
 801b3f6:	2f07      	cmp	r7, #7
 801b3f8:	bf81      	itttt	hi
 801b3fa:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801b3fc:	785a      	ldrbhi	r2, [r3, #1]
 801b3fe:	3301      	addhi	r3, #1
 801b400:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801b402:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b404:	bf9a      	itte	ls
 801b406:	fa42 f208 	asrls.w	r2, r2, r8
 801b40a:	b2d2      	uxtbls	r2, r2
 801b40c:	2700      	movhi	r7, #0
 801b40e:	449c      	add	ip, r3
 801b410:	e792      	b.n	801b338 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801b412:	441d      	add	r5, r3
 801b414:	b22d      	sxth	r5, r5
 801b416:	e6c9      	b.n	801b1ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801b418:	f1ba 0f01 	cmp.w	sl, #1
 801b41c:	f47f af02 	bne.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b420:	f1bb 0f01 	cmp.w	fp, #1
 801b424:	f47f aefe 	bne.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b428:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801b4d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801b42c:	f8db 0000 	ldr.w	r0, [fp]
 801b430:	6803      	ldr	r3, [r0, #0]
 801b432:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b434:	4798      	blx	r3
 801b436:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801b43a:	465a      	mov	r2, fp
 801b43c:	d006      	beq.n	801b44c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801b43e:	f1b8 0f04 	cmp.w	r8, #4
 801b442:	d140      	bne.n	801b4c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801b444:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b446:	3300      	adds	r3, #0
 801b448:	bf18      	it	ne
 801b44a:	2301      	movne	r3, #1
 801b44c:	0580      	lsls	r0, r0, #22
 801b44e:	d563      	bpl.n	801b518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801b450:	f1b8 0f08 	cmp.w	r8, #8
 801b454:	d160      	bne.n	801b518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801b456:	2b00      	cmp	r3, #0
 801b458:	bf0c      	ite	eq
 801b45a:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801b45e:	f44f 7180 	movne.w	r1, #256	; 0x100
 801b462:	2e00      	cmp	r6, #0
 801b464:	f47f aede 	bne.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b468:	2f00      	cmp	r7, #0
 801b46a:	f47f aedb 	bne.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b46e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b470:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b472:	18eb      	adds	r3, r5, r3
 801b474:	4283      	cmp	r3, r0
 801b476:	f73f aed5 	bgt.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b47a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b47c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b47e:	444b      	add	r3, r9
 801b480:	4283      	cmp	r3, r0
 801b482:	f73f aecf 	bgt.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b486:	6810      	ldr	r0, [r2, #0]
 801b488:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801b48c:	6805      	ldr	r5, [r0, #0]
 801b48e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801b492:	f1b8 0f08 	cmp.w	r8, #8
 801b496:	f04f 0600 	mov.w	r6, #0
 801b49a:	bf18      	it	ne
 801b49c:	3401      	addne	r4, #1
 801b49e:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801b4a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b4a4:	9104      	str	r1, [sp, #16]
 801b4a6:	bf18      	it	ne
 801b4a8:	f024 0401 	bicne.w	r4, r4, #1
 801b4ac:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801b4ae:	bf18      	it	ne
 801b4b0:	b2a4      	uxthne	r4, r4
 801b4b2:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801b4b6:	e9cd 4900 	strd	r4, r9, [sp]
 801b4ba:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b4bc:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801b4be:	47a0      	blx	r4
 801b4c0:	b019      	add	sp, #100	; 0x64
 801b4c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4c6:	2300      	movs	r3, #0
 801b4c8:	e7c0      	b.n	801b44c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801b4ca:	bf00      	nop
 801b4cc:	20020084 	.word	0x20020084
 801b4d0:	2002008c 	.word	0x2002008c
 801b4d4:	20020086 	.word	0x20020086
 801b4d8:	00fff800 	.word	0x00fff800
 801b4dc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b4de:	e6ee      	b.n	801b2be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801b4e0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b4e2:	e784      	b.n	801b3ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801b4e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b4e6:	b153      	cbz	r3, 801b4fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 801b4e8:	441f      	add	r7, r3
 801b4ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b4ec:	b2bf      	uxth	r7, r7
 801b4ee:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801b4f2:	f007 0707 	and.w	r7, r7, #7
 801b4f6:	781a      	ldrb	r2, [r3, #0]
 801b4f8:	9328      	str	r3, [sp, #160]	; 0xa0
 801b4fa:	413a      	asrs	r2, r7
 801b4fc:	b2d2      	uxtb	r2, r2
 801b4fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b500:	445b      	add	r3, fp
 801b502:	930a      	str	r3, [sp, #40]	; 0x28
 801b504:	e711      	b.n	801b32a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801b506:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b508:	2b00      	cmp	r3, #0
 801b50a:	d1d9      	bne.n	801b4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801b50c:	4b05      	ldr	r3, [pc, #20]	; (801b524 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801b50e:	6818      	ldr	r0, [r3, #0]
 801b510:	6803      	ldr	r3, [r0, #0]
 801b512:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b514:	4798      	blx	r3
 801b516:	e7d3      	b.n	801b4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801b518:	2b00      	cmp	r3, #0
 801b51a:	f43f ae83 	beq.w	801b224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801b51e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801b522:	e79e      	b.n	801b462 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 801b524:	2002008c 	.word	0x2002008c

0801b528 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801b528:	b538      	push	{r3, r4, r5, lr}
 801b52a:	4c15      	ldr	r4, [pc, #84]	; (801b580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801b52c:	7823      	ldrb	r3, [r4, #0]
 801b52e:	f3bf 8f5b 	dmb	ish
 801b532:	07da      	lsls	r2, r3, #31
 801b534:	4605      	mov	r5, r0
 801b536:	d40b      	bmi.n	801b550 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801b538:	4620      	mov	r0, r4
 801b53a:	f007 fcb9 	bl	8022eb0 <__cxa_guard_acquire>
 801b53e:	b138      	cbz	r0, 801b550 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801b540:	4620      	mov	r0, r4
 801b542:	f007 fcc1 	bl	8022ec8 <__cxa_guard_release>
 801b546:	4a0f      	ldr	r2, [pc, #60]	; (801b584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801b548:	490f      	ldr	r1, [pc, #60]	; (801b588 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801b54a:	4810      	ldr	r0, [pc, #64]	; (801b58c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801b54c:	f007 fca9 	bl	8022ea2 <__aeabi_atexit>
 801b550:	4c0f      	ldr	r4, [pc, #60]	; (801b590 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801b552:	7823      	ldrb	r3, [r4, #0]
 801b554:	f3bf 8f5b 	dmb	ish
 801b558:	07db      	lsls	r3, r3, #31
 801b55a:	d40b      	bmi.n	801b574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801b55c:	4620      	mov	r0, r4
 801b55e:	f007 fca7 	bl	8022eb0 <__cxa_guard_acquire>
 801b562:	b138      	cbz	r0, 801b574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801b564:	4620      	mov	r0, r4
 801b566:	f007 fcaf 	bl	8022ec8 <__cxa_guard_release>
 801b56a:	4a06      	ldr	r2, [pc, #24]	; (801b584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801b56c:	4909      	ldr	r1, [pc, #36]	; (801b594 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801b56e:	480a      	ldr	r0, [pc, #40]	; (801b598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801b570:	f007 fc97 	bl	8022ea2 <__aeabi_atexit>
 801b574:	4b05      	ldr	r3, [pc, #20]	; (801b58c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801b576:	612b      	str	r3, [r5, #16]
 801b578:	4b07      	ldr	r3, [pc, #28]	; (801b598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801b57a:	616b      	str	r3, [r5, #20]
 801b57c:	bd38      	pop	{r3, r4, r5, pc}
 801b57e:	bf00      	nop
 801b580:	20020158 	.word	0x20020158
 801b584:	20000000 	.word	0x20000000
 801b588:	08019719 	.word	0x08019719
 801b58c:	200000a8 	.word	0x200000a8
 801b590:	2002015c 	.word	0x2002015c
 801b594:	08019717 	.word	0x08019717
 801b598:	200000ac 	.word	0x200000ac

0801b59c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801b59c:	b538      	push	{r3, r4, r5, lr}
 801b59e:	4c15      	ldr	r4, [pc, #84]	; (801b5f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801b5a0:	7823      	ldrb	r3, [r4, #0]
 801b5a2:	f3bf 8f5b 	dmb	ish
 801b5a6:	07da      	lsls	r2, r3, #31
 801b5a8:	4605      	mov	r5, r0
 801b5aa:	d40b      	bmi.n	801b5c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801b5ac:	4620      	mov	r0, r4
 801b5ae:	f007 fc7f 	bl	8022eb0 <__cxa_guard_acquire>
 801b5b2:	b138      	cbz	r0, 801b5c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801b5b4:	4620      	mov	r0, r4
 801b5b6:	f007 fc87 	bl	8022ec8 <__cxa_guard_release>
 801b5ba:	4a0f      	ldr	r2, [pc, #60]	; (801b5f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801b5bc:	490f      	ldr	r1, [pc, #60]	; (801b5fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801b5be:	4810      	ldr	r0, [pc, #64]	; (801b600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801b5c0:	f007 fc6f 	bl	8022ea2 <__aeabi_atexit>
 801b5c4:	4c0f      	ldr	r4, [pc, #60]	; (801b604 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801b5c6:	7823      	ldrb	r3, [r4, #0]
 801b5c8:	f3bf 8f5b 	dmb	ish
 801b5cc:	07db      	lsls	r3, r3, #31
 801b5ce:	d40b      	bmi.n	801b5e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801b5d0:	4620      	mov	r0, r4
 801b5d2:	f007 fc6d 	bl	8022eb0 <__cxa_guard_acquire>
 801b5d6:	b138      	cbz	r0, 801b5e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801b5d8:	4620      	mov	r0, r4
 801b5da:	f007 fc75 	bl	8022ec8 <__cxa_guard_release>
 801b5de:	4a06      	ldr	r2, [pc, #24]	; (801b5f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801b5e0:	4909      	ldr	r1, [pc, #36]	; (801b608 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801b5e2:	480a      	ldr	r0, [pc, #40]	; (801b60c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801b5e4:	f007 fc5d 	bl	8022ea2 <__aeabi_atexit>
 801b5e8:	4b05      	ldr	r3, [pc, #20]	; (801b600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801b5ea:	60ab      	str	r3, [r5, #8]
 801b5ec:	4b07      	ldr	r3, [pc, #28]	; (801b60c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801b5ee:	60eb      	str	r3, [r5, #12]
 801b5f0:	bd38      	pop	{r3, r4, r5, pc}
 801b5f2:	bf00      	nop
 801b5f4:	20020130 	.word	0x20020130
 801b5f8:	20000000 	.word	0x20000000
 801b5fc:	0801971d 	.word	0x0801971d
 801b600:	20000080 	.word	0x20000080
 801b604:	20020134 	.word	0x20020134
 801b608:	0801971b 	.word	0x0801971b
 801b60c:	20000084 	.word	0x20000084

0801b610 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801b610:	b510      	push	{r4, lr}
 801b612:	4604      	mov	r4, r0
 801b614:	f7ff ff88 	bl	801b528 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801b618:	4620      	mov	r0, r4
 801b61a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b61e:	f7ff bfbd 	b.w	801b59c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801b624 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801b624:	b538      	push	{r3, r4, r5, lr}
 801b626:	4c15      	ldr	r4, [pc, #84]	; (801b67c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801b628:	7823      	ldrb	r3, [r4, #0]
 801b62a:	f3bf 8f5b 	dmb	ish
 801b62e:	07da      	lsls	r2, r3, #31
 801b630:	4605      	mov	r5, r0
 801b632:	d40b      	bmi.n	801b64c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801b634:	4620      	mov	r0, r4
 801b636:	f007 fc3b 	bl	8022eb0 <__cxa_guard_acquire>
 801b63a:	b138      	cbz	r0, 801b64c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801b63c:	4620      	mov	r0, r4
 801b63e:	f007 fc43 	bl	8022ec8 <__cxa_guard_release>
 801b642:	4a0f      	ldr	r2, [pc, #60]	; (801b680 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801b644:	490f      	ldr	r1, [pc, #60]	; (801b684 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801b646:	4810      	ldr	r0, [pc, #64]	; (801b688 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801b648:	f007 fc2b 	bl	8022ea2 <__aeabi_atexit>
 801b64c:	4c0f      	ldr	r4, [pc, #60]	; (801b68c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801b64e:	7823      	ldrb	r3, [r4, #0]
 801b650:	f3bf 8f5b 	dmb	ish
 801b654:	07db      	lsls	r3, r3, #31
 801b656:	d40b      	bmi.n	801b670 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801b658:	4620      	mov	r0, r4
 801b65a:	f007 fc29 	bl	8022eb0 <__cxa_guard_acquire>
 801b65e:	b138      	cbz	r0, 801b670 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801b660:	4620      	mov	r0, r4
 801b662:	f007 fc31 	bl	8022ec8 <__cxa_guard_release>
 801b666:	4a06      	ldr	r2, [pc, #24]	; (801b680 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801b668:	4909      	ldr	r1, [pc, #36]	; (801b690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801b66a:	480a      	ldr	r0, [pc, #40]	; (801b694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801b66c:	f007 fc19 	bl	8022ea2 <__aeabi_atexit>
 801b670:	4b05      	ldr	r3, [pc, #20]	; (801b688 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801b672:	622b      	str	r3, [r5, #32]
 801b674:	4b07      	ldr	r3, [pc, #28]	; (801b694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801b676:	626b      	str	r3, [r5, #36]	; 0x24
 801b678:	bd38      	pop	{r3, r4, r5, pc}
 801b67a:	bf00      	nop
 801b67c:	20020160 	.word	0x20020160
 801b680:	20000000 	.word	0x20000000
 801b684:	08019711 	.word	0x08019711
 801b688:	200000b0 	.word	0x200000b0
 801b68c:	20020164 	.word	0x20020164
 801b690:	0801970f 	.word	0x0801970f
 801b694:	200000b4 	.word	0x200000b4

0801b698 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801b698:	b538      	push	{r3, r4, r5, lr}
 801b69a:	4c15      	ldr	r4, [pc, #84]	; (801b6f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801b69c:	7823      	ldrb	r3, [r4, #0]
 801b69e:	f3bf 8f5b 	dmb	ish
 801b6a2:	07da      	lsls	r2, r3, #31
 801b6a4:	4605      	mov	r5, r0
 801b6a6:	d40b      	bmi.n	801b6c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801b6a8:	4620      	mov	r0, r4
 801b6aa:	f007 fc01 	bl	8022eb0 <__cxa_guard_acquire>
 801b6ae:	b138      	cbz	r0, 801b6c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801b6b0:	4620      	mov	r0, r4
 801b6b2:	f007 fc09 	bl	8022ec8 <__cxa_guard_release>
 801b6b6:	4a0f      	ldr	r2, [pc, #60]	; (801b6f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801b6b8:	490f      	ldr	r1, [pc, #60]	; (801b6f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801b6ba:	4810      	ldr	r0, [pc, #64]	; (801b6fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801b6bc:	f007 fbf1 	bl	8022ea2 <__aeabi_atexit>
 801b6c0:	4c0f      	ldr	r4, [pc, #60]	; (801b700 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801b6c2:	7823      	ldrb	r3, [r4, #0]
 801b6c4:	f3bf 8f5b 	dmb	ish
 801b6c8:	07db      	lsls	r3, r3, #31
 801b6ca:	d40b      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801b6cc:	4620      	mov	r0, r4
 801b6ce:	f007 fbef 	bl	8022eb0 <__cxa_guard_acquire>
 801b6d2:	b138      	cbz	r0, 801b6e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801b6d4:	4620      	mov	r0, r4
 801b6d6:	f007 fbf7 	bl	8022ec8 <__cxa_guard_release>
 801b6da:	4a06      	ldr	r2, [pc, #24]	; (801b6f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801b6dc:	4909      	ldr	r1, [pc, #36]	; (801b704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801b6de:	480a      	ldr	r0, [pc, #40]	; (801b708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801b6e0:	f007 fbdf 	bl	8022ea2 <__aeabi_atexit>
 801b6e4:	4b05      	ldr	r3, [pc, #20]	; (801b6fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801b6e6:	61ab      	str	r3, [r5, #24]
 801b6e8:	4b07      	ldr	r3, [pc, #28]	; (801b708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801b6ea:	61eb      	str	r3, [r5, #28]
 801b6ec:	bd38      	pop	{r3, r4, r5, pc}
 801b6ee:	bf00      	nop
 801b6f0:	20020138 	.word	0x20020138
 801b6f4:	20000000 	.word	0x20000000
 801b6f8:	08019715 	.word	0x08019715
 801b6fc:	20000088 	.word	0x20000088
 801b700:	2002013c 	.word	0x2002013c
 801b704:	08019713 	.word	0x08019713
 801b708:	2000008c 	.word	0x2000008c

0801b70c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801b70c:	b510      	push	{r4, lr}
 801b70e:	4604      	mov	r4, r0
 801b710:	f7ff ff88 	bl	801b624 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801b714:	4620      	mov	r0, r4
 801b716:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b71a:	f7ff bfbd 	b.w	801b698 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801b720 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801b720:	b538      	push	{r3, r4, r5, lr}
 801b722:	4c15      	ldr	r4, [pc, #84]	; (801b778 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801b724:	7823      	ldrb	r3, [r4, #0]
 801b726:	f3bf 8f5b 	dmb	ish
 801b72a:	07da      	lsls	r2, r3, #31
 801b72c:	4605      	mov	r5, r0
 801b72e:	d40b      	bmi.n	801b748 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801b730:	4620      	mov	r0, r4
 801b732:	f007 fbbd 	bl	8022eb0 <__cxa_guard_acquire>
 801b736:	b138      	cbz	r0, 801b748 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801b738:	4620      	mov	r0, r4
 801b73a:	f007 fbc5 	bl	8022ec8 <__cxa_guard_release>
 801b73e:	4a0f      	ldr	r2, [pc, #60]	; (801b77c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b740:	490f      	ldr	r1, [pc, #60]	; (801b780 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801b742:	4810      	ldr	r0, [pc, #64]	; (801b784 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b744:	f007 fbad 	bl	8022ea2 <__aeabi_atexit>
 801b748:	4c0f      	ldr	r4, [pc, #60]	; (801b788 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801b74a:	7823      	ldrb	r3, [r4, #0]
 801b74c:	f3bf 8f5b 	dmb	ish
 801b750:	07db      	lsls	r3, r3, #31
 801b752:	d40b      	bmi.n	801b76c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801b754:	4620      	mov	r0, r4
 801b756:	f007 fbab 	bl	8022eb0 <__cxa_guard_acquire>
 801b75a:	b138      	cbz	r0, 801b76c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801b75c:	4620      	mov	r0, r4
 801b75e:	f007 fbb3 	bl	8022ec8 <__cxa_guard_release>
 801b762:	4a06      	ldr	r2, [pc, #24]	; (801b77c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b764:	4909      	ldr	r1, [pc, #36]	; (801b78c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801b766:	480a      	ldr	r0, [pc, #40]	; (801b790 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b768:	f007 fb9b 	bl	8022ea2 <__aeabi_atexit>
 801b76c:	4b05      	ldr	r3, [pc, #20]	; (801b784 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b76e:	632b      	str	r3, [r5, #48]	; 0x30
 801b770:	4b07      	ldr	r3, [pc, #28]	; (801b790 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b772:	636b      	str	r3, [r5, #52]	; 0x34
 801b774:	bd38      	pop	{r3, r4, r5, pc}
 801b776:	bf00      	nop
 801b778:	20020170 	.word	0x20020170
 801b77c:	20000000 	.word	0x20000000
 801b780:	08019709 	.word	0x08019709
 801b784:	200000c0 	.word	0x200000c0
 801b788:	20020174 	.word	0x20020174
 801b78c:	08019707 	.word	0x08019707
 801b790:	200000c4 	.word	0x200000c4

0801b794 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801b794:	b538      	push	{r3, r4, r5, lr}
 801b796:	4c15      	ldr	r4, [pc, #84]	; (801b7ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801b798:	7823      	ldrb	r3, [r4, #0]
 801b79a:	f3bf 8f5b 	dmb	ish
 801b79e:	07da      	lsls	r2, r3, #31
 801b7a0:	4605      	mov	r5, r0
 801b7a2:	d40b      	bmi.n	801b7bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b7a4:	4620      	mov	r0, r4
 801b7a6:	f007 fb83 	bl	8022eb0 <__cxa_guard_acquire>
 801b7aa:	b138      	cbz	r0, 801b7bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b7ac:	4620      	mov	r0, r4
 801b7ae:	f007 fb8b 	bl	8022ec8 <__cxa_guard_release>
 801b7b2:	4a0f      	ldr	r2, [pc, #60]	; (801b7f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b7b4:	490f      	ldr	r1, [pc, #60]	; (801b7f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801b7b6:	4810      	ldr	r0, [pc, #64]	; (801b7f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b7b8:	f007 fb73 	bl	8022ea2 <__aeabi_atexit>
 801b7bc:	4c0f      	ldr	r4, [pc, #60]	; (801b7fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801b7be:	7823      	ldrb	r3, [r4, #0]
 801b7c0:	f3bf 8f5b 	dmb	ish
 801b7c4:	07db      	lsls	r3, r3, #31
 801b7c6:	d40b      	bmi.n	801b7e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b7c8:	4620      	mov	r0, r4
 801b7ca:	f007 fb71 	bl	8022eb0 <__cxa_guard_acquire>
 801b7ce:	b138      	cbz	r0, 801b7e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b7d0:	4620      	mov	r0, r4
 801b7d2:	f007 fb79 	bl	8022ec8 <__cxa_guard_release>
 801b7d6:	4a06      	ldr	r2, [pc, #24]	; (801b7f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b7d8:	4909      	ldr	r1, [pc, #36]	; (801b800 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801b7da:	480a      	ldr	r0, [pc, #40]	; (801b804 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b7dc:	f007 fb61 	bl	8022ea2 <__aeabi_atexit>
 801b7e0:	4b05      	ldr	r3, [pc, #20]	; (801b7f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b7e2:	62ab      	str	r3, [r5, #40]	; 0x28
 801b7e4:	4b07      	ldr	r3, [pc, #28]	; (801b804 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b7e6:	62eb      	str	r3, [r5, #44]	; 0x2c
 801b7e8:	bd38      	pop	{r3, r4, r5, pc}
 801b7ea:	bf00      	nop
 801b7ec:	20020140 	.word	0x20020140
 801b7f0:	20000000 	.word	0x20000000
 801b7f4:	0801970d 	.word	0x0801970d
 801b7f8:	20000090 	.word	0x20000090
 801b7fc:	20020144 	.word	0x20020144
 801b800:	0801970b 	.word	0x0801970b
 801b804:	20000094 	.word	0x20000094

0801b808 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801b808:	b510      	push	{r4, lr}
 801b80a:	4604      	mov	r4, r0
 801b80c:	f7ff ff88 	bl	801b720 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801b810:	4620      	mov	r0, r4
 801b812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b816:	f7ff bfbd 	b.w	801b794 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801b81c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801b81c:	b538      	push	{r3, r4, r5, lr}
 801b81e:	4c15      	ldr	r4, [pc, #84]	; (801b874 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801b820:	7823      	ldrb	r3, [r4, #0]
 801b822:	f3bf 8f5b 	dmb	ish
 801b826:	07da      	lsls	r2, r3, #31
 801b828:	4605      	mov	r5, r0
 801b82a:	d40b      	bmi.n	801b844 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b82c:	4620      	mov	r0, r4
 801b82e:	f007 fb3f 	bl	8022eb0 <__cxa_guard_acquire>
 801b832:	b138      	cbz	r0, 801b844 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b834:	4620      	mov	r0, r4
 801b836:	f007 fb47 	bl	8022ec8 <__cxa_guard_release>
 801b83a:	4a0f      	ldr	r2, [pc, #60]	; (801b878 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b83c:	490f      	ldr	r1, [pc, #60]	; (801b87c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801b83e:	4810      	ldr	r0, [pc, #64]	; (801b880 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b840:	f007 fb2f 	bl	8022ea2 <__aeabi_atexit>
 801b844:	4c0f      	ldr	r4, [pc, #60]	; (801b884 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801b846:	7823      	ldrb	r3, [r4, #0]
 801b848:	f3bf 8f5b 	dmb	ish
 801b84c:	07db      	lsls	r3, r3, #31
 801b84e:	d40b      	bmi.n	801b868 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b850:	4620      	mov	r0, r4
 801b852:	f007 fb2d 	bl	8022eb0 <__cxa_guard_acquire>
 801b856:	b138      	cbz	r0, 801b868 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b858:	4620      	mov	r0, r4
 801b85a:	f007 fb35 	bl	8022ec8 <__cxa_guard_release>
 801b85e:	4a06      	ldr	r2, [pc, #24]	; (801b878 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b860:	4909      	ldr	r1, [pc, #36]	; (801b888 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801b862:	480a      	ldr	r0, [pc, #40]	; (801b88c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b864:	f007 fb1d 	bl	8022ea2 <__aeabi_atexit>
 801b868:	4b05      	ldr	r3, [pc, #20]	; (801b880 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b86a:	652b      	str	r3, [r5, #80]	; 0x50
 801b86c:	4b07      	ldr	r3, [pc, #28]	; (801b88c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b86e:	656b      	str	r3, [r5, #84]	; 0x54
 801b870:	bd38      	pop	{r3, r4, r5, pc}
 801b872:	bf00      	nop
 801b874:	20020178 	.word	0x20020178
 801b878:	20000000 	.word	0x20000000
 801b87c:	080196f9 	.word	0x080196f9
 801b880:	200000c8 	.word	0x200000c8
 801b884:	2002017c 	.word	0x2002017c
 801b888:	080196f7 	.word	0x080196f7
 801b88c:	200000cc 	.word	0x200000cc

0801b890 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801b890:	b538      	push	{r3, r4, r5, lr}
 801b892:	4c15      	ldr	r4, [pc, #84]	; (801b8e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801b894:	7823      	ldrb	r3, [r4, #0]
 801b896:	f3bf 8f5b 	dmb	ish
 801b89a:	07da      	lsls	r2, r3, #31
 801b89c:	4605      	mov	r5, r0
 801b89e:	d40b      	bmi.n	801b8b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b8a0:	4620      	mov	r0, r4
 801b8a2:	f007 fb05 	bl	8022eb0 <__cxa_guard_acquire>
 801b8a6:	b138      	cbz	r0, 801b8b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b8a8:	4620      	mov	r0, r4
 801b8aa:	f007 fb0d 	bl	8022ec8 <__cxa_guard_release>
 801b8ae:	4a0f      	ldr	r2, [pc, #60]	; (801b8ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b8b0:	490f      	ldr	r1, [pc, #60]	; (801b8f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801b8b2:	4810      	ldr	r0, [pc, #64]	; (801b8f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b8b4:	f007 faf5 	bl	8022ea2 <__aeabi_atexit>
 801b8b8:	4c0f      	ldr	r4, [pc, #60]	; (801b8f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801b8ba:	7823      	ldrb	r3, [r4, #0]
 801b8bc:	f3bf 8f5b 	dmb	ish
 801b8c0:	07db      	lsls	r3, r3, #31
 801b8c2:	d40b      	bmi.n	801b8dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b8c4:	4620      	mov	r0, r4
 801b8c6:	f007 faf3 	bl	8022eb0 <__cxa_guard_acquire>
 801b8ca:	b138      	cbz	r0, 801b8dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b8cc:	4620      	mov	r0, r4
 801b8ce:	f007 fafb 	bl	8022ec8 <__cxa_guard_release>
 801b8d2:	4a06      	ldr	r2, [pc, #24]	; (801b8ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b8d4:	4909      	ldr	r1, [pc, #36]	; (801b8fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801b8d6:	480a      	ldr	r0, [pc, #40]	; (801b900 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b8d8:	f007 fae3 	bl	8022ea2 <__aeabi_atexit>
 801b8dc:	4b05      	ldr	r3, [pc, #20]	; (801b8f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b8de:	64ab      	str	r3, [r5, #72]	; 0x48
 801b8e0:	4b07      	ldr	r3, [pc, #28]	; (801b900 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b8e2:	64eb      	str	r3, [r5, #76]	; 0x4c
 801b8e4:	bd38      	pop	{r3, r4, r5, pc}
 801b8e6:	bf00      	nop
 801b8e8:	20020180 	.word	0x20020180
 801b8ec:	20000000 	.word	0x20000000
 801b8f0:	080196fd 	.word	0x080196fd
 801b8f4:	200000d0 	.word	0x200000d0
 801b8f8:	20020184 	.word	0x20020184
 801b8fc:	080196fb 	.word	0x080196fb
 801b900:	200000d4 	.word	0x200000d4

0801b904 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801b904:	b538      	push	{r3, r4, r5, lr}
 801b906:	4c15      	ldr	r4, [pc, #84]	; (801b95c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801b908:	7823      	ldrb	r3, [r4, #0]
 801b90a:	f3bf 8f5b 	dmb	ish
 801b90e:	07da      	lsls	r2, r3, #31
 801b910:	4605      	mov	r5, r0
 801b912:	d40b      	bmi.n	801b92c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b914:	4620      	mov	r0, r4
 801b916:	f007 facb 	bl	8022eb0 <__cxa_guard_acquire>
 801b91a:	b138      	cbz	r0, 801b92c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b91c:	4620      	mov	r0, r4
 801b91e:	f007 fad3 	bl	8022ec8 <__cxa_guard_release>
 801b922:	4a0f      	ldr	r2, [pc, #60]	; (801b960 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b924:	490f      	ldr	r1, [pc, #60]	; (801b964 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801b926:	4810      	ldr	r0, [pc, #64]	; (801b968 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b928:	f007 fabb 	bl	8022ea2 <__aeabi_atexit>
 801b92c:	4c0f      	ldr	r4, [pc, #60]	; (801b96c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801b92e:	7823      	ldrb	r3, [r4, #0]
 801b930:	f3bf 8f5b 	dmb	ish
 801b934:	07db      	lsls	r3, r3, #31
 801b936:	d40b      	bmi.n	801b950 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b938:	4620      	mov	r0, r4
 801b93a:	f007 fab9 	bl	8022eb0 <__cxa_guard_acquire>
 801b93e:	b138      	cbz	r0, 801b950 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b940:	4620      	mov	r0, r4
 801b942:	f007 fac1 	bl	8022ec8 <__cxa_guard_release>
 801b946:	4a06      	ldr	r2, [pc, #24]	; (801b960 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b948:	4909      	ldr	r1, [pc, #36]	; (801b970 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801b94a:	480a      	ldr	r0, [pc, #40]	; (801b974 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b94c:	f007 faa9 	bl	8022ea2 <__aeabi_atexit>
 801b950:	4b05      	ldr	r3, [pc, #20]	; (801b968 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b952:	642b      	str	r3, [r5, #64]	; 0x40
 801b954:	4b07      	ldr	r3, [pc, #28]	; (801b974 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b956:	646b      	str	r3, [r5, #68]	; 0x44
 801b958:	bd38      	pop	{r3, r4, r5, pc}
 801b95a:	bf00      	nop
 801b95c:	20020148 	.word	0x20020148
 801b960:	20000000 	.word	0x20000000
 801b964:	08019701 	.word	0x08019701
 801b968:	20000098 	.word	0x20000098
 801b96c:	2002014c 	.word	0x2002014c
 801b970:	080196ff 	.word	0x080196ff
 801b974:	2000009c 	.word	0x2000009c

0801b978 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801b978:	b538      	push	{r3, r4, r5, lr}
 801b97a:	4c15      	ldr	r4, [pc, #84]	; (801b9d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801b97c:	7823      	ldrb	r3, [r4, #0]
 801b97e:	f3bf 8f5b 	dmb	ish
 801b982:	07da      	lsls	r2, r3, #31
 801b984:	4605      	mov	r5, r0
 801b986:	d40b      	bmi.n	801b9a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b988:	4620      	mov	r0, r4
 801b98a:	f007 fa91 	bl	8022eb0 <__cxa_guard_acquire>
 801b98e:	b138      	cbz	r0, 801b9a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b990:	4620      	mov	r0, r4
 801b992:	f007 fa99 	bl	8022ec8 <__cxa_guard_release>
 801b996:	4a0f      	ldr	r2, [pc, #60]	; (801b9d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b998:	490f      	ldr	r1, [pc, #60]	; (801b9d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801b99a:	4810      	ldr	r0, [pc, #64]	; (801b9dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b99c:	f007 fa81 	bl	8022ea2 <__aeabi_atexit>
 801b9a0:	4c0f      	ldr	r4, [pc, #60]	; (801b9e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801b9a2:	7823      	ldrb	r3, [r4, #0]
 801b9a4:	f3bf 8f5b 	dmb	ish
 801b9a8:	07db      	lsls	r3, r3, #31
 801b9aa:	d40b      	bmi.n	801b9c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b9ac:	4620      	mov	r0, r4
 801b9ae:	f007 fa7f 	bl	8022eb0 <__cxa_guard_acquire>
 801b9b2:	b138      	cbz	r0, 801b9c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b9b4:	4620      	mov	r0, r4
 801b9b6:	f007 fa87 	bl	8022ec8 <__cxa_guard_release>
 801b9ba:	4a06      	ldr	r2, [pc, #24]	; (801b9d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b9bc:	4909      	ldr	r1, [pc, #36]	; (801b9e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801b9be:	480a      	ldr	r0, [pc, #40]	; (801b9e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b9c0:	f007 fa6f 	bl	8022ea2 <__aeabi_atexit>
 801b9c4:	4b05      	ldr	r3, [pc, #20]	; (801b9dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b9c6:	63ab      	str	r3, [r5, #56]	; 0x38
 801b9c8:	4b07      	ldr	r3, [pc, #28]	; (801b9e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b9ca:	63eb      	str	r3, [r5, #60]	; 0x3c
 801b9cc:	bd38      	pop	{r3, r4, r5, pc}
 801b9ce:	bf00      	nop
 801b9d0:	20020168 	.word	0x20020168
 801b9d4:	20000000 	.word	0x20000000
 801b9d8:	08019705 	.word	0x08019705
 801b9dc:	200000b8 	.word	0x200000b8
 801b9e0:	2002016c 	.word	0x2002016c
 801b9e4:	08019703 	.word	0x08019703
 801b9e8:	200000bc 	.word	0x200000bc

0801b9ec <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801b9ec:	b510      	push	{r4, lr}
 801b9ee:	4604      	mov	r4, r0
 801b9f0:	f7ff ff14 	bl	801b81c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801b9f4:	4620      	mov	r0, r4
 801b9f6:	f7ff ff85 	bl	801b904 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801b9fa:	4620      	mov	r0, r4
 801b9fc:	f7ff ff48 	bl	801b890 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801ba00:	4620      	mov	r0, r4
 801ba02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ba06:	f7ff bfb7 	b.w	801b978 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ba0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ba0c:	b538      	push	{r3, r4, r5, lr}
 801ba0e:	4c15      	ldr	r4, [pc, #84]	; (801ba64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ba10:	7823      	ldrb	r3, [r4, #0]
 801ba12:	f3bf 8f5b 	dmb	ish
 801ba16:	07da      	lsls	r2, r3, #31
 801ba18:	4605      	mov	r5, r0
 801ba1a:	d40b      	bmi.n	801ba34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ba1c:	4620      	mov	r0, r4
 801ba1e:	f007 fa47 	bl	8022eb0 <__cxa_guard_acquire>
 801ba22:	b138      	cbz	r0, 801ba34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ba24:	4620      	mov	r0, r4
 801ba26:	f007 fa4f 	bl	8022ec8 <__cxa_guard_release>
 801ba2a:	4a0f      	ldr	r2, [pc, #60]	; (801ba68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ba2c:	490f      	ldr	r1, [pc, #60]	; (801ba6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ba2e:	4810      	ldr	r0, [pc, #64]	; (801ba70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ba30:	f007 fa37 	bl	8022ea2 <__aeabi_atexit>
 801ba34:	4c0f      	ldr	r4, [pc, #60]	; (801ba74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801ba36:	7823      	ldrb	r3, [r4, #0]
 801ba38:	f3bf 8f5b 	dmb	ish
 801ba3c:	07db      	lsls	r3, r3, #31
 801ba3e:	d40b      	bmi.n	801ba58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ba40:	4620      	mov	r0, r4
 801ba42:	f007 fa35 	bl	8022eb0 <__cxa_guard_acquire>
 801ba46:	b138      	cbz	r0, 801ba58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ba48:	4620      	mov	r0, r4
 801ba4a:	f007 fa3d 	bl	8022ec8 <__cxa_guard_release>
 801ba4e:	4a06      	ldr	r2, [pc, #24]	; (801ba68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ba50:	4909      	ldr	r1, [pc, #36]	; (801ba78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ba52:	480a      	ldr	r0, [pc, #40]	; (801ba7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ba54:	f007 fa25 	bl	8022ea2 <__aeabi_atexit>
 801ba58:	4b05      	ldr	r3, [pc, #20]	; (801ba70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ba5a:	662b      	str	r3, [r5, #96]	; 0x60
 801ba5c:	4b07      	ldr	r3, [pc, #28]	; (801ba7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ba5e:	666b      	str	r3, [r5, #100]	; 0x64
 801ba60:	bd38      	pop	{r3, r4, r5, pc}
 801ba62:	bf00      	nop
 801ba64:	20020150 	.word	0x20020150
 801ba68:	20000000 	.word	0x20000000
 801ba6c:	080196f1 	.word	0x080196f1
 801ba70:	200000a0 	.word	0x200000a0
 801ba74:	20020154 	.word	0x20020154
 801ba78:	080196ef 	.word	0x080196ef
 801ba7c:	200000a4 	.word	0x200000a4

0801ba80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801ba80:	b538      	push	{r3, r4, r5, lr}
 801ba82:	4c15      	ldr	r4, [pc, #84]	; (801bad8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801ba84:	7823      	ldrb	r3, [r4, #0]
 801ba86:	f3bf 8f5b 	dmb	ish
 801ba8a:	07da      	lsls	r2, r3, #31
 801ba8c:	4605      	mov	r5, r0
 801ba8e:	d40b      	bmi.n	801baa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ba90:	4620      	mov	r0, r4
 801ba92:	f007 fa0d 	bl	8022eb0 <__cxa_guard_acquire>
 801ba96:	b138      	cbz	r0, 801baa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ba98:	4620      	mov	r0, r4
 801ba9a:	f007 fa15 	bl	8022ec8 <__cxa_guard_release>
 801ba9e:	4a0f      	ldr	r2, [pc, #60]	; (801badc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801baa0:	490f      	ldr	r1, [pc, #60]	; (801bae0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801baa2:	4810      	ldr	r0, [pc, #64]	; (801bae4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801baa4:	f007 f9fd 	bl	8022ea2 <__aeabi_atexit>
 801baa8:	4c0f      	ldr	r4, [pc, #60]	; (801bae8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801baaa:	7823      	ldrb	r3, [r4, #0]
 801baac:	f3bf 8f5b 	dmb	ish
 801bab0:	07db      	lsls	r3, r3, #31
 801bab2:	d40b      	bmi.n	801bacc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801bab4:	4620      	mov	r0, r4
 801bab6:	f007 f9fb 	bl	8022eb0 <__cxa_guard_acquire>
 801baba:	b138      	cbz	r0, 801bacc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801babc:	4620      	mov	r0, r4
 801babe:	f007 fa03 	bl	8022ec8 <__cxa_guard_release>
 801bac2:	4a06      	ldr	r2, [pc, #24]	; (801badc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801bac4:	4909      	ldr	r1, [pc, #36]	; (801baec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801bac6:	480a      	ldr	r0, [pc, #40]	; (801baf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801bac8:	f007 f9eb 	bl	8022ea2 <__aeabi_atexit>
 801bacc:	4b05      	ldr	r3, [pc, #20]	; (801bae4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801bace:	65ab      	str	r3, [r5, #88]	; 0x58
 801bad0:	4b07      	ldr	r3, [pc, #28]	; (801baf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801bad2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801bad4:	bd38      	pop	{r3, r4, r5, pc}
 801bad6:	bf00      	nop
 801bad8:	20020128 	.word	0x20020128
 801badc:	20000000 	.word	0x20000000
 801bae0:	080196f5 	.word	0x080196f5
 801bae4:	20000078 	.word	0x20000078
 801bae8:	2002012c 	.word	0x2002012c
 801baec:	080196f3 	.word	0x080196f3
 801baf0:	2000007c 	.word	0x2000007c

0801baf4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801baf4:	b510      	push	{r4, lr}
 801baf6:	4604      	mov	r4, r0
 801baf8:	f7ff ff88 	bl	801ba0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801bafc:	4620      	mov	r0, r4
 801bafe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bb02:	f7ff bfbd 	b.w	801ba80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801bb08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801bb08:	b538      	push	{r3, r4, r5, lr}
 801bb0a:	4c15      	ldr	r4, [pc, #84]	; (801bb60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801bb0c:	7823      	ldrb	r3, [r4, #0]
 801bb0e:	f3bf 8f5b 	dmb	ish
 801bb12:	07da      	lsls	r2, r3, #31
 801bb14:	4605      	mov	r5, r0
 801bb16:	d40b      	bmi.n	801bb30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801bb18:	4620      	mov	r0, r4
 801bb1a:	f007 f9c9 	bl	8022eb0 <__cxa_guard_acquire>
 801bb1e:	b138      	cbz	r0, 801bb30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801bb20:	4620      	mov	r0, r4
 801bb22:	f007 f9d1 	bl	8022ec8 <__cxa_guard_release>
 801bb26:	4a0f      	ldr	r2, [pc, #60]	; (801bb64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801bb28:	490f      	ldr	r1, [pc, #60]	; (801bb68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801bb2a:	4810      	ldr	r0, [pc, #64]	; (801bb6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801bb2c:	f007 f9b9 	bl	8022ea2 <__aeabi_atexit>
 801bb30:	4c0f      	ldr	r4, [pc, #60]	; (801bb70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801bb32:	7823      	ldrb	r3, [r4, #0]
 801bb34:	f3bf 8f5b 	dmb	ish
 801bb38:	07db      	lsls	r3, r3, #31
 801bb3a:	d40b      	bmi.n	801bb54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801bb3c:	4620      	mov	r0, r4
 801bb3e:	f007 f9b7 	bl	8022eb0 <__cxa_guard_acquire>
 801bb42:	b138      	cbz	r0, 801bb54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801bb44:	4620      	mov	r0, r4
 801bb46:	f007 f9bf 	bl	8022ec8 <__cxa_guard_release>
 801bb4a:	4a06      	ldr	r2, [pc, #24]	; (801bb64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801bb4c:	4909      	ldr	r1, [pc, #36]	; (801bb74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801bb4e:	480a      	ldr	r0, [pc, #40]	; (801bb78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801bb50:	f007 f9a7 	bl	8022ea2 <__aeabi_atexit>
 801bb54:	4b05      	ldr	r3, [pc, #20]	; (801bb6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801bb56:	672b      	str	r3, [r5, #112]	; 0x70
 801bb58:	4b07      	ldr	r3, [pc, #28]	; (801bb78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801bb5a:	676b      	str	r3, [r5, #116]	; 0x74
 801bb5c:	bd38      	pop	{r3, r4, r5, pc}
 801bb5e:	bf00      	nop
 801bb60:	20020120 	.word	0x20020120
 801bb64:	20000000 	.word	0x20000000
 801bb68:	080196e9 	.word	0x080196e9
 801bb6c:	20000070 	.word	0x20000070
 801bb70:	20020124 	.word	0x20020124
 801bb74:	080196e7 	.word	0x080196e7
 801bb78:	20000074 	.word	0x20000074

0801bb7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801bb7c:	b538      	push	{r3, r4, r5, lr}
 801bb7e:	4c15      	ldr	r4, [pc, #84]	; (801bbd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801bb80:	7823      	ldrb	r3, [r4, #0]
 801bb82:	f3bf 8f5b 	dmb	ish
 801bb86:	07da      	lsls	r2, r3, #31
 801bb88:	4605      	mov	r5, r0
 801bb8a:	d40b      	bmi.n	801bba4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801bb8c:	4620      	mov	r0, r4
 801bb8e:	f007 f98f 	bl	8022eb0 <__cxa_guard_acquire>
 801bb92:	b138      	cbz	r0, 801bba4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801bb94:	4620      	mov	r0, r4
 801bb96:	f007 f997 	bl	8022ec8 <__cxa_guard_release>
 801bb9a:	4a0f      	ldr	r2, [pc, #60]	; (801bbd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801bb9c:	490f      	ldr	r1, [pc, #60]	; (801bbdc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801bb9e:	4810      	ldr	r0, [pc, #64]	; (801bbe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801bba0:	f007 f97f 	bl	8022ea2 <__aeabi_atexit>
 801bba4:	4c0f      	ldr	r4, [pc, #60]	; (801bbe4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801bba6:	7823      	ldrb	r3, [r4, #0]
 801bba8:	f3bf 8f5b 	dmb	ish
 801bbac:	07db      	lsls	r3, r3, #31
 801bbae:	d40b      	bmi.n	801bbc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801bbb0:	4620      	mov	r0, r4
 801bbb2:	f007 f97d 	bl	8022eb0 <__cxa_guard_acquire>
 801bbb6:	b138      	cbz	r0, 801bbc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801bbb8:	4620      	mov	r0, r4
 801bbba:	f007 f985 	bl	8022ec8 <__cxa_guard_release>
 801bbbe:	4a06      	ldr	r2, [pc, #24]	; (801bbd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801bbc0:	4909      	ldr	r1, [pc, #36]	; (801bbe8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801bbc2:	480a      	ldr	r0, [pc, #40]	; (801bbec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801bbc4:	f007 f96d 	bl	8022ea2 <__aeabi_atexit>
 801bbc8:	4b05      	ldr	r3, [pc, #20]	; (801bbe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801bbca:	66ab      	str	r3, [r5, #104]	; 0x68
 801bbcc:	4b07      	ldr	r3, [pc, #28]	; (801bbec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801bbce:	66eb      	str	r3, [r5, #108]	; 0x6c
 801bbd0:	bd38      	pop	{r3, r4, r5, pc}
 801bbd2:	bf00      	nop
 801bbd4:	20020118 	.word	0x20020118
 801bbd8:	20000000 	.word	0x20000000
 801bbdc:	080196ed 	.word	0x080196ed
 801bbe0:	20000068 	.word	0x20000068
 801bbe4:	2002011c 	.word	0x2002011c
 801bbe8:	080196eb 	.word	0x080196eb
 801bbec:	2000006c 	.word	0x2000006c

0801bbf0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801bbf0:	b510      	push	{r4, lr}
 801bbf2:	4604      	mov	r4, r0
 801bbf4:	f7ff ff88 	bl	801bb08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801bbf8:	4620      	mov	r0, r4
 801bbfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bbfe:	f7ff bfbd 	b.w	801bb7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801bc02 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801bc02:	b510      	push	{r4, lr}
 801bc04:	4604      	mov	r4, r0
 801bc06:	f7ff fff3 	bl	801bbf0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801bc0a:	4620      	mov	r0, r4
 801bc0c:	f7ff ff72 	bl	801baf4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801bc10:	4620      	mov	r0, r4
 801bc12:	f7ff fdf9 	bl	801b808 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801bc16:	4620      	mov	r0, r4
 801bc18:	f7ff fcfa 	bl	801b610 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801bc1c:	4620      	mov	r0, r4
 801bc1e:	f7ff fd75 	bl	801b70c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801bc22:	4620      	mov	r0, r4
 801bc24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bc28:	f7ff bee0 	b.w	801b9ec <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801bc2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801bc2c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc30:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801bc34:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801bc38:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801bc3c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801bc40:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801bc44:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 801bc48:	8808      	ldrh	r0, [r1, #0]
 801bc4a:	fb0e 4708 	mla	r7, lr, r8, r4
 801bc4e:	f1be 0f00 	cmp.w	lr, #0
 801bc52:	eb02 0a07 	add.w	sl, r2, r7
 801bc56:	db37      	blt.n	801bcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801bc58:	45f3      	cmp	fp, lr
 801bc5a:	dd35      	ble.n	801bcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801bc5c:	2c00      	cmp	r4, #0
 801bc5e:	db31      	blt.n	801bcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801bc60:	45a0      	cmp	r8, r4
 801bc62:	dd2f      	ble.n	801bcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801bc64:	5dd2      	ldrb	r2, [r2, r7]
 801bc66:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801bc6a:	1c62      	adds	r2, r4, #1
 801bc6c:	d42f      	bmi.n	801bcce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801bc6e:	4590      	cmp	r8, r2
 801bc70:	dd2d      	ble.n	801bcce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801bc72:	b366      	cbz	r6, 801bcce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801bc74:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bc78:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801bc7c:	f11e 0e01 	adds.w	lr, lr, #1
 801bc80:	d429      	bmi.n	801bcd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801bc82:	45f3      	cmp	fp, lr
 801bc84:	dd27      	ble.n	801bcd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801bc86:	f1bc 0f00 	cmp.w	ip, #0
 801bc8a:	f000 80a1 	beq.w	801bdd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 801bc8e:	2c00      	cmp	r4, #0
 801bc90:	db1f      	blt.n	801bcd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801bc92:	45a0      	cmp	r8, r4
 801bc94:	dd1d      	ble.n	801bcd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801bc96:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801bc9a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801bc9e:	3401      	adds	r4, #1
 801bca0:	d41c      	bmi.n	801bcdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801bca2:	45a0      	cmp	r8, r4
 801bca4:	dd1a      	ble.n	801bcdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801bca6:	b1de      	cbz	r6, 801bce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 801bca8:	44d0      	add	r8, sl
 801bcaa:	f898 2001 	ldrb.w	r2, [r8, #1]
 801bcae:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801bcb2:	2e0f      	cmp	r6, #15
 801bcb4:	d915      	bls.n	801bce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801bcb6:	4b49      	ldr	r3, [pc, #292]	; (801bddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 801bcb8:	4a49      	ldr	r2, [pc, #292]	; (801bde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801bcba:	484a      	ldr	r0, [pc, #296]	; (801bde4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801bcbc:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801bcc0:	f007 f922 	bl	8022f08 <__assert_func>
 801bcc4:	4681      	mov	r9, r0
 801bcc6:	e7d0      	b.n	801bc6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 801bcc8:	4607      	mov	r7, r0
 801bcca:	4681      	mov	r9, r0
 801bccc:	e7d6      	b.n	801bc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801bcce:	4607      	mov	r7, r0
 801bcd0:	e7d4      	b.n	801bc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801bcd2:	4686      	mov	lr, r0
 801bcd4:	e7e3      	b.n	801bc9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801bcd6:	4603      	mov	r3, r0
 801bcd8:	4686      	mov	lr, r0
 801bcda:	e7ea      	b.n	801bcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801bcdc:	4603      	mov	r3, r0
 801bcde:	e7e8      	b.n	801bcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801bce0:	4603      	mov	r3, r0
 801bce2:	f1bc 0f0f 	cmp.w	ip, #15
 801bce6:	d8e6      	bhi.n	801bcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801bce8:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801bcec:	fb16 f80c 	smulbb	r8, r6, ip
 801bcf0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bcf4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801bcf8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bcfc:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801bd00:	ea44 0909 	orr.w	r9, r4, r9
 801bd04:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd08:	f1cc 0410 	rsb	r4, ip, #16
 801bd0c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801bd10:	1ba4      	subs	r4, r4, r6
 801bd12:	041a      	lsls	r2, r3, #16
 801bd14:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801bd18:	ea4a 0707 	orr.w	r7, sl, r7
 801bd1c:	4377      	muls	r7, r6
 801bd1e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801bd22:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801bd26:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bd2a:	fb04 7409 	mla	r4, r4, r9, r7
 801bd2e:	4313      	orrs	r3, r2
 801bd30:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801bd34:	fb08 4303 	mla	r3, r8, r3, r4
 801bd38:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801bd3c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801bd40:	4322      	orrs	r2, r4
 801bd42:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801bd46:	fb0c 3202 	mla	r2, ip, r2, r3
 801bd4a:	0d53      	lsrs	r3, r2, #21
 801bd4c:	0952      	lsrs	r2, r2, #5
 801bd4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bd56:	431a      	orrs	r2, r3
 801bd58:	b293      	uxth	r3, r2
 801bd5a:	b2af      	uxth	r7, r5
 801bd5c:	1202      	asrs	r2, r0, #8
 801bd5e:	43ed      	mvns	r5, r5
 801bd60:	b2ed      	uxtb	r5, r5
 801bd62:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bd66:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bd6a:	fb12 f205 	smulbb	r2, r2, r5
 801bd6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd72:	fb0c 2c07 	mla	ip, ip, r7, r2
 801bd76:	00dc      	lsls	r4, r3, #3
 801bd78:	10da      	asrs	r2, r3, #3
 801bd7a:	10c6      	asrs	r6, r0, #3
 801bd7c:	00c3      	lsls	r3, r0, #3
 801bd7e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bd82:	b2db      	uxtb	r3, r3
 801bd84:	fb16 f605 	smulbb	r6, r6, r5
 801bd88:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bd8c:	b2e4      	uxtb	r4, r4
 801bd8e:	fb13 f305 	smulbb	r3, r3, r5
 801bd92:	fa1f fc8c 	uxth.w	ip, ip
 801bd96:	fb02 6207 	mla	r2, r2, r7, r6
 801bd9a:	fb04 3307 	mla	r3, r4, r7, r3
 801bd9e:	b296      	uxth	r6, r2
 801bda0:	b29a      	uxth	r2, r3
 801bda2:	f10c 0301 	add.w	r3, ip, #1
 801bda6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801bdaa:	1c53      	adds	r3, r2, #1
 801bdac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bdb0:	1c72      	adds	r2, r6, #1
 801bdb2:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801bdb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bdba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bdbe:	0952      	lsrs	r2, r2, #5
 801bdc0:	ea43 030c 	orr.w	r3, r3, ip
 801bdc4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdc8:	4313      	orrs	r3, r2
 801bdca:	800b      	strh	r3, [r1, #0]
 801bdcc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdd0:	2e0f      	cmp	r6, #15
 801bdd2:	f63f af70 	bhi.w	801bcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801bdd6:	4603      	mov	r3, r0
 801bdd8:	4686      	mov	lr, r0
 801bdda:	e785      	b.n	801bce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801bddc:	0802926a 	.word	0x0802926a
 801bde0:	080298e3 	.word	0x080298e3
 801bde4:	080292ee 	.word	0x080292ee

0801bde8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bde8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdec:	ed2d 8b08 	vpush	{d8-d11}
 801bdf0:	b099      	sub	sp, #100	; 0x64
 801bdf2:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801bdf6:	9215      	str	r2, [sp, #84]	; 0x54
 801bdf8:	9309      	str	r3, [sp, #36]	; 0x24
 801bdfa:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801bdfc:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801be00:	930d      	str	r3, [sp, #52]	; 0x34
 801be02:	910c      	str	r1, [sp, #48]	; 0x30
 801be04:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801be08:	9016      	str	r0, [sp, #88]	; 0x58
 801be0a:	6850      	ldr	r0, [r2, #4]
 801be0c:	6812      	ldr	r2, [r2, #0]
 801be0e:	fb00 1303 	mla	r3, r0, r3, r1
 801be12:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801be16:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801be18:	681b      	ldr	r3, [r3, #0]
 801be1a:	930b      	str	r3, [sp, #44]	; 0x2c
 801be1c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801be1e:	685e      	ldr	r6, [r3, #4]
 801be20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be22:	43db      	mvns	r3, r3
 801be24:	b2db      	uxtb	r3, r3
 801be26:	eeb0 aa40 	vmov.f32	s20, s0
 801be2a:	eef0 9a60 	vmov.f32	s19, s1
 801be2e:	eeb0 9a41 	vmov.f32	s18, s2
 801be32:	eeb0 8a62 	vmov.f32	s16, s5
 801be36:	eef0 8a43 	vmov.f32	s17, s6
 801be3a:	eef0 ba44 	vmov.f32	s23, s8
 801be3e:	eeb0 ba64 	vmov.f32	s22, s9
 801be42:	eef0 aa45 	vmov.f32	s21, s10
 801be46:	3604      	adds	r6, #4
 801be48:	930a      	str	r3, [sp, #40]	; 0x28
 801be4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801be4c:	2b00      	cmp	r3, #0
 801be4e:	dc03      	bgt.n	801be58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801be50:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801be52:	2b00      	cmp	r3, #0
 801be54:	f340 8225 	ble.w	801c2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801be58:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801be5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be62:	1e48      	subs	r0, r1, #1
 801be64:	1e57      	subs	r7, r2, #1
 801be66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be68:	2b00      	cmp	r3, #0
 801be6a:	f340 80e3 	ble.w	801c034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 801be6e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801be72:	ea4f 4325 	mov.w	r3, r5, asr #16
 801be76:	d406      	bmi.n	801be86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801be78:	4584      	cmp	ip, r0
 801be7a:	da04      	bge.n	801be86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801be7c:	2b00      	cmp	r3, #0
 801be7e:	db02      	blt.n	801be86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801be80:	42bb      	cmp	r3, r7
 801be82:	f2c0 80d8 	blt.w	801c036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801be86:	f11c 0c01 	adds.w	ip, ip, #1
 801be8a:	f100 80c9 	bmi.w	801c020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801be8e:	4561      	cmp	r1, ip
 801be90:	f2c0 80c6 	blt.w	801c020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801be94:	3301      	adds	r3, #1
 801be96:	f100 80c3 	bmi.w	801c020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801be9a:	429a      	cmp	r2, r3
 801be9c:	f2c0 80c0 	blt.w	801c020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801bea0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801bea4:	4647      	mov	r7, r8
 801bea6:	f1bb 0f00 	cmp.w	fp, #0
 801beaa:	f340 80e3 	ble.w	801c074 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801beae:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801beb0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801beb2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801beb6:	689b      	ldr	r3, [r3, #8]
 801beb8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801bebc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bec0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801bec4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bec8:	f100 8121 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801becc:	f103 39ff 	add.w	r9, r3, #4294967295
 801bed0:	454a      	cmp	r2, r9
 801bed2:	f280 811c 	bge.w	801c10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801bed6:	f1bc 0f00 	cmp.w	ip, #0
 801beda:	f2c0 8118 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801bede:	f10e 39ff 	add.w	r9, lr, #4294967295
 801bee2:	45cc      	cmp	ip, r9
 801bee4:	f280 8113 	bge.w	801c10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801bee8:	b21b      	sxth	r3, r3
 801beea:	fb0c 2203 	mla	r2, ip, r3, r2
 801beee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bef0:	eb04 0902 	add.w	r9, r4, r2
 801bef4:	5ca2      	ldrb	r2, [r4, r2]
 801bef6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801befa:	2800      	cmp	r0, #0
 801befc:	f000 80fe 	beq.w	801c0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bf00:	f899 2001 	ldrb.w	r2, [r9, #1]
 801bf04:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801bf08:	9211      	str	r2, [sp, #68]	; 0x44
 801bf0a:	b151      	cbz	r1, 801bf22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801bf0c:	eb09 0203 	add.w	r2, r9, r3
 801bf10:	f819 3003 	ldrb.w	r3, [r9, r3]
 801bf14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bf18:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf1a:	7853      	ldrb	r3, [r2, #1]
 801bf1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bf20:	9312      	str	r3, [sp, #72]	; 0x48
 801bf22:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bf24:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bf26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bf2a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bf2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bf32:	ea4c 0c03 	orr.w	ip, ip, r3
 801bf36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801bf38:	041b      	lsls	r3, r3, #16
 801bf3a:	fb10 f201 	smulbb	r2, r0, r1
 801bf3e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bf42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bf46:	10d2      	asrs	r2, r2, #3
 801bf48:	4323      	orrs	r3, r4
 801bf4a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801bf4e:	4353      	muls	r3, r2
 801bf50:	fb09 330c 	mla	r3, r9, ip, r3
 801bf54:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801bf58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bf5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bf60:	ea4c 0e0e 	orr.w	lr, ip, lr
 801bf64:	f1c1 0c10 	rsb	ip, r1, #16
 801bf68:	ebac 0c00 	sub.w	ip, ip, r0
 801bf6c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801bf70:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801bf74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bf76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bf78:	0418      	lsls	r0, r3, #16
 801bf7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801bf7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bf82:	4318      	orrs	r0, r3
 801bf84:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801bf88:	fb02 c200 	mla	r2, r2, r0, ip
 801bf8c:	0d53      	lsrs	r3, r2, #21
 801bf8e:	0952      	lsrs	r2, r2, #5
 801bf90:	8838      	ldrh	r0, [r7, #0]
 801bf92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bf96:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bf9a:	431a      	orrs	r2, r3
 801bf9c:	b292      	uxth	r2, r2
 801bf9e:	1201      	asrs	r1, r0, #8
 801bfa0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801bfa4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801bfa8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bfac:	fb11 f104 	smulbb	r1, r1, r4
 801bfb0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801bfb4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bfb8:	00c0      	lsls	r0, r0, #3
 801bfba:	fb0c 1c03 	mla	ip, ip, r3, r1
 801bfbe:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bfc2:	10d1      	asrs	r1, r2, #3
 801bfc4:	b2c0      	uxtb	r0, r0
 801bfc6:	00d2      	lsls	r2, r2, #3
 801bfc8:	b2d2      	uxtb	r2, r2
 801bfca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bfce:	fb1e fe04 	smulbb	lr, lr, r4
 801bfd2:	fb10 f004 	smulbb	r0, r0, r4
 801bfd6:	fa1f fc8c 	uxth.w	ip, ip
 801bfda:	fb01 e103 	mla	r1, r1, r3, lr
 801bfde:	fb02 0303 	mla	r3, r2, r3, r0
 801bfe2:	b29a      	uxth	r2, r3
 801bfe4:	f10c 0301 	add.w	r3, ip, #1
 801bfe8:	b289      	uxth	r1, r1
 801bfea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801bfee:	1c53      	adds	r3, r2, #1
 801bff0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bff4:	1c4a      	adds	r2, r1, #1
 801bff6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bffa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bffe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c002:	0949      	lsrs	r1, r1, #5
 801c004:	ea43 030c 	orr.w	r3, r3, ip
 801c008:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c00c:	430b      	orrs	r3, r1
 801c00e:	803b      	strh	r3, [r7, #0]
 801c010:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c012:	449a      	add	sl, r3
 801c014:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c016:	3702      	adds	r7, #2
 801c018:	441d      	add	r5, r3
 801c01a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c01e:	e742      	b.n	801bea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801c020:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c022:	449a      	add	sl, r3
 801c024:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c026:	441d      	add	r5, r3
 801c028:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c02a:	3b01      	subs	r3, #1
 801c02c:	9309      	str	r3, [sp, #36]	; 0x24
 801c02e:	f108 0802 	add.w	r8, r8, #2
 801c032:	e718      	b.n	801be66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c034:	d023      	beq.n	801c07e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801c036:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c038:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801c03a:	3b01      	subs	r3, #1
 801c03c:	fb00 a003 	mla	r0, r0, r3, sl
 801c040:	1400      	asrs	r0, r0, #16
 801c042:	f53f af2d 	bmi.w	801bea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c046:	3901      	subs	r1, #1
 801c048:	4288      	cmp	r0, r1
 801c04a:	f6bf af29 	bge.w	801bea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c04e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801c050:	fb01 5303 	mla	r3, r1, r3, r5
 801c054:	141b      	asrs	r3, r3, #16
 801c056:	f53f af23 	bmi.w	801bea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c05a:	3a01      	subs	r2, #1
 801c05c:	4293      	cmp	r3, r2
 801c05e:	f6bf af1f 	bge.w	801bea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c062:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c066:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801c06a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801c06e:	f1be 0f00 	cmp.w	lr, #0
 801c072:	dc6c      	bgt.n	801c14e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 801c074:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c076:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c07a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c07e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c080:	2b00      	cmp	r3, #0
 801c082:	f340 810e 	ble.w	801c2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801c086:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c08a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c08e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c092:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c094:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c098:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c09c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c0a0:	eef0 6a48 	vmov.f32	s13, s16
 801c0a4:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c0a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c0ac:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c0b0:	ee16 aa90 	vmov	sl, s13
 801c0b4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c0b8:	eef0 6a68 	vmov.f32	s13, s17
 801c0bc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c0c0:	ee18 2a10 	vmov	r2, s16
 801c0c4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c0c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0cc:	ee18 2a90 	vmov	r2, s17
 801c0d0:	932d      	str	r3, [sp, #180]	; 0xb4
 801c0d2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c0d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0d8:	932e      	str	r3, [sp, #184]	; 0xb8
 801c0da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c0dc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801c0de:	3b01      	subs	r3, #1
 801c0e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c0e4:	930c      	str	r3, [sp, #48]	; 0x30
 801c0e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c0e8:	bf08      	it	eq
 801c0ea:	4613      	moveq	r3, r2
 801c0ec:	ee16 5a90 	vmov	r5, s13
 801c0f0:	9309      	str	r3, [sp, #36]	; 0x24
 801c0f2:	eef0 8a67 	vmov.f32	s17, s15
 801c0f6:	eeb0 8a47 	vmov.f32	s16, s14
 801c0fa:	e6a6      	b.n	801be4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801c0fc:	2900      	cmp	r1, #0
 801c0fe:	f43f af10 	beq.w	801bf22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801c102:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c106:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c10a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c10c:	e709      	b.n	801bf22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801c10e:	f112 0901 	adds.w	r9, r2, #1
 801c112:	f53f af7d 	bmi.w	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c116:	454b      	cmp	r3, r9
 801c118:	f6ff af7a 	blt.w	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c11c:	f11c 0901 	adds.w	r9, ip, #1
 801c120:	f53f af76 	bmi.w	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c124:	45ce      	cmp	lr, r9
 801c126:	f6ff af73 	blt.w	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c12a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c12c:	9202      	str	r2, [sp, #8]
 801c12e:	b21b      	sxth	r3, r3
 801c130:	fa0f f28e 	sxth.w	r2, lr
 801c134:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c138:	e9cd c003 	strd	ip, r0, [sp, #12]
 801c13c:	9201      	str	r2, [sp, #4]
 801c13e:	9300      	str	r3, [sp, #0]
 801c140:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c142:	9816      	ldr	r0, [sp, #88]	; 0x58
 801c144:	4633      	mov	r3, r6
 801c146:	4639      	mov	r1, r7
 801c148:	f7ff fd70 	bl	801bc2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801c14c:	e760      	b.n	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c14e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801c150:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c152:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c156:	ea4f 422a 	mov.w	r2, sl, asr #16
 801c15a:	1429      	asrs	r1, r5, #16
 801c15c:	fb03 2101 	mla	r1, r3, r1, r2
 801c160:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c162:	440a      	add	r2, r1
 801c164:	5c61      	ldrb	r1, [r4, r1]
 801c166:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801c16a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c16e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801c172:	f1bc 0f00 	cmp.w	ip, #0
 801c176:	f000 808c 	beq.w	801c292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801c17a:	7857      	ldrb	r7, [r2, #1]
 801c17c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801c180:	9413      	str	r4, [sp, #76]	; 0x4c
 801c182:	b140      	cbz	r0, 801c196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801c184:	18d7      	adds	r7, r2, r3
 801c186:	5cd3      	ldrb	r3, [r2, r3]
 801c188:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c18c:	9310      	str	r3, [sp, #64]	; 0x40
 801c18e:	787b      	ldrb	r3, [r7, #1]
 801c190:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c194:	9314      	str	r3, [sp, #80]	; 0x50
 801c196:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c198:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c19a:	fb1c f200 	smulbb	r2, ip, r0
 801c19e:	041f      	lsls	r7, r3, #16
 801c1a0:	10d2      	asrs	r2, r2, #3
 801c1a2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c1a6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801c1aa:	431f      	orrs	r7, r3
 801c1ac:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801c1b0:	9317      	str	r3, [sp, #92]	; 0x5c
 801c1b2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c1b4:	041b      	lsls	r3, r3, #16
 801c1b6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801c1ba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c1be:	ea43 030b 	orr.w	r3, r3, fp
 801c1c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c1c4:	4353      	muls	r3, r2
 801c1c6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c1ca:	fb04 3707 	mla	r7, r4, r7, r3
 801c1ce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c1d2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801c1d6:	ea43 0b01 	orr.w	fp, r3, r1
 801c1da:	f1c0 0110 	rsb	r1, r0, #16
 801c1de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c1e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c1e2:	eba1 0c0c 	sub.w	ip, r1, ip
 801c1e6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c1ea:	fb0c 770b 	mla	r7, ip, fp, r7
 801c1ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c1f2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801c1f6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c1fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c1fe:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c202:	fb02 770c 	mla	r7, r2, ip, r7
 801c206:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c208:	0d79      	lsrs	r1, r7, #21
 801c20a:	097f      	lsrs	r7, r7, #5
 801c20c:	8812      	ldrh	r2, [r2, #0]
 801c20e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c212:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c216:	430f      	orrs	r7, r1
 801c218:	b2bb      	uxth	r3, r7
 801c21a:	1211      	asrs	r1, r2, #8
 801c21c:	1218      	asrs	r0, r3, #8
 801c21e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c222:	fb11 f104 	smulbb	r1, r1, r4
 801c226:	10d7      	asrs	r7, r2, #3
 801c228:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c22c:	00d2      	lsls	r2, r2, #3
 801c22e:	fb00 1009 	mla	r0, r0, r9, r1
 801c232:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c236:	10d9      	asrs	r1, r3, #3
 801c238:	b2d2      	uxtb	r2, r2
 801c23a:	00db      	lsls	r3, r3, #3
 801c23c:	fb17 f704 	smulbb	r7, r7, r4
 801c240:	fb12 f204 	smulbb	r2, r2, r4
 801c244:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c248:	b2db      	uxtb	r3, r3
 801c24a:	b280      	uxth	r0, r0
 801c24c:	fb01 7109 	mla	r1, r1, r9, r7
 801c250:	fb03 2309 	mla	r3, r3, r9, r2
 801c254:	b29b      	uxth	r3, r3
 801c256:	b289      	uxth	r1, r1
 801c258:	1c42      	adds	r2, r0, #1
 801c25a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c25e:	1c4f      	adds	r7, r1, #1
 801c260:	1c5a      	adds	r2, r3, #1
 801c262:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c266:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c26a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c26e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c272:	0949      	lsrs	r1, r1, #5
 801c274:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c276:	4310      	orrs	r0, r2
 801c278:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c27c:	4308      	orrs	r0, r1
 801c27e:	f823 0b02 	strh.w	r0, [r3], #2
 801c282:	930e      	str	r3, [sp, #56]	; 0x38
 801c284:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c286:	449a      	add	sl, r3
 801c288:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c28a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c28e:	441d      	add	r5, r3
 801c290:	e6ed      	b.n	801c06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801c292:	2800      	cmp	r0, #0
 801c294:	f43f af7f 	beq.w	801c196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801c298:	5cd3      	ldrb	r3, [r2, r3]
 801c29a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c29e:	9310      	str	r3, [sp, #64]	; 0x40
 801c2a0:	e779      	b.n	801c196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801c2a2:	b019      	add	sp, #100	; 0x64
 801c2a4:	ecbd 8b08 	vpop	{d8-d11}
 801c2a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c2ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c2b0:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801c2b4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801c2b8:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c2bc:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 801c2c0:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801c2c4:	8808      	ldrh	r0, [r1, #0]
 801c2c6:	fb06 570e 	mla	r7, r6, lr, r5
 801c2ca:	2e00      	cmp	r6, #0
 801c2cc:	eb02 0807 	add.w	r8, r2, r7
 801c2d0:	db38      	blt.n	801c344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801c2d2:	45b1      	cmp	r9, r6
 801c2d4:	dd36      	ble.n	801c344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801c2d6:	2d00      	cmp	r5, #0
 801c2d8:	db32      	blt.n	801c340 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801c2da:	45ae      	cmp	lr, r5
 801c2dc:	dd30      	ble.n	801c340 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801c2de:	5dd2      	ldrb	r2, [r2, r7]
 801c2e0:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801c2e4:	1c6a      	adds	r2, r5, #1
 801c2e6:	d430      	bmi.n	801c34a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801c2e8:	4596      	cmp	lr, r2
 801c2ea:	dd2e      	ble.n	801c34a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801c2ec:	b36c      	cbz	r4, 801c34a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801c2ee:	f898 2001 	ldrb.w	r2, [r8, #1]
 801c2f2:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801c2f6:	3601      	adds	r6, #1
 801c2f8:	d42b      	bmi.n	801c352 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801c2fa:	45b1      	cmp	r9, r6
 801c2fc:	dd29      	ble.n	801c352 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801c2fe:	f1bc 0f00 	cmp.w	ip, #0
 801c302:	d028      	beq.n	801c356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801c304:	2d00      	cmp	r5, #0
 801c306:	db22      	blt.n	801c34e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801c308:	45ae      	cmp	lr, r5
 801c30a:	dd20      	ble.n	801c34e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801c30c:	f818 600e 	ldrb.w	r6, [r8, lr]
 801c310:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801c314:	3501      	adds	r5, #1
 801c316:	d407      	bmi.n	801c328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801c318:	45ae      	cmp	lr, r5
 801c31a:	dd05      	ble.n	801c328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801c31c:	b134      	cbz	r4, 801c32c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801c31e:	44c6      	add	lr, r8
 801c320:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801c324:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801c328:	2c0f      	cmp	r4, #15
 801c32a:	d802      	bhi.n	801c332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801c32c:	f1bc 0f0f 	cmp.w	ip, #15
 801c330:	d914      	bls.n	801c35c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801c332:	4b26      	ldr	r3, [pc, #152]	; (801c3cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801c334:	4a26      	ldr	r2, [pc, #152]	; (801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801c336:	4827      	ldr	r0, [pc, #156]	; (801c3d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801c338:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801c33c:	f006 fde4 	bl	8022f08 <__assert_func>
 801c340:	4607      	mov	r7, r0
 801c342:	e7cf      	b.n	801c2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801c344:	4602      	mov	r2, r0
 801c346:	4607      	mov	r7, r0
 801c348:	e7d5      	b.n	801c2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801c34a:	4602      	mov	r2, r0
 801c34c:	e7d3      	b.n	801c2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801c34e:	4606      	mov	r6, r0
 801c350:	e7e0      	b.n	801c314 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801c352:	4606      	mov	r6, r0
 801c354:	e7e8      	b.n	801c328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801c356:	2c0f      	cmp	r4, #15
 801c358:	d8eb      	bhi.n	801c332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801c35a:	4606      	mov	r6, r0
 801c35c:	043d      	lsls	r5, r7, #16
 801c35e:	fb14 f30c 	smulbb	r3, r4, ip
 801c362:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801c366:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801c36a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c36e:	10db      	asrs	r3, r3, #3
 801c370:	432f      	orrs	r7, r5
 801c372:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c376:	f1cc 0510 	rsb	r5, ip, #16
 801c37a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c37e:	1b2d      	subs	r5, r5, r4
 801c380:	ea4e 0202 	orr.w	r2, lr, r2
 801c384:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801c388:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c38c:	4354      	muls	r4, r2
 801c38e:	fb05 4507 	mla	r5, r5, r7, r4
 801c392:	0404      	lsls	r4, r0, #16
 801c394:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c398:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c39c:	4320      	orrs	r0, r4
 801c39e:	fb03 5400 	mla	r4, r3, r0, r5
 801c3a2:	0430      	lsls	r0, r6, #16
 801c3a4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c3a8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801c3ac:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c3b0:	4330      	orrs	r0, r6
 801c3b2:	fb03 4000 	mla	r0, r3, r0, r4
 801c3b6:	0d43      	lsrs	r3, r0, #21
 801c3b8:	0940      	lsrs	r0, r0, #5
 801c3ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c3c2:	4318      	orrs	r0, r3
 801c3c4:	8008      	strh	r0, [r1, #0]
 801c3c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c3ca:	bf00      	nop
 801c3cc:	0802926a 	.word	0x0802926a
 801c3d0:	080298e3 	.word	0x080298e3
 801c3d4:	080292ee 	.word	0x080292ee

0801c3d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3dc:	ed2d 8b0a 	vpush	{d8-d12}
 801c3e0:	b093      	sub	sp, #76	; 0x4c
 801c3e2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801c3e6:	920f      	str	r2, [sp, #60]	; 0x3c
 801c3e8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801c3ea:	9108      	str	r1, [sp, #32]
 801c3ec:	9306      	str	r3, [sp, #24]
 801c3ee:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801c3f2:	9010      	str	r0, [sp, #64]	; 0x40
 801c3f4:	6850      	ldr	r0, [r2, #4]
 801c3f6:	6812      	ldr	r2, [r2, #0]
 801c3f8:	fb00 1303 	mla	r3, r0, r3, r1
 801c3fc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c400:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c402:	681b      	ldr	r3, [r3, #0]
 801c404:	9307      	str	r3, [sp, #28]
 801c406:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c408:	685f      	ldr	r7, [r3, #4]
 801c40a:	eeb0 aa40 	vmov.f32	s20, s0
 801c40e:	eef0 9a60 	vmov.f32	s19, s1
 801c412:	eeb0 9a41 	vmov.f32	s18, s2
 801c416:	eeb0 8a62 	vmov.f32	s16, s5
 801c41a:	eef0 8a43 	vmov.f32	s17, s6
 801c41e:	eeb0 ca44 	vmov.f32	s24, s8
 801c422:	eef0 ba64 	vmov.f32	s23, s9
 801c426:	eeb0 ba45 	vmov.f32	s22, s10
 801c42a:	3704      	adds	r7, #4
 801c42c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801c430:	9b08      	ldr	r3, [sp, #32]
 801c432:	2b00      	cmp	r3, #0
 801c434:	dc03      	bgt.n	801c43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c436:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c438:	2b00      	cmp	r3, #0
 801c43a:	f340 81b2 	ble.w	801c7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801c43e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c440:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c444:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c448:	1e48      	subs	r0, r1, #1
 801c44a:	f102 3cff 	add.w	ip, r2, #4294967295
 801c44e:	9b06      	ldr	r3, [sp, #24]
 801c450:	2b00      	cmp	r3, #0
 801c452:	f340 80a9 	ble.w	801c5a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801c456:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c45a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c45e:	d406      	bmi.n	801c46e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c460:	4586      	cmp	lr, r0
 801c462:	da04      	bge.n	801c46e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c464:	2b00      	cmp	r3, #0
 801c466:	db02      	blt.n	801c46e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c468:	4563      	cmp	r3, ip
 801c46a:	f2c0 809e 	blt.w	801c5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c46e:	f11e 0e01 	adds.w	lr, lr, #1
 801c472:	f100 808f 	bmi.w	801c594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801c476:	4571      	cmp	r1, lr
 801c478:	f2c0 808c 	blt.w	801c594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801c47c:	3301      	adds	r3, #1
 801c47e:	f100 8089 	bmi.w	801c594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801c482:	429a      	cmp	r2, r3
 801c484:	f2c0 8086 	blt.w	801c594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801c488:	f8dd b018 	ldr.w	fp, [sp, #24]
 801c48c:	46c8      	mov	r8, r9
 801c48e:	f1bb 0f00 	cmp.w	fp, #0
 801c492:	f340 80a6 	ble.w	801c5e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801c496:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801c498:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c49a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c49e:	689b      	ldr	r3, [r3, #8]
 801c4a0:	1422      	asrs	r2, r4, #16
 801c4a2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c4a6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c4aa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c4ae:	f100 80e3 	bmi.w	801c678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c4b2:	f103 3aff 	add.w	sl, r3, #4294967295
 801c4b6:	4552      	cmp	r2, sl
 801c4b8:	f280 80de 	bge.w	801c678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c4bc:	f1bc 0f00 	cmp.w	ip, #0
 801c4c0:	f2c0 80da 	blt.w	801c678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c4c4:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c4c8:	45d4      	cmp	ip, sl
 801c4ca:	f280 80d5 	bge.w	801c678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c4ce:	b21b      	sxth	r3, r3
 801c4d0:	fb0c 2203 	mla	r2, ip, r3, r2
 801c4d4:	9d07      	ldr	r5, [sp, #28]
 801c4d6:	eb05 0a02 	add.w	sl, r5, r2
 801c4da:	5caa      	ldrb	r2, [r5, r2]
 801c4dc:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801c4e0:	2800      	cmp	r0, #0
 801c4e2:	f000 80c0 	beq.w	801c666 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801c4e6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c4ea:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801c4ee:	920b      	str	r2, [sp, #44]	; 0x2c
 801c4f0:	b151      	cbz	r1, 801c508 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801c4f2:	eb0a 0203 	add.w	r2, sl, r3
 801c4f6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801c4fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c4fe:	9309      	str	r3, [sp, #36]	; 0x24
 801c500:	7853      	ldrb	r3, [r2, #1]
 801c502:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c506:	930c      	str	r3, [sp, #48]	; 0x30
 801c508:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c50a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c50c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c510:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c514:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c518:	ea4c 0c03 	orr.w	ip, ip, r3
 801c51c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c51e:	041b      	lsls	r3, r3, #16
 801c520:	fb10 f201 	smulbb	r2, r0, r1
 801c524:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c528:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c52c:	10d2      	asrs	r2, r2, #3
 801c52e:	432b      	orrs	r3, r5
 801c530:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801c534:	4353      	muls	r3, r2
 801c536:	fb0a 330c 	mla	r3, sl, ip, r3
 801c53a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801c53e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c542:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c546:	ea4c 0e0e 	orr.w	lr, ip, lr
 801c54a:	f1c1 0c10 	rsb	ip, r1, #16
 801c54e:	ebac 0c00 	sub.w	ip, ip, r0
 801c552:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c556:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801c55a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c55c:	0418      	lsls	r0, r3, #16
 801c55e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c562:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c566:	4318      	orrs	r0, r3
 801c568:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801c56c:	fb02 c200 	mla	r2, r2, r0, ip
 801c570:	0d53      	lsrs	r3, r2, #21
 801c572:	0952      	lsrs	r2, r2, #5
 801c574:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c578:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c57c:	431a      	orrs	r2, r3
 801c57e:	f8a8 2000 	strh.w	r2, [r8]
 801c582:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c584:	441c      	add	r4, r3
 801c586:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c588:	f108 0802 	add.w	r8, r8, #2
 801c58c:	441e      	add	r6, r3
 801c58e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c592:	e77c      	b.n	801c48e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801c594:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c596:	441c      	add	r4, r3
 801c598:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c59a:	441e      	add	r6, r3
 801c59c:	9b06      	ldr	r3, [sp, #24]
 801c59e:	3b01      	subs	r3, #1
 801c5a0:	9306      	str	r3, [sp, #24]
 801c5a2:	f109 0902 	add.w	r9, r9, #2
 801c5a6:	e752      	b.n	801c44e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c5a8:	d020      	beq.n	801c5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5aa:	9b06      	ldr	r3, [sp, #24]
 801c5ac:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801c5ae:	3b01      	subs	r3, #1
 801c5b0:	fb00 4003 	mla	r0, r0, r3, r4
 801c5b4:	1400      	asrs	r0, r0, #16
 801c5b6:	f53f af67 	bmi.w	801c488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c5ba:	3901      	subs	r1, #1
 801c5bc:	4288      	cmp	r0, r1
 801c5be:	f6bf af63 	bge.w	801c488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c5c2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801c5c4:	fb01 6303 	mla	r3, r1, r3, r6
 801c5c8:	141b      	asrs	r3, r3, #16
 801c5ca:	f53f af5d 	bmi.w	801c488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c5ce:	3a01      	subs	r2, #1
 801c5d0:	4293      	cmp	r3, r2
 801c5d2:	f6bf af59 	bge.w	801c488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c5d6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801c5da:	46ca      	mov	sl, r9
 801c5dc:	f1b8 0f00 	cmp.w	r8, #0
 801c5e0:	dc67      	bgt.n	801c6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801c5e2:	9b06      	ldr	r3, [sp, #24]
 801c5e4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c5e8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c5ec:	9b08      	ldr	r3, [sp, #32]
 801c5ee:	2b00      	cmp	r3, #0
 801c5f0:	f340 80d7 	ble.w	801c7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801c5f4:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801c5f8:	ee79 9aab 	vadd.f32	s19, s19, s23
 801c5fc:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801c600:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c602:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801c606:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c60a:	eef0 6a48 	vmov.f32	s13, s16
 801c60e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c612:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c616:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c61a:	ee16 4a90 	vmov	r4, s13
 801c61e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c622:	eef0 6a68 	vmov.f32	s13, s17
 801c626:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c62a:	ee18 2a10 	vmov	r2, s16
 801c62e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c632:	fb92 f3f3 	sdiv	r3, r2, r3
 801c636:	ee18 2a90 	vmov	r2, s17
 801c63a:	9329      	str	r3, [sp, #164]	; 0xa4
 801c63c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c63e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c642:	932a      	str	r3, [sp, #168]	; 0xa8
 801c644:	9b08      	ldr	r3, [sp, #32]
 801c646:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c648:	3b01      	subs	r3, #1
 801c64a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c64e:	9308      	str	r3, [sp, #32]
 801c650:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c652:	bf08      	it	eq
 801c654:	4613      	moveq	r3, r2
 801c656:	ee16 6a90 	vmov	r6, s13
 801c65a:	9306      	str	r3, [sp, #24]
 801c65c:	eef0 8a67 	vmov.f32	s17, s15
 801c660:	eeb0 8a47 	vmov.f32	s16, s14
 801c664:	e6e4      	b.n	801c430 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c666:	2900      	cmp	r1, #0
 801c668:	f43f af4e 	beq.w	801c508 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801c66c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801c670:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c674:	9309      	str	r3, [sp, #36]	; 0x24
 801c676:	e747      	b.n	801c508 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801c678:	f112 0a01 	adds.w	sl, r2, #1
 801c67c:	d481      	bmi.n	801c582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801c67e:	4553      	cmp	r3, sl
 801c680:	f6ff af7f 	blt.w	801c582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801c684:	f11c 0a01 	adds.w	sl, ip, #1
 801c688:	f53f af7b 	bmi.w	801c582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801c68c:	45d6      	cmp	lr, sl
 801c68e:	f6ff af78 	blt.w	801c582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801c692:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801c696:	b21b      	sxth	r3, r3
 801c698:	fa0f f28e 	sxth.w	r2, lr
 801c69c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801c6a0:	9201      	str	r2, [sp, #4]
 801c6a2:	9300      	str	r3, [sp, #0]
 801c6a4:	9a07      	ldr	r2, [sp, #28]
 801c6a6:	9810      	ldr	r0, [sp, #64]	; 0x40
 801c6a8:	463b      	mov	r3, r7
 801c6aa:	4641      	mov	r1, r8
 801c6ac:	f7ff fdfe 	bl	801c2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c6b0:	e767      	b.n	801c582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801c6b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c6b4:	9d07      	ldr	r5, [sp, #28]
 801c6b6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c6ba:	1422      	asrs	r2, r4, #16
 801c6bc:	1431      	asrs	r1, r6, #16
 801c6be:	fb03 2101 	mla	r1, r3, r1, r2
 801c6c2:	9a07      	ldr	r2, [sp, #28]
 801c6c4:	440a      	add	r2, r1
 801c6c6:	5c69      	ldrb	r1, [r5, r1]
 801c6c8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801c6cc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c6d0:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801c6d4:	f1be 0f00 	cmp.w	lr, #0
 801c6d8:	d05c      	beq.n	801c794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801c6da:	f892 c001 	ldrb.w	ip, [r2, #1]
 801c6de:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801c6e2:	950d      	str	r5, [sp, #52]	; 0x34
 801c6e4:	b150      	cbz	r0, 801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801c6e6:	eb02 0c03 	add.w	ip, r2, r3
 801c6ea:	5cd3      	ldrb	r3, [r2, r3]
 801c6ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c6f0:	930a      	str	r3, [sp, #40]	; 0x28
 801c6f2:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801c6f6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c6fa:	930e      	str	r3, [sp, #56]	; 0x38
 801c6fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c700:	fb1e f200 	smulbb	r2, lr, r0
 801c704:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c708:	10d2      	asrs	r2, r2, #3
 801c70a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c70e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c712:	ea4c 0c03 	orr.w	ip, ip, r3
 801c716:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801c71a:	9311      	str	r3, [sp, #68]	; 0x44
 801c71c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c71e:	041b      	lsls	r3, r3, #16
 801c720:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801c724:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c728:	ea43 030b 	orr.w	r3, r3, fp
 801c72c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c72e:	4353      	muls	r3, r2
 801c730:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c734:	fb05 3c0c 	mla	ip, r5, ip, r3
 801c738:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c73c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801c740:	ea43 0b01 	orr.w	fp, r3, r1
 801c744:	f1c0 0110 	rsb	r1, r0, #16
 801c748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c74a:	eba1 0e0e 	sub.w	lr, r1, lr
 801c74e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801c752:	fb0e cc0b 	mla	ip, lr, fp, ip
 801c756:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801c75a:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801c75e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c762:	ea4b 0e0e 	orr.w	lr, fp, lr
 801c766:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c76a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c76e:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801c772:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c776:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c77a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c77e:	ea43 0c0c 	orr.w	ip, r3, ip
 801c782:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c784:	f82a cb02 	strh.w	ip, [sl], #2
 801c788:	441c      	add	r4, r3
 801c78a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c78c:	f108 38ff 	add.w	r8, r8, #4294967295
 801c790:	441e      	add	r6, r3
 801c792:	e723      	b.n	801c5dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c794:	2800      	cmp	r0, #0
 801c796:	d0b1      	beq.n	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801c798:	5cd3      	ldrb	r3, [r2, r3]
 801c79a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c79e:	930a      	str	r3, [sp, #40]	; 0x28
 801c7a0:	e7ac      	b.n	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801c7a2:	b013      	add	sp, #76	; 0x4c
 801c7a4:	ecbd 8b0a 	vpop	{d8-d12}
 801c7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801c7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7b0:	468b      	mov	fp, r1
 801c7b2:	8809      	ldrh	r1, [r1, #0]
 801c7b4:	b089      	sub	sp, #36	; 0x24
 801c7b6:	10cd      	asrs	r5, r1, #3
 801c7b8:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801c7bc:	ea4f 2921 	mov.w	r9, r1, asr #8
 801c7c0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c7c4:	00c9      	lsls	r1, r1, #3
 801c7c6:	9500      	str	r5, [sp, #0]
 801c7c8:	b2c9      	uxtb	r1, r1
 801c7ca:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801c7ce:	9101      	str	r1, [sp, #4]
 801c7d0:	9900      	ldr	r1, [sp, #0]
 801c7d2:	9202      	str	r2, [sp, #8]
 801c7d4:	fb04 650e 	mla	r5, r4, lr, r6
 801c7d8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801c7dc:	eb02 0805 	add.w	r8, r2, r5
 801c7e0:	0209      	lsls	r1, r1, #8
 801c7e2:	9a01      	ldr	r2, [sp, #4]
 801c7e4:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 801c7e8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801c7ec:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801c7f0:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801c7f4:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 801c7f8:	4311      	orrs	r1, r2
 801c7fa:	2c00      	cmp	r4, #0
 801c7fc:	9107      	str	r1, [sp, #28]
 801c7fe:	db43      	blt.n	801c888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801c800:	45a2      	cmp	sl, r4
 801c802:	dd41      	ble.n	801c888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801c804:	2e00      	cmp	r6, #0
 801c806:	db3d      	blt.n	801c884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801c808:	45b6      	cmp	lr, r6
 801c80a:	dd3b      	ble.n	801c884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801c80c:	9a02      	ldr	r2, [sp, #8]
 801c80e:	5d55      	ldrb	r5, [r2, r5]
 801c810:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c814:	441d      	add	r5, r3
 801c816:	1c72      	adds	r2, r6, #1
 801c818:	d439      	bmi.n	801c88e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801c81a:	4596      	cmp	lr, r2
 801c81c:	dd37      	ble.n	801c88e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801c81e:	2f00      	cmp	r7, #0
 801c820:	d035      	beq.n	801c88e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801c822:	f898 1001 	ldrb.w	r1, [r8, #1]
 801c826:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c82a:	4419      	add	r1, r3
 801c82c:	3401      	adds	r4, #1
 801c82e:	d432      	bmi.n	801c896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801c830:	45a2      	cmp	sl, r4
 801c832:	dd30      	ble.n	801c896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801c834:	b378      	cbz	r0, 801c896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801c836:	2e00      	cmp	r6, #0
 801c838:	db2b      	blt.n	801c892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801c83a:	45b6      	cmp	lr, r6
 801c83c:	dd29      	ble.n	801c892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801c83e:	f818 400e 	ldrb.w	r4, [r8, lr]
 801c842:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c846:	441c      	add	r4, r3
 801c848:	3601      	adds	r6, #1
 801c84a:	d427      	bmi.n	801c89c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801c84c:	45b6      	cmp	lr, r6
 801c84e:	dd25      	ble.n	801c89c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801c850:	b327      	cbz	r7, 801c89c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801c852:	44c6      	add	lr, r8
 801c854:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c858:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c85c:	4413      	add	r3, r2
 801c85e:	782a      	ldrb	r2, [r5, #0]
 801c860:	9202      	str	r2, [sp, #8]
 801c862:	780a      	ldrb	r2, [r1, #0]
 801c864:	9203      	str	r2, [sp, #12]
 801c866:	7822      	ldrb	r2, [r4, #0]
 801c868:	9204      	str	r2, [sp, #16]
 801c86a:	2f0f      	cmp	r7, #15
 801c86c:	781a      	ldrb	r2, [r3, #0]
 801c86e:	9205      	str	r2, [sp, #20]
 801c870:	d801      	bhi.n	801c876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801c872:	280f      	cmp	r0, #15
 801c874:	d914      	bls.n	801c8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801c876:	4b3f      	ldr	r3, [pc, #252]	; (801c974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801c878:	4a3f      	ldr	r2, [pc, #252]	; (801c978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801c87a:	4840      	ldr	r0, [pc, #256]	; (801c97c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801c87c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801c880:	f006 fb42 	bl	8022f08 <__assert_func>
 801c884:	ad07      	add	r5, sp, #28
 801c886:	e7c6      	b.n	801c816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801c888:	a907      	add	r1, sp, #28
 801c88a:	460d      	mov	r5, r1
 801c88c:	e7ce      	b.n	801c82c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801c88e:	a907      	add	r1, sp, #28
 801c890:	e7cc      	b.n	801c82c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801c892:	ac07      	add	r4, sp, #28
 801c894:	e7d8      	b.n	801c848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801c896:	ab07      	add	r3, sp, #28
 801c898:	461c      	mov	r4, r3
 801c89a:	e7e0      	b.n	801c85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801c89c:	ab07      	add	r3, sp, #28
 801c89e:	e7de      	b.n	801c85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801c8a0:	b2ba      	uxth	r2, r7
 801c8a2:	b280      	uxth	r0, r0
 801c8a4:	fb02 fa00 	mul.w	sl, r2, r0
 801c8a8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801c8ac:	0112      	lsls	r2, r2, #4
 801c8ae:	b280      	uxth	r0, r0
 801c8b0:	f891 8002 	ldrb.w	r8, [r1, #2]
 801c8b4:	7849      	ldrb	r1, [r1, #1]
 801c8b6:	78ae      	ldrb	r6, [r5, #2]
 801c8b8:	786d      	ldrb	r5, [r5, #1]
 801c8ba:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801c8be:	eba2 020a 	sub.w	r2, r2, sl
 801c8c2:	b292      	uxth	r2, r2
 801c8c4:	ebae 0e00 	sub.w	lr, lr, r0
 801c8c8:	fa1f fe8e 	uxth.w	lr, lr
 801c8cc:	4351      	muls	r1, r2
 801c8ce:	fb02 f808 	mul.w	r8, r2, r8
 801c8d2:	fb0e 8806 	mla	r8, lr, r6, r8
 801c8d6:	fb0e 1505 	mla	r5, lr, r5, r1
 801c8da:	78a6      	ldrb	r6, [r4, #2]
 801c8dc:	7861      	ldrb	r1, [r4, #1]
 801c8de:	fa1f f78c 	uxth.w	r7, ip
 801c8e2:	fb00 8806 	mla	r8, r0, r6, r8
 801c8e6:	fb00 5501 	mla	r5, r0, r1, r5
 801c8ea:	789e      	ldrb	r6, [r3, #2]
 801c8ec:	7859      	ldrb	r1, [r3, #1]
 801c8ee:	9b00      	ldr	r3, [sp, #0]
 801c8f0:	ea6f 0c0c 	mvn.w	ip, ip
 801c8f4:	fa5f fc8c 	uxtb.w	ip, ip
 801c8f8:	fb0a 5101 	mla	r1, sl, r1, r5
 801c8fc:	fb13 f50c 	smulbb	r5, r3, ip
 801c900:	9b03      	ldr	r3, [sp, #12]
 801c902:	435a      	muls	r2, r3
 801c904:	9b02      	ldr	r3, [sp, #8]
 801c906:	fb0e 2203 	mla	r2, lr, r3, r2
 801c90a:	9b04      	ldr	r3, [sp, #16]
 801c90c:	fb00 2003 	mla	r0, r0, r3, r2
 801c910:	9b05      	ldr	r3, [sp, #20]
 801c912:	fb0a 8606 	mla	r6, sl, r6, r8
 801c916:	fb19 f90c 	smulbb	r9, r9, ip
 801c91a:	fb0a 0a03 	mla	sl, sl, r3, r0
 801c91e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c922:	9b01      	ldr	r3, [sp, #4]
 801c924:	fb06 9607 	mla	r6, r6, r7, r9
 801c928:	b2b6      	uxth	r6, r6
 801c92a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801c92e:	fb13 fc0c 	smulbb	ip, r3, ip
 801c932:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c936:	fb01 5107 	mla	r1, r1, r7, r5
 801c93a:	f106 0901 	add.w	r9, r6, #1
 801c93e:	fb0a c707 	mla	r7, sl, r7, ip
 801c942:	b2bf      	uxth	r7, r7
 801c944:	b289      	uxth	r1, r1
 801c946:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801c94a:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801c94e:	1c4d      	adds	r5, r1, #1
 801c950:	1c7e      	adds	r6, r7, #1
 801c952:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c956:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801c95a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c95e:	0949      	lsrs	r1, r1, #5
 801c960:	ea46 0609 	orr.w	r6, r6, r9
 801c964:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c968:	430e      	orrs	r6, r1
 801c96a:	f8ab 6000 	strh.w	r6, [fp]
 801c96e:	b009      	add	sp, #36	; 0x24
 801c970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c974:	0802926a 	.word	0x0802926a
 801c978:	0802983a 	.word	0x0802983a
 801c97c:	080292ee 	.word	0x080292ee

0801c980 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c984:	ed2d 8b08 	vpush	{d8-d11}
 801c988:	b095      	sub	sp, #84	; 0x54
 801c98a:	eeb0 aa40 	vmov.f32	s20, s0
 801c98e:	9212      	str	r2, [sp, #72]	; 0x48
 801c990:	9309      	str	r3, [sp, #36]	; 0x24
 801c992:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801c994:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801c998:	930f      	str	r3, [sp, #60]	; 0x3c
 801c99a:	910e      	str	r1, [sp, #56]	; 0x38
 801c99c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801c9a0:	9013      	str	r0, [sp, #76]	; 0x4c
 801c9a2:	6850      	ldr	r0, [r2, #4]
 801c9a4:	6812      	ldr	r2, [r2, #0]
 801c9a6:	fb00 1303 	mla	r3, r0, r3, r1
 801c9aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c9ae:	930a      	str	r3, [sp, #40]	; 0x28
 801c9b0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c9b2:	681b      	ldr	r3, [r3, #0]
 801c9b4:	930d      	str	r3, [sp, #52]	; 0x34
 801c9b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c9b8:	685c      	ldr	r4, [r3, #4]
 801c9ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c9bc:	43db      	mvns	r3, r3
 801c9be:	b2db      	uxtb	r3, r3
 801c9c0:	eef0 9a60 	vmov.f32	s19, s1
 801c9c4:	eeb0 9a41 	vmov.f32	s18, s2
 801c9c8:	eeb0 8a62 	vmov.f32	s16, s5
 801c9cc:	eef0 8a43 	vmov.f32	s17, s6
 801c9d0:	eef0 ba44 	vmov.f32	s23, s8
 801c9d4:	eeb0 ba64 	vmov.f32	s22, s9
 801c9d8:	eef0 aa45 	vmov.f32	s21, s10
 801c9dc:	3404      	adds	r4, #4
 801c9de:	930b      	str	r3, [sp, #44]	; 0x2c
 801c9e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c9e2:	2b00      	cmp	r3, #0
 801c9e4:	dc03      	bgt.n	801c9ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c9e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c9e8:	2b00      	cmp	r3, #0
 801c9ea:	f340 8255 	ble.w	801ce98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801c9ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c9f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c9f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c9f8:	1e48      	subs	r0, r1, #1
 801c9fa:	1e55      	subs	r5, r2, #1
 801c9fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9fe:	2b00      	cmp	r3, #0
 801ca00:	f340 80f9 	ble.w	801cbf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ca04:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801ca06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca08:	1436      	asrs	r6, r6, #16
 801ca0a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ca0e:	d406      	bmi.n	801ca1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ca10:	4286      	cmp	r6, r0
 801ca12:	da04      	bge.n	801ca1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ca14:	2b00      	cmp	r3, #0
 801ca16:	db02      	blt.n	801ca1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ca18:	42ab      	cmp	r3, r5
 801ca1a:	f2c0 80ed 	blt.w	801cbf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801ca1e:	3601      	adds	r6, #1
 801ca20:	f100 80da 	bmi.w	801cbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ca24:	42b1      	cmp	r1, r6
 801ca26:	f2c0 80d7 	blt.w	801cbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ca2a:	3301      	adds	r3, #1
 801ca2c:	f100 80d4 	bmi.w	801cbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ca30:	429a      	cmp	r2, r3
 801ca32:	f2c0 80d1 	blt.w	801cbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ca36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca38:	9311      	str	r3, [sp, #68]	; 0x44
 801ca3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca3c:	930c      	str	r3, [sp, #48]	; 0x30
 801ca3e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ca40:	2b00      	cmp	r3, #0
 801ca42:	f340 80fa 	ble.w	801cc3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ca46:	982e      	ldr	r0, [sp, #184]	; 0xb8
 801ca48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca4a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801ca4c:	68c6      	ldr	r6, [r0, #12]
 801ca4e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ca50:	141d      	asrs	r5, r3, #16
 801ca52:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ca56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ca58:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ca5a:	1400      	asrs	r0, r0, #16
 801ca5c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ca60:	6892      	ldr	r2, [r2, #8]
 801ca62:	f100 813e 	bmi.w	801cce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ca66:	1e57      	subs	r7, r2, #1
 801ca68:	42b8      	cmp	r0, r7
 801ca6a:	f280 813a 	bge.w	801cce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ca6e:	2d00      	cmp	r5, #0
 801ca70:	f2c0 8137 	blt.w	801cce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ca74:	1e77      	subs	r7, r6, #1
 801ca76:	42bd      	cmp	r5, r7
 801ca78:	f280 8133 	bge.w	801cce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ca7c:	b212      	sxth	r2, r2
 801ca7e:	fb05 0002 	mla	r0, r5, r2, r0
 801ca82:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ca84:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ca88:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801ca8c:	182e      	adds	r6, r5, r0
 801ca8e:	eb04 050a 	add.w	r5, r4, sl
 801ca92:	2b00      	cmp	r3, #0
 801ca94:	f000 8117 	beq.w	801ccc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801ca98:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ca9c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801caa0:	44a4      	add	ip, r4
 801caa2:	2900      	cmp	r1, #0
 801caa4:	f000 8117 	beq.w	801ccd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801caa8:	18b0      	adds	r0, r6, r2
 801caaa:	5cb2      	ldrb	r2, [r6, r2]
 801caac:	7840      	ldrb	r0, [r0, #1]
 801caae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cab2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cab6:	4422      	add	r2, r4
 801cab8:	4420      	add	r0, r4
 801caba:	b29b      	uxth	r3, r3
 801cabc:	b289      	uxth	r1, r1
 801cabe:	fb03 f901 	mul.w	r9, r3, r1
 801cac2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cac6:	011b      	lsls	r3, r3, #4
 801cac8:	b289      	uxth	r1, r1
 801caca:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801cace:	f895 b002 	ldrb.w	fp, [r5, #2]
 801cad2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801cad4:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801cad8:	f8b6 e000 	ldrh.w	lr, [r6]
 801cadc:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801cae0:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801cae4:	eba3 0309 	sub.w	r3, r3, r9
 801cae8:	b29b      	uxth	r3, r3
 801caea:	eba8 0801 	sub.w	r8, r8, r1
 801caee:	fa1f f888 	uxth.w	r8, r8
 801caf2:	435f      	muls	r7, r3
 801caf4:	fb08 770b 	mla	r7, r8, fp, r7
 801caf8:	f892 b002 	ldrb.w	fp, [r2, #2]
 801cafc:	9310      	str	r3, [sp, #64]	; 0x40
 801cafe:	fb01 770b 	mla	r7, r1, fp, r7
 801cb02:	f890 b002 	ldrb.w	fp, [r0, #2]
 801cb06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb08:	fb09 770b 	mla	r7, r9, fp, r7
 801cb0c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801cb10:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801cb14:	fb1b fb03 	smulbb	fp, fp, r3
 801cb18:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801cb1c:	fb07 b706 	mla	r7, r7, r6, fp
 801cb20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb22:	f895 b001 	ldrb.w	fp, [r5, #1]
 801cb26:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801cb2a:	f89c c000 	ldrb.w	ip, [ip]
 801cb2e:	435d      	muls	r5, r3
 801cb30:	fb08 550b 	mla	r5, r8, fp, r5
 801cb34:	f892 b001 	ldrb.w	fp, [r2, #1]
 801cb38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb3a:	fb01 550b 	mla	r5, r1, fp, r5
 801cb3e:	f890 b001 	ldrb.w	fp, [r0, #1]
 801cb42:	fb09 550b 	mla	r5, r9, fp, r5
 801cb46:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801cb4a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cb4e:	fb1b fb03 	smulbb	fp, fp, r3
 801cb52:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb54:	fb03 f30c 	mul.w	r3, r3, ip
 801cb58:	f892 c000 	ldrb.w	ip, [r2]
 801cb5c:	fb08 330a 	mla	r3, r8, sl, r3
 801cb60:	fb01 330c 	mla	r3, r1, ip, r3
 801cb64:	f890 c000 	ldrb.w	ip, [r0]
 801cb68:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cb6c:	fb09 3c0c 	mla	ip, r9, ip, r3
 801cb70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb72:	fa5f fe8e 	uxtb.w	lr, lr
 801cb76:	b2bf      	uxth	r7, r7
 801cb78:	fb1e fe03 	smulbb	lr, lr, r3
 801cb7c:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801cb80:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801cb84:	fb05 b506 	mla	r5, r5, r6, fp
 801cb88:	1c7b      	adds	r3, r7, #1
 801cb8a:	fb0c e606 	mla	r6, ip, r6, lr
 801cb8e:	b2ad      	uxth	r5, r5
 801cb90:	b2b6      	uxth	r6, r6
 801cb92:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801cb96:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801cb9a:	f105 0b01 	add.w	fp, r5, #1
 801cb9e:	1c77      	adds	r7, r6, #1
 801cba0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801cba4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801cba8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cbac:	096d      	lsrs	r5, r5, #5
 801cbae:	431f      	orrs	r7, r3
 801cbb0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cbb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cbb6:	433d      	orrs	r5, r7
 801cbb8:	801d      	strh	r5, [r3, #0]
 801cbba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cbbc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801cbbe:	3302      	adds	r3, #2
 801cbc0:	930c      	str	r3, [sp, #48]	; 0x30
 801cbc2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cbc4:	4413      	add	r3, r2
 801cbc6:	9327      	str	r3, [sp, #156]	; 0x9c
 801cbc8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801cbca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cbcc:	4413      	add	r3, r2
 801cbce:	9328      	str	r3, [sp, #160]	; 0xa0
 801cbd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cbd2:	3b01      	subs	r3, #1
 801cbd4:	9311      	str	r3, [sp, #68]	; 0x44
 801cbd6:	e732      	b.n	801ca3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801cbd8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cbda:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801cbdc:	4433      	add	r3, r6
 801cbde:	9327      	str	r3, [sp, #156]	; 0x9c
 801cbe0:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801cbe2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cbe4:	4433      	add	r3, r6
 801cbe6:	9328      	str	r3, [sp, #160]	; 0xa0
 801cbe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbea:	3b01      	subs	r3, #1
 801cbec:	9309      	str	r3, [sp, #36]	; 0x24
 801cbee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cbf0:	3302      	adds	r3, #2
 801cbf2:	930a      	str	r3, [sp, #40]	; 0x28
 801cbf4:	e702      	b.n	801c9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbf6:	d027      	beq.n	801cc48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801cbf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbfa:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801cbfc:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801cbfe:	3b01      	subs	r3, #1
 801cc00:	fb00 5003 	mla	r0, r0, r3, r5
 801cc04:	1400      	asrs	r0, r0, #16
 801cc06:	f53f af16 	bmi.w	801ca36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cc0a:	3901      	subs	r1, #1
 801cc0c:	4288      	cmp	r0, r1
 801cc0e:	f6bf af12 	bge.w	801ca36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cc12:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801cc14:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801cc16:	fb01 0303 	mla	r3, r1, r3, r0
 801cc1a:	141b      	asrs	r3, r3, #16
 801cc1c:	f53f af0b 	bmi.w	801ca36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cc20:	3a01      	subs	r2, #1
 801cc22:	4293      	cmp	r3, r2
 801cc24:	f6bf af07 	bge.w	801ca36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cc28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc2a:	9311      	str	r3, [sp, #68]	; 0x44
 801cc2c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801cc30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cc32:	930c      	str	r3, [sp, #48]	; 0x30
 801cc34:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cc36:	2b00      	cmp	r3, #0
 801cc38:	dc70      	bgt.n	801cd1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801cc3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cc3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cc42:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc46:	930a      	str	r3, [sp, #40]	; 0x28
 801cc48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cc4a:	2b00      	cmp	r3, #0
 801cc4c:	f340 8124 	ble.w	801ce98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801cc50:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801cc54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cc58:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cc5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cc5e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801cc62:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cc66:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cc6a:	eef0 6a48 	vmov.f32	s13, s16
 801cc6e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cc72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc76:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cc7a:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801cc7e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cc82:	eef0 6a68 	vmov.f32	s13, s17
 801cc86:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cc8a:	ee18 2a10 	vmov	r2, s16
 801cc8e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801cc92:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc96:	ee18 2a90 	vmov	r2, s17
 801cc9a:	9329      	str	r3, [sp, #164]	; 0xa4
 801cc9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cc9e:	fb92 f3f3 	sdiv	r3, r2, r3
 801cca2:	932a      	str	r3, [sp, #168]	; 0xa8
 801cca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cca6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cca8:	3b01      	subs	r3, #1
 801ccaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccae:	930e      	str	r3, [sp, #56]	; 0x38
 801ccb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ccb2:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801ccb6:	bf08      	it	eq
 801ccb8:	4613      	moveq	r3, r2
 801ccba:	9309      	str	r3, [sp, #36]	; 0x24
 801ccbc:	eef0 8a67 	vmov.f32	s17, s15
 801ccc0:	eeb0 8a47 	vmov.f32	s16, s14
 801ccc4:	e68c      	b.n	801c9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ccc6:	b149      	cbz	r1, 801ccdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 801ccc8:	5cb2      	ldrb	r2, [r6, r2]
 801ccca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ccce:	4422      	add	r2, r4
 801ccd0:	4628      	mov	r0, r5
 801ccd2:	46ac      	mov	ip, r5
 801ccd4:	e6f1      	b.n	801caba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801ccd6:	4628      	mov	r0, r5
 801ccd8:	462a      	mov	r2, r5
 801ccda:	e6ee      	b.n	801caba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801ccdc:	4628      	mov	r0, r5
 801ccde:	462a      	mov	r2, r5
 801cce0:	e7f7      	b.n	801ccd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801cce2:	1c47      	adds	r7, r0, #1
 801cce4:	f53f af69 	bmi.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801cce8:	42ba      	cmp	r2, r7
 801ccea:	f6ff af66 	blt.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ccee:	1c6f      	adds	r7, r5, #1
 801ccf0:	f53f af63 	bmi.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ccf4:	42be      	cmp	r6, r7
 801ccf6:	f6ff af60 	blt.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ccfa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ccfc:	9002      	str	r0, [sp, #8]
 801ccfe:	b236      	sxth	r6, r6
 801cd00:	b212      	sxth	r2, r2
 801cd02:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801cd06:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801cd0a:	9200      	str	r2, [sp, #0]
 801cd0c:	9601      	str	r6, [sp, #4]
 801cd0e:	4623      	mov	r3, r4
 801cd10:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801cd14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cd16:	f7ff fd49 	bl	801c7ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801cd1a:	e74e      	b.n	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801cd1c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801cd1e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801cd20:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801cd22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cd24:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801cd28:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801cd2a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801cd2e:	142d      	asrs	r5, r5, #16
 801cd30:	1400      	asrs	r0, r0, #16
 801cd32:	fb02 5000 	mla	r0, r2, r0, r5
 801cd36:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cd38:	f815 9000 	ldrb.w	r9, [r5, r0]
 801cd3c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801cd40:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801cd44:	182e      	adds	r6, r5, r0
 801cd46:	eb04 0509 	add.w	r5, r4, r9
 801cd4a:	2b00      	cmp	r3, #0
 801cd4c:	f000 8096 	beq.w	801ce7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801cd50:	7877      	ldrb	r7, [r6, #1]
 801cd52:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801cd56:	4427      	add	r7, r4
 801cd58:	2900      	cmp	r1, #0
 801cd5a:	f000 8097 	beq.w	801ce8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 801cd5e:	18b0      	adds	r0, r6, r2
 801cd60:	5cb2      	ldrb	r2, [r6, r2]
 801cd62:	7840      	ldrb	r0, [r0, #1]
 801cd64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cd68:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cd6c:	4422      	add	r2, r4
 801cd6e:	4420      	add	r0, r4
 801cd70:	b29b      	uxth	r3, r3
 801cd72:	b289      	uxth	r1, r1
 801cd74:	fb03 f801 	mul.w	r8, r3, r1
 801cd78:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801cd7a:	f895 b002 	ldrb.w	fp, [r5, #2]
 801cd7e:	f8b6 c000 	ldrh.w	ip, [r6]
 801cd82:	78be      	ldrb	r6, [r7, #2]
 801cd84:	f814 9009 	ldrb.w	r9, [r4, r9]
 801cd88:	011b      	lsls	r3, r3, #4
 801cd8a:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801cd8e:	b289      	uxth	r1, r1
 801cd90:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801cd94:	eba3 0308 	sub.w	r3, r3, r8
 801cd98:	b29b      	uxth	r3, r3
 801cd9a:	ebae 0e01 	sub.w	lr, lr, r1
 801cd9e:	fa1f fe8e 	uxth.w	lr, lr
 801cda2:	435e      	muls	r6, r3
 801cda4:	fb0e 660b 	mla	r6, lr, fp, r6
 801cda8:	f892 b002 	ldrb.w	fp, [r2, #2]
 801cdac:	9310      	str	r3, [sp, #64]	; 0x40
 801cdae:	fb01 660b 	mla	r6, r1, fp, r6
 801cdb2:	f890 b002 	ldrb.w	fp, [r0, #2]
 801cdb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cdb8:	fb08 660b 	mla	r6, r8, fp, r6
 801cdbc:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801cdc0:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801cdc4:	fb1b fb03 	smulbb	fp, fp, r3
 801cdc8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801cdcc:	fb06 b60a 	mla	r6, r6, sl, fp
 801cdd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdd2:	f895 b001 	ldrb.w	fp, [r5, #1]
 801cdd6:	787d      	ldrb	r5, [r7, #1]
 801cdd8:	783f      	ldrb	r7, [r7, #0]
 801cdda:	435d      	muls	r5, r3
 801cddc:	fb0e 550b 	mla	r5, lr, fp, r5
 801cde0:	f892 b001 	ldrb.w	fp, [r2, #1]
 801cde4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cde6:	fb01 550b 	mla	r5, r1, fp, r5
 801cdea:	f890 b001 	ldrb.w	fp, [r0, #1]
 801cdee:	fb08 550b 	mla	r5, r8, fp, r5
 801cdf2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801cdf6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cdfa:	fb1b fb03 	smulbb	fp, fp, r3
 801cdfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ce00:	437b      	muls	r3, r7
 801ce02:	7817      	ldrb	r7, [r2, #0]
 801ce04:	fb0e 3309 	mla	r3, lr, r9, r3
 801ce08:	fb01 3307 	mla	r3, r1, r7, r3
 801ce0c:	7807      	ldrb	r7, [r0, #0]
 801ce0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ce12:	fb08 3707 	mla	r7, r8, r7, r3
 801ce16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ce18:	fa5f fc8c 	uxtb.w	ip, ip
 801ce1c:	fb1c fc03 	smulbb	ip, ip, r3
 801ce20:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ce24:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ce28:	fb05 b50a 	mla	r5, r5, sl, fp
 801ce2c:	fb07 c70a 	mla	r7, r7, sl, ip
 801ce30:	b2b6      	uxth	r6, r6
 801ce32:	b2ad      	uxth	r5, r5
 801ce34:	b2bf      	uxth	r7, r7
 801ce36:	1c73      	adds	r3, r6, #1
 801ce38:	1c7a      	adds	r2, r7, #1
 801ce3a:	f105 0b01 	add.w	fp, r5, #1
 801ce3e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ce42:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ce46:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ce4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce4e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ce52:	096d      	lsrs	r5, r5, #5
 801ce54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ce56:	4316      	orrs	r6, r2
 801ce58:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce5c:	432e      	orrs	r6, r5
 801ce5e:	f823 6b02 	strh.w	r6, [r3], #2
 801ce62:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ce64:	930c      	str	r3, [sp, #48]	; 0x30
 801ce66:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ce68:	4413      	add	r3, r2
 801ce6a:	9327      	str	r3, [sp, #156]	; 0x9c
 801ce6c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ce6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ce70:	4413      	add	r3, r2
 801ce72:	9328      	str	r3, [sp, #160]	; 0xa0
 801ce74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ce76:	3b01      	subs	r3, #1
 801ce78:	9311      	str	r3, [sp, #68]	; 0x44
 801ce7a:	e6db      	b.n	801cc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801ce7c:	b149      	cbz	r1, 801ce92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801ce7e:	5cb2      	ldrb	r2, [r6, r2]
 801ce80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ce84:	4422      	add	r2, r4
 801ce86:	4628      	mov	r0, r5
 801ce88:	462f      	mov	r7, r5
 801ce8a:	e771      	b.n	801cd70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801ce8c:	4628      	mov	r0, r5
 801ce8e:	462a      	mov	r2, r5
 801ce90:	e76e      	b.n	801cd70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801ce92:	4628      	mov	r0, r5
 801ce94:	462a      	mov	r2, r5
 801ce96:	e7f7      	b.n	801ce88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801ce98:	b015      	add	sp, #84	; 0x54
 801ce9a:	ecbd 8b08 	vpop	{d8-d11}
 801ce9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801cea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cea8:	880e      	ldrh	r6, [r1, #0]
 801ceaa:	b085      	sub	sp, #20
 801ceac:	0230      	lsls	r0, r6, #8
 801ceae:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801ceb2:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801ceb6:	0170      	lsls	r0, r6, #5
 801ceb8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801cebc:	9101      	str	r1, [sp, #4]
 801cebe:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801cec2:	00f6      	lsls	r6, r6, #3
 801cec4:	ea4b 0000 	orr.w	r0, fp, r0
 801cec8:	b2f6      	uxtb	r6, r6
 801ceca:	4691      	mov	r9, r2
 801cecc:	fb05 7a0c 	mla	sl, r5, ip, r7
 801ced0:	4306      	orrs	r6, r0
 801ced2:	2d00      	cmp	r5, #0
 801ced4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ced8:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801cedc:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801cee0:	9603      	str	r6, [sp, #12]
 801cee2:	eb09 0e0a 	add.w	lr, r9, sl
 801cee6:	db42      	blt.n	801cf6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801cee8:	45a8      	cmp	r8, r5
 801ceea:	dd40      	ble.n	801cf6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801ceec:	2f00      	cmp	r7, #0
 801ceee:	db3c      	blt.n	801cf6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801cef0:	45bc      	cmp	ip, r7
 801cef2:	dd3a      	ble.n	801cf6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801cef4:	f819 600a 	ldrb.w	r6, [r9, sl]
 801cef8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cefc:	441e      	add	r6, r3
 801cefe:	1c78      	adds	r0, r7, #1
 801cf00:	d438      	bmi.n	801cf74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801cf02:	4584      	cmp	ip, r0
 801cf04:	dd36      	ble.n	801cf74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801cf06:	b3aa      	cbz	r2, 801cf74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801cf08:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801cf0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cf10:	4418      	add	r0, r3
 801cf12:	3501      	adds	r5, #1
 801cf14:	d432      	bmi.n	801cf7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801cf16:	45a8      	cmp	r8, r5
 801cf18:	dd30      	ble.n	801cf7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801cf1a:	b37c      	cbz	r4, 801cf7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801cf1c:	2f00      	cmp	r7, #0
 801cf1e:	db2b      	blt.n	801cf78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801cf20:	45bc      	cmp	ip, r7
 801cf22:	dd29      	ble.n	801cf78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801cf24:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801cf28:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cf2c:	441d      	add	r5, r3
 801cf2e:	3701      	adds	r7, #1
 801cf30:	d427      	bmi.n	801cf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801cf32:	45bc      	cmp	ip, r7
 801cf34:	dd25      	ble.n	801cf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801cf36:	b322      	cbz	r2, 801cf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801cf38:	44f4      	add	ip, lr
 801cf3a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801cf3e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801cf42:	443b      	add	r3, r7
 801cf44:	781f      	ldrb	r7, [r3, #0]
 801cf46:	f896 9000 	ldrb.w	r9, [r6]
 801cf4a:	f890 a000 	ldrb.w	sl, [r0]
 801cf4e:	f895 8000 	ldrb.w	r8, [r5]
 801cf52:	2a0f      	cmp	r2, #15
 801cf54:	4639      	mov	r1, r7
 801cf56:	d801      	bhi.n	801cf5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 801cf58:	2c0f      	cmp	r4, #15
 801cf5a:	d914      	bls.n	801cf86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 801cf5c:	4b2c      	ldr	r3, [pc, #176]	; (801d010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801cf5e:	4a2d      	ldr	r2, [pc, #180]	; (801d014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 801cf60:	482d      	ldr	r0, [pc, #180]	; (801d018 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 801cf62:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801cf66:	f005 ffcf 	bl	8022f08 <__assert_func>
 801cf6a:	ae03      	add	r6, sp, #12
 801cf6c:	e7c7      	b.n	801cefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 801cf6e:	a803      	add	r0, sp, #12
 801cf70:	4606      	mov	r6, r0
 801cf72:	e7ce      	b.n	801cf12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801cf74:	a803      	add	r0, sp, #12
 801cf76:	e7cc      	b.n	801cf12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801cf78:	ad03      	add	r5, sp, #12
 801cf7a:	e7d8      	b.n	801cf2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 801cf7c:	ab03      	add	r3, sp, #12
 801cf7e:	461d      	mov	r5, r3
 801cf80:	e7e0      	b.n	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801cf82:	ab03      	add	r3, sp, #12
 801cf84:	e7de      	b.n	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801cf86:	b292      	uxth	r2, r2
 801cf88:	b2a4      	uxth	r4, r4
 801cf8a:	fb02 fe04 	mul.w	lr, r2, r4
 801cf8e:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 801cf92:	0112      	lsls	r2, r2, #4
 801cf94:	b2a4      	uxth	r4, r4
 801cf96:	f890 c002 	ldrb.w	ip, [r0, #2]
 801cf9a:	f896 b002 	ldrb.w	fp, [r6, #2]
 801cf9e:	7840      	ldrb	r0, [r0, #1]
 801cfa0:	7876      	ldrb	r6, [r6, #1]
 801cfa2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801cfa6:	eba2 020e 	sub.w	r2, r2, lr
 801cfaa:	b292      	uxth	r2, r2
 801cfac:	1b3f      	subs	r7, r7, r4
 801cfae:	b2bf      	uxth	r7, r7
 801cfb0:	fb02 fc0c 	mul.w	ip, r2, ip
 801cfb4:	fb07 cc0b 	mla	ip, r7, fp, ip
 801cfb8:	f895 b002 	ldrb.w	fp, [r5, #2]
 801cfbc:	fb04 cc0b 	mla	ip, r4, fp, ip
 801cfc0:	f893 b002 	ldrb.w	fp, [r3, #2]
 801cfc4:	785b      	ldrb	r3, [r3, #1]
 801cfc6:	fb0e cc0b 	mla	ip, lr, fp, ip
 801cfca:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801cfce:	fb02 fc0a 	mul.w	ip, r2, sl
 801cfd2:	4342      	muls	r2, r0
 801cfd4:	7868      	ldrb	r0, [r5, #1]
 801cfd6:	fb07 cc09 	mla	ip, r7, r9, ip
 801cfda:	fb07 2206 	mla	r2, r7, r6, r2
 801cfde:	fb04 cc08 	mla	ip, r4, r8, ip
 801cfe2:	fb04 2400 	mla	r4, r4, r0, r2
 801cfe6:	fb0e cc01 	mla	ip, lr, r1, ip
 801cfea:	fb0e 4e03 	mla	lr, lr, r3, r4
 801cfee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cff2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cff6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801cffa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cffe:	9b01      	ldr	r3, [sp, #4]
 801d000:	ea4c 0c0e 	orr.w	ip, ip, lr
 801d004:	f8a3 c000 	strh.w	ip, [r3]
 801d008:	b005      	add	sp, #20
 801d00a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d00e:	bf00      	nop
 801d010:	0802926a 	.word	0x0802926a
 801d014:	0802983a 	.word	0x0802983a
 801d018:	080292ee 	.word	0x080292ee

0801d01c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d020:	ed2d 8b08 	vpush	{d8-d11}
 801d024:	b08f      	sub	sp, #60	; 0x3c
 801d026:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801d02a:	920c      	str	r2, [sp, #48]	; 0x30
 801d02c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801d02e:	910a      	str	r1, [sp, #40]	; 0x28
 801d030:	9306      	str	r3, [sp, #24]
 801d032:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801d036:	900d      	str	r0, [sp, #52]	; 0x34
 801d038:	6850      	ldr	r0, [r2, #4]
 801d03a:	6812      	ldr	r2, [r2, #0]
 801d03c:	fb00 1303 	mla	r3, r0, r3, r1
 801d040:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d044:	9307      	str	r3, [sp, #28]
 801d046:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d048:	681b      	ldr	r3, [r3, #0]
 801d04a:	9308      	str	r3, [sp, #32]
 801d04c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d04e:	685c      	ldr	r4, [r3, #4]
 801d050:	eeb0 aa40 	vmov.f32	s20, s0
 801d054:	eef0 9a60 	vmov.f32	s19, s1
 801d058:	eeb0 9a41 	vmov.f32	s18, s2
 801d05c:	eeb0 8a62 	vmov.f32	s16, s5
 801d060:	eef0 8a43 	vmov.f32	s17, s6
 801d064:	eef0 ba44 	vmov.f32	s23, s8
 801d068:	eeb0 ba64 	vmov.f32	s22, s9
 801d06c:	eef0 aa45 	vmov.f32	s21, s10
 801d070:	3404      	adds	r4, #4
 801d072:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d074:	2b00      	cmp	r3, #0
 801d076:	dc03      	bgt.n	801d080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d078:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d07a:	2b00      	cmp	r3, #0
 801d07c:	f340 81d6 	ble.w	801d42c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801d080:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d082:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d086:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d08a:	1e48      	subs	r0, r1, #1
 801d08c:	1e56      	subs	r6, r2, #1
 801d08e:	9b06      	ldr	r3, [sp, #24]
 801d090:	2b00      	cmp	r3, #0
 801d092:	f340 80b7 	ble.w	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d096:	ea5f 472b 	movs.w	r7, fp, asr #16
 801d09a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d09e:	d406      	bmi.n	801d0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d0a0:	4287      	cmp	r7, r0
 801d0a2:	da04      	bge.n	801d0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d0a4:	2b00      	cmp	r3, #0
 801d0a6:	db02      	blt.n	801d0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d0a8:	42b3      	cmp	r3, r6
 801d0aa:	f2c0 80ac 	blt.w	801d206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801d0ae:	3701      	adds	r7, #1
 801d0b0:	f100 809d 	bmi.w	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d0b4:	42b9      	cmp	r1, r7
 801d0b6:	f2c0 809a 	blt.w	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d0ba:	3301      	adds	r3, #1
 801d0bc:	f100 8097 	bmi.w	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d0c0:	429a      	cmp	r2, r3
 801d0c2:	f2c0 8094 	blt.w	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d0c6:	9b06      	ldr	r3, [sp, #24]
 801d0c8:	930b      	str	r3, [sp, #44]	; 0x2c
 801d0ca:	9b07      	ldr	r3, [sp, #28]
 801d0cc:	9309      	str	r3, [sp, #36]	; 0x24
 801d0ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d0d0:	2b00      	cmp	r3, #0
 801d0d2:	f340 80b5 	ble.w	801d240 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801d0d6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801d0d8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801d0da:	68c7      	ldr	r7, [r0, #12]
 801d0dc:	6892      	ldr	r2, [r2, #8]
 801d0de:	ea5f 402b 	movs.w	r0, fp, asr #16
 801d0e2:	ea4f 4625 	mov.w	r6, r5, asr #16
 801d0e6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d0ea:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d0ee:	f100 80fb 	bmi.w	801d2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801d0f2:	f102 3cff 	add.w	ip, r2, #4294967295
 801d0f6:	4560      	cmp	r0, ip
 801d0f8:	f280 80f6 	bge.w	801d2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801d0fc:	2e00      	cmp	r6, #0
 801d0fe:	f2c0 80f3 	blt.w	801d2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801d102:	f107 3cff 	add.w	ip, r7, #4294967295
 801d106:	4566      	cmp	r6, ip
 801d108:	f280 80ee 	bge.w	801d2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801d10c:	b212      	sxth	r2, r2
 801d10e:	fb06 0002 	mla	r0, r6, r2, r0
 801d112:	9e08      	ldr	r6, [sp, #32]
 801d114:	1837      	adds	r7, r6, r0
 801d116:	5c30      	ldrb	r0, [r6, r0]
 801d118:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801d11c:	eb04 0c08 	add.w	ip, r4, r8
 801d120:	2b00      	cmp	r3, #0
 801d122:	f000 80d3 	beq.w	801d2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801d126:	787e      	ldrb	r6, [r7, #1]
 801d128:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d12c:	4426      	add	r6, r4
 801d12e:	2900      	cmp	r1, #0
 801d130:	f000 80d4 	beq.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 801d134:	18b8      	adds	r0, r7, r2
 801d136:	5cba      	ldrb	r2, [r7, r2]
 801d138:	7840      	ldrb	r0, [r0, #1]
 801d13a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d13e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d142:	4422      	add	r2, r4
 801d144:	4420      	add	r0, r4
 801d146:	b29b      	uxth	r3, r3
 801d148:	b289      	uxth	r1, r1
 801d14a:	fb03 f901 	mul.w	r9, r3, r1
 801d14e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d152:	011b      	lsls	r3, r3, #4
 801d154:	b289      	uxth	r1, r1
 801d156:	78b7      	ldrb	r7, [r6, #2]
 801d158:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d15c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801d160:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801d164:	eba3 0309 	sub.w	r3, r3, r9
 801d168:	b29b      	uxth	r3, r3
 801d16a:	ebae 0e01 	sub.w	lr, lr, r1
 801d16e:	fa1f fe8e 	uxth.w	lr, lr
 801d172:	435f      	muls	r7, r3
 801d174:	fb0e 770a 	mla	r7, lr, sl, r7
 801d178:	f892 a002 	ldrb.w	sl, [r2, #2]
 801d17c:	fb01 770a 	mla	r7, r1, sl, r7
 801d180:	f890 a002 	ldrb.w	sl, [r0, #2]
 801d184:	fb09 7a0a 	mla	sl, r9, sl, r7
 801d188:	f814 7008 	ldrb.w	r7, [r4, r8]
 801d18c:	f896 8000 	ldrb.w	r8, [r6]
 801d190:	7876      	ldrb	r6, [r6, #1]
 801d192:	fb03 f808 	mul.w	r8, r3, r8
 801d196:	fb0e 8807 	mla	r8, lr, r7, r8
 801d19a:	7817      	ldrb	r7, [r2, #0]
 801d19c:	fb01 8807 	mla	r8, r1, r7, r8
 801d1a0:	7807      	ldrb	r7, [r0, #0]
 801d1a2:	fb09 8707 	mla	r7, r9, r7, r8
 801d1a6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801d1aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d1ae:	ea47 070a 	orr.w	r7, r7, sl
 801d1b2:	4373      	muls	r3, r6
 801d1b4:	f892 a001 	ldrb.w	sl, [r2, #1]
 801d1b8:	fb0e 330c 	mla	r3, lr, ip, r3
 801d1bc:	fb01 310a 	mla	r1, r1, sl, r3
 801d1c0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801d1c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d1c6:	fb09 1a0a 	mla	sl, r9, sl, r1
 801d1ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d1ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d1d2:	ea47 070a 	orr.w	r7, r7, sl
 801d1d6:	801f      	strh	r7, [r3, #0]
 801d1d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d1da:	3302      	adds	r3, #2
 801d1dc:	9309      	str	r3, [sp, #36]	; 0x24
 801d1de:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d1e0:	449b      	add	fp, r3
 801d1e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d1e4:	441d      	add	r5, r3
 801d1e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1e8:	3b01      	subs	r3, #1
 801d1ea:	930b      	str	r3, [sp, #44]	; 0x2c
 801d1ec:	e76f      	b.n	801d0ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d1ee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d1f0:	449b      	add	fp, r3
 801d1f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d1f4:	441d      	add	r5, r3
 801d1f6:	9b06      	ldr	r3, [sp, #24]
 801d1f8:	3b01      	subs	r3, #1
 801d1fa:	9306      	str	r3, [sp, #24]
 801d1fc:	9b07      	ldr	r3, [sp, #28]
 801d1fe:	3302      	adds	r3, #2
 801d200:	9307      	str	r3, [sp, #28]
 801d202:	e744      	b.n	801d08e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d204:	d023      	beq.n	801d24e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801d206:	9b06      	ldr	r3, [sp, #24]
 801d208:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801d20a:	3b01      	subs	r3, #1
 801d20c:	fb00 b003 	mla	r0, r0, r3, fp
 801d210:	1400      	asrs	r0, r0, #16
 801d212:	f53f af58 	bmi.w	801d0c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d216:	3901      	subs	r1, #1
 801d218:	4288      	cmp	r0, r1
 801d21a:	f6bf af54 	bge.w	801d0c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d21e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801d220:	fb01 5303 	mla	r3, r1, r3, r5
 801d224:	141b      	asrs	r3, r3, #16
 801d226:	f53f af4e 	bmi.w	801d0c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d22a:	3a01      	subs	r2, #1
 801d22c:	4293      	cmp	r3, r2
 801d22e:	f6bf af4a 	bge.w	801d0c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d232:	9b06      	ldr	r3, [sp, #24]
 801d234:	9309      	str	r3, [sp, #36]	; 0x24
 801d236:	9b07      	ldr	r3, [sp, #28]
 801d238:	930b      	str	r3, [sp, #44]	; 0x2c
 801d23a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d23c:	2b00      	cmp	r3, #0
 801d23e:	dc70      	bgt.n	801d322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d240:	9b06      	ldr	r3, [sp, #24]
 801d242:	9a07      	ldr	r2, [sp, #28]
 801d244:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d248:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d24c:	9307      	str	r3, [sp, #28]
 801d24e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d250:	2b00      	cmp	r3, #0
 801d252:	f340 80eb 	ble.w	801d42c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801d256:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d25a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d25e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d262:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d264:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d268:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d26c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d270:	eef0 6a48 	vmov.f32	s13, s16
 801d274:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d278:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d27c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d280:	ee16 ba90 	vmov	fp, s13
 801d284:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d288:	eef0 6a68 	vmov.f32	s13, s17
 801d28c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d290:	ee18 2a10 	vmov	r2, s16
 801d294:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d298:	fb92 f3f3 	sdiv	r3, r2, r3
 801d29c:	ee18 2a90 	vmov	r2, s17
 801d2a0:	9323      	str	r3, [sp, #140]	; 0x8c
 801d2a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2a8:	9324      	str	r3, [sp, #144]	; 0x90
 801d2aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d2ae:	3b01      	subs	r3, #1
 801d2b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d2b4:	930a      	str	r3, [sp, #40]	; 0x28
 801d2b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2b8:	bf08      	it	eq
 801d2ba:	4613      	moveq	r3, r2
 801d2bc:	ee16 5a90 	vmov	r5, s13
 801d2c0:	9306      	str	r3, [sp, #24]
 801d2c2:	eef0 8a67 	vmov.f32	s17, s15
 801d2c6:	eeb0 8a47 	vmov.f32	s16, s14
 801d2ca:	e6d2      	b.n	801d072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d2cc:	b149      	cbz	r1, 801d2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801d2ce:	5cba      	ldrb	r2, [r7, r2]
 801d2d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d2d4:	4422      	add	r2, r4
 801d2d6:	4660      	mov	r0, ip
 801d2d8:	4666      	mov	r6, ip
 801d2da:	e734      	b.n	801d146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801d2dc:	4660      	mov	r0, ip
 801d2de:	4662      	mov	r2, ip
 801d2e0:	e731      	b.n	801d146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801d2e2:	4660      	mov	r0, ip
 801d2e4:	4662      	mov	r2, ip
 801d2e6:	e7f7      	b.n	801d2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801d2e8:	f110 0c01 	adds.w	ip, r0, #1
 801d2ec:	f53f af74 	bmi.w	801d1d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d2f0:	4562      	cmp	r2, ip
 801d2f2:	f6ff af71 	blt.w	801d1d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d2f6:	f116 0c01 	adds.w	ip, r6, #1
 801d2fa:	f53f af6d 	bmi.w	801d1d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d2fe:	4567      	cmp	r7, ip
 801d300:	f6ff af6a 	blt.w	801d1d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d304:	b23f      	sxth	r7, r7
 801d306:	b212      	sxth	r2, r2
 801d308:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801d30c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801d310:	9200      	str	r2, [sp, #0]
 801d312:	9701      	str	r7, [sp, #4]
 801d314:	4623      	mov	r3, r4
 801d316:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d31a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d31c:	f7ff fdc2 	bl	801cea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801d320:	e75a      	b.n	801d1d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d322:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801d324:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d328:	ea4f 462b 	mov.w	r6, fp, asr #16
 801d32c:	1428      	asrs	r0, r5, #16
 801d32e:	fb02 6000 	mla	r0, r2, r0, r6
 801d332:	9e08      	ldr	r6, [sp, #32]
 801d334:	f816 8000 	ldrb.w	r8, [r6, r0]
 801d338:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d33c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d340:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d344:	1837      	adds	r7, r6, r0
 801d346:	eb04 0c08 	add.w	ip, r4, r8
 801d34a:	2b00      	cmp	r3, #0
 801d34c:	d060      	beq.n	801d410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d34e:	787e      	ldrb	r6, [r7, #1]
 801d350:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d354:	4426      	add	r6, r4
 801d356:	2900      	cmp	r1, #0
 801d358:	d062      	beq.n	801d420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801d35a:	18b8      	adds	r0, r7, r2
 801d35c:	5cba      	ldrb	r2, [r7, r2]
 801d35e:	7840      	ldrb	r0, [r0, #1]
 801d360:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d364:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d368:	4422      	add	r2, r4
 801d36a:	4420      	add	r0, r4
 801d36c:	b29b      	uxth	r3, r3
 801d36e:	b289      	uxth	r1, r1
 801d370:	fb03 f901 	mul.w	r9, r3, r1
 801d374:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d378:	011b      	lsls	r3, r3, #4
 801d37a:	b289      	uxth	r1, r1
 801d37c:	78b7      	ldrb	r7, [r6, #2]
 801d37e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d382:	f89c c001 	ldrb.w	ip, [ip, #1]
 801d386:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801d38a:	eba3 0309 	sub.w	r3, r3, r9
 801d38e:	b29b      	uxth	r3, r3
 801d390:	ebae 0e01 	sub.w	lr, lr, r1
 801d394:	fa1f fe8e 	uxth.w	lr, lr
 801d398:	435f      	muls	r7, r3
 801d39a:	fb0e 770a 	mla	r7, lr, sl, r7
 801d39e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801d3a2:	fb01 770a 	mla	r7, r1, sl, r7
 801d3a6:	f890 a002 	ldrb.w	sl, [r0, #2]
 801d3aa:	fb09 7a0a 	mla	sl, r9, sl, r7
 801d3ae:	f814 7008 	ldrb.w	r7, [r4, r8]
 801d3b2:	f896 8000 	ldrb.w	r8, [r6]
 801d3b6:	7876      	ldrb	r6, [r6, #1]
 801d3b8:	fb03 f808 	mul.w	r8, r3, r8
 801d3bc:	fb0e 8807 	mla	r8, lr, r7, r8
 801d3c0:	7817      	ldrb	r7, [r2, #0]
 801d3c2:	fb01 8807 	mla	r8, r1, r7, r8
 801d3c6:	7807      	ldrb	r7, [r0, #0]
 801d3c8:	fb09 8707 	mla	r7, r9, r7, r8
 801d3cc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801d3d0:	4373      	muls	r3, r6
 801d3d2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d3d6:	7856      	ldrb	r6, [r2, #1]
 801d3d8:	ea47 070a 	orr.w	r7, r7, sl
 801d3dc:	fb0e 330c 	mla	r3, lr, ip, r3
 801d3e0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801d3e4:	fb01 3306 	mla	r3, r1, r6, r3
 801d3e8:	fb09 3a0a 	mla	sl, r9, sl, r3
 801d3ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d3f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d3f6:	ea47 070a 	orr.w	r7, r7, sl
 801d3fa:	f823 7b02 	strh.w	r7, [r3], #2
 801d3fe:	930b      	str	r3, [sp, #44]	; 0x2c
 801d400:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d402:	449b      	add	fp, r3
 801d404:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d406:	441d      	add	r5, r3
 801d408:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d40a:	3b01      	subs	r3, #1
 801d40c:	9309      	str	r3, [sp, #36]	; 0x24
 801d40e:	e714      	b.n	801d23a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801d410:	b149      	cbz	r1, 801d426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801d412:	5cba      	ldrb	r2, [r7, r2]
 801d414:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d418:	4422      	add	r2, r4
 801d41a:	4660      	mov	r0, ip
 801d41c:	4666      	mov	r6, ip
 801d41e:	e7a5      	b.n	801d36c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d420:	4660      	mov	r0, ip
 801d422:	4662      	mov	r2, ip
 801d424:	e7a2      	b.n	801d36c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d426:	4660      	mov	r0, ip
 801d428:	4662      	mov	r2, ip
 801d42a:	e7f7      	b.n	801d41c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801d42c:	b00f      	add	sp, #60	; 0x3c
 801d42e:	ecbd 8b08 	vpop	{d8-d11}
 801d432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d438 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801d438:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d43c:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 801d440:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d444:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801d448:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801d44c:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 801d450:	fb04 560c 	mla	r6, r4, ip, r5
 801d454:	2c00      	cmp	r4, #0
 801d456:	eb02 0e06 	add.w	lr, r2, r6
 801d45a:	db3d      	blt.n	801d4d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801d45c:	45a0      	cmp	r8, r4
 801d45e:	dd3b      	ble.n	801d4d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801d460:	2d00      	cmp	r5, #0
 801d462:	db37      	blt.n	801d4d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801d464:	45ac      	cmp	ip, r5
 801d466:	dd35      	ble.n	801d4d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801d468:	5d92      	ldrb	r2, [r2, r6]
 801d46a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801d46e:	1c6e      	adds	r6, r5, #1
 801d470:	d435      	bmi.n	801d4de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801d472:	45b4      	cmp	ip, r6
 801d474:	dd33      	ble.n	801d4de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801d476:	b3a0      	cbz	r0, 801d4e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 801d478:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801d47c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801d480:	3401      	adds	r4, #1
 801d482:	d432      	bmi.n	801d4ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801d484:	45a0      	cmp	r8, r4
 801d486:	dd30      	ble.n	801d4ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801d488:	b397      	cbz	r7, 801d4f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 801d48a:	2d00      	cmp	r5, #0
 801d48c:	db2b      	blt.n	801d4e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801d48e:	45ac      	cmp	ip, r5
 801d490:	dd29      	ble.n	801d4e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801d492:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801d496:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801d49a:	3501      	adds	r5, #1
 801d49c:	d42b      	bmi.n	801d4f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801d49e:	45ac      	cmp	ip, r5
 801d4a0:	dd29      	ble.n	801d4f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801d4a2:	b350      	cbz	r0, 801d4fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801d4a4:	44f4      	add	ip, lr
 801d4a6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d4aa:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801d4ae:	280f      	cmp	r0, #15
 801d4b0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801d4b4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801d4b8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d4bc:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801d4c0:	d801      	bhi.n	801d4c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801d4c2:	2f0f      	cmp	r7, #15
 801d4c4:	d91b      	bls.n	801d4fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801d4c6:	4b8d      	ldr	r3, [pc, #564]	; (801d6fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 801d4c8:	4a8d      	ldr	r2, [pc, #564]	; (801d700 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801d4ca:	488e      	ldr	r0, [pc, #568]	; (801d704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801d4cc:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801d4d0:	f005 fd1a 	bl	8022f08 <__assert_func>
 801d4d4:	2200      	movs	r2, #0
 801d4d6:	e7ca      	b.n	801d46e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 801d4d8:	2600      	movs	r6, #0
 801d4da:	4632      	mov	r2, r6
 801d4dc:	e7d0      	b.n	801d480 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801d4de:	2600      	movs	r6, #0
 801d4e0:	e7ce      	b.n	801d480 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801d4e2:	4606      	mov	r6, r0
 801d4e4:	e7cc      	b.n	801d480 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801d4e6:	2400      	movs	r4, #0
 801d4e8:	e7d7      	b.n	801d49a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801d4ea:	2300      	movs	r3, #0
 801d4ec:	461c      	mov	r4, r3
 801d4ee:	e7de      	b.n	801d4ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801d4f0:	463b      	mov	r3, r7
 801d4f2:	463c      	mov	r4, r7
 801d4f4:	e7db      	b.n	801d4ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801d4f6:	2300      	movs	r3, #0
 801d4f8:	e7d9      	b.n	801d4ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801d4fa:	4603      	mov	r3, r0
 801d4fc:	e7d7      	b.n	801d4ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801d4fe:	b280      	uxth	r0, r0
 801d500:	b2bf      	uxth	r7, r7
 801d502:	fb07 fe00 	mul.w	lr, r7, r0
 801d506:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801d50a:	0100      	lsls	r0, r0, #4
 801d50c:	eba0 0c0e 	sub.w	ip, r0, lr
 801d510:	b2bf      	uxth	r7, r7
 801d512:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801d516:	fa1f fc8c 	uxth.w	ip, ip
 801d51a:	1bed      	subs	r5, r5, r7
 801d51c:	b2ad      	uxth	r5, r5
 801d51e:	fb0a f00c 	mul.w	r0, sl, ip
 801d522:	fb0b 0005 	mla	r0, fp, r5, r0
 801d526:	fb07 0009 	mla	r0, r7, r9, r0
 801d52a:	fb0e 0008 	mla	r0, lr, r8, r0
 801d52e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d532:	9001      	str	r0, [sp, #4]
 801d534:	2800      	cmp	r0, #0
 801d536:	f000 80de 	beq.w	801d6f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801d53a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d53e:	d018      	beq.n	801d572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 801d540:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d544:	fb0b f000 	mul.w	r0, fp, r0
 801d548:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d54c:	fb0b fb02 	mul.w	fp, fp, r2
 801d550:	0a02      	lsrs	r2, r0, #8
 801d552:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d556:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801d55a:	4402      	add	r2, r0
 801d55c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801d560:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d564:	0a12      	lsrs	r2, r2, #8
 801d566:	0a00      	lsrs	r0, r0, #8
 801d568:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d56c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d570:	4302      	orrs	r2, r0
 801d572:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d576:	d01a      	beq.n	801d5ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 801d578:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801d57c:	fb0a f000 	mul.w	r0, sl, r0
 801d580:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d584:	fb0a fa06 	mul.w	sl, sl, r6
 801d588:	0a06      	lsrs	r6, r0, #8
 801d58a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d58e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801d592:	4406      	add	r6, r0
 801d594:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801d598:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801d59c:	0a36      	lsrs	r6, r6, #8
 801d59e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d5a2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d5a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d5aa:	ea46 060a 	orr.w	r6, r6, sl
 801d5ae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d5b2:	d01b      	beq.n	801d5ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 801d5b4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801d5b8:	fb09 fa0a 	mul.w	sl, r9, sl
 801d5bc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d5c0:	fb09 f004 	mul.w	r0, r9, r4
 801d5c4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801d5c8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d5cc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d5d0:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801d5d4:	4454      	add	r4, sl
 801d5d6:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801d5da:	0a24      	lsrs	r4, r4, #8
 801d5dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d5e0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d5e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d5e8:	ea44 0409 	orr.w	r4, r4, r9
 801d5ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d5f0:	d01b      	beq.n	801d62a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 801d5f2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801d5f6:	fb08 f909 	mul.w	r9, r8, r9
 801d5fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d5fe:	fb08 f003 	mul.w	r0, r8, r3
 801d602:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801d606:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d60a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801d60e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801d612:	444b      	add	r3, r9
 801d614:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801d618:	0a1b      	lsrs	r3, r3, #8
 801d61a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d61e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d622:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801d626:	ea43 0308 	orr.w	r3, r3, r8
 801d62a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801d62e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d632:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801d636:	fb0c f808 	mul.w	r8, ip, r8
 801d63a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d63e:	fb0c f606 	mul.w	r6, ip, r6
 801d642:	fb05 8909 	mla	r9, r5, r9, r8
 801d646:	fb05 6502 	mla	r5, r5, r2, r6
 801d64a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801d64e:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801d652:	9a01      	ldr	r2, [sp, #4]
 801d654:	8808      	ldrh	r0, [r1, #0]
 801d656:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d65a:	fb07 9908 	mla	r9, r7, r8, r9
 801d65e:	fb07 5704 	mla	r7, r7, r4, r5
 801d662:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801d666:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d66a:	b2b6      	uxth	r6, r6
 801d66c:	fb0e 9808 	mla	r8, lr, r8, r9
 801d670:	fb0e 7e03 	mla	lr, lr, r3, r7
 801d674:	4372      	muls	r2, r6
 801d676:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d67a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d67e:	1c53      	adds	r3, r2, #1
 801d680:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801d684:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801d688:	ea48 0e0e 	orr.w	lr, r8, lr
 801d68c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d690:	1205      	asrs	r5, r0, #8
 801d692:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801d696:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801d69a:	b2db      	uxtb	r3, r3
 801d69c:	fb12 f206 	smulbb	r2, r2, r6
 801d6a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d6a4:	fb05 2503 	mla	r5, r5, r3, r2
 801d6a8:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801d6ac:	10c2      	asrs	r2, r0, #3
 801d6ae:	fa5f fe8e 	uxtb.w	lr, lr
 801d6b2:	00c0      	lsls	r0, r0, #3
 801d6b4:	fb14 f406 	smulbb	r4, r4, r6
 801d6b8:	b2c0      	uxtb	r0, r0
 801d6ba:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d6be:	fb1e fe06 	smulbb	lr, lr, r6
 801d6c2:	fb02 4203 	mla	r2, r2, r3, r4
 801d6c6:	b2ad      	uxth	r5, r5
 801d6c8:	fb00 e303 	mla	r3, r0, r3, lr
 801d6cc:	b298      	uxth	r0, r3
 801d6ce:	b294      	uxth	r4, r2
 801d6d0:	1c6b      	adds	r3, r5, #1
 801d6d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d6d6:	1c62      	adds	r2, r4, #1
 801d6d8:	1c43      	adds	r3, r0, #1
 801d6da:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d6de:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d6e2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d6e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d6ea:	0952      	lsrs	r2, r2, #5
 801d6ec:	432b      	orrs	r3, r5
 801d6ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6f2:	4313      	orrs	r3, r2
 801d6f4:	800b      	strh	r3, [r1, #0]
 801d6f6:	b003      	add	sp, #12
 801d6f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6fc:	0802926a 	.word	0x0802926a
 801d700:	0802983a 	.word	0x0802983a
 801d704:	080292ee 	.word	0x080292ee

0801d708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d70c:	ed2d 8b08 	vpush	{d8-d11}
 801d710:	b09f      	sub	sp, #124	; 0x7c
 801d712:	eeb0 aa40 	vmov.f32	s20, s0
 801d716:	921b      	str	r2, [sp, #108]	; 0x6c
 801d718:	9309      	str	r3, [sp, #36]	; 0x24
 801d71a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801d71c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 801d720:	931c      	str	r3, [sp, #112]	; 0x70
 801d722:	9119      	str	r1, [sp, #100]	; 0x64
 801d724:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801d728:	901d      	str	r0, [sp, #116]	; 0x74
 801d72a:	6850      	ldr	r0, [r2, #4]
 801d72c:	6812      	ldr	r2, [r2, #0]
 801d72e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 801d730:	fb00 1303 	mla	r3, r0, r3, r1
 801d734:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d738:	930c      	str	r3, [sp, #48]	; 0x30
 801d73a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801d73c:	681b      	ldr	r3, [r3, #0]
 801d73e:	9312      	str	r3, [sp, #72]	; 0x48
 801d740:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801d742:	685e      	ldr	r6, [r3, #4]
 801d744:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801d748:	930d      	str	r3, [sp, #52]	; 0x34
 801d74a:	eef0 9a60 	vmov.f32	s19, s1
 801d74e:	eeb0 9a41 	vmov.f32	s18, s2
 801d752:	eeb0 8a62 	vmov.f32	s16, s5
 801d756:	eef0 8a43 	vmov.f32	s17, s6
 801d75a:	eef0 ba44 	vmov.f32	s23, s8
 801d75e:	eeb0 ba64 	vmov.f32	s22, s9
 801d762:	eef0 aa45 	vmov.f32	s21, s10
 801d766:	3604      	adds	r6, #4
 801d768:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d76a:	2b00      	cmp	r3, #0
 801d76c:	dc03      	bgt.n	801d776 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d76e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d770:	2b00      	cmp	r3, #0
 801d772:	f340 8388 	ble.w	801de86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801d776:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801d778:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d77c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d780:	1e48      	subs	r0, r1, #1
 801d782:	1e57      	subs	r7, r2, #1
 801d784:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d786:	2b00      	cmp	r3, #0
 801d788:	f340 8195 	ble.w	801dab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d78c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801d78e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d792:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d796:	d406      	bmi.n	801d7a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d798:	4584      	cmp	ip, r0
 801d79a:	da04      	bge.n	801d7a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d79c:	2b00      	cmp	r3, #0
 801d79e:	db02      	blt.n	801d7a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d7a0:	42bb      	cmp	r3, r7
 801d7a2:	f2c0 8189 	blt.w	801dab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801d7a6:	f11c 0c01 	adds.w	ip, ip, #1
 801d7aa:	f100 8177 	bmi.w	801da9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801d7ae:	4561      	cmp	r1, ip
 801d7b0:	f2c0 8174 	blt.w	801da9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801d7b4:	3301      	adds	r3, #1
 801d7b6:	f100 8171 	bmi.w	801da9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801d7ba:	429a      	cmp	r2, r3
 801d7bc:	f2c0 816e 	blt.w	801da9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801d7c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d7c2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d7c4:	931a      	str	r3, [sp, #104]	; 0x68
 801d7c6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801d7c8:	2b00      	cmp	r3, #0
 801d7ca:	f340 8193 	ble.w	801daf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801d7ce:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d7d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d7d4:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801d7d6:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801d7da:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d7dc:	141b      	asrs	r3, r3, #16
 801d7de:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d7e2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d7e6:	f100 81d6 	bmi.w	801db96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d7ea:	f100 38ff 	add.w	r8, r0, #4294967295
 801d7ee:	4543      	cmp	r3, r8
 801d7f0:	f280 81d1 	bge.w	801db96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d7f4:	f1bc 0f00 	cmp.w	ip, #0
 801d7f8:	f2c0 81cd 	blt.w	801db96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d7fc:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d800:	45c4      	cmp	ip, r8
 801d802:	f280 81c8 	bge.w	801db96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d806:	b200      	sxth	r0, r0
 801d808:	fb0c 3300 	mla	r3, ip, r0, r3
 801d80c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d80e:	eb04 0803 	add.w	r8, r4, r3
 801d812:	5ce3      	ldrb	r3, [r4, r3]
 801d814:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d818:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d81c:	2a00      	cmp	r2, #0
 801d81e:	f000 81af 	beq.w	801db80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801d822:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d826:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d82a:	940e      	str	r4, [sp, #56]	; 0x38
 801d82c:	0e24      	lsrs	r4, r4, #24
 801d82e:	9415      	str	r4, [sp, #84]	; 0x54
 801d830:	b179      	cbz	r1, 801d852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801d832:	eb08 0c00 	add.w	ip, r8, r0
 801d836:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d83a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d83e:	900a      	str	r0, [sp, #40]	; 0x28
 801d840:	0e00      	lsrs	r0, r0, #24
 801d842:	9013      	str	r0, [sp, #76]	; 0x4c
 801d844:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801d848:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d84c:	900f      	str	r0, [sp, #60]	; 0x3c
 801d84e:	0e00      	lsrs	r0, r0, #24
 801d850:	9016      	str	r0, [sp, #88]	; 0x58
 801d852:	b292      	uxth	r2, r2
 801d854:	b289      	uxth	r1, r1
 801d856:	fb02 f901 	mul.w	r9, r2, r1
 801d85a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d85e:	0112      	lsls	r2, r2, #4
 801d860:	eba2 0809 	sub.w	r8, r2, r9
 801d864:	b289      	uxth	r1, r1
 801d866:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d86a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d86c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d86e:	fa1f f888 	uxth.w	r8, r8
 801d872:	1a52      	subs	r2, r2, r1
 801d874:	b292      	uxth	r2, r2
 801d876:	fb08 f000 	mul.w	r0, r8, r0
 801d87a:	fb02 000e 	mla	r0, r2, lr, r0
 801d87e:	fb01 0004 	mla	r0, r1, r4, r0
 801d882:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d884:	fb09 0004 	mla	r0, r9, r4, r0
 801d888:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d88c:	2800      	cmp	r0, #0
 801d88e:	f000 80fa 	beq.w	801da86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801d892:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d896:	d01b      	beq.n	801d8d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d898:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d89c:	fb0e fa0a 	mul.w	sl, lr, sl
 801d8a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d8a4:	fb0e fe03 	mul.w	lr, lr, r3
 801d8a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d8ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d8b0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d8b4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d8b8:	4453      	add	r3, sl
 801d8ba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d8be:	0a1b      	lsrs	r3, r3, #8
 801d8c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d8c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d8c8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d8cc:	ea43 030c 	orr.w	r3, r3, ip
 801d8d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d8d2:	2cff      	cmp	r4, #255	; 0xff
 801d8d4:	d021      	beq.n	801d91a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d8d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d8d8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d8dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d8de:	fb04 fb0b 	mul.w	fp, r4, fp
 801d8e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d8e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d8e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d8ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d8ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801d8f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d8f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d8fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d8fe:	44de      	add	lr, fp
 801d900:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d904:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d908:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d90c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d910:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d914:	ea4e 040a 	orr.w	r4, lr, sl
 801d918:	940e      	str	r4, [sp, #56]	; 0x38
 801d91a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d91c:	2cff      	cmp	r4, #255	; 0xff
 801d91e:	d021      	beq.n	801d964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801d920:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d922:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d926:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d928:	fb04 fb0b 	mul.w	fp, r4, fp
 801d92c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d92e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d932:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d934:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d938:	fb04 fa0a 	mul.w	sl, r4, sl
 801d93c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d940:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d944:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d948:	44de      	add	lr, fp
 801d94a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d94e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d952:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d956:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d95a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d95e:	ea4e 040a 	orr.w	r4, lr, sl
 801d962:	940a      	str	r4, [sp, #40]	; 0x28
 801d964:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d966:	2cff      	cmp	r4, #255	; 0xff
 801d968:	d021      	beq.n	801d9ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d96a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d96c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d970:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d972:	fb04 fb0b 	mul.w	fp, r4, fp
 801d976:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d978:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d97c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d97e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d982:	fb04 fa0a 	mul.w	sl, r4, sl
 801d986:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d98a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d98e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d992:	44de      	add	lr, fp
 801d994:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d998:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d99c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9a8:	ea4e 040a 	orr.w	r4, lr, sl
 801d9ac:	940f      	str	r4, [sp, #60]	; 0x3c
 801d9ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d9b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d9b4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d9b6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801d9ba:	fb08 fc0c 	mul.w	ip, r8, ip
 801d9be:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d9c2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801d9c6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d9c8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d9cc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801d9d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d9d2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d9d6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801d9da:	fb08 f80e 	mul.w	r8, r8, lr
 801d9de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d9e2:	fb02 8303 	mla	r3, r2, r3, r8
 801d9e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d9e8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d9ea:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d9ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d9f0:	fb01 330a 	mla	r3, r1, sl, r3
 801d9f4:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801d9f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d9fa:	fb09 3901 	mla	r9, r9, r1, r3
 801d9fe:	4342      	muls	r2, r0
 801da00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801da04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801da08:	883b      	ldrh	r3, [r7, #0]
 801da0a:	1c50      	adds	r0, r2, #1
 801da0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da10:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801da14:	ea4c 0c09 	orr.w	ip, ip, r9
 801da18:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801da1c:	1219      	asrs	r1, r3, #8
 801da1e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801da22:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801da26:	b2c0      	uxtb	r0, r0
 801da28:	fb12 f204 	smulbb	r2, r2, r4
 801da2c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801da30:	fb01 2100 	mla	r1, r1, r0, r2
 801da34:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801da38:	10da      	asrs	r2, r3, #3
 801da3a:	fa5f fc8c 	uxtb.w	ip, ip
 801da3e:	00db      	lsls	r3, r3, #3
 801da40:	fb1c fc04 	smulbb	ip, ip, r4
 801da44:	b2db      	uxtb	r3, r3
 801da46:	b289      	uxth	r1, r1
 801da48:	fb03 c300 	mla	r3, r3, r0, ip
 801da4c:	fa1f fc83 	uxth.w	ip, r3
 801da50:	1c4b      	adds	r3, r1, #1
 801da52:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801da56:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801da5a:	fb1e fe04 	smulbb	lr, lr, r4
 801da5e:	f10c 0301 	add.w	r3, ip, #1
 801da62:	fb02 e200 	mla	r2, r2, r0, lr
 801da66:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801da6a:	b292      	uxth	r2, r2
 801da6c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801da70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801da74:	430b      	orrs	r3, r1
 801da76:	1c51      	adds	r1, r2, #1
 801da78:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801da7c:	0952      	lsrs	r2, r2, #5
 801da7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da82:	4313      	orrs	r3, r2
 801da84:	803b      	strh	r3, [r7, #0]
 801da86:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801da88:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801da8a:	441a      	add	r2, r3
 801da8c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801da8e:	9231      	str	r2, [sp, #196]	; 0xc4
 801da90:	441d      	add	r5, r3
 801da92:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801da94:	3b01      	subs	r3, #1
 801da96:	3702      	adds	r7, #2
 801da98:	931a      	str	r3, [sp, #104]	; 0x68
 801da9a:	e694      	b.n	801d7c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801da9c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801da9e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801daa0:	441c      	add	r4, r3
 801daa2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801daa4:	9431      	str	r4, [sp, #196]	; 0xc4
 801daa6:	441d      	add	r5, r3
 801daa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801daaa:	3b01      	subs	r3, #1
 801daac:	9309      	str	r3, [sp, #36]	; 0x24
 801daae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dab0:	3302      	adds	r3, #2
 801dab2:	930c      	str	r3, [sp, #48]	; 0x30
 801dab4:	e666      	b.n	801d784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dab6:	d024      	beq.n	801db02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 801dab8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801daba:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801dabc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801dabe:	3b01      	subs	r3, #1
 801dac0:	fb00 4003 	mla	r0, r0, r3, r4
 801dac4:	1400      	asrs	r0, r0, #16
 801dac6:	f53f ae7b 	bmi.w	801d7c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801daca:	3901      	subs	r1, #1
 801dacc:	4288      	cmp	r0, r1
 801dace:	f6bf ae77 	bge.w	801d7c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801dad2:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801dad4:	fb01 5303 	mla	r3, r1, r3, r5
 801dad8:	141b      	asrs	r3, r3, #16
 801dada:	f53f ae71 	bmi.w	801d7c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801dade:	3a01      	subs	r2, #1
 801dae0:	4293      	cmp	r3, r2
 801dae2:	f6bf ae6d 	bge.w	801d7c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801dae6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801daea:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801daee:	f1bb 0f00 	cmp.w	fp, #0
 801daf2:	dc70      	bgt.n	801dbd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801daf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801daf6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dafa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dafc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801db00:	930c      	str	r3, [sp, #48]	; 0x30
 801db02:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801db04:	2b00      	cmp	r3, #0
 801db06:	f340 81be 	ble.w	801de86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801db0a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801db0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db12:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801db16:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801db18:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801db1c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801db20:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801db24:	eef0 6a48 	vmov.f32	s13, s16
 801db28:	ee69 7a27 	vmul.f32	s15, s18, s15
 801db2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db30:	ee37 8a48 	vsub.f32	s16, s14, s16
 801db34:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 801db38:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801db3c:	eef0 6a68 	vmov.f32	s13, s17
 801db40:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801db44:	ee18 2a10 	vmov	r2, s16
 801db48:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801db4c:	fb92 f3f3 	sdiv	r3, r2, r3
 801db50:	ee18 2a90 	vmov	r2, s17
 801db54:	9333      	str	r3, [sp, #204]	; 0xcc
 801db56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801db58:	fb92 f3f3 	sdiv	r3, r2, r3
 801db5c:	9334      	str	r3, [sp, #208]	; 0xd0
 801db5e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801db60:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801db62:	3b01      	subs	r3, #1
 801db64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db68:	9319      	str	r3, [sp, #100]	; 0x64
 801db6a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801db6c:	bf08      	it	eq
 801db6e:	4613      	moveq	r3, r2
 801db70:	ee16 5a90 	vmov	r5, s13
 801db74:	9309      	str	r3, [sp, #36]	; 0x24
 801db76:	eef0 8a67 	vmov.f32	s17, s15
 801db7a:	eeb0 8a47 	vmov.f32	s16, s14
 801db7e:	e5f3      	b.n	801d768 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801db80:	2900      	cmp	r1, #0
 801db82:	f43f ae66 	beq.w	801d852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801db86:	f818 0000 	ldrb.w	r0, [r8, r0]
 801db8a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801db8e:	900a      	str	r0, [sp, #40]	; 0x28
 801db90:	0e00      	lsrs	r0, r0, #24
 801db92:	9013      	str	r0, [sp, #76]	; 0x4c
 801db94:	e65d      	b.n	801d852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801db96:	f113 0801 	adds.w	r8, r3, #1
 801db9a:	f53f af74 	bmi.w	801da86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801db9e:	4540      	cmp	r0, r8
 801dba0:	f6ff af71 	blt.w	801da86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801dba4:	f11c 0801 	adds.w	r8, ip, #1
 801dba8:	f53f af6d 	bmi.w	801da86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801dbac:	45c6      	cmp	lr, r8
 801dbae:	f6ff af6a 	blt.w	801da86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801dbb2:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801dbb4:	9302      	str	r3, [sp, #8]
 801dbb6:	b200      	sxth	r0, r0
 801dbb8:	fa0f f38e 	sxth.w	r3, lr
 801dbbc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801dbc0:	e9cd c203 	strd	ip, r2, [sp, #12]
 801dbc4:	9301      	str	r3, [sp, #4]
 801dbc6:	9000      	str	r0, [sp, #0]
 801dbc8:	4633      	mov	r3, r6
 801dbca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801dbcc:	981d      	ldr	r0, [sp, #116]	; 0x74
 801dbce:	4639      	mov	r1, r7
 801dbd0:	f7ff fc32 	bl	801d438 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801dbd4:	e757      	b.n	801da86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801dbd6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801dbd8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801dbda:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801dbde:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801dbe0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dbe4:	1427      	asrs	r7, r4, #16
 801dbe6:	142b      	asrs	r3, r5, #16
 801dbe8:	fb01 7303 	mla	r3, r1, r3, r7
 801dbec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dbee:	18e7      	adds	r7, r4, r3
 801dbf0:	5ce3      	ldrb	r3, [r4, r3]
 801dbf2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801dbf6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801dbfa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dbfe:	2a00      	cmp	r2, #0
 801dc00:	f000 8137 	beq.w	801de72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801dc04:	f897 e001 	ldrb.w	lr, [r7, #1]
 801dc08:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801dc0c:	9410      	str	r4, [sp, #64]	; 0x40
 801dc0e:	0e24      	lsrs	r4, r4, #24
 801dc10:	9417      	str	r4, [sp, #92]	; 0x5c
 801dc12:	b170      	cbz	r0, 801dc32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801dc14:	eb07 0e01 	add.w	lr, r7, r1
 801dc18:	5c79      	ldrb	r1, [r7, r1]
 801dc1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dc1e:	910b      	str	r1, [sp, #44]	; 0x2c
 801dc20:	0e09      	lsrs	r1, r1, #24
 801dc22:	9114      	str	r1, [sp, #80]	; 0x50
 801dc24:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801dc28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dc2c:	9111      	str	r1, [sp, #68]	; 0x44
 801dc2e:	0e09      	lsrs	r1, r1, #24
 801dc30:	9118      	str	r1, [sp, #96]	; 0x60
 801dc32:	b292      	uxth	r2, r2
 801dc34:	b280      	uxth	r0, r0
 801dc36:	fb02 f800 	mul.w	r8, r2, r0
 801dc3a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801dc3e:	0112      	lsls	r2, r2, #4
 801dc40:	eba2 0e08 	sub.w	lr, r2, r8
 801dc44:	b280      	uxth	r0, r0
 801dc46:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801dc4a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801dc4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dc4e:	fa1f fe8e 	uxth.w	lr, lr
 801dc52:	1a12      	subs	r2, r2, r0
 801dc54:	b292      	uxth	r2, r2
 801dc56:	fb0e f101 	mul.w	r1, lr, r1
 801dc5a:	fb02 110c 	mla	r1, r2, ip, r1
 801dc5e:	fb00 1104 	mla	r1, r0, r4, r1
 801dc62:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dc64:	fb08 1104 	mla	r1, r8, r4, r1
 801dc68:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801dc6c:	2900      	cmp	r1, #0
 801dc6e:	f000 80f5 	beq.w	801de5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801dc72:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dc76:	d019      	beq.n	801dcac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801dc78:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dc7c:	fb0c fa0a 	mul.w	sl, ip, sl
 801dc80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dc84:	fb0c fc03 	mul.w	ip, ip, r3
 801dc88:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dc8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dc90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dc94:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801dc98:	4453      	add	r3, sl
 801dc9a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dc9e:	0a1b      	lsrs	r3, r3, #8
 801dca0:	0a3f      	lsrs	r7, r7, #8
 801dca2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dca6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801dcaa:	433b      	orrs	r3, r7
 801dcac:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801dcae:	2cff      	cmp	r4, #255	; 0xff
 801dcb0:	d020      	beq.n	801dcf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801dcb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dcb4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dcb8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801dcba:	4367      	muls	r7, r4
 801dcbc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dcbe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dcc2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801dcc4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dcc8:	fb04 fa0a 	mul.w	sl, r4, sl
 801dccc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dcd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dcd4:	44bc      	add	ip, r7
 801dcd6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dcda:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dcde:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dce2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dce6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dcea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dcee:	ea4c 040a 	orr.w	r4, ip, sl
 801dcf2:	9410      	str	r4, [sp, #64]	; 0x40
 801dcf4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dcf6:	2cff      	cmp	r4, #255	; 0xff
 801dcf8:	d020      	beq.n	801dd3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801dcfa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dcfc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dd00:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dd02:	4367      	muls	r7, r4
 801dd04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dd06:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dd0a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dd0c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd10:	fb04 fa0a 	mul.w	sl, r4, sl
 801dd14:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd1c:	44bc      	add	ip, r7
 801dd1e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd22:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd36:	ea4c 040a 	orr.w	r4, ip, sl
 801dd3a:	940b      	str	r4, [sp, #44]	; 0x2c
 801dd3c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dd3e:	2cff      	cmp	r4, #255	; 0xff
 801dd40:	d020      	beq.n	801dd84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 801dd42:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd44:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dd48:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dd4a:	4367      	muls	r7, r4
 801dd4c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd4e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dd52:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dd54:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd58:	fb04 fa0a 	mul.w	sl, r4, sl
 801dd5c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd64:	44bc      	add	ip, r7
 801dd66:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd6a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd7e:	ea4c 040a 	orr.w	r4, ip, sl
 801dd82:	9411      	str	r4, [sp, #68]	; 0x44
 801dd84:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dd86:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dd8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dd8c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801dd90:	fb0e f707 	mul.w	r7, lr, r7
 801dd94:	fb02 770c 	mla	r7, r2, ip, r7
 801dd98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dd9c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd9e:	fb00 770c 	mla	r7, r0, ip, r7
 801dda2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dda6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dda8:	fb08 770c 	mla	r7, r8, ip, r7
 801ddac:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ddb0:	fb0e fe0c 	mul.w	lr, lr, ip
 801ddb4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ddb8:	fb02 e303 	mla	r3, r2, r3, lr
 801ddbc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ddbe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ddc0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ddc4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ddc6:	fb00 330a 	mla	r3, r0, sl, r3
 801ddca:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801ddce:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ddd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ddd4:	f8b9 0000 	ldrh.w	r0, [r9]
 801ddd8:	434b      	muls	r3, r1
 801ddda:	0a3f      	lsrs	r7, r7, #8
 801dddc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dde0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dde4:	1c59      	adds	r1, r3, #1
 801dde6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ddea:	ea47 070c 	orr.w	r7, r7, ip
 801ddee:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ddf2:	1202      	asrs	r2, r0, #8
 801ddf4:	0c3b      	lsrs	r3, r7, #16
 801ddf6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ddfa:	b2c9      	uxtb	r1, r1
 801ddfc:	fb13 f304 	smulbb	r3, r3, r4
 801de00:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801de04:	fb02 3201 	mla	r2, r2, r1, r3
 801de08:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801de0c:	10c3      	asrs	r3, r0, #3
 801de0e:	b2ff      	uxtb	r7, r7
 801de10:	00c0      	lsls	r0, r0, #3
 801de12:	b292      	uxth	r2, r2
 801de14:	fb1c fc04 	smulbb	ip, ip, r4
 801de18:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801de1c:	b2c0      	uxtb	r0, r0
 801de1e:	fb17 f704 	smulbb	r7, r7, r4
 801de22:	fb03 c301 	mla	r3, r3, r1, ip
 801de26:	fb00 7001 	mla	r0, r0, r1, r7
 801de2a:	f102 0c01 	add.w	ip, r2, #1
 801de2e:	b280      	uxth	r0, r0
 801de30:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801de34:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801de38:	1c42      	adds	r2, r0, #1
 801de3a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801de3e:	b29b      	uxth	r3, r3
 801de40:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de44:	ea42 020c 	orr.w	r2, r2, ip
 801de48:	f103 0c01 	add.w	ip, r3, #1
 801de4c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801de50:	095b      	lsrs	r3, r3, #5
 801de52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de56:	431a      	orrs	r2, r3
 801de58:	f8a9 2000 	strh.w	r2, [r9]
 801de5c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801de5e:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801de60:	441a      	add	r2, r3
 801de62:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801de64:	9231      	str	r2, [sp, #196]	; 0xc4
 801de66:	f109 0902 	add.w	r9, r9, #2
 801de6a:	441d      	add	r5, r3
 801de6c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801de70:	e63d      	b.n	801daee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801de72:	2800      	cmp	r0, #0
 801de74:	f43f aedd 	beq.w	801dc32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801de78:	5c79      	ldrb	r1, [r7, r1]
 801de7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801de7e:	910b      	str	r1, [sp, #44]	; 0x2c
 801de80:	0e09      	lsrs	r1, r1, #24
 801de82:	9114      	str	r1, [sp, #80]	; 0x50
 801de84:	e6d5      	b.n	801dc32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801de86:	b01f      	add	sp, #124	; 0x7c
 801de88:	ecbd 8b08 	vpop	{d8-d11}
 801de8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801de90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de94:	880e      	ldrh	r6, [r1, #0]
 801de96:	b085      	sub	sp, #20
 801de98:	ea4f 2826 	mov.w	r8, r6, asr #8
 801de9c:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801dea0:	4691      	mov	r9, r2
 801dea2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801dea6:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 801deaa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801deae:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801deb2:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 801deb6:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801deba:	9200      	str	r2, [sp, #0]
 801debc:	00f6      	lsls	r6, r6, #3
 801debe:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 801dec2:	9201      	str	r2, [sp, #4]
 801dec4:	2c00      	cmp	r4, #0
 801dec6:	b2f2      	uxtb	r2, r6
 801dec8:	fb04 560c 	mla	r6, r4, ip, r5
 801decc:	9202      	str	r2, [sp, #8]
 801dece:	eb09 0806 	add.w	r8, r9, r6
 801ded2:	db3f      	blt.n	801df54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 801ded4:	45a6      	cmp	lr, r4
 801ded6:	dd3d      	ble.n	801df54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 801ded8:	2d00      	cmp	r5, #0
 801deda:	db39      	blt.n	801df50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801dedc:	45ac      	cmp	ip, r5
 801dede:	dd37      	ble.n	801df50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801dee0:	f819 2006 	ldrb.w	r2, [r9, r6]
 801dee4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801dee8:	1c6e      	adds	r6, r5, #1
 801deea:	d436      	bmi.n	801df5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801deec:	45b4      	cmp	ip, r6
 801deee:	dd34      	ble.n	801df5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801def0:	b3a8      	cbz	r0, 801df5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 801def2:	f898 6001 	ldrb.w	r6, [r8, #1]
 801def6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801defa:	3401      	adds	r4, #1
 801defc:	d433      	bmi.n	801df66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801defe:	45a6      	cmp	lr, r4
 801df00:	dd31      	ble.n	801df66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801df02:	b39f      	cbz	r7, 801df6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 801df04:	2d00      	cmp	r5, #0
 801df06:	eb08 0e0c 	add.w	lr, r8, ip
 801df0a:	db2a      	blt.n	801df62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801df0c:	45ac      	cmp	ip, r5
 801df0e:	dd28      	ble.n	801df62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801df10:	f818 400c 	ldrb.w	r4, [r8, ip]
 801df14:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801df18:	3501      	adds	r5, #1
 801df1a:	d42a      	bmi.n	801df72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801df1c:	45ac      	cmp	ip, r5
 801df1e:	dd28      	ble.n	801df72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801df20:	b348      	cbz	r0, 801df76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 801df22:	f89e 5001 	ldrb.w	r5, [lr, #1]
 801df26:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801df2a:	280f      	cmp	r0, #15
 801df2c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801df30:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801df34:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801df38:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801df3c:	d801      	bhi.n	801df42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 801df3e:	2f0f      	cmp	r7, #15
 801df40:	d91b      	bls.n	801df7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 801df42:	4b7d      	ldr	r3, [pc, #500]	; (801e138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801df44:	4a7d      	ldr	r2, [pc, #500]	; (801e13c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801df46:	487e      	ldr	r0, [pc, #504]	; (801e140 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801df48:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801df4c:	f004 ffdc 	bl	8022f08 <__assert_func>
 801df50:	2200      	movs	r2, #0
 801df52:	e7c9      	b.n	801dee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801df54:	2600      	movs	r6, #0
 801df56:	4632      	mov	r2, r6
 801df58:	e7cf      	b.n	801defa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801df5a:	2600      	movs	r6, #0
 801df5c:	e7cd      	b.n	801defa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801df5e:	4606      	mov	r6, r0
 801df60:	e7cb      	b.n	801defa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801df62:	2400      	movs	r4, #0
 801df64:	e7d8      	b.n	801df18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 801df66:	2300      	movs	r3, #0
 801df68:	461c      	mov	r4, r3
 801df6a:	e7de      	b.n	801df2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801df6c:	463b      	mov	r3, r7
 801df6e:	463c      	mov	r4, r7
 801df70:	e7db      	b.n	801df2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801df72:	2300      	movs	r3, #0
 801df74:	e7d9      	b.n	801df2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801df76:	4603      	mov	r3, r0
 801df78:	e7d7      	b.n	801df2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801df7a:	b280      	uxth	r0, r0
 801df7c:	b2bf      	uxth	r7, r7
 801df7e:	fb00 fe07 	mul.w	lr, r0, r7
 801df82:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801df86:	0100      	lsls	r0, r0, #4
 801df88:	eba0 0c0e 	sub.w	ip, r0, lr
 801df8c:	b2bf      	uxth	r7, r7
 801df8e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801df92:	fa1f fc8c 	uxth.w	ip, ip
 801df96:	1bed      	subs	r5, r5, r7
 801df98:	b2ad      	uxth	r5, r5
 801df9a:	fb0c f00a 	mul.w	r0, ip, sl
 801df9e:	fb05 000b 	mla	r0, r5, fp, r0
 801dfa2:	fb07 0009 	mla	r0, r7, r9, r0
 801dfa6:	fb0e 0008 	mla	r0, lr, r8, r0
 801dfaa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dfae:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801dfb2:	9003      	str	r0, [sp, #12]
 801dfb4:	d018      	beq.n	801dfe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 801dfb6:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801dfba:	fb0b f000 	mul.w	r0, fp, r0
 801dfbe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dfc2:	fb0b fb02 	mul.w	fp, fp, r2
 801dfc6:	0a02      	lsrs	r2, r0, #8
 801dfc8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dfcc:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801dfd0:	4402      	add	r2, r0
 801dfd2:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801dfd6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801dfda:	0a12      	lsrs	r2, r2, #8
 801dfdc:	0a00      	lsrs	r0, r0, #8
 801dfde:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dfe2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dfe6:	4302      	orrs	r2, r0
 801dfe8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dfec:	d019      	beq.n	801e022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 801dfee:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801dff2:	fb0a fb0b 	mul.w	fp, sl, fp
 801dff6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801dffa:	fb0a fa06 	mul.w	sl, sl, r6
 801dffe:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801e002:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801e006:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e00a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801e00e:	445e      	add	r6, fp
 801e010:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e014:	0a36      	lsrs	r6, r6, #8
 801e016:	0a00      	lsrs	r0, r0, #8
 801e018:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801e01c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801e020:	4306      	orrs	r6, r0
 801e022:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e026:	d019      	beq.n	801e05c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 801e028:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801e02c:	fb09 fa0a 	mul.w	sl, r9, sl
 801e030:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e034:	fb09 f904 	mul.w	r9, r9, r4
 801e038:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801e03c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e040:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e044:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801e048:	4454      	add	r4, sl
 801e04a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801e04e:	0a24      	lsrs	r4, r4, #8
 801e050:	0a00      	lsrs	r0, r0, #8
 801e052:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e056:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801e05a:	4304      	orrs	r4, r0
 801e05c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e060:	d019      	beq.n	801e096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 801e062:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801e066:	fb08 f909 	mul.w	r9, r8, r9
 801e06a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e06e:	fb08 f803 	mul.w	r8, r8, r3
 801e072:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801e076:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e07a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801e07e:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801e082:	444b      	add	r3, r9
 801e084:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e088:	0a1b      	lsrs	r3, r3, #8
 801e08a:	0a00      	lsrs	r0, r0, #8
 801e08c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e090:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801e094:	4303      	orrs	r3, r0
 801e096:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801e09a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801e09e:	fb0c f808 	mul.w	r8, ip, r8
 801e0a2:	fb05 8800 	mla	r8, r5, r0, r8
 801e0a6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801e0aa:	fb07 8800 	mla	r8, r7, r0, r8
 801e0ae:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801e0b2:	fb0e 8000 	mla	r0, lr, r0, r8
 801e0b6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801e0ba:	fb0c f606 	mul.w	r6, ip, r6
 801e0be:	0a00      	lsrs	r0, r0, #8
 801e0c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e0c4:	fb05 6202 	mla	r2, r5, r2, r6
 801e0c8:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801e0cc:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801e0d0:	fb07 2700 	mla	r7, r7, r0, r2
 801e0d4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801e0d8:	9b03      	ldr	r3, [sp, #12]
 801e0da:	9d00      	ldr	r5, [sp, #0]
 801e0dc:	9a02      	ldr	r2, [sp, #8]
 801e0de:	fb0e 7000 	mla	r0, lr, r0, r7
 801e0e2:	43dc      	mvns	r4, r3
 801e0e4:	9b01      	ldr	r3, [sp, #4]
 801e0e6:	b2e4      	uxtb	r4, r4
 801e0e8:	0a00      	lsrs	r0, r0, #8
 801e0ea:	4363      	muls	r3, r4
 801e0ec:	4365      	muls	r5, r4
 801e0ee:	4362      	muls	r2, r4
 801e0f0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801e0f4:	ea48 0000 	orr.w	r0, r8, r0
 801e0f8:	4614      	mov	r4, r2
 801e0fa:	1c5e      	adds	r6, r3, #1
 801e0fc:	1c6a      	adds	r2, r5, #1
 801e0fe:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 801e102:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801e106:	0a03      	lsrs	r3, r0, #8
 801e108:	0c02      	lsrs	r2, r0, #16
 801e10a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801e10e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801e112:	00db      	lsls	r3, r3, #3
 801e114:	0212      	lsls	r2, r2, #8
 801e116:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e11a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e11e:	4313      	orrs	r3, r2
 801e120:	1c62      	adds	r2, r4, #1
 801e122:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e126:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801e12a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e12e:	4318      	orrs	r0, r3
 801e130:	8008      	strh	r0, [r1, #0]
 801e132:	b005      	add	sp, #20
 801e134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e138:	0802926a 	.word	0x0802926a
 801e13c:	0802983a 	.word	0x0802983a
 801e140:	080292ee 	.word	0x080292ee

0801e144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e148:	ed2d 8b08 	vpush	{d8-d11}
 801e14c:	b09b      	sub	sp, #108	; 0x6c
 801e14e:	eeb0 aa40 	vmov.f32	s20, s0
 801e152:	9218      	str	r2, [sp, #96]	; 0x60
 801e154:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801e156:	9116      	str	r1, [sp, #88]	; 0x58
 801e158:	9307      	str	r3, [sp, #28]
 801e15a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801e15e:	9019      	str	r0, [sp, #100]	; 0x64
 801e160:	6850      	ldr	r0, [r2, #4]
 801e162:	6812      	ldr	r2, [r2, #0]
 801e164:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801e166:	fb00 1303 	mla	r3, r0, r3, r1
 801e16a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e16e:	930a      	str	r3, [sp, #40]	; 0x28
 801e170:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e172:	681b      	ldr	r3, [r3, #0]
 801e174:	930f      	str	r3, [sp, #60]	; 0x3c
 801e176:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e178:	685e      	ldr	r6, [r3, #4]
 801e17a:	eef0 9a60 	vmov.f32	s19, s1
 801e17e:	eeb0 9a41 	vmov.f32	s18, s2
 801e182:	eeb0 8a62 	vmov.f32	s16, s5
 801e186:	eef0 8a43 	vmov.f32	s17, s6
 801e18a:	eef0 ba44 	vmov.f32	s23, s8
 801e18e:	eeb0 ba64 	vmov.f32	s22, s9
 801e192:	eef0 aa45 	vmov.f32	s21, s10
 801e196:	3604      	adds	r6, #4
 801e198:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e19a:	2b00      	cmp	r3, #0
 801e19c:	dc03      	bgt.n	801e1a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801e19e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e1a0:	2b00      	cmp	r3, #0
 801e1a2:	f340 8373 	ble.w	801e88c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801e1a6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e1a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e1ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e1b0:	1e48      	subs	r0, r1, #1
 801e1b2:	1e57      	subs	r7, r2, #1
 801e1b4:	9b07      	ldr	r3, [sp, #28]
 801e1b6:	2b00      	cmp	r3, #0
 801e1b8:	f340 8190 	ble.w	801e4dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801e1bc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801e1be:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e1c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e1c6:	d406      	bmi.n	801e1d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e1c8:	4584      	cmp	ip, r0
 801e1ca:	da04      	bge.n	801e1d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e1cc:	2b00      	cmp	r3, #0
 801e1ce:	db02      	blt.n	801e1d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e1d0:	42bb      	cmp	r3, r7
 801e1d2:	f2c0 8184 	blt.w	801e4de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801e1d6:	f11c 0c01 	adds.w	ip, ip, #1
 801e1da:	f100 8172 	bmi.w	801e4c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801e1de:	4561      	cmp	r1, ip
 801e1e0:	f2c0 816f 	blt.w	801e4c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801e1e4:	3301      	adds	r3, #1
 801e1e6:	f100 816c 	bmi.w	801e4c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801e1ea:	429a      	cmp	r2, r3
 801e1ec:	f2c0 8169 	blt.w	801e4c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801e1f0:	9b07      	ldr	r3, [sp, #28]
 801e1f2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e1f4:	9317      	str	r3, [sp, #92]	; 0x5c
 801e1f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e1f8:	2b00      	cmp	r3, #0
 801e1fa:	f340 818e 	ble.w	801e51a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801e1fe:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801e200:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e204:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e206:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801e20a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801e20c:	141b      	asrs	r3, r3, #16
 801e20e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e212:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e216:	f100 81d1 	bmi.w	801e5bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801e21a:	f101 38ff 	add.w	r8, r1, #4294967295
 801e21e:	4543      	cmp	r3, r8
 801e220:	f280 81cc 	bge.w	801e5bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801e224:	f1bc 0f00 	cmp.w	ip, #0
 801e228:	f2c0 81c8 	blt.w	801e5bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801e22c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e230:	45c4      	cmp	ip, r8
 801e232:	f280 81c3 	bge.w	801e5bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801e236:	b209      	sxth	r1, r1
 801e238:	fb0c 3301 	mla	r3, ip, r1, r3
 801e23c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e23e:	eb04 0803 	add.w	r8, r4, r3
 801e242:	5ce3      	ldrb	r3, [r4, r3]
 801e244:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e248:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e24c:	2a00      	cmp	r2, #0
 801e24e:	f000 81aa 	beq.w	801e5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801e252:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e256:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e25a:	940b      	str	r4, [sp, #44]	; 0x2c
 801e25c:	0e24      	lsrs	r4, r4, #24
 801e25e:	9412      	str	r4, [sp, #72]	; 0x48
 801e260:	b178      	cbz	r0, 801e282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e262:	eb08 0c01 	add.w	ip, r8, r1
 801e266:	f818 1001 	ldrb.w	r1, [r8, r1]
 801e26a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e26e:	9108      	str	r1, [sp, #32]
 801e270:	0e09      	lsrs	r1, r1, #24
 801e272:	9110      	str	r1, [sp, #64]	; 0x40
 801e274:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801e278:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e27c:	910c      	str	r1, [sp, #48]	; 0x30
 801e27e:	0e09      	lsrs	r1, r1, #24
 801e280:	9113      	str	r1, [sp, #76]	; 0x4c
 801e282:	b292      	uxth	r2, r2
 801e284:	b280      	uxth	r0, r0
 801e286:	fb02 f900 	mul.w	r9, r2, r0
 801e28a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e28e:	0112      	lsls	r2, r2, #4
 801e290:	eba2 0809 	sub.w	r8, r2, r9
 801e294:	b280      	uxth	r0, r0
 801e296:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e29a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e29c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e29e:	fa1f f888 	uxth.w	r8, r8
 801e2a2:	1a12      	subs	r2, r2, r0
 801e2a4:	b292      	uxth	r2, r2
 801e2a6:	fb08 f101 	mul.w	r1, r8, r1
 801e2aa:	fb02 110e 	mla	r1, r2, lr, r1
 801e2ae:	fb00 1104 	mla	r1, r0, r4, r1
 801e2b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e2b4:	fb09 1104 	mla	r1, r9, r4, r1
 801e2b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e2bc:	2900      	cmp	r1, #0
 801e2be:	f000 80f5 	beq.w	801e4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e2c2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e2c6:	d01b      	beq.n	801e300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801e2c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e2cc:	fb0e fa0a 	mul.w	sl, lr, sl
 801e2d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e2d4:	fb0e fe03 	mul.w	lr, lr, r3
 801e2d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e2dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e2e4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e2e8:	4453      	add	r3, sl
 801e2ea:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e2ee:	0a1b      	lsrs	r3, r3, #8
 801e2f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2f8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e2fc:	ea43 030c 	orr.w	r3, r3, ip
 801e300:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e302:	2cff      	cmp	r4, #255	; 0xff
 801e304:	d021      	beq.n	801e34a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801e306:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e308:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e30c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e30e:	fb04 fb0b 	mul.w	fp, r4, fp
 801e312:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e314:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e318:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e31a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e31e:	fb04 fa0a 	mul.w	sl, r4, sl
 801e322:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e326:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e32a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e32e:	44de      	add	lr, fp
 801e330:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e334:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e338:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e33c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e340:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e344:	ea4e 040a 	orr.w	r4, lr, sl
 801e348:	940b      	str	r4, [sp, #44]	; 0x2c
 801e34a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e34c:	2cff      	cmp	r4, #255	; 0xff
 801e34e:	d021      	beq.n	801e394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e350:	9c08      	ldr	r4, [sp, #32]
 801e352:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e356:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e358:	fb04 fb0b 	mul.w	fp, r4, fp
 801e35c:	9c08      	ldr	r4, [sp, #32]
 801e35e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e362:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e364:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e368:	fb04 fa0a 	mul.w	sl, r4, sl
 801e36c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e370:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e374:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e378:	44de      	add	lr, fp
 801e37a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e37e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e382:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e386:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e38a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e38e:	ea4e 040a 	orr.w	r4, lr, sl
 801e392:	9408      	str	r4, [sp, #32]
 801e394:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e396:	2cff      	cmp	r4, #255	; 0xff
 801e398:	d021      	beq.n	801e3de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801e39a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e39c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e3a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e3a2:	fb04 fb0b 	mul.w	fp, r4, fp
 801e3a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e3a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e3ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e3ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e3b2:	fb04 fa0a 	mul.w	sl, r4, sl
 801e3b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e3be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e3c2:	44de      	add	lr, fp
 801e3c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e3c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e3cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e3d8:	ea4e 040a 	orr.w	r4, lr, sl
 801e3dc:	940c      	str	r4, [sp, #48]	; 0x30
 801e3de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e3e0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e3e4:	9c08      	ldr	r4, [sp, #32]
 801e3e6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801e3ea:	fb08 fc0c 	mul.w	ip, r8, ip
 801e3ee:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e3f2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801e3f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e3f8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e3fc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801e400:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e402:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e406:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801e40a:	fb08 f80e 	mul.w	r8, r8, lr
 801e40e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e412:	fb02 8303 	mla	r3, r2, r3, r8
 801e416:	9a08      	ldr	r2, [sp, #32]
 801e418:	f8b7 8000 	ldrh.w	r8, [r7]
 801e41c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e420:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e422:	fb00 330a 	mla	r3, r0, sl, r3
 801e426:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801e42a:	fb09 3900 	mla	r9, r9, r0, r3
 801e42e:	43c9      	mvns	r1, r1
 801e430:	ea4f 2228 	mov.w	r2, r8, asr #8
 801e434:	fa5f fe81 	uxtb.w	lr, r1
 801e438:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e43c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e440:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e444:	fb02 f20e 	mul.w	r2, r2, lr
 801e448:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e44c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e450:	ea4c 0c09 	orr.w	ip, ip, r9
 801e454:	1c53      	adds	r3, r2, #1
 801e456:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801e45a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801e45e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801e462:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e466:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e46a:	4a63      	ldr	r2, [pc, #396]	; (801e5f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 801e46c:	fb00 f00e 	mul.w	r0, r0, lr
 801e470:	b2db      	uxtb	r3, r3
 801e472:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801e476:	1c43      	adds	r3, r0, #1
 801e478:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e47c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801e480:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801e484:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e488:	b2c9      	uxtb	r1, r1
 801e48a:	00db      	lsls	r3, r3, #3
 801e48c:	fb01 f10e 	mul.w	r1, r1, lr
 801e490:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e494:	4313      	orrs	r3, r2
 801e496:	1c4a      	adds	r2, r1, #1
 801e498:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e49c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e4a0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e4a4:	ea4c 0c03 	orr.w	ip, ip, r3
 801e4a8:	f8a7 c000 	strh.w	ip, [r7]
 801e4ac:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e4ae:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801e4b0:	441a      	add	r2, r3
 801e4b2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e4b4:	922d      	str	r2, [sp, #180]	; 0xb4
 801e4b6:	441d      	add	r5, r3
 801e4b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e4ba:	3b01      	subs	r3, #1
 801e4bc:	3702      	adds	r7, #2
 801e4be:	9317      	str	r3, [sp, #92]	; 0x5c
 801e4c0:	e699      	b.n	801e1f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e4c2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e4c4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801e4c6:	441c      	add	r4, r3
 801e4c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e4ca:	942d      	str	r4, [sp, #180]	; 0xb4
 801e4cc:	441d      	add	r5, r3
 801e4ce:	9b07      	ldr	r3, [sp, #28]
 801e4d0:	3b01      	subs	r3, #1
 801e4d2:	9307      	str	r3, [sp, #28]
 801e4d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e4d6:	3302      	adds	r3, #2
 801e4d8:	930a      	str	r3, [sp, #40]	; 0x28
 801e4da:	e66b      	b.n	801e1b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e4dc:	d024      	beq.n	801e528 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801e4de:	9b07      	ldr	r3, [sp, #28]
 801e4e0:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801e4e2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801e4e4:	3b01      	subs	r3, #1
 801e4e6:	fb00 4003 	mla	r0, r0, r3, r4
 801e4ea:	1400      	asrs	r0, r0, #16
 801e4ec:	f53f ae80 	bmi.w	801e1f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801e4f0:	3901      	subs	r1, #1
 801e4f2:	4288      	cmp	r0, r1
 801e4f4:	f6bf ae7c 	bge.w	801e1f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801e4f8:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801e4fa:	fb01 5303 	mla	r3, r1, r3, r5
 801e4fe:	141b      	asrs	r3, r3, #16
 801e500:	f53f ae76 	bmi.w	801e1f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801e504:	3a01      	subs	r2, #1
 801e506:	4293      	cmp	r3, r2
 801e508:	f6bf ae72 	bge.w	801e1f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801e50c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e510:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e514:	f1bb 0f00 	cmp.w	fp, #0
 801e518:	dc70      	bgt.n	801e5fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801e51a:	9b07      	ldr	r3, [sp, #28]
 801e51c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e520:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e522:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e526:	930a      	str	r3, [sp, #40]	; 0x28
 801e528:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e52a:	2b00      	cmp	r3, #0
 801e52c:	f340 81ae 	ble.w	801e88c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801e530:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e534:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e538:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e53c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e53e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e542:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e546:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e54a:	eef0 6a48 	vmov.f32	s13, s16
 801e54e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e552:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e556:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e55a:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801e55e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e562:	eef0 6a68 	vmov.f32	s13, s17
 801e566:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e56a:	ee18 2a10 	vmov	r2, s16
 801e56e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e572:	fb92 f3f3 	sdiv	r3, r2, r3
 801e576:	ee18 2a90 	vmov	r2, s17
 801e57a:	932f      	str	r3, [sp, #188]	; 0xbc
 801e57c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e57e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e582:	9330      	str	r3, [sp, #192]	; 0xc0
 801e584:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e586:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e588:	3b01      	subs	r3, #1
 801e58a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e58e:	9316      	str	r3, [sp, #88]	; 0x58
 801e590:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e592:	bf08      	it	eq
 801e594:	4613      	moveq	r3, r2
 801e596:	ee16 5a90 	vmov	r5, s13
 801e59a:	9307      	str	r3, [sp, #28]
 801e59c:	eef0 8a67 	vmov.f32	s17, s15
 801e5a0:	eeb0 8a47 	vmov.f32	s16, s14
 801e5a4:	e5f8      	b.n	801e198 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e5a6:	2800      	cmp	r0, #0
 801e5a8:	f43f ae6b 	beq.w	801e282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e5ac:	f818 1001 	ldrb.w	r1, [r8, r1]
 801e5b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e5b4:	9108      	str	r1, [sp, #32]
 801e5b6:	0e09      	lsrs	r1, r1, #24
 801e5b8:	9110      	str	r1, [sp, #64]	; 0x40
 801e5ba:	e662      	b.n	801e282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e5bc:	f113 0801 	adds.w	r8, r3, #1
 801e5c0:	f53f af74 	bmi.w	801e4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e5c4:	4541      	cmp	r1, r8
 801e5c6:	f6ff af71 	blt.w	801e4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e5ca:	f11c 0801 	adds.w	r8, ip, #1
 801e5ce:	f53f af6d 	bmi.w	801e4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e5d2:	45c6      	cmp	lr, r8
 801e5d4:	f6ff af6a 	blt.w	801e4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e5d8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801e5dc:	b209      	sxth	r1, r1
 801e5de:	fa0f f38e 	sxth.w	r3, lr
 801e5e2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801e5e6:	9301      	str	r3, [sp, #4]
 801e5e8:	9100      	str	r1, [sp, #0]
 801e5ea:	4633      	mov	r3, r6
 801e5ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e5ee:	9819      	ldr	r0, [sp, #100]	; 0x64
 801e5f0:	4639      	mov	r1, r7
 801e5f2:	f7ff fc4d 	bl	801de90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801e5f6:	e759      	b.n	801e4ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e5f8:	fffff800 	.word	0xfffff800
 801e5fc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801e5fe:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801e600:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e604:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e606:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e60a:	1427      	asrs	r7, r4, #16
 801e60c:	142b      	asrs	r3, r5, #16
 801e60e:	fb01 7303 	mla	r3, r1, r3, r7
 801e612:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e614:	18e7      	adds	r7, r4, r3
 801e616:	5ce3      	ldrb	r3, [r4, r3]
 801e618:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e61c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e620:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e624:	2a00      	cmp	r2, #0
 801e626:	f000 8127 	beq.w	801e878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801e62a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e62e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e632:	940d      	str	r4, [sp, #52]	; 0x34
 801e634:	0e24      	lsrs	r4, r4, #24
 801e636:	9414      	str	r4, [sp, #80]	; 0x50
 801e638:	b170      	cbz	r0, 801e658 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801e63a:	eb07 0e01 	add.w	lr, r7, r1
 801e63e:	5c79      	ldrb	r1, [r7, r1]
 801e640:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e644:	9109      	str	r1, [sp, #36]	; 0x24
 801e646:	0e09      	lsrs	r1, r1, #24
 801e648:	9111      	str	r1, [sp, #68]	; 0x44
 801e64a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e64e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e652:	910e      	str	r1, [sp, #56]	; 0x38
 801e654:	0e09      	lsrs	r1, r1, #24
 801e656:	9115      	str	r1, [sp, #84]	; 0x54
 801e658:	b292      	uxth	r2, r2
 801e65a:	b280      	uxth	r0, r0
 801e65c:	fb02 f800 	mul.w	r8, r2, r0
 801e660:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e664:	0112      	lsls	r2, r2, #4
 801e666:	eba2 0e08 	sub.w	lr, r2, r8
 801e66a:	b280      	uxth	r0, r0
 801e66c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801e670:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e672:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e674:	fa1f fe8e 	uxth.w	lr, lr
 801e678:	1a09      	subs	r1, r1, r0
 801e67a:	b289      	uxth	r1, r1
 801e67c:	fb0e f202 	mul.w	r2, lr, r2
 801e680:	fb01 220c 	mla	r2, r1, ip, r2
 801e684:	fb00 2204 	mla	r2, r0, r4, r2
 801e688:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e68a:	fb08 2204 	mla	r2, r8, r4, r2
 801e68e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e692:	2a00      	cmp	r2, #0
 801e694:	f000 80e5 	beq.w	801e862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e698:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e69c:	d019      	beq.n	801e6d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 801e69e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e6a2:	fb0c fa0a 	mul.w	sl, ip, sl
 801e6a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e6aa:	fb0c fc03 	mul.w	ip, ip, r3
 801e6ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e6b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e6b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e6ba:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e6be:	4453      	add	r3, sl
 801e6c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e6c4:	0a1b      	lsrs	r3, r3, #8
 801e6c6:	0a3f      	lsrs	r7, r7, #8
 801e6c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e6cc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e6d0:	433b      	orrs	r3, r7
 801e6d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e6d4:	2cff      	cmp	r4, #255	; 0xff
 801e6d6:	d020      	beq.n	801e71a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 801e6d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e6da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e6de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e6e0:	4367      	muls	r7, r4
 801e6e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e6e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e6e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e6ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e6ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801e6f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e6f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e6fa:	44bc      	add	ip, r7
 801e6fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e700:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e708:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e70c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e710:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e714:	ea4c 040a 	orr.w	r4, ip, sl
 801e718:	940d      	str	r4, [sp, #52]	; 0x34
 801e71a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e71c:	2cff      	cmp	r4, #255	; 0xff
 801e71e:	d020      	beq.n	801e762 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 801e720:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801e722:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e726:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e728:	4367      	muls	r7, r4
 801e72a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801e72c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e730:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e732:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e736:	fb04 fa0a 	mul.w	sl, r4, sl
 801e73a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e73e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e742:	44bc      	add	ip, r7
 801e744:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e748:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e74c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e750:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e754:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e758:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e75c:	ea4c 040a 	orr.w	r4, ip, sl
 801e760:	9409      	str	r4, [sp, #36]	; 0x24
 801e762:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e764:	2cff      	cmp	r4, #255	; 0xff
 801e766:	d020      	beq.n	801e7aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 801e768:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e76a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e76e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e770:	4367      	muls	r7, r4
 801e772:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e774:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e778:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e77a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e77e:	fb04 fa0a 	mul.w	sl, r4, sl
 801e782:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e786:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e78a:	44bc      	add	ip, r7
 801e78c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e790:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e798:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e79c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e7a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7a4:	ea4c 040a 	orr.w	r4, ip, sl
 801e7a8:	940e      	str	r4, [sp, #56]	; 0x38
 801e7aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e7ac:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e7b0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801e7b2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e7b6:	fb0e f707 	mul.w	r7, lr, r7
 801e7ba:	fb01 770c 	mla	r7, r1, ip, r7
 801e7be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e7c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e7c4:	fb00 770c 	mla	r7, r0, ip, r7
 801e7c8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e7cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e7ce:	fb08 770c 	mla	r7, r8, ip, r7
 801e7d2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801e7d6:	fb0e fe0c 	mul.w	lr, lr, ip
 801e7da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e7de:	fb01 e303 	mla	r3, r1, r3, lr
 801e7e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e7e4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e7e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e7ea:	fb00 330a 	mla	r3, r0, sl, r3
 801e7ee:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801e7f2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e7f6:	f8b9 3000 	ldrh.w	r3, [r9]
 801e7fa:	43d2      	mvns	r2, r2
 801e7fc:	1218      	asrs	r0, r3, #8
 801e7fe:	b2d2      	uxtb	r2, r2
 801e800:	10d9      	asrs	r1, r3, #3
 801e802:	0a3f      	lsrs	r7, r7, #8
 801e804:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e808:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e80c:	00db      	lsls	r3, r3, #3
 801e80e:	4350      	muls	r0, r2
 801e810:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e814:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e818:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e81c:	b2db      	uxtb	r3, r3
 801e81e:	ea47 070c 	orr.w	r7, r7, ip
 801e822:	4351      	muls	r1, r2
 801e824:	4353      	muls	r3, r2
 801e826:	1c42      	adds	r2, r0, #1
 801e828:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e82c:	0c3a      	lsrs	r2, r7, #16
 801e82e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e832:	4a19      	ldr	r2, [pc, #100]	; (801e898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 801e834:	b2c0      	uxtb	r0, r0
 801e836:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801e83a:	1c4a      	adds	r2, r1, #1
 801e83c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e840:	0a3a      	lsrs	r2, r7, #8
 801e842:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e846:	00c9      	lsls	r1, r1, #3
 801e848:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e84c:	4301      	orrs	r1, r0
 801e84e:	1c58      	adds	r0, r3, #1
 801e850:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e854:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e858:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801e85c:	4308      	orrs	r0, r1
 801e85e:	f8a9 0000 	strh.w	r0, [r9]
 801e862:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e864:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801e866:	441a      	add	r2, r3
 801e868:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e86a:	922d      	str	r2, [sp, #180]	; 0xb4
 801e86c:	f109 0902 	add.w	r9, r9, #2
 801e870:	441d      	add	r5, r3
 801e872:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e876:	e64d      	b.n	801e514 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801e878:	2800      	cmp	r0, #0
 801e87a:	f43f aeed 	beq.w	801e658 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801e87e:	5c79      	ldrb	r1, [r7, r1]
 801e880:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e884:	9109      	str	r1, [sp, #36]	; 0x24
 801e886:	0e09      	lsrs	r1, r1, #24
 801e888:	9111      	str	r1, [sp, #68]	; 0x44
 801e88a:	e6e5      	b.n	801e658 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801e88c:	b01b      	add	sp, #108	; 0x6c
 801e88e:	ecbd 8b08 	vpop	{d8-d11}
 801e892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e896:	bf00      	nop
 801e898:	fffff800 	.word	0xfffff800

0801e89c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801e89c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8a0:	b085      	sub	sp, #20
 801e8a2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801e8a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801e8aa:	9103      	str	r1, [sp, #12]
 801e8ac:	fb05 7106 	mla	r1, r5, r6, r7
 801e8b0:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801e8b4:	2d00      	cmp	r5, #0
 801e8b6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801e8ba:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e8be:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801e8c2:	9401      	str	r4, [sp, #4]
 801e8c4:	eb03 0901 	add.w	r9, r3, r1
 801e8c8:	f2c0 80c0 	blt.w	801ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801e8cc:	45a8      	cmp	r8, r5
 801e8ce:	f340 80bd 	ble.w	801ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801e8d2:	2f00      	cmp	r7, #0
 801e8d4:	f2c0 80b6 	blt.w	801ea44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801e8d8:	42be      	cmp	r6, r7
 801e8da:	f340 80b3 	ble.w	801ea44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801e8de:	f813 c001 	ldrb.w	ip, [r3, r1]
 801e8e2:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801e8e6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e8ea:	d019      	beq.n	801e920 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801e8ec:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801e8f0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e8f4:	435a      	muls	r2, r3
 801e8f6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801e8fa:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801e8fe:	fb0c f403 	mul.w	r4, ip, r3
 801e902:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801e906:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801e90a:	441a      	add	r2, r3
 801e90c:	f104 0320 	add.w	r3, r4, #32
 801e910:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801e914:	0a1b      	lsrs	r3, r3, #8
 801e916:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801e91a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e91e:	4319      	orrs	r1, r3
 801e920:	b289      	uxth	r1, r1
 801e922:	1c7b      	adds	r3, r7, #1
 801e924:	f100 8097 	bmi.w	801ea56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801e928:	429e      	cmp	r6, r3
 801e92a:	f340 8094 	ble.w	801ea56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801e92e:	2800      	cmp	r0, #0
 801e930:	f000 8094 	beq.w	801ea5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801e934:	f899 4001 	ldrb.w	r4, [r9, #1]
 801e938:	9b01      	ldr	r3, [sp, #4]
 801e93a:	2cff      	cmp	r4, #255	; 0xff
 801e93c:	885b      	ldrh	r3, [r3, #2]
 801e93e:	d01b      	beq.n	801e978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 801e940:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801e944:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801e948:	fb0a f202 	mul.w	r2, sl, r2
 801e94c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e950:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801e954:	fb04 fa03 	mul.w	sl, r4, r3
 801e958:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801e95c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801e960:	441a      	add	r2, r3
 801e962:	f10a 0320 	add.w	r3, sl, #32
 801e966:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801e96a:	0a1b      	lsrs	r3, r3, #8
 801e96c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801e970:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e974:	ea4b 0303 	orr.w	r3, fp, r3
 801e978:	b29b      	uxth	r3, r3
 801e97a:	3501      	adds	r5, #1
 801e97c:	d474      	bmi.n	801ea68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801e97e:	45a8      	cmp	r8, r5
 801e980:	dd72      	ble.n	801ea68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801e982:	f1be 0f00 	cmp.w	lr, #0
 801e986:	f000 8120 	beq.w	801ebca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801e98a:	2f00      	cmp	r7, #0
 801e98c:	db69      	blt.n	801ea62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801e98e:	42be      	cmp	r6, r7
 801e990:	dd67      	ble.n	801ea62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801e992:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e996:	9a01      	ldr	r2, [sp, #4]
 801e998:	2dff      	cmp	r5, #255	; 0xff
 801e99a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801e99e:	d01c      	beq.n	801e9da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801e9a0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801e9a4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801e9a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e9ac:	fb05 fa0b 	mul.w	sl, r5, fp
 801e9b0:	fb08 f802 	mul.w	r8, r8, r2
 801e9b4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801e9b8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801e9bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e9c0:	4490      	add	r8, r2
 801e9c2:	f10a 0220 	add.w	r2, sl, #32
 801e9c6:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801e9ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9ce:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801e9d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e9d6:	ea4b 0b0a 	orr.w	fp, fp, sl
 801e9da:	fa1f fb8b 	uxth.w	fp, fp
 801e9de:	3701      	adds	r7, #1
 801e9e0:	d447      	bmi.n	801ea72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801e9e2:	42be      	cmp	r6, r7
 801e9e4:	dd45      	ble.n	801ea72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801e9e6:	2800      	cmp	r0, #0
 801e9e8:	d046      	beq.n	801ea78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801e9ea:	3601      	adds	r6, #1
 801e9ec:	9a01      	ldr	r2, [sp, #4]
 801e9ee:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e9f2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801e9f6:	2fff      	cmp	r7, #255	; 0xff
 801e9f8:	d01a      	beq.n	801ea30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801e9fa:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801e9fe:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801ea02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea06:	fb07 f902 	mul.w	r9, r7, r2
 801ea0a:	fb08 f806 	mul.w	r8, r8, r6
 801ea0e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ea12:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801ea16:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ea1a:	44b0      	add	r8, r6
 801ea1c:	f109 0620 	add.w	r6, r9, #32
 801ea20:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801ea24:	0a36      	lsrs	r6, r6, #8
 801ea26:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ea2a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ea2e:	4332      	orrs	r2, r6
 801ea30:	b292      	uxth	r2, r2
 801ea32:	280f      	cmp	r0, #15
 801ea34:	d922      	bls.n	801ea7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801ea36:	4b69      	ldr	r3, [pc, #420]	; (801ebdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801ea38:	4a69      	ldr	r2, [pc, #420]	; (801ebe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801ea3a:	486a      	ldr	r0, [pc, #424]	; (801ebe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801ea3c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801ea40:	f004 fa62 	bl	8022f08 <__assert_func>
 801ea44:	f04f 0c00 	mov.w	ip, #0
 801ea48:	4661      	mov	r1, ip
 801ea4a:	e76a      	b.n	801e922 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801ea4c:	2400      	movs	r4, #0
 801ea4e:	46a4      	mov	ip, r4
 801ea50:	4623      	mov	r3, r4
 801ea52:	4621      	mov	r1, r4
 801ea54:	e791      	b.n	801e97a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ea56:	2400      	movs	r4, #0
 801ea58:	4623      	mov	r3, r4
 801ea5a:	e78e      	b.n	801e97a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ea5c:	4604      	mov	r4, r0
 801ea5e:	4603      	mov	r3, r0
 801ea60:	e78b      	b.n	801e97a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ea62:	2500      	movs	r5, #0
 801ea64:	46ab      	mov	fp, r5
 801ea66:	e7ba      	b.n	801e9de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801ea68:	2700      	movs	r7, #0
 801ea6a:	463d      	mov	r5, r7
 801ea6c:	463a      	mov	r2, r7
 801ea6e:	46bb      	mov	fp, r7
 801ea70:	e7df      	b.n	801ea32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801ea72:	2700      	movs	r7, #0
 801ea74:	463a      	mov	r2, r7
 801ea76:	e7dc      	b.n	801ea32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801ea78:	4607      	mov	r7, r0
 801ea7a:	4602      	mov	r2, r0
 801ea7c:	f1be 0f0f 	cmp.w	lr, #15
 801ea80:	d8d9      	bhi.n	801ea36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801ea82:	b286      	uxth	r6, r0
 801ea84:	fa1f f98e 	uxth.w	r9, lr
 801ea88:	fb06 f809 	mul.w	r8, r6, r9
 801ea8c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ea90:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ea94:	0136      	lsls	r6, r6, #4
 801ea96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ea9a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ea9e:	9601      	str	r6, [sp, #4]
 801eaa0:	ea4a 0101 	orr.w	r1, sl, r1
 801eaa4:	fa1f f689 	uxth.w	r6, r9
 801eaa8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801eaac:	fb10 f90e 	smulbb	r9, r0, lr
 801eab0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801eab4:	9602      	str	r6, [sp, #8]
 801eab6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eaba:	460e      	mov	r6, r1
 801eabc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eac0:	f1ce 0110 	rsb	r1, lr, #16
 801eac4:	1a09      	subs	r1, r1, r0
 801eac6:	ea4a 0303 	orr.w	r3, sl, r3
 801eaca:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801eace:	4343      	muls	r3, r0
 801ead0:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801ead4:	9801      	ldr	r0, [sp, #4]
 801ead6:	fb01 3106 	mla	r1, r1, r6, r3
 801eada:	9e02      	ldr	r6, [sp, #8]
 801eadc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801eae0:	1b80      	subs	r0, r0, r6
 801eae2:	9e01      	ldr	r6, [sp, #4]
 801eae4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801eae8:	eba6 0608 	sub.w	r6, r6, r8
 801eaec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eaf0:	b2b6      	uxth	r6, r6
 801eaf2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eaf6:	ea4a 0202 	orr.w	r2, sl, r2
 801eafa:	b280      	uxth	r0, r0
 801eafc:	4374      	muls	r4, r6
 801eafe:	fb09 1302 	mla	r3, r9, r2, r1
 801eb02:	fb0c 4400 	mla	r4, ip, r0, r4
 801eb06:	9a03      	ldr	r2, [sp, #12]
 801eb08:	9802      	ldr	r0, [sp, #8]
 801eb0a:	8811      	ldrh	r1, [r2, #0]
 801eb0c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801eb10:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801eb14:	fb00 4505 	mla	r5, r0, r5, r4
 801eb18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eb1c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801eb20:	fb08 5707 	mla	r7, r8, r7, r5
 801eb24:	ea4a 0b0b 	orr.w	fp, sl, fp
 801eb28:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801eb2c:	b292      	uxth	r2, r2
 801eb2e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801eb32:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801eb36:	4357      	muls	r7, r2
 801eb38:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801eb3c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801eb40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb44:	f107 0801 	add.w	r8, r7, #1
 801eb48:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eb4c:	ea43 0e0e 	orr.w	lr, r3, lr
 801eb50:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801eb54:	fa1f f38e 	uxth.w	r3, lr
 801eb58:	1208      	asrs	r0, r1, #8
 801eb5a:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801eb5e:	b2ff      	uxtb	r7, r7
 801eb60:	121c      	asrs	r4, r3, #8
 801eb62:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eb66:	fb10 f007 	smulbb	r0, r0, r7
 801eb6a:	10cd      	asrs	r5, r1, #3
 801eb6c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801eb70:	fb04 0402 	mla	r4, r4, r2, r0
 801eb74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eb78:	10d8      	asrs	r0, r3, #3
 801eb7a:	fb15 f507 	smulbb	r5, r5, r7
 801eb7e:	00db      	lsls	r3, r3, #3
 801eb80:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eb84:	fb00 5002 	mla	r0, r0, r2, r5
 801eb88:	b2dd      	uxtb	r5, r3
 801eb8a:	00cb      	lsls	r3, r1, #3
 801eb8c:	b2db      	uxtb	r3, r3
 801eb8e:	fb13 f307 	smulbb	r3, r3, r7
 801eb92:	fb05 3202 	mla	r2, r5, r2, r3
 801eb96:	b2a4      	uxth	r4, r4
 801eb98:	b292      	uxth	r2, r2
 801eb9a:	1c63      	adds	r3, r4, #1
 801eb9c:	b280      	uxth	r0, r0
 801eb9e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801eba2:	1c53      	adds	r3, r2, #1
 801eba4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eba8:	1c42      	adds	r2, r0, #1
 801ebaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ebae:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ebb2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ebb6:	0940      	lsrs	r0, r0, #5
 801ebb8:	4323      	orrs	r3, r4
 801ebba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ebbe:	9a03      	ldr	r2, [sp, #12]
 801ebc0:	4303      	orrs	r3, r0
 801ebc2:	8013      	strh	r3, [r2, #0]
 801ebc4:	b005      	add	sp, #20
 801ebc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebca:	280f      	cmp	r0, #15
 801ebcc:	f63f af33 	bhi.w	801ea36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801ebd0:	4677      	mov	r7, lr
 801ebd2:	4675      	mov	r5, lr
 801ebd4:	4672      	mov	r2, lr
 801ebd6:	46f3      	mov	fp, lr
 801ebd8:	e753      	b.n	801ea82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801ebda:	bf00      	nop
 801ebdc:	0802926a 	.word	0x0802926a
 801ebe0:	0802983a 	.word	0x0802983a
 801ebe4:	080292ee 	.word	0x080292ee

0801ebe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ebe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebec:	ed2d 8b08 	vpush	{d8-d11}
 801ebf0:	b097      	sub	sp, #92	; 0x5c
 801ebf2:	eeb0 aa40 	vmov.f32	s20, s0
 801ebf6:	9214      	str	r2, [sp, #80]	; 0x50
 801ebf8:	9308      	str	r3, [sp, #32]
 801ebfa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ebfc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ec00:	9312      	str	r3, [sp, #72]	; 0x48
 801ec02:	9111      	str	r1, [sp, #68]	; 0x44
 801ec04:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ec08:	9015      	str	r0, [sp, #84]	; 0x54
 801ec0a:	6850      	ldr	r0, [r2, #4]
 801ec0c:	6812      	ldr	r2, [r2, #0]
 801ec0e:	fb00 1303 	mla	r3, r0, r3, r1
 801ec12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ec16:	9309      	str	r3, [sp, #36]	; 0x24
 801ec18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ec1a:	681b      	ldr	r3, [r3, #0]
 801ec1c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ec1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ec20:	685b      	ldr	r3, [r3, #4]
 801ec22:	930c      	str	r3, [sp, #48]	; 0x30
 801ec24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801ec28:	930a      	str	r3, [sp, #40]	; 0x28
 801ec2a:	eef0 9a60 	vmov.f32	s19, s1
 801ec2e:	eeb0 9a41 	vmov.f32	s18, s2
 801ec32:	eeb0 8a62 	vmov.f32	s16, s5
 801ec36:	eef0 8a43 	vmov.f32	s17, s6
 801ec3a:	eef0 ba44 	vmov.f32	s23, s8
 801ec3e:	eeb0 ba64 	vmov.f32	s22, s9
 801ec42:	eef0 aa45 	vmov.f32	s21, s10
 801ec46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ec48:	2b00      	cmp	r3, #0
 801ec4a:	dc03      	bgt.n	801ec54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ec4c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ec4e:	2b00      	cmp	r3, #0
 801ec50:	f340 83cb 	ble.w	801f3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801ec54:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ec56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec5a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec5e:	1e48      	subs	r0, r1, #1
 801ec60:	1e55      	subs	r5, r2, #1
 801ec62:	9b08      	ldr	r3, [sp, #32]
 801ec64:	2b00      	cmp	r3, #0
 801ec66:	f340 81a3 	ble.w	801efb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ec6a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801ec6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec6e:	1436      	asrs	r6, r6, #16
 801ec70:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ec74:	d406      	bmi.n	801ec84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ec76:	4286      	cmp	r6, r0
 801ec78:	da04      	bge.n	801ec84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ec7a:	2b00      	cmp	r3, #0
 801ec7c:	db02      	blt.n	801ec84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ec7e:	42ab      	cmp	r3, r5
 801ec80:	f2c0 8197 	blt.w	801efb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801ec84:	3601      	adds	r6, #1
 801ec86:	f100 8184 	bmi.w	801ef92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ec8a:	42b1      	cmp	r1, r6
 801ec8c:	f2c0 8181 	blt.w	801ef92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ec90:	3301      	adds	r3, #1
 801ec92:	f100 817e 	bmi.w	801ef92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ec96:	429a      	cmp	r2, r3
 801ec98:	f2c0 817b 	blt.w	801ef92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ec9c:	9b08      	ldr	r3, [sp, #32]
 801ec9e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801eca0:	9313      	str	r3, [sp, #76]	; 0x4c
 801eca2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801eca6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eca8:	2b00      	cmp	r3, #0
 801ecaa:	f340 81a4 	ble.w	801eff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801ecae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ecb0:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801ecb2:	1418      	asrs	r0, r3, #16
 801ecb4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ecb6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ecba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ecbc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ecc0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ecc2:	142d      	asrs	r5, r5, #16
 801ecc4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ecc8:	f100 81f8 	bmi.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801eccc:	f102 3eff 	add.w	lr, r2, #4294967295
 801ecd0:	4575      	cmp	r5, lr
 801ecd2:	f280 81f3 	bge.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801ecd6:	2800      	cmp	r0, #0
 801ecd8:	f2c0 81f0 	blt.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801ecdc:	f103 3eff 	add.w	lr, r3, #4294967295
 801ece0:	4570      	cmp	r0, lr
 801ece2:	f280 81eb 	bge.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801ece6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ece8:	b212      	sxth	r2, r2
 801ecea:	fb00 5002 	mla	r0, r0, r2, r5
 801ecee:	fa1f fe81 	uxth.w	lr, r1
 801ecf2:	eb03 0a00 	add.w	sl, r3, r0
 801ecf6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ecfa:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ecfe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ed02:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ed06:	b29b      	uxth	r3, r3
 801ed08:	f1bc 0f00 	cmp.w	ip, #0
 801ed0c:	f000 81b9 	beq.w	801f082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ed10:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ed14:	940d      	str	r4, [sp, #52]	; 0x34
 801ed16:	eb0a 0b02 	add.w	fp, sl, r2
 801ed1a:	fa1f fa8c 	uxth.w	sl, ip
 801ed1e:	fb0a fe0e 	mul.w	lr, sl, lr
 801ed22:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ed26:	fa1f fa8a 	uxth.w	sl, sl
 801ed2a:	eba5 050e 	sub.w	r5, r5, lr
 801ed2e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ed32:	940e      	str	r4, [sp, #56]	; 0x38
 801ed34:	eba3 030a 	sub.w	r3, r3, sl
 801ed38:	b2ad      	uxth	r5, r5
 801ed3a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ed3c:	b29b      	uxth	r3, r3
 801ed3e:	fb08 f505 	mul.w	r5, r8, r5
 801ed42:	fb09 5303 	mla	r3, r9, r3, r5
 801ed46:	fb0a 3304 	mla	r3, sl, r4, r3
 801ed4a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed4c:	fb0e 3304 	mla	r3, lr, r4, r3
 801ed50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ed54:	2b00      	cmp	r3, #0
 801ed56:	f000 810f 	beq.w	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801ed5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ed5c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ed60:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ed64:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ed68:	f000 8190 	beq.w	801f08c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 801ed6c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ed70:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ed74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ed78:	fb09 f000 	mul.w	r0, r9, r0
 801ed7c:	fb0a fe0e 	mul.w	lr, sl, lr
 801ed80:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ed84:	f100 0b20 	add.w	fp, r0, #32
 801ed88:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ed8c:	44ce      	add	lr, r9
 801ed8e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ed92:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed96:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ed9a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ed9e:	ea4e 0909 	orr.w	r9, lr, r9
 801eda2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801eda6:	8868      	ldrh	r0, [r5, #2]
 801eda8:	d019      	beq.n	801edde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801edaa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801edae:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801edb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801edb6:	fb08 f800 	mul.w	r8, r8, r0
 801edba:	fb0a fe0e 	mul.w	lr, sl, lr
 801edbe:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801edc2:	f108 0b20 	add.w	fp, r8, #32
 801edc6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801edca:	4486      	add	lr, r0
 801edcc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801edd0:	0a00      	lsrs	r0, r0, #8
 801edd2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801edd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801edda:	ea4e 0000 	orr.w	r0, lr, r0
 801edde:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ede2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ede6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801edea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801edee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801edf2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801edf6:	ea4e 0909 	orr.w	r9, lr, r9
 801edfa:	ea4a 0000 	orr.w	r0, sl, r0
 801edfe:	f1bc 0f00 	cmp.w	ip, #0
 801ee02:	f000 8145 	beq.w	801f090 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801ee06:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ee0a:	3a01      	subs	r2, #1
 801ee0c:	0052      	lsls	r2, r2, #1
 801ee0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ee10:	3202      	adds	r2, #2
 801ee12:	2cff      	cmp	r4, #255	; 0xff
 801ee14:	eb05 0e02 	add.w	lr, r5, r2
 801ee18:	5aaa      	ldrh	r2, [r5, r2]
 801ee1a:	d018      	beq.n	801ee4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801ee1c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ee20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee24:	fb04 fa02 	mul.w	sl, r4, r2
 801ee28:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ee2c:	fb08 f805 	mul.w	r8, r8, r5
 801ee30:	f10a 0520 	add.w	r5, sl, #32
 801ee34:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ee38:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ee3c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ee40:	4442      	add	r2, r8
 801ee42:	0a2d      	lsrs	r5, r5, #8
 801ee44:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ee48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ee4c:	432a      	orrs	r2, r5
 801ee4e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ee50:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ee54:	2cff      	cmp	r4, #255	; 0xff
 801ee56:	d01a      	beq.n	801ee8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801ee58:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ee5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ee60:	fb04 fa05 	mul.w	sl, r4, r5
 801ee64:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ee68:	fb08 f80e 	mul.w	r8, r8, lr
 801ee6c:	f10a 0e20 	add.w	lr, sl, #32
 801ee70:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ee74:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ee78:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ee7c:	4445      	add	r5, r8
 801ee7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee82:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ee86:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ee8a:	ea45 050e 	orr.w	r5, r5, lr
 801ee8e:	fb1c fe01 	smulbb	lr, ip, r1
 801ee92:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ee96:	f1cc 0810 	rsb	r8, ip, #16
 801ee9a:	eba8 0801 	sub.w	r8, r8, r1
 801ee9e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801eea2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801eea6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801eeaa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801eeae:	4341      	muls	r1, r0
 801eeb0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eeb4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eeb8:	ea4a 0202 	orr.w	r2, sl, r2
 801eebc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801eec0:	fb09 1108 	mla	r1, r9, r8, r1
 801eec4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801eec8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801eecc:	fb0c 1102 	mla	r1, ip, r2, r1
 801eed0:	ea4b 0505 	orr.w	r5, fp, r5
 801eed4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801eed8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801eedc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801eee0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eee4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eee8:	ea42 0e0e 	orr.w	lr, r2, lr
 801eeec:	fa1f f28e 	uxth.w	r2, lr
 801eef0:	2bff      	cmp	r3, #255	; 0xff
 801eef2:	d103      	bne.n	801eefc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801eef4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801eef6:	29ff      	cmp	r1, #255	; 0xff
 801eef8:	f000 80de 	beq.w	801f0b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801eefc:	990a      	ldr	r1, [sp, #40]	; 0x28
 801eefe:	8838      	ldrh	r0, [r7, #0]
 801ef00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef02:	434b      	muls	r3, r1
 801ef04:	f103 0c01 	add.w	ip, r3, #1
 801ef08:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801ef0c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801ef10:	fa5f fc83 	uxtb.w	ip, r3
 801ef14:	1203      	asrs	r3, r0, #8
 801ef16:	1215      	asrs	r5, r2, #8
 801ef18:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ef1c:	fb13 f30c 	smulbb	r3, r3, ip
 801ef20:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ef24:	fb05 3501 	mla	r5, r5, r1, r3
 801ef28:	10c3      	asrs	r3, r0, #3
 801ef2a:	10d1      	asrs	r1, r2, #3
 801ef2c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ef30:	fb13 f30c 	smulbb	r3, r3, ip
 801ef34:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef38:	fb01 3104 	mla	r1, r1, r4, r3
 801ef3c:	00c3      	lsls	r3, r0, #3
 801ef3e:	00d2      	lsls	r2, r2, #3
 801ef40:	b2db      	uxtb	r3, r3
 801ef42:	b2d2      	uxtb	r2, r2
 801ef44:	fb13 f30c 	smulbb	r3, r3, ip
 801ef48:	b2ad      	uxth	r5, r5
 801ef4a:	fb02 3304 	mla	r3, r2, r4, r3
 801ef4e:	b29a      	uxth	r2, r3
 801ef50:	1c6b      	adds	r3, r5, #1
 801ef52:	b289      	uxth	r1, r1
 801ef54:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ef58:	1c53      	adds	r3, r2, #1
 801ef5a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef5e:	1c4a      	adds	r2, r1, #1
 801ef60:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ef64:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ef68:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ef6c:	0949      	lsrs	r1, r1, #5
 801ef6e:	432b      	orrs	r3, r5
 801ef70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ef74:	430b      	orrs	r3, r1
 801ef76:	803b      	strh	r3, [r7, #0]
 801ef78:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ef7a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801ef7c:	4413      	add	r3, r2
 801ef7e:	9329      	str	r3, [sp, #164]	; 0xa4
 801ef80:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ef82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ef84:	441a      	add	r2, r3
 801ef86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ef88:	922a      	str	r2, [sp, #168]	; 0xa8
 801ef8a:	3b01      	subs	r3, #1
 801ef8c:	3702      	adds	r7, #2
 801ef8e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ef90:	e689      	b.n	801eca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801ef92:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ef94:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801ef96:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 801ef98:	4433      	add	r3, r6
 801ef9a:	9329      	str	r3, [sp, #164]	; 0xa4
 801ef9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ef9e:	441c      	add	r4, r3
 801efa0:	9b08      	ldr	r3, [sp, #32]
 801efa2:	942a      	str	r4, [sp, #168]	; 0xa8
 801efa4:	3b01      	subs	r3, #1
 801efa6:	9308      	str	r3, [sp, #32]
 801efa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efaa:	3302      	adds	r3, #2
 801efac:	9309      	str	r3, [sp, #36]	; 0x24
 801efae:	e658      	b.n	801ec62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801efb0:	d028      	beq.n	801f004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801efb2:	9b08      	ldr	r3, [sp, #32]
 801efb4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801efb6:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801efb8:	3b01      	subs	r3, #1
 801efba:	fb00 5003 	mla	r0, r0, r3, r5
 801efbe:	1400      	asrs	r0, r0, #16
 801efc0:	f53f ae6c 	bmi.w	801ec9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801efc4:	3901      	subs	r1, #1
 801efc6:	4288      	cmp	r0, r1
 801efc8:	f6bf ae68 	bge.w	801ec9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801efcc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801efce:	982a      	ldr	r0, [sp, #168]	; 0xa8
 801efd0:	fb01 0303 	mla	r3, r1, r3, r0
 801efd4:	141b      	asrs	r3, r3, #16
 801efd6:	f53f ae61 	bmi.w	801ec9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801efda:	3a01      	subs	r2, #1
 801efdc:	4293      	cmp	r3, r2
 801efde:	f6bf ae5d 	bge.w	801ec9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801efe2:	9b08      	ldr	r3, [sp, #32]
 801efe4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801efe8:	9313      	str	r3, [sp, #76]	; 0x4c
 801efea:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801efee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eff0:	2b00      	cmp	r3, #0
 801eff2:	f300 8082 	bgt.w	801f0fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801eff6:	9b08      	ldr	r3, [sp, #32]
 801eff8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801effc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801effe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f002:	9309      	str	r3, [sp, #36]	; 0x24
 801f004:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f006:	2b00      	cmp	r3, #0
 801f008:	f340 81ef 	ble.w	801f3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801f00c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801f010:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f014:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801f018:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f01a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801f01e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801f022:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801f026:	eef0 6a48 	vmov.f32	s13, s16
 801f02a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f02e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f032:	ee37 8a48 	vsub.f32	s16, s14, s16
 801f036:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801f03a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801f03e:	eef0 6a68 	vmov.f32	s13, s17
 801f042:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f046:	ee18 2a10 	vmov	r2, s16
 801f04a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801f04e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f052:	ee18 2a90 	vmov	r2, s17
 801f056:	932b      	str	r3, [sp, #172]	; 0xac
 801f058:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f05a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f05e:	932c      	str	r3, [sp, #176]	; 0xb0
 801f060:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f062:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f064:	3b01      	subs	r3, #1
 801f066:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f06a:	9311      	str	r3, [sp, #68]	; 0x44
 801f06c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f06e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801f072:	bf08      	it	eq
 801f074:	4613      	moveq	r3, r2
 801f076:	9308      	str	r3, [sp, #32]
 801f078:	eef0 8a67 	vmov.f32	s17, s15
 801f07c:	eeb0 8a47 	vmov.f32	s16, s14
 801f080:	e5e1      	b.n	801ec46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801f082:	fb08 f505 	mul.w	r5, r8, r5
 801f086:	fb09 5303 	mla	r3, r9, r3, r5
 801f08a:	e661      	b.n	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 801f08c:	4681      	mov	r9, r0
 801f08e:	e688      	b.n	801eda2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801f090:	f1c1 0210 	rsb	r2, r1, #16
 801f094:	4341      	muls	r1, r0
 801f096:	fb09 1902 	mla	r9, r9, r2, r1
 801f09a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f09e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f0a2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f0a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f0aa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f0ae:	ea42 0909 	orr.w	r9, r2, r9
 801f0b2:	fa1f f289 	uxth.w	r2, r9
 801f0b6:	e71b      	b.n	801eef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 801f0b8:	803a      	strh	r2, [r7, #0]
 801f0ba:	e75d      	b.n	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801f0bc:	f115 0e01 	adds.w	lr, r5, #1
 801f0c0:	f53f af5a 	bmi.w	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801f0c4:	4572      	cmp	r2, lr
 801f0c6:	f6ff af57 	blt.w	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801f0ca:	f110 0e01 	adds.w	lr, r0, #1
 801f0ce:	f53f af53 	bmi.w	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801f0d2:	4573      	cmp	r3, lr
 801f0d4:	f6ff af50 	blt.w	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801f0d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f0da:	9502      	str	r5, [sp, #8]
 801f0dc:	b21b      	sxth	r3, r3
 801f0de:	b212      	sxth	r2, r2
 801f0e0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801f0e4:	9301      	str	r3, [sp, #4]
 801f0e6:	9200      	str	r2, [sp, #0]
 801f0e8:	e9cd c405 	strd	ip, r4, [sp, #20]
 801f0ec:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801f0f0:	4639      	mov	r1, r7
 801f0f2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f0f4:	f7ff fbd2 	bl	801e89c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801f0f8:	e73e      	b.n	801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801f0fa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f0fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f100:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f102:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f106:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f108:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f10c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f10e:	141f      	asrs	r7, r3, #16
 801f110:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f112:	141b      	asrs	r3, r3, #16
 801f114:	fb01 3707 	mla	r7, r1, r7, r3
 801f118:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f11a:	fa1f fc82 	uxth.w	ip, r2
 801f11e:	eb03 0a07 	add.w	sl, r3, r7
 801f122:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f126:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f12a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f12e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f132:	b29b      	uxth	r3, r3
 801f134:	2d00      	cmp	r5, #0
 801f136:	f000 813d 	beq.w	801f3b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801f13a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f13e:	940f      	str	r4, [sp, #60]	; 0x3c
 801f140:	eb0a 0b01 	add.w	fp, sl, r1
 801f144:	fa1f fa85 	uxth.w	sl, r5
 801f148:	fb0a fc0c 	mul.w	ip, sl, ip
 801f14c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f150:	fa1f fa8a 	uxth.w	sl, sl
 801f154:	eba0 000c 	sub.w	r0, r0, ip
 801f158:	eba3 030a 	sub.w	r3, r3, sl
 801f15c:	b280      	uxth	r0, r0
 801f15e:	fb08 f000 	mul.w	r0, r8, r0
 801f162:	b29b      	uxth	r3, r3
 801f164:	fb09 0303 	mla	r3, r9, r3, r0
 801f168:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f16a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f16e:	9410      	str	r4, [sp, #64]	; 0x40
 801f170:	fb0a 3300 	mla	r3, sl, r0, r3
 801f174:	fb0c 3304 	mla	r3, ip, r4, r3
 801f178:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f17c:	2b00      	cmp	r3, #0
 801f17e:	f000 810b 	beq.w	801f398 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801f182:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f184:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f186:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f18a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f18e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f192:	f000 8114 	beq.w	801f3be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 801f196:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f19a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f19e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f1a2:	fb09 f707 	mul.w	r7, r9, r7
 801f1a6:	fb0a fc0c 	mul.w	ip, sl, ip
 801f1aa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f1ae:	f107 0b20 	add.w	fp, r7, #32
 801f1b2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f1b6:	44cc      	add	ip, r9
 801f1b8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f1bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f1c0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f1c4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f1c8:	ea4c 0909 	orr.w	r9, ip, r9
 801f1cc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f1d0:	8847      	ldrh	r7, [r0, #2]
 801f1d2:	d019      	beq.n	801f208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 801f1d4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f1d8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f1dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f1e0:	fb08 f807 	mul.w	r8, r8, r7
 801f1e4:	fb0a fc0c 	mul.w	ip, sl, ip
 801f1e8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f1ec:	f108 0b20 	add.w	fp, r8, #32
 801f1f0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f1f4:	44bc      	add	ip, r7
 801f1f6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f1fa:	0a3f      	lsrs	r7, r7, #8
 801f1fc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f200:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f204:	ea4c 0707 	orr.w	r7, ip, r7
 801f208:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f20c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f210:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f214:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f218:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f21c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f220:	ea4c 0909 	orr.w	r9, ip, r9
 801f224:	ea4a 0707 	orr.w	r7, sl, r7
 801f228:	2d00      	cmp	r5, #0
 801f22a:	f000 80ca 	beq.w	801f3c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801f22e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f232:	3901      	subs	r1, #1
 801f234:	0049      	lsls	r1, r1, #1
 801f236:	3102      	adds	r1, #2
 801f238:	eb00 0c01 	add.w	ip, r0, r1
 801f23c:	5a41      	ldrh	r1, [r0, r1]
 801f23e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f240:	28ff      	cmp	r0, #255	; 0xff
 801f242:	d019      	beq.n	801f278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 801f244:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f246:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801f24a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f24e:	fb04 fa01 	mul.w	sl, r4, r1
 801f252:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f256:	fb08 f800 	mul.w	r8, r8, r0
 801f25a:	f10a 0020 	add.w	r0, sl, #32
 801f25e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f262:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f266:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f26a:	4441      	add	r1, r8
 801f26c:	0a00      	lsrs	r0, r0, #8
 801f26e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f272:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f276:	4301      	orrs	r1, r0
 801f278:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f27a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f27e:	2cff      	cmp	r4, #255	; 0xff
 801f280:	d01a      	beq.n	801f2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 801f282:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801f286:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f28a:	fb04 fa00 	mul.w	sl, r4, r0
 801f28e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f292:	fb08 f80c 	mul.w	r8, r8, ip
 801f296:	f10a 0c20 	add.w	ip, sl, #32
 801f29a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f29e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f2a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f2a6:	4440      	add	r0, r8
 801f2a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2ac:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f2b0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f2b4:	ea40 000c 	orr.w	r0, r0, ip
 801f2b8:	fb15 fc02 	smulbb	ip, r5, r2
 801f2bc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f2c0:	f1c5 0810 	rsb	r8, r5, #16
 801f2c4:	eba8 0802 	sub.w	r8, r8, r2
 801f2c8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f2cc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f2d0:	437a      	muls	r2, r7
 801f2d2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f2d6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f2da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f2de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f2e2:	fb09 2208 	mla	r2, r9, r8, r2
 801f2e6:	ea4a 0101 	orr.w	r1, sl, r1
 801f2ea:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f2ee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f2f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f2f6:	fb05 2201 	mla	r2, r5, r1, r2
 801f2fa:	ea4b 0000 	orr.w	r0, fp, r0
 801f2fe:	fb0c 2200 	mla	r2, ip, r0, r2
 801f302:	0d57      	lsrs	r7, r2, #21
 801f304:	0952      	lsrs	r2, r2, #5
 801f306:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f30a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f30e:	433a      	orrs	r2, r7
 801f310:	2bff      	cmp	r3, #255	; 0xff
 801f312:	b292      	uxth	r2, r2
 801f314:	d102      	bne.n	801f31c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801f316:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f318:	29ff      	cmp	r1, #255	; 0xff
 801f31a:	d063      	beq.n	801f3e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801f31c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801f31e:	f8be 1000 	ldrh.w	r1, [lr]
 801f322:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f324:	4343      	muls	r3, r0
 801f326:	1c58      	adds	r0, r3, #1
 801f328:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801f32c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f330:	1208      	asrs	r0, r1, #8
 801f332:	b2db      	uxtb	r3, r3
 801f334:	1215      	asrs	r5, r2, #8
 801f336:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f33a:	fb10 f003 	smulbb	r0, r0, r3
 801f33e:	10cf      	asrs	r7, r1, #3
 801f340:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f344:	00c9      	lsls	r1, r1, #3
 801f346:	fb05 0504 	mla	r5, r5, r4, r0
 801f34a:	b2c9      	uxtb	r1, r1
 801f34c:	10d0      	asrs	r0, r2, #3
 801f34e:	00d2      	lsls	r2, r2, #3
 801f350:	fb11 f103 	smulbb	r1, r1, r3
 801f354:	b2d2      	uxtb	r2, r2
 801f356:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f35a:	fb02 1204 	mla	r2, r2, r4, r1
 801f35e:	fb17 f703 	smulbb	r7, r7, r3
 801f362:	b2ad      	uxth	r5, r5
 801f364:	b292      	uxth	r2, r2
 801f366:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f36a:	fb00 7004 	mla	r0, r0, r4, r7
 801f36e:	1c6b      	adds	r3, r5, #1
 801f370:	1c57      	adds	r7, r2, #1
 801f372:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f376:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f37a:	b280      	uxth	r0, r0
 801f37c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f380:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f384:	433d      	orrs	r5, r7
 801f386:	1c47      	adds	r7, r0, #1
 801f388:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f38c:	097f      	lsrs	r7, r7, #5
 801f38e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f392:	433d      	orrs	r5, r7
 801f394:	f8ae 5000 	strh.w	r5, [lr]
 801f398:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f39a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801f39c:	4413      	add	r3, r2
 801f39e:	9329      	str	r3, [sp, #164]	; 0xa4
 801f3a0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f3a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f3a4:	441a      	add	r2, r3
 801f3a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f3a8:	922a      	str	r2, [sp, #168]	; 0xa8
 801f3aa:	3b01      	subs	r3, #1
 801f3ac:	f10e 0e02 	add.w	lr, lr, #2
 801f3b0:	9313      	str	r3, [sp, #76]	; 0x4c
 801f3b2:	e61c      	b.n	801efee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 801f3b4:	fb08 f000 	mul.w	r0, r8, r0
 801f3b8:	fb09 0303 	mla	r3, r9, r3, r0
 801f3bc:	e6dc      	b.n	801f178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801f3be:	46b9      	mov	r9, r7
 801f3c0:	e704      	b.n	801f1cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 801f3c2:	f1c2 0110 	rsb	r1, r2, #16
 801f3c6:	437a      	muls	r2, r7
 801f3c8:	fb09 2901 	mla	r9, r9, r1, r2
 801f3cc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f3d0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f3d4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f3d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f3dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f3e0:	4302      	orrs	r2, r0
 801f3e2:	e795      	b.n	801f310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 801f3e4:	f8ae 2000 	strh.w	r2, [lr]
 801f3e8:	e7d6      	b.n	801f398 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801f3ea:	b017      	add	sp, #92	; 0x5c
 801f3ec:	ecbd 8b08 	vpop	{d8-d11}
 801f3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3f8:	b085      	sub	sp, #20
 801f3fa:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801f3fe:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801f402:	9103      	str	r1, [sp, #12]
 801f404:	fb05 7106 	mla	r1, r5, r6, r7
 801f408:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801f40c:	2d00      	cmp	r5, #0
 801f40e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801f412:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801f416:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801f41a:	9401      	str	r4, [sp, #4]
 801f41c:	eb02 0901 	add.w	r9, r2, r1
 801f420:	f2c0 80c0 	blt.w	801f5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801f424:	45a8      	cmp	r8, r5
 801f426:	f340 80bd 	ble.w	801f5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801f42a:	2f00      	cmp	r7, #0
 801f42c:	f2c0 80b6 	blt.w	801f59c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801f430:	42be      	cmp	r6, r7
 801f432:	f340 80b3 	ble.w	801f59c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801f436:	f812 c001 	ldrb.w	ip, [r2, r1]
 801f43a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801f43e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f442:	d019      	beq.n	801f478 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 801f444:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801f448:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f44c:	435a      	muls	r2, r3
 801f44e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801f452:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801f456:	fb0c f403 	mul.w	r4, ip, r3
 801f45a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801f45e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801f462:	441a      	add	r2, r3
 801f464:	f104 0320 	add.w	r3, r4, #32
 801f468:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801f46c:	0a1b      	lsrs	r3, r3, #8
 801f46e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801f472:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f476:	4319      	orrs	r1, r3
 801f478:	b289      	uxth	r1, r1
 801f47a:	1c7b      	adds	r3, r7, #1
 801f47c:	f100 8097 	bmi.w	801f5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801f480:	429e      	cmp	r6, r3
 801f482:	f340 8094 	ble.w	801f5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801f486:	2800      	cmp	r0, #0
 801f488:	f000 8094 	beq.w	801f5b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 801f48c:	f899 4001 	ldrb.w	r4, [r9, #1]
 801f490:	9b01      	ldr	r3, [sp, #4]
 801f492:	2cff      	cmp	r4, #255	; 0xff
 801f494:	885b      	ldrh	r3, [r3, #2]
 801f496:	d01b      	beq.n	801f4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801f498:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801f49c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801f4a0:	fb0a f202 	mul.w	r2, sl, r2
 801f4a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4a8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801f4ac:	fb04 fa03 	mul.w	sl, r4, r3
 801f4b0:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801f4b4:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801f4b8:	441a      	add	r2, r3
 801f4ba:	f10a 0320 	add.w	r3, sl, #32
 801f4be:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801f4c2:	0a1b      	lsrs	r3, r3, #8
 801f4c4:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801f4c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4cc:	ea4b 0303 	orr.w	r3, fp, r3
 801f4d0:	b29b      	uxth	r3, r3
 801f4d2:	3501      	adds	r5, #1
 801f4d4:	d474      	bmi.n	801f5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801f4d6:	45a8      	cmp	r8, r5
 801f4d8:	dd72      	ble.n	801f5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801f4da:	f1be 0f00 	cmp.w	lr, #0
 801f4de:	f000 8110 	beq.w	801f702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 801f4e2:	2f00      	cmp	r7, #0
 801f4e4:	db69      	blt.n	801f5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801f4e6:	42be      	cmp	r6, r7
 801f4e8:	dd67      	ble.n	801f5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801f4ea:	f819 5006 	ldrb.w	r5, [r9, r6]
 801f4ee:	9a01      	ldr	r2, [sp, #4]
 801f4f0:	2dff      	cmp	r5, #255	; 0xff
 801f4f2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801f4f6:	d01c      	beq.n	801f532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801f4f8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801f4fc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801f500:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f504:	fb05 fa0b 	mul.w	sl, r5, fp
 801f508:	fb08 f802 	mul.w	r8, r8, r2
 801f50c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801f510:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801f514:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f518:	4490      	add	r8, r2
 801f51a:	f10a 0220 	add.w	r2, sl, #32
 801f51e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801f522:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f526:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801f52a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f52e:	ea4b 0b0a 	orr.w	fp, fp, sl
 801f532:	fa1f fb8b 	uxth.w	fp, fp
 801f536:	3701      	adds	r7, #1
 801f538:	d447      	bmi.n	801f5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801f53a:	42be      	cmp	r6, r7
 801f53c:	dd45      	ble.n	801f5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801f53e:	2800      	cmp	r0, #0
 801f540:	d046      	beq.n	801f5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801f542:	3601      	adds	r6, #1
 801f544:	9a01      	ldr	r2, [sp, #4]
 801f546:	f819 7006 	ldrb.w	r7, [r9, r6]
 801f54a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801f54e:	2fff      	cmp	r7, #255	; 0xff
 801f550:	d01a      	beq.n	801f588 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801f552:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801f556:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801f55a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f55e:	fb07 f902 	mul.w	r9, r7, r2
 801f562:	fb08 f806 	mul.w	r8, r8, r6
 801f566:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801f56a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801f56e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f572:	44b0      	add	r8, r6
 801f574:	f109 0620 	add.w	r6, r9, #32
 801f578:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801f57c:	0a36      	lsrs	r6, r6, #8
 801f57e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801f582:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f586:	4332      	orrs	r2, r6
 801f588:	b292      	uxth	r2, r2
 801f58a:	280f      	cmp	r0, #15
 801f58c:	d922      	bls.n	801f5d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801f58e:	4b61      	ldr	r3, [pc, #388]	; (801f714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801f590:	4a61      	ldr	r2, [pc, #388]	; (801f718 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801f592:	4862      	ldr	r0, [pc, #392]	; (801f71c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801f594:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801f598:	f003 fcb6 	bl	8022f08 <__assert_func>
 801f59c:	f04f 0c00 	mov.w	ip, #0
 801f5a0:	4661      	mov	r1, ip
 801f5a2:	e76a      	b.n	801f47a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801f5a4:	2400      	movs	r4, #0
 801f5a6:	46a4      	mov	ip, r4
 801f5a8:	4623      	mov	r3, r4
 801f5aa:	4621      	mov	r1, r4
 801f5ac:	e791      	b.n	801f4d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801f5ae:	2400      	movs	r4, #0
 801f5b0:	4623      	mov	r3, r4
 801f5b2:	e78e      	b.n	801f4d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801f5b4:	4604      	mov	r4, r0
 801f5b6:	4603      	mov	r3, r0
 801f5b8:	e78b      	b.n	801f4d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801f5ba:	2500      	movs	r5, #0
 801f5bc:	46ab      	mov	fp, r5
 801f5be:	e7ba      	b.n	801f536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801f5c0:	2700      	movs	r7, #0
 801f5c2:	463d      	mov	r5, r7
 801f5c4:	463a      	mov	r2, r7
 801f5c6:	46bb      	mov	fp, r7
 801f5c8:	e7df      	b.n	801f58a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801f5ca:	2700      	movs	r7, #0
 801f5cc:	463a      	mov	r2, r7
 801f5ce:	e7dc      	b.n	801f58a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801f5d0:	4607      	mov	r7, r0
 801f5d2:	4602      	mov	r2, r0
 801f5d4:	f1be 0f0f 	cmp.w	lr, #15
 801f5d8:	d8d9      	bhi.n	801f58e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801f5da:	b286      	uxth	r6, r0
 801f5dc:	fa1f f98e 	uxth.w	r9, lr
 801f5e0:	fb06 f809 	mul.w	r8, r6, r9
 801f5e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f5e8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801f5ec:	0136      	lsls	r6, r6, #4
 801f5ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f5f2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f5f6:	9601      	str	r6, [sp, #4]
 801f5f8:	ea4a 0101 	orr.w	r1, sl, r1
 801f5fc:	fa1f f689 	uxth.w	r6, r9
 801f600:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801f604:	fb10 f90e 	smulbb	r9, r0, lr
 801f608:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801f60c:	9602      	str	r6, [sp, #8]
 801f60e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f612:	460e      	mov	r6, r1
 801f614:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f618:	f1ce 0110 	rsb	r1, lr, #16
 801f61c:	1a09      	subs	r1, r1, r0
 801f61e:	ea4a 0303 	orr.w	r3, sl, r3
 801f622:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801f626:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f62a:	4343      	muls	r3, r0
 801f62c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801f630:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f634:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f638:	fb01 3106 	mla	r1, r1, r6, r3
 801f63c:	ea4a 0202 	orr.w	r2, sl, r2
 801f640:	fb09 1302 	mla	r3, r9, r2, r1
 801f644:	9a03      	ldr	r2, [sp, #12]
 801f646:	9802      	ldr	r0, [sp, #8]
 801f648:	8811      	ldrh	r1, [r2, #0]
 801f64a:	9a01      	ldr	r2, [sp, #4]
 801f64c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f650:	1a12      	subs	r2, r2, r0
 801f652:	9801      	ldr	r0, [sp, #4]
 801f654:	eba0 0608 	sub.w	r6, r0, r8
 801f658:	b2b6      	uxth	r6, r6
 801f65a:	b292      	uxth	r2, r2
 801f65c:	4374      	muls	r4, r6
 801f65e:	fb0c 4402 	mla	r4, ip, r2, r4
 801f662:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801f666:	9a02      	ldr	r2, [sp, #8]
 801f668:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f66c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801f670:	fb02 4505 	mla	r5, r2, r5, r4
 801f674:	ea4a 0b0b 	orr.w	fp, sl, fp
 801f678:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f67c:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801f680:	fb08 5707 	mla	r7, r8, r7, r5
 801f684:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801f688:	120a      	asrs	r2, r1, #8
 801f68a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f68e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801f692:	b2ff      	uxtb	r7, r7
 801f694:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f698:	10c8      	asrs	r0, r1, #3
 801f69a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f69e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f6a2:	00c9      	lsls	r1, r1, #3
 801f6a4:	437a      	muls	r2, r7
 801f6a6:	ea43 0e0e 	orr.w	lr, r3, lr
 801f6aa:	b2c9      	uxtb	r1, r1
 801f6ac:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f6b0:	fa1f f38e 	uxth.w	r3, lr
 801f6b4:	4378      	muls	r0, r7
 801f6b6:	434f      	muls	r7, r1
 801f6b8:	1c51      	adds	r1, r2, #1
 801f6ba:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f6be:	121a      	asrs	r2, r3, #8
 801f6c0:	f022 0207 	bic.w	r2, r2, #7
 801f6c4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801f6c8:	1c41      	adds	r1, r0, #1
 801f6ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f6ce:	10d9      	asrs	r1, r3, #3
 801f6d0:	f021 0103 	bic.w	r1, r1, #3
 801f6d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f6d8:	0212      	lsls	r2, r2, #8
 801f6da:	00c9      	lsls	r1, r1, #3
 801f6dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f6e0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f6e4:	430a      	orrs	r2, r1
 801f6e6:	1c79      	adds	r1, r7, #1
 801f6e8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801f6ec:	00db      	lsls	r3, r3, #3
 801f6ee:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801f6f2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801f6f6:	4313      	orrs	r3, r2
 801f6f8:	9a03      	ldr	r2, [sp, #12]
 801f6fa:	8013      	strh	r3, [r2, #0]
 801f6fc:	b005      	add	sp, #20
 801f6fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f702:	280f      	cmp	r0, #15
 801f704:	f63f af43 	bhi.w	801f58e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801f708:	4677      	mov	r7, lr
 801f70a:	4675      	mov	r5, lr
 801f70c:	4672      	mov	r2, lr
 801f70e:	46f3      	mov	fp, lr
 801f710:	e763      	b.n	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 801f712:	bf00      	nop
 801f714:	0802926a 	.word	0x0802926a
 801f718:	0802983a 	.word	0x0802983a
 801f71c:	080292ee 	.word	0x080292ee

0801f720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f724:	ed2d 8b08 	vpush	{d8-d11}
 801f728:	b093      	sub	sp, #76	; 0x4c
 801f72a:	eeb0 aa40 	vmov.f32	s20, s0
 801f72e:	9210      	str	r2, [sp, #64]	; 0x40
 801f730:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f732:	910e      	str	r1, [sp, #56]	; 0x38
 801f734:	9306      	str	r3, [sp, #24]
 801f736:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f73a:	9011      	str	r0, [sp, #68]	; 0x44
 801f73c:	6850      	ldr	r0, [r2, #4]
 801f73e:	6812      	ldr	r2, [r2, #0]
 801f740:	fb00 1303 	mla	r3, r0, r3, r1
 801f744:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f748:	9307      	str	r3, [sp, #28]
 801f74a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f74c:	681b      	ldr	r3, [r3, #0]
 801f74e:	9308      	str	r3, [sp, #32]
 801f750:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f752:	685b      	ldr	r3, [r3, #4]
 801f754:	9309      	str	r3, [sp, #36]	; 0x24
 801f756:	eef0 9a60 	vmov.f32	s19, s1
 801f75a:	eeb0 9a41 	vmov.f32	s18, s2
 801f75e:	eeb0 8a62 	vmov.f32	s16, s5
 801f762:	eef0 8a43 	vmov.f32	s17, s6
 801f766:	eef0 ba44 	vmov.f32	s23, s8
 801f76a:	eeb0 ba64 	vmov.f32	s22, s9
 801f76e:	eef0 aa45 	vmov.f32	s21, s10
 801f772:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f774:	2b00      	cmp	r3, #0
 801f776:	dc03      	bgt.n	801f780 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801f778:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f77a:	2b00      	cmp	r3, #0
 801f77c:	f340 83b4 	ble.w	801fee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801f780:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f782:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f786:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f78a:	1e48      	subs	r0, r1, #1
 801f78c:	1e55      	subs	r5, r2, #1
 801f78e:	9b06      	ldr	r3, [sp, #24]
 801f790:	2b00      	cmp	r3, #0
 801f792:	f340 8163 	ble.w	801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801f796:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801f798:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f79a:	1436      	asrs	r6, r6, #16
 801f79c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f7a0:	d406      	bmi.n	801f7b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7a2:	4286      	cmp	r6, r0
 801f7a4:	da04      	bge.n	801f7b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7a6:	2b00      	cmp	r3, #0
 801f7a8:	db02      	blt.n	801f7b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7aa:	42ab      	cmp	r3, r5
 801f7ac:	f2c0 8157 	blt.w	801fa5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f7b0:	3601      	adds	r6, #1
 801f7b2:	f100 8144 	bmi.w	801fa3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f7b6:	42b1      	cmp	r1, r6
 801f7b8:	f2c0 8141 	blt.w	801fa3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f7bc:	3301      	adds	r3, #1
 801f7be:	f100 813e 	bmi.w	801fa3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f7c2:	429a      	cmp	r2, r3
 801f7c4:	f2c0 813b 	blt.w	801fa3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f7c8:	9b06      	ldr	r3, [sp, #24]
 801f7ca:	9f07      	ldr	r7, [sp, #28]
 801f7cc:	930f      	str	r3, [sp, #60]	; 0x3c
 801f7ce:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801f7d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f7d4:	2b00      	cmp	r3, #0
 801f7d6:	f340 8164 	ble.w	801faa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801f7da:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f7dc:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801f7de:	1418      	asrs	r0, r3, #16
 801f7e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f7e2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f7e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f7e8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f7ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f7ee:	142d      	asrs	r5, r5, #16
 801f7f0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f7f4:	f100 81ee 	bmi.w	801fbd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f7f8:	f102 3eff 	add.w	lr, r2, #4294967295
 801f7fc:	4575      	cmp	r5, lr
 801f7fe:	f280 81e9 	bge.w	801fbd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f802:	2800      	cmp	r0, #0
 801f804:	f2c0 81e6 	blt.w	801fbd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f808:	f103 3eff 	add.w	lr, r3, #4294967295
 801f80c:	4570      	cmp	r0, lr
 801f80e:	f280 81e1 	bge.w	801fbd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f812:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f814:	b212      	sxth	r2, r2
 801f816:	fb00 5002 	mla	r0, r0, r2, r5
 801f81a:	fa1f fe81 	uxth.w	lr, r1
 801f81e:	eb03 0a00 	add.w	sl, r3, r0
 801f822:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f826:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f82a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f82e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801f832:	b29b      	uxth	r3, r3
 801f834:	f1bc 0f00 	cmp.w	ip, #0
 801f838:	f000 8179 	beq.w	801fb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801f83c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f840:	940a      	str	r4, [sp, #40]	; 0x28
 801f842:	eb0a 0b02 	add.w	fp, sl, r2
 801f846:	fa1f fa8c 	uxth.w	sl, ip
 801f84a:	fb0a fe0e 	mul.w	lr, sl, lr
 801f84e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f852:	fa1f fa8a 	uxth.w	sl, sl
 801f856:	eba5 050e 	sub.w	r5, r5, lr
 801f85a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f85e:	940b      	str	r4, [sp, #44]	; 0x2c
 801f860:	eba3 030a 	sub.w	r3, r3, sl
 801f864:	b2ad      	uxth	r5, r5
 801f866:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f868:	b29b      	uxth	r3, r3
 801f86a:	fb08 f505 	mul.w	r5, r8, r5
 801f86e:	fb09 5303 	mla	r3, r9, r3, r5
 801f872:	fb0a 3304 	mla	r3, sl, r4, r3
 801f876:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f878:	fb0e 3304 	mla	r3, lr, r4, r3
 801f87c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f880:	2b00      	cmp	r3, #0
 801f882:	f000 80cf 	beq.w	801fa24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801f886:	9c08      	ldr	r4, [sp, #32]
 801f888:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f88c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f890:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f894:	f000 8150 	beq.w	801fb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801f898:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801f89c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f8a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f8a4:	fb09 f000 	mul.w	r0, r9, r0
 801f8a8:	fb0a fe0e 	mul.w	lr, sl, lr
 801f8ac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f8b0:	f100 0b20 	add.w	fp, r0, #32
 801f8b4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801f8b8:	44ce      	add	lr, r9
 801f8ba:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f8be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f8c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f8c6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f8ca:	ea4e 0909 	orr.w	r9, lr, r9
 801f8ce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f8d2:	8868      	ldrh	r0, [r5, #2]
 801f8d4:	d019      	beq.n	801f90a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f8d6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801f8da:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f8de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f8e2:	fb08 f800 	mul.w	r8, r8, r0
 801f8e6:	fb0a fe0e 	mul.w	lr, sl, lr
 801f8ea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f8ee:	f108 0b20 	add.w	fp, r8, #32
 801f8f2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801f8f6:	4486      	add	lr, r0
 801f8f8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f8fc:	0a00      	lsrs	r0, r0, #8
 801f8fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f902:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f906:	ea4e 0000 	orr.w	r0, lr, r0
 801f90a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f90e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f912:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f916:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f91a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f91e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f922:	ea4e 0909 	orr.w	r9, lr, r9
 801f926:	ea4a 0000 	orr.w	r0, sl, r0
 801f92a:	f1bc 0f00 	cmp.w	ip, #0
 801f92e:	f000 8105 	beq.w	801fb3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801f932:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801f936:	3a01      	subs	r2, #1
 801f938:	0052      	lsls	r2, r2, #1
 801f93a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f93c:	3202      	adds	r2, #2
 801f93e:	2cff      	cmp	r4, #255	; 0xff
 801f940:	eb05 0e02 	add.w	lr, r5, r2
 801f944:	5aaa      	ldrh	r2, [r5, r2]
 801f946:	d018      	beq.n	801f97a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801f948:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801f94c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f950:	fb04 fa02 	mul.w	sl, r4, r2
 801f954:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f958:	fb08 f805 	mul.w	r8, r8, r5
 801f95c:	f10a 0520 	add.w	r5, sl, #32
 801f960:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f964:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f968:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f96c:	4442      	add	r2, r8
 801f96e:	0a2d      	lsrs	r5, r5, #8
 801f970:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f974:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f978:	432a      	orrs	r2, r5
 801f97a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f97c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f980:	2cff      	cmp	r4, #255	; 0xff
 801f982:	d01a      	beq.n	801f9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801f984:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801f988:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f98c:	fb04 fa05 	mul.w	sl, r4, r5
 801f990:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f994:	fb08 f80e 	mul.w	r8, r8, lr
 801f998:	f10a 0e20 	add.w	lr, sl, #32
 801f99c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f9a0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f9a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f9a8:	4445      	add	r5, r8
 801f9aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f9ae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f9b2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801f9b6:	ea45 050e 	orr.w	r5, r5, lr
 801f9ba:	fb1c fe01 	smulbb	lr, ip, r1
 801f9be:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f9c2:	f1cc 0810 	rsb	r8, ip, #16
 801f9c6:	eba8 0801 	sub.w	r8, r8, r1
 801f9ca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f9ce:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f9d2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f9d6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f9da:	4341      	muls	r1, r0
 801f9dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f9e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f9e4:	ea4a 0202 	orr.w	r2, sl, r2
 801f9e8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f9ec:	fb09 1108 	mla	r1, r9, r8, r1
 801f9f0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f9f4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f9f8:	fb0c 1102 	mla	r1, ip, r2, r1
 801f9fc:	ea4b 0505 	orr.w	r5, fp, r5
 801fa00:	fb0e 1e05 	mla	lr, lr, r5, r1
 801fa04:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801fa08:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801fa0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fa10:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fa14:	ea42 0e0e 	orr.w	lr, r2, lr
 801fa18:	fa1f f28e 	uxth.w	r2, lr
 801fa1c:	2bff      	cmp	r3, #255	; 0xff
 801fa1e:	f040 80a1 	bne.w	801fb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 801fa22:	803a      	strh	r2, [r7, #0]
 801fa24:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fa26:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fa28:	4413      	add	r3, r2
 801fa2a:	9325      	str	r3, [sp, #148]	; 0x94
 801fa2c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fa2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa30:	441a      	add	r2, r3
 801fa32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fa34:	9226      	str	r2, [sp, #152]	; 0x98
 801fa36:	3b01      	subs	r3, #1
 801fa38:	3702      	adds	r7, #2
 801fa3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa3c:	e6c9      	b.n	801f7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801fa3e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fa40:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801fa42:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801fa44:	4433      	add	r3, r6
 801fa46:	9325      	str	r3, [sp, #148]	; 0x94
 801fa48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa4a:	441c      	add	r4, r3
 801fa4c:	9b06      	ldr	r3, [sp, #24]
 801fa4e:	9426      	str	r4, [sp, #152]	; 0x98
 801fa50:	3b01      	subs	r3, #1
 801fa52:	9306      	str	r3, [sp, #24]
 801fa54:	9b07      	ldr	r3, [sp, #28]
 801fa56:	3302      	adds	r3, #2
 801fa58:	9307      	str	r3, [sp, #28]
 801fa5a:	e698      	b.n	801f78e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa5c:	d028      	beq.n	801fab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801fa5e:	9b06      	ldr	r3, [sp, #24]
 801fa60:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801fa62:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801fa64:	3b01      	subs	r3, #1
 801fa66:	fb00 5003 	mla	r0, r0, r3, r5
 801fa6a:	1400      	asrs	r0, r0, #16
 801fa6c:	f53f aeac 	bmi.w	801f7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fa70:	3901      	subs	r1, #1
 801fa72:	4288      	cmp	r0, r1
 801fa74:	f6bf aea8 	bge.w	801f7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fa78:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fa7a:	9826      	ldr	r0, [sp, #152]	; 0x98
 801fa7c:	fb01 0303 	mla	r3, r1, r3, r0
 801fa80:	141b      	asrs	r3, r3, #16
 801fa82:	f53f aea1 	bmi.w	801f7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fa86:	3a01      	subs	r2, #1
 801fa88:	4293      	cmp	r3, r2
 801fa8a:	f6bf ae9d 	bge.w	801f7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fa8e:	9b06      	ldr	r3, [sp, #24]
 801fa90:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801fa94:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa96:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801fa9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fa9c:	2b00      	cmp	r3, #0
 801fa9e:	f300 80b6 	bgt.w	801fc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801faa2:	9b06      	ldr	r3, [sp, #24]
 801faa4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801faa8:	9b07      	ldr	r3, [sp, #28]
 801faaa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801faae:	9307      	str	r3, [sp, #28]
 801fab0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fab2:	2b00      	cmp	r3, #0
 801fab4:	f340 8218 	ble.w	801fee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801fab8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801fabc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fac0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801fac4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fac6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801faca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801face:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801fad2:	eef0 6a48 	vmov.f32	s13, s16
 801fad6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801fada:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fade:	ee37 8a48 	vsub.f32	s16, s14, s16
 801fae2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801fae6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801faea:	eef0 6a68 	vmov.f32	s13, s17
 801faee:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801faf2:	ee18 2a10 	vmov	r2, s16
 801faf6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801fafa:	fb92 f3f3 	sdiv	r3, r2, r3
 801fafe:	ee18 2a90 	vmov	r2, s17
 801fb02:	9327      	str	r3, [sp, #156]	; 0x9c
 801fb04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb06:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb0a:	9328      	str	r3, [sp, #160]	; 0xa0
 801fb0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fb0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fb10:	3b01      	subs	r3, #1
 801fb12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb16:	930e      	str	r3, [sp, #56]	; 0x38
 801fb18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb1a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801fb1e:	bf08      	it	eq
 801fb20:	4613      	moveq	r3, r2
 801fb22:	9306      	str	r3, [sp, #24]
 801fb24:	eef0 8a67 	vmov.f32	s17, s15
 801fb28:	eeb0 8a47 	vmov.f32	s16, s14
 801fb2c:	e621      	b.n	801f772 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fb2e:	fb08 f505 	mul.w	r5, r8, r5
 801fb32:	fb09 5303 	mla	r3, r9, r3, r5
 801fb36:	e6a1      	b.n	801f87c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801fb38:	4681      	mov	r9, r0
 801fb3a:	e6c8      	b.n	801f8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fb3c:	f1c1 0210 	rsb	r2, r1, #16
 801fb40:	4341      	muls	r1, r0
 801fb42:	fb09 1902 	mla	r9, r9, r2, r1
 801fb46:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fb4a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801fb4e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fb52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb56:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801fb5a:	ea42 0909 	orr.w	r9, r2, r9
 801fb5e:	fa1f f289 	uxth.w	r2, r9
 801fb62:	e75b      	b.n	801fa1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801fb64:	f8b7 c000 	ldrh.w	ip, [r7]
 801fb68:	43db      	mvns	r3, r3
 801fb6a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801fb6e:	fa5f fe83 	uxtb.w	lr, r3
 801fb72:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fb76:	fb00 f00e 	mul.w	r0, r0, lr
 801fb7a:	1c41      	adds	r1, r0, #1
 801fb7c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fb80:	1211      	asrs	r1, r2, #8
 801fb82:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801fb86:	f021 0107 	bic.w	r1, r1, #7
 801fb8a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fb8e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fb92:	48d8      	ldr	r0, [pc, #864]	; (801fef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 801fb94:	fb05 f50e 	mul.w	r5, r5, lr
 801fb98:	b2c9      	uxtb	r1, r1
 801fb9a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801fb9e:	1c69      	adds	r1, r5, #1
 801fba0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801fba4:	10d1      	asrs	r1, r2, #3
 801fba6:	f021 0103 	bic.w	r1, r1, #3
 801fbaa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801fbae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801fbb2:	b2db      	uxtb	r3, r3
 801fbb4:	00c9      	lsls	r1, r1, #3
 801fbb6:	fb03 f30e 	mul.w	r3, r3, lr
 801fbba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbbe:	4301      	orrs	r1, r0
 801fbc0:	1c58      	adds	r0, r3, #1
 801fbc2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801fbc6:	00d2      	lsls	r2, r2, #3
 801fbc8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fbcc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fbd0:	430a      	orrs	r2, r1
 801fbd2:	e726      	b.n	801fa22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fbd4:	f115 0e01 	adds.w	lr, r5, #1
 801fbd8:	f53f af24 	bmi.w	801fa24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801fbdc:	4572      	cmp	r2, lr
 801fbde:	f6ff af21 	blt.w	801fa24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801fbe2:	f110 0e01 	adds.w	lr, r0, #1
 801fbe6:	f53f af1d 	bmi.w	801fa24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801fbea:	4573      	cmp	r3, lr
 801fbec:	f6ff af1a 	blt.w	801fa24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801fbf0:	b21b      	sxth	r3, r3
 801fbf2:	b212      	sxth	r2, r2
 801fbf4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801fbf8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801fbfc:	9301      	str	r3, [sp, #4]
 801fbfe:	9200      	str	r2, [sp, #0]
 801fc00:	4639      	mov	r1, r7
 801fc02:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801fc06:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fc08:	f7ff fbf4 	bl	801f3f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801fc0c:	e70a      	b.n	801fa24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801fc0e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fc14:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc16:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801fc1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fc1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc22:	141f      	asrs	r7, r3, #16
 801fc24:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc26:	141b      	asrs	r3, r3, #16
 801fc28:	fb01 3707 	mla	r7, r1, r7, r3
 801fc2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc2e:	fa1f fc82 	uxth.w	ip, r2
 801fc32:	eb03 0a07 	add.w	sl, r3, r7
 801fc36:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801fc3a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801fc3e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801fc42:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801fc46:	b29b      	uxth	r3, r3
 801fc48:	2d00      	cmp	r5, #0
 801fc4a:	f000 80fe 	beq.w	801fe4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801fc4e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801fc52:	940c      	str	r4, [sp, #48]	; 0x30
 801fc54:	eb0a 0b01 	add.w	fp, sl, r1
 801fc58:	fa1f fa85 	uxth.w	sl, r5
 801fc5c:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc60:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801fc64:	fa1f fa8a 	uxth.w	sl, sl
 801fc68:	eba0 000c 	sub.w	r0, r0, ip
 801fc6c:	eba3 030a 	sub.w	r3, r3, sl
 801fc70:	b280      	uxth	r0, r0
 801fc72:	fb08 f000 	mul.w	r0, r8, r0
 801fc76:	b29b      	uxth	r3, r3
 801fc78:	fb09 0303 	mla	r3, r9, r3, r0
 801fc7c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fc7e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801fc82:	940d      	str	r4, [sp, #52]	; 0x34
 801fc84:	fb0a 3300 	mla	r3, sl, r0, r3
 801fc88:	fb0c 3304 	mla	r3, ip, r4, r3
 801fc8c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc90:	2b00      	cmp	r3, #0
 801fc92:	f000 80cc 	beq.w	801fe2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 801fc96:	9808      	ldr	r0, [sp, #32]
 801fc98:	9c08      	ldr	r4, [sp, #32]
 801fc9a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fc9e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801fca2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801fca6:	f000 80d5 	beq.w	801fe54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801fcaa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801fcae:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801fcb2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fcb6:	fb09 f707 	mul.w	r7, r9, r7
 801fcba:	fb0a fc0c 	mul.w	ip, sl, ip
 801fcbe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801fcc2:	f107 0b20 	add.w	fp, r7, #32
 801fcc6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801fcca:	44cc      	add	ip, r9
 801fccc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801fcd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fcd4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fcd8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fcdc:	ea4c 0909 	orr.w	r9, ip, r9
 801fce0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801fce4:	8847      	ldrh	r7, [r0, #2]
 801fce6:	d019      	beq.n	801fd1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801fce8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801fcec:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801fcf0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fcf4:	fb08 f807 	mul.w	r8, r8, r7
 801fcf8:	fb0a fc0c 	mul.w	ip, sl, ip
 801fcfc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801fd00:	f108 0b20 	add.w	fp, r8, #32
 801fd04:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801fd08:	44bc      	add	ip, r7
 801fd0a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801fd0e:	0a3f      	lsrs	r7, r7, #8
 801fd10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fd14:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fd18:	ea4c 0707 	orr.w	r7, ip, r7
 801fd1c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801fd20:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801fd24:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fd28:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801fd2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fd30:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fd34:	ea4c 0909 	orr.w	r9, ip, r9
 801fd38:	ea4a 0707 	orr.w	r7, sl, r7
 801fd3c:	2d00      	cmp	r5, #0
 801fd3e:	f000 808b 	beq.w	801fe58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 801fd42:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801fd46:	3901      	subs	r1, #1
 801fd48:	0049      	lsls	r1, r1, #1
 801fd4a:	3102      	adds	r1, #2
 801fd4c:	eb00 0c01 	add.w	ip, r0, r1
 801fd50:	5a41      	ldrh	r1, [r0, r1]
 801fd52:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fd54:	28ff      	cmp	r0, #255	; 0xff
 801fd56:	d019      	beq.n	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801fd58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fd5a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801fd5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd62:	fb04 fa01 	mul.w	sl, r4, r1
 801fd66:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fd6a:	fb08 f800 	mul.w	r8, r8, r0
 801fd6e:	f10a 0020 	add.w	r0, sl, #32
 801fd72:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801fd76:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801fd7a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fd7e:	4441      	add	r1, r8
 801fd80:	0a00      	lsrs	r0, r0, #8
 801fd82:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801fd86:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd8a:	4301      	orrs	r1, r0
 801fd8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd8e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801fd92:	2cff      	cmp	r4, #255	; 0xff
 801fd94:	d01a      	beq.n	801fdcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801fd96:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801fd9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd9e:	fb04 fa00 	mul.w	sl, r4, r0
 801fda2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fda6:	fb08 f80c 	mul.w	r8, r8, ip
 801fdaa:	f10a 0c20 	add.w	ip, sl, #32
 801fdae:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801fdb2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801fdb6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fdba:	4440      	add	r0, r8
 801fdbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdc0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801fdc4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fdc8:	ea40 000c 	orr.w	r0, r0, ip
 801fdcc:	fb15 fc02 	smulbb	ip, r5, r2
 801fdd0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801fdd4:	f1c5 0810 	rsb	r8, r5, #16
 801fdd8:	eba8 0802 	sub.w	r8, r8, r2
 801fddc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801fde0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801fde4:	437a      	muls	r2, r7
 801fde6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fdea:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801fdee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fdf2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fdf6:	fb09 2208 	mla	r2, r9, r8, r2
 801fdfa:	ea4a 0101 	orr.w	r1, sl, r1
 801fdfe:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801fe02:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fe06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fe0a:	fb05 2201 	mla	r2, r5, r1, r2
 801fe0e:	ea4b 0000 	orr.w	r0, fp, r0
 801fe12:	fb0c 2200 	mla	r2, ip, r0, r2
 801fe16:	0d57      	lsrs	r7, r2, #21
 801fe18:	0952      	lsrs	r2, r2, #5
 801fe1a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fe1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fe22:	433a      	orrs	r2, r7
 801fe24:	2bff      	cmp	r3, #255	; 0xff
 801fe26:	b292      	uxth	r2, r2
 801fe28:	d127      	bne.n	801fe7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801fe2a:	f8ae 2000 	strh.w	r2, [lr]
 801fe2e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fe30:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fe32:	4413      	add	r3, r2
 801fe34:	9325      	str	r3, [sp, #148]	; 0x94
 801fe36:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fe38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fe3a:	441a      	add	r2, r3
 801fe3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fe3e:	9226      	str	r2, [sp, #152]	; 0x98
 801fe40:	3b01      	subs	r3, #1
 801fe42:	f10e 0e02 	add.w	lr, lr, #2
 801fe46:	930f      	str	r3, [sp, #60]	; 0x3c
 801fe48:	e627      	b.n	801fa9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801fe4a:	fb08 f000 	mul.w	r0, r8, r0
 801fe4e:	fb09 0303 	mla	r3, r9, r3, r0
 801fe52:	e71b      	b.n	801fc8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801fe54:	46b9      	mov	r9, r7
 801fe56:	e743      	b.n	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801fe58:	f1c2 0110 	rsb	r1, r2, #16
 801fe5c:	437a      	muls	r2, r7
 801fe5e:	fb09 2901 	mla	r9, r9, r1, r2
 801fe62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fe66:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801fe6a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801fe6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fe72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fe76:	4302      	orrs	r2, r0
 801fe78:	e7d4      	b.n	801fe24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801fe7a:	f8be 7000 	ldrh.w	r7, [lr]
 801fe7e:	4c1d      	ldr	r4, [pc, #116]	; (801fef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 801fe80:	43db      	mvns	r3, r3
 801fe82:	1238      	asrs	r0, r7, #8
 801fe84:	fa5f fc83 	uxtb.w	ip, r3
 801fe88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe8c:	10fd      	asrs	r5, r7, #3
 801fe8e:	fb00 f00c 	mul.w	r0, r0, ip
 801fe92:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fe96:	fb05 f10c 	mul.w	r1, r5, ip
 801fe9a:	1c45      	adds	r5, r0, #1
 801fe9c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801fea0:	1215      	asrs	r5, r2, #8
 801fea2:	f025 0507 	bic.w	r5, r5, #7
 801fea6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801feaa:	1c4d      	adds	r5, r1, #1
 801feac:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801feb0:	10d1      	asrs	r1, r2, #3
 801feb2:	f021 0103 	bic.w	r1, r1, #3
 801feb6:	00fb      	lsls	r3, r7, #3
 801feb8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801febc:	b2db      	uxtb	r3, r3
 801febe:	b2c0      	uxtb	r0, r0
 801fec0:	00c9      	lsls	r1, r1, #3
 801fec2:	fb03 f30c 	mul.w	r3, r3, ip
 801fec6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801feca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801fece:	4308      	orrs	r0, r1
 801fed0:	1c59      	adds	r1, r3, #1
 801fed2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fed6:	00d2      	lsls	r2, r2, #3
 801fed8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fedc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801fee0:	4318      	orrs	r0, r3
 801fee2:	f8ae 0000 	strh.w	r0, [lr]
 801fee6:	e7a2      	b.n	801fe2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 801fee8:	b013      	add	sp, #76	; 0x4c
 801feea:	ecbd 8b08 	vpop	{d8-d11}
 801feee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fef2:	bf00      	nop
 801fef4:	fffff800 	.word	0xfffff800

0801fef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801fef8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fefc:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801ff00:	fb0c 4e03 	mla	lr, ip, r3, r4
 801ff04:	f1bc 0f00 	cmp.w	ip, #0
 801ff08:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801ff0c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801ff10:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801ff14:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801ff18:	8808      	ldrh	r0, [r1, #0]
 801ff1a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801ff1e:	db2f      	blt.n	801ff80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801ff20:	45e2      	cmp	sl, ip
 801ff22:	dd2d      	ble.n	801ff80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801ff24:	2c00      	cmp	r4, #0
 801ff26:	db29      	blt.n	801ff7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801ff28:	42a3      	cmp	r3, r4
 801ff2a:	dd27      	ble.n	801ff7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801ff2c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801ff30:	1c62      	adds	r2, r4, #1
 801ff32:	d428      	bmi.n	801ff86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801ff34:	4293      	cmp	r3, r2
 801ff36:	dd26      	ble.n	801ff86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801ff38:	b32f      	cbz	r7, 801ff86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801ff3a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801ff3e:	f11c 0c01 	adds.w	ip, ip, #1
 801ff42:	d424      	bmi.n	801ff8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801ff44:	45e2      	cmp	sl, ip
 801ff46:	dd22      	ble.n	801ff8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801ff48:	2e00      	cmp	r6, #0
 801ff4a:	f000 809d 	beq.w	8020088 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 801ff4e:	2c00      	cmp	r4, #0
 801ff50:	db1b      	blt.n	801ff8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801ff52:	42a3      	cmp	r3, r4
 801ff54:	dd19      	ble.n	801ff8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801ff56:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801ff5a:	3401      	adds	r4, #1
 801ff5c:	d41a      	bmi.n	801ff94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801ff5e:	42a3      	cmp	r3, r4
 801ff60:	dd18      	ble.n	801ff94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801ff62:	b1cf      	cbz	r7, 801ff98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801ff64:	3301      	adds	r3, #1
 801ff66:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801ff6a:	2f0f      	cmp	r7, #15
 801ff6c:	d915      	bls.n	801ff9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801ff6e:	4b49      	ldr	r3, [pc, #292]	; (8020094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801ff70:	4a49      	ldr	r2, [pc, #292]	; (8020098 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801ff72:	484a      	ldr	r0, [pc, #296]	; (802009c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801ff74:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801ff78:	f002 ffc6 	bl	8022f08 <__assert_func>
 801ff7c:	4681      	mov	r9, r0
 801ff7e:	e7d7      	b.n	801ff30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801ff80:	4686      	mov	lr, r0
 801ff82:	4681      	mov	r9, r0
 801ff84:	e7db      	b.n	801ff3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801ff86:	4686      	mov	lr, r0
 801ff88:	e7d9      	b.n	801ff3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801ff8a:	4684      	mov	ip, r0
 801ff8c:	e7e5      	b.n	801ff5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801ff8e:	4603      	mov	r3, r0
 801ff90:	4684      	mov	ip, r0
 801ff92:	e7ea      	b.n	801ff6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801ff94:	4603      	mov	r3, r0
 801ff96:	e7e8      	b.n	801ff6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801ff98:	4603      	mov	r3, r0
 801ff9a:	2e0f      	cmp	r6, #15
 801ff9c:	d8e7      	bhi.n	801ff6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801ff9e:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801ffa2:	fb17 f806 	smulbb	r8, r7, r6
 801ffa6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ffaa:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801ffae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ffb2:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801ffb6:	ea44 0909 	orr.w	r9, r4, r9
 801ffba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ffbe:	f1c6 0410 	rsb	r4, r6, #16
 801ffc2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ffc6:	1be4      	subs	r4, r4, r7
 801ffc8:	041a      	lsls	r2, r3, #16
 801ffca:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801ffce:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ffd2:	fb07 fe0e 	mul.w	lr, r7, lr
 801ffd6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ffda:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801ffde:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ffe2:	fb04 e409 	mla	r4, r4, r9, lr
 801ffe6:	4313      	orrs	r3, r2
 801ffe8:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801ffec:	fb08 4303 	mla	r3, r8, r3, r4
 801fff0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fff4:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801fff8:	4322      	orrs	r2, r4
 801fffa:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801fffe:	fb06 3202 	mla	r2, r6, r2, r3
 8020002:	0d53      	lsrs	r3, r2, #21
 8020004:	0952      	lsrs	r2, r2, #5
 8020006:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802000a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802000e:	431a      	orrs	r2, r3
 8020010:	b293      	uxth	r3, r2
 8020012:	b2af      	uxth	r7, r5
 8020014:	1202      	asrs	r2, r0, #8
 8020016:	43ed      	mvns	r5, r5
 8020018:	b2ed      	uxtb	r5, r5
 802001a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802001e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020022:	fb12 f205 	smulbb	r2, r2, r5
 8020026:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802002a:	fb0c 2c07 	mla	ip, ip, r7, r2
 802002e:	00dc      	lsls	r4, r3, #3
 8020030:	10da      	asrs	r2, r3, #3
 8020032:	10c6      	asrs	r6, r0, #3
 8020034:	00c3      	lsls	r3, r0, #3
 8020036:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802003a:	b2db      	uxtb	r3, r3
 802003c:	fb16 f605 	smulbb	r6, r6, r5
 8020040:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020044:	b2e4      	uxtb	r4, r4
 8020046:	fb13 f305 	smulbb	r3, r3, r5
 802004a:	fa1f fc8c 	uxth.w	ip, ip
 802004e:	fb02 6207 	mla	r2, r2, r7, r6
 8020052:	fb04 3307 	mla	r3, r4, r7, r3
 8020056:	b296      	uxth	r6, r2
 8020058:	b29a      	uxth	r2, r3
 802005a:	f10c 0301 	add.w	r3, ip, #1
 802005e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020062:	1c53      	adds	r3, r2, #1
 8020064:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020068:	1c72      	adds	r2, r6, #1
 802006a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 802006e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020072:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020076:	0952      	lsrs	r2, r2, #5
 8020078:	ea43 030c 	orr.w	r3, r3, ip
 802007c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020080:	4313      	orrs	r3, r2
 8020082:	800b      	strh	r3, [r1, #0]
 8020084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020088:	2f0f      	cmp	r7, #15
 802008a:	f63f af70 	bhi.w	801ff6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 802008e:	4603      	mov	r3, r0
 8020090:	4684      	mov	ip, r0
 8020092:	e784      	b.n	801ff9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8020094:	0802926a 	.word	0x0802926a
 8020098:	080298e3 	.word	0x080298e3
 802009c:	080292ee 	.word	0x080292ee

080200a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80200a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200a4:	ed2d 8b08 	vpush	{d8-d11}
 80200a8:	b093      	sub	sp, #76	; 0x4c
 80200aa:	461d      	mov	r5, r3
 80200ac:	9210      	str	r2, [sp, #64]	; 0x40
 80200ae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80200b0:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 80200b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80200b6:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 80200ba:	910a      	str	r1, [sp, #40]	; 0x28
 80200bc:	6859      	ldr	r1, [r3, #4]
 80200be:	681b      	ldr	r3, [r3, #0]
 80200c0:	9011      	str	r0, [sp, #68]	; 0x44
 80200c2:	fb01 2707 	mla	r7, r1, r7, r2
 80200c6:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80200ca:	9307      	str	r3, [sp, #28]
 80200cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80200ce:	681b      	ldr	r3, [r3, #0]
 80200d0:	9309      	str	r3, [sp, #36]	; 0x24
 80200d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200d4:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80200d8:	43db      	mvns	r3, r3
 80200da:	b2db      	uxtb	r3, r3
 80200dc:	eeb0 aa40 	vmov.f32	s20, s0
 80200e0:	eef0 9a60 	vmov.f32	s19, s1
 80200e4:	eeb0 9a41 	vmov.f32	s18, s2
 80200e8:	eeb0 8a62 	vmov.f32	s16, s5
 80200ec:	eef0 8a43 	vmov.f32	s17, s6
 80200f0:	eef0 ba44 	vmov.f32	s23, s8
 80200f4:	eeb0 ba64 	vmov.f32	s22, s9
 80200f8:	eef0 aa45 	vmov.f32	s21, s10
 80200fc:	9308      	str	r3, [sp, #32]
 80200fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020100:	2b00      	cmp	r3, #0
 8020102:	dc03      	bgt.n	802010c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020104:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020106:	2b00      	cmp	r3, #0
 8020108:	f340 8203 	ble.w	8020512 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802010c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802010e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020112:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020116:	1e48      	subs	r0, r1, #1
 8020118:	f102 3cff 	add.w	ip, r2, #4294967295
 802011c:	2d00      	cmp	r5, #0
 802011e:	f340 80da 	ble.w	80202d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020122:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020126:	ea4f 4326 	mov.w	r3, r6, asr #16
 802012a:	d406      	bmi.n	802013a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802012c:	4586      	cmp	lr, r0
 802012e:	da04      	bge.n	802013a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020130:	2b00      	cmp	r3, #0
 8020132:	db02      	blt.n	802013a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020134:	4563      	cmp	r3, ip
 8020136:	f2c0 80cf 	blt.w	80202d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802013a:	f11e 0e01 	adds.w	lr, lr, #1
 802013e:	f100 80c1 	bmi.w	80202c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8020142:	4571      	cmp	r1, lr
 8020144:	f2c0 80be 	blt.w	80202c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8020148:	3301      	adds	r3, #1
 802014a:	f100 80bb 	bmi.w	80202c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 802014e:	429a      	cmp	r2, r3
 8020150:	f2c0 80b8 	blt.w	80202c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8020154:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8020158:	46a9      	mov	r9, r5
 802015a:	f1b9 0f00 	cmp.w	r9, #0
 802015e:	f340 80d8 	ble.w	8020312 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020162:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020164:	1421      	asrs	r1, r4, #16
 8020166:	ea4f 4026 	mov.w	r0, r6, asr #16
 802016a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802016e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020172:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020176:	f100 8111 	bmi.w	802039c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802017a:	f10e 3aff 	add.w	sl, lr, #4294967295
 802017e:	4551      	cmp	r1, sl
 8020180:	f280 810c 	bge.w	802039c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8020184:	2800      	cmp	r0, #0
 8020186:	f2c0 8109 	blt.w	802039c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802018a:	f103 3aff 	add.w	sl, r3, #4294967295
 802018e:	4550      	cmp	r0, sl
 8020190:	f280 8104 	bge.w	802039c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8020194:	fa0f f38e 	sxth.w	r3, lr
 8020198:	fb00 1103 	mla	r1, r0, r3, r1
 802019c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802019e:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80201a2:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80201a6:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80201aa:	f1bc 0f00 	cmp.w	ip, #0
 80201ae:	d007      	beq.n	80201c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 80201b0:	005b      	lsls	r3, r3, #1
 80201b2:	eb0a 0003 	add.w	r0, sl, r3
 80201b6:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80201ba:	930c      	str	r3, [sp, #48]	; 0x30
 80201bc:	8843      	ldrh	r3, [r0, #2]
 80201be:	930d      	str	r3, [sp, #52]	; 0x34
 80201c0:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80201c4:	fb12 f30c 	smulbb	r3, r2, ip
 80201c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80201cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80201d0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80201d4:	10db      	asrs	r3, r3, #3
 80201d6:	ea40 000e 	orr.w	r0, r0, lr
 80201da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80201de:	f1cc 0e10 	rsb	lr, ip, #16
 80201e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80201e6:	ebae 0e02 	sub.w	lr, lr, r2
 80201ea:	ea4a 0101 	orr.w	r1, sl, r1
 80201ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80201f2:	4351      	muls	r1, r2
 80201f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80201f6:	9f08      	ldr	r7, [sp, #32]
 80201f8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80201fc:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020200:	0410      	lsls	r0, r2, #16
 8020202:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020206:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802020a:	4310      	orrs	r0, r2
 802020c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802020e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020210:	0412      	lsls	r2, r2, #16
 8020212:	fb03 e000 	mla	r0, r3, r0, lr
 8020216:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802021a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802021e:	ea42 020e 	orr.w	r2, r2, lr
 8020222:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020226:	fb03 0302 	mla	r3, r3, r2, r0
 802022a:	0d5a      	lsrs	r2, r3, #21
 802022c:	095b      	lsrs	r3, r3, #5
 802022e:	f8b8 0000 	ldrh.w	r0, [r8]
 8020232:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020236:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802023a:	4313      	orrs	r3, r2
 802023c:	b29b      	uxth	r3, r3
 802023e:	1201      	asrs	r1, r0, #8
 8020240:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8020244:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020248:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802024c:	fb11 f107 	smulbb	r1, r1, r7
 8020250:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020254:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020258:	00c0      	lsls	r0, r0, #3
 802025a:	fb0c 1c02 	mla	ip, ip, r2, r1
 802025e:	b2c0      	uxtb	r0, r0
 8020260:	10d9      	asrs	r1, r3, #3
 8020262:	00db      	lsls	r3, r3, #3
 8020264:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020268:	b2db      	uxtb	r3, r3
 802026a:	fb10 f007 	smulbb	r0, r0, r7
 802026e:	fa1f fc8c 	uxth.w	ip, ip
 8020272:	fb03 0302 	mla	r3, r3, r2, r0
 8020276:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802027a:	fb1e fe07 	smulbb	lr, lr, r7
 802027e:	fb01 e102 	mla	r1, r1, r2, lr
 8020282:	b29a      	uxth	r2, r3
 8020284:	f10c 0301 	add.w	r3, ip, #1
 8020288:	b289      	uxth	r1, r1
 802028a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802028e:	1c53      	adds	r3, r2, #1
 8020290:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020294:	1c4a      	adds	r2, r1, #1
 8020296:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802029a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802029e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80202a2:	0949      	lsrs	r1, r1, #5
 80202a4:	ea43 030c 	orr.w	r3, r3, ip
 80202a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80202ac:	430b      	orrs	r3, r1
 80202ae:	f8a8 3000 	strh.w	r3, [r8]
 80202b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80202b4:	441c      	add	r4, r3
 80202b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202b8:	f108 0802 	add.w	r8, r8, #2
 80202bc:	441e      	add	r6, r3
 80202be:	f109 39ff 	add.w	r9, r9, #4294967295
 80202c2:	e74a      	b.n	802015a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80202c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80202c6:	441c      	add	r4, r3
 80202c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202ca:	441e      	add	r6, r3
 80202cc:	9b07      	ldr	r3, [sp, #28]
 80202ce:	3302      	adds	r3, #2
 80202d0:	3d01      	subs	r5, #1
 80202d2:	9307      	str	r3, [sp, #28]
 80202d4:	e722      	b.n	802011c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80202d6:	d022      	beq.n	802031e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80202d8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80202da:	1e6b      	subs	r3, r5, #1
 80202dc:	fb00 4003 	mla	r0, r0, r3, r4
 80202e0:	1400      	asrs	r0, r0, #16
 80202e2:	f53f af37 	bmi.w	8020154 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80202e6:	3901      	subs	r1, #1
 80202e8:	4288      	cmp	r0, r1
 80202ea:	f6bf af33 	bge.w	8020154 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80202ee:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80202f0:	fb01 6303 	mla	r3, r1, r3, r6
 80202f4:	141b      	asrs	r3, r3, #16
 80202f6:	f53f af2d 	bmi.w	8020154 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80202fa:	3a01      	subs	r2, #1
 80202fc:	4293      	cmp	r3, r2
 80202fe:	f6bf af29 	bge.w	8020154 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8020302:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8020306:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 802030a:	46a8      	mov	r8, r5
 802030c:	f1b8 0f00 	cmp.w	r8, #0
 8020310:	dc5e      	bgt.n	80203d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020312:	9b07      	ldr	r3, [sp, #28]
 8020314:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020318:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802031c:	9307      	str	r3, [sp, #28]
 802031e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020320:	2b00      	cmp	r3, #0
 8020322:	f340 80f6 	ble.w	8020512 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8020326:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802032a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802032e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8020332:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020334:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8020338:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802033c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8020340:	eef0 6a48 	vmov.f32	s13, s16
 8020344:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020348:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802034c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8020350:	ee16 4a90 	vmov	r4, s13
 8020354:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8020358:	eef0 6a68 	vmov.f32	s13, s17
 802035c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8020360:	ee18 2a10 	vmov	r2, s16
 8020364:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020368:	fb92 f3f3 	sdiv	r3, r2, r3
 802036c:	ee18 2a90 	vmov	r2, s17
 8020370:	9327      	str	r3, [sp, #156]	; 0x9c
 8020372:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020374:	fb92 f3f3 	sdiv	r3, r2, r3
 8020378:	9328      	str	r3, [sp, #160]	; 0xa0
 802037a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802037c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802037e:	3b01      	subs	r3, #1
 8020380:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020384:	930a      	str	r3, [sp, #40]	; 0x28
 8020386:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020388:	ee16 6a90 	vmov	r6, s13
 802038c:	bf14      	ite	ne
 802038e:	461d      	movne	r5, r3
 8020390:	4615      	moveq	r5, r2
 8020392:	eef0 8a67 	vmov.f32	s17, s15
 8020396:	eeb0 8a47 	vmov.f32	s16, s14
 802039a:	e6b0      	b.n	80200fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802039c:	f111 0a01 	adds.w	sl, r1, #1
 80203a0:	d487      	bmi.n	80202b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80203a2:	45d6      	cmp	lr, sl
 80203a4:	db85      	blt.n	80202b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80203a6:	f110 0a01 	adds.w	sl, r0, #1
 80203aa:	d482      	bmi.n	80202b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80203ac:	4553      	cmp	r3, sl
 80203ae:	db80      	blt.n	80202b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80203b0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80203b2:	9101      	str	r1, [sp, #4]
 80203b4:	b21b      	sxth	r3, r3
 80203b6:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80203ba:	9300      	str	r3, [sp, #0]
 80203bc:	e9cd c704 	strd	ip, r7, [sp, #16]
 80203c0:	fa0f f38e 	sxth.w	r3, lr
 80203c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80203c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80203c8:	4641      	mov	r1, r8
 80203ca:	f7ff fd95 	bl	801fef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80203ce:	e770      	b.n	80202b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80203d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80203d2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80203d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203d8:	1430      	asrs	r0, r6, #16
 80203da:	1423      	asrs	r3, r4, #16
 80203dc:	fb01 3000 	mla	r0, r1, r0, r3
 80203e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203e2:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80203e6:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80203ea:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80203ee:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80203f2:	8858      	ldrh	r0, [r3, #2]
 80203f4:	f1be 0f00 	cmp.w	lr, #0
 80203f8:	d00b      	beq.n	8020412 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80203fa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80203fe:	3901      	subs	r1, #1
 8020400:	0049      	lsls	r1, r1, #1
 8020402:	3102      	adds	r1, #2
 8020404:	eb03 0b01 	add.w	fp, r3, r1
 8020408:	5a5b      	ldrh	r3, [r3, r1]
 802040a:	930e      	str	r3, [sp, #56]	; 0x38
 802040c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020410:	930f      	str	r3, [sp, #60]	; 0x3c
 8020412:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8020416:	fb12 f30e 	smulbb	r3, r2, lr
 802041a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802041e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020422:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8020426:	10db      	asrs	r3, r3, #3
 8020428:	ea41 010c 	orr.w	r1, r1, ip
 802042c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020430:	f1ce 0c10 	rsb	ip, lr, #16
 8020434:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020438:	ebac 0c02 	sub.w	ip, ip, r2
 802043c:	ea4b 0000 	orr.w	r0, fp, r0
 8020440:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020444:	4350      	muls	r0, r2
 8020446:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020448:	9f08      	ldr	r7, [sp, #32]
 802044a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802044e:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020452:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020456:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802045a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802045c:	980e      	ldr	r0, [sp, #56]	; 0x38
 802045e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020462:	0412      	lsls	r2, r2, #16
 8020464:	ea4b 0101 	orr.w	r1, fp, r1
 8020468:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802046c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020470:	fb03 c101 	mla	r1, r3, r1, ip
 8020474:	4302      	orrs	r2, r0
 8020476:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802047a:	fb03 1202 	mla	r2, r3, r2, r1
 802047e:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8020482:	0952      	lsrs	r2, r2, #5
 8020484:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8020488:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802048c:	f8b9 2000 	ldrh.w	r2, [r9]
 8020490:	ea4b 0303 	orr.w	r3, fp, r3
 8020494:	b29b      	uxth	r3, r3
 8020496:	1211      	asrs	r1, r2, #8
 8020498:	1218      	asrs	r0, r3, #8
 802049a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802049e:	fb11 f107 	smulbb	r1, r1, r7
 80204a2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80204a6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80204aa:	00d2      	lsls	r2, r2, #3
 80204ac:	fb00 100a 	mla	r0, r0, sl, r1
 80204b0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80204b4:	10d9      	asrs	r1, r3, #3
 80204b6:	b2d2      	uxtb	r2, r2
 80204b8:	00db      	lsls	r3, r3, #3
 80204ba:	fb1c fc07 	smulbb	ip, ip, r7
 80204be:	fb12 f207 	smulbb	r2, r2, r7
 80204c2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80204c6:	b2db      	uxtb	r3, r3
 80204c8:	b280      	uxth	r0, r0
 80204ca:	fb01 c10a 	mla	r1, r1, sl, ip
 80204ce:	fb03 230a 	mla	r3, r3, sl, r2
 80204d2:	b29b      	uxth	r3, r3
 80204d4:	b289      	uxth	r1, r1
 80204d6:	1c42      	adds	r2, r0, #1
 80204d8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80204dc:	f101 0c01 	add.w	ip, r1, #1
 80204e0:	1c5a      	adds	r2, r3, #1
 80204e2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80204e6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80204ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80204ec:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80204f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80204f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80204f8:	4310      	orrs	r0, r2
 80204fa:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80204fe:	441c      	add	r4, r3
 8020500:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020502:	ea40 000c 	orr.w	r0, r0, ip
 8020506:	f829 0b02 	strh.w	r0, [r9], #2
 802050a:	441e      	add	r6, r3
 802050c:	f108 38ff 	add.w	r8, r8, #4294967295
 8020510:	e6fc      	b.n	802030c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020512:	b013      	add	sp, #76	; 0x4c
 8020514:	ecbd 8b08 	vpop	{d8-d11}
 8020518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802051c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802051c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020520:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8020524:	fb06 5c03 	mla	ip, r6, r3, r5
 8020528:	2e00      	cmp	r6, #0
 802052a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 802052e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8020532:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8020536:	8808      	ldrh	r0, [r1, #0]
 8020538:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802053c:	db2e      	blt.n	802059c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 802053e:	45b0      	cmp	r8, r6
 8020540:	dd2c      	ble.n	802059c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8020542:	2d00      	cmp	r5, #0
 8020544:	db28      	blt.n	8020598 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8020546:	42ab      	cmp	r3, r5
 8020548:	dd26      	ble.n	8020598 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 802054a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 802054e:	1c6a      	adds	r2, r5, #1
 8020550:	d427      	bmi.n	80205a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8020552:	4293      	cmp	r3, r2
 8020554:	dd25      	ble.n	80205a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8020556:	b324      	cbz	r4, 80205a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8020558:	f8be 2002 	ldrh.w	r2, [lr, #2]
 802055c:	3601      	adds	r6, #1
 802055e:	d424      	bmi.n	80205aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8020560:	45b0      	cmp	r8, r6
 8020562:	dd22      	ble.n	80205aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8020564:	b31f      	cbz	r7, 80205ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8020566:	2d00      	cmp	r5, #0
 8020568:	db1d      	blt.n	80205a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 802056a:	42ab      	cmp	r3, r5
 802056c:	dd1b      	ble.n	80205a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 802056e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8020572:	3501      	adds	r5, #1
 8020574:	d405      	bmi.n	8020582 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8020576:	42ab      	cmp	r3, r5
 8020578:	dd03      	ble.n	8020582 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 802057a:	b124      	cbz	r4, 8020586 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 802057c:	3301      	adds	r3, #1
 802057e:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8020582:	2c0f      	cmp	r4, #15
 8020584:	d801      	bhi.n	802058a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020586:	2f0f      	cmp	r7, #15
 8020588:	d914      	bls.n	80205b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 802058a:	4b27      	ldr	r3, [pc, #156]	; (8020628 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 802058c:	4a27      	ldr	r2, [pc, #156]	; (802062c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 802058e:	4828      	ldr	r0, [pc, #160]	; (8020630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8020590:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8020594:	f002 fcb8 	bl	8022f08 <__assert_func>
 8020598:	4684      	mov	ip, r0
 802059a:	e7d8      	b.n	802054e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 802059c:	4602      	mov	r2, r0
 802059e:	4684      	mov	ip, r0
 80205a0:	e7dc      	b.n	802055c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80205a2:	4602      	mov	r2, r0
 80205a4:	e7da      	b.n	802055c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80205a6:	4606      	mov	r6, r0
 80205a8:	e7e3      	b.n	8020572 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80205aa:	4606      	mov	r6, r0
 80205ac:	e7e9      	b.n	8020582 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80205ae:	2c0f      	cmp	r4, #15
 80205b0:	d8eb      	bhi.n	802058a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80205b2:	4606      	mov	r6, r0
 80205b4:	ea4f 450c 	mov.w	r5, ip, lsl #16
 80205b8:	fb14 f307 	smulbb	r3, r4, r7
 80205bc:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80205c0:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80205c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80205c8:	10db      	asrs	r3, r3, #3
 80205ca:	ea45 0c0c 	orr.w	ip, r5, ip
 80205ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80205d2:	f1c7 0510 	rsb	r5, r7, #16
 80205d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80205da:	1b2d      	subs	r5, r5, r4
 80205dc:	ea4e 0202 	orr.w	r2, lr, r2
 80205e0:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80205e4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80205e8:	4354      	muls	r4, r2
 80205ea:	fb05 450c 	mla	r5, r5, ip, r4
 80205ee:	0404      	lsls	r4, r0, #16
 80205f0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80205f4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80205f8:	4320      	orrs	r0, r4
 80205fa:	fb03 5400 	mla	r4, r3, r0, r5
 80205fe:	0430      	lsls	r0, r6, #16
 8020600:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020604:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8020608:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 802060c:	4330      	orrs	r0, r6
 802060e:	fb07 4000 	mla	r0, r7, r0, r4
 8020612:	0d43      	lsrs	r3, r0, #21
 8020614:	0940      	lsrs	r0, r0, #5
 8020616:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802061a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802061e:	4318      	orrs	r0, r3
 8020620:	8008      	strh	r0, [r1, #0]
 8020622:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020626:	bf00      	nop
 8020628:	0802926a 	.word	0x0802926a
 802062c:	080298e3 	.word	0x080298e3
 8020630:	080292ee 	.word	0x080292ee

08020634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020638:	ed2d 8b08 	vpush	{d8-d11}
 802063c:	b08f      	sub	sp, #60	; 0x3c
 802063e:	461d      	mov	r5, r3
 8020640:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020642:	920c      	str	r2, [sp, #48]	; 0x30
 8020644:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8020648:	9107      	str	r1, [sp, #28]
 802064a:	6859      	ldr	r1, [r3, #4]
 802064c:	681b      	ldr	r3, [r3, #0]
 802064e:	900d      	str	r0, [sp, #52]	; 0x34
 8020650:	fb01 2707 	mla	r7, r1, r7, r2
 8020654:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020658:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802065a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802065e:	f8d3 8000 	ldr.w	r8, [r3]
 8020662:	eeb0 aa40 	vmov.f32	s20, s0
 8020666:	eef0 9a60 	vmov.f32	s19, s1
 802066a:	eeb0 9a41 	vmov.f32	s18, s2
 802066e:	eeb0 8a62 	vmov.f32	s16, s5
 8020672:	eef0 8a43 	vmov.f32	s17, s6
 8020676:	eef0 ba44 	vmov.f32	s23, s8
 802067a:	eeb0 ba64 	vmov.f32	s22, s9
 802067e:	eef0 aa45 	vmov.f32	s21, s10
 8020682:	9b07      	ldr	r3, [sp, #28]
 8020684:	2b00      	cmp	r3, #0
 8020686:	dc03      	bgt.n	8020690 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8020688:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802068a:	2b00      	cmp	r3, #0
 802068c:	f340 8181 	ble.w	8020992 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8020690:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020692:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020696:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802069a:	1e48      	subs	r0, r1, #1
 802069c:	f102 3cff 	add.w	ip, r2, #4294967295
 80206a0:	2d00      	cmp	r5, #0
 80206a2:	f340 809b 	ble.w	80207dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 80206a6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80206aa:	ea4f 4326 	mov.w	r3, r6, asr #16
 80206ae:	d406      	bmi.n	80206be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80206b0:	4586      	cmp	lr, r0
 80206b2:	da04      	bge.n	80206be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80206b4:	2b00      	cmp	r3, #0
 80206b6:	db02      	blt.n	80206be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80206b8:	4563      	cmp	r3, ip
 80206ba:	f2c0 8090 	blt.w	80207de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80206be:	f11e 0e01 	adds.w	lr, lr, #1
 80206c2:	f100 8084 	bmi.w	80207ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80206c6:	4571      	cmp	r1, lr
 80206c8:	f2c0 8081 	blt.w	80207ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80206cc:	3301      	adds	r3, #1
 80206ce:	d47e      	bmi.n	80207ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80206d0:	429a      	cmp	r2, r3
 80206d2:	db7c      	blt.n	80207ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80206d4:	46aa      	mov	sl, r5
 80206d6:	46b9      	mov	r9, r7
 80206d8:	f1ba 0f00 	cmp.w	sl, #0
 80206dc:	f340 8099 	ble.w	8020812 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80206e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80206e2:	1421      	asrs	r1, r4, #16
 80206e4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80206e8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80206ec:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80206f0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80206f4:	f100 80d0 	bmi.w	8020898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80206f8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80206fc:	4559      	cmp	r1, fp
 80206fe:	f280 80cb 	bge.w	8020898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8020702:	2800      	cmp	r0, #0
 8020704:	f2c0 80c8 	blt.w	8020898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8020708:	f103 3bff 	add.w	fp, r3, #4294967295
 802070c:	4558      	cmp	r0, fp
 802070e:	f280 80c3 	bge.w	8020898 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8020712:	fa0f fe8e 	sxth.w	lr, lr
 8020716:	fb00 110e 	mla	r1, r0, lr, r1
 802071a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802071e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8020722:	8841      	ldrh	r1, [r0, #2]
 8020724:	f1bc 0f00 	cmp.w	ip, #0
 8020728:	d00b      	beq.n	8020742 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 802072a:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802072e:	3b01      	subs	r3, #1
 8020730:	005b      	lsls	r3, r3, #1
 8020732:	3302      	adds	r3, #2
 8020734:	eb00 0e03 	add.w	lr, r0, r3
 8020738:	5ac3      	ldrh	r3, [r0, r3]
 802073a:	9308      	str	r3, [sp, #32]
 802073c:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8020740:	9309      	str	r3, [sp, #36]	; 0x24
 8020742:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8020746:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802074a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802074e:	ea40 000b 	orr.w	r0, r0, fp
 8020752:	fb12 f30c 	smulbb	r3, r2, ip
 8020756:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802075a:	10db      	asrs	r3, r3, #3
 802075c:	f1cc 0e10 	rsb	lr, ip, #16
 8020760:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020764:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020768:	ebae 0e02 	sub.w	lr, lr, r2
 802076c:	ea4b 0101 	orr.w	r1, fp, r1
 8020770:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020774:	4351      	muls	r1, r2
 8020776:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020778:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802077c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020780:	0410      	lsls	r0, r2, #16
 8020782:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020786:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802078a:	4310      	orrs	r0, r2
 802078c:	9a08      	ldr	r2, [sp, #32]
 802078e:	9908      	ldr	r1, [sp, #32]
 8020790:	0412      	lsls	r2, r2, #16
 8020792:	fb03 e000 	mla	r0, r3, r0, lr
 8020796:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802079a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802079e:	ea42 020e 	orr.w	r2, r2, lr
 80207a2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80207a6:	fb03 0302 	mla	r3, r3, r2, r0
 80207aa:	0d5a      	lsrs	r2, r3, #21
 80207ac:	095b      	lsrs	r3, r3, #5
 80207ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80207b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80207b6:	4313      	orrs	r3, r2
 80207b8:	f8a9 3000 	strh.w	r3, [r9]
 80207bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80207be:	441c      	add	r4, r3
 80207c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80207c2:	f109 0902 	add.w	r9, r9, #2
 80207c6:	441e      	add	r6, r3
 80207c8:	f10a 3aff 	add.w	sl, sl, #4294967295
 80207cc:	e784      	b.n	80206d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80207ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80207d0:	441c      	add	r4, r3
 80207d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80207d4:	3d01      	subs	r5, #1
 80207d6:	441e      	add	r6, r3
 80207d8:	3702      	adds	r7, #2
 80207da:	e761      	b.n	80206a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80207dc:	d01d      	beq.n	802081a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80207de:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80207e0:	1e6b      	subs	r3, r5, #1
 80207e2:	fb00 4003 	mla	r0, r0, r3, r4
 80207e6:	1400      	asrs	r0, r0, #16
 80207e8:	f53f af74 	bmi.w	80206d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80207ec:	3901      	subs	r1, #1
 80207ee:	4288      	cmp	r0, r1
 80207f0:	f6bf af70 	bge.w	80206d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80207f4:	9924      	ldr	r1, [sp, #144]	; 0x90
 80207f6:	fb01 6303 	mla	r3, r1, r3, r6
 80207fa:	141b      	asrs	r3, r3, #16
 80207fc:	f53f af6a 	bmi.w	80206d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020800:	3a01      	subs	r2, #1
 8020802:	4293      	cmp	r3, r2
 8020804:	f6bf af66 	bge.w	80206d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020808:	46a9      	mov	r9, r5
 802080a:	46ba      	mov	sl, r7
 802080c:	f1b9 0f00 	cmp.w	r9, #0
 8020810:	dc5a      	bgt.n	80208c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8020812:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020816:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802081a:	9b07      	ldr	r3, [sp, #28]
 802081c:	2b00      	cmp	r3, #0
 802081e:	f340 80b8 	ble.w	8020992 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8020822:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8020826:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802082a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802082e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020830:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8020834:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8020838:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802083c:	eef0 6a48 	vmov.f32	s13, s16
 8020840:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020844:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020848:	ee37 8a48 	vsub.f32	s16, s14, s16
 802084c:	ee16 4a90 	vmov	r4, s13
 8020850:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8020854:	eef0 6a68 	vmov.f32	s13, s17
 8020858:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802085c:	ee18 2a10 	vmov	r2, s16
 8020860:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020864:	fb92 f3f3 	sdiv	r3, r2, r3
 8020868:	ee18 2a90 	vmov	r2, s17
 802086c:	9323      	str	r3, [sp, #140]	; 0x8c
 802086e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020870:	fb92 f3f3 	sdiv	r3, r2, r3
 8020874:	9324      	str	r3, [sp, #144]	; 0x90
 8020876:	9b07      	ldr	r3, [sp, #28]
 8020878:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802087a:	3b01      	subs	r3, #1
 802087c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020880:	9307      	str	r3, [sp, #28]
 8020882:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020884:	ee16 6a90 	vmov	r6, s13
 8020888:	bf14      	ite	ne
 802088a:	461d      	movne	r5, r3
 802088c:	4615      	moveq	r5, r2
 802088e:	eef0 8a67 	vmov.f32	s17, s15
 8020892:	eeb0 8a47 	vmov.f32	s16, s14
 8020896:	e6f4      	b.n	8020682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020898:	f111 0b01 	adds.w	fp, r1, #1
 802089c:	d48e      	bmi.n	80207bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802089e:	45de      	cmp	lr, fp
 80208a0:	db8c      	blt.n	80207bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80208a2:	f110 0b01 	adds.w	fp, r0, #1
 80208a6:	d489      	bmi.n	80207bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80208a8:	455b      	cmp	r3, fp
 80208aa:	db87      	blt.n	80207bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80208ac:	b21b      	sxth	r3, r3
 80208ae:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80208b2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80208b6:	9300      	str	r3, [sp, #0]
 80208b8:	4642      	mov	r2, r8
 80208ba:	fa0f f38e 	sxth.w	r3, lr
 80208be:	4649      	mov	r1, r9
 80208c0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80208c2:	f7ff fe2b 	bl	802051c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80208c6:	e779      	b.n	80207bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80208c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80208ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80208ce:	1420      	asrs	r0, r4, #16
 80208d0:	1431      	asrs	r1, r6, #16
 80208d2:	fb03 0101 	mla	r1, r3, r1, r0
 80208d6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80208da:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80208de:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80208e2:	8841      	ldrh	r1, [r0, #2]
 80208e4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80208e8:	f1be 0f00 	cmp.w	lr, #0
 80208ec:	d00b      	beq.n	8020906 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80208ee:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80208f2:	3b01      	subs	r3, #1
 80208f4:	005b      	lsls	r3, r3, #1
 80208f6:	3302      	adds	r3, #2
 80208f8:	eb00 0b03 	add.w	fp, r0, r3
 80208fc:	5ac3      	ldrh	r3, [r0, r3]
 80208fe:	930a      	str	r3, [sp, #40]	; 0x28
 8020900:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020904:	930b      	str	r3, [sp, #44]	; 0x2c
 8020906:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802090a:	fb12 f30e 	smulbb	r3, r2, lr
 802090e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020912:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020916:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802091a:	10db      	asrs	r3, r3, #3
 802091c:	ea40 000c 	orr.w	r0, r0, ip
 8020920:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020924:	f1ce 0c10 	rsb	ip, lr, #16
 8020928:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802092c:	ebac 0c02 	sub.w	ip, ip, r2
 8020930:	ea4b 0101 	orr.w	r1, fp, r1
 8020934:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020938:	4351      	muls	r1, r2
 802093a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802093c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020940:	fb0c 1c00 	mla	ip, ip, r0, r1
 8020944:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020948:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802094c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802094e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8020950:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020954:	0412      	lsls	r2, r2, #16
 8020956:	ea4b 0000 	orr.w	r0, fp, r0
 802095a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802095e:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8020962:	fb03 c000 	mla	r0, r3, r0, ip
 8020966:	ea42 0b0b 	orr.w	fp, r2, fp
 802096a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802096e:	fb03 000b 	mla	r0, r3, fp, r0
 8020972:	0d43      	lsrs	r3, r0, #21
 8020974:	0940      	lsrs	r0, r0, #5
 8020976:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802097a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802097e:	4318      	orrs	r0, r3
 8020980:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8020982:	f82a 0b02 	strh.w	r0, [sl], #2
 8020986:	441c      	add	r4, r3
 8020988:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802098a:	f109 39ff 	add.w	r9, r9, #4294967295
 802098e:	441e      	add	r6, r3
 8020990:	e73c      	b.n	802080c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020992:	b00f      	add	sp, #60	; 0x3c
 8020994:	ecbd 8b08 	vpop	{d8-d11}
 8020998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802099c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802099c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209a0:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 80209a4:	fb04 5603 	mla	r6, r4, r3, r5
 80209a8:	2c00      	cmp	r4, #0
 80209aa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80209ae:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 80209b2:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 80209b6:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 80209ba:	db36      	blt.n	8020a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 80209bc:	45a6      	cmp	lr, r4
 80209be:	dd34      	ble.n	8020a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 80209c0:	2d00      	cmp	r5, #0
 80209c2:	db30      	blt.n	8020a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 80209c4:	42ab      	cmp	r3, r5
 80209c6:	dd2e      	ble.n	8020a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 80209c8:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80209cc:	1c6e      	adds	r6, r5, #1
 80209ce:	d42f      	bmi.n	8020a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 80209d0:	42b3      	cmp	r3, r6
 80209d2:	dd2d      	ble.n	8020a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 80209d4:	b370      	cbz	r0, 8020a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80209d6:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80209da:	3401      	adds	r4, #1
 80209dc:	d42e      	bmi.n	8020a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 80209de:	45a6      	cmp	lr, r4
 80209e0:	dd2c      	ble.n	8020a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 80209e2:	b377      	cbz	r7, 8020a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 80209e4:	2d00      	cmp	r5, #0
 80209e6:	db27      	blt.n	8020a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80209e8:	42ab      	cmp	r3, r5
 80209ea:	dd25      	ble.n	8020a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80209ec:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80209f0:	3501      	adds	r5, #1
 80209f2:	d429      	bmi.n	8020a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80209f4:	42ab      	cmp	r3, r5
 80209f6:	dd27      	ble.n	8020a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80209f8:	b340      	cbz	r0, 8020a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80209fa:	3301      	adds	r3, #1
 80209fc:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8020a00:	280f      	cmp	r0, #15
 8020a02:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8020a06:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8020a0a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020a0e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8020a12:	d801      	bhi.n	8020a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8020a14:	2f0f      	cmp	r7, #15
 8020a16:	d91b      	bls.n	8020a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8020a18:	4b8d      	ldr	r3, [pc, #564]	; (8020c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8020a1a:	4a8e      	ldr	r2, [pc, #568]	; (8020c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8020a1c:	488e      	ldr	r0, [pc, #568]	; (8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8020a1e:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8020a22:	f002 fa71 	bl	8022f08 <__assert_func>
 8020a26:	2200      	movs	r2, #0
 8020a28:	e7d0      	b.n	80209cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 8020a2a:	2600      	movs	r6, #0
 8020a2c:	4632      	mov	r2, r6
 8020a2e:	e7d4      	b.n	80209da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8020a30:	2600      	movs	r6, #0
 8020a32:	e7d2      	b.n	80209da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8020a34:	4606      	mov	r6, r0
 8020a36:	e7d0      	b.n	80209da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8020a38:	2400      	movs	r4, #0
 8020a3a:	e7d9      	b.n	80209f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 8020a3c:	2300      	movs	r3, #0
 8020a3e:	461c      	mov	r4, r3
 8020a40:	e7de      	b.n	8020a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8020a42:	463b      	mov	r3, r7
 8020a44:	463c      	mov	r4, r7
 8020a46:	e7db      	b.n	8020a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8020a48:	2300      	movs	r3, #0
 8020a4a:	e7d9      	b.n	8020a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8020a4c:	4603      	mov	r3, r0
 8020a4e:	e7d7      	b.n	8020a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8020a50:	b280      	uxth	r0, r0
 8020a52:	b2bf      	uxth	r7, r7
 8020a54:	fb07 fe00 	mul.w	lr, r7, r0
 8020a58:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8020a5c:	0100      	lsls	r0, r0, #4
 8020a5e:	eba0 0c0e 	sub.w	ip, r0, lr
 8020a62:	b2bf      	uxth	r7, r7
 8020a64:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8020a68:	fa1f fc8c 	uxth.w	ip, ip
 8020a6c:	1bed      	subs	r5, r5, r7
 8020a6e:	b2ad      	uxth	r5, r5
 8020a70:	fb0a f00c 	mul.w	r0, sl, ip
 8020a74:	fb0b 0005 	mla	r0, fp, r5, r0
 8020a78:	fb07 0009 	mla	r0, r7, r9, r0
 8020a7c:	fb0e 0008 	mla	r0, lr, r8, r0
 8020a80:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020a84:	9001      	str	r0, [sp, #4]
 8020a86:	2800      	cmp	r0, #0
 8020a88:	f000 80de 	beq.w	8020c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8020a8c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8020a90:	d018      	beq.n	8020ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 8020a92:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8020a96:	fb0b f000 	mul.w	r0, fp, r0
 8020a9a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020a9e:	fb0b fb02 	mul.w	fp, fp, r2
 8020aa2:	0a02      	lsrs	r2, r0, #8
 8020aa4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020aa8:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8020aac:	4402      	add	r2, r0
 8020aae:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8020ab2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020ab6:	0a12      	lsrs	r2, r2, #8
 8020ab8:	0a00      	lsrs	r0, r0, #8
 8020aba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020abe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020ac2:	4302      	orrs	r2, r0
 8020ac4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020ac8:	d01a      	beq.n	8020b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8020aca:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8020ace:	fb0a f000 	mul.w	r0, sl, r0
 8020ad2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020ad6:	fb0a fa06 	mul.w	sl, sl, r6
 8020ada:	0a06      	lsrs	r6, r0, #8
 8020adc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8020ae0:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8020ae4:	4406      	add	r6, r0
 8020ae6:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8020aea:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8020aee:	0a36      	lsrs	r6, r6, #8
 8020af0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020af4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8020af8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020afc:	ea46 060a 	orr.w	r6, r6, sl
 8020b00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020b04:	d01b      	beq.n	8020b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 8020b06:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8020b0a:	fb09 fa0a 	mul.w	sl, r9, sl
 8020b0e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020b12:	fb09 f004 	mul.w	r0, r9, r4
 8020b16:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8020b1a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020b1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020b22:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8020b26:	4454      	add	r4, sl
 8020b28:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8020b2c:	0a24      	lsrs	r4, r4, #8
 8020b2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020b32:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020b36:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020b3a:	ea44 0409 	orr.w	r4, r4, r9
 8020b3e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020b42:	d01b      	beq.n	8020b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 8020b44:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8020b48:	fb08 f909 	mul.w	r9, r8, r9
 8020b4c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b50:	fb08 f003 	mul.w	r0, r8, r3
 8020b54:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8020b58:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b5c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8020b60:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8020b64:	444b      	add	r3, r9
 8020b66:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8020b6a:	0a1b      	lsrs	r3, r3, #8
 8020b6c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020b70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b74:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020b78:	ea43 0308 	orr.w	r3, r3, r8
 8020b7c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8020b80:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020b84:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8020b88:	fb0c f808 	mul.w	r8, ip, r8
 8020b8c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020b90:	fb0c f606 	mul.w	r6, ip, r6
 8020b94:	fb05 8909 	mla	r9, r5, r9, r8
 8020b98:	fb05 6502 	mla	r5, r5, r2, r6
 8020b9c:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8020ba0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020ba4:	9a01      	ldr	r2, [sp, #4]
 8020ba6:	8808      	ldrh	r0, [r1, #0]
 8020ba8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020bac:	fb07 9908 	mla	r9, r7, r8, r9
 8020bb0:	fb07 5704 	mla	r7, r7, r4, r5
 8020bb4:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8020bb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020bbc:	b2b6      	uxth	r6, r6
 8020bbe:	fb0e 9808 	mla	r8, lr, r8, r9
 8020bc2:	fb0e 7e03 	mla	lr, lr, r3, r7
 8020bc6:	4372      	muls	r2, r6
 8020bc8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020bcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020bd0:	1c53      	adds	r3, r2, #1
 8020bd2:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8020bd6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8020bda:	ea48 0e0e 	orr.w	lr, r8, lr
 8020bde:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020be2:	1205      	asrs	r5, r0, #8
 8020be4:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8020be8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020bec:	b2db      	uxtb	r3, r3
 8020bee:	fb12 f206 	smulbb	r2, r2, r6
 8020bf2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020bf6:	fb05 2503 	mla	r5, r5, r3, r2
 8020bfa:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8020bfe:	10c2      	asrs	r2, r0, #3
 8020c00:	fa5f fe8e 	uxtb.w	lr, lr
 8020c04:	00c0      	lsls	r0, r0, #3
 8020c06:	fb14 f406 	smulbb	r4, r4, r6
 8020c0a:	b2c0      	uxtb	r0, r0
 8020c0c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020c10:	fb1e fe06 	smulbb	lr, lr, r6
 8020c14:	fb02 4203 	mla	r2, r2, r3, r4
 8020c18:	b2ad      	uxth	r5, r5
 8020c1a:	fb00 e303 	mla	r3, r0, r3, lr
 8020c1e:	b298      	uxth	r0, r3
 8020c20:	b294      	uxth	r4, r2
 8020c22:	1c6b      	adds	r3, r5, #1
 8020c24:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020c28:	1c62      	adds	r2, r4, #1
 8020c2a:	1c43      	adds	r3, r0, #1
 8020c2c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020c30:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020c34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020c38:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020c3c:	0952      	lsrs	r2, r2, #5
 8020c3e:	432b      	orrs	r3, r5
 8020c40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c44:	4313      	orrs	r3, r2
 8020c46:	800b      	strh	r3, [r1, #0]
 8020c48:	b003      	add	sp, #12
 8020c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c4e:	bf00      	nop
 8020c50:	0802926a 	.word	0x0802926a
 8020c54:	0802983a 	.word	0x0802983a
 8020c58:	080292ee 	.word	0x080292ee

08020c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c60:	ed2d 8b08 	vpush	{d8-d11}
 8020c64:	b09d      	sub	sp, #116	; 0x74
 8020c66:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8020c6a:	9219      	str	r2, [sp, #100]	; 0x64
 8020c6c:	9307      	str	r3, [sp, #28]
 8020c6e:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8020c70:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8020c74:	931a      	str	r3, [sp, #104]	; 0x68
 8020c76:	9117      	str	r1, [sp, #92]	; 0x5c
 8020c78:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8020c7c:	901b      	str	r0, [sp, #108]	; 0x6c
 8020c7e:	6850      	ldr	r0, [r2, #4]
 8020c80:	6812      	ldr	r2, [r2, #0]
 8020c82:	fb00 1303 	mla	r3, r0, r3, r1
 8020c86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020c8a:	930a      	str	r3, [sp, #40]	; 0x28
 8020c8c:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8020c8e:	681b      	ldr	r3, [r3, #0]
 8020c90:	9310      	str	r3, [sp, #64]	; 0x40
 8020c92:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8020c96:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c98:	eeb0 aa40 	vmov.f32	s20, s0
 8020c9c:	eef0 9a60 	vmov.f32	s19, s1
 8020ca0:	eeb0 9a41 	vmov.f32	s18, s2
 8020ca4:	eeb0 8a62 	vmov.f32	s16, s5
 8020ca8:	eef0 8a43 	vmov.f32	s17, s6
 8020cac:	eef0 ba44 	vmov.f32	s23, s8
 8020cb0:	eeb0 ba64 	vmov.f32	s22, s9
 8020cb4:	eef0 aa45 	vmov.f32	s21, s10
 8020cb8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020cba:	2b00      	cmp	r3, #0
 8020cbc:	dc03      	bgt.n	8020cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020cbe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020cc0:	2b00      	cmp	r3, #0
 8020cc2:	f340 8375 	ble.w	80213b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8020cc6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8020cc8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ccc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020cd0:	1e48      	subs	r0, r1, #1
 8020cd2:	1e57      	subs	r7, r2, #1
 8020cd4:	9b07      	ldr	r3, [sp, #28]
 8020cd6:	2b00      	cmp	r3, #0
 8020cd8:	f340 818e 	ble.w	8020ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8020cdc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020ce0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020ce4:	d406      	bmi.n	8020cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8020ce6:	4584      	cmp	ip, r0
 8020ce8:	da04      	bge.n	8020cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8020cea:	2b00      	cmp	r3, #0
 8020cec:	db02      	blt.n	8020cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8020cee:	42bb      	cmp	r3, r7
 8020cf0:	f2c0 8183 	blt.w	8020ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8020cf4:	f11c 0c01 	adds.w	ip, ip, #1
 8020cf8:	f100 8173 	bmi.w	8020fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020cfc:	4561      	cmp	r1, ip
 8020cfe:	f2c0 8170 	blt.w	8020fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020d02:	3301      	adds	r3, #1
 8020d04:	f100 816d 	bmi.w	8020fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020d08:	429a      	cmp	r2, r3
 8020d0a:	f2c0 816a 	blt.w	8020fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020d0e:	9b07      	ldr	r3, [sp, #28]
 8020d10:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020d12:	9318      	str	r3, [sp, #96]	; 0x60
 8020d14:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d16:	2b00      	cmp	r3, #0
 8020d18:	f340 818c 	ble.w	8021034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8020d1c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8020d1e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8020d20:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020d24:	689b      	ldr	r3, [r3, #8]
 8020d26:	1422      	asrs	r2, r4, #16
 8020d28:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020d2c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020d30:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020d34:	f100 81cd 	bmi.w	80210d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8020d38:	f103 38ff 	add.w	r8, r3, #4294967295
 8020d3c:	4542      	cmp	r2, r8
 8020d3e:	f280 81c8 	bge.w	80210d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8020d42:	f1bc 0f00 	cmp.w	ip, #0
 8020d46:	f2c0 81c4 	blt.w	80210d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8020d4a:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020d4e:	45c4      	cmp	ip, r8
 8020d50:	f280 81bf 	bge.w	80210d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8020d54:	b21b      	sxth	r3, r3
 8020d56:	fb0c 2203 	mla	r2, ip, r3, r2
 8020d5a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020d5c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020d60:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020d64:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8020d68:	2800      	cmp	r0, #0
 8020d6a:	f000 81a9 	beq.w	80210c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8020d6e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020d72:	950c      	str	r5, [sp, #48]	; 0x30
 8020d74:	0e2d      	lsrs	r5, r5, #24
 8020d76:	9513      	str	r5, [sp, #76]	; 0x4c
 8020d78:	b181      	cbz	r1, 8020d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8020d7a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8020d7e:	3b01      	subs	r3, #1
 8020d80:	009b      	lsls	r3, r3, #2
 8020d82:	3304      	adds	r3, #4
 8020d84:	eb08 0c03 	add.w	ip, r8, r3
 8020d88:	f858 3003 	ldr.w	r3, [r8, r3]
 8020d8c:	9308      	str	r3, [sp, #32]
 8020d8e:	0e1b      	lsrs	r3, r3, #24
 8020d90:	9311      	str	r3, [sp, #68]	; 0x44
 8020d92:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020d96:	930d      	str	r3, [sp, #52]	; 0x34
 8020d98:	0e1b      	lsrs	r3, r3, #24
 8020d9a:	9314      	str	r3, [sp, #80]	; 0x50
 8020d9c:	b280      	uxth	r0, r0
 8020d9e:	b289      	uxth	r1, r1
 8020da0:	fb00 f901 	mul.w	r9, r0, r1
 8020da4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020da8:	0100      	lsls	r0, r0, #4
 8020daa:	eba0 0809 	sub.w	r8, r0, r9
 8020dae:	b289      	uxth	r1, r1
 8020db0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020db4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020db6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020db8:	fa1f f888 	uxth.w	r8, r8
 8020dbc:	1a5b      	subs	r3, r3, r1
 8020dbe:	b29b      	uxth	r3, r3
 8020dc0:	fb08 f000 	mul.w	r0, r8, r0
 8020dc4:	fb03 000e 	mla	r0, r3, lr, r0
 8020dc8:	fb01 0005 	mla	r0, r1, r5, r0
 8020dcc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020dce:	fb09 0005 	mla	r0, r9, r5, r0
 8020dd2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020dd6:	2800      	cmp	r0, #0
 8020dd8:	f000 80fa 	beq.w	8020fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020ddc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020de0:	d01b      	beq.n	8020e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8020de2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8020de6:	fb0e fa0a 	mul.w	sl, lr, sl
 8020dea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020dee:	fb0e fe02 	mul.w	lr, lr, r2
 8020df2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020df6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020dfa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020dfe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020e02:	4452      	add	r2, sl
 8020e04:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020e08:	0a12      	lsrs	r2, r2, #8
 8020e0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020e12:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020e16:	ea42 020c 	orr.w	r2, r2, ip
 8020e1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020e1c:	2dff      	cmp	r5, #255	; 0xff
 8020e1e:	d021      	beq.n	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8020e20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020e22:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020e26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020e28:	fb05 fb0b 	mul.w	fp, r5, fp
 8020e2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020e2e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020e32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020e34:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020e38:	fb05 fa0a 	mul.w	sl, r5, sl
 8020e3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020e40:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020e44:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020e48:	44de      	add	lr, fp
 8020e4a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020e4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020e52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020e5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e5e:	ea4e 050a 	orr.w	r5, lr, sl
 8020e62:	950c      	str	r5, [sp, #48]	; 0x30
 8020e64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020e66:	2dff      	cmp	r5, #255	; 0xff
 8020e68:	d021      	beq.n	8020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8020e6a:	9d08      	ldr	r5, [sp, #32]
 8020e6c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020e70:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020e72:	fb05 fb0b 	mul.w	fp, r5, fp
 8020e76:	9d08      	ldr	r5, [sp, #32]
 8020e78:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020e7c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020e7e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020e82:	fb05 fa0a 	mul.w	sl, r5, sl
 8020e86:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020e8a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020e8e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020e92:	44de      	add	lr, fp
 8020e94:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020e98:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020e9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ea0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ea4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ea8:	ea4e 050a 	orr.w	r5, lr, sl
 8020eac:	9508      	str	r5, [sp, #32]
 8020eae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020eb0:	2dff      	cmp	r5, #255	; 0xff
 8020eb2:	d021      	beq.n	8020ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020eb4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020eb6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020eba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020ebc:	fb05 fb0b 	mul.w	fp, r5, fp
 8020ec0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020ec2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020ec6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020ec8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ecc:	fb05 fa0a 	mul.w	sl, r5, sl
 8020ed0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ed4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020ed8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020edc:	44de      	add	lr, fp
 8020ede:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ee2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ee6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020eea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020eee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ef2:	ea4e 050a 	orr.w	r5, lr, sl
 8020ef6:	950d      	str	r5, [sp, #52]	; 0x34
 8020ef8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020efa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020efe:	9d08      	ldr	r5, [sp, #32]
 8020f00:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8020f04:	fb08 fc0c 	mul.w	ip, r8, ip
 8020f08:	fb03 cc0e 	mla	ip, r3, lr, ip
 8020f0c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020f10:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020f12:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020f16:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020f1a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020f1c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020f20:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020f24:	fb08 f80e 	mul.w	r8, r8, lr
 8020f28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020f2c:	fb03 8202 	mla	r2, r3, r2, r8
 8020f30:	9b08      	ldr	r3, [sp, #32]
 8020f32:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020f34:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8020f38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020f3a:	fb01 220a 	mla	r2, r1, sl, r2
 8020f3e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8020f42:	fb09 2901 	mla	r9, r9, r1, r2
 8020f46:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020f48:	883b      	ldrh	r3, [r7, #0]
 8020f4a:	4342      	muls	r2, r0
 8020f4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f54:	1c50      	adds	r0, r2, #1
 8020f56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f5a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020f5e:	ea4c 0c09 	orr.w	ip, ip, r9
 8020f62:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020f66:	1219      	asrs	r1, r3, #8
 8020f68:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020f6c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020f70:	b2c0      	uxtb	r0, r0
 8020f72:	fb12 f205 	smulbb	r2, r2, r5
 8020f76:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020f7a:	fb01 2100 	mla	r1, r1, r0, r2
 8020f7e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020f82:	10da      	asrs	r2, r3, #3
 8020f84:	fa5f fc8c 	uxtb.w	ip, ip
 8020f88:	00db      	lsls	r3, r3, #3
 8020f8a:	fb1c fc05 	smulbb	ip, ip, r5
 8020f8e:	b2db      	uxtb	r3, r3
 8020f90:	b289      	uxth	r1, r1
 8020f92:	fb03 c300 	mla	r3, r3, r0, ip
 8020f96:	fa1f fc83 	uxth.w	ip, r3
 8020f9a:	1c4b      	adds	r3, r1, #1
 8020f9c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020fa0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020fa4:	fb1e fe05 	smulbb	lr, lr, r5
 8020fa8:	f10c 0301 	add.w	r3, ip, #1
 8020fac:	fb02 e200 	mla	r2, r2, r0, lr
 8020fb0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020fb4:	b292      	uxth	r2, r2
 8020fb6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020fba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020fbe:	430b      	orrs	r3, r1
 8020fc0:	1c51      	adds	r1, r2, #1
 8020fc2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020fc6:	0952      	lsrs	r2, r2, #5
 8020fc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020fcc:	4313      	orrs	r3, r2
 8020fce:	803b      	strh	r3, [r7, #0]
 8020fd0:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020fd2:	441c      	add	r4, r3
 8020fd4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8020fd6:	441e      	add	r6, r3
 8020fd8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020fda:	3b01      	subs	r3, #1
 8020fdc:	3702      	adds	r7, #2
 8020fde:	9318      	str	r3, [sp, #96]	; 0x60
 8020fe0:	e698      	b.n	8020d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020fe2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020fe4:	441c      	add	r4, r3
 8020fe6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8020fe8:	441e      	add	r6, r3
 8020fea:	9b07      	ldr	r3, [sp, #28]
 8020fec:	3b01      	subs	r3, #1
 8020fee:	9307      	str	r3, [sp, #28]
 8020ff0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ff2:	3302      	adds	r3, #2
 8020ff4:	930a      	str	r3, [sp, #40]	; 0x28
 8020ff6:	e66d      	b.n	8020cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020ff8:	d023      	beq.n	8021042 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020ffa:	9b07      	ldr	r3, [sp, #28]
 8020ffc:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8020ffe:	3b01      	subs	r3, #1
 8021000:	fb00 4003 	mla	r0, r0, r3, r4
 8021004:	1400      	asrs	r0, r0, #16
 8021006:	f53f ae82 	bmi.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802100a:	3901      	subs	r1, #1
 802100c:	4288      	cmp	r0, r1
 802100e:	f6bf ae7e 	bge.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8021012:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8021014:	fb01 6303 	mla	r3, r1, r3, r6
 8021018:	141b      	asrs	r3, r3, #16
 802101a:	f53f ae78 	bmi.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802101e:	3a01      	subs	r2, #1
 8021020:	4293      	cmp	r3, r2
 8021022:	f6bf ae74 	bge.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8021026:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802102a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802102e:	f1bb 0f00 	cmp.w	fp, #0
 8021032:	dc6c      	bgt.n	802110e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8021034:	9b07      	ldr	r3, [sp, #28]
 8021036:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802103a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802103c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021040:	930a      	str	r3, [sp, #40]	; 0x28
 8021042:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021044:	2b00      	cmp	r3, #0
 8021046:	f340 81b3 	ble.w	80213b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 802104a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802104e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021052:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021056:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021058:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802105c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021060:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021064:	eef0 6a48 	vmov.f32	s13, s16
 8021068:	ee69 7a27 	vmul.f32	s15, s18, s15
 802106c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021070:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021074:	ee16 4a90 	vmov	r4, s13
 8021078:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802107c:	eef0 6a68 	vmov.f32	s13, s17
 8021080:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021084:	ee18 2a10 	vmov	r2, s16
 8021088:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802108c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021090:	ee18 2a90 	vmov	r2, s17
 8021094:	9331      	str	r3, [sp, #196]	; 0xc4
 8021096:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021098:	fb92 f3f3 	sdiv	r3, r2, r3
 802109c:	9332      	str	r3, [sp, #200]	; 0xc8
 802109e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80210a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80210a2:	3b01      	subs	r3, #1
 80210a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80210a8:	9317      	str	r3, [sp, #92]	; 0x5c
 80210aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80210ac:	bf08      	it	eq
 80210ae:	4613      	moveq	r3, r2
 80210b0:	ee16 6a90 	vmov	r6, s13
 80210b4:	9307      	str	r3, [sp, #28]
 80210b6:	eef0 8a67 	vmov.f32	s17, s15
 80210ba:	eeb0 8a47 	vmov.f32	s16, s14
 80210be:	e5fb      	b.n	8020cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80210c0:	2900      	cmp	r1, #0
 80210c2:	f43f ae6b 	beq.w	8020d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80210c6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80210ca:	9308      	str	r3, [sp, #32]
 80210cc:	0e1b      	lsrs	r3, r3, #24
 80210ce:	9311      	str	r3, [sp, #68]	; 0x44
 80210d0:	e664      	b.n	8020d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80210d2:	f112 0801 	adds.w	r8, r2, #1
 80210d6:	f53f af7b 	bmi.w	8020fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80210da:	4543      	cmp	r3, r8
 80210dc:	f6ff af78 	blt.w	8020fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80210e0:	f11c 0801 	adds.w	r8, ip, #1
 80210e4:	f53f af74 	bmi.w	8020fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80210e8:	45c6      	cmp	lr, r8
 80210ea:	f6ff af71 	blt.w	8020fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80210ee:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80210f0:	9201      	str	r2, [sp, #4]
 80210f2:	fa0f f28e 	sxth.w	r2, lr
 80210f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80210fa:	e9cd c002 	strd	ip, r0, [sp, #8]
 80210fe:	9200      	str	r2, [sp, #0]
 8021100:	b21b      	sxth	r3, r3
 8021102:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021104:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021106:	4639      	mov	r1, r7
 8021108:	f7ff fc48 	bl	802099c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802110c:	e760      	b.n	8020fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802110e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8021110:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021112:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021116:	1427      	asrs	r7, r4, #16
 8021118:	1433      	asrs	r3, r6, #16
 802111a:	fb01 7303 	mla	r3, r1, r3, r7
 802111e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8021122:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021126:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802112a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802112e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021132:	2a00      	cmp	r2, #0
 8021134:	f000 8133 	beq.w	802139e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8021138:	687d      	ldr	r5, [r7, #4]
 802113a:	950e      	str	r5, [sp, #56]	; 0x38
 802113c:	0e2d      	lsrs	r5, r5, #24
 802113e:	9515      	str	r5, [sp, #84]	; 0x54
 8021140:	b178      	cbz	r0, 8021162 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021142:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8021146:	3901      	subs	r1, #1
 8021148:	0089      	lsls	r1, r1, #2
 802114a:	3104      	adds	r1, #4
 802114c:	eb07 0e01 	add.w	lr, r7, r1
 8021150:	5879      	ldr	r1, [r7, r1]
 8021152:	9109      	str	r1, [sp, #36]	; 0x24
 8021154:	0e09      	lsrs	r1, r1, #24
 8021156:	9112      	str	r1, [sp, #72]	; 0x48
 8021158:	f8de 1004 	ldr.w	r1, [lr, #4]
 802115c:	910f      	str	r1, [sp, #60]	; 0x3c
 802115e:	0e09      	lsrs	r1, r1, #24
 8021160:	9116      	str	r1, [sp, #88]	; 0x58
 8021162:	b292      	uxth	r2, r2
 8021164:	b280      	uxth	r0, r0
 8021166:	fb02 f800 	mul.w	r8, r2, r0
 802116a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802116e:	0112      	lsls	r2, r2, #4
 8021170:	eba2 0e08 	sub.w	lr, r2, r8
 8021174:	b280      	uxth	r0, r0
 8021176:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802117a:	9915      	ldr	r1, [sp, #84]	; 0x54
 802117c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802117e:	fa1f fe8e 	uxth.w	lr, lr
 8021182:	1a12      	subs	r2, r2, r0
 8021184:	b292      	uxth	r2, r2
 8021186:	fb0e f101 	mul.w	r1, lr, r1
 802118a:	fb02 110c 	mla	r1, r2, ip, r1
 802118e:	fb00 1105 	mla	r1, r0, r5, r1
 8021192:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8021194:	fb08 1105 	mla	r1, r8, r5, r1
 8021198:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802119c:	2900      	cmp	r1, #0
 802119e:	f000 80f5 	beq.w	802138c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80211a2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80211a6:	d019      	beq.n	80211dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80211a8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80211ac:	fb0c fa0a 	mul.w	sl, ip, sl
 80211b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80211b4:	fb0c fc03 	mul.w	ip, ip, r3
 80211b8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80211bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80211c0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80211c4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80211c8:	4453      	add	r3, sl
 80211ca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80211ce:	0a1b      	lsrs	r3, r3, #8
 80211d0:	0a3f      	lsrs	r7, r7, #8
 80211d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80211d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80211da:	433b      	orrs	r3, r7
 80211dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80211de:	2dff      	cmp	r5, #255	; 0xff
 80211e0:	d020      	beq.n	8021224 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80211e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80211e4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80211e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80211ea:	436f      	muls	r7, r5
 80211ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80211ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80211f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80211f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80211f8:	fb05 fa0a 	mul.w	sl, r5, sl
 80211fc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021204:	44bc      	add	ip, r7
 8021206:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802120a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802120e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021212:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021216:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802121a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802121e:	ea4c 050a 	orr.w	r5, ip, sl
 8021222:	950e      	str	r5, [sp, #56]	; 0x38
 8021224:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021226:	2dff      	cmp	r5, #255	; 0xff
 8021228:	d020      	beq.n	802126c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802122a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802122c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021230:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021232:	436f      	muls	r7, r5
 8021234:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021236:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802123a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802123c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021240:	fb05 fa0a 	mul.w	sl, r5, sl
 8021244:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021248:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802124c:	44bc      	add	ip, r7
 802124e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021252:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021256:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802125a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802125e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021262:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021266:	ea4c 050a 	orr.w	r5, ip, sl
 802126a:	9509      	str	r5, [sp, #36]	; 0x24
 802126c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802126e:	2dff      	cmp	r5, #255	; 0xff
 8021270:	d020      	beq.n	80212b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021272:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021274:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021278:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802127a:	436f      	muls	r7, r5
 802127c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802127e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021282:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8021284:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021288:	fb05 fa0a 	mul.w	sl, r5, sl
 802128c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021290:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021294:	44bc      	add	ip, r7
 8021296:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802129a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802129e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80212ae:	ea4c 050a 	orr.w	r5, ip, sl
 80212b2:	950f      	str	r5, [sp, #60]	; 0x3c
 80212b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80212b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80212ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80212bc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80212c0:	fb0e f707 	mul.w	r7, lr, r7
 80212c4:	fb02 770c 	mla	r7, r2, ip, r7
 80212c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80212cc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80212ce:	fb00 770c 	mla	r7, r0, ip, r7
 80212d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80212d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80212d8:	fb08 770c 	mla	r7, r8, ip, r7
 80212dc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80212e0:	fb0e fe0c 	mul.w	lr, lr, ip
 80212e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80212e8:	fb02 e303 	mla	r3, r2, r3, lr
 80212ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80212ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80212f0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80212f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80212f6:	fb00 330a 	mla	r3, r0, sl, r3
 80212fa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80212fe:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021302:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021304:	f8b9 0000 	ldrh.w	r0, [r9]
 8021308:	4359      	muls	r1, r3
 802130a:	0a3f      	lsrs	r7, r7, #8
 802130c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021310:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021314:	1c4b      	adds	r3, r1, #1
 8021316:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802131a:	ea47 070c 	orr.w	r7, r7, ip
 802131e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021322:	1202      	asrs	r2, r0, #8
 8021324:	0c3b      	lsrs	r3, r7, #16
 8021326:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802132a:	b2c9      	uxtb	r1, r1
 802132c:	fb13 f305 	smulbb	r3, r3, r5
 8021330:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021334:	fb02 3201 	mla	r2, r2, r1, r3
 8021338:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802133c:	10c3      	asrs	r3, r0, #3
 802133e:	b2ff      	uxtb	r7, r7
 8021340:	00c0      	lsls	r0, r0, #3
 8021342:	b2c0      	uxtb	r0, r0
 8021344:	fb17 f705 	smulbb	r7, r7, r5
 8021348:	fb00 7001 	mla	r0, r0, r1, r7
 802134c:	b292      	uxth	r2, r2
 802134e:	fb1c fc05 	smulbb	ip, ip, r5
 8021352:	b280      	uxth	r0, r0
 8021354:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021358:	fb03 c301 	mla	r3, r3, r1, ip
 802135c:	1c51      	adds	r1, r2, #1
 802135e:	f100 0c01 	add.w	ip, r0, #1
 8021362:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021366:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802136a:	b29b      	uxth	r3, r3
 802136c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021370:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021374:	ea4c 0202 	orr.w	r2, ip, r2
 8021378:	f103 0c01 	add.w	ip, r3, #1
 802137c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021380:	095b      	lsrs	r3, r3, #5
 8021382:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021386:	431a      	orrs	r2, r3
 8021388:	f8a9 2000 	strh.w	r2, [r9]
 802138c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802138e:	441c      	add	r4, r3
 8021390:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8021392:	f109 0902 	add.w	r9, r9, #2
 8021396:	441e      	add	r6, r3
 8021398:	f10b 3bff 	add.w	fp, fp, #4294967295
 802139c:	e647      	b.n	802102e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802139e:	2800      	cmp	r0, #0
 80213a0:	f43f aedf 	beq.w	8021162 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80213a4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80213a8:	9109      	str	r1, [sp, #36]	; 0x24
 80213aa:	0e09      	lsrs	r1, r1, #24
 80213ac:	9112      	str	r1, [sp, #72]	; 0x48
 80213ae:	e6d8      	b.n	8021162 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80213b0:	b01d      	add	sp, #116	; 0x74
 80213b2:	ecbd 8b08 	vpop	{d8-d11}
 80213b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080213bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80213bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213c0:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 80213c4:	fb04 5603 	mla	r6, r4, r3, r5
 80213c8:	2c00      	cmp	r4, #0
 80213ca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80213ce:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 80213d2:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 80213d6:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 80213da:	db37      	blt.n	802144c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 80213dc:	45a6      	cmp	lr, r4
 80213de:	dd35      	ble.n	802144c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 80213e0:	2d00      	cmp	r5, #0
 80213e2:	db31      	blt.n	8021448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80213e4:	42ab      	cmp	r3, r5
 80213e6:	dd2f      	ble.n	8021448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80213e8:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80213ec:	1c6e      	adds	r6, r5, #1
 80213ee:	d430      	bmi.n	8021452 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 80213f0:	42b3      	cmp	r3, r6
 80213f2:	dd2e      	ble.n	8021452 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 80213f4:	b378      	cbz	r0, 8021456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 80213f6:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80213fa:	3401      	adds	r4, #1
 80213fc:	d42f      	bmi.n	802145e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 80213fe:	45a6      	cmp	lr, r4
 8021400:	dd2d      	ble.n	802145e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8021402:	b37f      	cbz	r7, 8021464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8021404:	2d00      	cmp	r5, #0
 8021406:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 802140a:	db26      	blt.n	802145a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 802140c:	42ab      	cmp	r3, r5
 802140e:	dd24      	ble.n	802145a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8021410:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021414:	3501      	adds	r5, #1
 8021416:	d428      	bmi.n	802146a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8021418:	42ab      	cmp	r3, r5
 802141a:	dd26      	ble.n	802146a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 802141c:	b338      	cbz	r0, 802146e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 802141e:	f8de 3004 	ldr.w	r3, [lr, #4]
 8021422:	280f      	cmp	r0, #15
 8021424:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8021428:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 802142c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021430:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8021434:	d801      	bhi.n	802143a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8021436:	2f0f      	cmp	r7, #15
 8021438:	d91b      	bls.n	8021472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 802143a:	4b87      	ldr	r3, [pc, #540]	; (8021658 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 802143c:	4a87      	ldr	r2, [pc, #540]	; (802165c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 802143e:	4888      	ldr	r0, [pc, #544]	; (8021660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8021440:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8021444:	f001 fd60 	bl	8022f08 <__assert_func>
 8021448:	2200      	movs	r2, #0
 802144a:	e7cf      	b.n	80213ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 802144c:	2600      	movs	r6, #0
 802144e:	4632      	mov	r2, r6
 8021450:	e7d3      	b.n	80213fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8021452:	2600      	movs	r6, #0
 8021454:	e7d1      	b.n	80213fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8021456:	4606      	mov	r6, r0
 8021458:	e7cf      	b.n	80213fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 802145a:	2400      	movs	r4, #0
 802145c:	e7da      	b.n	8021414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 802145e:	2300      	movs	r3, #0
 8021460:	461c      	mov	r4, r3
 8021462:	e7de      	b.n	8021422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8021464:	463b      	mov	r3, r7
 8021466:	463c      	mov	r4, r7
 8021468:	e7db      	b.n	8021422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 802146a:	2300      	movs	r3, #0
 802146c:	e7d9      	b.n	8021422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 802146e:	4603      	mov	r3, r0
 8021470:	e7d7      	b.n	8021422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8021472:	b280      	uxth	r0, r0
 8021474:	b2bf      	uxth	r7, r7
 8021476:	fb07 fe00 	mul.w	lr, r7, r0
 802147a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 802147e:	0100      	lsls	r0, r0, #4
 8021480:	eba0 0c0e 	sub.w	ip, r0, lr
 8021484:	b2bf      	uxth	r7, r7
 8021486:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 802148a:	fa1f fc8c 	uxth.w	ip, ip
 802148e:	1bed      	subs	r5, r5, r7
 8021490:	b2ad      	uxth	r5, r5
 8021492:	fb0c f00a 	mul.w	r0, ip, sl
 8021496:	fb0b 0005 	mla	r0, fp, r5, r0
 802149a:	fb07 0009 	mla	r0, r7, r9, r0
 802149e:	fb0e 0008 	mla	r0, lr, r8, r0
 80214a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80214a6:	9001      	str	r0, [sp, #4]
 80214a8:	2800      	cmp	r0, #0
 80214aa:	f000 80d1 	beq.w	8021650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 80214ae:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80214b2:	d018      	beq.n	80214e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 80214b4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80214b8:	fb0b f000 	mul.w	r0, fp, r0
 80214bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80214c0:	fb0b fb02 	mul.w	fp, fp, r2
 80214c4:	0a02      	lsrs	r2, r0, #8
 80214c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80214ca:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80214ce:	4402      	add	r2, r0
 80214d0:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80214d4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80214d8:	0a12      	lsrs	r2, r2, #8
 80214da:	0a00      	lsrs	r0, r0, #8
 80214dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80214e0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80214e4:	4302      	orrs	r2, r0
 80214e6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80214ea:	d01a      	beq.n	8021522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 80214ec:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80214f0:	fb0a f000 	mul.w	r0, sl, r0
 80214f4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80214f8:	fb0a fa06 	mul.w	sl, sl, r6
 80214fc:	0a06      	lsrs	r6, r0, #8
 80214fe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8021502:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8021506:	4406      	add	r6, r0
 8021508:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 802150c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8021510:	0a36      	lsrs	r6, r6, #8
 8021512:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021516:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802151a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802151e:	ea46 060a 	orr.w	r6, r6, sl
 8021522:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021526:	d01b      	beq.n	8021560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8021528:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 802152c:	fb09 fa0a 	mul.w	sl, r9, sl
 8021530:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021534:	fb09 f004 	mul.w	r0, r9, r4
 8021538:	ea4f 241a 	mov.w	r4, sl, lsr #8
 802153c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021540:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021544:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8021548:	4454      	add	r4, sl
 802154a:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 802154e:	0a24      	lsrs	r4, r4, #8
 8021550:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021554:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021558:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802155c:	ea44 0409 	orr.w	r4, r4, r9
 8021560:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021564:	d01b      	beq.n	802159e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 8021566:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 802156a:	fb08 f909 	mul.w	r9, r8, r9
 802156e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021572:	fb08 f003 	mul.w	r0, r8, r3
 8021576:	ea4f 2319 	mov.w	r3, r9, lsr #8
 802157a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802157e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8021582:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8021586:	444b      	add	r3, r9
 8021588:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 802158c:	0a1b      	lsrs	r3, r3, #8
 802158e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021592:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021596:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802159a:	ea43 0308 	orr.w	r3, r3, r8
 802159e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80215a2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80215a6:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80215aa:	fb0c f808 	mul.w	r8, ip, r8
 80215ae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80215b2:	fb0c f606 	mul.w	r6, ip, r6
 80215b6:	fb05 8909 	mla	r9, r5, r9, r8
 80215ba:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80215be:	fb05 6502 	mla	r5, r5, r2, r6
 80215c2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80215c6:	fb07 9908 	mla	r9, r7, r8, r9
 80215ca:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80215ce:	fb07 5704 	mla	r7, r7, r4, r5
 80215d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80215d6:	8808      	ldrh	r0, [r1, #0]
 80215d8:	fb0e 9808 	mla	r8, lr, r8, r9
 80215dc:	fb0e 7e03 	mla	lr, lr, r3, r7
 80215e0:	9b01      	ldr	r3, [sp, #4]
 80215e2:	43da      	mvns	r2, r3
 80215e4:	1203      	asrs	r3, r0, #8
 80215e6:	b2d2      	uxtb	r2, r2
 80215e8:	10c4      	asrs	r4, r0, #3
 80215ea:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80215ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80215f2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80215f6:	00c0      	lsls	r0, r0, #3
 80215f8:	4353      	muls	r3, r2
 80215fa:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80215fe:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8021602:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021606:	b2c0      	uxtb	r0, r0
 8021608:	ea48 0e0e 	orr.w	lr, r8, lr
 802160c:	4354      	muls	r4, r2
 802160e:	4350      	muls	r0, r2
 8021610:	1c5a      	adds	r2, r3, #1
 8021612:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021616:	ea4f 431e 	mov.w	r3, lr, lsr #16
 802161a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802161e:	1c62      	adds	r2, r4, #1
 8021620:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021624:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8021628:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802162c:	021b      	lsls	r3, r3, #8
 802162e:	00d2      	lsls	r2, r2, #3
 8021630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021634:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021638:	4313      	orrs	r3, r2
 802163a:	1c42      	adds	r2, r0, #1
 802163c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021640:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 8021644:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 8021648:	ea4e 0e03 	orr.w	lr, lr, r3
 802164c:	f8a1 e000 	strh.w	lr, [r1]
 8021650:	b003      	add	sp, #12
 8021652:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021656:	bf00      	nop
 8021658:	0802926a 	.word	0x0802926a
 802165c:	0802983a 	.word	0x0802983a
 8021660:	080292ee 	.word	0x080292ee

08021664 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021668:	ed2d 8b08 	vpush	{d8-d11}
 802166c:	b09b      	sub	sp, #108	; 0x6c
 802166e:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8021672:	9218      	str	r2, [sp, #96]	; 0x60
 8021674:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8021676:	9116      	str	r1, [sp, #88]	; 0x58
 8021678:	9307      	str	r3, [sp, #28]
 802167a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 802167e:	9019      	str	r0, [sp, #100]	; 0x64
 8021680:	6850      	ldr	r0, [r2, #4]
 8021682:	6812      	ldr	r2, [r2, #0]
 8021684:	fb00 1303 	mla	r3, r0, r3, r1
 8021688:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802168c:	930a      	str	r3, [sp, #40]	; 0x28
 802168e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8021690:	681b      	ldr	r3, [r3, #0]
 8021692:	930f      	str	r3, [sp, #60]	; 0x3c
 8021694:	eeb0 aa40 	vmov.f32	s20, s0
 8021698:	eef0 9a60 	vmov.f32	s19, s1
 802169c:	eeb0 9a41 	vmov.f32	s18, s2
 80216a0:	eeb0 8a62 	vmov.f32	s16, s5
 80216a4:	eef0 8a43 	vmov.f32	s17, s6
 80216a8:	eef0 ba44 	vmov.f32	s23, s8
 80216ac:	eeb0 ba64 	vmov.f32	s22, s9
 80216b0:	eef0 aa45 	vmov.f32	s21, s10
 80216b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80216b6:	2b00      	cmp	r3, #0
 80216b8:	dc03      	bgt.n	80216c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80216ba:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80216bc:	2b00      	cmp	r3, #0
 80216be:	f340 8386 	ble.w	8021dce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80216c2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80216c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80216c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80216cc:	1e48      	subs	r0, r1, #1
 80216ce:	1e57      	subs	r7, r2, #1
 80216d0:	9b07      	ldr	r3, [sp, #28]
 80216d2:	2b00      	cmp	r3, #0
 80216d4:	f340 8166 	ble.w	80219a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 80216d8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80216dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80216e0:	d406      	bmi.n	80216f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80216e2:	4584      	cmp	ip, r0
 80216e4:	da04      	bge.n	80216f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80216e6:	2b00      	cmp	r3, #0
 80216e8:	db02      	blt.n	80216f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80216ea:	42bb      	cmp	r3, r7
 80216ec:	f2c0 815b 	blt.w	80219a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80216f0:	f11c 0c01 	adds.w	ip, ip, #1
 80216f4:	f100 814b 	bmi.w	802198e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80216f8:	4561      	cmp	r1, ip
 80216fa:	f2c0 8148 	blt.w	802198e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80216fe:	3301      	adds	r3, #1
 8021700:	f100 8145 	bmi.w	802198e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8021704:	429a      	cmp	r2, r3
 8021706:	f2c0 8142 	blt.w	802198e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802170a:	9b07      	ldr	r3, [sp, #28]
 802170c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802170e:	9317      	str	r3, [sp, #92]	; 0x5c
 8021710:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021712:	2b00      	cmp	r3, #0
 8021714:	f340 8165 	ble.w	80219e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8021718:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 802171a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802171c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021720:	689b      	ldr	r3, [r3, #8]
 8021722:	1422      	asrs	r2, r4, #16
 8021724:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021728:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802172c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021730:	f100 81d5 	bmi.w	8021ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8021734:	f103 38ff 	add.w	r8, r3, #4294967295
 8021738:	4542      	cmp	r2, r8
 802173a:	f280 81d0 	bge.w	8021ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 802173e:	f1bc 0f00 	cmp.w	ip, #0
 8021742:	f2c0 81cc 	blt.w	8021ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8021746:	f10e 38ff 	add.w	r8, lr, #4294967295
 802174a:	45c4      	cmp	ip, r8
 802174c:	f280 81c7 	bge.w	8021ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8021750:	b21b      	sxth	r3, r3
 8021752:	fb0c 2203 	mla	r2, ip, r3, r2
 8021756:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021758:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802175c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021760:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021764:	2900      	cmp	r1, #0
 8021766:	f000 8182 	beq.w	8021a6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 802176a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802176e:	950b      	str	r5, [sp, #44]	; 0x2c
 8021770:	0e2d      	lsrs	r5, r5, #24
 8021772:	9512      	str	r5, [sp, #72]	; 0x48
 8021774:	b180      	cbz	r0, 8021798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8021776:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802177a:	3b01      	subs	r3, #1
 802177c:	009b      	lsls	r3, r3, #2
 802177e:	3304      	adds	r3, #4
 8021780:	eb08 0c03 	add.w	ip, r8, r3
 8021784:	f858 3003 	ldr.w	r3, [r8, r3]
 8021788:	9308      	str	r3, [sp, #32]
 802178a:	0e1b      	lsrs	r3, r3, #24
 802178c:	9310      	str	r3, [sp, #64]	; 0x40
 802178e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8021792:	930c      	str	r3, [sp, #48]	; 0x30
 8021794:	0e1b      	lsrs	r3, r3, #24
 8021796:	9313      	str	r3, [sp, #76]	; 0x4c
 8021798:	b289      	uxth	r1, r1
 802179a:	b280      	uxth	r0, r0
 802179c:	fb01 f900 	mul.w	r9, r1, r0
 80217a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80217a4:	0109      	lsls	r1, r1, #4
 80217a6:	eba1 0809 	sub.w	r8, r1, r9
 80217aa:	b280      	uxth	r0, r0
 80217ac:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 80217b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80217b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80217b4:	fa1f f888 	uxth.w	r8, r8
 80217b8:	1a09      	subs	r1, r1, r0
 80217ba:	b289      	uxth	r1, r1
 80217bc:	fb08 f303 	mul.w	r3, r8, r3
 80217c0:	fb01 330e 	mla	r3, r1, lr, r3
 80217c4:	fb00 3305 	mla	r3, r0, r5, r3
 80217c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80217ca:	fb09 3305 	mla	r3, r9, r5, r3
 80217ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80217d2:	2b00      	cmp	r3, #0
 80217d4:	f000 80d2 	beq.w	802197c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80217d8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80217dc:	d01b      	beq.n	8021816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 80217de:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80217e2:	fb0e fa0a 	mul.w	sl, lr, sl
 80217e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80217ea:	fb0e fe02 	mul.w	lr, lr, r2
 80217ee:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80217f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80217f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80217fa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80217fe:	4452      	add	r2, sl
 8021800:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021804:	0a12      	lsrs	r2, r2, #8
 8021806:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802180a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802180e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021812:	ea42 020c 	orr.w	r2, r2, ip
 8021816:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021818:	2dff      	cmp	r5, #255	; 0xff
 802181a:	d021      	beq.n	8021860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802181c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802181e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021822:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021824:	fb05 fb0b 	mul.w	fp, r5, fp
 8021828:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802182a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802182e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021830:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021834:	fb05 fa0a 	mul.w	sl, r5, sl
 8021838:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802183c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021840:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021844:	44de      	add	lr, fp
 8021846:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802184a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802184e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021852:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021856:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802185a:	ea4e 050a 	orr.w	r5, lr, sl
 802185e:	950b      	str	r5, [sp, #44]	; 0x2c
 8021860:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021862:	2dff      	cmp	r5, #255	; 0xff
 8021864:	d021      	beq.n	80218aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8021866:	9d08      	ldr	r5, [sp, #32]
 8021868:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802186c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802186e:	fb05 fb0b 	mul.w	fp, r5, fp
 8021872:	9d08      	ldr	r5, [sp, #32]
 8021874:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8021878:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802187a:	fb05 fa0e 	mul.w	sl, r5, lr
 802187e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021882:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021886:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802188a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802188e:	44de      	add	lr, fp
 8021890:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021894:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021898:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802189c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80218a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218a4:	ea4e 050a 	orr.w	r5, lr, sl
 80218a8:	9508      	str	r5, [sp, #32]
 80218aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80218ac:	2dff      	cmp	r5, #255	; 0xff
 80218ae:	d021      	beq.n	80218f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80218b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80218b2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80218b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80218b8:	fb05 fb0b 	mul.w	fp, r5, fp
 80218bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80218be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80218c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80218c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80218c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80218cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80218d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80218d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80218d8:	44de      	add	lr, fp
 80218da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80218de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80218e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80218ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218ee:	ea4e 050a 	orr.w	r5, lr, sl
 80218f2:	950c      	str	r5, [sp, #48]	; 0x30
 80218f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80218f6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80218fa:	9d08      	ldr	r5, [sp, #32]
 80218fc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8021900:	fb08 fc0c 	mul.w	ip, r8, ip
 8021904:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021908:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802190c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802190e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021912:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021916:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021918:	fb09 cc0e 	mla	ip, r9, lr, ip
 802191c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8021920:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021924:	fb08 f80e 	mul.w	r8, r8, lr
 8021928:	fb01 8202 	mla	r2, r1, r2, r8
 802192c:	9908      	ldr	r1, [sp, #32]
 802192e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021932:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021934:	fb00 220a 	mla	r2, r0, sl, r2
 8021938:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802193c:	fb09 2900 	mla	r9, r9, r0, r2
 8021940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021944:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021948:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802194c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021950:	ea4c 0c09 	orr.w	ip, ip, r9
 8021954:	2bff      	cmp	r3, #255	; 0xff
 8021956:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802195a:	f040 8091 	bne.w	8021a80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802195e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8021962:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8021966:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802196a:	f022 0207 	bic.w	r2, r2, #7
 802196e:	431a      	orrs	r2, r3
 8021970:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021974:	ea4c 0c02 	orr.w	ip, ip, r2
 8021978:	f8a7 c000 	strh.w	ip, [r7]
 802197c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 802197e:	441c      	add	r4, r3
 8021980:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021982:	441e      	add	r6, r3
 8021984:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021986:	3b01      	subs	r3, #1
 8021988:	3702      	adds	r7, #2
 802198a:	9317      	str	r3, [sp, #92]	; 0x5c
 802198c:	e6c0      	b.n	8021710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802198e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8021990:	441c      	add	r4, r3
 8021992:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021994:	441e      	add	r6, r3
 8021996:	9b07      	ldr	r3, [sp, #28]
 8021998:	3b01      	subs	r3, #1
 802199a:	9307      	str	r3, [sp, #28]
 802199c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802199e:	3302      	adds	r3, #2
 80219a0:	930a      	str	r3, [sp, #40]	; 0x28
 80219a2:	e695      	b.n	80216d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80219a4:	d024      	beq.n	80219f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80219a6:	9b07      	ldr	r3, [sp, #28]
 80219a8:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80219aa:	3b01      	subs	r3, #1
 80219ac:	fb00 4003 	mla	r0, r0, r3, r4
 80219b0:	1400      	asrs	r0, r0, #16
 80219b2:	f53f aeaa 	bmi.w	802170a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80219b6:	3901      	subs	r1, #1
 80219b8:	4288      	cmp	r0, r1
 80219ba:	f6bf aea6 	bge.w	802170a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80219be:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80219c0:	fb01 6303 	mla	r3, r1, r3, r6
 80219c4:	141b      	asrs	r3, r3, #16
 80219c6:	f53f aea0 	bmi.w	802170a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80219ca:	3a01      	subs	r2, #1
 80219cc:	4293      	cmp	r3, r2
 80219ce:	f6bf ae9c 	bge.w	802170a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80219d2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80219d6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80219da:	f1bb 0f00 	cmp.w	fp, #0
 80219de:	f300 809a 	bgt.w	8021b16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 80219e2:	9b07      	ldr	r3, [sp, #28]
 80219e4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80219e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80219ea:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80219ee:	930a      	str	r3, [sp, #40]	; 0x28
 80219f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80219f2:	2b00      	cmp	r3, #0
 80219f4:	f340 81eb 	ble.w	8021dce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80219f8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80219fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021a00:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021a04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a06:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021a0a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021a0e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021a12:	eef0 6a48 	vmov.f32	s13, s16
 8021a16:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021a1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a1e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021a22:	ee16 4a90 	vmov	r4, s13
 8021a26:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021a2a:	eef0 6a68 	vmov.f32	s13, s17
 8021a2e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021a32:	ee18 2a10 	vmov	r2, s16
 8021a36:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a3e:	ee18 2a90 	vmov	r2, s17
 8021a42:	932f      	str	r3, [sp, #188]	; 0xbc
 8021a44:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a46:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a4a:	9330      	str	r3, [sp, #192]	; 0xc0
 8021a4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021a4e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021a50:	3b01      	subs	r3, #1
 8021a52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a56:	9316      	str	r3, [sp, #88]	; 0x58
 8021a58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a5a:	bf08      	it	eq
 8021a5c:	4613      	moveq	r3, r2
 8021a5e:	ee16 6a90 	vmov	r6, s13
 8021a62:	9307      	str	r3, [sp, #28]
 8021a64:	eef0 8a67 	vmov.f32	s17, s15
 8021a68:	eeb0 8a47 	vmov.f32	s16, s14
 8021a6c:	e622      	b.n	80216b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8021a6e:	2800      	cmp	r0, #0
 8021a70:	f43f ae92 	beq.w	8021798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8021a74:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021a78:	9308      	str	r3, [sp, #32]
 8021a7a:	0e1b      	lsrs	r3, r3, #24
 8021a7c:	9310      	str	r3, [sp, #64]	; 0x40
 8021a7e:	e68b      	b.n	8021798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8021a80:	8839      	ldrh	r1, [r7, #0]
 8021a82:	4dd5      	ldr	r5, [pc, #852]	; (8021dd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8021a84:	43db      	mvns	r3, r3
 8021a86:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8021a8a:	fa5f f883 	uxtb.w	r8, r3
 8021a8e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8021a92:	fb0e fe08 	mul.w	lr, lr, r8
 8021a96:	10c8      	asrs	r0, r1, #3
 8021a98:	00cb      	lsls	r3, r1, #3
 8021a9a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021a9e:	f10e 0101 	add.w	r1, lr, #1
 8021aa2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8021aa6:	fb00 f008 	mul.w	r0, r0, r8
 8021aaa:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8021aae:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8021ab2:	f100 0e01 	add.w	lr, r0, #1
 8021ab6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8021aba:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021abe:	b2db      	uxtb	r3, r3
 8021ac0:	b2c9      	uxtb	r1, r1
 8021ac2:	00d2      	lsls	r2, r2, #3
 8021ac4:	fb03 f308 	mul.w	r3, r3, r8
 8021ac8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8021acc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ad0:	430a      	orrs	r2, r1
 8021ad2:	1c59      	adds	r1, r3, #1
 8021ad4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021ad8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021adc:	e748      	b.n	8021970 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8021ade:	f112 0801 	adds.w	r8, r2, #1
 8021ae2:	f53f af4b 	bmi.w	802197c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021ae6:	4543      	cmp	r3, r8
 8021ae8:	f6ff af48 	blt.w	802197c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021aec:	f11c 0801 	adds.w	r8, ip, #1
 8021af0:	f53f af44 	bmi.w	802197c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021af4:	45c6      	cmp	lr, r8
 8021af6:	f6ff af41 	blt.w	802197c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021afa:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8021afe:	fa0f f28e 	sxth.w	r2, lr
 8021b02:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8021b06:	9200      	str	r2, [sp, #0]
 8021b08:	b21b      	sxth	r3, r3
 8021b0a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021b0c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021b0e:	4639      	mov	r1, r7
 8021b10:	f7ff fc54 	bl	80213bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8021b14:	e732      	b.n	802197c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021b16:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8021b18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021b1a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8021b1e:	1421      	asrs	r1, r4, #16
 8021b20:	1433      	asrs	r3, r6, #16
 8021b22:	fb07 1303 	mla	r3, r7, r3, r1
 8021b26:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8021b28:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8021b2c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021b30:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021b34:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021b38:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021b3c:	2a00      	cmp	r2, #0
 8021b3e:	f000 8107 	beq.w	8021d50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 8021b42:	684d      	ldr	r5, [r1, #4]
 8021b44:	950d      	str	r5, [sp, #52]	; 0x34
 8021b46:	0e2d      	lsrs	r5, r5, #24
 8021b48:	9514      	str	r5, [sp, #80]	; 0x50
 8021b4a:	b178      	cbz	r0, 8021b6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8021b4c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8021b50:	3f01      	subs	r7, #1
 8021b52:	00bf      	lsls	r7, r7, #2
 8021b54:	3704      	adds	r7, #4
 8021b56:	eb01 0e07 	add.w	lr, r1, r7
 8021b5a:	59c9      	ldr	r1, [r1, r7]
 8021b5c:	9109      	str	r1, [sp, #36]	; 0x24
 8021b5e:	0e09      	lsrs	r1, r1, #24
 8021b60:	9111      	str	r1, [sp, #68]	; 0x44
 8021b62:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021b66:	910e      	str	r1, [sp, #56]	; 0x38
 8021b68:	0e09      	lsrs	r1, r1, #24
 8021b6a:	9115      	str	r1, [sp, #84]	; 0x54
 8021b6c:	b292      	uxth	r2, r2
 8021b6e:	b280      	uxth	r0, r0
 8021b70:	fb02 f900 	mul.w	r9, r2, r0
 8021b74:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021b78:	0112      	lsls	r2, r2, #4
 8021b7a:	eba2 0e09 	sub.w	lr, r2, r9
 8021b7e:	b280      	uxth	r0, r0
 8021b80:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021b84:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021b86:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021b88:	fa1f fe8e 	uxth.w	lr, lr
 8021b8c:	1a09      	subs	r1, r1, r0
 8021b8e:	b289      	uxth	r1, r1
 8021b90:	fb0e f202 	mul.w	r2, lr, r2
 8021b94:	fb01 220c 	mla	r2, r1, ip, r2
 8021b98:	fb00 2205 	mla	r2, r0, r5, r2
 8021b9c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021b9e:	fb09 2205 	mla	r2, r9, r5, r2
 8021ba2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021ba6:	2a00      	cmp	r2, #0
 8021ba8:	f000 80c9 	beq.w	8021d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8021bac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021bb0:	d019      	beq.n	8021be6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8021bb2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021bb6:	fb0c fa0a 	mul.w	sl, ip, sl
 8021bba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021bbe:	fb0c fc03 	mul.w	ip, ip, r3
 8021bc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021bc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021bca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021bce:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021bd2:	4453      	add	r3, sl
 8021bd4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021bd8:	0a1b      	lsrs	r3, r3, #8
 8021bda:	0a3f      	lsrs	r7, r7, #8
 8021bdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021be0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021be4:	433b      	orrs	r3, r7
 8021be6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021be8:	2dff      	cmp	r5, #255	; 0xff
 8021bea:	d020      	beq.n	8021c2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8021bec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021bee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021bf2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021bf4:	436f      	muls	r7, r5
 8021bf6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021bf8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021bfc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021bfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021c02:	fb05 fa0a 	mul.w	sl, r5, sl
 8021c06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c0e:	44bc      	add	ip, r7
 8021c10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021c14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021c18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c28:	ea4c 050a 	orr.w	r5, ip, sl
 8021c2c:	950d      	str	r5, [sp, #52]	; 0x34
 8021c2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021c30:	2dff      	cmp	r5, #255	; 0xff
 8021c32:	d020      	beq.n	8021c76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 8021c34:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021c36:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021c3a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021c3c:	436f      	muls	r7, r5
 8021c3e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021c40:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021c44:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021c46:	fb05 fa0c 	mul.w	sl, r5, ip
 8021c4a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021c4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c52:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021c56:	44bc      	add	ip, r7
 8021c58:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021c5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021c60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c70:	ea4c 050a 	orr.w	r5, ip, sl
 8021c74:	9509      	str	r5, [sp, #36]	; 0x24
 8021c76:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021c78:	2dff      	cmp	r5, #255	; 0xff
 8021c7a:	d020      	beq.n	8021cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8021c7c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021c7e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021c82:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021c84:	436f      	muls	r7, r5
 8021c86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021c88:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021c8c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021c8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021c92:	fb05 fa0a 	mul.w	sl, r5, sl
 8021c96:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021c9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c9e:	44bc      	add	ip, r7
 8021ca0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021ca4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021ca8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021cac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021cb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021cb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021cb8:	ea4c 050a 	orr.w	r5, ip, sl
 8021cbc:	950e      	str	r5, [sp, #56]	; 0x38
 8021cbe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021cc0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021cc4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021cc6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021cca:	fb0e f707 	mul.w	r7, lr, r7
 8021cce:	fb01 770c 	mla	r7, r1, ip, r7
 8021cd2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021cd6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021cd8:	fb00 770c 	mla	r7, r0, ip, r7
 8021cdc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021ce0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021ce2:	fb09 770c 	mla	r7, r9, ip, r7
 8021ce6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021cea:	fb0e fe0c 	mul.w	lr, lr, ip
 8021cee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021cf2:	fb01 e303 	mla	r3, r1, r3, lr
 8021cf6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021cf8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021cfc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021cfe:	fb00 330a 	mla	r3, r0, sl, r3
 8021d02:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8021d06:	fb09 3c0c 	mla	ip, r9, ip, r3
 8021d0a:	0a3f      	lsrs	r7, r7, #8
 8021d0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d10:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021d14:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021d18:	ea47 070c 	orr.w	r7, r7, ip
 8021d1c:	2aff      	cmp	r2, #255	; 0xff
 8021d1e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8021d22:	d11e      	bne.n	8021d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 8021d24:	097a      	lsrs	r2, r7, #5
 8021d26:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8021d2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d2e:	f023 0307 	bic.w	r3, r3, #7
 8021d32:	4313      	orrs	r3, r2
 8021d34:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021d38:	431f      	orrs	r7, r3
 8021d3a:	f8a8 7000 	strh.w	r7, [r8]
 8021d3e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8021d40:	441c      	add	r4, r3
 8021d42:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021d44:	f108 0802 	add.w	r8, r8, #2
 8021d48:	441e      	add	r6, r3
 8021d4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021d4e:	e644      	b.n	80219da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021d50:	2800      	cmp	r0, #0
 8021d52:	f43f af0b 	beq.w	8021b6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8021d56:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8021d5a:	9109      	str	r1, [sp, #36]	; 0x24
 8021d5c:	0e09      	lsrs	r1, r1, #24
 8021d5e:	9111      	str	r1, [sp, #68]	; 0x44
 8021d60:	e704      	b.n	8021b6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8021d62:	f8b8 1000 	ldrh.w	r1, [r8]
 8021d66:	43d2      	mvns	r2, r2
 8021d68:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8021d6c:	fa5f fe82 	uxtb.w	lr, r2
 8021d70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021d74:	fb0c fc0e 	mul.w	ip, ip, lr
 8021d78:	10c8      	asrs	r0, r1, #3
 8021d7a:	00ca      	lsls	r2, r1, #3
 8021d7c:	f10c 0101 	add.w	r1, ip, #1
 8021d80:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021d84:	0c39      	lsrs	r1, r7, #16
 8021d86:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021d8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021d8e:	4912      	ldr	r1, [pc, #72]	; (8021dd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8021d90:	fb00 f00e 	mul.w	r0, r0, lr
 8021d94:	fa5f fc8c 	uxtb.w	ip, ip
 8021d98:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8021d9c:	b2d2      	uxtb	r2, r2
 8021d9e:	1c41      	adds	r1, r0, #1
 8021da0:	fb02 f20e 	mul.w	r2, r2, lr
 8021da4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021da8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021dac:	1c51      	adds	r1, r2, #1
 8021dae:	00c0      	lsls	r0, r0, #3
 8021db0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021db4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021db8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021dbc:	ea4c 0c00 	orr.w	ip, ip, r0
 8021dc0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021dc4:	ea47 0c0c 	orr.w	ip, r7, ip
 8021dc8:	f8a8 c000 	strh.w	ip, [r8]
 8021dcc:	e7b7      	b.n	8021d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8021dce:	b01b      	add	sp, #108	; 0x6c
 8021dd0:	ecbd 8b08 	vpop	{d8-d11}
 8021dd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021dd8:	fffff800 	.word	0xfffff800

08021ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8021ddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021de0:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8021de4:	2c00      	cmp	r4, #0
 8021de6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8021dea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8021dee:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8021df2:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8021df6:	fb04 ce03 	mla	lr, r4, r3, ip
 8021dfa:	db60      	blt.n	8021ebe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8021dfc:	45a1      	cmp	r9, r4
 8021dfe:	dd5e      	ble.n	8021ebe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8021e00:	f1bc 0f00 	cmp.w	ip, #0
 8021e04:	db59      	blt.n	8021eba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8021e06:	45e0      	cmp	r8, ip
 8021e08:	dd57      	ble.n	8021eba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8021e0a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8021e0e:	f01e 0f01 	tst.w	lr, #1
 8021e12:	5c16      	ldrb	r6, [r2, r0]
 8021e14:	bf0c      	ite	eq
 8021e16:	f006 060f 	andeq.w	r6, r6, #15
 8021e1a:	1136      	asrne	r6, r6, #4
 8021e1c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021e20:	b2f6      	uxtb	r6, r6
 8021e22:	f11c 0001 	adds.w	r0, ip, #1
 8021e26:	d44d      	bmi.n	8021ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8021e28:	4580      	cmp	r8, r0
 8021e2a:	dd4b      	ble.n	8021ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8021e2c:	2d00      	cmp	r5, #0
 8021e2e:	d04b      	beq.n	8021ec8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8021e30:	f10e 0a01 	add.w	sl, lr, #1
 8021e34:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8021e38:	f01a 0f01 	tst.w	sl, #1
 8021e3c:	5c10      	ldrb	r0, [r2, r0]
 8021e3e:	bf0c      	ite	eq
 8021e40:	f000 000f 	andeq.w	r0, r0, #15
 8021e44:	1100      	asrne	r0, r0, #4
 8021e46:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021e4a:	b2c0      	uxtb	r0, r0
 8021e4c:	3401      	adds	r4, #1
 8021e4e:	d43f      	bmi.n	8021ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8021e50:	45a1      	cmp	r9, r4
 8021e52:	dd3d      	ble.n	8021ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8021e54:	2f00      	cmp	r7, #0
 8021e56:	f000 80a8 	beq.w	8021faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 8021e5a:	f1bc 0f00 	cmp.w	ip, #0
 8021e5e:	db35      	blt.n	8021ecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8021e60:	45e0      	cmp	r8, ip
 8021e62:	dd33      	ble.n	8021ecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8021e64:	eb03 090e 	add.w	r9, r3, lr
 8021e68:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8021e6c:	f019 0f01 	tst.w	r9, #1
 8021e70:	5d14      	ldrb	r4, [r2, r4]
 8021e72:	bf0c      	ite	eq
 8021e74:	f004 040f 	andeq.w	r4, r4, #15
 8021e78:	1124      	asrne	r4, r4, #4
 8021e7a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021e7e:	b2e4      	uxtb	r4, r4
 8021e80:	f11c 0c01 	adds.w	ip, ip, #1
 8021e84:	d427      	bmi.n	8021ed6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8021e86:	45e0      	cmp	r8, ip
 8021e88:	dd25      	ble.n	8021ed6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8021e8a:	b335      	cbz	r5, 8021eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8021e8c:	3301      	adds	r3, #1
 8021e8e:	449e      	add	lr, r3
 8021e90:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021e94:	f01e 0f01 	tst.w	lr, #1
 8021e98:	5cd2      	ldrb	r2, [r2, r3]
 8021e9a:	bf0c      	ite	eq
 8021e9c:	f002 020f 	andeq.w	r2, r2, #15
 8021ea0:	1112      	asrne	r2, r2, #4
 8021ea2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021ea6:	b2d3      	uxtb	r3, r2
 8021ea8:	2d0f      	cmp	r5, #15
 8021eaa:	d917      	bls.n	8021edc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8021eac:	4b42      	ldr	r3, [pc, #264]	; (8021fb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 8021eae:	4a43      	ldr	r2, [pc, #268]	; (8021fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8021eb0:	4843      	ldr	r0, [pc, #268]	; (8021fc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 8021eb2:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8021eb6:	f001 f827 	bl	8022f08 <__assert_func>
 8021eba:	2600      	movs	r6, #0
 8021ebc:	e7b1      	b.n	8021e22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8021ebe:	2000      	movs	r0, #0
 8021ec0:	4606      	mov	r6, r0
 8021ec2:	e7c3      	b.n	8021e4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8021ec4:	2000      	movs	r0, #0
 8021ec6:	e7c1      	b.n	8021e4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8021ec8:	4628      	mov	r0, r5
 8021eca:	e7bf      	b.n	8021e4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8021ecc:	2400      	movs	r4, #0
 8021ece:	e7d7      	b.n	8021e80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8021ed0:	2300      	movs	r3, #0
 8021ed2:	461c      	mov	r4, r3
 8021ed4:	e7e8      	b.n	8021ea8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8021ed6:	2300      	movs	r3, #0
 8021ed8:	e7e6      	b.n	8021ea8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8021eda:	462b      	mov	r3, r5
 8021edc:	2f0f      	cmp	r7, #15
 8021ede:	d8e5      	bhi.n	8021eac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8021ee0:	b2ad      	uxth	r5, r5
 8021ee2:	b2bf      	uxth	r7, r7
 8021ee4:	fb05 fc07 	mul.w	ip, r5, r7
 8021ee8:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8021eec:	012d      	lsls	r5, r5, #4
 8021eee:	b2bf      	uxth	r7, r7
 8021ef0:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8021ef4:	eba5 050c 	sub.w	r5, r5, ip
 8021ef8:	1bd2      	subs	r2, r2, r7
 8021efa:	b2ad      	uxth	r5, r5
 8021efc:	b292      	uxth	r2, r2
 8021efe:	4368      	muls	r0, r5
 8021f00:	fb06 0002 	mla	r0, r6, r2, r0
 8021f04:	fb07 0404 	mla	r4, r7, r4, r0
 8021f08:	fb0c 4303 	mla	r3, ip, r3, r4
 8021f0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021f10:	b1b3      	cbz	r3, 8021f40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8021f12:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8021f16:	435a      	muls	r2, r3
 8021f18:	1c53      	adds	r3, r2, #1
 8021f1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021f1e:	4a29      	ldr	r2, [pc, #164]	; (8021fc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 8021f20:	121b      	asrs	r3, r3, #8
 8021f22:	6812      	ldr	r2, [r2, #0]
 8021f24:	2bff      	cmp	r3, #255	; 0xff
 8021f26:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8021f2a:	d10b      	bne.n	8021f44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 8021f2c:	4b26      	ldr	r3, [pc, #152]	; (8021fc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 8021f2e:	0950      	lsrs	r0, r2, #5
 8021f30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f34:	4033      	ands	r3, r6
 8021f36:	4318      	orrs	r0, r3
 8021f38:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021f3c:	4302      	orrs	r2, r0
 8021f3e:	800a      	strh	r2, [r1, #0]
 8021f40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021f44:	880d      	ldrh	r5, [r1, #0]
 8021f46:	b29f      	uxth	r7, r3
 8021f48:	122c      	asrs	r4, r5, #8
 8021f4a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8021f4e:	43db      	mvns	r3, r3
 8021f50:	b2db      	uxtb	r3, r3
 8021f52:	fb10 f007 	smulbb	r0, r0, r7
 8021f56:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021f5a:	fb04 0403 	mla	r4, r4, r3, r0
 8021f5e:	b2f6      	uxtb	r6, r6
 8021f60:	10e8      	asrs	r0, r5, #3
 8021f62:	b2d2      	uxtb	r2, r2
 8021f64:	00ed      	lsls	r5, r5, #3
 8021f66:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021f6a:	fb12 f207 	smulbb	r2, r2, r7
 8021f6e:	fb16 f607 	smulbb	r6, r6, r7
 8021f72:	b2ed      	uxtb	r5, r5
 8021f74:	b2a4      	uxth	r4, r4
 8021f76:	fb00 6603 	mla	r6, r0, r3, r6
 8021f7a:	fb05 2303 	mla	r3, r5, r3, r2
 8021f7e:	b29a      	uxth	r2, r3
 8021f80:	1c63      	adds	r3, r4, #1
 8021f82:	b2b0      	uxth	r0, r6
 8021f84:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021f88:	1c53      	adds	r3, r2, #1
 8021f8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021f8e:	1c42      	adds	r2, r0, #1
 8021f90:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021f94:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8021f98:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021f9c:	0940      	lsrs	r0, r0, #5
 8021f9e:	4323      	orrs	r3, r4
 8021fa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021fa4:	4303      	orrs	r3, r0
 8021fa6:	800b      	strh	r3, [r1, #0]
 8021fa8:	e7ca      	b.n	8021f40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8021faa:	2d0f      	cmp	r5, #15
 8021fac:	f63f af7e 	bhi.w	8021eac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8021fb0:	463b      	mov	r3, r7
 8021fb2:	463c      	mov	r4, r7
 8021fb4:	e794      	b.n	8021ee0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8021fb6:	bf00      	nop
 8021fb8:	0802926a 	.word	0x0802926a
 8021fbc:	0802983a 	.word	0x0802983a
 8021fc0:	080292ee 	.word	0x080292ee
 8021fc4:	20020094 	.word	0x20020094
 8021fc8:	00fff800 	.word	0x00fff800

08021fcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021fd0:	ed2d 8b08 	vpush	{d8-d11}
 8021fd4:	b097      	sub	sp, #92	; 0x5c
 8021fd6:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8021fda:	9214      	str	r2, [sp, #80]	; 0x50
 8021fdc:	9309      	str	r3, [sp, #36]	; 0x24
 8021fde:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021fe0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021fe4:	910d      	str	r1, [sp, #52]	; 0x34
 8021fe6:	930f      	str	r3, [sp, #60]	; 0x3c
 8021fe8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021fec:	9015      	str	r0, [sp, #84]	; 0x54
 8021fee:	6850      	ldr	r0, [r2, #4]
 8021ff0:	6812      	ldr	r2, [r2, #0]
 8021ff2:	fb00 1303 	mla	r3, r0, r3, r1
 8021ff6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021ffa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021ffc:	689b      	ldr	r3, [r3, #8]
 8021ffe:	3301      	adds	r3, #1
 8022000:	f023 0301 	bic.w	r3, r3, #1
 8022004:	930a      	str	r3, [sp, #40]	; 0x28
 8022006:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022008:	681f      	ldr	r7, [r3, #0]
 802200a:	eeb0 aa40 	vmov.f32	s20, s0
 802200e:	eef0 9a60 	vmov.f32	s19, s1
 8022012:	eeb0 9a41 	vmov.f32	s18, s2
 8022016:	eeb0 8a62 	vmov.f32	s16, s5
 802201a:	eef0 8a43 	vmov.f32	s17, s6
 802201e:	eef0 ba44 	vmov.f32	s23, s8
 8022022:	eeb0 ba64 	vmov.f32	s22, s9
 8022026:	eef0 aa45 	vmov.f32	s21, s10
 802202a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802202c:	2b00      	cmp	r3, #0
 802202e:	dc03      	bgt.n	8022038 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022030:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022032:	2b00      	cmp	r3, #0
 8022034:	f340 8287 	ble.w	8022546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8022038:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802203a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802203e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022042:	1e48      	subs	r0, r1, #1
 8022044:	f102 3cff 	add.w	ip, r2, #4294967295
 8022048:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802204a:	2b00      	cmp	r3, #0
 802204c:	f340 80c4 	ble.w	80221d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8022050:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022054:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022058:	d406      	bmi.n	8022068 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802205a:	4586      	cmp	lr, r0
 802205c:	da04      	bge.n	8022068 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802205e:	2b00      	cmp	r3, #0
 8022060:	db02      	blt.n	8022068 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022062:	4563      	cmp	r3, ip
 8022064:	f2c0 80b9 	blt.w	80221da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8022068:	f11e 0e01 	adds.w	lr, lr, #1
 802206c:	f100 80aa 	bmi.w	80221c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022070:	4571      	cmp	r1, lr
 8022072:	f2c0 80a7 	blt.w	80221c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022076:	3301      	adds	r3, #1
 8022078:	f100 80a4 	bmi.w	80221c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 802207c:	429a      	cmp	r2, r3
 802207e:	f2c0 80a1 	blt.w	80221c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022082:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022084:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8022088:	930e      	str	r3, [sp, #56]	; 0x38
 802208a:	46c8      	mov	r8, r9
 802208c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802208e:	2b00      	cmp	r3, #0
 8022090:	f340 80c3 	ble.w	802221a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022094:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022096:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802209a:	1423      	asrs	r3, r4, #16
 802209c:	ea4f 4026 	mov.w	r0, r6, asr #16
 80220a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80220a4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80220a8:	f100 814d 	bmi.w	8022346 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80220ac:	f10c 3bff 	add.w	fp, ip, #4294967295
 80220b0:	455b      	cmp	r3, fp
 80220b2:	f280 8148 	bge.w	8022346 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80220b6:	2800      	cmp	r0, #0
 80220b8:	f2c0 8145 	blt.w	8022346 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80220bc:	f10e 3bff 	add.w	fp, lr, #4294967295
 80220c0:	4558      	cmp	r0, fp
 80220c2:	f280 8140 	bge.w	8022346 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80220c6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80220c8:	fb00 3305 	mla	r3, r0, r5, r3
 80220cc:	0858      	lsrs	r0, r3, #1
 80220ce:	07dd      	lsls	r5, r3, #31
 80220d0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80220d4:	bf54      	ite	pl
 80220d6:	f00c 0c0f 	andpl.w	ip, ip, #15
 80220da:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80220de:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80220e2:	fa5f fc8c 	uxtb.w	ip, ip
 80220e6:	2a00      	cmp	r2, #0
 80220e8:	f000 80db 	beq.w	80222a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80220ec:	1c58      	adds	r0, r3, #1
 80220ee:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80220f2:	07c0      	lsls	r0, r0, #31
 80220f4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80220f8:	bf54      	ite	pl
 80220fa:	f00e 0e0f 	andpl.w	lr, lr, #15
 80220fe:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022102:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8022106:	fa5f f08e 	uxtb.w	r0, lr
 802210a:	9010      	str	r0, [sp, #64]	; 0x40
 802210c:	b1c9      	cbz	r1, 8022142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802210e:	4453      	add	r3, sl
 8022110:	0858      	lsrs	r0, r3, #1
 8022112:	07dd      	lsls	r5, r3, #31
 8022114:	5c38      	ldrb	r0, [r7, r0]
 8022116:	bf54      	ite	pl
 8022118:	f000 000f 	andpl.w	r0, r0, #15
 802211c:	1100      	asrmi	r0, r0, #4
 802211e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022122:	3301      	adds	r3, #1
 8022124:	b2c0      	uxtb	r0, r0
 8022126:	900b      	str	r0, [sp, #44]	; 0x2c
 8022128:	0858      	lsrs	r0, r3, #1
 802212a:	07dd      	lsls	r5, r3, #31
 802212c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8022130:	bf54      	ite	pl
 8022132:	f00e 030f 	andpl.w	r3, lr, #15
 8022136:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802213a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802213e:	b2db      	uxtb	r3, r3
 8022140:	9311      	str	r3, [sp, #68]	; 0x44
 8022142:	b292      	uxth	r2, r2
 8022144:	b289      	uxth	r1, r1
 8022146:	fb02 f301 	mul.w	r3, r2, r1
 802214a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802214e:	0112      	lsls	r2, r2, #4
 8022150:	b289      	uxth	r1, r1
 8022152:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8022156:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022158:	1ad2      	subs	r2, r2, r3
 802215a:	1a40      	subs	r0, r0, r1
 802215c:	b292      	uxth	r2, r2
 802215e:	436a      	muls	r2, r5
 8022160:	b280      	uxth	r0, r0
 8022162:	fb0c 2c00 	mla	ip, ip, r0, r2
 8022166:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022168:	fb01 c102 	mla	r1, r1, r2, ip
 802216c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802216e:	fb03 1302 	mla	r3, r3, r2, r1
 8022172:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022176:	b1db      	cbz	r3, 80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022178:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802217a:	4353      	muls	r3, r2
 802217c:	1c5a      	adds	r2, r3, #1
 802217e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022182:	4ac6      	ldr	r2, [pc, #792]	; (802249c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8022184:	121b      	asrs	r3, r3, #8
 8022186:	6812      	ldr	r2, [r2, #0]
 8022188:	2bff      	cmp	r3, #255	; 0xff
 802218a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802218e:	f040 8099 	bne.w	80222c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8022192:	0953      	lsrs	r3, r2, #5
 8022194:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8022198:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802219c:	f02c 0c07 	bic.w	ip, ip, #7
 80221a0:	ea43 0c0c 	orr.w	ip, r3, ip
 80221a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80221a8:	ea4c 0202 	orr.w	r2, ip, r2
 80221ac:	f8a8 2000 	strh.w	r2, [r8]
 80221b0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80221b2:	441c      	add	r4, r3
 80221b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80221b6:	441e      	add	r6, r3
 80221b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80221ba:	3b01      	subs	r3, #1
 80221bc:	f108 0802 	add.w	r8, r8, #2
 80221c0:	930e      	str	r3, [sp, #56]	; 0x38
 80221c2:	e763      	b.n	802208c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 80221c4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80221c6:	441c      	add	r4, r3
 80221c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80221ca:	441e      	add	r6, r3
 80221cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221ce:	3b01      	subs	r3, #1
 80221d0:	9309      	str	r3, [sp, #36]	; 0x24
 80221d2:	f109 0902 	add.w	r9, r9, #2
 80221d6:	e737      	b.n	8022048 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80221d8:	d024      	beq.n	8022224 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80221da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221dc:	982b      	ldr	r0, [sp, #172]	; 0xac
 80221de:	3b01      	subs	r3, #1
 80221e0:	fb00 4003 	mla	r0, r0, r3, r4
 80221e4:	1400      	asrs	r0, r0, #16
 80221e6:	f53f af4c 	bmi.w	8022082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80221ea:	3901      	subs	r1, #1
 80221ec:	4288      	cmp	r0, r1
 80221ee:	f6bf af48 	bge.w	8022082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80221f2:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80221f4:	fb01 6303 	mla	r3, r1, r3, r6
 80221f8:	141b      	asrs	r3, r3, #16
 80221fa:	f53f af42 	bmi.w	8022082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80221fe:	3a01      	subs	r2, #1
 8022200:	4293      	cmp	r3, r2
 8022202:	f6bf af3e 	bge.w	8022082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022206:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802220a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802220e:	930e      	str	r3, [sp, #56]	; 0x38
 8022210:	46c8      	mov	r8, r9
 8022212:	f1bb 0f00 	cmp.w	fp, #0
 8022216:	f300 80b7 	bgt.w	8022388 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 802221a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802221c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022220:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022226:	2b00      	cmp	r3, #0
 8022228:	f340 818d 	ble.w	8022546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 802222c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022230:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022234:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022238:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802223a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802223e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022242:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022246:	eef0 6a48 	vmov.f32	s13, s16
 802224a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802224e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022252:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022256:	ee16 4a90 	vmov	r4, s13
 802225a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802225e:	eef0 6a68 	vmov.f32	s13, s17
 8022262:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022266:	ee18 2a10 	vmov	r2, s16
 802226a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802226e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022272:	ee18 2a90 	vmov	r2, s17
 8022276:	932b      	str	r3, [sp, #172]	; 0xac
 8022278:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802227a:	fb92 f3f3 	sdiv	r3, r2, r3
 802227e:	932c      	str	r3, [sp, #176]	; 0xb0
 8022280:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022282:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022284:	3b01      	subs	r3, #1
 8022286:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802228a:	930d      	str	r3, [sp, #52]	; 0x34
 802228c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802228e:	bf08      	it	eq
 8022290:	4613      	moveq	r3, r2
 8022292:	ee16 6a90 	vmov	r6, s13
 8022296:	9309      	str	r3, [sp, #36]	; 0x24
 8022298:	eef0 8a67 	vmov.f32	s17, s15
 802229c:	eeb0 8a47 	vmov.f32	s16, s14
 80222a0:	e6c3      	b.n	802202a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80222a2:	2900      	cmp	r1, #0
 80222a4:	f43f af4d 	beq.w	8022142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80222a8:	eb0a 0003 	add.w	r0, sl, r3
 80222ac:	0843      	lsrs	r3, r0, #1
 80222ae:	07c0      	lsls	r0, r0, #31
 80222b0:	5cfb      	ldrb	r3, [r7, r3]
 80222b2:	bf54      	ite	pl
 80222b4:	f003 030f 	andpl.w	r3, r3, #15
 80222b8:	111b      	asrmi	r3, r3, #4
 80222ba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80222be:	b2db      	uxtb	r3, r3
 80222c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80222c2:	e73e      	b.n	8022142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80222c4:	f8b8 e000 	ldrh.w	lr, [r8]
 80222c8:	fa1f fb83 	uxth.w	fp, r3
 80222cc:	ea4f 202e 	mov.w	r0, lr, asr #8
 80222d0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80222d4:	43db      	mvns	r3, r3
 80222d6:	b2db      	uxtb	r3, r3
 80222d8:	fb11 f10b 	smulbb	r1, r1, fp
 80222dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80222e0:	fb00 1003 	mla	r0, r0, r3, r1
 80222e4:	fa5f fc8c 	uxtb.w	ip, ip
 80222e8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80222ec:	b2d2      	uxtb	r2, r2
 80222ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80222f2:	b280      	uxth	r0, r0
 80222f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80222f8:	fb1c fc0b 	smulbb	ip, ip, fp
 80222fc:	fa5f fe8e 	uxtb.w	lr, lr
 8022300:	fb12 fb0b 	smulbb	fp, r2, fp
 8022304:	fb01 cc03 	mla	ip, r1, r3, ip
 8022308:	fb0e bb03 	mla	fp, lr, r3, fp
 802230c:	1c43      	adds	r3, r0, #1
 802230e:	fa1f fc8c 	uxth.w	ip, ip
 8022312:	fa1f fb8b 	uxth.w	fp, fp
 8022316:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802231a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802231e:	f10c 0101 	add.w	r1, ip, #1
 8022322:	f10b 0001 	add.w	r0, fp, #1
 8022326:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802232a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802232e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022332:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022336:	4318      	orrs	r0, r3
 8022338:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802233c:	ea40 000c 	orr.w	r0, r0, ip
 8022340:	f8a8 0000 	strh.w	r0, [r8]
 8022344:	e734      	b.n	80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022346:	f113 0b01 	adds.w	fp, r3, #1
 802234a:	f53f af31 	bmi.w	80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802234e:	45dc      	cmp	ip, fp
 8022350:	f6ff af2e 	blt.w	80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022354:	f110 0b01 	adds.w	fp, r0, #1
 8022358:	f53f af2a 	bmi.w	80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802235c:	45de      	cmp	lr, fp
 802235e:	f6ff af27 	blt.w	80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022362:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022364:	9302      	str	r3, [sp, #8]
 8022366:	fa0f f38e 	sxth.w	r3, lr
 802236a:	9301      	str	r3, [sp, #4]
 802236c:	fa0f f38c 	sxth.w	r3, ip
 8022370:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022374:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8022378:	9300      	str	r3, [sp, #0]
 802237a:	463a      	mov	r2, r7
 802237c:	4653      	mov	r3, sl
 802237e:	4641      	mov	r1, r8
 8022380:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022382:	f7ff fd2b 	bl	8021ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8022386:	e713      	b.n	80221b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022388:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802238a:	1422      	asrs	r2, r4, #16
 802238c:	1433      	asrs	r3, r6, #16
 802238e:	fb05 2303 	mla	r3, r5, r3, r2
 8022392:	085a      	lsrs	r2, r3, #1
 8022394:	07dd      	lsls	r5, r3, #31
 8022396:	5cba      	ldrb	r2, [r7, r2]
 8022398:	bf54      	ite	pl
 802239a:	f002 020f 	andpl.w	r2, r2, #15
 802239e:	1112      	asrmi	r2, r2, #4
 80223a0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80223a4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80223a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80223ac:	b2d2      	uxtb	r2, r2
 80223ae:	2900      	cmp	r1, #0
 80223b0:	d076      	beq.n	80224a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80223b2:	f103 0e01 	add.w	lr, r3, #1
 80223b6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80223ba:	f01e 0f01 	tst.w	lr, #1
 80223be:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80223c2:	bf0c      	ite	eq
 80223c4:	f00c 0c0f 	andeq.w	ip, ip, #15
 80223c8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80223cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80223d0:	fa5f f58c 	uxtb.w	r5, ip
 80223d4:	9512      	str	r5, [sp, #72]	; 0x48
 80223d6:	b300      	cbz	r0, 802241a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80223d8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80223da:	442b      	add	r3, r5
 80223dc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80223e0:	07dd      	lsls	r5, r3, #31
 80223e2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80223e6:	bf54      	ite	pl
 80223e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80223ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80223f0:	3301      	adds	r3, #1
 80223f2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80223f6:	fa5f f58c 	uxtb.w	r5, ip
 80223fa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80223fe:	950c      	str	r5, [sp, #48]	; 0x30
 8022400:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022404:	07dd      	lsls	r5, r3, #31
 8022406:	bf54      	ite	pl
 8022408:	f00c 0c0f 	andpl.w	ip, ip, #15
 802240c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022410:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022414:	fa5f f38c 	uxtb.w	r3, ip
 8022418:	9313      	str	r3, [sp, #76]	; 0x4c
 802241a:	b289      	uxth	r1, r1
 802241c:	b280      	uxth	r0, r0
 802241e:	fb01 f300 	mul.w	r3, r1, r0
 8022422:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8022426:	0109      	lsls	r1, r1, #4
 8022428:	b280      	uxth	r0, r0
 802242a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802242e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022430:	1ac9      	subs	r1, r1, r3
 8022432:	ebac 0c00 	sub.w	ip, ip, r0
 8022436:	b289      	uxth	r1, r1
 8022438:	4369      	muls	r1, r5
 802243a:	fa1f fc8c 	uxth.w	ip, ip
 802243e:	fb02 120c 	mla	r2, r2, ip, r1
 8022442:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022444:	fb00 2001 	mla	r0, r0, r1, r2
 8022448:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802244a:	fb03 0302 	mla	r3, r3, r2, r0
 802244e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022452:	b1d3      	cbz	r3, 802248a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8022454:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022456:	4353      	muls	r3, r2
 8022458:	1c5a      	adds	r2, r3, #1
 802245a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802245e:	4a0f      	ldr	r2, [pc, #60]	; (802249c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8022460:	121b      	asrs	r3, r3, #8
 8022462:	6812      	ldr	r2, [r2, #0]
 8022464:	2bff      	cmp	r3, #255	; 0xff
 8022466:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802246a:	d12d      	bne.n	80224c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 802246c:	0953      	lsrs	r3, r2, #5
 802246e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8022472:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022476:	f02c 0c07 	bic.w	ip, ip, #7
 802247a:	ea43 0c0c 	orr.w	ip, r3, ip
 802247e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022482:	ea4c 0202 	orr.w	r2, ip, r2
 8022486:	f8a8 2000 	strh.w	r2, [r8]
 802248a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802248c:	441c      	add	r4, r3
 802248e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022490:	f108 0802 	add.w	r8, r8, #2
 8022494:	441e      	add	r6, r3
 8022496:	f10b 3bff 	add.w	fp, fp, #4294967295
 802249a:	e6ba      	b.n	8022212 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802249c:	20020094 	.word	0x20020094
 80224a0:	2800      	cmp	r0, #0
 80224a2:	d0ba      	beq.n	802241a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80224a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80224a6:	442b      	add	r3, r5
 80224a8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80224ac:	07db      	lsls	r3, r3, #31
 80224ae:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80224b2:	bf54      	ite	pl
 80224b4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80224b8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80224bc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80224c0:	fa5f f38c 	uxtb.w	r3, ip
 80224c4:	930c      	str	r3, [sp, #48]	; 0x30
 80224c6:	e7a8      	b.n	802241a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80224c8:	f8b8 e000 	ldrh.w	lr, [r8]
 80224cc:	fa1f fa83 	uxth.w	sl, r3
 80224d0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80224d4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80224d8:	43db      	mvns	r3, r3
 80224da:	b2db      	uxtb	r3, r3
 80224dc:	fb11 f10a 	smulbb	r1, r1, sl
 80224e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80224e4:	fb00 1003 	mla	r0, r0, r3, r1
 80224e8:	b2d2      	uxtb	r2, r2
 80224ea:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80224ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80224f2:	fa5f fe8e 	uxtb.w	lr, lr
 80224f6:	fb12 f20a 	smulbb	r2, r2, sl
 80224fa:	fb0e 2203 	mla	r2, lr, r3, r2
 80224fe:	fa5f fc8c 	uxtb.w	ip, ip
 8022502:	b280      	uxth	r0, r0
 8022504:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022508:	b292      	uxth	r2, r2
 802250a:	fb1c fc0a 	smulbb	ip, ip, sl
 802250e:	fb01 cc03 	mla	ip, r1, r3, ip
 8022512:	1c43      	adds	r3, r0, #1
 8022514:	1c51      	adds	r1, r2, #1
 8022516:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802251a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802251e:	fa1f fc8c 	uxth.w	ip, ip
 8022522:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022526:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802252a:	4308      	orrs	r0, r1
 802252c:	f10c 0101 	add.w	r1, ip, #1
 8022530:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022534:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022538:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802253c:	ea40 000c 	orr.w	r0, r0, ip
 8022540:	f8a8 0000 	strh.w	r0, [r8]
 8022544:	e7a1      	b.n	802248a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8022546:	b017      	add	sp, #92	; 0x5c
 8022548:	ecbd 8b08 	vpop	{d8-d11}
 802254c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022550 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8022550:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022554:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8022558:	2c00      	cmp	r4, #0
 802255a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802255e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8022562:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022566:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 802256a:	fb04 ce03 	mla	lr, r4, r3, ip
 802256e:	db60      	blt.n	8022632 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8022570:	45a1      	cmp	r9, r4
 8022572:	dd5e      	ble.n	8022632 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8022574:	f1bc 0f00 	cmp.w	ip, #0
 8022578:	db59      	blt.n	802262e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 802257a:	45e0      	cmp	r8, ip
 802257c:	dd57      	ble.n	802262e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 802257e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8022582:	f01e 0f01 	tst.w	lr, #1
 8022586:	5c16      	ldrb	r6, [r2, r0]
 8022588:	bf0c      	ite	eq
 802258a:	f006 060f 	andeq.w	r6, r6, #15
 802258e:	1136      	asrne	r6, r6, #4
 8022590:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8022594:	b2f6      	uxtb	r6, r6
 8022596:	f11c 0001 	adds.w	r0, ip, #1
 802259a:	d44d      	bmi.n	8022638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 802259c:	4580      	cmp	r8, r0
 802259e:	dd4b      	ble.n	8022638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 80225a0:	2d00      	cmp	r5, #0
 80225a2:	d04b      	beq.n	802263c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 80225a4:	f10e 0a01 	add.w	sl, lr, #1
 80225a8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80225ac:	f01a 0f01 	tst.w	sl, #1
 80225b0:	5c10      	ldrb	r0, [r2, r0]
 80225b2:	bf0c      	ite	eq
 80225b4:	f000 000f 	andeq.w	r0, r0, #15
 80225b8:	1100      	asrne	r0, r0, #4
 80225ba:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80225be:	b2c0      	uxtb	r0, r0
 80225c0:	3401      	adds	r4, #1
 80225c2:	d43f      	bmi.n	8022644 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 80225c4:	45a1      	cmp	r9, r4
 80225c6:	dd3d      	ble.n	8022644 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 80225c8:	2f00      	cmp	r7, #0
 80225ca:	f000 8093 	beq.w	80226f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80225ce:	f1bc 0f00 	cmp.w	ip, #0
 80225d2:	db35      	blt.n	8022640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 80225d4:	45e0      	cmp	r8, ip
 80225d6:	dd33      	ble.n	8022640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 80225d8:	eb03 090e 	add.w	r9, r3, lr
 80225dc:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80225e0:	f019 0f01 	tst.w	r9, #1
 80225e4:	5d14      	ldrb	r4, [r2, r4]
 80225e6:	bf0c      	ite	eq
 80225e8:	f004 040f 	andeq.w	r4, r4, #15
 80225ec:	1124      	asrne	r4, r4, #4
 80225ee:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80225f2:	b2e4      	uxtb	r4, r4
 80225f4:	f11c 0c01 	adds.w	ip, ip, #1
 80225f8:	d427      	bmi.n	802264a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80225fa:	45e0      	cmp	r8, ip
 80225fc:	dd25      	ble.n	802264a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80225fe:	b335      	cbz	r5, 802264e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8022600:	3301      	adds	r3, #1
 8022602:	449e      	add	lr, r3
 8022604:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022608:	f01e 0f01 	tst.w	lr, #1
 802260c:	5cd2      	ldrb	r2, [r2, r3]
 802260e:	bf0c      	ite	eq
 8022610:	f002 020f 	andeq.w	r2, r2, #15
 8022614:	1112      	asrne	r2, r2, #4
 8022616:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802261a:	b2d3      	uxtb	r3, r2
 802261c:	2d0f      	cmp	r5, #15
 802261e:	d917      	bls.n	8022650 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8022620:	4b37      	ldr	r3, [pc, #220]	; (8022700 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8022622:	4a38      	ldr	r2, [pc, #224]	; (8022704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8022624:	4838      	ldr	r0, [pc, #224]	; (8022708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8022626:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 802262a:	f000 fc6d 	bl	8022f08 <__assert_func>
 802262e:	2600      	movs	r6, #0
 8022630:	e7b1      	b.n	8022596 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8022632:	2000      	movs	r0, #0
 8022634:	4606      	mov	r6, r0
 8022636:	e7c3      	b.n	80225c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8022638:	2000      	movs	r0, #0
 802263a:	e7c1      	b.n	80225c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 802263c:	4628      	mov	r0, r5
 802263e:	e7bf      	b.n	80225c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8022640:	2400      	movs	r4, #0
 8022642:	e7d7      	b.n	80225f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8022644:	2300      	movs	r3, #0
 8022646:	461c      	mov	r4, r3
 8022648:	e7e8      	b.n	802261c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 802264a:	2300      	movs	r3, #0
 802264c:	e7e6      	b.n	802261c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 802264e:	462b      	mov	r3, r5
 8022650:	2f0f      	cmp	r7, #15
 8022652:	d8e5      	bhi.n	8022620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8022654:	b2ad      	uxth	r5, r5
 8022656:	b2bf      	uxth	r7, r7
 8022658:	fb05 fc07 	mul.w	ip, r5, r7
 802265c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8022660:	012d      	lsls	r5, r5, #4
 8022662:	b2bf      	uxth	r7, r7
 8022664:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8022668:	eba5 050c 	sub.w	r5, r5, ip
 802266c:	1bd2      	subs	r2, r2, r7
 802266e:	b2ad      	uxth	r5, r5
 8022670:	b292      	uxth	r2, r2
 8022672:	4368      	muls	r0, r5
 8022674:	fb06 0002 	mla	r0, r6, r2, r0
 8022678:	fb07 0404 	mla	r4, r7, r4, r0
 802267c:	fb0c 4303 	mla	r3, ip, r3, r4
 8022680:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022684:	b3a3      	cbz	r3, 80226f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022686:	4a21      	ldr	r2, [pc, #132]	; (802270c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8022688:	880e      	ldrh	r6, [r1, #0]
 802268a:	6815      	ldr	r5, [r2, #0]
 802268c:	1234      	asrs	r4, r6, #8
 802268e:	b29a      	uxth	r2, r3
 8022690:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8022694:	43db      	mvns	r3, r3
 8022696:	b2db      	uxtb	r3, r3
 8022698:	fb10 f002 	smulbb	r0, r0, r2
 802269c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80226a0:	fb04 0403 	mla	r4, r4, r3, r0
 80226a4:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80226a8:	10f0      	asrs	r0, r6, #3
 80226aa:	b2ed      	uxtb	r5, r5
 80226ac:	00f6      	lsls	r6, r6, #3
 80226ae:	fb17 f702 	smulbb	r7, r7, r2
 80226b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80226b6:	fb15 f202 	smulbb	r2, r5, r2
 80226ba:	b2f6      	uxtb	r6, r6
 80226bc:	b2a4      	uxth	r4, r4
 80226be:	fb00 7003 	mla	r0, r0, r3, r7
 80226c2:	fb06 2303 	mla	r3, r6, r3, r2
 80226c6:	b29a      	uxth	r2, r3
 80226c8:	1c63      	adds	r3, r4, #1
 80226ca:	b280      	uxth	r0, r0
 80226cc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80226d0:	1c53      	adds	r3, r2, #1
 80226d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80226d6:	1c42      	adds	r2, r0, #1
 80226d8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80226dc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80226e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226e4:	0940      	lsrs	r0, r0, #5
 80226e6:	4323      	orrs	r3, r4
 80226e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226ec:	4303      	orrs	r3, r0
 80226ee:	800b      	strh	r3, [r1, #0]
 80226f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80226f4:	2d0f      	cmp	r5, #15
 80226f6:	d893      	bhi.n	8022620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80226f8:	463b      	mov	r3, r7
 80226fa:	463c      	mov	r4, r7
 80226fc:	e7aa      	b.n	8022654 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 80226fe:	bf00      	nop
 8022700:	0802926a 	.word	0x0802926a
 8022704:	0802983a 	.word	0x0802983a
 8022708:	080292ee 	.word	0x080292ee
 802270c:	20020094 	.word	0x20020094

08022710 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022714:	ed2d 8b08 	vpush	{d8-d11}
 8022718:	b093      	sub	sp, #76	; 0x4c
 802271a:	461d      	mov	r5, r3
 802271c:	920c      	str	r2, [sp, #48]	; 0x30
 802271e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022720:	9107      	str	r1, [sp, #28]
 8022722:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022726:	9011      	str	r0, [sp, #68]	; 0x44
 8022728:	6850      	ldr	r0, [r2, #4]
 802272a:	6812      	ldr	r2, [r2, #0]
 802272c:	fb00 1303 	mla	r3, r0, r3, r1
 8022730:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022734:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022736:	689b      	ldr	r3, [r3, #8]
 8022738:	3301      	adds	r3, #1
 802273a:	f023 0301 	bic.w	r3, r3, #1
 802273e:	9306      	str	r3, [sp, #24]
 8022740:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022742:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8022746:	681f      	ldr	r7, [r3, #0]
 8022748:	eeb0 aa40 	vmov.f32	s20, s0
 802274c:	eef0 9a60 	vmov.f32	s19, s1
 8022750:	eeb0 9a41 	vmov.f32	s18, s2
 8022754:	eeb0 8a62 	vmov.f32	s16, s5
 8022758:	eef0 8a43 	vmov.f32	s17, s6
 802275c:	eef0 ba44 	vmov.f32	s23, s8
 8022760:	eeb0 ba64 	vmov.f32	s22, s9
 8022764:	eef0 aa45 	vmov.f32	s21, s10
 8022768:	9b07      	ldr	r3, [sp, #28]
 802276a:	2b00      	cmp	r3, #0
 802276c:	dc03      	bgt.n	8022776 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802276e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022770:	2b00      	cmp	r3, #0
 8022772:	f340 8267 	ble.w	8022c44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8022776:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022778:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802277c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022780:	1e48      	subs	r0, r1, #1
 8022782:	f102 3cff 	add.w	ip, r2, #4294967295
 8022786:	2d00      	cmp	r5, #0
 8022788:	f340 80b8 	ble.w	80228fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802278c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022790:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022794:	d406      	bmi.n	80227a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022796:	4586      	cmp	lr, r0
 8022798:	da04      	bge.n	80227a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802279a:	2b00      	cmp	r3, #0
 802279c:	db02      	blt.n	80227a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802279e:	4563      	cmp	r3, ip
 80227a0:	f2c0 80ad 	blt.w	80228fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80227a4:	f11e 0e01 	adds.w	lr, lr, #1
 80227a8:	f100 80a0 	bmi.w	80228ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80227ac:	4571      	cmp	r1, lr
 80227ae:	f2c0 809d 	blt.w	80228ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80227b2:	3301      	adds	r3, #1
 80227b4:	f100 809a 	bmi.w	80228ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80227b8:	429a      	cmp	r2, r3
 80227ba:	f2c0 8097 	blt.w	80228ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80227be:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80227c2:	9509      	str	r5, [sp, #36]	; 0x24
 80227c4:	46c8      	mov	r8, r9
 80227c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80227c8:	2b00      	cmp	r3, #0
 80227ca:	f340 80b6 	ble.w	802293a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80227ce:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80227d2:	9308      	str	r3, [sp, #32]
 80227d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80227da:	1423      	asrs	r3, r4, #16
 80227dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80227e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80227e4:	f100 813e 	bmi.w	8022a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80227e8:	f10c 3bff 	add.w	fp, ip, #4294967295
 80227ec:	455b      	cmp	r3, fp
 80227ee:	f280 8139 	bge.w	8022a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80227f2:	2800      	cmp	r0, #0
 80227f4:	f2c0 8136 	blt.w	8022a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80227f8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80227fc:	4558      	cmp	r0, fp
 80227fe:	f280 8131 	bge.w	8022a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8022802:	9a06      	ldr	r2, [sp, #24]
 8022804:	fb00 3302 	mla	r3, r0, r2, r3
 8022808:	0858      	lsrs	r0, r3, #1
 802280a:	07da      	lsls	r2, r3, #31
 802280c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022810:	9a08      	ldr	r2, [sp, #32]
 8022812:	bf54      	ite	pl
 8022814:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022818:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802281c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022820:	fa5f fc8c 	uxtb.w	ip, ip
 8022824:	2a00      	cmp	r2, #0
 8022826:	f000 80cb 	beq.w	80229c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 802282a:	1c58      	adds	r0, r3, #1
 802282c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022830:	07c0      	lsls	r0, r0, #31
 8022832:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022836:	bf54      	ite	pl
 8022838:	f00e 0e0f 	andpl.w	lr, lr, #15
 802283c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022840:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8022844:	fa5f fe8e 	uxtb.w	lr, lr
 8022848:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 802284c:	b1b9      	cbz	r1, 802287e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802284e:	4453      	add	r3, sl
 8022850:	0858      	lsrs	r0, r3, #1
 8022852:	07da      	lsls	r2, r3, #31
 8022854:	5c38      	ldrb	r0, [r7, r0]
 8022856:	bf54      	ite	pl
 8022858:	f000 000f 	andpl.w	r0, r0, #15
 802285c:	1100      	asrmi	r0, r0, #4
 802285e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022862:	b2c0      	uxtb	r0, r0
 8022864:	900a      	str	r0, [sp, #40]	; 0x28
 8022866:	1c58      	adds	r0, r3, #1
 8022868:	0843      	lsrs	r3, r0, #1
 802286a:	07c2      	lsls	r2, r0, #31
 802286c:	5cfb      	ldrb	r3, [r7, r3]
 802286e:	bf54      	ite	pl
 8022870:	f003 030f 	andpl.w	r3, r3, #15
 8022874:	111b      	asrmi	r3, r3, #4
 8022876:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802287a:	b2db      	uxtb	r3, r3
 802287c:	930e      	str	r3, [sp, #56]	; 0x38
 802287e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8022882:	b289      	uxth	r1, r1
 8022884:	fb02 f301 	mul.w	r3, r2, r1
 8022888:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802288c:	0112      	lsls	r2, r2, #4
 802288e:	b289      	uxth	r1, r1
 8022890:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8022894:	1a40      	subs	r0, r0, r1
 8022896:	fa1f fe80 	uxth.w	lr, r0
 802289a:	1ad2      	subs	r2, r2, r3
 802289c:	980d      	ldr	r0, [sp, #52]	; 0x34
 802289e:	b292      	uxth	r2, r2
 80228a0:	4342      	muls	r2, r0
 80228a2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80228a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80228a8:	fb01 c102 	mla	r1, r1, r2, ip
 80228ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80228ae:	fb03 1302 	mla	r3, r3, r2, r1
 80228b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80228b6:	2bff      	cmp	r3, #255	; 0xff
 80228b8:	f040 8093 	bne.w	80229e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80228bc:	4bbe      	ldr	r3, [pc, #760]	; (8022bb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80228be:	681a      	ldr	r2, [r3, #0]
 80228c0:	4bbe      	ldr	r3, [pc, #760]	; (8022bbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80228c2:	0951      	lsrs	r1, r2, #5
 80228c4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80228c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228cc:	430b      	orrs	r3, r1
 80228ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80228d2:	4313      	orrs	r3, r2
 80228d4:	f8a8 3000 	strh.w	r3, [r8]
 80228d8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80228da:	441c      	add	r4, r3
 80228dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228de:	441e      	add	r6, r3
 80228e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228e2:	3b01      	subs	r3, #1
 80228e4:	f108 0802 	add.w	r8, r8, #2
 80228e8:	9309      	str	r3, [sp, #36]	; 0x24
 80228ea:	e76c      	b.n	80227c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80228ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80228ee:	441c      	add	r4, r3
 80228f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228f2:	3d01      	subs	r5, #1
 80228f4:	441e      	add	r6, r3
 80228f6:	f109 0902 	add.w	r9, r9, #2
 80228fa:	e744      	b.n	8022786 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80228fc:	d021      	beq.n	8022942 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80228fe:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022900:	1e6b      	subs	r3, r5, #1
 8022902:	fb00 4003 	mla	r0, r0, r3, r4
 8022906:	1400      	asrs	r0, r0, #16
 8022908:	f53f af59 	bmi.w	80227be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802290c:	3901      	subs	r1, #1
 802290e:	4288      	cmp	r0, r1
 8022910:	f6bf af55 	bge.w	80227be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8022914:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022916:	fb01 6303 	mla	r3, r1, r3, r6
 802291a:	141b      	asrs	r3, r3, #16
 802291c:	f53f af4f 	bmi.w	80227be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8022920:	3a01      	subs	r2, #1
 8022922:	4293      	cmp	r3, r2
 8022924:	f6bf af4b 	bge.w	80227be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8022928:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802292c:	9308      	str	r3, [sp, #32]
 802292e:	46a8      	mov	r8, r5
 8022930:	46ce      	mov	lr, r9
 8022932:	f1b8 0f00 	cmp.w	r8, #0
 8022936:	f300 80b5 	bgt.w	8022aa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802293a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802293e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022942:	9b07      	ldr	r3, [sp, #28]
 8022944:	2b00      	cmp	r3, #0
 8022946:	f340 817d 	ble.w	8022c44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 802294a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802294e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022952:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022956:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022958:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802295c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022960:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022964:	eef0 6a48 	vmov.f32	s13, s16
 8022968:	ee69 7a27 	vmul.f32	s15, s18, s15
 802296c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022970:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022974:	ee16 4a90 	vmov	r4, s13
 8022978:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802297c:	eef0 6a68 	vmov.f32	s13, s17
 8022980:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022984:	ee18 2a10 	vmov	r2, s16
 8022988:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802298c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022990:	ee18 2a90 	vmov	r2, s17
 8022994:	9327      	str	r3, [sp, #156]	; 0x9c
 8022996:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022998:	fb92 f3f3 	sdiv	r3, r2, r3
 802299c:	9328      	str	r3, [sp, #160]	; 0xa0
 802299e:	9b07      	ldr	r3, [sp, #28]
 80229a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80229a2:	3b01      	subs	r3, #1
 80229a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229a8:	9307      	str	r3, [sp, #28]
 80229aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229ac:	ee16 6a90 	vmov	r6, s13
 80229b0:	bf14      	ite	ne
 80229b2:	461d      	movne	r5, r3
 80229b4:	4615      	moveq	r5, r2
 80229b6:	eef0 8a67 	vmov.f32	s17, s15
 80229ba:	eeb0 8a47 	vmov.f32	s16, s14
 80229be:	e6d3      	b.n	8022768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80229c0:	2900      	cmp	r1, #0
 80229c2:	f43f af5c 	beq.w	802287e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80229c6:	eb0a 0003 	add.w	r0, sl, r3
 80229ca:	0843      	lsrs	r3, r0, #1
 80229cc:	07c0      	lsls	r0, r0, #31
 80229ce:	5cfb      	ldrb	r3, [r7, r3]
 80229d0:	bf54      	ite	pl
 80229d2:	f003 030f 	andpl.w	r3, r3, #15
 80229d6:	111b      	asrmi	r3, r3, #4
 80229d8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80229dc:	b2db      	uxtb	r3, r3
 80229de:	930a      	str	r3, [sp, #40]	; 0x28
 80229e0:	e74d      	b.n	802287e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80229e2:	2b00      	cmp	r3, #0
 80229e4:	f43f af78 	beq.w	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80229e8:	4a73      	ldr	r2, [pc, #460]	; (8022bb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80229ea:	f8b8 c000 	ldrh.w	ip, [r8]
 80229ee:	6810      	ldr	r0, [r2, #0]
 80229f0:	fa1f fe83 	uxth.w	lr, r3
 80229f4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80229f8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80229fc:	43db      	mvns	r3, r3
 80229fe:	b2db      	uxtb	r3, r3
 8022a00:	fb12 f20e 	smulbb	r2, r2, lr
 8022a04:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022a08:	fb01 2103 	mla	r1, r1, r3, r2
 8022a0c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022a10:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022a14:	b2c0      	uxtb	r0, r0
 8022a16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022a1a:	fb1b fb0e 	smulbb	fp, fp, lr
 8022a1e:	b289      	uxth	r1, r1
 8022a20:	fb10 fe0e 	smulbb	lr, r0, lr
 8022a24:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022a28:	fa5f fc8c 	uxtb.w	ip, ip
 8022a2c:	fb02 b203 	mla	r2, r2, r3, fp
 8022a30:	1c48      	adds	r0, r1, #1
 8022a32:	fb0c e303 	mla	r3, ip, r3, lr
 8022a36:	b292      	uxth	r2, r2
 8022a38:	b29b      	uxth	r3, r3
 8022a3a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8022a3e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8022a42:	f102 0b01 	add.w	fp, r2, #1
 8022a46:	1c59      	adds	r1, r3, #1
 8022a48:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022a4c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022a50:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022a54:	0952      	lsrs	r2, r2, #5
 8022a56:	4301      	orrs	r1, r0
 8022a58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a5c:	4311      	orrs	r1, r2
 8022a5e:	f8a8 1000 	strh.w	r1, [r8]
 8022a62:	e739      	b.n	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022a64:	f113 0b01 	adds.w	fp, r3, #1
 8022a68:	f53f af36 	bmi.w	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022a6c:	45dc      	cmp	ip, fp
 8022a6e:	f6ff af33 	blt.w	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022a72:	f110 0b01 	adds.w	fp, r0, #1
 8022a76:	f53f af2f 	bmi.w	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022a7a:	45de      	cmp	lr, fp
 8022a7c:	f6ff af2c 	blt.w	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022a80:	9a08      	ldr	r2, [sp, #32]
 8022a82:	9302      	str	r3, [sp, #8]
 8022a84:	fa0f f38e 	sxth.w	r3, lr
 8022a88:	9301      	str	r3, [sp, #4]
 8022a8a:	fa0f f38c 	sxth.w	r3, ip
 8022a8e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022a92:	9105      	str	r1, [sp, #20]
 8022a94:	9300      	str	r3, [sp, #0]
 8022a96:	463a      	mov	r2, r7
 8022a98:	4653      	mov	r3, sl
 8022a9a:	4641      	mov	r1, r8
 8022a9c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022a9e:	f7ff fd57 	bl	8022550 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8022aa2:	e719      	b.n	80228d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022aa4:	9906      	ldr	r1, [sp, #24]
 8022aa6:	1422      	asrs	r2, r4, #16
 8022aa8:	1433      	asrs	r3, r6, #16
 8022aaa:	fb01 2303 	mla	r3, r1, r3, r2
 8022aae:	085a      	lsrs	r2, r3, #1
 8022ab0:	07d9      	lsls	r1, r3, #31
 8022ab2:	5cba      	ldrb	r2, [r7, r2]
 8022ab4:	bf54      	ite	pl
 8022ab6:	f002 020f 	andpl.w	r2, r2, #15
 8022aba:	1112      	asrmi	r2, r2, #4
 8022abc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022ac0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022ac4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022ac8:	b2d2      	uxtb	r2, r2
 8022aca:	2800      	cmp	r0, #0
 8022acc:	d062      	beq.n	8022b94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022ace:	f103 0a01 	add.w	sl, r3, #1
 8022ad2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8022ad6:	f01a 0f01 	tst.w	sl, #1
 8022ada:	5c79      	ldrb	r1, [r7, r1]
 8022adc:	bf0c      	ite	eq
 8022ade:	f001 010f 	andeq.w	r1, r1, #15
 8022ae2:	1109      	asrne	r1, r1, #4
 8022ae4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022ae8:	b2c9      	uxtb	r1, r1
 8022aea:	910f      	str	r1, [sp, #60]	; 0x3c
 8022aec:	f1bc 0f00 	cmp.w	ip, #0
 8022af0:	d019      	beq.n	8022b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8022af2:	9908      	ldr	r1, [sp, #32]
 8022af4:	440b      	add	r3, r1
 8022af6:	0859      	lsrs	r1, r3, #1
 8022af8:	f013 0f01 	tst.w	r3, #1
 8022afc:	5c79      	ldrb	r1, [r7, r1]
 8022afe:	bf0c      	ite	eq
 8022b00:	f001 010f 	andeq.w	r1, r1, #15
 8022b04:	1109      	asrne	r1, r1, #4
 8022b06:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022b0a:	b2c9      	uxtb	r1, r1
 8022b0c:	3301      	adds	r3, #1
 8022b0e:	910b      	str	r1, [sp, #44]	; 0x2c
 8022b10:	0859      	lsrs	r1, r3, #1
 8022b12:	07db      	lsls	r3, r3, #31
 8022b14:	5c79      	ldrb	r1, [r7, r1]
 8022b16:	bf54      	ite	pl
 8022b18:	f001 010f 	andpl.w	r1, r1, #15
 8022b1c:	1109      	asrmi	r1, r1, #4
 8022b1e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022b22:	b2c9      	uxtb	r1, r1
 8022b24:	9110      	str	r1, [sp, #64]	; 0x40
 8022b26:	b280      	uxth	r0, r0
 8022b28:	fa1f fc8c 	uxth.w	ip, ip
 8022b2c:	fb00 f30c 	mul.w	r3, r0, ip
 8022b30:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8022b34:	0100      	lsls	r0, r0, #4
 8022b36:	fa1f fc8c 	uxth.w	ip, ip
 8022b3a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8022b3e:	eba1 010c 	sub.w	r1, r1, ip
 8022b42:	fa1f fa81 	uxth.w	sl, r1
 8022b46:	1ac0      	subs	r0, r0, r3
 8022b48:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8022b4a:	b280      	uxth	r0, r0
 8022b4c:	4348      	muls	r0, r1
 8022b4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8022b50:	fb02 020a 	mla	r2, r2, sl, r0
 8022b54:	fb0c 2c01 	mla	ip, ip, r1, r2
 8022b58:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022b5a:	fb03 c302 	mla	r3, r3, r2, ip
 8022b5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022b62:	2bff      	cmp	r3, #255	; 0xff
 8022b64:	d12c      	bne.n	8022bc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022b66:	4b14      	ldr	r3, [pc, #80]	; (8022bb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8022b68:	681a      	ldr	r2, [r3, #0]
 8022b6a:	4b14      	ldr	r3, [pc, #80]	; (8022bbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8022b6c:	0951      	lsrs	r1, r2, #5
 8022b6e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8022b72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b76:	430b      	orrs	r3, r1
 8022b78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022b7c:	4313      	orrs	r3, r2
 8022b7e:	f8ae 3000 	strh.w	r3, [lr]
 8022b82:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022b84:	441c      	add	r4, r3
 8022b86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b88:	f10e 0e02 	add.w	lr, lr, #2
 8022b8c:	441e      	add	r6, r3
 8022b8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8022b92:	e6ce      	b.n	8022932 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022b94:	f1bc 0f00 	cmp.w	ip, #0
 8022b98:	d0c5      	beq.n	8022b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8022b9a:	9908      	ldr	r1, [sp, #32]
 8022b9c:	440b      	add	r3, r1
 8022b9e:	0859      	lsrs	r1, r3, #1
 8022ba0:	07db      	lsls	r3, r3, #31
 8022ba2:	5c79      	ldrb	r1, [r7, r1]
 8022ba4:	bf54      	ite	pl
 8022ba6:	f001 010f 	andpl.w	r1, r1, #15
 8022baa:	1109      	asrmi	r1, r1, #4
 8022bac:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022bb0:	b2c9      	uxtb	r1, r1
 8022bb2:	910b      	str	r1, [sp, #44]	; 0x2c
 8022bb4:	e7b7      	b.n	8022b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8022bb6:	bf00      	nop
 8022bb8:	20020094 	.word	0x20020094
 8022bbc:	fffff800 	.word	0xfffff800
 8022bc0:	2b00      	cmp	r3, #0
 8022bc2:	d0de      	beq.n	8022b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8022bc4:	4a22      	ldr	r2, [pc, #136]	; (8022c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 8022bc6:	f8be c000 	ldrh.w	ip, [lr]
 8022bca:	6810      	ldr	r0, [r2, #0]
 8022bcc:	fa1f fa83 	uxth.w	sl, r3
 8022bd0:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022bd4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022bd8:	43db      	mvns	r3, r3
 8022bda:	b2db      	uxtb	r3, r3
 8022bdc:	fb12 f20a 	smulbb	r2, r2, sl
 8022be0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022be4:	fb01 2103 	mla	r1, r1, r3, r2
 8022be8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022bec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022bf0:	b2c0      	uxtb	r0, r0
 8022bf2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022bf6:	fa5f fc8c 	uxtb.w	ip, ip
 8022bfa:	fb10 f00a 	smulbb	r0, r0, sl
 8022bfe:	fb0c 0003 	mla	r0, ip, r3, r0
 8022c02:	b289      	uxth	r1, r1
 8022c04:	fb1b fb0a 	smulbb	fp, fp, sl
 8022c08:	b280      	uxth	r0, r0
 8022c0a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022c0e:	fb02 b203 	mla	r2, r2, r3, fp
 8022c12:	1c4b      	adds	r3, r1, #1
 8022c14:	f100 0b01 	add.w	fp, r0, #1
 8022c18:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022c1c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8022c20:	b292      	uxth	r2, r2
 8022c22:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8022c26:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022c2a:	ea4b 0101 	orr.w	r1, fp, r1
 8022c2e:	f102 0b01 	add.w	fp, r2, #1
 8022c32:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022c36:	0952      	lsrs	r2, r2, #5
 8022c38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022c3c:	4311      	orrs	r1, r2
 8022c3e:	f8ae 1000 	strh.w	r1, [lr]
 8022c42:	e79e      	b.n	8022b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8022c44:	b013      	add	sp, #76	; 0x4c
 8022c46:	ecbd 8b08 	vpop	{d8-d11}
 8022c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c4e:	bf00      	nop
 8022c50:	20020094 	.word	0x20020094

08022c54 <CRC_Lock>:
 8022c54:	b530      	push	{r4, r5, lr}
 8022c56:	4a20      	ldr	r2, [pc, #128]	; (8022cd8 <CRC_Lock+0x84>)
 8022c58:	6813      	ldr	r3, [r2, #0]
 8022c5a:	f023 0301 	bic.w	r3, r3, #1
 8022c5e:	6013      	str	r3, [r2, #0]
 8022c60:	4b1e      	ldr	r3, [pc, #120]	; (8022cdc <CRC_Lock+0x88>)
 8022c62:	681a      	ldr	r2, [r3, #0]
 8022c64:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8022c68:	4022      	ands	r2, r4
 8022c6a:	f24c 2540 	movw	r5, #49728	; 0xc240
 8022c6e:	42aa      	cmp	r2, r5
 8022c70:	d005      	beq.n	8022c7e <CRC_Lock+0x2a>
 8022c72:	681b      	ldr	r3, [r3, #0]
 8022c74:	f24c 2270 	movw	r2, #49776	; 0xc270
 8022c78:	4023      	ands	r3, r4
 8022c7a:	4293      	cmp	r3, r2
 8022c7c:	d124      	bne.n	8022cc8 <CRC_Lock+0x74>
 8022c7e:	4b18      	ldr	r3, [pc, #96]	; (8022ce0 <CRC_Lock+0x8c>)
 8022c80:	681b      	ldr	r3, [r3, #0]
 8022c82:	bb0b      	cbnz	r3, 8022cc8 <CRC_Lock+0x74>
 8022c84:	4b17      	ldr	r3, [pc, #92]	; (8022ce4 <CRC_Lock+0x90>)
 8022c86:	681a      	ldr	r2, [r3, #0]
 8022c88:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8022c8c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8022c90:	d00d      	beq.n	8022cae <CRC_Lock+0x5a>
 8022c92:	681a      	ldr	r2, [r3, #0]
 8022c94:	f240 4483 	movw	r4, #1155	; 0x483
 8022c98:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8022c9c:	42a2      	cmp	r2, r4
 8022c9e:	d006      	beq.n	8022cae <CRC_Lock+0x5a>
 8022ca0:	681b      	ldr	r3, [r3, #0]
 8022ca2:	f240 4285 	movw	r2, #1157	; 0x485
 8022ca6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8022caa:	4293      	cmp	r3, r2
 8022cac:	d10c      	bne.n	8022cc8 <CRC_Lock+0x74>
 8022cae:	4b0e      	ldr	r3, [pc, #56]	; (8022ce8 <CRC_Lock+0x94>)
 8022cb0:	2201      	movs	r2, #1
 8022cb2:	601a      	str	r2, [r3, #0]
 8022cb4:	681a      	ldr	r2, [r3, #0]
 8022cb6:	2a00      	cmp	r2, #0
 8022cb8:	d1fc      	bne.n	8022cb4 <CRC_Lock+0x60>
 8022cba:	4b0c      	ldr	r3, [pc, #48]	; (8022cec <CRC_Lock+0x98>)
 8022cbc:	6018      	str	r0, [r3, #0]
 8022cbe:	6818      	ldr	r0, [r3, #0]
 8022cc0:	1a43      	subs	r3, r0, r1
 8022cc2:	4258      	negs	r0, r3
 8022cc4:	4158      	adcs	r0, r3
 8022cc6:	bd30      	pop	{r4, r5, pc}
 8022cc8:	4b09      	ldr	r3, [pc, #36]	; (8022cf0 <CRC_Lock+0x9c>)
 8022cca:	2201      	movs	r2, #1
 8022ccc:	601a      	str	r2, [r3, #0]
 8022cce:	681a      	ldr	r2, [r3, #0]
 8022cd0:	2a00      	cmp	r2, #0
 8022cd2:	d1fc      	bne.n	8022cce <CRC_Lock+0x7a>
 8022cd4:	4b07      	ldr	r3, [pc, #28]	; (8022cf4 <CRC_Lock+0xa0>)
 8022cd6:	e7f1      	b.n	8022cbc <CRC_Lock+0x68>
 8022cd8:	e0002000 	.word	0xe0002000
 8022cdc:	e000ed00 	.word	0xe000ed00
 8022ce0:	e0042000 	.word	0xe0042000
 8022ce4:	5c001000 	.word	0x5c001000
 8022ce8:	58024c08 	.word	0x58024c08
 8022cec:	58024c00 	.word	0x58024c00
 8022cf0:	40023008 	.word	0x40023008
 8022cf4:	40023000 	.word	0x40023000

08022cf8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8022cf8:	6101      	str	r1, [r0, #16]
 8022cfa:	4770      	bx	lr

08022cfc <_ZN8touchgfx8Gestures4tickEv>:
 8022cfc:	7b83      	ldrb	r3, [r0, #14]
 8022cfe:	b14b      	cbz	r3, 8022d14 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8022d00:	8903      	ldrh	r3, [r0, #8]
 8022d02:	3301      	adds	r3, #1
 8022d04:	b29b      	uxth	r3, r3
 8022d06:	2b07      	cmp	r3, #7
 8022d08:	8103      	strh	r3, [r0, #8]
 8022d0a:	bf81      	itttt	hi
 8022d0c:	2300      	movhi	r3, #0
 8022d0e:	8143      	strhhi	r3, [r0, #10]
 8022d10:	8183      	strhhi	r3, [r0, #12]
 8022d12:	7383      	strbhi	r3, [r0, #14]
 8022d14:	4770      	bx	lr
	...

08022d18 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8022d18:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8022d1c:	4604      	mov	r4, r0
 8022d1e:	8880      	ldrh	r0, [r0, #4]
 8022d20:	f8ad 0006 	strh.w	r0, [sp, #6]
 8022d24:	4698      	mov	r8, r3
 8022d26:	eba8 0000 	sub.w	r0, r8, r0
 8022d2a:	4b1c      	ldr	r3, [pc, #112]	; (8022d9c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8022d2c:	9300      	str	r3, [sp, #0]
 8022d2e:	b280      	uxth	r0, r0
 8022d30:	2300      	movs	r3, #0
 8022d32:	f88d 3004 	strb.w	r3, [sp, #4]
 8022d36:	b203      	sxth	r3, r0
 8022d38:	2b00      	cmp	r3, #0
 8022d3a:	bfb8      	it	lt
 8022d3c:	4240      	neglt	r0, r0
 8022d3e:	4617      	mov	r7, r2
 8022d40:	8aa2      	ldrh	r2, [r4, #20]
 8022d42:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8022d46:	f8ad 800a 	strh.w	r8, [sp, #10]
 8022d4a:	bfb8      	it	lt
 8022d4c:	b203      	sxthlt	r3, r0
 8022d4e:	460e      	mov	r6, r1
 8022d50:	4293      	cmp	r3, r2
 8022d52:	88e1      	ldrh	r1, [r4, #6]
 8022d54:	f8ad 1008 	strh.w	r1, [sp, #8]
 8022d58:	f8ad 500c 	strh.w	r5, [sp, #12]
 8022d5c:	dc08      	bgt.n	8022d70 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 8022d5e:	1a69      	subs	r1, r5, r1
 8022d60:	b289      	uxth	r1, r1
 8022d62:	b20b      	sxth	r3, r1
 8022d64:	2b00      	cmp	r3, #0
 8022d66:	bfbc      	itt	lt
 8022d68:	4249      	neglt	r1, r1
 8022d6a:	b20b      	sxthlt	r3, r1
 8022d6c:	429a      	cmp	r2, r3
 8022d6e:	da13      	bge.n	8022d98 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 8022d70:	6920      	ldr	r0, [r4, #16]
 8022d72:	6803      	ldr	r3, [r0, #0]
 8022d74:	4669      	mov	r1, sp
 8022d76:	685b      	ldr	r3, [r3, #4]
 8022d78:	4798      	blx	r3
 8022d7a:	eba8 0606 	sub.w	r6, r8, r6
 8022d7e:	2300      	movs	r3, #0
 8022d80:	1bef      	subs	r7, r5, r7
 8022d82:	2001      	movs	r0, #1
 8022d84:	8123      	strh	r3, [r4, #8]
 8022d86:	8166      	strh	r6, [r4, #10]
 8022d88:	81a7      	strh	r7, [r4, #12]
 8022d8a:	f8a4 8004 	strh.w	r8, [r4, #4]
 8022d8e:	80e5      	strh	r5, [r4, #6]
 8022d90:	73a0      	strb	r0, [r4, #14]
 8022d92:	b004      	add	sp, #16
 8022d94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022d98:	2000      	movs	r0, #0
 8022d9a:	e7fa      	b.n	8022d92 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8022d9c:	0802873c 	.word	0x0802873c

08022da0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8022da0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022da2:	461e      	mov	r6, r3
 8022da4:	1e4b      	subs	r3, r1, #1
 8022da6:	2b01      	cmp	r3, #1
 8022da8:	b085      	sub	sp, #20
 8022daa:	4604      	mov	r4, r0
 8022dac:	460d      	mov	r5, r1
 8022dae:	4617      	mov	r7, r2
 8022db0:	d84b      	bhi.n	8022e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8022db2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8022db6:	1cd3      	adds	r3, r2, #3
 8022db8:	b29b      	uxth	r3, r3
 8022dba:	2b06      	cmp	r3, #6
 8022dbc:	d916      	bls.n	8022dec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8022dbe:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8022e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022dc2:	f8cd c004 	str.w	ip, [sp, #4]
 8022dc6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022dca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022dce:	6900      	ldr	r0, [r0, #16]
 8022dd0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022dd4:	f04f 0c00 	mov.w	ip, #0
 8022dd8:	f88d c008 	strb.w	ip, [sp, #8]
 8022ddc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022de0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022de4:	6803      	ldr	r3, [r0, #0]
 8022de6:	a901      	add	r1, sp, #4
 8022de8:	689b      	ldr	r3, [r3, #8]
 8022dea:	4798      	blx	r3
 8022dec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022df0:	1cd3      	adds	r3, r2, #3
 8022df2:	b29b      	uxth	r3, r3
 8022df4:	2b06      	cmp	r3, #6
 8022df6:	d916      	bls.n	8022e26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022df8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8022e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022dfc:	f8cd c004 	str.w	ip, [sp, #4]
 8022e00:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022e04:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022e08:	6920      	ldr	r0, [r4, #16]
 8022e0a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022e0e:	f04f 0c01 	mov.w	ip, #1
 8022e12:	f88d c008 	strb.w	ip, [sp, #8]
 8022e16:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022e1a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022e1e:	6803      	ldr	r3, [r0, #0]
 8022e20:	a901      	add	r1, sp, #4
 8022e22:	689b      	ldr	r3, [r3, #8]
 8022e24:	4798      	blx	r3
 8022e26:	4b0d      	ldr	r3, [pc, #52]	; (8022e5c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8022e28:	9301      	str	r3, [sp, #4]
 8022e2a:	6920      	ldr	r0, [r4, #16]
 8022e2c:	f88d 5008 	strb.w	r5, [sp, #8]
 8022e30:	2300      	movs	r3, #0
 8022e32:	f8ad 700a 	strh.w	r7, [sp, #10]
 8022e36:	f8ad 600c 	strh.w	r6, [sp, #12]
 8022e3a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022e3e:	6803      	ldr	r3, [r0, #0]
 8022e40:	a901      	add	r1, sp, #4
 8022e42:	681b      	ldr	r3, [r3, #0]
 8022e44:	4798      	blx	r3
 8022e46:	b005      	add	sp, #20
 8022e48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022e4a:	2900      	cmp	r1, #0
 8022e4c:	d1eb      	bne.n	8022e26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022e4e:	80a2      	strh	r2, [r4, #4]
 8022e50:	80c6      	strh	r6, [r0, #6]
 8022e52:	60a1      	str	r1, [r4, #8]
 8022e54:	81a1      	strh	r1, [r4, #12]
 8022e56:	73a1      	strb	r1, [r4, #14]
 8022e58:	e7e5      	b.n	8022e26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022e5a:	bf00      	nop
 8022e5c:	08028728 	.word	0x08028728
 8022e60:	08028750 	.word	0x08028750

08022e64 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8022e64:	b570      	push	{r4, r5, r6, lr}
 8022e66:	790b      	ldrb	r3, [r1, #4]
 8022e68:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8022e6c:	2b00      	cmp	r3, #0
 8022e6e:	bf0c      	ite	eq
 8022e70:	2301      	moveq	r3, #1
 8022e72:	2300      	movne	r3, #0
 8022e74:	4604      	mov	r4, r0
 8022e76:	460e      	mov	r6, r1
 8022e78:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8022e7c:	d109      	bne.n	8022e92 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8022e7e:	b14d      	cbz	r5, 8022e94 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8022e80:	7933      	ldrb	r3, [r6, #4]
 8022e82:	2b01      	cmp	r3, #1
 8022e84:	d10c      	bne.n	8022ea0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8022e86:	6823      	ldr	r3, [r4, #0]
 8022e88:	4620      	mov	r0, r4
 8022e8a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8022e8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8022e90:	4718      	bx	r3
 8022e92:	b12d      	cbz	r5, 8022ea0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8022e94:	6823      	ldr	r3, [r4, #0]
 8022e96:	4620      	mov	r0, r4
 8022e98:	695b      	ldr	r3, [r3, #20]
 8022e9a:	4798      	blx	r3
 8022e9c:	2d00      	cmp	r5, #0
 8022e9e:	d1ef      	bne.n	8022e80 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8022ea0:	bd70      	pop	{r4, r5, r6, pc}

08022ea2 <__aeabi_atexit>:
 8022ea2:	460b      	mov	r3, r1
 8022ea4:	4601      	mov	r1, r0
 8022ea6:	4618      	mov	r0, r3
 8022ea8:	f000 b852 	b.w	8022f50 <__cxa_atexit>

08022eac <_ZdlPvj>:
 8022eac:	f000 b812 	b.w	8022ed4 <_ZdlPv>

08022eb0 <__cxa_guard_acquire>:
 8022eb0:	6803      	ldr	r3, [r0, #0]
 8022eb2:	07db      	lsls	r3, r3, #31
 8022eb4:	d406      	bmi.n	8022ec4 <__cxa_guard_acquire+0x14>
 8022eb6:	7843      	ldrb	r3, [r0, #1]
 8022eb8:	b103      	cbz	r3, 8022ebc <__cxa_guard_acquire+0xc>
 8022eba:	deff      	udf	#255	; 0xff
 8022ebc:	2301      	movs	r3, #1
 8022ebe:	7043      	strb	r3, [r0, #1]
 8022ec0:	4618      	mov	r0, r3
 8022ec2:	4770      	bx	lr
 8022ec4:	2000      	movs	r0, #0
 8022ec6:	4770      	bx	lr

08022ec8 <__cxa_guard_release>:
 8022ec8:	2301      	movs	r3, #1
 8022eca:	6003      	str	r3, [r0, #0]
 8022ecc:	4770      	bx	lr

08022ece <__cxa_pure_virtual>:
 8022ece:	b508      	push	{r3, lr}
 8022ed0:	f000 f80e 	bl	8022ef0 <_ZSt9terminatev>

08022ed4 <_ZdlPv>:
 8022ed4:	f000 baa8 	b.w	8023428 <free>

08022ed8 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8022ed8:	b508      	push	{r3, lr}
 8022eda:	4780      	blx	r0
 8022edc:	f000 f80d 	bl	8022efa <abort>

08022ee0 <_ZSt13get_terminatev>:
 8022ee0:	4b02      	ldr	r3, [pc, #8]	; (8022eec <_ZSt13get_terminatev+0xc>)
 8022ee2:	6818      	ldr	r0, [r3, #0]
 8022ee4:	f3bf 8f5b 	dmb	ish
 8022ee8:	4770      	bx	lr
 8022eea:	bf00      	nop
 8022eec:	200000d8 	.word	0x200000d8

08022ef0 <_ZSt9terminatev>:
 8022ef0:	b508      	push	{r3, lr}
 8022ef2:	f7ff fff5 	bl	8022ee0 <_ZSt13get_terminatev>
 8022ef6:	f7ff ffef 	bl	8022ed8 <_ZN10__cxxabiv111__terminateEPFvvE>

08022efa <abort>:
 8022efa:	b508      	push	{r3, lr}
 8022efc:	2006      	movs	r0, #6
 8022efe:	f000 feeb 	bl	8023cd8 <raise>
 8022f02:	2001      	movs	r0, #1
 8022f04:	f7df f812 	bl	8001f2c <_exit>

08022f08 <__assert_func>:
 8022f08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022f0a:	4614      	mov	r4, r2
 8022f0c:	461a      	mov	r2, r3
 8022f0e:	4b09      	ldr	r3, [pc, #36]	; (8022f34 <__assert_func+0x2c>)
 8022f10:	681b      	ldr	r3, [r3, #0]
 8022f12:	4605      	mov	r5, r0
 8022f14:	68d8      	ldr	r0, [r3, #12]
 8022f16:	b14c      	cbz	r4, 8022f2c <__assert_func+0x24>
 8022f18:	4b07      	ldr	r3, [pc, #28]	; (8022f38 <__assert_func+0x30>)
 8022f1a:	9100      	str	r1, [sp, #0]
 8022f1c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022f20:	4906      	ldr	r1, [pc, #24]	; (8022f3c <__assert_func+0x34>)
 8022f22:	462b      	mov	r3, r5
 8022f24:	f000 f912 	bl	802314c <fiprintf>
 8022f28:	f7ff ffe7 	bl	8022efa <abort>
 8022f2c:	4b04      	ldr	r3, [pc, #16]	; (8022f40 <__assert_func+0x38>)
 8022f2e:	461c      	mov	r4, r3
 8022f30:	e7f3      	b.n	8022f1a <__assert_func+0x12>
 8022f32:	bf00      	nop
 8022f34:	200000dc 	.word	0x200000dc
 8022f38:	08029a75 	.word	0x08029a75
 8022f3c:	08029a82 	.word	0x08029a82
 8022f40:	08029ab0 	.word	0x08029ab0

08022f44 <atexit>:
 8022f44:	2300      	movs	r3, #0
 8022f46:	4601      	mov	r1, r0
 8022f48:	461a      	mov	r2, r3
 8022f4a:	4618      	mov	r0, r3
 8022f4c:	f001 ba2e 	b.w	80243ac <__register_exitproc>

08022f50 <__cxa_atexit>:
 8022f50:	b510      	push	{r4, lr}
 8022f52:	4c05      	ldr	r4, [pc, #20]	; (8022f68 <__cxa_atexit+0x18>)
 8022f54:	4613      	mov	r3, r2
 8022f56:	b12c      	cbz	r4, 8022f64 <__cxa_atexit+0x14>
 8022f58:	460a      	mov	r2, r1
 8022f5a:	4601      	mov	r1, r0
 8022f5c:	2002      	movs	r0, #2
 8022f5e:	f001 fa25 	bl	80243ac <__register_exitproc>
 8022f62:	bd10      	pop	{r4, pc}
 8022f64:	4620      	mov	r0, r4
 8022f66:	e7fc      	b.n	8022f62 <__cxa_atexit+0x12>
 8022f68:	080243ad 	.word	0x080243ad

08022f6c <div>:
 8022f6c:	2900      	cmp	r1, #0
 8022f6e:	b510      	push	{r4, lr}
 8022f70:	fb91 f4f2 	sdiv	r4, r1, r2
 8022f74:	fb02 1314 	mls	r3, r2, r4, r1
 8022f78:	db06      	blt.n	8022f88 <div+0x1c>
 8022f7a:	2b00      	cmp	r3, #0
 8022f7c:	da01      	bge.n	8022f82 <div+0x16>
 8022f7e:	3401      	adds	r4, #1
 8022f80:	1a9b      	subs	r3, r3, r2
 8022f82:	e9c0 4300 	strd	r4, r3, [r0]
 8022f86:	bd10      	pop	{r4, pc}
 8022f88:	2b00      	cmp	r3, #0
 8022f8a:	bfc4      	itt	gt
 8022f8c:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8022f90:	189b      	addgt	r3, r3, r2
 8022f92:	e7f6      	b.n	8022f82 <div+0x16>

08022f94 <__errno>:
 8022f94:	4b01      	ldr	r3, [pc, #4]	; (8022f9c <__errno+0x8>)
 8022f96:	6818      	ldr	r0, [r3, #0]
 8022f98:	4770      	bx	lr
 8022f9a:	bf00      	nop
 8022f9c:	200000dc 	.word	0x200000dc

08022fa0 <std>:
 8022fa0:	2300      	movs	r3, #0
 8022fa2:	b510      	push	{r4, lr}
 8022fa4:	4604      	mov	r4, r0
 8022fa6:	e9c0 3300 	strd	r3, r3, [r0]
 8022faa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022fae:	6083      	str	r3, [r0, #8]
 8022fb0:	8181      	strh	r1, [r0, #12]
 8022fb2:	6643      	str	r3, [r0, #100]	; 0x64
 8022fb4:	81c2      	strh	r2, [r0, #14]
 8022fb6:	6183      	str	r3, [r0, #24]
 8022fb8:	4619      	mov	r1, r3
 8022fba:	2208      	movs	r2, #8
 8022fbc:	305c      	adds	r0, #92	; 0x5c
 8022fbe:	f000 fa49 	bl	8023454 <memset>
 8022fc2:	4b05      	ldr	r3, [pc, #20]	; (8022fd8 <std+0x38>)
 8022fc4:	6263      	str	r3, [r4, #36]	; 0x24
 8022fc6:	4b05      	ldr	r3, [pc, #20]	; (8022fdc <std+0x3c>)
 8022fc8:	62a3      	str	r3, [r4, #40]	; 0x28
 8022fca:	4b05      	ldr	r3, [pc, #20]	; (8022fe0 <std+0x40>)
 8022fcc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8022fce:	4b05      	ldr	r3, [pc, #20]	; (8022fe4 <std+0x44>)
 8022fd0:	6224      	str	r4, [r4, #32]
 8022fd2:	6323      	str	r3, [r4, #48]	; 0x30
 8022fd4:	bd10      	pop	{r4, pc}
 8022fd6:	bf00      	nop
 8022fd8:	08023d11 	.word	0x08023d11
 8022fdc:	08023d37 	.word	0x08023d37
 8022fe0:	08023d6f 	.word	0x08023d6f
 8022fe4:	08023d93 	.word	0x08023d93

08022fe8 <_cleanup_r>:
 8022fe8:	4901      	ldr	r1, [pc, #4]	; (8022ff0 <_cleanup_r+0x8>)
 8022fea:	f000 b8c1 	b.w	8023170 <_fwalk_reent>
 8022fee:	bf00      	nop
 8022ff0:	0802459d 	.word	0x0802459d

08022ff4 <__sfmoreglue>:
 8022ff4:	b570      	push	{r4, r5, r6, lr}
 8022ff6:	1e4a      	subs	r2, r1, #1
 8022ff8:	2568      	movs	r5, #104	; 0x68
 8022ffa:	4355      	muls	r5, r2
 8022ffc:	460e      	mov	r6, r1
 8022ffe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8023002:	f000 fa7f 	bl	8023504 <_malloc_r>
 8023006:	4604      	mov	r4, r0
 8023008:	b140      	cbz	r0, 802301c <__sfmoreglue+0x28>
 802300a:	2100      	movs	r1, #0
 802300c:	e9c0 1600 	strd	r1, r6, [r0]
 8023010:	300c      	adds	r0, #12
 8023012:	60a0      	str	r0, [r4, #8]
 8023014:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8023018:	f000 fa1c 	bl	8023454 <memset>
 802301c:	4620      	mov	r0, r4
 802301e:	bd70      	pop	{r4, r5, r6, pc}

08023020 <__sfp_lock_acquire>:
 8023020:	4801      	ldr	r0, [pc, #4]	; (8023028 <__sfp_lock_acquire+0x8>)
 8023022:	f000 b9f5 	b.w	8023410 <__retarget_lock_acquire_recursive>
 8023026:	bf00      	nop
 8023028:	20020628 	.word	0x20020628

0802302c <__sfp_lock_release>:
 802302c:	4801      	ldr	r0, [pc, #4]	; (8023034 <__sfp_lock_release+0x8>)
 802302e:	f000 b9f1 	b.w	8023414 <__retarget_lock_release_recursive>
 8023032:	bf00      	nop
 8023034:	20020628 	.word	0x20020628

08023038 <__sinit_lock_acquire>:
 8023038:	4801      	ldr	r0, [pc, #4]	; (8023040 <__sinit_lock_acquire+0x8>)
 802303a:	f000 b9e9 	b.w	8023410 <__retarget_lock_acquire_recursive>
 802303e:	bf00      	nop
 8023040:	20020623 	.word	0x20020623

08023044 <__sinit_lock_release>:
 8023044:	4801      	ldr	r0, [pc, #4]	; (802304c <__sinit_lock_release+0x8>)
 8023046:	f000 b9e5 	b.w	8023414 <__retarget_lock_release_recursive>
 802304a:	bf00      	nop
 802304c:	20020623 	.word	0x20020623

08023050 <__sinit>:
 8023050:	b510      	push	{r4, lr}
 8023052:	4604      	mov	r4, r0
 8023054:	f7ff fff0 	bl	8023038 <__sinit_lock_acquire>
 8023058:	69a3      	ldr	r3, [r4, #24]
 802305a:	b11b      	cbz	r3, 8023064 <__sinit+0x14>
 802305c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023060:	f7ff bff0 	b.w	8023044 <__sinit_lock_release>
 8023064:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8023068:	6523      	str	r3, [r4, #80]	; 0x50
 802306a:	4b13      	ldr	r3, [pc, #76]	; (80230b8 <__sinit+0x68>)
 802306c:	4a13      	ldr	r2, [pc, #76]	; (80230bc <__sinit+0x6c>)
 802306e:	681b      	ldr	r3, [r3, #0]
 8023070:	62a2      	str	r2, [r4, #40]	; 0x28
 8023072:	42a3      	cmp	r3, r4
 8023074:	bf04      	itt	eq
 8023076:	2301      	moveq	r3, #1
 8023078:	61a3      	streq	r3, [r4, #24]
 802307a:	4620      	mov	r0, r4
 802307c:	f000 f820 	bl	80230c0 <__sfp>
 8023080:	6060      	str	r0, [r4, #4]
 8023082:	4620      	mov	r0, r4
 8023084:	f000 f81c 	bl	80230c0 <__sfp>
 8023088:	60a0      	str	r0, [r4, #8]
 802308a:	4620      	mov	r0, r4
 802308c:	f000 f818 	bl	80230c0 <__sfp>
 8023090:	2200      	movs	r2, #0
 8023092:	60e0      	str	r0, [r4, #12]
 8023094:	2104      	movs	r1, #4
 8023096:	6860      	ldr	r0, [r4, #4]
 8023098:	f7ff ff82 	bl	8022fa0 <std>
 802309c:	68a0      	ldr	r0, [r4, #8]
 802309e:	2201      	movs	r2, #1
 80230a0:	2109      	movs	r1, #9
 80230a2:	f7ff ff7d 	bl	8022fa0 <std>
 80230a6:	68e0      	ldr	r0, [r4, #12]
 80230a8:	2202      	movs	r2, #2
 80230aa:	2112      	movs	r1, #18
 80230ac:	f7ff ff78 	bl	8022fa0 <std>
 80230b0:	2301      	movs	r3, #1
 80230b2:	61a3      	str	r3, [r4, #24]
 80230b4:	e7d2      	b.n	802305c <__sinit+0xc>
 80230b6:	bf00      	nop
 80230b8:	08029b14 	.word	0x08029b14
 80230bc:	08022fe9 	.word	0x08022fe9

080230c0 <__sfp>:
 80230c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80230c2:	4607      	mov	r7, r0
 80230c4:	f7ff ffac 	bl	8023020 <__sfp_lock_acquire>
 80230c8:	4b1e      	ldr	r3, [pc, #120]	; (8023144 <__sfp+0x84>)
 80230ca:	681e      	ldr	r6, [r3, #0]
 80230cc:	69b3      	ldr	r3, [r6, #24]
 80230ce:	b913      	cbnz	r3, 80230d6 <__sfp+0x16>
 80230d0:	4630      	mov	r0, r6
 80230d2:	f7ff ffbd 	bl	8023050 <__sinit>
 80230d6:	3648      	adds	r6, #72	; 0x48
 80230d8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80230dc:	3b01      	subs	r3, #1
 80230de:	d503      	bpl.n	80230e8 <__sfp+0x28>
 80230e0:	6833      	ldr	r3, [r6, #0]
 80230e2:	b30b      	cbz	r3, 8023128 <__sfp+0x68>
 80230e4:	6836      	ldr	r6, [r6, #0]
 80230e6:	e7f7      	b.n	80230d8 <__sfp+0x18>
 80230e8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80230ec:	b9d5      	cbnz	r5, 8023124 <__sfp+0x64>
 80230ee:	4b16      	ldr	r3, [pc, #88]	; (8023148 <__sfp+0x88>)
 80230f0:	60e3      	str	r3, [r4, #12]
 80230f2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80230f6:	6665      	str	r5, [r4, #100]	; 0x64
 80230f8:	f000 f988 	bl	802340c <__retarget_lock_init_recursive>
 80230fc:	f7ff ff96 	bl	802302c <__sfp_lock_release>
 8023100:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8023104:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8023108:	6025      	str	r5, [r4, #0]
 802310a:	61a5      	str	r5, [r4, #24]
 802310c:	2208      	movs	r2, #8
 802310e:	4629      	mov	r1, r5
 8023110:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8023114:	f000 f99e 	bl	8023454 <memset>
 8023118:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802311c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8023120:	4620      	mov	r0, r4
 8023122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023124:	3468      	adds	r4, #104	; 0x68
 8023126:	e7d9      	b.n	80230dc <__sfp+0x1c>
 8023128:	2104      	movs	r1, #4
 802312a:	4638      	mov	r0, r7
 802312c:	f7ff ff62 	bl	8022ff4 <__sfmoreglue>
 8023130:	4604      	mov	r4, r0
 8023132:	6030      	str	r0, [r6, #0]
 8023134:	2800      	cmp	r0, #0
 8023136:	d1d5      	bne.n	80230e4 <__sfp+0x24>
 8023138:	f7ff ff78 	bl	802302c <__sfp_lock_release>
 802313c:	230c      	movs	r3, #12
 802313e:	603b      	str	r3, [r7, #0]
 8023140:	e7ee      	b.n	8023120 <__sfp+0x60>
 8023142:	bf00      	nop
 8023144:	08029b14 	.word	0x08029b14
 8023148:	ffff0001 	.word	0xffff0001

0802314c <fiprintf>:
 802314c:	b40e      	push	{r1, r2, r3}
 802314e:	b503      	push	{r0, r1, lr}
 8023150:	4601      	mov	r1, r0
 8023152:	ab03      	add	r3, sp, #12
 8023154:	4805      	ldr	r0, [pc, #20]	; (802316c <fiprintf+0x20>)
 8023156:	f853 2b04 	ldr.w	r2, [r3], #4
 802315a:	6800      	ldr	r0, [r0, #0]
 802315c:	9301      	str	r3, [sp, #4]
 802315e:	f000 fa55 	bl	802360c <_vfiprintf_r>
 8023162:	b002      	add	sp, #8
 8023164:	f85d eb04 	ldr.w	lr, [sp], #4
 8023168:	b003      	add	sp, #12
 802316a:	4770      	bx	lr
 802316c:	200000dc 	.word	0x200000dc

08023170 <_fwalk_reent>:
 8023170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023174:	4606      	mov	r6, r0
 8023176:	4688      	mov	r8, r1
 8023178:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802317c:	2700      	movs	r7, #0
 802317e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8023182:	f1b9 0901 	subs.w	r9, r9, #1
 8023186:	d505      	bpl.n	8023194 <_fwalk_reent+0x24>
 8023188:	6824      	ldr	r4, [r4, #0]
 802318a:	2c00      	cmp	r4, #0
 802318c:	d1f7      	bne.n	802317e <_fwalk_reent+0xe>
 802318e:	4638      	mov	r0, r7
 8023190:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023194:	89ab      	ldrh	r3, [r5, #12]
 8023196:	2b01      	cmp	r3, #1
 8023198:	d907      	bls.n	80231aa <_fwalk_reent+0x3a>
 802319a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802319e:	3301      	adds	r3, #1
 80231a0:	d003      	beq.n	80231aa <_fwalk_reent+0x3a>
 80231a2:	4629      	mov	r1, r5
 80231a4:	4630      	mov	r0, r6
 80231a6:	47c0      	blx	r8
 80231a8:	4307      	orrs	r7, r0
 80231aa:	3568      	adds	r5, #104	; 0x68
 80231ac:	e7e9      	b.n	8023182 <_fwalk_reent+0x12>
	...

080231b0 <__libc_init_array>:
 80231b0:	b570      	push	{r4, r5, r6, lr}
 80231b2:	4d0d      	ldr	r5, [pc, #52]	; (80231e8 <__libc_init_array+0x38>)
 80231b4:	4c0d      	ldr	r4, [pc, #52]	; (80231ec <__libc_init_array+0x3c>)
 80231b6:	1b64      	subs	r4, r4, r5
 80231b8:	10a4      	asrs	r4, r4, #2
 80231ba:	2600      	movs	r6, #0
 80231bc:	42a6      	cmp	r6, r4
 80231be:	d109      	bne.n	80231d4 <__libc_init_array+0x24>
 80231c0:	4d0b      	ldr	r5, [pc, #44]	; (80231f0 <__libc_init_array+0x40>)
 80231c2:	4c0c      	ldr	r4, [pc, #48]	; (80231f4 <__libc_init_array+0x44>)
 80231c4:	f002 f842 	bl	802524c <_init>
 80231c8:	1b64      	subs	r4, r4, r5
 80231ca:	10a4      	asrs	r4, r4, #2
 80231cc:	2600      	movs	r6, #0
 80231ce:	42a6      	cmp	r6, r4
 80231d0:	d105      	bne.n	80231de <__libc_init_array+0x2e>
 80231d2:	bd70      	pop	{r4, r5, r6, pc}
 80231d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80231d8:	4798      	blx	r3
 80231da:	3601      	adds	r6, #1
 80231dc:	e7ee      	b.n	80231bc <__libc_init_array+0xc>
 80231de:	f855 3b04 	ldr.w	r3, [r5], #4
 80231e2:	4798      	blx	r3
 80231e4:	3601      	adds	r6, #1
 80231e6:	e7f2      	b.n	80231ce <__libc_init_array+0x1e>
 80231e8:	0802a10c 	.word	0x0802a10c
 80231ec:	0802a10c 	.word	0x0802a10c
 80231f0:	0802a10c 	.word	0x0802a10c
 80231f4:	0802a124 	.word	0x0802a124

080231f8 <localtime_r>:
 80231f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80231fc:	4607      	mov	r7, r0
 80231fe:	9101      	str	r1, [sp, #4]
 8023200:	f001 fa4a 	bl	8024698 <__gettzinfo>
 8023204:	9901      	ldr	r1, [sp, #4]
 8023206:	4680      	mov	r8, r0
 8023208:	4638      	mov	r0, r7
 802320a:	f7e5 fba1 	bl	8008950 <gmtime_r>
 802320e:	6943      	ldr	r3, [r0, #20]
 8023210:	079a      	lsls	r2, r3, #30
 8023212:	4604      	mov	r4, r0
 8023214:	f203 766c 	addw	r6, r3, #1900	; 0x76c
 8023218:	d105      	bne.n	8023226 <localtime_r+0x2e>
 802321a:	2264      	movs	r2, #100	; 0x64
 802321c:	fb96 f3f2 	sdiv	r3, r6, r2
 8023220:	fb02 6313 	mls	r3, r2, r3, r6
 8023224:	bb7b      	cbnz	r3, 8023286 <localtime_r+0x8e>
 8023226:	f44f 73c8 	mov.w	r3, #400	; 0x190
 802322a:	fb96 f5f3 	sdiv	r5, r6, r3
 802322e:	fb03 6515 	mls	r5, r3, r5, r6
 8023232:	fab5 f585 	clz	r5, r5
 8023236:	096d      	lsrs	r5, r5, #5
 8023238:	4b68      	ldr	r3, [pc, #416]	; (80233dc <localtime_r+0x1e4>)
 802323a:	2230      	movs	r2, #48	; 0x30
 802323c:	fb02 3505 	mla	r5, r2, r5, r3
 8023240:	f000 fe54 	bl	8023eec <__tz_lock>
 8023244:	f000 fe5e 	bl	8023f04 <_tzset_unlocked>
 8023248:	4b65      	ldr	r3, [pc, #404]	; (80233e0 <localtime_r+0x1e8>)
 802324a:	681b      	ldr	r3, [r3, #0]
 802324c:	b353      	cbz	r3, 80232a4 <localtime_r+0xac>
 802324e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8023252:	42b3      	cmp	r3, r6
 8023254:	d119      	bne.n	802328a <localtime_r+0x92>
 8023256:	f8d8 1000 	ldr.w	r1, [r8]
 802325a:	e9d7 6700 	ldrd	r6, r7, [r7]
 802325e:	e9d8 2308 	ldrd	r2, r3, [r8, #32]
 8023262:	b9d1      	cbnz	r1, 802329a <localtime_r+0xa2>
 8023264:	4296      	cmp	r6, r2
 8023266:	eb77 0303 	sbcs.w	r3, r7, r3
 802326a:	da23      	bge.n	80232b4 <localtime_r+0xbc>
 802326c:	e9d8 2312 	ldrd	r2, r3, [r8, #72]	; 0x48
 8023270:	4296      	cmp	r6, r2
 8023272:	eb77 0303 	sbcs.w	r3, r7, r3
 8023276:	bfb4      	ite	lt
 8023278:	2301      	movlt	r3, #1
 802327a:	2300      	movge	r3, #0
 802327c:	6223      	str	r3, [r4, #32]
 802327e:	db1b      	blt.n	80232b8 <localtime_r+0xc0>
 8023280:	f8d8 1028 	ldr.w	r1, [r8, #40]	; 0x28
 8023284:	e01a      	b.n	80232bc <localtime_r+0xc4>
 8023286:	2501      	movs	r5, #1
 8023288:	e7d6      	b.n	8023238 <localtime_r+0x40>
 802328a:	4630      	mov	r0, r6
 802328c:	f000 fd86 	bl	8023d9c <__tzcalc_limits>
 8023290:	2800      	cmp	r0, #0
 8023292:	d1e0      	bne.n	8023256 <localtime_r+0x5e>
 8023294:	f04f 33ff 	mov.w	r3, #4294967295
 8023298:	e004      	b.n	80232a4 <localtime_r+0xac>
 802329a:	4296      	cmp	r6, r2
 802329c:	eb77 0303 	sbcs.w	r3, r7, r3
 80232a0:	da02      	bge.n	80232a8 <localtime_r+0xb0>
 80232a2:	2300      	movs	r3, #0
 80232a4:	6223      	str	r3, [r4, #32]
 80232a6:	e7eb      	b.n	8023280 <localtime_r+0x88>
 80232a8:	e9d8 2312 	ldrd	r2, r3, [r8, #72]	; 0x48
 80232ac:	4296      	cmp	r6, r2
 80232ae:	eb77 0303 	sbcs.w	r3, r7, r3
 80232b2:	daf6      	bge.n	80232a2 <localtime_r+0xaa>
 80232b4:	2301      	movs	r3, #1
 80232b6:	6223      	str	r3, [r4, #32]
 80232b8:	f8d8 1050 	ldr.w	r1, [r8, #80]	; 0x50
 80232bc:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 80232c0:	203c      	movs	r0, #60	; 0x3c
 80232c2:	fb91 f6f3 	sdiv	r6, r1, r3
 80232c6:	fb03 1316 	mls	r3, r3, r6, r1
 80232ca:	6861      	ldr	r1, [r4, #4]
 80232cc:	fb93 f2f0 	sdiv	r2, r3, r0
 80232d0:	fb00 3012 	mls	r0, r0, r2, r3
 80232d4:	6823      	ldr	r3, [r4, #0]
 80232d6:	1a89      	subs	r1, r1, r2
 80232d8:	68a2      	ldr	r2, [r4, #8]
 80232da:	6061      	str	r1, [r4, #4]
 80232dc:	1a1b      	subs	r3, r3, r0
 80232de:	1b92      	subs	r2, r2, r6
 80232e0:	2b3b      	cmp	r3, #59	; 0x3b
 80232e2:	6023      	str	r3, [r4, #0]
 80232e4:	60a2      	str	r2, [r4, #8]
 80232e6:	dd35      	ble.n	8023354 <localtime_r+0x15c>
 80232e8:	3101      	adds	r1, #1
 80232ea:	6061      	str	r1, [r4, #4]
 80232ec:	3b3c      	subs	r3, #60	; 0x3c
 80232ee:	6023      	str	r3, [r4, #0]
 80232f0:	6863      	ldr	r3, [r4, #4]
 80232f2:	2b3b      	cmp	r3, #59	; 0x3b
 80232f4:	dd34      	ble.n	8023360 <localtime_r+0x168>
 80232f6:	3201      	adds	r2, #1
 80232f8:	60a2      	str	r2, [r4, #8]
 80232fa:	3b3c      	subs	r3, #60	; 0x3c
 80232fc:	6063      	str	r3, [r4, #4]
 80232fe:	68a3      	ldr	r3, [r4, #8]
 8023300:	2b17      	cmp	r3, #23
 8023302:	dd33      	ble.n	802336c <localtime_r+0x174>
 8023304:	69e2      	ldr	r2, [r4, #28]
 8023306:	3201      	adds	r2, #1
 8023308:	61e2      	str	r2, [r4, #28]
 802330a:	69a2      	ldr	r2, [r4, #24]
 802330c:	3201      	adds	r2, #1
 802330e:	2a06      	cmp	r2, #6
 8023310:	bfc8      	it	gt
 8023312:	2200      	movgt	r2, #0
 8023314:	61a2      	str	r2, [r4, #24]
 8023316:	68e2      	ldr	r2, [r4, #12]
 8023318:	3b18      	subs	r3, #24
 802331a:	3201      	adds	r2, #1
 802331c:	60a3      	str	r3, [r4, #8]
 802331e:	6923      	ldr	r3, [r4, #16]
 8023320:	60e2      	str	r2, [r4, #12]
 8023322:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
 8023326:	428a      	cmp	r2, r1
 8023328:	dd0e      	ble.n	8023348 <localtime_r+0x150>
 802332a:	2b0b      	cmp	r3, #11
 802332c:	eba2 0201 	sub.w	r2, r2, r1
 8023330:	60e2      	str	r2, [r4, #12]
 8023332:	f103 0201 	add.w	r2, r3, #1
 8023336:	bf09      	itett	eq
 8023338:	6963      	ldreq	r3, [r4, #20]
 802333a:	6122      	strne	r2, [r4, #16]
 802333c:	2200      	moveq	r2, #0
 802333e:	3301      	addeq	r3, #1
 8023340:	bf02      	ittt	eq
 8023342:	6122      	streq	r2, [r4, #16]
 8023344:	6163      	streq	r3, [r4, #20]
 8023346:	61e2      	streq	r2, [r4, #28]
 8023348:	f000 fdd6 	bl	8023ef8 <__tz_unlock>
 802334c:	4620      	mov	r0, r4
 802334e:	b002      	add	sp, #8
 8023350:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023354:	2b00      	cmp	r3, #0
 8023356:	dacb      	bge.n	80232f0 <localtime_r+0xf8>
 8023358:	3901      	subs	r1, #1
 802335a:	6061      	str	r1, [r4, #4]
 802335c:	333c      	adds	r3, #60	; 0x3c
 802335e:	e7c6      	b.n	80232ee <localtime_r+0xf6>
 8023360:	2b00      	cmp	r3, #0
 8023362:	dacc      	bge.n	80232fe <localtime_r+0x106>
 8023364:	3a01      	subs	r2, #1
 8023366:	60a2      	str	r2, [r4, #8]
 8023368:	333c      	adds	r3, #60	; 0x3c
 802336a:	e7c7      	b.n	80232fc <localtime_r+0x104>
 802336c:	2b00      	cmp	r3, #0
 802336e:	daeb      	bge.n	8023348 <localtime_r+0x150>
 8023370:	69e2      	ldr	r2, [r4, #28]
 8023372:	3a01      	subs	r2, #1
 8023374:	61e2      	str	r2, [r4, #28]
 8023376:	69a2      	ldr	r2, [r4, #24]
 8023378:	3a01      	subs	r2, #1
 802337a:	bf48      	it	mi
 802337c:	2206      	movmi	r2, #6
 802337e:	61a2      	str	r2, [r4, #24]
 8023380:	68e2      	ldr	r2, [r4, #12]
 8023382:	3318      	adds	r3, #24
 8023384:	3a01      	subs	r2, #1
 8023386:	60e2      	str	r2, [r4, #12]
 8023388:	60a3      	str	r3, [r4, #8]
 802338a:	2a00      	cmp	r2, #0
 802338c:	d1dc      	bne.n	8023348 <localtime_r+0x150>
 802338e:	6923      	ldr	r3, [r4, #16]
 8023390:	3b01      	subs	r3, #1
 8023392:	d405      	bmi.n	80233a0 <localtime_r+0x1a8>
 8023394:	6123      	str	r3, [r4, #16]
 8023396:	6923      	ldr	r3, [r4, #16]
 8023398:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802339c:	60e3      	str	r3, [r4, #12]
 802339e:	e7d3      	b.n	8023348 <localtime_r+0x150>
 80233a0:	230b      	movs	r3, #11
 80233a2:	6123      	str	r3, [r4, #16]
 80233a4:	6963      	ldr	r3, [r4, #20]
 80233a6:	1e5a      	subs	r2, r3, #1
 80233a8:	6162      	str	r2, [r4, #20]
 80233aa:	f203 726b 	addw	r2, r3, #1899	; 0x76b
 80233ae:	0793      	lsls	r3, r2, #30
 80233b0:	d105      	bne.n	80233be <localtime_r+0x1c6>
 80233b2:	2164      	movs	r1, #100	; 0x64
 80233b4:	fb92 f3f1 	sdiv	r3, r2, r1
 80233b8:	fb01 2313 	mls	r3, r1, r3, r2
 80233bc:	b963      	cbnz	r3, 80233d8 <localtime_r+0x1e0>
 80233be:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80233c2:	fb92 f3f1 	sdiv	r3, r2, r1
 80233c6:	fb01 2313 	mls	r3, r1, r3, r2
 80233ca:	fab3 f383 	clz	r3, r3
 80233ce:	095b      	lsrs	r3, r3, #5
 80233d0:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 80233d4:	61e3      	str	r3, [r4, #28]
 80233d6:	e7de      	b.n	8023396 <localtime_r+0x19e>
 80233d8:	2301      	movs	r3, #1
 80233da:	e7f9      	b.n	80233d0 <localtime_r+0x1d8>
 80233dc:	08029b18 	.word	0x08029b18
 80233e0:	200202b4 	.word	0x200202b4

080233e4 <ldiv>:
 80233e4:	2900      	cmp	r1, #0
 80233e6:	b510      	push	{r4, lr}
 80233e8:	fb91 f4f2 	sdiv	r4, r1, r2
 80233ec:	fb02 1314 	mls	r3, r2, r4, r1
 80233f0:	db06      	blt.n	8023400 <ldiv+0x1c>
 80233f2:	2b00      	cmp	r3, #0
 80233f4:	da01      	bge.n	80233fa <ldiv+0x16>
 80233f6:	3401      	adds	r4, #1
 80233f8:	1a9b      	subs	r3, r3, r2
 80233fa:	e9c0 4300 	strd	r4, r3, [r0]
 80233fe:	bd10      	pop	{r4, pc}
 8023400:	2b00      	cmp	r3, #0
 8023402:	bfc4      	itt	gt
 8023404:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8023408:	189b      	addgt	r3, r3, r2
 802340a:	e7f6      	b.n	80233fa <ldiv+0x16>

0802340c <__retarget_lock_init_recursive>:
 802340c:	4770      	bx	lr

0802340e <__retarget_lock_acquire>:
 802340e:	4770      	bx	lr

08023410 <__retarget_lock_acquire_recursive>:
 8023410:	4770      	bx	lr

08023412 <__retarget_lock_release>:
 8023412:	4770      	bx	lr

08023414 <__retarget_lock_release_recursive>:
 8023414:	4770      	bx	lr
	...

08023418 <malloc>:
 8023418:	4b02      	ldr	r3, [pc, #8]	; (8023424 <malloc+0xc>)
 802341a:	4601      	mov	r1, r0
 802341c:	6818      	ldr	r0, [r3, #0]
 802341e:	f000 b871 	b.w	8023504 <_malloc_r>
 8023422:	bf00      	nop
 8023424:	200000dc 	.word	0x200000dc

08023428 <free>:
 8023428:	4b02      	ldr	r3, [pc, #8]	; (8023434 <free+0xc>)
 802342a:	4601      	mov	r1, r0
 802342c:	6818      	ldr	r0, [r3, #0]
 802342e:	f000 b819 	b.w	8023464 <_free_r>
 8023432:	bf00      	nop
 8023434:	200000dc 	.word	0x200000dc

08023438 <memcpy>:
 8023438:	440a      	add	r2, r1
 802343a:	4291      	cmp	r1, r2
 802343c:	f100 33ff 	add.w	r3, r0, #4294967295
 8023440:	d100      	bne.n	8023444 <memcpy+0xc>
 8023442:	4770      	bx	lr
 8023444:	b510      	push	{r4, lr}
 8023446:	f811 4b01 	ldrb.w	r4, [r1], #1
 802344a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802344e:	4291      	cmp	r1, r2
 8023450:	d1f9      	bne.n	8023446 <memcpy+0xe>
 8023452:	bd10      	pop	{r4, pc}

08023454 <memset>:
 8023454:	4402      	add	r2, r0
 8023456:	4603      	mov	r3, r0
 8023458:	4293      	cmp	r3, r2
 802345a:	d100      	bne.n	802345e <memset+0xa>
 802345c:	4770      	bx	lr
 802345e:	f803 1b01 	strb.w	r1, [r3], #1
 8023462:	e7f9      	b.n	8023458 <memset+0x4>

08023464 <_free_r>:
 8023464:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023466:	2900      	cmp	r1, #0
 8023468:	d048      	beq.n	80234fc <_free_r+0x98>
 802346a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802346e:	9001      	str	r0, [sp, #4]
 8023470:	2b00      	cmp	r3, #0
 8023472:	f1a1 0404 	sub.w	r4, r1, #4
 8023476:	bfb8      	it	lt
 8023478:	18e4      	addlt	r4, r4, r3
 802347a:	f001 f987 	bl	802478c <__malloc_lock>
 802347e:	4a20      	ldr	r2, [pc, #128]	; (8023500 <_free_r+0x9c>)
 8023480:	9801      	ldr	r0, [sp, #4]
 8023482:	6813      	ldr	r3, [r2, #0]
 8023484:	4615      	mov	r5, r2
 8023486:	b933      	cbnz	r3, 8023496 <_free_r+0x32>
 8023488:	6063      	str	r3, [r4, #4]
 802348a:	6014      	str	r4, [r2, #0]
 802348c:	b003      	add	sp, #12
 802348e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023492:	f001 b981 	b.w	8024798 <__malloc_unlock>
 8023496:	42a3      	cmp	r3, r4
 8023498:	d90b      	bls.n	80234b2 <_free_r+0x4e>
 802349a:	6821      	ldr	r1, [r4, #0]
 802349c:	1862      	adds	r2, r4, r1
 802349e:	4293      	cmp	r3, r2
 80234a0:	bf04      	itt	eq
 80234a2:	681a      	ldreq	r2, [r3, #0]
 80234a4:	685b      	ldreq	r3, [r3, #4]
 80234a6:	6063      	str	r3, [r4, #4]
 80234a8:	bf04      	itt	eq
 80234aa:	1852      	addeq	r2, r2, r1
 80234ac:	6022      	streq	r2, [r4, #0]
 80234ae:	602c      	str	r4, [r5, #0]
 80234b0:	e7ec      	b.n	802348c <_free_r+0x28>
 80234b2:	461a      	mov	r2, r3
 80234b4:	685b      	ldr	r3, [r3, #4]
 80234b6:	b10b      	cbz	r3, 80234bc <_free_r+0x58>
 80234b8:	42a3      	cmp	r3, r4
 80234ba:	d9fa      	bls.n	80234b2 <_free_r+0x4e>
 80234bc:	6811      	ldr	r1, [r2, #0]
 80234be:	1855      	adds	r5, r2, r1
 80234c0:	42a5      	cmp	r5, r4
 80234c2:	d10b      	bne.n	80234dc <_free_r+0x78>
 80234c4:	6824      	ldr	r4, [r4, #0]
 80234c6:	4421      	add	r1, r4
 80234c8:	1854      	adds	r4, r2, r1
 80234ca:	42a3      	cmp	r3, r4
 80234cc:	6011      	str	r1, [r2, #0]
 80234ce:	d1dd      	bne.n	802348c <_free_r+0x28>
 80234d0:	681c      	ldr	r4, [r3, #0]
 80234d2:	685b      	ldr	r3, [r3, #4]
 80234d4:	6053      	str	r3, [r2, #4]
 80234d6:	4421      	add	r1, r4
 80234d8:	6011      	str	r1, [r2, #0]
 80234da:	e7d7      	b.n	802348c <_free_r+0x28>
 80234dc:	d902      	bls.n	80234e4 <_free_r+0x80>
 80234de:	230c      	movs	r3, #12
 80234e0:	6003      	str	r3, [r0, #0]
 80234e2:	e7d3      	b.n	802348c <_free_r+0x28>
 80234e4:	6825      	ldr	r5, [r4, #0]
 80234e6:	1961      	adds	r1, r4, r5
 80234e8:	428b      	cmp	r3, r1
 80234ea:	bf04      	itt	eq
 80234ec:	6819      	ldreq	r1, [r3, #0]
 80234ee:	685b      	ldreq	r3, [r3, #4]
 80234f0:	6063      	str	r3, [r4, #4]
 80234f2:	bf04      	itt	eq
 80234f4:	1949      	addeq	r1, r1, r5
 80234f6:	6021      	streq	r1, [r4, #0]
 80234f8:	6054      	str	r4, [r2, #4]
 80234fa:	e7c7      	b.n	802348c <_free_r+0x28>
 80234fc:	b003      	add	sp, #12
 80234fe:	bd30      	pop	{r4, r5, pc}
 8023500:	20020188 	.word	0x20020188

08023504 <_malloc_r>:
 8023504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023506:	1ccd      	adds	r5, r1, #3
 8023508:	f025 0503 	bic.w	r5, r5, #3
 802350c:	3508      	adds	r5, #8
 802350e:	2d0c      	cmp	r5, #12
 8023510:	bf38      	it	cc
 8023512:	250c      	movcc	r5, #12
 8023514:	2d00      	cmp	r5, #0
 8023516:	4606      	mov	r6, r0
 8023518:	db01      	blt.n	802351e <_malloc_r+0x1a>
 802351a:	42a9      	cmp	r1, r5
 802351c:	d903      	bls.n	8023526 <_malloc_r+0x22>
 802351e:	230c      	movs	r3, #12
 8023520:	6033      	str	r3, [r6, #0]
 8023522:	2000      	movs	r0, #0
 8023524:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023526:	f001 f931 	bl	802478c <__malloc_lock>
 802352a:	4921      	ldr	r1, [pc, #132]	; (80235b0 <_malloc_r+0xac>)
 802352c:	680a      	ldr	r2, [r1, #0]
 802352e:	4614      	mov	r4, r2
 8023530:	b99c      	cbnz	r4, 802355a <_malloc_r+0x56>
 8023532:	4f20      	ldr	r7, [pc, #128]	; (80235b4 <_malloc_r+0xb0>)
 8023534:	683b      	ldr	r3, [r7, #0]
 8023536:	b923      	cbnz	r3, 8023542 <_malloc_r+0x3e>
 8023538:	4621      	mov	r1, r4
 802353a:	4630      	mov	r0, r6
 802353c:	f000 fb94 	bl	8023c68 <_sbrk_r>
 8023540:	6038      	str	r0, [r7, #0]
 8023542:	4629      	mov	r1, r5
 8023544:	4630      	mov	r0, r6
 8023546:	f000 fb8f 	bl	8023c68 <_sbrk_r>
 802354a:	1c43      	adds	r3, r0, #1
 802354c:	d123      	bne.n	8023596 <_malloc_r+0x92>
 802354e:	230c      	movs	r3, #12
 8023550:	6033      	str	r3, [r6, #0]
 8023552:	4630      	mov	r0, r6
 8023554:	f001 f920 	bl	8024798 <__malloc_unlock>
 8023558:	e7e3      	b.n	8023522 <_malloc_r+0x1e>
 802355a:	6823      	ldr	r3, [r4, #0]
 802355c:	1b5b      	subs	r3, r3, r5
 802355e:	d417      	bmi.n	8023590 <_malloc_r+0x8c>
 8023560:	2b0b      	cmp	r3, #11
 8023562:	d903      	bls.n	802356c <_malloc_r+0x68>
 8023564:	6023      	str	r3, [r4, #0]
 8023566:	441c      	add	r4, r3
 8023568:	6025      	str	r5, [r4, #0]
 802356a:	e004      	b.n	8023576 <_malloc_r+0x72>
 802356c:	6863      	ldr	r3, [r4, #4]
 802356e:	42a2      	cmp	r2, r4
 8023570:	bf0c      	ite	eq
 8023572:	600b      	streq	r3, [r1, #0]
 8023574:	6053      	strne	r3, [r2, #4]
 8023576:	4630      	mov	r0, r6
 8023578:	f001 f90e 	bl	8024798 <__malloc_unlock>
 802357c:	f104 000b 	add.w	r0, r4, #11
 8023580:	1d23      	adds	r3, r4, #4
 8023582:	f020 0007 	bic.w	r0, r0, #7
 8023586:	1ac2      	subs	r2, r0, r3
 8023588:	d0cc      	beq.n	8023524 <_malloc_r+0x20>
 802358a:	1a1b      	subs	r3, r3, r0
 802358c:	50a3      	str	r3, [r4, r2]
 802358e:	e7c9      	b.n	8023524 <_malloc_r+0x20>
 8023590:	4622      	mov	r2, r4
 8023592:	6864      	ldr	r4, [r4, #4]
 8023594:	e7cc      	b.n	8023530 <_malloc_r+0x2c>
 8023596:	1cc4      	adds	r4, r0, #3
 8023598:	f024 0403 	bic.w	r4, r4, #3
 802359c:	42a0      	cmp	r0, r4
 802359e:	d0e3      	beq.n	8023568 <_malloc_r+0x64>
 80235a0:	1a21      	subs	r1, r4, r0
 80235a2:	4630      	mov	r0, r6
 80235a4:	f000 fb60 	bl	8023c68 <_sbrk_r>
 80235a8:	3001      	adds	r0, #1
 80235aa:	d1dd      	bne.n	8023568 <_malloc_r+0x64>
 80235ac:	e7cf      	b.n	802354e <_malloc_r+0x4a>
 80235ae:	bf00      	nop
 80235b0:	20020188 	.word	0x20020188
 80235b4:	2002018c 	.word	0x2002018c

080235b8 <__sfputc_r>:
 80235b8:	6893      	ldr	r3, [r2, #8]
 80235ba:	3b01      	subs	r3, #1
 80235bc:	2b00      	cmp	r3, #0
 80235be:	b410      	push	{r4}
 80235c0:	6093      	str	r3, [r2, #8]
 80235c2:	da08      	bge.n	80235d6 <__sfputc_r+0x1e>
 80235c4:	6994      	ldr	r4, [r2, #24]
 80235c6:	42a3      	cmp	r3, r4
 80235c8:	db01      	blt.n	80235ce <__sfputc_r+0x16>
 80235ca:	290a      	cmp	r1, #10
 80235cc:	d103      	bne.n	80235d6 <__sfputc_r+0x1e>
 80235ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80235d2:	f000 be19 	b.w	8024208 <__swbuf_r>
 80235d6:	6813      	ldr	r3, [r2, #0]
 80235d8:	1c58      	adds	r0, r3, #1
 80235da:	6010      	str	r0, [r2, #0]
 80235dc:	7019      	strb	r1, [r3, #0]
 80235de:	4608      	mov	r0, r1
 80235e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80235e4:	4770      	bx	lr

080235e6 <__sfputs_r>:
 80235e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80235e8:	4606      	mov	r6, r0
 80235ea:	460f      	mov	r7, r1
 80235ec:	4614      	mov	r4, r2
 80235ee:	18d5      	adds	r5, r2, r3
 80235f0:	42ac      	cmp	r4, r5
 80235f2:	d101      	bne.n	80235f8 <__sfputs_r+0x12>
 80235f4:	2000      	movs	r0, #0
 80235f6:	e007      	b.n	8023608 <__sfputs_r+0x22>
 80235f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80235fc:	463a      	mov	r2, r7
 80235fe:	4630      	mov	r0, r6
 8023600:	f7ff ffda 	bl	80235b8 <__sfputc_r>
 8023604:	1c43      	adds	r3, r0, #1
 8023606:	d1f3      	bne.n	80235f0 <__sfputs_r+0xa>
 8023608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802360c <_vfiprintf_r>:
 802360c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023610:	460d      	mov	r5, r1
 8023612:	b09d      	sub	sp, #116	; 0x74
 8023614:	4614      	mov	r4, r2
 8023616:	4698      	mov	r8, r3
 8023618:	4606      	mov	r6, r0
 802361a:	b118      	cbz	r0, 8023624 <_vfiprintf_r+0x18>
 802361c:	6983      	ldr	r3, [r0, #24]
 802361e:	b90b      	cbnz	r3, 8023624 <_vfiprintf_r+0x18>
 8023620:	f7ff fd16 	bl	8023050 <__sinit>
 8023624:	4b89      	ldr	r3, [pc, #548]	; (802384c <_vfiprintf_r+0x240>)
 8023626:	429d      	cmp	r5, r3
 8023628:	d11b      	bne.n	8023662 <_vfiprintf_r+0x56>
 802362a:	6875      	ldr	r5, [r6, #4]
 802362c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802362e:	07d9      	lsls	r1, r3, #31
 8023630:	d405      	bmi.n	802363e <_vfiprintf_r+0x32>
 8023632:	89ab      	ldrh	r3, [r5, #12]
 8023634:	059a      	lsls	r2, r3, #22
 8023636:	d402      	bmi.n	802363e <_vfiprintf_r+0x32>
 8023638:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802363a:	f7ff fee9 	bl	8023410 <__retarget_lock_acquire_recursive>
 802363e:	89ab      	ldrh	r3, [r5, #12]
 8023640:	071b      	lsls	r3, r3, #28
 8023642:	d501      	bpl.n	8023648 <_vfiprintf_r+0x3c>
 8023644:	692b      	ldr	r3, [r5, #16]
 8023646:	b9eb      	cbnz	r3, 8023684 <_vfiprintf_r+0x78>
 8023648:	4629      	mov	r1, r5
 802364a:	4630      	mov	r0, r6
 802364c:	f000 fe40 	bl	80242d0 <__swsetup_r>
 8023650:	b1c0      	cbz	r0, 8023684 <_vfiprintf_r+0x78>
 8023652:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023654:	07dc      	lsls	r4, r3, #31
 8023656:	d50e      	bpl.n	8023676 <_vfiprintf_r+0x6a>
 8023658:	f04f 30ff 	mov.w	r0, #4294967295
 802365c:	b01d      	add	sp, #116	; 0x74
 802365e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023662:	4b7b      	ldr	r3, [pc, #492]	; (8023850 <_vfiprintf_r+0x244>)
 8023664:	429d      	cmp	r5, r3
 8023666:	d101      	bne.n	802366c <_vfiprintf_r+0x60>
 8023668:	68b5      	ldr	r5, [r6, #8]
 802366a:	e7df      	b.n	802362c <_vfiprintf_r+0x20>
 802366c:	4b79      	ldr	r3, [pc, #484]	; (8023854 <_vfiprintf_r+0x248>)
 802366e:	429d      	cmp	r5, r3
 8023670:	bf08      	it	eq
 8023672:	68f5      	ldreq	r5, [r6, #12]
 8023674:	e7da      	b.n	802362c <_vfiprintf_r+0x20>
 8023676:	89ab      	ldrh	r3, [r5, #12]
 8023678:	0598      	lsls	r0, r3, #22
 802367a:	d4ed      	bmi.n	8023658 <_vfiprintf_r+0x4c>
 802367c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802367e:	f7ff fec9 	bl	8023414 <__retarget_lock_release_recursive>
 8023682:	e7e9      	b.n	8023658 <_vfiprintf_r+0x4c>
 8023684:	2300      	movs	r3, #0
 8023686:	9309      	str	r3, [sp, #36]	; 0x24
 8023688:	2320      	movs	r3, #32
 802368a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802368e:	f8cd 800c 	str.w	r8, [sp, #12]
 8023692:	2330      	movs	r3, #48	; 0x30
 8023694:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8023858 <_vfiprintf_r+0x24c>
 8023698:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802369c:	f04f 0901 	mov.w	r9, #1
 80236a0:	4623      	mov	r3, r4
 80236a2:	469a      	mov	sl, r3
 80236a4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80236a8:	b10a      	cbz	r2, 80236ae <_vfiprintf_r+0xa2>
 80236aa:	2a25      	cmp	r2, #37	; 0x25
 80236ac:	d1f9      	bne.n	80236a2 <_vfiprintf_r+0x96>
 80236ae:	ebba 0b04 	subs.w	fp, sl, r4
 80236b2:	d00b      	beq.n	80236cc <_vfiprintf_r+0xc0>
 80236b4:	465b      	mov	r3, fp
 80236b6:	4622      	mov	r2, r4
 80236b8:	4629      	mov	r1, r5
 80236ba:	4630      	mov	r0, r6
 80236bc:	f7ff ff93 	bl	80235e6 <__sfputs_r>
 80236c0:	3001      	adds	r0, #1
 80236c2:	f000 80aa 	beq.w	802381a <_vfiprintf_r+0x20e>
 80236c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80236c8:	445a      	add	r2, fp
 80236ca:	9209      	str	r2, [sp, #36]	; 0x24
 80236cc:	f89a 3000 	ldrb.w	r3, [sl]
 80236d0:	2b00      	cmp	r3, #0
 80236d2:	f000 80a2 	beq.w	802381a <_vfiprintf_r+0x20e>
 80236d6:	2300      	movs	r3, #0
 80236d8:	f04f 32ff 	mov.w	r2, #4294967295
 80236dc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80236e0:	f10a 0a01 	add.w	sl, sl, #1
 80236e4:	9304      	str	r3, [sp, #16]
 80236e6:	9307      	str	r3, [sp, #28]
 80236e8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80236ec:	931a      	str	r3, [sp, #104]	; 0x68
 80236ee:	4654      	mov	r4, sl
 80236f0:	2205      	movs	r2, #5
 80236f2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80236f6:	4858      	ldr	r0, [pc, #352]	; (8023858 <_vfiprintf_r+0x24c>)
 80236f8:	f7dc fd82 	bl	8000200 <memchr>
 80236fc:	9a04      	ldr	r2, [sp, #16]
 80236fe:	b9d8      	cbnz	r0, 8023738 <_vfiprintf_r+0x12c>
 8023700:	06d1      	lsls	r1, r2, #27
 8023702:	bf44      	itt	mi
 8023704:	2320      	movmi	r3, #32
 8023706:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802370a:	0713      	lsls	r3, r2, #28
 802370c:	bf44      	itt	mi
 802370e:	232b      	movmi	r3, #43	; 0x2b
 8023710:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023714:	f89a 3000 	ldrb.w	r3, [sl]
 8023718:	2b2a      	cmp	r3, #42	; 0x2a
 802371a:	d015      	beq.n	8023748 <_vfiprintf_r+0x13c>
 802371c:	9a07      	ldr	r2, [sp, #28]
 802371e:	4654      	mov	r4, sl
 8023720:	2000      	movs	r0, #0
 8023722:	f04f 0c0a 	mov.w	ip, #10
 8023726:	4621      	mov	r1, r4
 8023728:	f811 3b01 	ldrb.w	r3, [r1], #1
 802372c:	3b30      	subs	r3, #48	; 0x30
 802372e:	2b09      	cmp	r3, #9
 8023730:	d94e      	bls.n	80237d0 <_vfiprintf_r+0x1c4>
 8023732:	b1b0      	cbz	r0, 8023762 <_vfiprintf_r+0x156>
 8023734:	9207      	str	r2, [sp, #28]
 8023736:	e014      	b.n	8023762 <_vfiprintf_r+0x156>
 8023738:	eba0 0308 	sub.w	r3, r0, r8
 802373c:	fa09 f303 	lsl.w	r3, r9, r3
 8023740:	4313      	orrs	r3, r2
 8023742:	9304      	str	r3, [sp, #16]
 8023744:	46a2      	mov	sl, r4
 8023746:	e7d2      	b.n	80236ee <_vfiprintf_r+0xe2>
 8023748:	9b03      	ldr	r3, [sp, #12]
 802374a:	1d19      	adds	r1, r3, #4
 802374c:	681b      	ldr	r3, [r3, #0]
 802374e:	9103      	str	r1, [sp, #12]
 8023750:	2b00      	cmp	r3, #0
 8023752:	bfbb      	ittet	lt
 8023754:	425b      	neglt	r3, r3
 8023756:	f042 0202 	orrlt.w	r2, r2, #2
 802375a:	9307      	strge	r3, [sp, #28]
 802375c:	9307      	strlt	r3, [sp, #28]
 802375e:	bfb8      	it	lt
 8023760:	9204      	strlt	r2, [sp, #16]
 8023762:	7823      	ldrb	r3, [r4, #0]
 8023764:	2b2e      	cmp	r3, #46	; 0x2e
 8023766:	d10c      	bne.n	8023782 <_vfiprintf_r+0x176>
 8023768:	7863      	ldrb	r3, [r4, #1]
 802376a:	2b2a      	cmp	r3, #42	; 0x2a
 802376c:	d135      	bne.n	80237da <_vfiprintf_r+0x1ce>
 802376e:	9b03      	ldr	r3, [sp, #12]
 8023770:	1d1a      	adds	r2, r3, #4
 8023772:	681b      	ldr	r3, [r3, #0]
 8023774:	9203      	str	r2, [sp, #12]
 8023776:	2b00      	cmp	r3, #0
 8023778:	bfb8      	it	lt
 802377a:	f04f 33ff 	movlt.w	r3, #4294967295
 802377e:	3402      	adds	r4, #2
 8023780:	9305      	str	r3, [sp, #20]
 8023782:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8023868 <_vfiprintf_r+0x25c>
 8023786:	7821      	ldrb	r1, [r4, #0]
 8023788:	2203      	movs	r2, #3
 802378a:	4650      	mov	r0, sl
 802378c:	f7dc fd38 	bl	8000200 <memchr>
 8023790:	b140      	cbz	r0, 80237a4 <_vfiprintf_r+0x198>
 8023792:	2340      	movs	r3, #64	; 0x40
 8023794:	eba0 000a 	sub.w	r0, r0, sl
 8023798:	fa03 f000 	lsl.w	r0, r3, r0
 802379c:	9b04      	ldr	r3, [sp, #16]
 802379e:	4303      	orrs	r3, r0
 80237a0:	3401      	adds	r4, #1
 80237a2:	9304      	str	r3, [sp, #16]
 80237a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80237a8:	482c      	ldr	r0, [pc, #176]	; (802385c <_vfiprintf_r+0x250>)
 80237aa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80237ae:	2206      	movs	r2, #6
 80237b0:	f7dc fd26 	bl	8000200 <memchr>
 80237b4:	2800      	cmp	r0, #0
 80237b6:	d03f      	beq.n	8023838 <_vfiprintf_r+0x22c>
 80237b8:	4b29      	ldr	r3, [pc, #164]	; (8023860 <_vfiprintf_r+0x254>)
 80237ba:	bb1b      	cbnz	r3, 8023804 <_vfiprintf_r+0x1f8>
 80237bc:	9b03      	ldr	r3, [sp, #12]
 80237be:	3307      	adds	r3, #7
 80237c0:	f023 0307 	bic.w	r3, r3, #7
 80237c4:	3308      	adds	r3, #8
 80237c6:	9303      	str	r3, [sp, #12]
 80237c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80237ca:	443b      	add	r3, r7
 80237cc:	9309      	str	r3, [sp, #36]	; 0x24
 80237ce:	e767      	b.n	80236a0 <_vfiprintf_r+0x94>
 80237d0:	fb0c 3202 	mla	r2, ip, r2, r3
 80237d4:	460c      	mov	r4, r1
 80237d6:	2001      	movs	r0, #1
 80237d8:	e7a5      	b.n	8023726 <_vfiprintf_r+0x11a>
 80237da:	2300      	movs	r3, #0
 80237dc:	3401      	adds	r4, #1
 80237de:	9305      	str	r3, [sp, #20]
 80237e0:	4619      	mov	r1, r3
 80237e2:	f04f 0c0a 	mov.w	ip, #10
 80237e6:	4620      	mov	r0, r4
 80237e8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80237ec:	3a30      	subs	r2, #48	; 0x30
 80237ee:	2a09      	cmp	r2, #9
 80237f0:	d903      	bls.n	80237fa <_vfiprintf_r+0x1ee>
 80237f2:	2b00      	cmp	r3, #0
 80237f4:	d0c5      	beq.n	8023782 <_vfiprintf_r+0x176>
 80237f6:	9105      	str	r1, [sp, #20]
 80237f8:	e7c3      	b.n	8023782 <_vfiprintf_r+0x176>
 80237fa:	fb0c 2101 	mla	r1, ip, r1, r2
 80237fe:	4604      	mov	r4, r0
 8023800:	2301      	movs	r3, #1
 8023802:	e7f0      	b.n	80237e6 <_vfiprintf_r+0x1da>
 8023804:	ab03      	add	r3, sp, #12
 8023806:	9300      	str	r3, [sp, #0]
 8023808:	462a      	mov	r2, r5
 802380a:	4b16      	ldr	r3, [pc, #88]	; (8023864 <_vfiprintf_r+0x258>)
 802380c:	a904      	add	r1, sp, #16
 802380e:	4630      	mov	r0, r6
 8023810:	f3af 8000 	nop.w
 8023814:	4607      	mov	r7, r0
 8023816:	1c78      	adds	r0, r7, #1
 8023818:	d1d6      	bne.n	80237c8 <_vfiprintf_r+0x1bc>
 802381a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802381c:	07d9      	lsls	r1, r3, #31
 802381e:	d405      	bmi.n	802382c <_vfiprintf_r+0x220>
 8023820:	89ab      	ldrh	r3, [r5, #12]
 8023822:	059a      	lsls	r2, r3, #22
 8023824:	d402      	bmi.n	802382c <_vfiprintf_r+0x220>
 8023826:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023828:	f7ff fdf4 	bl	8023414 <__retarget_lock_release_recursive>
 802382c:	89ab      	ldrh	r3, [r5, #12]
 802382e:	065b      	lsls	r3, r3, #25
 8023830:	f53f af12 	bmi.w	8023658 <_vfiprintf_r+0x4c>
 8023834:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023836:	e711      	b.n	802365c <_vfiprintf_r+0x50>
 8023838:	ab03      	add	r3, sp, #12
 802383a:	9300      	str	r3, [sp, #0]
 802383c:	462a      	mov	r2, r5
 802383e:	4b09      	ldr	r3, [pc, #36]	; (8023864 <_vfiprintf_r+0x258>)
 8023840:	a904      	add	r1, sp, #16
 8023842:	4630      	mov	r0, r6
 8023844:	f000 f880 	bl	8023948 <_printf_i>
 8023848:	e7e4      	b.n	8023814 <_vfiprintf_r+0x208>
 802384a:	bf00      	nop
 802384c:	08029ad4 	.word	0x08029ad4
 8023850:	08029af4 	.word	0x08029af4
 8023854:	08029ab4 	.word	0x08029ab4
 8023858:	08029b78 	.word	0x08029b78
 802385c:	08029b82 	.word	0x08029b82
 8023860:	00000000 	.word	0x00000000
 8023864:	080235e7 	.word	0x080235e7
 8023868:	08029b7e 	.word	0x08029b7e

0802386c <_printf_common>:
 802386c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023870:	4616      	mov	r6, r2
 8023872:	4699      	mov	r9, r3
 8023874:	688a      	ldr	r2, [r1, #8]
 8023876:	690b      	ldr	r3, [r1, #16]
 8023878:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802387c:	4293      	cmp	r3, r2
 802387e:	bfb8      	it	lt
 8023880:	4613      	movlt	r3, r2
 8023882:	6033      	str	r3, [r6, #0]
 8023884:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8023888:	4607      	mov	r7, r0
 802388a:	460c      	mov	r4, r1
 802388c:	b10a      	cbz	r2, 8023892 <_printf_common+0x26>
 802388e:	3301      	adds	r3, #1
 8023890:	6033      	str	r3, [r6, #0]
 8023892:	6823      	ldr	r3, [r4, #0]
 8023894:	0699      	lsls	r1, r3, #26
 8023896:	bf42      	ittt	mi
 8023898:	6833      	ldrmi	r3, [r6, #0]
 802389a:	3302      	addmi	r3, #2
 802389c:	6033      	strmi	r3, [r6, #0]
 802389e:	6825      	ldr	r5, [r4, #0]
 80238a0:	f015 0506 	ands.w	r5, r5, #6
 80238a4:	d106      	bne.n	80238b4 <_printf_common+0x48>
 80238a6:	f104 0a19 	add.w	sl, r4, #25
 80238aa:	68e3      	ldr	r3, [r4, #12]
 80238ac:	6832      	ldr	r2, [r6, #0]
 80238ae:	1a9b      	subs	r3, r3, r2
 80238b0:	42ab      	cmp	r3, r5
 80238b2:	dc26      	bgt.n	8023902 <_printf_common+0x96>
 80238b4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80238b8:	1e13      	subs	r3, r2, #0
 80238ba:	6822      	ldr	r2, [r4, #0]
 80238bc:	bf18      	it	ne
 80238be:	2301      	movne	r3, #1
 80238c0:	0692      	lsls	r2, r2, #26
 80238c2:	d42b      	bmi.n	802391c <_printf_common+0xb0>
 80238c4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80238c8:	4649      	mov	r1, r9
 80238ca:	4638      	mov	r0, r7
 80238cc:	47c0      	blx	r8
 80238ce:	3001      	adds	r0, #1
 80238d0:	d01e      	beq.n	8023910 <_printf_common+0xa4>
 80238d2:	6823      	ldr	r3, [r4, #0]
 80238d4:	68e5      	ldr	r5, [r4, #12]
 80238d6:	6832      	ldr	r2, [r6, #0]
 80238d8:	f003 0306 	and.w	r3, r3, #6
 80238dc:	2b04      	cmp	r3, #4
 80238de:	bf08      	it	eq
 80238e0:	1aad      	subeq	r5, r5, r2
 80238e2:	68a3      	ldr	r3, [r4, #8]
 80238e4:	6922      	ldr	r2, [r4, #16]
 80238e6:	bf0c      	ite	eq
 80238e8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80238ec:	2500      	movne	r5, #0
 80238ee:	4293      	cmp	r3, r2
 80238f0:	bfc4      	itt	gt
 80238f2:	1a9b      	subgt	r3, r3, r2
 80238f4:	18ed      	addgt	r5, r5, r3
 80238f6:	2600      	movs	r6, #0
 80238f8:	341a      	adds	r4, #26
 80238fa:	42b5      	cmp	r5, r6
 80238fc:	d11a      	bne.n	8023934 <_printf_common+0xc8>
 80238fe:	2000      	movs	r0, #0
 8023900:	e008      	b.n	8023914 <_printf_common+0xa8>
 8023902:	2301      	movs	r3, #1
 8023904:	4652      	mov	r2, sl
 8023906:	4649      	mov	r1, r9
 8023908:	4638      	mov	r0, r7
 802390a:	47c0      	blx	r8
 802390c:	3001      	adds	r0, #1
 802390e:	d103      	bne.n	8023918 <_printf_common+0xac>
 8023910:	f04f 30ff 	mov.w	r0, #4294967295
 8023914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023918:	3501      	adds	r5, #1
 802391a:	e7c6      	b.n	80238aa <_printf_common+0x3e>
 802391c:	18e1      	adds	r1, r4, r3
 802391e:	1c5a      	adds	r2, r3, #1
 8023920:	2030      	movs	r0, #48	; 0x30
 8023922:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8023926:	4422      	add	r2, r4
 8023928:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802392c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8023930:	3302      	adds	r3, #2
 8023932:	e7c7      	b.n	80238c4 <_printf_common+0x58>
 8023934:	2301      	movs	r3, #1
 8023936:	4622      	mov	r2, r4
 8023938:	4649      	mov	r1, r9
 802393a:	4638      	mov	r0, r7
 802393c:	47c0      	blx	r8
 802393e:	3001      	adds	r0, #1
 8023940:	d0e6      	beq.n	8023910 <_printf_common+0xa4>
 8023942:	3601      	adds	r6, #1
 8023944:	e7d9      	b.n	80238fa <_printf_common+0x8e>
	...

08023948 <_printf_i>:
 8023948:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802394c:	460c      	mov	r4, r1
 802394e:	4691      	mov	r9, r2
 8023950:	7e27      	ldrb	r7, [r4, #24]
 8023952:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023954:	2f78      	cmp	r7, #120	; 0x78
 8023956:	4680      	mov	r8, r0
 8023958:	469a      	mov	sl, r3
 802395a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802395e:	d807      	bhi.n	8023970 <_printf_i+0x28>
 8023960:	2f62      	cmp	r7, #98	; 0x62
 8023962:	d80a      	bhi.n	802397a <_printf_i+0x32>
 8023964:	2f00      	cmp	r7, #0
 8023966:	f000 80d8 	beq.w	8023b1a <_printf_i+0x1d2>
 802396a:	2f58      	cmp	r7, #88	; 0x58
 802396c:	f000 80a3 	beq.w	8023ab6 <_printf_i+0x16e>
 8023970:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8023974:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8023978:	e03a      	b.n	80239f0 <_printf_i+0xa8>
 802397a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802397e:	2b15      	cmp	r3, #21
 8023980:	d8f6      	bhi.n	8023970 <_printf_i+0x28>
 8023982:	a001      	add	r0, pc, #4	; (adr r0, 8023988 <_printf_i+0x40>)
 8023984:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8023988:	080239e1 	.word	0x080239e1
 802398c:	080239f5 	.word	0x080239f5
 8023990:	08023971 	.word	0x08023971
 8023994:	08023971 	.word	0x08023971
 8023998:	08023971 	.word	0x08023971
 802399c:	08023971 	.word	0x08023971
 80239a0:	080239f5 	.word	0x080239f5
 80239a4:	08023971 	.word	0x08023971
 80239a8:	08023971 	.word	0x08023971
 80239ac:	08023971 	.word	0x08023971
 80239b0:	08023971 	.word	0x08023971
 80239b4:	08023b01 	.word	0x08023b01
 80239b8:	08023a25 	.word	0x08023a25
 80239bc:	08023ae3 	.word	0x08023ae3
 80239c0:	08023971 	.word	0x08023971
 80239c4:	08023971 	.word	0x08023971
 80239c8:	08023b23 	.word	0x08023b23
 80239cc:	08023971 	.word	0x08023971
 80239d0:	08023a25 	.word	0x08023a25
 80239d4:	08023971 	.word	0x08023971
 80239d8:	08023971 	.word	0x08023971
 80239dc:	08023aeb 	.word	0x08023aeb
 80239e0:	680b      	ldr	r3, [r1, #0]
 80239e2:	1d1a      	adds	r2, r3, #4
 80239e4:	681b      	ldr	r3, [r3, #0]
 80239e6:	600a      	str	r2, [r1, #0]
 80239e8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80239ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80239f0:	2301      	movs	r3, #1
 80239f2:	e0a3      	b.n	8023b3c <_printf_i+0x1f4>
 80239f4:	6825      	ldr	r5, [r4, #0]
 80239f6:	6808      	ldr	r0, [r1, #0]
 80239f8:	062e      	lsls	r6, r5, #24
 80239fa:	f100 0304 	add.w	r3, r0, #4
 80239fe:	d50a      	bpl.n	8023a16 <_printf_i+0xce>
 8023a00:	6805      	ldr	r5, [r0, #0]
 8023a02:	600b      	str	r3, [r1, #0]
 8023a04:	2d00      	cmp	r5, #0
 8023a06:	da03      	bge.n	8023a10 <_printf_i+0xc8>
 8023a08:	232d      	movs	r3, #45	; 0x2d
 8023a0a:	426d      	negs	r5, r5
 8023a0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023a10:	485e      	ldr	r0, [pc, #376]	; (8023b8c <_printf_i+0x244>)
 8023a12:	230a      	movs	r3, #10
 8023a14:	e019      	b.n	8023a4a <_printf_i+0x102>
 8023a16:	f015 0f40 	tst.w	r5, #64	; 0x40
 8023a1a:	6805      	ldr	r5, [r0, #0]
 8023a1c:	600b      	str	r3, [r1, #0]
 8023a1e:	bf18      	it	ne
 8023a20:	b22d      	sxthne	r5, r5
 8023a22:	e7ef      	b.n	8023a04 <_printf_i+0xbc>
 8023a24:	680b      	ldr	r3, [r1, #0]
 8023a26:	6825      	ldr	r5, [r4, #0]
 8023a28:	1d18      	adds	r0, r3, #4
 8023a2a:	6008      	str	r0, [r1, #0]
 8023a2c:	0628      	lsls	r0, r5, #24
 8023a2e:	d501      	bpl.n	8023a34 <_printf_i+0xec>
 8023a30:	681d      	ldr	r5, [r3, #0]
 8023a32:	e002      	b.n	8023a3a <_printf_i+0xf2>
 8023a34:	0669      	lsls	r1, r5, #25
 8023a36:	d5fb      	bpl.n	8023a30 <_printf_i+0xe8>
 8023a38:	881d      	ldrh	r5, [r3, #0]
 8023a3a:	4854      	ldr	r0, [pc, #336]	; (8023b8c <_printf_i+0x244>)
 8023a3c:	2f6f      	cmp	r7, #111	; 0x6f
 8023a3e:	bf0c      	ite	eq
 8023a40:	2308      	moveq	r3, #8
 8023a42:	230a      	movne	r3, #10
 8023a44:	2100      	movs	r1, #0
 8023a46:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8023a4a:	6866      	ldr	r6, [r4, #4]
 8023a4c:	60a6      	str	r6, [r4, #8]
 8023a4e:	2e00      	cmp	r6, #0
 8023a50:	bfa2      	ittt	ge
 8023a52:	6821      	ldrge	r1, [r4, #0]
 8023a54:	f021 0104 	bicge.w	r1, r1, #4
 8023a58:	6021      	strge	r1, [r4, #0]
 8023a5a:	b90d      	cbnz	r5, 8023a60 <_printf_i+0x118>
 8023a5c:	2e00      	cmp	r6, #0
 8023a5e:	d04d      	beq.n	8023afc <_printf_i+0x1b4>
 8023a60:	4616      	mov	r6, r2
 8023a62:	fbb5 f1f3 	udiv	r1, r5, r3
 8023a66:	fb03 5711 	mls	r7, r3, r1, r5
 8023a6a:	5dc7      	ldrb	r7, [r0, r7]
 8023a6c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8023a70:	462f      	mov	r7, r5
 8023a72:	42bb      	cmp	r3, r7
 8023a74:	460d      	mov	r5, r1
 8023a76:	d9f4      	bls.n	8023a62 <_printf_i+0x11a>
 8023a78:	2b08      	cmp	r3, #8
 8023a7a:	d10b      	bne.n	8023a94 <_printf_i+0x14c>
 8023a7c:	6823      	ldr	r3, [r4, #0]
 8023a7e:	07df      	lsls	r7, r3, #31
 8023a80:	d508      	bpl.n	8023a94 <_printf_i+0x14c>
 8023a82:	6923      	ldr	r3, [r4, #16]
 8023a84:	6861      	ldr	r1, [r4, #4]
 8023a86:	4299      	cmp	r1, r3
 8023a88:	bfde      	ittt	le
 8023a8a:	2330      	movle	r3, #48	; 0x30
 8023a8c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8023a90:	f106 36ff 	addle.w	r6, r6, #4294967295
 8023a94:	1b92      	subs	r2, r2, r6
 8023a96:	6122      	str	r2, [r4, #16]
 8023a98:	f8cd a000 	str.w	sl, [sp]
 8023a9c:	464b      	mov	r3, r9
 8023a9e:	aa03      	add	r2, sp, #12
 8023aa0:	4621      	mov	r1, r4
 8023aa2:	4640      	mov	r0, r8
 8023aa4:	f7ff fee2 	bl	802386c <_printf_common>
 8023aa8:	3001      	adds	r0, #1
 8023aaa:	d14c      	bne.n	8023b46 <_printf_i+0x1fe>
 8023aac:	f04f 30ff 	mov.w	r0, #4294967295
 8023ab0:	b004      	add	sp, #16
 8023ab2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023ab6:	4835      	ldr	r0, [pc, #212]	; (8023b8c <_printf_i+0x244>)
 8023ab8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8023abc:	6823      	ldr	r3, [r4, #0]
 8023abe:	680e      	ldr	r6, [r1, #0]
 8023ac0:	061f      	lsls	r7, r3, #24
 8023ac2:	f856 5b04 	ldr.w	r5, [r6], #4
 8023ac6:	600e      	str	r6, [r1, #0]
 8023ac8:	d514      	bpl.n	8023af4 <_printf_i+0x1ac>
 8023aca:	07d9      	lsls	r1, r3, #31
 8023acc:	bf44      	itt	mi
 8023ace:	f043 0320 	orrmi.w	r3, r3, #32
 8023ad2:	6023      	strmi	r3, [r4, #0]
 8023ad4:	b91d      	cbnz	r5, 8023ade <_printf_i+0x196>
 8023ad6:	6823      	ldr	r3, [r4, #0]
 8023ad8:	f023 0320 	bic.w	r3, r3, #32
 8023adc:	6023      	str	r3, [r4, #0]
 8023ade:	2310      	movs	r3, #16
 8023ae0:	e7b0      	b.n	8023a44 <_printf_i+0xfc>
 8023ae2:	6823      	ldr	r3, [r4, #0]
 8023ae4:	f043 0320 	orr.w	r3, r3, #32
 8023ae8:	6023      	str	r3, [r4, #0]
 8023aea:	2378      	movs	r3, #120	; 0x78
 8023aec:	4828      	ldr	r0, [pc, #160]	; (8023b90 <_printf_i+0x248>)
 8023aee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8023af2:	e7e3      	b.n	8023abc <_printf_i+0x174>
 8023af4:	065e      	lsls	r6, r3, #25
 8023af6:	bf48      	it	mi
 8023af8:	b2ad      	uxthmi	r5, r5
 8023afa:	e7e6      	b.n	8023aca <_printf_i+0x182>
 8023afc:	4616      	mov	r6, r2
 8023afe:	e7bb      	b.n	8023a78 <_printf_i+0x130>
 8023b00:	680b      	ldr	r3, [r1, #0]
 8023b02:	6826      	ldr	r6, [r4, #0]
 8023b04:	6960      	ldr	r0, [r4, #20]
 8023b06:	1d1d      	adds	r5, r3, #4
 8023b08:	600d      	str	r5, [r1, #0]
 8023b0a:	0635      	lsls	r5, r6, #24
 8023b0c:	681b      	ldr	r3, [r3, #0]
 8023b0e:	d501      	bpl.n	8023b14 <_printf_i+0x1cc>
 8023b10:	6018      	str	r0, [r3, #0]
 8023b12:	e002      	b.n	8023b1a <_printf_i+0x1d2>
 8023b14:	0671      	lsls	r1, r6, #25
 8023b16:	d5fb      	bpl.n	8023b10 <_printf_i+0x1c8>
 8023b18:	8018      	strh	r0, [r3, #0]
 8023b1a:	2300      	movs	r3, #0
 8023b1c:	6123      	str	r3, [r4, #16]
 8023b1e:	4616      	mov	r6, r2
 8023b20:	e7ba      	b.n	8023a98 <_printf_i+0x150>
 8023b22:	680b      	ldr	r3, [r1, #0]
 8023b24:	1d1a      	adds	r2, r3, #4
 8023b26:	600a      	str	r2, [r1, #0]
 8023b28:	681e      	ldr	r6, [r3, #0]
 8023b2a:	6862      	ldr	r2, [r4, #4]
 8023b2c:	2100      	movs	r1, #0
 8023b2e:	4630      	mov	r0, r6
 8023b30:	f7dc fb66 	bl	8000200 <memchr>
 8023b34:	b108      	cbz	r0, 8023b3a <_printf_i+0x1f2>
 8023b36:	1b80      	subs	r0, r0, r6
 8023b38:	6060      	str	r0, [r4, #4]
 8023b3a:	6863      	ldr	r3, [r4, #4]
 8023b3c:	6123      	str	r3, [r4, #16]
 8023b3e:	2300      	movs	r3, #0
 8023b40:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023b44:	e7a8      	b.n	8023a98 <_printf_i+0x150>
 8023b46:	6923      	ldr	r3, [r4, #16]
 8023b48:	4632      	mov	r2, r6
 8023b4a:	4649      	mov	r1, r9
 8023b4c:	4640      	mov	r0, r8
 8023b4e:	47d0      	blx	sl
 8023b50:	3001      	adds	r0, #1
 8023b52:	d0ab      	beq.n	8023aac <_printf_i+0x164>
 8023b54:	6823      	ldr	r3, [r4, #0]
 8023b56:	079b      	lsls	r3, r3, #30
 8023b58:	d413      	bmi.n	8023b82 <_printf_i+0x23a>
 8023b5a:	68e0      	ldr	r0, [r4, #12]
 8023b5c:	9b03      	ldr	r3, [sp, #12]
 8023b5e:	4298      	cmp	r0, r3
 8023b60:	bfb8      	it	lt
 8023b62:	4618      	movlt	r0, r3
 8023b64:	e7a4      	b.n	8023ab0 <_printf_i+0x168>
 8023b66:	2301      	movs	r3, #1
 8023b68:	4632      	mov	r2, r6
 8023b6a:	4649      	mov	r1, r9
 8023b6c:	4640      	mov	r0, r8
 8023b6e:	47d0      	blx	sl
 8023b70:	3001      	adds	r0, #1
 8023b72:	d09b      	beq.n	8023aac <_printf_i+0x164>
 8023b74:	3501      	adds	r5, #1
 8023b76:	68e3      	ldr	r3, [r4, #12]
 8023b78:	9903      	ldr	r1, [sp, #12]
 8023b7a:	1a5b      	subs	r3, r3, r1
 8023b7c:	42ab      	cmp	r3, r5
 8023b7e:	dcf2      	bgt.n	8023b66 <_printf_i+0x21e>
 8023b80:	e7eb      	b.n	8023b5a <_printf_i+0x212>
 8023b82:	2500      	movs	r5, #0
 8023b84:	f104 0619 	add.w	r6, r4, #25
 8023b88:	e7f5      	b.n	8023b76 <_printf_i+0x22e>
 8023b8a:	bf00      	nop
 8023b8c:	08029b89 	.word	0x08029b89
 8023b90:	08029b9a 	.word	0x08029b9a

08023b94 <cleanup_glue>:
 8023b94:	b538      	push	{r3, r4, r5, lr}
 8023b96:	460c      	mov	r4, r1
 8023b98:	6809      	ldr	r1, [r1, #0]
 8023b9a:	4605      	mov	r5, r0
 8023b9c:	b109      	cbz	r1, 8023ba2 <cleanup_glue+0xe>
 8023b9e:	f7ff fff9 	bl	8023b94 <cleanup_glue>
 8023ba2:	4621      	mov	r1, r4
 8023ba4:	4628      	mov	r0, r5
 8023ba6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023baa:	f7ff bc5b 	b.w	8023464 <_free_r>
	...

08023bb0 <_reclaim_reent>:
 8023bb0:	4b2c      	ldr	r3, [pc, #176]	; (8023c64 <_reclaim_reent+0xb4>)
 8023bb2:	681b      	ldr	r3, [r3, #0]
 8023bb4:	4283      	cmp	r3, r0
 8023bb6:	b570      	push	{r4, r5, r6, lr}
 8023bb8:	4604      	mov	r4, r0
 8023bba:	d051      	beq.n	8023c60 <_reclaim_reent+0xb0>
 8023bbc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8023bbe:	b143      	cbz	r3, 8023bd2 <_reclaim_reent+0x22>
 8023bc0:	68db      	ldr	r3, [r3, #12]
 8023bc2:	2b00      	cmp	r3, #0
 8023bc4:	d14a      	bne.n	8023c5c <_reclaim_reent+0xac>
 8023bc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8023bc8:	6819      	ldr	r1, [r3, #0]
 8023bca:	b111      	cbz	r1, 8023bd2 <_reclaim_reent+0x22>
 8023bcc:	4620      	mov	r0, r4
 8023bce:	f7ff fc49 	bl	8023464 <_free_r>
 8023bd2:	6961      	ldr	r1, [r4, #20]
 8023bd4:	b111      	cbz	r1, 8023bdc <_reclaim_reent+0x2c>
 8023bd6:	4620      	mov	r0, r4
 8023bd8:	f7ff fc44 	bl	8023464 <_free_r>
 8023bdc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8023bde:	b111      	cbz	r1, 8023be6 <_reclaim_reent+0x36>
 8023be0:	4620      	mov	r0, r4
 8023be2:	f7ff fc3f 	bl	8023464 <_free_r>
 8023be6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8023be8:	b111      	cbz	r1, 8023bf0 <_reclaim_reent+0x40>
 8023bea:	4620      	mov	r0, r4
 8023bec:	f7ff fc3a 	bl	8023464 <_free_r>
 8023bf0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8023bf2:	b111      	cbz	r1, 8023bfa <_reclaim_reent+0x4a>
 8023bf4:	4620      	mov	r0, r4
 8023bf6:	f7ff fc35 	bl	8023464 <_free_r>
 8023bfa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8023bfc:	b111      	cbz	r1, 8023c04 <_reclaim_reent+0x54>
 8023bfe:	4620      	mov	r0, r4
 8023c00:	f7ff fc30 	bl	8023464 <_free_r>
 8023c04:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8023c06:	b111      	cbz	r1, 8023c0e <_reclaim_reent+0x5e>
 8023c08:	4620      	mov	r0, r4
 8023c0a:	f7ff fc2b 	bl	8023464 <_free_r>
 8023c0e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8023c10:	b111      	cbz	r1, 8023c18 <_reclaim_reent+0x68>
 8023c12:	4620      	mov	r0, r4
 8023c14:	f7ff fc26 	bl	8023464 <_free_r>
 8023c18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8023c1a:	b111      	cbz	r1, 8023c22 <_reclaim_reent+0x72>
 8023c1c:	4620      	mov	r0, r4
 8023c1e:	f7ff fc21 	bl	8023464 <_free_r>
 8023c22:	69a3      	ldr	r3, [r4, #24]
 8023c24:	b1e3      	cbz	r3, 8023c60 <_reclaim_reent+0xb0>
 8023c26:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8023c28:	4620      	mov	r0, r4
 8023c2a:	4798      	blx	r3
 8023c2c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8023c2e:	b1b9      	cbz	r1, 8023c60 <_reclaim_reent+0xb0>
 8023c30:	4620      	mov	r0, r4
 8023c32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8023c36:	f7ff bfad 	b.w	8023b94 <cleanup_glue>
 8023c3a:	5949      	ldr	r1, [r1, r5]
 8023c3c:	b941      	cbnz	r1, 8023c50 <_reclaim_reent+0xa0>
 8023c3e:	3504      	adds	r5, #4
 8023c40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8023c42:	2d80      	cmp	r5, #128	; 0x80
 8023c44:	68d9      	ldr	r1, [r3, #12]
 8023c46:	d1f8      	bne.n	8023c3a <_reclaim_reent+0x8a>
 8023c48:	4620      	mov	r0, r4
 8023c4a:	f7ff fc0b 	bl	8023464 <_free_r>
 8023c4e:	e7ba      	b.n	8023bc6 <_reclaim_reent+0x16>
 8023c50:	680e      	ldr	r6, [r1, #0]
 8023c52:	4620      	mov	r0, r4
 8023c54:	f7ff fc06 	bl	8023464 <_free_r>
 8023c58:	4631      	mov	r1, r6
 8023c5a:	e7ef      	b.n	8023c3c <_reclaim_reent+0x8c>
 8023c5c:	2500      	movs	r5, #0
 8023c5e:	e7ef      	b.n	8023c40 <_reclaim_reent+0x90>
 8023c60:	bd70      	pop	{r4, r5, r6, pc}
 8023c62:	bf00      	nop
 8023c64:	200000dc 	.word	0x200000dc

08023c68 <_sbrk_r>:
 8023c68:	b538      	push	{r3, r4, r5, lr}
 8023c6a:	4d06      	ldr	r5, [pc, #24]	; (8023c84 <_sbrk_r+0x1c>)
 8023c6c:	2300      	movs	r3, #0
 8023c6e:	4604      	mov	r4, r0
 8023c70:	4608      	mov	r0, r1
 8023c72:	602b      	str	r3, [r5, #0]
 8023c74:	f7de f986 	bl	8001f84 <_sbrk>
 8023c78:	1c43      	adds	r3, r0, #1
 8023c7a:	d102      	bne.n	8023c82 <_sbrk_r+0x1a>
 8023c7c:	682b      	ldr	r3, [r5, #0]
 8023c7e:	b103      	cbz	r3, 8023c82 <_sbrk_r+0x1a>
 8023c80:	6023      	str	r3, [r4, #0]
 8023c82:	bd38      	pop	{r3, r4, r5, pc}
 8023c84:	2002062c 	.word	0x2002062c

08023c88 <_raise_r>:
 8023c88:	291f      	cmp	r1, #31
 8023c8a:	b538      	push	{r3, r4, r5, lr}
 8023c8c:	4604      	mov	r4, r0
 8023c8e:	460d      	mov	r5, r1
 8023c90:	d904      	bls.n	8023c9c <_raise_r+0x14>
 8023c92:	2316      	movs	r3, #22
 8023c94:	6003      	str	r3, [r0, #0]
 8023c96:	f04f 30ff 	mov.w	r0, #4294967295
 8023c9a:	bd38      	pop	{r3, r4, r5, pc}
 8023c9c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8023c9e:	b112      	cbz	r2, 8023ca6 <_raise_r+0x1e>
 8023ca0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023ca4:	b94b      	cbnz	r3, 8023cba <_raise_r+0x32>
 8023ca6:	4620      	mov	r0, r4
 8023ca8:	f000 f830 	bl	8023d0c <_getpid_r>
 8023cac:	462a      	mov	r2, r5
 8023cae:	4601      	mov	r1, r0
 8023cb0:	4620      	mov	r0, r4
 8023cb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023cb6:	f000 b817 	b.w	8023ce8 <_kill_r>
 8023cba:	2b01      	cmp	r3, #1
 8023cbc:	d00a      	beq.n	8023cd4 <_raise_r+0x4c>
 8023cbe:	1c59      	adds	r1, r3, #1
 8023cc0:	d103      	bne.n	8023cca <_raise_r+0x42>
 8023cc2:	2316      	movs	r3, #22
 8023cc4:	6003      	str	r3, [r0, #0]
 8023cc6:	2001      	movs	r0, #1
 8023cc8:	e7e7      	b.n	8023c9a <_raise_r+0x12>
 8023cca:	2400      	movs	r4, #0
 8023ccc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8023cd0:	4628      	mov	r0, r5
 8023cd2:	4798      	blx	r3
 8023cd4:	2000      	movs	r0, #0
 8023cd6:	e7e0      	b.n	8023c9a <_raise_r+0x12>

08023cd8 <raise>:
 8023cd8:	4b02      	ldr	r3, [pc, #8]	; (8023ce4 <raise+0xc>)
 8023cda:	4601      	mov	r1, r0
 8023cdc:	6818      	ldr	r0, [r3, #0]
 8023cde:	f7ff bfd3 	b.w	8023c88 <_raise_r>
 8023ce2:	bf00      	nop
 8023ce4:	200000dc 	.word	0x200000dc

08023ce8 <_kill_r>:
 8023ce8:	b538      	push	{r3, r4, r5, lr}
 8023cea:	4d07      	ldr	r5, [pc, #28]	; (8023d08 <_kill_r+0x20>)
 8023cec:	2300      	movs	r3, #0
 8023cee:	4604      	mov	r4, r0
 8023cf0:	4608      	mov	r0, r1
 8023cf2:	4611      	mov	r1, r2
 8023cf4:	602b      	str	r3, [r5, #0]
 8023cf6:	f7de f911 	bl	8001f1c <_kill>
 8023cfa:	1c43      	adds	r3, r0, #1
 8023cfc:	d102      	bne.n	8023d04 <_kill_r+0x1c>
 8023cfe:	682b      	ldr	r3, [r5, #0]
 8023d00:	b103      	cbz	r3, 8023d04 <_kill_r+0x1c>
 8023d02:	6023      	str	r3, [r4, #0]
 8023d04:	bd38      	pop	{r3, r4, r5, pc}
 8023d06:	bf00      	nop
 8023d08:	2002062c 	.word	0x2002062c

08023d0c <_getpid_r>:
 8023d0c:	f7de b904 	b.w	8001f18 <_getpid>

08023d10 <__sread>:
 8023d10:	b510      	push	{r4, lr}
 8023d12:	460c      	mov	r4, r1
 8023d14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d18:	f000 fd6a 	bl	80247f0 <_read_r>
 8023d1c:	2800      	cmp	r0, #0
 8023d1e:	bfab      	itete	ge
 8023d20:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8023d22:	89a3      	ldrhlt	r3, [r4, #12]
 8023d24:	181b      	addge	r3, r3, r0
 8023d26:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8023d2a:	bfac      	ite	ge
 8023d2c:	6563      	strge	r3, [r4, #84]	; 0x54
 8023d2e:	81a3      	strhlt	r3, [r4, #12]
 8023d30:	bd10      	pop	{r4, pc}

08023d32 <__seofread>:
 8023d32:	2000      	movs	r0, #0
 8023d34:	4770      	bx	lr

08023d36 <__swrite>:
 8023d36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023d3a:	461f      	mov	r7, r3
 8023d3c:	898b      	ldrh	r3, [r1, #12]
 8023d3e:	05db      	lsls	r3, r3, #23
 8023d40:	4605      	mov	r5, r0
 8023d42:	460c      	mov	r4, r1
 8023d44:	4616      	mov	r6, r2
 8023d46:	d505      	bpl.n	8023d54 <__swrite+0x1e>
 8023d48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d4c:	2302      	movs	r3, #2
 8023d4e:	2200      	movs	r2, #0
 8023d50:	f000 fca6 	bl	80246a0 <_lseek_r>
 8023d54:	89a3      	ldrh	r3, [r4, #12]
 8023d56:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023d5a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8023d5e:	81a3      	strh	r3, [r4, #12]
 8023d60:	4632      	mov	r2, r6
 8023d62:	463b      	mov	r3, r7
 8023d64:	4628      	mov	r0, r5
 8023d66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023d6a:	f000 ba9f 	b.w	80242ac <_write_r>

08023d6e <__sseek>:
 8023d6e:	b510      	push	{r4, lr}
 8023d70:	460c      	mov	r4, r1
 8023d72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d76:	f000 fc93 	bl	80246a0 <_lseek_r>
 8023d7a:	1c43      	adds	r3, r0, #1
 8023d7c:	89a3      	ldrh	r3, [r4, #12]
 8023d7e:	bf15      	itete	ne
 8023d80:	6560      	strne	r0, [r4, #84]	; 0x54
 8023d82:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8023d86:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8023d8a:	81a3      	strheq	r3, [r4, #12]
 8023d8c:	bf18      	it	ne
 8023d8e:	81a3      	strhne	r3, [r4, #12]
 8023d90:	bd10      	pop	{r4, pc}

08023d92 <__sclose>:
 8023d92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d96:	f000 bb6b 	b.w	8024470 <_close_r>
	...

08023d9c <__tzcalc_limits>:
 8023d9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023da0:	4680      	mov	r8, r0
 8023da2:	f000 fc79 	bl	8024698 <__gettzinfo>
 8023da6:	f240 73b1 	movw	r3, #1969	; 0x7b1
 8023daa:	4598      	cmp	r8, r3
 8023dac:	f340 8098 	ble.w	8023ee0 <__tzcalc_limits+0x144>
 8023db0:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
 8023db4:	4443      	add	r3, r8
 8023db6:	109b      	asrs	r3, r3, #2
 8023db8:	f240 126d 	movw	r2, #365	; 0x16d
 8023dbc:	f2a8 75b2 	subw	r5, r8, #1970	; 0x7b2
 8023dc0:	fb02 3505 	mla	r5, r2, r5, r3
 8023dc4:	f06f 0263 	mvn.w	r2, #99	; 0x63
 8023dc8:	f2a8 736d 	subw	r3, r8, #1901	; 0x76d
 8023dcc:	fb93 f3f2 	sdiv	r3, r3, r2
 8023dd0:	441d      	add	r5, r3
 8023dd2:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8023dd6:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
 8023dda:	fb98 f7f3 	sdiv	r7, r8, r3
 8023dde:	fb03 8717 	mls	r7, r3, r7, r8
 8023de2:	4442      	add	r2, r8
 8023de4:	fab7 fc87 	clz	ip, r7
 8023de8:	fbb2 f2f3 	udiv	r2, r2, r3
 8023dec:	f008 0303 	and.w	r3, r8, #3
 8023df0:	4415      	add	r5, r2
 8023df2:	2264      	movs	r2, #100	; 0x64
 8023df4:	f8c0 8004 	str.w	r8, [r0, #4]
 8023df8:	fb98 f6f2 	sdiv	r6, r8, r2
 8023dfc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023e00:	fb02 8616 	mls	r6, r2, r6, r8
 8023e04:	4604      	mov	r4, r0
 8023e06:	f100 0b50 	add.w	fp, r0, #80	; 0x50
 8023e0a:	9300      	str	r3, [sp, #0]
 8023e0c:	f04f 0e07 	mov.w	lr, #7
 8023e10:	7a22      	ldrb	r2, [r4, #8]
 8023e12:	6963      	ldr	r3, [r4, #20]
 8023e14:	2a4a      	cmp	r2, #74	; 0x4a
 8023e16:	d128      	bne.n	8023e6a <__tzcalc_limits+0xce>
 8023e18:	9900      	ldr	r1, [sp, #0]
 8023e1a:	18ea      	adds	r2, r5, r3
 8023e1c:	b901      	cbnz	r1, 8023e20 <__tzcalc_limits+0x84>
 8023e1e:	b906      	cbnz	r6, 8023e22 <__tzcalc_limits+0x86>
 8023e20:	bb0f      	cbnz	r7, 8023e66 <__tzcalc_limits+0xca>
 8023e22:	2b3b      	cmp	r3, #59	; 0x3b
 8023e24:	bfd4      	ite	le
 8023e26:	2300      	movle	r3, #0
 8023e28:	2301      	movgt	r3, #1
 8023e2a:	4413      	add	r3, r2
 8023e2c:	1e5a      	subs	r2, r3, #1
 8023e2e:	69a3      	ldr	r3, [r4, #24]
 8023e30:	492c      	ldr	r1, [pc, #176]	; (8023ee4 <__tzcalc_limits+0x148>)
 8023e32:	fb01 3202 	mla	r2, r1, r2, r3
 8023e36:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8023e38:	4413      	add	r3, r2
 8023e3a:	461a      	mov	r2, r3
 8023e3c:	17db      	asrs	r3, r3, #31
 8023e3e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8023e42:	3428      	adds	r4, #40	; 0x28
 8023e44:	45a3      	cmp	fp, r4
 8023e46:	d1e3      	bne.n	8023e10 <__tzcalc_limits+0x74>
 8023e48:	e9d0 4508 	ldrd	r4, r5, [r0, #32]
 8023e4c:	e9d0 2312 	ldrd	r2, r3, [r0, #72]	; 0x48
 8023e50:	4294      	cmp	r4, r2
 8023e52:	eb75 0303 	sbcs.w	r3, r5, r3
 8023e56:	bfb4      	ite	lt
 8023e58:	2301      	movlt	r3, #1
 8023e5a:	2300      	movge	r3, #0
 8023e5c:	6003      	str	r3, [r0, #0]
 8023e5e:	2001      	movs	r0, #1
 8023e60:	b003      	add	sp, #12
 8023e62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023e66:	2300      	movs	r3, #0
 8023e68:	e7df      	b.n	8023e2a <__tzcalc_limits+0x8e>
 8023e6a:	2a44      	cmp	r2, #68	; 0x44
 8023e6c:	d101      	bne.n	8023e72 <__tzcalc_limits+0xd6>
 8023e6e:	18ea      	adds	r2, r5, r3
 8023e70:	e7dd      	b.n	8023e2e <__tzcalc_limits+0x92>
 8023e72:	9a00      	ldr	r2, [sp, #0]
 8023e74:	bb72      	cbnz	r2, 8023ed4 <__tzcalc_limits+0x138>
 8023e76:	2e00      	cmp	r6, #0
 8023e78:	bf0c      	ite	eq
 8023e7a:	46e0      	moveq	r8, ip
 8023e7c:	f04f 0801 	movne.w	r8, #1
 8023e80:	4919      	ldr	r1, [pc, #100]	; (8023ee8 <__tzcalc_limits+0x14c>)
 8023e82:	68e2      	ldr	r2, [r4, #12]
 8023e84:	9201      	str	r2, [sp, #4]
 8023e86:	f04f 0a30 	mov.w	sl, #48	; 0x30
 8023e8a:	fb0a 1808 	mla	r8, sl, r8, r1
 8023e8e:	462a      	mov	r2, r5
 8023e90:	f04f 0900 	mov.w	r9, #0
 8023e94:	f1a8 0804 	sub.w	r8, r8, #4
 8023e98:	9901      	ldr	r1, [sp, #4]
 8023e9a:	f109 0901 	add.w	r9, r9, #1
 8023e9e:	4549      	cmp	r1, r9
 8023ea0:	f858 a029 	ldr.w	sl, [r8, r9, lsl #2]
 8023ea4:	dc18      	bgt.n	8023ed8 <__tzcalc_limits+0x13c>
 8023ea6:	f102 0804 	add.w	r8, r2, #4
 8023eaa:	fb98 f9fe 	sdiv	r9, r8, lr
 8023eae:	ebc9 09c9 	rsb	r9, r9, r9, lsl #3
 8023eb2:	eba8 0909 	sub.w	r9, r8, r9
 8023eb6:	ebb3 0909 	subs.w	r9, r3, r9
 8023eba:	6923      	ldr	r3, [r4, #16]
 8023ebc:	f103 33ff 	add.w	r3, r3, #4294967295
 8023ec0:	bf48      	it	mi
 8023ec2:	f109 0907 	addmi.w	r9, r9, #7
 8023ec6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8023eca:	444b      	add	r3, r9
 8023ecc:	4553      	cmp	r3, sl
 8023ece:	da05      	bge.n	8023edc <__tzcalc_limits+0x140>
 8023ed0:	441a      	add	r2, r3
 8023ed2:	e7ac      	b.n	8023e2e <__tzcalc_limits+0x92>
 8023ed4:	46e0      	mov	r8, ip
 8023ed6:	e7d3      	b.n	8023e80 <__tzcalc_limits+0xe4>
 8023ed8:	4452      	add	r2, sl
 8023eda:	e7dd      	b.n	8023e98 <__tzcalc_limits+0xfc>
 8023edc:	3b07      	subs	r3, #7
 8023ede:	e7f5      	b.n	8023ecc <__tzcalc_limits+0x130>
 8023ee0:	2000      	movs	r0, #0
 8023ee2:	e7bd      	b.n	8023e60 <__tzcalc_limits+0xc4>
 8023ee4:	00015180 	.word	0x00015180
 8023ee8:	08029b18 	.word	0x08029b18

08023eec <__tz_lock>:
 8023eec:	4801      	ldr	r0, [pc, #4]	; (8023ef4 <__tz_lock+0x8>)
 8023eee:	f7ff ba8e 	b.w	802340e <__retarget_lock_acquire>
 8023ef2:	bf00      	nop
 8023ef4:	20020627 	.word	0x20020627

08023ef8 <__tz_unlock>:
 8023ef8:	4801      	ldr	r0, [pc, #4]	; (8023f00 <__tz_unlock+0x8>)
 8023efa:	f7ff ba8a 	b.w	8023412 <__retarget_lock_release>
 8023efe:	bf00      	nop
 8023f00:	20020627 	.word	0x20020627

08023f04 <_tzset_unlocked>:
 8023f04:	4b01      	ldr	r3, [pc, #4]	; (8023f0c <_tzset_unlocked+0x8>)
 8023f06:	6818      	ldr	r0, [r3, #0]
 8023f08:	f000 b802 	b.w	8023f10 <_tzset_unlocked_r>
 8023f0c:	200000dc 	.word	0x200000dc

08023f10 <_tzset_unlocked_r>:
 8023f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f14:	b08d      	sub	sp, #52	; 0x34
 8023f16:	4607      	mov	r7, r0
 8023f18:	f000 fbbe 	bl	8024698 <__gettzinfo>
 8023f1c:	49ae      	ldr	r1, [pc, #696]	; (80241d8 <_tzset_unlocked_r+0x2c8>)
 8023f1e:	4eaf      	ldr	r6, [pc, #700]	; (80241dc <_tzset_unlocked_r+0x2cc>)
 8023f20:	4605      	mov	r5, r0
 8023f22:	4638      	mov	r0, r7
 8023f24:	f000 fbb0 	bl	8024688 <_getenv_r>
 8023f28:	4604      	mov	r4, r0
 8023f2a:	b970      	cbnz	r0, 8023f4a <_tzset_unlocked_r+0x3a>
 8023f2c:	4bac      	ldr	r3, [pc, #688]	; (80241e0 <_tzset_unlocked_r+0x2d0>)
 8023f2e:	4aad      	ldr	r2, [pc, #692]	; (80241e4 <_tzset_unlocked_r+0x2d4>)
 8023f30:	6018      	str	r0, [r3, #0]
 8023f32:	4bad      	ldr	r3, [pc, #692]	; (80241e8 <_tzset_unlocked_r+0x2d8>)
 8023f34:	6018      	str	r0, [r3, #0]
 8023f36:	4bad      	ldr	r3, [pc, #692]	; (80241ec <_tzset_unlocked_r+0x2dc>)
 8023f38:	6830      	ldr	r0, [r6, #0]
 8023f3a:	e9c3 2200 	strd	r2, r2, [r3]
 8023f3e:	f7ff fa73 	bl	8023428 <free>
 8023f42:	6034      	str	r4, [r6, #0]
 8023f44:	b00d      	add	sp, #52	; 0x34
 8023f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f4a:	6831      	ldr	r1, [r6, #0]
 8023f4c:	2900      	cmp	r1, #0
 8023f4e:	d15f      	bne.n	8024010 <_tzset_unlocked_r+0x100>
 8023f50:	6830      	ldr	r0, [r6, #0]
 8023f52:	f7ff fa69 	bl	8023428 <free>
 8023f56:	4620      	mov	r0, r4
 8023f58:	f7dc f9ac 	bl	80002b4 <strlen>
 8023f5c:	1c41      	adds	r1, r0, #1
 8023f5e:	4638      	mov	r0, r7
 8023f60:	f7ff fad0 	bl	8023504 <_malloc_r>
 8023f64:	6030      	str	r0, [r6, #0]
 8023f66:	2800      	cmp	r0, #0
 8023f68:	d157      	bne.n	802401a <_tzset_unlocked_r+0x10a>
 8023f6a:	7823      	ldrb	r3, [r4, #0]
 8023f6c:	4aa0      	ldr	r2, [pc, #640]	; (80241f0 <_tzset_unlocked_r+0x2e0>)
 8023f6e:	49a1      	ldr	r1, [pc, #644]	; (80241f4 <_tzset_unlocked_r+0x2e4>)
 8023f70:	2b3a      	cmp	r3, #58	; 0x3a
 8023f72:	bf08      	it	eq
 8023f74:	3401      	addeq	r4, #1
 8023f76:	ae0a      	add	r6, sp, #40	; 0x28
 8023f78:	4633      	mov	r3, r6
 8023f7a:	4620      	mov	r0, r4
 8023f7c:	f000 fc4a 	bl	8024814 <siscanf>
 8023f80:	2800      	cmp	r0, #0
 8023f82:	dddf      	ble.n	8023f44 <_tzset_unlocked_r+0x34>
 8023f84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f86:	18e7      	adds	r7, r4, r3
 8023f88:	5ce3      	ldrb	r3, [r4, r3]
 8023f8a:	2b2d      	cmp	r3, #45	; 0x2d
 8023f8c:	d149      	bne.n	8024022 <_tzset_unlocked_r+0x112>
 8023f8e:	3701      	adds	r7, #1
 8023f90:	f04f 34ff 	mov.w	r4, #4294967295
 8023f94:	f10d 0a20 	add.w	sl, sp, #32
 8023f98:	f10d 0b1e 	add.w	fp, sp, #30
 8023f9c:	f04f 0800 	mov.w	r8, #0
 8023fa0:	e9cd 6a01 	strd	r6, sl, [sp, #4]
 8023fa4:	4994      	ldr	r1, [pc, #592]	; (80241f8 <_tzset_unlocked_r+0x2e8>)
 8023fa6:	9603      	str	r6, [sp, #12]
 8023fa8:	f8cd b000 	str.w	fp, [sp]
 8023fac:	4633      	mov	r3, r6
 8023fae:	aa07      	add	r2, sp, #28
 8023fb0:	4638      	mov	r0, r7
 8023fb2:	f8ad 801e 	strh.w	r8, [sp, #30]
 8023fb6:	f8ad 8020 	strh.w	r8, [sp, #32]
 8023fba:	f000 fc2b 	bl	8024814 <siscanf>
 8023fbe:	4540      	cmp	r0, r8
 8023fc0:	ddc0      	ble.n	8023f44 <_tzset_unlocked_r+0x34>
 8023fc2:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8023fc6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8023fca:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8024204 <_tzset_unlocked_r+0x2f4>
 8023fce:	213c      	movs	r1, #60	; 0x3c
 8023fd0:	fb01 2203 	mla	r2, r1, r3, r2
 8023fd4:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8023fd8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8023fdc:	fb01 2303 	mla	r3, r1, r3, r2
 8023fe0:	435c      	muls	r4, r3
 8023fe2:	62ac      	str	r4, [r5, #40]	; 0x28
 8023fe4:	4c81      	ldr	r4, [pc, #516]	; (80241ec <_tzset_unlocked_r+0x2dc>)
 8023fe6:	4b82      	ldr	r3, [pc, #520]	; (80241f0 <_tzset_unlocked_r+0x2e0>)
 8023fe8:	6023      	str	r3, [r4, #0]
 8023fea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023fec:	4981      	ldr	r1, [pc, #516]	; (80241f4 <_tzset_unlocked_r+0x2e4>)
 8023fee:	441f      	add	r7, r3
 8023ff0:	464a      	mov	r2, r9
 8023ff2:	4633      	mov	r3, r6
 8023ff4:	4638      	mov	r0, r7
 8023ff6:	f000 fc0d 	bl	8024814 <siscanf>
 8023ffa:	4540      	cmp	r0, r8
 8023ffc:	dc16      	bgt.n	802402c <_tzset_unlocked_r+0x11c>
 8023ffe:	6823      	ldr	r3, [r4, #0]
 8024000:	6063      	str	r3, [r4, #4]
 8024002:	4b77      	ldr	r3, [pc, #476]	; (80241e0 <_tzset_unlocked_r+0x2d0>)
 8024004:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8024006:	601a      	str	r2, [r3, #0]
 8024008:	4b77      	ldr	r3, [pc, #476]	; (80241e8 <_tzset_unlocked_r+0x2d8>)
 802400a:	f8c3 8000 	str.w	r8, [r3]
 802400e:	e799      	b.n	8023f44 <_tzset_unlocked_r+0x34>
 8024010:	f7dc f946 	bl	80002a0 <strcmp>
 8024014:	2800      	cmp	r0, #0
 8024016:	d19b      	bne.n	8023f50 <_tzset_unlocked_r+0x40>
 8024018:	e794      	b.n	8023f44 <_tzset_unlocked_r+0x34>
 802401a:	4621      	mov	r1, r4
 802401c:	f000 fc26 	bl	802486c <strcpy>
 8024020:	e7a3      	b.n	8023f6a <_tzset_unlocked_r+0x5a>
 8024022:	2b2b      	cmp	r3, #43	; 0x2b
 8024024:	bf08      	it	eq
 8024026:	3701      	addeq	r7, #1
 8024028:	2401      	movs	r4, #1
 802402a:	e7b3      	b.n	8023f94 <_tzset_unlocked_r+0x84>
 802402c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802402e:	f8c4 9004 	str.w	r9, [r4, #4]
 8024032:	18fc      	adds	r4, r7, r3
 8024034:	5cfb      	ldrb	r3, [r7, r3]
 8024036:	2b2d      	cmp	r3, #45	; 0x2d
 8024038:	f040 808b 	bne.w	8024152 <_tzset_unlocked_r+0x242>
 802403c:	3401      	adds	r4, #1
 802403e:	f04f 37ff 	mov.w	r7, #4294967295
 8024042:	2300      	movs	r3, #0
 8024044:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024048:	f8ad 301e 	strh.w	r3, [sp, #30]
 802404c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8024050:	930a      	str	r3, [sp, #40]	; 0x28
 8024052:	e9cd a602 	strd	sl, r6, [sp, #8]
 8024056:	e9cd b600 	strd	fp, r6, [sp]
 802405a:	4967      	ldr	r1, [pc, #412]	; (80241f8 <_tzset_unlocked_r+0x2e8>)
 802405c:	4633      	mov	r3, r6
 802405e:	aa07      	add	r2, sp, #28
 8024060:	4620      	mov	r0, r4
 8024062:	f000 fbd7 	bl	8024814 <siscanf>
 8024066:	2800      	cmp	r0, #0
 8024068:	dc78      	bgt.n	802415c <_tzset_unlocked_r+0x24c>
 802406a:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 802406c:	f5a7 6761 	sub.w	r7, r7, #3600	; 0xe10
 8024070:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024072:	652f      	str	r7, [r5, #80]	; 0x50
 8024074:	441c      	add	r4, r3
 8024076:	462f      	mov	r7, r5
 8024078:	f04f 0900 	mov.w	r9, #0
 802407c:	7823      	ldrb	r3, [r4, #0]
 802407e:	2b2c      	cmp	r3, #44	; 0x2c
 8024080:	bf08      	it	eq
 8024082:	3401      	addeq	r4, #1
 8024084:	f894 8000 	ldrb.w	r8, [r4]
 8024088:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
 802408c:	d178      	bne.n	8024180 <_tzset_unlocked_r+0x270>
 802408e:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 8024092:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8024096:	ab09      	add	r3, sp, #36	; 0x24
 8024098:	9300      	str	r3, [sp, #0]
 802409a:	4958      	ldr	r1, [pc, #352]	; (80241fc <_tzset_unlocked_r+0x2ec>)
 802409c:	9603      	str	r6, [sp, #12]
 802409e:	4633      	mov	r3, r6
 80240a0:	f10d 0222 	add.w	r2, sp, #34	; 0x22
 80240a4:	4620      	mov	r0, r4
 80240a6:	f000 fbb5 	bl	8024814 <siscanf>
 80240aa:	2803      	cmp	r0, #3
 80240ac:	f47f af4a 	bne.w	8023f44 <_tzset_unlocked_r+0x34>
 80240b0:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80240b4:	1e4b      	subs	r3, r1, #1
 80240b6:	2b0b      	cmp	r3, #11
 80240b8:	f63f af44 	bhi.w	8023f44 <_tzset_unlocked_r+0x34>
 80240bc:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80240c0:	1e53      	subs	r3, r2, #1
 80240c2:	2b04      	cmp	r3, #4
 80240c4:	f63f af3e 	bhi.w	8023f44 <_tzset_unlocked_r+0x34>
 80240c8:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80240cc:	2b06      	cmp	r3, #6
 80240ce:	f63f af39 	bhi.w	8023f44 <_tzset_unlocked_r+0x34>
 80240d2:	e9c7 1203 	strd	r1, r2, [r7, #12]
 80240d6:	f887 8008 	strb.w	r8, [r7, #8]
 80240da:	617b      	str	r3, [r7, #20]
 80240dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80240de:	eb04 0803 	add.w	r8, r4, r3
 80240e2:	2302      	movs	r3, #2
 80240e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80240e8:	2300      	movs	r3, #0
 80240ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 80240ee:	f8ad 3020 	strh.w	r3, [sp, #32]
 80240f2:	930a      	str	r3, [sp, #40]	; 0x28
 80240f4:	f898 3000 	ldrb.w	r3, [r8]
 80240f8:	2b2f      	cmp	r3, #47	; 0x2f
 80240fa:	d109      	bne.n	8024110 <_tzset_unlocked_r+0x200>
 80240fc:	e9cd a602 	strd	sl, r6, [sp, #8]
 8024100:	e9cd b600 	strd	fp, r6, [sp]
 8024104:	493e      	ldr	r1, [pc, #248]	; (8024200 <_tzset_unlocked_r+0x2f0>)
 8024106:	4633      	mov	r3, r6
 8024108:	aa07      	add	r2, sp, #28
 802410a:	4640      	mov	r0, r8
 802410c:	f000 fb82 	bl	8024814 <siscanf>
 8024110:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8024114:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024118:	213c      	movs	r1, #60	; 0x3c
 802411a:	fb01 2203 	mla	r2, r1, r3, r2
 802411e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8024122:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8024126:	fb01 2303 	mla	r3, r1, r3, r2
 802412a:	61bb      	str	r3, [r7, #24]
 802412c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802412e:	3728      	adds	r7, #40	; 0x28
 8024130:	4444      	add	r4, r8
 8024132:	f1b9 0f00 	cmp.w	r9, #0
 8024136:	d020      	beq.n	802417a <_tzset_unlocked_r+0x26a>
 8024138:	6868      	ldr	r0, [r5, #4]
 802413a:	f7ff fe2f 	bl	8023d9c <__tzcalc_limits>
 802413e:	4b28      	ldr	r3, [pc, #160]	; (80241e0 <_tzset_unlocked_r+0x2d0>)
 8024140:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8024142:	601a      	str	r2, [r3, #0]
 8024144:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8024146:	1a9b      	subs	r3, r3, r2
 8024148:	4a27      	ldr	r2, [pc, #156]	; (80241e8 <_tzset_unlocked_r+0x2d8>)
 802414a:	bf18      	it	ne
 802414c:	2301      	movne	r3, #1
 802414e:	6013      	str	r3, [r2, #0]
 8024150:	e6f8      	b.n	8023f44 <_tzset_unlocked_r+0x34>
 8024152:	2b2b      	cmp	r3, #43	; 0x2b
 8024154:	bf08      	it	eq
 8024156:	3401      	addeq	r4, #1
 8024158:	2701      	movs	r7, #1
 802415a:	e772      	b.n	8024042 <_tzset_unlocked_r+0x132>
 802415c:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8024160:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024164:	213c      	movs	r1, #60	; 0x3c
 8024166:	fb01 2203 	mla	r2, r1, r3, r2
 802416a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 802416e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8024172:	fb01 2303 	mla	r3, r1, r3, r2
 8024176:	435f      	muls	r7, r3
 8024178:	e77a      	b.n	8024070 <_tzset_unlocked_r+0x160>
 802417a:	f04f 0901 	mov.w	r9, #1
 802417e:	e77d      	b.n	802407c <_tzset_unlocked_r+0x16c>
 8024180:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
 8024184:	bf06      	itte	eq
 8024186:	3401      	addeq	r4, #1
 8024188:	4643      	moveq	r3, r8
 802418a:	2344      	movne	r3, #68	; 0x44
 802418c:	220a      	movs	r2, #10
 802418e:	a90b      	add	r1, sp, #44	; 0x2c
 8024190:	4620      	mov	r0, r4
 8024192:	9305      	str	r3, [sp, #20]
 8024194:	f000 fc02 	bl	802499c <strtoul>
 8024198:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 802419c:	9b05      	ldr	r3, [sp, #20]
 802419e:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
 80241a2:	45a0      	cmp	r8, r4
 80241a4:	d114      	bne.n	80241d0 <_tzset_unlocked_r+0x2c0>
 80241a6:	234d      	movs	r3, #77	; 0x4d
 80241a8:	f1b9 0f00 	cmp.w	r9, #0
 80241ac:	d107      	bne.n	80241be <_tzset_unlocked_r+0x2ae>
 80241ae:	722b      	strb	r3, [r5, #8]
 80241b0:	2103      	movs	r1, #3
 80241b2:	2302      	movs	r3, #2
 80241b4:	e9c5 1303 	strd	r1, r3, [r5, #12]
 80241b8:	f8c5 9014 	str.w	r9, [r5, #20]
 80241bc:	e791      	b.n	80240e2 <_tzset_unlocked_r+0x1d2>
 80241be:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
 80241c2:	220b      	movs	r2, #11
 80241c4:	2301      	movs	r3, #1
 80241c6:	e9c5 230d 	strd	r2, r3, [r5, #52]	; 0x34
 80241ca:	2300      	movs	r3, #0
 80241cc:	63eb      	str	r3, [r5, #60]	; 0x3c
 80241ce:	e788      	b.n	80240e2 <_tzset_unlocked_r+0x1d2>
 80241d0:	b280      	uxth	r0, r0
 80241d2:	723b      	strb	r3, [r7, #8]
 80241d4:	6178      	str	r0, [r7, #20]
 80241d6:	e784      	b.n	80240e2 <_tzset_unlocked_r+0x1d2>
 80241d8:	08029bb0 	.word	0x08029bb0
 80241dc:	200202b0 	.word	0x200202b0
 80241e0:	200202b8 	.word	0x200202b8
 80241e4:	08029bb3 	.word	0x08029bb3
 80241e8:	200202b4 	.word	0x200202b4
 80241ec:	20000140 	.word	0x20000140
 80241f0:	200202a3 	.word	0x200202a3
 80241f4:	08029bb7 	.word	0x08029bb7
 80241f8:	08029bda 	.word	0x08029bda
 80241fc:	08029bc6 	.word	0x08029bc6
 8024200:	08029bd9 	.word	0x08029bd9
 8024204:	20020298 	.word	0x20020298

08024208 <__swbuf_r>:
 8024208:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802420a:	460e      	mov	r6, r1
 802420c:	4614      	mov	r4, r2
 802420e:	4605      	mov	r5, r0
 8024210:	b118      	cbz	r0, 802421a <__swbuf_r+0x12>
 8024212:	6983      	ldr	r3, [r0, #24]
 8024214:	b90b      	cbnz	r3, 802421a <__swbuf_r+0x12>
 8024216:	f7fe ff1b 	bl	8023050 <__sinit>
 802421a:	4b21      	ldr	r3, [pc, #132]	; (80242a0 <__swbuf_r+0x98>)
 802421c:	429c      	cmp	r4, r3
 802421e:	d12b      	bne.n	8024278 <__swbuf_r+0x70>
 8024220:	686c      	ldr	r4, [r5, #4]
 8024222:	69a3      	ldr	r3, [r4, #24]
 8024224:	60a3      	str	r3, [r4, #8]
 8024226:	89a3      	ldrh	r3, [r4, #12]
 8024228:	071a      	lsls	r2, r3, #28
 802422a:	d52f      	bpl.n	802428c <__swbuf_r+0x84>
 802422c:	6923      	ldr	r3, [r4, #16]
 802422e:	b36b      	cbz	r3, 802428c <__swbuf_r+0x84>
 8024230:	6923      	ldr	r3, [r4, #16]
 8024232:	6820      	ldr	r0, [r4, #0]
 8024234:	1ac0      	subs	r0, r0, r3
 8024236:	6963      	ldr	r3, [r4, #20]
 8024238:	b2f6      	uxtb	r6, r6
 802423a:	4283      	cmp	r3, r0
 802423c:	4637      	mov	r7, r6
 802423e:	dc04      	bgt.n	802424a <__swbuf_r+0x42>
 8024240:	4621      	mov	r1, r4
 8024242:	4628      	mov	r0, r5
 8024244:	f000 f9aa 	bl	802459c <_fflush_r>
 8024248:	bb30      	cbnz	r0, 8024298 <__swbuf_r+0x90>
 802424a:	68a3      	ldr	r3, [r4, #8]
 802424c:	3b01      	subs	r3, #1
 802424e:	60a3      	str	r3, [r4, #8]
 8024250:	6823      	ldr	r3, [r4, #0]
 8024252:	1c5a      	adds	r2, r3, #1
 8024254:	6022      	str	r2, [r4, #0]
 8024256:	701e      	strb	r6, [r3, #0]
 8024258:	6963      	ldr	r3, [r4, #20]
 802425a:	3001      	adds	r0, #1
 802425c:	4283      	cmp	r3, r0
 802425e:	d004      	beq.n	802426a <__swbuf_r+0x62>
 8024260:	89a3      	ldrh	r3, [r4, #12]
 8024262:	07db      	lsls	r3, r3, #31
 8024264:	d506      	bpl.n	8024274 <__swbuf_r+0x6c>
 8024266:	2e0a      	cmp	r6, #10
 8024268:	d104      	bne.n	8024274 <__swbuf_r+0x6c>
 802426a:	4621      	mov	r1, r4
 802426c:	4628      	mov	r0, r5
 802426e:	f000 f995 	bl	802459c <_fflush_r>
 8024272:	b988      	cbnz	r0, 8024298 <__swbuf_r+0x90>
 8024274:	4638      	mov	r0, r7
 8024276:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024278:	4b0a      	ldr	r3, [pc, #40]	; (80242a4 <__swbuf_r+0x9c>)
 802427a:	429c      	cmp	r4, r3
 802427c:	d101      	bne.n	8024282 <__swbuf_r+0x7a>
 802427e:	68ac      	ldr	r4, [r5, #8]
 8024280:	e7cf      	b.n	8024222 <__swbuf_r+0x1a>
 8024282:	4b09      	ldr	r3, [pc, #36]	; (80242a8 <__swbuf_r+0xa0>)
 8024284:	429c      	cmp	r4, r3
 8024286:	bf08      	it	eq
 8024288:	68ec      	ldreq	r4, [r5, #12]
 802428a:	e7ca      	b.n	8024222 <__swbuf_r+0x1a>
 802428c:	4621      	mov	r1, r4
 802428e:	4628      	mov	r0, r5
 8024290:	f000 f81e 	bl	80242d0 <__swsetup_r>
 8024294:	2800      	cmp	r0, #0
 8024296:	d0cb      	beq.n	8024230 <__swbuf_r+0x28>
 8024298:	f04f 37ff 	mov.w	r7, #4294967295
 802429c:	e7ea      	b.n	8024274 <__swbuf_r+0x6c>
 802429e:	bf00      	nop
 80242a0:	08029ad4 	.word	0x08029ad4
 80242a4:	08029af4 	.word	0x08029af4
 80242a8:	08029ab4 	.word	0x08029ab4

080242ac <_write_r>:
 80242ac:	b538      	push	{r3, r4, r5, lr}
 80242ae:	4d07      	ldr	r5, [pc, #28]	; (80242cc <_write_r+0x20>)
 80242b0:	4604      	mov	r4, r0
 80242b2:	4608      	mov	r0, r1
 80242b4:	4611      	mov	r1, r2
 80242b6:	2200      	movs	r2, #0
 80242b8:	602a      	str	r2, [r5, #0]
 80242ba:	461a      	mov	r2, r3
 80242bc:	f7dd fe49 	bl	8001f52 <_write>
 80242c0:	1c43      	adds	r3, r0, #1
 80242c2:	d102      	bne.n	80242ca <_write_r+0x1e>
 80242c4:	682b      	ldr	r3, [r5, #0]
 80242c6:	b103      	cbz	r3, 80242ca <_write_r+0x1e>
 80242c8:	6023      	str	r3, [r4, #0]
 80242ca:	bd38      	pop	{r3, r4, r5, pc}
 80242cc:	2002062c 	.word	0x2002062c

080242d0 <__swsetup_r>:
 80242d0:	4b32      	ldr	r3, [pc, #200]	; (802439c <__swsetup_r+0xcc>)
 80242d2:	b570      	push	{r4, r5, r6, lr}
 80242d4:	681d      	ldr	r5, [r3, #0]
 80242d6:	4606      	mov	r6, r0
 80242d8:	460c      	mov	r4, r1
 80242da:	b125      	cbz	r5, 80242e6 <__swsetup_r+0x16>
 80242dc:	69ab      	ldr	r3, [r5, #24]
 80242de:	b913      	cbnz	r3, 80242e6 <__swsetup_r+0x16>
 80242e0:	4628      	mov	r0, r5
 80242e2:	f7fe feb5 	bl	8023050 <__sinit>
 80242e6:	4b2e      	ldr	r3, [pc, #184]	; (80243a0 <__swsetup_r+0xd0>)
 80242e8:	429c      	cmp	r4, r3
 80242ea:	d10f      	bne.n	802430c <__swsetup_r+0x3c>
 80242ec:	686c      	ldr	r4, [r5, #4]
 80242ee:	89a3      	ldrh	r3, [r4, #12]
 80242f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80242f4:	0719      	lsls	r1, r3, #28
 80242f6:	d42c      	bmi.n	8024352 <__swsetup_r+0x82>
 80242f8:	06dd      	lsls	r5, r3, #27
 80242fa:	d411      	bmi.n	8024320 <__swsetup_r+0x50>
 80242fc:	2309      	movs	r3, #9
 80242fe:	6033      	str	r3, [r6, #0]
 8024300:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8024304:	81a3      	strh	r3, [r4, #12]
 8024306:	f04f 30ff 	mov.w	r0, #4294967295
 802430a:	e03e      	b.n	802438a <__swsetup_r+0xba>
 802430c:	4b25      	ldr	r3, [pc, #148]	; (80243a4 <__swsetup_r+0xd4>)
 802430e:	429c      	cmp	r4, r3
 8024310:	d101      	bne.n	8024316 <__swsetup_r+0x46>
 8024312:	68ac      	ldr	r4, [r5, #8]
 8024314:	e7eb      	b.n	80242ee <__swsetup_r+0x1e>
 8024316:	4b24      	ldr	r3, [pc, #144]	; (80243a8 <__swsetup_r+0xd8>)
 8024318:	429c      	cmp	r4, r3
 802431a:	bf08      	it	eq
 802431c:	68ec      	ldreq	r4, [r5, #12]
 802431e:	e7e6      	b.n	80242ee <__swsetup_r+0x1e>
 8024320:	0758      	lsls	r0, r3, #29
 8024322:	d512      	bpl.n	802434a <__swsetup_r+0x7a>
 8024324:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8024326:	b141      	cbz	r1, 802433a <__swsetup_r+0x6a>
 8024328:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802432c:	4299      	cmp	r1, r3
 802432e:	d002      	beq.n	8024336 <__swsetup_r+0x66>
 8024330:	4630      	mov	r0, r6
 8024332:	f7ff f897 	bl	8023464 <_free_r>
 8024336:	2300      	movs	r3, #0
 8024338:	6363      	str	r3, [r4, #52]	; 0x34
 802433a:	89a3      	ldrh	r3, [r4, #12]
 802433c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8024340:	81a3      	strh	r3, [r4, #12]
 8024342:	2300      	movs	r3, #0
 8024344:	6063      	str	r3, [r4, #4]
 8024346:	6923      	ldr	r3, [r4, #16]
 8024348:	6023      	str	r3, [r4, #0]
 802434a:	89a3      	ldrh	r3, [r4, #12]
 802434c:	f043 0308 	orr.w	r3, r3, #8
 8024350:	81a3      	strh	r3, [r4, #12]
 8024352:	6923      	ldr	r3, [r4, #16]
 8024354:	b94b      	cbnz	r3, 802436a <__swsetup_r+0x9a>
 8024356:	89a3      	ldrh	r3, [r4, #12]
 8024358:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802435c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8024360:	d003      	beq.n	802436a <__swsetup_r+0x9a>
 8024362:	4621      	mov	r1, r4
 8024364:	4630      	mov	r0, r6
 8024366:	f000 f9d1 	bl	802470c <__smakebuf_r>
 802436a:	89a0      	ldrh	r0, [r4, #12]
 802436c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024370:	f010 0301 	ands.w	r3, r0, #1
 8024374:	d00a      	beq.n	802438c <__swsetup_r+0xbc>
 8024376:	2300      	movs	r3, #0
 8024378:	60a3      	str	r3, [r4, #8]
 802437a:	6963      	ldr	r3, [r4, #20]
 802437c:	425b      	negs	r3, r3
 802437e:	61a3      	str	r3, [r4, #24]
 8024380:	6923      	ldr	r3, [r4, #16]
 8024382:	b943      	cbnz	r3, 8024396 <__swsetup_r+0xc6>
 8024384:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8024388:	d1ba      	bne.n	8024300 <__swsetup_r+0x30>
 802438a:	bd70      	pop	{r4, r5, r6, pc}
 802438c:	0781      	lsls	r1, r0, #30
 802438e:	bf58      	it	pl
 8024390:	6963      	ldrpl	r3, [r4, #20]
 8024392:	60a3      	str	r3, [r4, #8]
 8024394:	e7f4      	b.n	8024380 <__swsetup_r+0xb0>
 8024396:	2000      	movs	r0, #0
 8024398:	e7f7      	b.n	802438a <__swsetup_r+0xba>
 802439a:	bf00      	nop
 802439c:	200000dc 	.word	0x200000dc
 80243a0:	08029ad4 	.word	0x08029ad4
 80243a4:	08029af4 	.word	0x08029af4
 80243a8:	08029ab4 	.word	0x08029ab4

080243ac <__register_exitproc>:
 80243ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80243b0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802446c <__register_exitproc+0xc0>
 80243b4:	4606      	mov	r6, r0
 80243b6:	f8d8 0000 	ldr.w	r0, [r8]
 80243ba:	461f      	mov	r7, r3
 80243bc:	460d      	mov	r5, r1
 80243be:	4691      	mov	r9, r2
 80243c0:	f7ff f826 	bl	8023410 <__retarget_lock_acquire_recursive>
 80243c4:	4b25      	ldr	r3, [pc, #148]	; (802445c <__register_exitproc+0xb0>)
 80243c6:	681c      	ldr	r4, [r3, #0]
 80243c8:	b934      	cbnz	r4, 80243d8 <__register_exitproc+0x2c>
 80243ca:	4c25      	ldr	r4, [pc, #148]	; (8024460 <__register_exitproc+0xb4>)
 80243cc:	601c      	str	r4, [r3, #0]
 80243ce:	4b25      	ldr	r3, [pc, #148]	; (8024464 <__register_exitproc+0xb8>)
 80243d0:	b113      	cbz	r3, 80243d8 <__register_exitproc+0x2c>
 80243d2:	681b      	ldr	r3, [r3, #0]
 80243d4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80243d8:	6863      	ldr	r3, [r4, #4]
 80243da:	2b1f      	cmp	r3, #31
 80243dc:	dd07      	ble.n	80243ee <__register_exitproc+0x42>
 80243de:	f8d8 0000 	ldr.w	r0, [r8]
 80243e2:	f7ff f817 	bl	8023414 <__retarget_lock_release_recursive>
 80243e6:	f04f 30ff 	mov.w	r0, #4294967295
 80243ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80243ee:	b34e      	cbz	r6, 8024444 <__register_exitproc+0x98>
 80243f0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80243f4:	b988      	cbnz	r0, 802441a <__register_exitproc+0x6e>
 80243f6:	4b1c      	ldr	r3, [pc, #112]	; (8024468 <__register_exitproc+0xbc>)
 80243f8:	b923      	cbnz	r3, 8024404 <__register_exitproc+0x58>
 80243fa:	f8d8 0000 	ldr.w	r0, [r8]
 80243fe:	f7ff f808 	bl	8023412 <__retarget_lock_release>
 8024402:	e7f0      	b.n	80243e6 <__register_exitproc+0x3a>
 8024404:	f44f 7084 	mov.w	r0, #264	; 0x108
 8024408:	f7ff f806 	bl	8023418 <malloc>
 802440c:	2800      	cmp	r0, #0
 802440e:	d0f4      	beq.n	80243fa <__register_exitproc+0x4e>
 8024410:	2300      	movs	r3, #0
 8024412:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8024416:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802441a:	6863      	ldr	r3, [r4, #4]
 802441c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8024420:	2201      	movs	r2, #1
 8024422:	409a      	lsls	r2, r3
 8024424:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8024428:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802442c:	4313      	orrs	r3, r2
 802442e:	2e02      	cmp	r6, #2
 8024430:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8024434:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8024438:	bf02      	ittt	eq
 802443a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802443e:	431a      	orreq	r2, r3
 8024440:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8024444:	6863      	ldr	r3, [r4, #4]
 8024446:	f8d8 0000 	ldr.w	r0, [r8]
 802444a:	1c5a      	adds	r2, r3, #1
 802444c:	3302      	adds	r3, #2
 802444e:	6062      	str	r2, [r4, #4]
 8024450:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8024454:	f7fe ffde 	bl	8023414 <__retarget_lock_release_recursive>
 8024458:	2000      	movs	r0, #0
 802445a:	e7c6      	b.n	80243ea <__register_exitproc+0x3e>
 802445c:	20020348 	.word	0x20020348
 8024460:	200202bc 	.word	0x200202bc
 8024464:	08029bac 	.word	0x08029bac
 8024468:	08023419 	.word	0x08023419
 802446c:	20000148 	.word	0x20000148

08024470 <_close_r>:
 8024470:	b538      	push	{r3, r4, r5, lr}
 8024472:	4d06      	ldr	r5, [pc, #24]	; (802448c <_close_r+0x1c>)
 8024474:	2300      	movs	r3, #0
 8024476:	4604      	mov	r4, r0
 8024478:	4608      	mov	r0, r1
 802447a:	602b      	str	r3, [r5, #0]
 802447c:	f7dd fd76 	bl	8001f6c <_close>
 8024480:	1c43      	adds	r3, r0, #1
 8024482:	d102      	bne.n	802448a <_close_r+0x1a>
 8024484:	682b      	ldr	r3, [r5, #0]
 8024486:	b103      	cbz	r3, 802448a <_close_r+0x1a>
 8024488:	6023      	str	r3, [r4, #0]
 802448a:	bd38      	pop	{r3, r4, r5, pc}
 802448c:	2002062c 	.word	0x2002062c

08024490 <__sflush_r>:
 8024490:	898a      	ldrh	r2, [r1, #12]
 8024492:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024496:	4605      	mov	r5, r0
 8024498:	0710      	lsls	r0, r2, #28
 802449a:	460c      	mov	r4, r1
 802449c:	d458      	bmi.n	8024550 <__sflush_r+0xc0>
 802449e:	684b      	ldr	r3, [r1, #4]
 80244a0:	2b00      	cmp	r3, #0
 80244a2:	dc05      	bgt.n	80244b0 <__sflush_r+0x20>
 80244a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80244a6:	2b00      	cmp	r3, #0
 80244a8:	dc02      	bgt.n	80244b0 <__sflush_r+0x20>
 80244aa:	2000      	movs	r0, #0
 80244ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80244b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80244b2:	2e00      	cmp	r6, #0
 80244b4:	d0f9      	beq.n	80244aa <__sflush_r+0x1a>
 80244b6:	2300      	movs	r3, #0
 80244b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80244bc:	682f      	ldr	r7, [r5, #0]
 80244be:	602b      	str	r3, [r5, #0]
 80244c0:	d032      	beq.n	8024528 <__sflush_r+0x98>
 80244c2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80244c4:	89a3      	ldrh	r3, [r4, #12]
 80244c6:	075a      	lsls	r2, r3, #29
 80244c8:	d505      	bpl.n	80244d6 <__sflush_r+0x46>
 80244ca:	6863      	ldr	r3, [r4, #4]
 80244cc:	1ac0      	subs	r0, r0, r3
 80244ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80244d0:	b10b      	cbz	r3, 80244d6 <__sflush_r+0x46>
 80244d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80244d4:	1ac0      	subs	r0, r0, r3
 80244d6:	2300      	movs	r3, #0
 80244d8:	4602      	mov	r2, r0
 80244da:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80244dc:	6a21      	ldr	r1, [r4, #32]
 80244de:	4628      	mov	r0, r5
 80244e0:	47b0      	blx	r6
 80244e2:	1c43      	adds	r3, r0, #1
 80244e4:	89a3      	ldrh	r3, [r4, #12]
 80244e6:	d106      	bne.n	80244f6 <__sflush_r+0x66>
 80244e8:	6829      	ldr	r1, [r5, #0]
 80244ea:	291d      	cmp	r1, #29
 80244ec:	d82c      	bhi.n	8024548 <__sflush_r+0xb8>
 80244ee:	4a2a      	ldr	r2, [pc, #168]	; (8024598 <__sflush_r+0x108>)
 80244f0:	40ca      	lsrs	r2, r1
 80244f2:	07d6      	lsls	r6, r2, #31
 80244f4:	d528      	bpl.n	8024548 <__sflush_r+0xb8>
 80244f6:	2200      	movs	r2, #0
 80244f8:	6062      	str	r2, [r4, #4]
 80244fa:	04d9      	lsls	r1, r3, #19
 80244fc:	6922      	ldr	r2, [r4, #16]
 80244fe:	6022      	str	r2, [r4, #0]
 8024500:	d504      	bpl.n	802450c <__sflush_r+0x7c>
 8024502:	1c42      	adds	r2, r0, #1
 8024504:	d101      	bne.n	802450a <__sflush_r+0x7a>
 8024506:	682b      	ldr	r3, [r5, #0]
 8024508:	b903      	cbnz	r3, 802450c <__sflush_r+0x7c>
 802450a:	6560      	str	r0, [r4, #84]	; 0x54
 802450c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802450e:	602f      	str	r7, [r5, #0]
 8024510:	2900      	cmp	r1, #0
 8024512:	d0ca      	beq.n	80244aa <__sflush_r+0x1a>
 8024514:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024518:	4299      	cmp	r1, r3
 802451a:	d002      	beq.n	8024522 <__sflush_r+0x92>
 802451c:	4628      	mov	r0, r5
 802451e:	f7fe ffa1 	bl	8023464 <_free_r>
 8024522:	2000      	movs	r0, #0
 8024524:	6360      	str	r0, [r4, #52]	; 0x34
 8024526:	e7c1      	b.n	80244ac <__sflush_r+0x1c>
 8024528:	6a21      	ldr	r1, [r4, #32]
 802452a:	2301      	movs	r3, #1
 802452c:	4628      	mov	r0, r5
 802452e:	47b0      	blx	r6
 8024530:	1c41      	adds	r1, r0, #1
 8024532:	d1c7      	bne.n	80244c4 <__sflush_r+0x34>
 8024534:	682b      	ldr	r3, [r5, #0]
 8024536:	2b00      	cmp	r3, #0
 8024538:	d0c4      	beq.n	80244c4 <__sflush_r+0x34>
 802453a:	2b1d      	cmp	r3, #29
 802453c:	d001      	beq.n	8024542 <__sflush_r+0xb2>
 802453e:	2b16      	cmp	r3, #22
 8024540:	d101      	bne.n	8024546 <__sflush_r+0xb6>
 8024542:	602f      	str	r7, [r5, #0]
 8024544:	e7b1      	b.n	80244aa <__sflush_r+0x1a>
 8024546:	89a3      	ldrh	r3, [r4, #12]
 8024548:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802454c:	81a3      	strh	r3, [r4, #12]
 802454e:	e7ad      	b.n	80244ac <__sflush_r+0x1c>
 8024550:	690f      	ldr	r7, [r1, #16]
 8024552:	2f00      	cmp	r7, #0
 8024554:	d0a9      	beq.n	80244aa <__sflush_r+0x1a>
 8024556:	0793      	lsls	r3, r2, #30
 8024558:	680e      	ldr	r6, [r1, #0]
 802455a:	bf08      	it	eq
 802455c:	694b      	ldreq	r3, [r1, #20]
 802455e:	600f      	str	r7, [r1, #0]
 8024560:	bf18      	it	ne
 8024562:	2300      	movne	r3, #0
 8024564:	eba6 0807 	sub.w	r8, r6, r7
 8024568:	608b      	str	r3, [r1, #8]
 802456a:	f1b8 0f00 	cmp.w	r8, #0
 802456e:	dd9c      	ble.n	80244aa <__sflush_r+0x1a>
 8024570:	6a21      	ldr	r1, [r4, #32]
 8024572:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8024574:	4643      	mov	r3, r8
 8024576:	463a      	mov	r2, r7
 8024578:	4628      	mov	r0, r5
 802457a:	47b0      	blx	r6
 802457c:	2800      	cmp	r0, #0
 802457e:	dc06      	bgt.n	802458e <__sflush_r+0xfe>
 8024580:	89a3      	ldrh	r3, [r4, #12]
 8024582:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024586:	81a3      	strh	r3, [r4, #12]
 8024588:	f04f 30ff 	mov.w	r0, #4294967295
 802458c:	e78e      	b.n	80244ac <__sflush_r+0x1c>
 802458e:	4407      	add	r7, r0
 8024590:	eba8 0800 	sub.w	r8, r8, r0
 8024594:	e7e9      	b.n	802456a <__sflush_r+0xda>
 8024596:	bf00      	nop
 8024598:	20400001 	.word	0x20400001

0802459c <_fflush_r>:
 802459c:	b538      	push	{r3, r4, r5, lr}
 802459e:	690b      	ldr	r3, [r1, #16]
 80245a0:	4605      	mov	r5, r0
 80245a2:	460c      	mov	r4, r1
 80245a4:	b913      	cbnz	r3, 80245ac <_fflush_r+0x10>
 80245a6:	2500      	movs	r5, #0
 80245a8:	4628      	mov	r0, r5
 80245aa:	bd38      	pop	{r3, r4, r5, pc}
 80245ac:	b118      	cbz	r0, 80245b6 <_fflush_r+0x1a>
 80245ae:	6983      	ldr	r3, [r0, #24]
 80245b0:	b90b      	cbnz	r3, 80245b6 <_fflush_r+0x1a>
 80245b2:	f7fe fd4d 	bl	8023050 <__sinit>
 80245b6:	4b14      	ldr	r3, [pc, #80]	; (8024608 <_fflush_r+0x6c>)
 80245b8:	429c      	cmp	r4, r3
 80245ba:	d11b      	bne.n	80245f4 <_fflush_r+0x58>
 80245bc:	686c      	ldr	r4, [r5, #4]
 80245be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80245c2:	2b00      	cmp	r3, #0
 80245c4:	d0ef      	beq.n	80245a6 <_fflush_r+0xa>
 80245c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80245c8:	07d0      	lsls	r0, r2, #31
 80245ca:	d404      	bmi.n	80245d6 <_fflush_r+0x3a>
 80245cc:	0599      	lsls	r1, r3, #22
 80245ce:	d402      	bmi.n	80245d6 <_fflush_r+0x3a>
 80245d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80245d2:	f7fe ff1d 	bl	8023410 <__retarget_lock_acquire_recursive>
 80245d6:	4628      	mov	r0, r5
 80245d8:	4621      	mov	r1, r4
 80245da:	f7ff ff59 	bl	8024490 <__sflush_r>
 80245de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80245e0:	07da      	lsls	r2, r3, #31
 80245e2:	4605      	mov	r5, r0
 80245e4:	d4e0      	bmi.n	80245a8 <_fflush_r+0xc>
 80245e6:	89a3      	ldrh	r3, [r4, #12]
 80245e8:	059b      	lsls	r3, r3, #22
 80245ea:	d4dd      	bmi.n	80245a8 <_fflush_r+0xc>
 80245ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80245ee:	f7fe ff11 	bl	8023414 <__retarget_lock_release_recursive>
 80245f2:	e7d9      	b.n	80245a8 <_fflush_r+0xc>
 80245f4:	4b05      	ldr	r3, [pc, #20]	; (802460c <_fflush_r+0x70>)
 80245f6:	429c      	cmp	r4, r3
 80245f8:	d101      	bne.n	80245fe <_fflush_r+0x62>
 80245fa:	68ac      	ldr	r4, [r5, #8]
 80245fc:	e7df      	b.n	80245be <_fflush_r+0x22>
 80245fe:	4b04      	ldr	r3, [pc, #16]	; (8024610 <_fflush_r+0x74>)
 8024600:	429c      	cmp	r4, r3
 8024602:	bf08      	it	eq
 8024604:	68ec      	ldreq	r4, [r5, #12]
 8024606:	e7da      	b.n	80245be <_fflush_r+0x22>
 8024608:	08029ad4 	.word	0x08029ad4
 802460c:	08029af4 	.word	0x08029af4
 8024610:	08029ab4 	.word	0x08029ab4

08024614 <_findenv_r>:
 8024614:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024618:	4607      	mov	r7, r0
 802461a:	4689      	mov	r9, r1
 802461c:	4616      	mov	r6, r2
 802461e:	f000 f9c7 	bl	80249b0 <__env_lock>
 8024622:	4b18      	ldr	r3, [pc, #96]	; (8024684 <_findenv_r+0x70>)
 8024624:	681c      	ldr	r4, [r3, #0]
 8024626:	469a      	mov	sl, r3
 8024628:	b134      	cbz	r4, 8024638 <_findenv_r+0x24>
 802462a:	464b      	mov	r3, r9
 802462c:	4698      	mov	r8, r3
 802462e:	f813 1b01 	ldrb.w	r1, [r3], #1
 8024632:	b139      	cbz	r1, 8024644 <_findenv_r+0x30>
 8024634:	293d      	cmp	r1, #61	; 0x3d
 8024636:	d1f9      	bne.n	802462c <_findenv_r+0x18>
 8024638:	4638      	mov	r0, r7
 802463a:	f000 f9bf 	bl	80249bc <__env_unlock>
 802463e:	2000      	movs	r0, #0
 8024640:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024644:	eba8 0809 	sub.w	r8, r8, r9
 8024648:	46a3      	mov	fp, r4
 802464a:	f854 0b04 	ldr.w	r0, [r4], #4
 802464e:	2800      	cmp	r0, #0
 8024650:	d0f2      	beq.n	8024638 <_findenv_r+0x24>
 8024652:	4642      	mov	r2, r8
 8024654:	4649      	mov	r1, r9
 8024656:	f000 f911 	bl	802487c <strncmp>
 802465a:	2800      	cmp	r0, #0
 802465c:	d1f4      	bne.n	8024648 <_findenv_r+0x34>
 802465e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8024662:	eb03 0508 	add.w	r5, r3, r8
 8024666:	f813 3008 	ldrb.w	r3, [r3, r8]
 802466a:	2b3d      	cmp	r3, #61	; 0x3d
 802466c:	d1ec      	bne.n	8024648 <_findenv_r+0x34>
 802466e:	f8da 3000 	ldr.w	r3, [sl]
 8024672:	ebab 0303 	sub.w	r3, fp, r3
 8024676:	109b      	asrs	r3, r3, #2
 8024678:	4638      	mov	r0, r7
 802467a:	6033      	str	r3, [r6, #0]
 802467c:	f000 f99e 	bl	80249bc <__env_unlock>
 8024680:	1c68      	adds	r0, r5, #1
 8024682:	e7dd      	b.n	8024640 <_findenv_r+0x2c>
 8024684:	20000020 	.word	0x20000020

08024688 <_getenv_r>:
 8024688:	b507      	push	{r0, r1, r2, lr}
 802468a:	aa01      	add	r2, sp, #4
 802468c:	f7ff ffc2 	bl	8024614 <_findenv_r>
 8024690:	b003      	add	sp, #12
 8024692:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08024698 <__gettzinfo>:
 8024698:	4800      	ldr	r0, [pc, #0]	; (802469c <__gettzinfo+0x4>)
 802469a:	4770      	bx	lr
 802469c:	20000150 	.word	0x20000150

080246a0 <_lseek_r>:
 80246a0:	b538      	push	{r3, r4, r5, lr}
 80246a2:	4d07      	ldr	r5, [pc, #28]	; (80246c0 <_lseek_r+0x20>)
 80246a4:	4604      	mov	r4, r0
 80246a6:	4608      	mov	r0, r1
 80246a8:	4611      	mov	r1, r2
 80246aa:	2200      	movs	r2, #0
 80246ac:	602a      	str	r2, [r5, #0]
 80246ae:	461a      	mov	r2, r3
 80246b0:	f7dd fc66 	bl	8001f80 <_lseek>
 80246b4:	1c43      	adds	r3, r0, #1
 80246b6:	d102      	bne.n	80246be <_lseek_r+0x1e>
 80246b8:	682b      	ldr	r3, [r5, #0]
 80246ba:	b103      	cbz	r3, 80246be <_lseek_r+0x1e>
 80246bc:	6023      	str	r3, [r4, #0]
 80246be:	bd38      	pop	{r3, r4, r5, pc}
 80246c0:	2002062c 	.word	0x2002062c

080246c4 <__swhatbuf_r>:
 80246c4:	b570      	push	{r4, r5, r6, lr}
 80246c6:	460e      	mov	r6, r1
 80246c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80246cc:	2900      	cmp	r1, #0
 80246ce:	b096      	sub	sp, #88	; 0x58
 80246d0:	4614      	mov	r4, r2
 80246d2:	461d      	mov	r5, r3
 80246d4:	da07      	bge.n	80246e6 <__swhatbuf_r+0x22>
 80246d6:	2300      	movs	r3, #0
 80246d8:	602b      	str	r3, [r5, #0]
 80246da:	89b3      	ldrh	r3, [r6, #12]
 80246dc:	061a      	lsls	r2, r3, #24
 80246de:	d410      	bmi.n	8024702 <__swhatbuf_r+0x3e>
 80246e0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80246e4:	e00e      	b.n	8024704 <__swhatbuf_r+0x40>
 80246e6:	466a      	mov	r2, sp
 80246e8:	f000 f96e 	bl	80249c8 <_fstat_r>
 80246ec:	2800      	cmp	r0, #0
 80246ee:	dbf2      	blt.n	80246d6 <__swhatbuf_r+0x12>
 80246f0:	9a01      	ldr	r2, [sp, #4]
 80246f2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80246f6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80246fa:	425a      	negs	r2, r3
 80246fc:	415a      	adcs	r2, r3
 80246fe:	602a      	str	r2, [r5, #0]
 8024700:	e7ee      	b.n	80246e0 <__swhatbuf_r+0x1c>
 8024702:	2340      	movs	r3, #64	; 0x40
 8024704:	2000      	movs	r0, #0
 8024706:	6023      	str	r3, [r4, #0]
 8024708:	b016      	add	sp, #88	; 0x58
 802470a:	bd70      	pop	{r4, r5, r6, pc}

0802470c <__smakebuf_r>:
 802470c:	898b      	ldrh	r3, [r1, #12]
 802470e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8024710:	079d      	lsls	r5, r3, #30
 8024712:	4606      	mov	r6, r0
 8024714:	460c      	mov	r4, r1
 8024716:	d507      	bpl.n	8024728 <__smakebuf_r+0x1c>
 8024718:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802471c:	6023      	str	r3, [r4, #0]
 802471e:	6123      	str	r3, [r4, #16]
 8024720:	2301      	movs	r3, #1
 8024722:	6163      	str	r3, [r4, #20]
 8024724:	b002      	add	sp, #8
 8024726:	bd70      	pop	{r4, r5, r6, pc}
 8024728:	ab01      	add	r3, sp, #4
 802472a:	466a      	mov	r2, sp
 802472c:	f7ff ffca 	bl	80246c4 <__swhatbuf_r>
 8024730:	9900      	ldr	r1, [sp, #0]
 8024732:	4605      	mov	r5, r0
 8024734:	4630      	mov	r0, r6
 8024736:	f7fe fee5 	bl	8023504 <_malloc_r>
 802473a:	b948      	cbnz	r0, 8024750 <__smakebuf_r+0x44>
 802473c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024740:	059a      	lsls	r2, r3, #22
 8024742:	d4ef      	bmi.n	8024724 <__smakebuf_r+0x18>
 8024744:	f023 0303 	bic.w	r3, r3, #3
 8024748:	f043 0302 	orr.w	r3, r3, #2
 802474c:	81a3      	strh	r3, [r4, #12]
 802474e:	e7e3      	b.n	8024718 <__smakebuf_r+0xc>
 8024750:	4b0d      	ldr	r3, [pc, #52]	; (8024788 <__smakebuf_r+0x7c>)
 8024752:	62b3      	str	r3, [r6, #40]	; 0x28
 8024754:	89a3      	ldrh	r3, [r4, #12]
 8024756:	6020      	str	r0, [r4, #0]
 8024758:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802475c:	81a3      	strh	r3, [r4, #12]
 802475e:	9b00      	ldr	r3, [sp, #0]
 8024760:	6163      	str	r3, [r4, #20]
 8024762:	9b01      	ldr	r3, [sp, #4]
 8024764:	6120      	str	r0, [r4, #16]
 8024766:	b15b      	cbz	r3, 8024780 <__smakebuf_r+0x74>
 8024768:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802476c:	4630      	mov	r0, r6
 802476e:	f000 f93d 	bl	80249ec <_isatty_r>
 8024772:	b128      	cbz	r0, 8024780 <__smakebuf_r+0x74>
 8024774:	89a3      	ldrh	r3, [r4, #12]
 8024776:	f023 0303 	bic.w	r3, r3, #3
 802477a:	f043 0301 	orr.w	r3, r3, #1
 802477e:	81a3      	strh	r3, [r4, #12]
 8024780:	89a0      	ldrh	r0, [r4, #12]
 8024782:	4305      	orrs	r5, r0
 8024784:	81a5      	strh	r5, [r4, #12]
 8024786:	e7cd      	b.n	8024724 <__smakebuf_r+0x18>
 8024788:	08022fe9 	.word	0x08022fe9

0802478c <__malloc_lock>:
 802478c:	4801      	ldr	r0, [pc, #4]	; (8024794 <__malloc_lock+0x8>)
 802478e:	f7fe be3f 	b.w	8023410 <__retarget_lock_acquire_recursive>
 8024792:	bf00      	nop
 8024794:	20020624 	.word	0x20020624

08024798 <__malloc_unlock>:
 8024798:	4801      	ldr	r0, [pc, #4]	; (80247a0 <__malloc_unlock+0x8>)
 802479a:	f7fe be3b 	b.w	8023414 <__retarget_lock_release_recursive>
 802479e:	bf00      	nop
 80247a0:	20020624 	.word	0x20020624

080247a4 <_realloc_r>:
 80247a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80247a6:	4607      	mov	r7, r0
 80247a8:	4614      	mov	r4, r2
 80247aa:	460e      	mov	r6, r1
 80247ac:	b921      	cbnz	r1, 80247b8 <_realloc_r+0x14>
 80247ae:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80247b2:	4611      	mov	r1, r2
 80247b4:	f7fe bea6 	b.w	8023504 <_malloc_r>
 80247b8:	b922      	cbnz	r2, 80247c4 <_realloc_r+0x20>
 80247ba:	f7fe fe53 	bl	8023464 <_free_r>
 80247be:	4625      	mov	r5, r4
 80247c0:	4628      	mov	r0, r5
 80247c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80247c4:	f000 f922 	bl	8024a0c <_malloc_usable_size_r>
 80247c8:	42a0      	cmp	r0, r4
 80247ca:	d20f      	bcs.n	80247ec <_realloc_r+0x48>
 80247cc:	4621      	mov	r1, r4
 80247ce:	4638      	mov	r0, r7
 80247d0:	f7fe fe98 	bl	8023504 <_malloc_r>
 80247d4:	4605      	mov	r5, r0
 80247d6:	2800      	cmp	r0, #0
 80247d8:	d0f2      	beq.n	80247c0 <_realloc_r+0x1c>
 80247da:	4631      	mov	r1, r6
 80247dc:	4622      	mov	r2, r4
 80247de:	f7fe fe2b 	bl	8023438 <memcpy>
 80247e2:	4631      	mov	r1, r6
 80247e4:	4638      	mov	r0, r7
 80247e6:	f7fe fe3d 	bl	8023464 <_free_r>
 80247ea:	e7e9      	b.n	80247c0 <_realloc_r+0x1c>
 80247ec:	4635      	mov	r5, r6
 80247ee:	e7e7      	b.n	80247c0 <_realloc_r+0x1c>

080247f0 <_read_r>:
 80247f0:	b538      	push	{r3, r4, r5, lr}
 80247f2:	4d07      	ldr	r5, [pc, #28]	; (8024810 <_read_r+0x20>)
 80247f4:	4604      	mov	r4, r0
 80247f6:	4608      	mov	r0, r1
 80247f8:	4611      	mov	r1, r2
 80247fa:	2200      	movs	r2, #0
 80247fc:	602a      	str	r2, [r5, #0]
 80247fe:	461a      	mov	r2, r3
 8024800:	f7dd fb9a 	bl	8001f38 <_read>
 8024804:	1c43      	adds	r3, r0, #1
 8024806:	d102      	bne.n	802480e <_read_r+0x1e>
 8024808:	682b      	ldr	r3, [r5, #0]
 802480a:	b103      	cbz	r3, 802480e <_read_r+0x1e>
 802480c:	6023      	str	r3, [r4, #0]
 802480e:	bd38      	pop	{r3, r4, r5, pc}
 8024810:	2002062c 	.word	0x2002062c

08024814 <siscanf>:
 8024814:	b40e      	push	{r1, r2, r3}
 8024816:	b510      	push	{r4, lr}
 8024818:	b09f      	sub	sp, #124	; 0x7c
 802481a:	ac21      	add	r4, sp, #132	; 0x84
 802481c:	f44f 7101 	mov.w	r1, #516	; 0x204
 8024820:	f854 2b04 	ldr.w	r2, [r4], #4
 8024824:	9201      	str	r2, [sp, #4]
 8024826:	f8ad 101c 	strh.w	r1, [sp, #28]
 802482a:	9004      	str	r0, [sp, #16]
 802482c:	9008      	str	r0, [sp, #32]
 802482e:	f7db fd41 	bl	80002b4 <strlen>
 8024832:	4b0c      	ldr	r3, [pc, #48]	; (8024864 <siscanf+0x50>)
 8024834:	9005      	str	r0, [sp, #20]
 8024836:	9009      	str	r0, [sp, #36]	; 0x24
 8024838:	930d      	str	r3, [sp, #52]	; 0x34
 802483a:	480b      	ldr	r0, [pc, #44]	; (8024868 <siscanf+0x54>)
 802483c:	9a01      	ldr	r2, [sp, #4]
 802483e:	6800      	ldr	r0, [r0, #0]
 8024840:	9403      	str	r4, [sp, #12]
 8024842:	2300      	movs	r3, #0
 8024844:	9311      	str	r3, [sp, #68]	; 0x44
 8024846:	9316      	str	r3, [sp, #88]	; 0x58
 8024848:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802484c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024850:	a904      	add	r1, sp, #16
 8024852:	4623      	mov	r3, r4
 8024854:	f000 f93c 	bl	8024ad0 <__ssvfiscanf_r>
 8024858:	b01f      	add	sp, #124	; 0x7c
 802485a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802485e:	b003      	add	sp, #12
 8024860:	4770      	bx	lr
 8024862:	bf00      	nop
 8024864:	08023d33 	.word	0x08023d33
 8024868:	200000dc 	.word	0x200000dc

0802486c <strcpy>:
 802486c:	4603      	mov	r3, r0
 802486e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8024872:	f803 2b01 	strb.w	r2, [r3], #1
 8024876:	2a00      	cmp	r2, #0
 8024878:	d1f9      	bne.n	802486e <strcpy+0x2>
 802487a:	4770      	bx	lr

0802487c <strncmp>:
 802487c:	b510      	push	{r4, lr}
 802487e:	b16a      	cbz	r2, 802489c <strncmp+0x20>
 8024880:	3901      	subs	r1, #1
 8024882:	1884      	adds	r4, r0, r2
 8024884:	f810 3b01 	ldrb.w	r3, [r0], #1
 8024888:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 802488c:	4293      	cmp	r3, r2
 802488e:	d103      	bne.n	8024898 <strncmp+0x1c>
 8024890:	42a0      	cmp	r0, r4
 8024892:	d001      	beq.n	8024898 <strncmp+0x1c>
 8024894:	2b00      	cmp	r3, #0
 8024896:	d1f5      	bne.n	8024884 <strncmp+0x8>
 8024898:	1a98      	subs	r0, r3, r2
 802489a:	bd10      	pop	{r4, pc}
 802489c:	4610      	mov	r0, r2
 802489e:	e7fc      	b.n	802489a <strncmp+0x1e>

080248a0 <_strtoul_l.isra.0>:
 80248a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80248a4:	4e3b      	ldr	r6, [pc, #236]	; (8024994 <_strtoul_l.isra.0+0xf4>)
 80248a6:	4686      	mov	lr, r0
 80248a8:	468c      	mov	ip, r1
 80248aa:	4660      	mov	r0, ip
 80248ac:	f81c 4b01 	ldrb.w	r4, [ip], #1
 80248b0:	5da5      	ldrb	r5, [r4, r6]
 80248b2:	f015 0508 	ands.w	r5, r5, #8
 80248b6:	d1f8      	bne.n	80248aa <_strtoul_l.isra.0+0xa>
 80248b8:	2c2d      	cmp	r4, #45	; 0x2d
 80248ba:	d134      	bne.n	8024926 <_strtoul_l.isra.0+0x86>
 80248bc:	f89c 4000 	ldrb.w	r4, [ip]
 80248c0:	f04f 0801 	mov.w	r8, #1
 80248c4:	f100 0c02 	add.w	ip, r0, #2
 80248c8:	2b00      	cmp	r3, #0
 80248ca:	d05e      	beq.n	802498a <_strtoul_l.isra.0+0xea>
 80248cc:	2b10      	cmp	r3, #16
 80248ce:	d10c      	bne.n	80248ea <_strtoul_l.isra.0+0x4a>
 80248d0:	2c30      	cmp	r4, #48	; 0x30
 80248d2:	d10a      	bne.n	80248ea <_strtoul_l.isra.0+0x4a>
 80248d4:	f89c 0000 	ldrb.w	r0, [ip]
 80248d8:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80248dc:	2858      	cmp	r0, #88	; 0x58
 80248de:	d14f      	bne.n	8024980 <_strtoul_l.isra.0+0xe0>
 80248e0:	f89c 4001 	ldrb.w	r4, [ip, #1]
 80248e4:	2310      	movs	r3, #16
 80248e6:	f10c 0c02 	add.w	ip, ip, #2
 80248ea:	f04f 37ff 	mov.w	r7, #4294967295
 80248ee:	2500      	movs	r5, #0
 80248f0:	fbb7 f7f3 	udiv	r7, r7, r3
 80248f4:	fb03 f907 	mul.w	r9, r3, r7
 80248f8:	ea6f 0909 	mvn.w	r9, r9
 80248fc:	4628      	mov	r0, r5
 80248fe:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8024902:	2e09      	cmp	r6, #9
 8024904:	d818      	bhi.n	8024938 <_strtoul_l.isra.0+0x98>
 8024906:	4634      	mov	r4, r6
 8024908:	42a3      	cmp	r3, r4
 802490a:	dd24      	ble.n	8024956 <_strtoul_l.isra.0+0xb6>
 802490c:	2d00      	cmp	r5, #0
 802490e:	db1f      	blt.n	8024950 <_strtoul_l.isra.0+0xb0>
 8024910:	4287      	cmp	r7, r0
 8024912:	d31d      	bcc.n	8024950 <_strtoul_l.isra.0+0xb0>
 8024914:	d101      	bne.n	802491a <_strtoul_l.isra.0+0x7a>
 8024916:	45a1      	cmp	r9, r4
 8024918:	db1a      	blt.n	8024950 <_strtoul_l.isra.0+0xb0>
 802491a:	fb00 4003 	mla	r0, r0, r3, r4
 802491e:	2501      	movs	r5, #1
 8024920:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8024924:	e7eb      	b.n	80248fe <_strtoul_l.isra.0+0x5e>
 8024926:	2c2b      	cmp	r4, #43	; 0x2b
 8024928:	bf08      	it	eq
 802492a:	f89c 4000 	ldrbeq.w	r4, [ip]
 802492e:	46a8      	mov	r8, r5
 8024930:	bf08      	it	eq
 8024932:	f100 0c02 	addeq.w	ip, r0, #2
 8024936:	e7c7      	b.n	80248c8 <_strtoul_l.isra.0+0x28>
 8024938:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 802493c:	2e19      	cmp	r6, #25
 802493e:	d801      	bhi.n	8024944 <_strtoul_l.isra.0+0xa4>
 8024940:	3c37      	subs	r4, #55	; 0x37
 8024942:	e7e1      	b.n	8024908 <_strtoul_l.isra.0+0x68>
 8024944:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8024948:	2e19      	cmp	r6, #25
 802494a:	d804      	bhi.n	8024956 <_strtoul_l.isra.0+0xb6>
 802494c:	3c57      	subs	r4, #87	; 0x57
 802494e:	e7db      	b.n	8024908 <_strtoul_l.isra.0+0x68>
 8024950:	f04f 35ff 	mov.w	r5, #4294967295
 8024954:	e7e4      	b.n	8024920 <_strtoul_l.isra.0+0x80>
 8024956:	2d00      	cmp	r5, #0
 8024958:	da07      	bge.n	802496a <_strtoul_l.isra.0+0xca>
 802495a:	2322      	movs	r3, #34	; 0x22
 802495c:	f8ce 3000 	str.w	r3, [lr]
 8024960:	f04f 30ff 	mov.w	r0, #4294967295
 8024964:	b942      	cbnz	r2, 8024978 <_strtoul_l.isra.0+0xd8>
 8024966:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802496a:	f1b8 0f00 	cmp.w	r8, #0
 802496e:	d000      	beq.n	8024972 <_strtoul_l.isra.0+0xd2>
 8024970:	4240      	negs	r0, r0
 8024972:	2a00      	cmp	r2, #0
 8024974:	d0f7      	beq.n	8024966 <_strtoul_l.isra.0+0xc6>
 8024976:	b10d      	cbz	r5, 802497c <_strtoul_l.isra.0+0xdc>
 8024978:	f10c 31ff 	add.w	r1, ip, #4294967295
 802497c:	6011      	str	r1, [r2, #0]
 802497e:	e7f2      	b.n	8024966 <_strtoul_l.isra.0+0xc6>
 8024980:	2430      	movs	r4, #48	; 0x30
 8024982:	2b00      	cmp	r3, #0
 8024984:	d1b1      	bne.n	80248ea <_strtoul_l.isra.0+0x4a>
 8024986:	2308      	movs	r3, #8
 8024988:	e7af      	b.n	80248ea <_strtoul_l.isra.0+0x4a>
 802498a:	2c30      	cmp	r4, #48	; 0x30
 802498c:	d0a2      	beq.n	80248d4 <_strtoul_l.isra.0+0x34>
 802498e:	230a      	movs	r3, #10
 8024990:	e7ab      	b.n	80248ea <_strtoul_l.isra.0+0x4a>
 8024992:	bf00      	nop
 8024994:	08029bed 	.word	0x08029bed

08024998 <_strtoul_r>:
 8024998:	f7ff bf82 	b.w	80248a0 <_strtoul_l.isra.0>

0802499c <strtoul>:
 802499c:	4613      	mov	r3, r2
 802499e:	460a      	mov	r2, r1
 80249a0:	4601      	mov	r1, r0
 80249a2:	4802      	ldr	r0, [pc, #8]	; (80249ac <strtoul+0x10>)
 80249a4:	6800      	ldr	r0, [r0, #0]
 80249a6:	f7ff bf7b 	b.w	80248a0 <_strtoul_l.isra.0>
 80249aa:	bf00      	nop
 80249ac:	200000dc 	.word	0x200000dc

080249b0 <__env_lock>:
 80249b0:	4801      	ldr	r0, [pc, #4]	; (80249b8 <__env_lock+0x8>)
 80249b2:	f7fe bd2d 	b.w	8023410 <__retarget_lock_acquire_recursive>
 80249b6:	bf00      	nop
 80249b8:	20020622 	.word	0x20020622

080249bc <__env_unlock>:
 80249bc:	4801      	ldr	r0, [pc, #4]	; (80249c4 <__env_unlock+0x8>)
 80249be:	f7fe bd29 	b.w	8023414 <__retarget_lock_release_recursive>
 80249c2:	bf00      	nop
 80249c4:	20020622 	.word	0x20020622

080249c8 <_fstat_r>:
 80249c8:	b538      	push	{r3, r4, r5, lr}
 80249ca:	4d07      	ldr	r5, [pc, #28]	; (80249e8 <_fstat_r+0x20>)
 80249cc:	2300      	movs	r3, #0
 80249ce:	4604      	mov	r4, r0
 80249d0:	4608      	mov	r0, r1
 80249d2:	4611      	mov	r1, r2
 80249d4:	602b      	str	r3, [r5, #0]
 80249d6:	f7dd facc 	bl	8001f72 <_fstat>
 80249da:	1c43      	adds	r3, r0, #1
 80249dc:	d102      	bne.n	80249e4 <_fstat_r+0x1c>
 80249de:	682b      	ldr	r3, [r5, #0]
 80249e0:	b103      	cbz	r3, 80249e4 <_fstat_r+0x1c>
 80249e2:	6023      	str	r3, [r4, #0]
 80249e4:	bd38      	pop	{r3, r4, r5, pc}
 80249e6:	bf00      	nop
 80249e8:	2002062c 	.word	0x2002062c

080249ec <_isatty_r>:
 80249ec:	b538      	push	{r3, r4, r5, lr}
 80249ee:	4d06      	ldr	r5, [pc, #24]	; (8024a08 <_isatty_r+0x1c>)
 80249f0:	2300      	movs	r3, #0
 80249f2:	4604      	mov	r4, r0
 80249f4:	4608      	mov	r0, r1
 80249f6:	602b      	str	r3, [r5, #0]
 80249f8:	f7dd fac0 	bl	8001f7c <_isatty>
 80249fc:	1c43      	adds	r3, r0, #1
 80249fe:	d102      	bne.n	8024a06 <_isatty_r+0x1a>
 8024a00:	682b      	ldr	r3, [r5, #0]
 8024a02:	b103      	cbz	r3, 8024a06 <_isatty_r+0x1a>
 8024a04:	6023      	str	r3, [r4, #0]
 8024a06:	bd38      	pop	{r3, r4, r5, pc}
 8024a08:	2002062c 	.word	0x2002062c

08024a0c <_malloc_usable_size_r>:
 8024a0c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024a10:	1f18      	subs	r0, r3, #4
 8024a12:	2b00      	cmp	r3, #0
 8024a14:	bfbc      	itt	lt
 8024a16:	580b      	ldrlt	r3, [r1, r0]
 8024a18:	18c0      	addlt	r0, r0, r3
 8024a1a:	4770      	bx	lr

08024a1c <_sungetc_r>:
 8024a1c:	b538      	push	{r3, r4, r5, lr}
 8024a1e:	1c4b      	adds	r3, r1, #1
 8024a20:	4614      	mov	r4, r2
 8024a22:	d103      	bne.n	8024a2c <_sungetc_r+0x10>
 8024a24:	f04f 35ff 	mov.w	r5, #4294967295
 8024a28:	4628      	mov	r0, r5
 8024a2a:	bd38      	pop	{r3, r4, r5, pc}
 8024a2c:	8993      	ldrh	r3, [r2, #12]
 8024a2e:	f023 0320 	bic.w	r3, r3, #32
 8024a32:	8193      	strh	r3, [r2, #12]
 8024a34:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8024a36:	6852      	ldr	r2, [r2, #4]
 8024a38:	b2cd      	uxtb	r5, r1
 8024a3a:	b18b      	cbz	r3, 8024a60 <_sungetc_r+0x44>
 8024a3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8024a3e:	4293      	cmp	r3, r2
 8024a40:	dd08      	ble.n	8024a54 <_sungetc_r+0x38>
 8024a42:	6823      	ldr	r3, [r4, #0]
 8024a44:	1e5a      	subs	r2, r3, #1
 8024a46:	6022      	str	r2, [r4, #0]
 8024a48:	f803 5c01 	strb.w	r5, [r3, #-1]
 8024a4c:	6863      	ldr	r3, [r4, #4]
 8024a4e:	3301      	adds	r3, #1
 8024a50:	6063      	str	r3, [r4, #4]
 8024a52:	e7e9      	b.n	8024a28 <_sungetc_r+0xc>
 8024a54:	4621      	mov	r1, r4
 8024a56:	f000 fbbf 	bl	80251d8 <__submore>
 8024a5a:	2800      	cmp	r0, #0
 8024a5c:	d0f1      	beq.n	8024a42 <_sungetc_r+0x26>
 8024a5e:	e7e1      	b.n	8024a24 <_sungetc_r+0x8>
 8024a60:	6921      	ldr	r1, [r4, #16]
 8024a62:	6823      	ldr	r3, [r4, #0]
 8024a64:	b151      	cbz	r1, 8024a7c <_sungetc_r+0x60>
 8024a66:	4299      	cmp	r1, r3
 8024a68:	d208      	bcs.n	8024a7c <_sungetc_r+0x60>
 8024a6a:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8024a6e:	42a9      	cmp	r1, r5
 8024a70:	d104      	bne.n	8024a7c <_sungetc_r+0x60>
 8024a72:	3b01      	subs	r3, #1
 8024a74:	3201      	adds	r2, #1
 8024a76:	6023      	str	r3, [r4, #0]
 8024a78:	6062      	str	r2, [r4, #4]
 8024a7a:	e7d5      	b.n	8024a28 <_sungetc_r+0xc>
 8024a7c:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8024a80:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024a84:	6363      	str	r3, [r4, #52]	; 0x34
 8024a86:	2303      	movs	r3, #3
 8024a88:	63a3      	str	r3, [r4, #56]	; 0x38
 8024a8a:	4623      	mov	r3, r4
 8024a8c:	f803 5f46 	strb.w	r5, [r3, #70]!
 8024a90:	6023      	str	r3, [r4, #0]
 8024a92:	2301      	movs	r3, #1
 8024a94:	e7dc      	b.n	8024a50 <_sungetc_r+0x34>

08024a96 <__ssrefill_r>:
 8024a96:	b510      	push	{r4, lr}
 8024a98:	460c      	mov	r4, r1
 8024a9a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8024a9c:	b169      	cbz	r1, 8024aba <__ssrefill_r+0x24>
 8024a9e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024aa2:	4299      	cmp	r1, r3
 8024aa4:	d001      	beq.n	8024aaa <__ssrefill_r+0x14>
 8024aa6:	f7fe fcdd 	bl	8023464 <_free_r>
 8024aaa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8024aac:	6063      	str	r3, [r4, #4]
 8024aae:	2000      	movs	r0, #0
 8024ab0:	6360      	str	r0, [r4, #52]	; 0x34
 8024ab2:	b113      	cbz	r3, 8024aba <__ssrefill_r+0x24>
 8024ab4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8024ab6:	6023      	str	r3, [r4, #0]
 8024ab8:	bd10      	pop	{r4, pc}
 8024aba:	6923      	ldr	r3, [r4, #16]
 8024abc:	6023      	str	r3, [r4, #0]
 8024abe:	2300      	movs	r3, #0
 8024ac0:	6063      	str	r3, [r4, #4]
 8024ac2:	89a3      	ldrh	r3, [r4, #12]
 8024ac4:	f043 0320 	orr.w	r3, r3, #32
 8024ac8:	81a3      	strh	r3, [r4, #12]
 8024aca:	f04f 30ff 	mov.w	r0, #4294967295
 8024ace:	e7f3      	b.n	8024ab8 <__ssrefill_r+0x22>

08024ad0 <__ssvfiscanf_r>:
 8024ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ad4:	460c      	mov	r4, r1
 8024ad6:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 8024ada:	2100      	movs	r1, #0
 8024adc:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8024ae0:	49b2      	ldr	r1, [pc, #712]	; (8024dac <__ssvfiscanf_r+0x2dc>)
 8024ae2:	91a0      	str	r1, [sp, #640]	; 0x280
 8024ae4:	f10d 0804 	add.w	r8, sp, #4
 8024ae8:	49b1      	ldr	r1, [pc, #708]	; (8024db0 <__ssvfiscanf_r+0x2e0>)
 8024aea:	4fb2      	ldr	r7, [pc, #712]	; (8024db4 <__ssvfiscanf_r+0x2e4>)
 8024aec:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 8024db8 <__ssvfiscanf_r+0x2e8>
 8024af0:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8024af4:	4606      	mov	r6, r0
 8024af6:	91a1      	str	r1, [sp, #644]	; 0x284
 8024af8:	9300      	str	r3, [sp, #0]
 8024afa:	f892 a000 	ldrb.w	sl, [r2]
 8024afe:	f1ba 0f00 	cmp.w	sl, #0
 8024b02:	f000 8151 	beq.w	8024da8 <__ssvfiscanf_r+0x2d8>
 8024b06:	f81a 3007 	ldrb.w	r3, [sl, r7]
 8024b0a:	f013 0308 	ands.w	r3, r3, #8
 8024b0e:	f102 0501 	add.w	r5, r2, #1
 8024b12:	d019      	beq.n	8024b48 <__ssvfiscanf_r+0x78>
 8024b14:	6863      	ldr	r3, [r4, #4]
 8024b16:	2b00      	cmp	r3, #0
 8024b18:	dd0f      	ble.n	8024b3a <__ssvfiscanf_r+0x6a>
 8024b1a:	6823      	ldr	r3, [r4, #0]
 8024b1c:	781a      	ldrb	r2, [r3, #0]
 8024b1e:	5cba      	ldrb	r2, [r7, r2]
 8024b20:	0712      	lsls	r2, r2, #28
 8024b22:	d401      	bmi.n	8024b28 <__ssvfiscanf_r+0x58>
 8024b24:	462a      	mov	r2, r5
 8024b26:	e7e8      	b.n	8024afa <__ssvfiscanf_r+0x2a>
 8024b28:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8024b2a:	3201      	adds	r2, #1
 8024b2c:	9245      	str	r2, [sp, #276]	; 0x114
 8024b2e:	6862      	ldr	r2, [r4, #4]
 8024b30:	3301      	adds	r3, #1
 8024b32:	3a01      	subs	r2, #1
 8024b34:	6062      	str	r2, [r4, #4]
 8024b36:	6023      	str	r3, [r4, #0]
 8024b38:	e7ec      	b.n	8024b14 <__ssvfiscanf_r+0x44>
 8024b3a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8024b3c:	4621      	mov	r1, r4
 8024b3e:	4630      	mov	r0, r6
 8024b40:	4798      	blx	r3
 8024b42:	2800      	cmp	r0, #0
 8024b44:	d0e9      	beq.n	8024b1a <__ssvfiscanf_r+0x4a>
 8024b46:	e7ed      	b.n	8024b24 <__ssvfiscanf_r+0x54>
 8024b48:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 8024b4c:	f040 8083 	bne.w	8024c56 <__ssvfiscanf_r+0x186>
 8024b50:	9341      	str	r3, [sp, #260]	; 0x104
 8024b52:	9343      	str	r3, [sp, #268]	; 0x10c
 8024b54:	7853      	ldrb	r3, [r2, #1]
 8024b56:	2b2a      	cmp	r3, #42	; 0x2a
 8024b58:	bf02      	ittt	eq
 8024b5a:	2310      	moveq	r3, #16
 8024b5c:	1c95      	addeq	r5, r2, #2
 8024b5e:	9341      	streq	r3, [sp, #260]	; 0x104
 8024b60:	220a      	movs	r2, #10
 8024b62:	46ab      	mov	fp, r5
 8024b64:	f81b 1b01 	ldrb.w	r1, [fp], #1
 8024b68:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8024b6c:	2b09      	cmp	r3, #9
 8024b6e:	d91d      	bls.n	8024bac <__ssvfiscanf_r+0xdc>
 8024b70:	4891      	ldr	r0, [pc, #580]	; (8024db8 <__ssvfiscanf_r+0x2e8>)
 8024b72:	2203      	movs	r2, #3
 8024b74:	f7db fb44 	bl	8000200 <memchr>
 8024b78:	b140      	cbz	r0, 8024b8c <__ssvfiscanf_r+0xbc>
 8024b7a:	2301      	movs	r3, #1
 8024b7c:	eba0 0009 	sub.w	r0, r0, r9
 8024b80:	fa03 f000 	lsl.w	r0, r3, r0
 8024b84:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8024b86:	4318      	orrs	r0, r3
 8024b88:	9041      	str	r0, [sp, #260]	; 0x104
 8024b8a:	465d      	mov	r5, fp
 8024b8c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8024b90:	2b78      	cmp	r3, #120	; 0x78
 8024b92:	d806      	bhi.n	8024ba2 <__ssvfiscanf_r+0xd2>
 8024b94:	2b57      	cmp	r3, #87	; 0x57
 8024b96:	d810      	bhi.n	8024bba <__ssvfiscanf_r+0xea>
 8024b98:	2b25      	cmp	r3, #37	; 0x25
 8024b9a:	d05c      	beq.n	8024c56 <__ssvfiscanf_r+0x186>
 8024b9c:	d856      	bhi.n	8024c4c <__ssvfiscanf_r+0x17c>
 8024b9e:	2b00      	cmp	r3, #0
 8024ba0:	d074      	beq.n	8024c8c <__ssvfiscanf_r+0x1bc>
 8024ba2:	2303      	movs	r3, #3
 8024ba4:	9347      	str	r3, [sp, #284]	; 0x11c
 8024ba6:	230a      	movs	r3, #10
 8024ba8:	9342      	str	r3, [sp, #264]	; 0x108
 8024baa:	e081      	b.n	8024cb0 <__ssvfiscanf_r+0x1e0>
 8024bac:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8024bae:	fb02 1303 	mla	r3, r2, r3, r1
 8024bb2:	3b30      	subs	r3, #48	; 0x30
 8024bb4:	9343      	str	r3, [sp, #268]	; 0x10c
 8024bb6:	465d      	mov	r5, fp
 8024bb8:	e7d3      	b.n	8024b62 <__ssvfiscanf_r+0x92>
 8024bba:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8024bbe:	2a20      	cmp	r2, #32
 8024bc0:	d8ef      	bhi.n	8024ba2 <__ssvfiscanf_r+0xd2>
 8024bc2:	a101      	add	r1, pc, #4	; (adr r1, 8024bc8 <__ssvfiscanf_r+0xf8>)
 8024bc4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8024bc8:	08024c9b 	.word	0x08024c9b
 8024bcc:	08024ba3 	.word	0x08024ba3
 8024bd0:	08024ba3 	.word	0x08024ba3
 8024bd4:	08024cf9 	.word	0x08024cf9
 8024bd8:	08024ba3 	.word	0x08024ba3
 8024bdc:	08024ba3 	.word	0x08024ba3
 8024be0:	08024ba3 	.word	0x08024ba3
 8024be4:	08024ba3 	.word	0x08024ba3
 8024be8:	08024ba3 	.word	0x08024ba3
 8024bec:	08024ba3 	.word	0x08024ba3
 8024bf0:	08024ba3 	.word	0x08024ba3
 8024bf4:	08024d0f 	.word	0x08024d0f
 8024bf8:	08024ce5 	.word	0x08024ce5
 8024bfc:	08024c53 	.word	0x08024c53
 8024c00:	08024c53 	.word	0x08024c53
 8024c04:	08024c53 	.word	0x08024c53
 8024c08:	08024ba3 	.word	0x08024ba3
 8024c0c:	08024ce9 	.word	0x08024ce9
 8024c10:	08024ba3 	.word	0x08024ba3
 8024c14:	08024ba3 	.word	0x08024ba3
 8024c18:	08024ba3 	.word	0x08024ba3
 8024c1c:	08024ba3 	.word	0x08024ba3
 8024c20:	08024d1f 	.word	0x08024d1f
 8024c24:	08024cf1 	.word	0x08024cf1
 8024c28:	08024c93 	.word	0x08024c93
 8024c2c:	08024ba3 	.word	0x08024ba3
 8024c30:	08024ba3 	.word	0x08024ba3
 8024c34:	08024d1b 	.word	0x08024d1b
 8024c38:	08024ba3 	.word	0x08024ba3
 8024c3c:	08024ce5 	.word	0x08024ce5
 8024c40:	08024ba3 	.word	0x08024ba3
 8024c44:	08024ba3 	.word	0x08024ba3
 8024c48:	08024c9b 	.word	0x08024c9b
 8024c4c:	3b45      	subs	r3, #69	; 0x45
 8024c4e:	2b02      	cmp	r3, #2
 8024c50:	d8a7      	bhi.n	8024ba2 <__ssvfiscanf_r+0xd2>
 8024c52:	2305      	movs	r3, #5
 8024c54:	e02b      	b.n	8024cae <__ssvfiscanf_r+0x1de>
 8024c56:	6863      	ldr	r3, [r4, #4]
 8024c58:	2b00      	cmp	r3, #0
 8024c5a:	dd0d      	ble.n	8024c78 <__ssvfiscanf_r+0x1a8>
 8024c5c:	6823      	ldr	r3, [r4, #0]
 8024c5e:	781a      	ldrb	r2, [r3, #0]
 8024c60:	4552      	cmp	r2, sl
 8024c62:	f040 80a1 	bne.w	8024da8 <__ssvfiscanf_r+0x2d8>
 8024c66:	3301      	adds	r3, #1
 8024c68:	6862      	ldr	r2, [r4, #4]
 8024c6a:	6023      	str	r3, [r4, #0]
 8024c6c:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8024c6e:	3a01      	subs	r2, #1
 8024c70:	3301      	adds	r3, #1
 8024c72:	6062      	str	r2, [r4, #4]
 8024c74:	9345      	str	r3, [sp, #276]	; 0x114
 8024c76:	e755      	b.n	8024b24 <__ssvfiscanf_r+0x54>
 8024c78:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8024c7a:	4621      	mov	r1, r4
 8024c7c:	4630      	mov	r0, r6
 8024c7e:	4798      	blx	r3
 8024c80:	2800      	cmp	r0, #0
 8024c82:	d0eb      	beq.n	8024c5c <__ssvfiscanf_r+0x18c>
 8024c84:	9844      	ldr	r0, [sp, #272]	; 0x110
 8024c86:	2800      	cmp	r0, #0
 8024c88:	f040 8084 	bne.w	8024d94 <__ssvfiscanf_r+0x2c4>
 8024c8c:	f04f 30ff 	mov.w	r0, #4294967295
 8024c90:	e086      	b.n	8024da0 <__ssvfiscanf_r+0x2d0>
 8024c92:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8024c94:	f042 0220 	orr.w	r2, r2, #32
 8024c98:	9241      	str	r2, [sp, #260]	; 0x104
 8024c9a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8024c9c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8024ca0:	9241      	str	r2, [sp, #260]	; 0x104
 8024ca2:	2210      	movs	r2, #16
 8024ca4:	2b6f      	cmp	r3, #111	; 0x6f
 8024ca6:	9242      	str	r2, [sp, #264]	; 0x108
 8024ca8:	bf34      	ite	cc
 8024caa:	2303      	movcc	r3, #3
 8024cac:	2304      	movcs	r3, #4
 8024cae:	9347      	str	r3, [sp, #284]	; 0x11c
 8024cb0:	6863      	ldr	r3, [r4, #4]
 8024cb2:	2b00      	cmp	r3, #0
 8024cb4:	dd41      	ble.n	8024d3a <__ssvfiscanf_r+0x26a>
 8024cb6:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8024cb8:	0659      	lsls	r1, r3, #25
 8024cba:	d404      	bmi.n	8024cc6 <__ssvfiscanf_r+0x1f6>
 8024cbc:	6823      	ldr	r3, [r4, #0]
 8024cbe:	781a      	ldrb	r2, [r3, #0]
 8024cc0:	5cba      	ldrb	r2, [r7, r2]
 8024cc2:	0712      	lsls	r2, r2, #28
 8024cc4:	d440      	bmi.n	8024d48 <__ssvfiscanf_r+0x278>
 8024cc6:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8024cc8:	2b02      	cmp	r3, #2
 8024cca:	dc4f      	bgt.n	8024d6c <__ssvfiscanf_r+0x29c>
 8024ccc:	466b      	mov	r3, sp
 8024cce:	4622      	mov	r2, r4
 8024cd0:	a941      	add	r1, sp, #260	; 0x104
 8024cd2:	4630      	mov	r0, r6
 8024cd4:	f000 f874 	bl	8024dc0 <_scanf_chars>
 8024cd8:	2801      	cmp	r0, #1
 8024cda:	d065      	beq.n	8024da8 <__ssvfiscanf_r+0x2d8>
 8024cdc:	2802      	cmp	r0, #2
 8024cde:	f47f af21 	bne.w	8024b24 <__ssvfiscanf_r+0x54>
 8024ce2:	e7cf      	b.n	8024c84 <__ssvfiscanf_r+0x1b4>
 8024ce4:	220a      	movs	r2, #10
 8024ce6:	e7dd      	b.n	8024ca4 <__ssvfiscanf_r+0x1d4>
 8024ce8:	2300      	movs	r3, #0
 8024cea:	9342      	str	r3, [sp, #264]	; 0x108
 8024cec:	2303      	movs	r3, #3
 8024cee:	e7de      	b.n	8024cae <__ssvfiscanf_r+0x1de>
 8024cf0:	2308      	movs	r3, #8
 8024cf2:	9342      	str	r3, [sp, #264]	; 0x108
 8024cf4:	2304      	movs	r3, #4
 8024cf6:	e7da      	b.n	8024cae <__ssvfiscanf_r+0x1de>
 8024cf8:	4629      	mov	r1, r5
 8024cfa:	4640      	mov	r0, r8
 8024cfc:	f000 f9ac 	bl	8025058 <__sccl>
 8024d00:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8024d02:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024d06:	9341      	str	r3, [sp, #260]	; 0x104
 8024d08:	4605      	mov	r5, r0
 8024d0a:	2301      	movs	r3, #1
 8024d0c:	e7cf      	b.n	8024cae <__ssvfiscanf_r+0x1de>
 8024d0e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8024d10:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024d14:	9341      	str	r3, [sp, #260]	; 0x104
 8024d16:	2300      	movs	r3, #0
 8024d18:	e7c9      	b.n	8024cae <__ssvfiscanf_r+0x1de>
 8024d1a:	2302      	movs	r3, #2
 8024d1c:	e7c7      	b.n	8024cae <__ssvfiscanf_r+0x1de>
 8024d1e:	9841      	ldr	r0, [sp, #260]	; 0x104
 8024d20:	06c3      	lsls	r3, r0, #27
 8024d22:	f53f aeff 	bmi.w	8024b24 <__ssvfiscanf_r+0x54>
 8024d26:	9b00      	ldr	r3, [sp, #0]
 8024d28:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8024d2a:	1d19      	adds	r1, r3, #4
 8024d2c:	9100      	str	r1, [sp, #0]
 8024d2e:	681b      	ldr	r3, [r3, #0]
 8024d30:	07c0      	lsls	r0, r0, #31
 8024d32:	bf4c      	ite	mi
 8024d34:	801a      	strhmi	r2, [r3, #0]
 8024d36:	601a      	strpl	r2, [r3, #0]
 8024d38:	e6f4      	b.n	8024b24 <__ssvfiscanf_r+0x54>
 8024d3a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8024d3c:	4621      	mov	r1, r4
 8024d3e:	4630      	mov	r0, r6
 8024d40:	4798      	blx	r3
 8024d42:	2800      	cmp	r0, #0
 8024d44:	d0b7      	beq.n	8024cb6 <__ssvfiscanf_r+0x1e6>
 8024d46:	e79d      	b.n	8024c84 <__ssvfiscanf_r+0x1b4>
 8024d48:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8024d4a:	3201      	adds	r2, #1
 8024d4c:	9245      	str	r2, [sp, #276]	; 0x114
 8024d4e:	6862      	ldr	r2, [r4, #4]
 8024d50:	3a01      	subs	r2, #1
 8024d52:	2a00      	cmp	r2, #0
 8024d54:	6062      	str	r2, [r4, #4]
 8024d56:	dd02      	ble.n	8024d5e <__ssvfiscanf_r+0x28e>
 8024d58:	3301      	adds	r3, #1
 8024d5a:	6023      	str	r3, [r4, #0]
 8024d5c:	e7ae      	b.n	8024cbc <__ssvfiscanf_r+0x1ec>
 8024d5e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8024d60:	4621      	mov	r1, r4
 8024d62:	4630      	mov	r0, r6
 8024d64:	4798      	blx	r3
 8024d66:	2800      	cmp	r0, #0
 8024d68:	d0a8      	beq.n	8024cbc <__ssvfiscanf_r+0x1ec>
 8024d6a:	e78b      	b.n	8024c84 <__ssvfiscanf_r+0x1b4>
 8024d6c:	2b04      	cmp	r3, #4
 8024d6e:	dc06      	bgt.n	8024d7e <__ssvfiscanf_r+0x2ae>
 8024d70:	466b      	mov	r3, sp
 8024d72:	4622      	mov	r2, r4
 8024d74:	a941      	add	r1, sp, #260	; 0x104
 8024d76:	4630      	mov	r0, r6
 8024d78:	f000 f87a 	bl	8024e70 <_scanf_i>
 8024d7c:	e7ac      	b.n	8024cd8 <__ssvfiscanf_r+0x208>
 8024d7e:	4b0f      	ldr	r3, [pc, #60]	; (8024dbc <__ssvfiscanf_r+0x2ec>)
 8024d80:	2b00      	cmp	r3, #0
 8024d82:	f43f aecf 	beq.w	8024b24 <__ssvfiscanf_r+0x54>
 8024d86:	466b      	mov	r3, sp
 8024d88:	4622      	mov	r2, r4
 8024d8a:	a941      	add	r1, sp, #260	; 0x104
 8024d8c:	4630      	mov	r0, r6
 8024d8e:	f3af 8000 	nop.w
 8024d92:	e7a1      	b.n	8024cd8 <__ssvfiscanf_r+0x208>
 8024d94:	89a3      	ldrh	r3, [r4, #12]
 8024d96:	f013 0f40 	tst.w	r3, #64	; 0x40
 8024d9a:	bf18      	it	ne
 8024d9c:	f04f 30ff 	movne.w	r0, #4294967295
 8024da0:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 8024da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024da8:	9844      	ldr	r0, [sp, #272]	; 0x110
 8024daa:	e7f9      	b.n	8024da0 <__ssvfiscanf_r+0x2d0>
 8024dac:	08024a1d 	.word	0x08024a1d
 8024db0:	08024a97 	.word	0x08024a97
 8024db4:	08029bed 	.word	0x08029bed
 8024db8:	08029b7e 	.word	0x08029b7e
 8024dbc:	00000000 	.word	0x00000000

08024dc0 <_scanf_chars>:
 8024dc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024dc4:	4615      	mov	r5, r2
 8024dc6:	688a      	ldr	r2, [r1, #8]
 8024dc8:	4680      	mov	r8, r0
 8024dca:	460c      	mov	r4, r1
 8024dcc:	b932      	cbnz	r2, 8024ddc <_scanf_chars+0x1c>
 8024dce:	698a      	ldr	r2, [r1, #24]
 8024dd0:	2a00      	cmp	r2, #0
 8024dd2:	bf0c      	ite	eq
 8024dd4:	2201      	moveq	r2, #1
 8024dd6:	f04f 32ff 	movne.w	r2, #4294967295
 8024dda:	608a      	str	r2, [r1, #8]
 8024ddc:	6822      	ldr	r2, [r4, #0]
 8024dde:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8024e6c <_scanf_chars+0xac>
 8024de2:	06d1      	lsls	r1, r2, #27
 8024de4:	bf5f      	itttt	pl
 8024de6:	681a      	ldrpl	r2, [r3, #0]
 8024de8:	1d11      	addpl	r1, r2, #4
 8024dea:	6019      	strpl	r1, [r3, #0]
 8024dec:	6816      	ldrpl	r6, [r2, #0]
 8024dee:	2700      	movs	r7, #0
 8024df0:	69a0      	ldr	r0, [r4, #24]
 8024df2:	b188      	cbz	r0, 8024e18 <_scanf_chars+0x58>
 8024df4:	2801      	cmp	r0, #1
 8024df6:	d107      	bne.n	8024e08 <_scanf_chars+0x48>
 8024df8:	682b      	ldr	r3, [r5, #0]
 8024dfa:	781a      	ldrb	r2, [r3, #0]
 8024dfc:	6963      	ldr	r3, [r4, #20]
 8024dfe:	5c9b      	ldrb	r3, [r3, r2]
 8024e00:	b953      	cbnz	r3, 8024e18 <_scanf_chars+0x58>
 8024e02:	bb27      	cbnz	r7, 8024e4e <_scanf_chars+0x8e>
 8024e04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024e08:	2802      	cmp	r0, #2
 8024e0a:	d120      	bne.n	8024e4e <_scanf_chars+0x8e>
 8024e0c:	682b      	ldr	r3, [r5, #0]
 8024e0e:	781b      	ldrb	r3, [r3, #0]
 8024e10:	f813 3009 	ldrb.w	r3, [r3, r9]
 8024e14:	071b      	lsls	r3, r3, #28
 8024e16:	d41a      	bmi.n	8024e4e <_scanf_chars+0x8e>
 8024e18:	6823      	ldr	r3, [r4, #0]
 8024e1a:	06da      	lsls	r2, r3, #27
 8024e1c:	bf5e      	ittt	pl
 8024e1e:	682b      	ldrpl	r3, [r5, #0]
 8024e20:	781b      	ldrbpl	r3, [r3, #0]
 8024e22:	f806 3b01 	strbpl.w	r3, [r6], #1
 8024e26:	682a      	ldr	r2, [r5, #0]
 8024e28:	686b      	ldr	r3, [r5, #4]
 8024e2a:	3201      	adds	r2, #1
 8024e2c:	602a      	str	r2, [r5, #0]
 8024e2e:	68a2      	ldr	r2, [r4, #8]
 8024e30:	3b01      	subs	r3, #1
 8024e32:	3a01      	subs	r2, #1
 8024e34:	606b      	str	r3, [r5, #4]
 8024e36:	3701      	adds	r7, #1
 8024e38:	60a2      	str	r2, [r4, #8]
 8024e3a:	b142      	cbz	r2, 8024e4e <_scanf_chars+0x8e>
 8024e3c:	2b00      	cmp	r3, #0
 8024e3e:	dcd7      	bgt.n	8024df0 <_scanf_chars+0x30>
 8024e40:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8024e44:	4629      	mov	r1, r5
 8024e46:	4640      	mov	r0, r8
 8024e48:	4798      	blx	r3
 8024e4a:	2800      	cmp	r0, #0
 8024e4c:	d0d0      	beq.n	8024df0 <_scanf_chars+0x30>
 8024e4e:	6823      	ldr	r3, [r4, #0]
 8024e50:	f013 0310 	ands.w	r3, r3, #16
 8024e54:	d105      	bne.n	8024e62 <_scanf_chars+0xa2>
 8024e56:	68e2      	ldr	r2, [r4, #12]
 8024e58:	3201      	adds	r2, #1
 8024e5a:	60e2      	str	r2, [r4, #12]
 8024e5c:	69a2      	ldr	r2, [r4, #24]
 8024e5e:	b102      	cbz	r2, 8024e62 <_scanf_chars+0xa2>
 8024e60:	7033      	strb	r3, [r6, #0]
 8024e62:	6923      	ldr	r3, [r4, #16]
 8024e64:	441f      	add	r7, r3
 8024e66:	6127      	str	r7, [r4, #16]
 8024e68:	2000      	movs	r0, #0
 8024e6a:	e7cb      	b.n	8024e04 <_scanf_chars+0x44>
 8024e6c:	08029bed 	.word	0x08029bed

08024e70 <_scanf_i>:
 8024e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e74:	4698      	mov	r8, r3
 8024e76:	4b74      	ldr	r3, [pc, #464]	; (8025048 <_scanf_i+0x1d8>)
 8024e78:	460c      	mov	r4, r1
 8024e7a:	4682      	mov	sl, r0
 8024e7c:	4616      	mov	r6, r2
 8024e7e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8024e82:	b087      	sub	sp, #28
 8024e84:	ab03      	add	r3, sp, #12
 8024e86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8024e8a:	4b70      	ldr	r3, [pc, #448]	; (802504c <_scanf_i+0x1dc>)
 8024e8c:	69a1      	ldr	r1, [r4, #24]
 8024e8e:	4a70      	ldr	r2, [pc, #448]	; (8025050 <_scanf_i+0x1e0>)
 8024e90:	2903      	cmp	r1, #3
 8024e92:	bf18      	it	ne
 8024e94:	461a      	movne	r2, r3
 8024e96:	68a3      	ldr	r3, [r4, #8]
 8024e98:	9201      	str	r2, [sp, #4]
 8024e9a:	1e5a      	subs	r2, r3, #1
 8024e9c:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8024ea0:	bf88      	it	hi
 8024ea2:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8024ea6:	4627      	mov	r7, r4
 8024ea8:	bf82      	ittt	hi
 8024eaa:	eb03 0905 	addhi.w	r9, r3, r5
 8024eae:	f240 135d 	movwhi	r3, #349	; 0x15d
 8024eb2:	60a3      	strhi	r3, [r4, #8]
 8024eb4:	f857 3b1c 	ldr.w	r3, [r7], #28
 8024eb8:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8024ebc:	bf98      	it	ls
 8024ebe:	f04f 0900 	movls.w	r9, #0
 8024ec2:	6023      	str	r3, [r4, #0]
 8024ec4:	463d      	mov	r5, r7
 8024ec6:	f04f 0b00 	mov.w	fp, #0
 8024eca:	6831      	ldr	r1, [r6, #0]
 8024ecc:	ab03      	add	r3, sp, #12
 8024ece:	7809      	ldrb	r1, [r1, #0]
 8024ed0:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8024ed4:	2202      	movs	r2, #2
 8024ed6:	f7db f993 	bl	8000200 <memchr>
 8024eda:	b328      	cbz	r0, 8024f28 <_scanf_i+0xb8>
 8024edc:	f1bb 0f01 	cmp.w	fp, #1
 8024ee0:	d159      	bne.n	8024f96 <_scanf_i+0x126>
 8024ee2:	6862      	ldr	r2, [r4, #4]
 8024ee4:	b92a      	cbnz	r2, 8024ef2 <_scanf_i+0x82>
 8024ee6:	6822      	ldr	r2, [r4, #0]
 8024ee8:	2308      	movs	r3, #8
 8024eea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8024eee:	6063      	str	r3, [r4, #4]
 8024ef0:	6022      	str	r2, [r4, #0]
 8024ef2:	6822      	ldr	r2, [r4, #0]
 8024ef4:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 8024ef8:	6022      	str	r2, [r4, #0]
 8024efa:	68a2      	ldr	r2, [r4, #8]
 8024efc:	1e51      	subs	r1, r2, #1
 8024efe:	60a1      	str	r1, [r4, #8]
 8024f00:	b192      	cbz	r2, 8024f28 <_scanf_i+0xb8>
 8024f02:	6832      	ldr	r2, [r6, #0]
 8024f04:	1c51      	adds	r1, r2, #1
 8024f06:	6031      	str	r1, [r6, #0]
 8024f08:	7812      	ldrb	r2, [r2, #0]
 8024f0a:	f805 2b01 	strb.w	r2, [r5], #1
 8024f0e:	6872      	ldr	r2, [r6, #4]
 8024f10:	3a01      	subs	r2, #1
 8024f12:	2a00      	cmp	r2, #0
 8024f14:	6072      	str	r2, [r6, #4]
 8024f16:	dc07      	bgt.n	8024f28 <_scanf_i+0xb8>
 8024f18:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 8024f1c:	4631      	mov	r1, r6
 8024f1e:	4650      	mov	r0, sl
 8024f20:	4790      	blx	r2
 8024f22:	2800      	cmp	r0, #0
 8024f24:	f040 8085 	bne.w	8025032 <_scanf_i+0x1c2>
 8024f28:	f10b 0b01 	add.w	fp, fp, #1
 8024f2c:	f1bb 0f03 	cmp.w	fp, #3
 8024f30:	d1cb      	bne.n	8024eca <_scanf_i+0x5a>
 8024f32:	6863      	ldr	r3, [r4, #4]
 8024f34:	b90b      	cbnz	r3, 8024f3a <_scanf_i+0xca>
 8024f36:	230a      	movs	r3, #10
 8024f38:	6063      	str	r3, [r4, #4]
 8024f3a:	6863      	ldr	r3, [r4, #4]
 8024f3c:	4945      	ldr	r1, [pc, #276]	; (8025054 <_scanf_i+0x1e4>)
 8024f3e:	6960      	ldr	r0, [r4, #20]
 8024f40:	1ac9      	subs	r1, r1, r3
 8024f42:	f000 f889 	bl	8025058 <__sccl>
 8024f46:	f04f 0b00 	mov.w	fp, #0
 8024f4a:	68a3      	ldr	r3, [r4, #8]
 8024f4c:	6822      	ldr	r2, [r4, #0]
 8024f4e:	2b00      	cmp	r3, #0
 8024f50:	d03d      	beq.n	8024fce <_scanf_i+0x15e>
 8024f52:	6831      	ldr	r1, [r6, #0]
 8024f54:	6960      	ldr	r0, [r4, #20]
 8024f56:	f891 c000 	ldrb.w	ip, [r1]
 8024f5a:	f810 000c 	ldrb.w	r0, [r0, ip]
 8024f5e:	2800      	cmp	r0, #0
 8024f60:	d035      	beq.n	8024fce <_scanf_i+0x15e>
 8024f62:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 8024f66:	d124      	bne.n	8024fb2 <_scanf_i+0x142>
 8024f68:	0510      	lsls	r0, r2, #20
 8024f6a:	d522      	bpl.n	8024fb2 <_scanf_i+0x142>
 8024f6c:	f10b 0b01 	add.w	fp, fp, #1
 8024f70:	f1b9 0f00 	cmp.w	r9, #0
 8024f74:	d003      	beq.n	8024f7e <_scanf_i+0x10e>
 8024f76:	3301      	adds	r3, #1
 8024f78:	f109 39ff 	add.w	r9, r9, #4294967295
 8024f7c:	60a3      	str	r3, [r4, #8]
 8024f7e:	6873      	ldr	r3, [r6, #4]
 8024f80:	3b01      	subs	r3, #1
 8024f82:	2b00      	cmp	r3, #0
 8024f84:	6073      	str	r3, [r6, #4]
 8024f86:	dd1b      	ble.n	8024fc0 <_scanf_i+0x150>
 8024f88:	6833      	ldr	r3, [r6, #0]
 8024f8a:	3301      	adds	r3, #1
 8024f8c:	6033      	str	r3, [r6, #0]
 8024f8e:	68a3      	ldr	r3, [r4, #8]
 8024f90:	3b01      	subs	r3, #1
 8024f92:	60a3      	str	r3, [r4, #8]
 8024f94:	e7d9      	b.n	8024f4a <_scanf_i+0xda>
 8024f96:	f1bb 0f02 	cmp.w	fp, #2
 8024f9a:	d1ae      	bne.n	8024efa <_scanf_i+0x8a>
 8024f9c:	6822      	ldr	r2, [r4, #0]
 8024f9e:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8024fa2:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8024fa6:	d1bf      	bne.n	8024f28 <_scanf_i+0xb8>
 8024fa8:	2310      	movs	r3, #16
 8024faa:	6063      	str	r3, [r4, #4]
 8024fac:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8024fb0:	e7a2      	b.n	8024ef8 <_scanf_i+0x88>
 8024fb2:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 8024fb6:	6022      	str	r2, [r4, #0]
 8024fb8:	780b      	ldrb	r3, [r1, #0]
 8024fba:	f805 3b01 	strb.w	r3, [r5], #1
 8024fbe:	e7de      	b.n	8024f7e <_scanf_i+0x10e>
 8024fc0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8024fc4:	4631      	mov	r1, r6
 8024fc6:	4650      	mov	r0, sl
 8024fc8:	4798      	blx	r3
 8024fca:	2800      	cmp	r0, #0
 8024fcc:	d0df      	beq.n	8024f8e <_scanf_i+0x11e>
 8024fce:	6823      	ldr	r3, [r4, #0]
 8024fd0:	05d9      	lsls	r1, r3, #23
 8024fd2:	d50d      	bpl.n	8024ff0 <_scanf_i+0x180>
 8024fd4:	42bd      	cmp	r5, r7
 8024fd6:	d909      	bls.n	8024fec <_scanf_i+0x17c>
 8024fd8:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8024fdc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8024fe0:	4632      	mov	r2, r6
 8024fe2:	4650      	mov	r0, sl
 8024fe4:	4798      	blx	r3
 8024fe6:	f105 39ff 	add.w	r9, r5, #4294967295
 8024fea:	464d      	mov	r5, r9
 8024fec:	42bd      	cmp	r5, r7
 8024fee:	d028      	beq.n	8025042 <_scanf_i+0x1d2>
 8024ff0:	6822      	ldr	r2, [r4, #0]
 8024ff2:	f012 0210 	ands.w	r2, r2, #16
 8024ff6:	d113      	bne.n	8025020 <_scanf_i+0x1b0>
 8024ff8:	702a      	strb	r2, [r5, #0]
 8024ffa:	6863      	ldr	r3, [r4, #4]
 8024ffc:	9e01      	ldr	r6, [sp, #4]
 8024ffe:	4639      	mov	r1, r7
 8025000:	4650      	mov	r0, sl
 8025002:	47b0      	blx	r6
 8025004:	f8d8 3000 	ldr.w	r3, [r8]
 8025008:	6821      	ldr	r1, [r4, #0]
 802500a:	1d1a      	adds	r2, r3, #4
 802500c:	f8c8 2000 	str.w	r2, [r8]
 8025010:	f011 0f20 	tst.w	r1, #32
 8025014:	681b      	ldr	r3, [r3, #0]
 8025016:	d00f      	beq.n	8025038 <_scanf_i+0x1c8>
 8025018:	6018      	str	r0, [r3, #0]
 802501a:	68e3      	ldr	r3, [r4, #12]
 802501c:	3301      	adds	r3, #1
 802501e:	60e3      	str	r3, [r4, #12]
 8025020:	1bed      	subs	r5, r5, r7
 8025022:	44ab      	add	fp, r5
 8025024:	6925      	ldr	r5, [r4, #16]
 8025026:	445d      	add	r5, fp
 8025028:	6125      	str	r5, [r4, #16]
 802502a:	2000      	movs	r0, #0
 802502c:	b007      	add	sp, #28
 802502e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025032:	f04f 0b00 	mov.w	fp, #0
 8025036:	e7ca      	b.n	8024fce <_scanf_i+0x15e>
 8025038:	07ca      	lsls	r2, r1, #31
 802503a:	bf4c      	ite	mi
 802503c:	8018      	strhmi	r0, [r3, #0]
 802503e:	6018      	strpl	r0, [r3, #0]
 8025040:	e7eb      	b.n	802501a <_scanf_i+0x1aa>
 8025042:	2001      	movs	r0, #1
 8025044:	e7f2      	b.n	802502c <_scanf_i+0x1bc>
 8025046:	bf00      	nop
 8025048:	080252b0 	.word	0x080252b0
 802504c:	08024999 	.word	0x08024999
 8025050:	080251d5 	.word	0x080251d5
 8025054:	08029d06 	.word	0x08029d06

08025058 <__sccl>:
 8025058:	b570      	push	{r4, r5, r6, lr}
 802505a:	780b      	ldrb	r3, [r1, #0]
 802505c:	4604      	mov	r4, r0
 802505e:	2b5e      	cmp	r3, #94	; 0x5e
 8025060:	bf0b      	itete	eq
 8025062:	784b      	ldrbeq	r3, [r1, #1]
 8025064:	1c48      	addne	r0, r1, #1
 8025066:	1c88      	addeq	r0, r1, #2
 8025068:	2200      	movne	r2, #0
 802506a:	bf08      	it	eq
 802506c:	2201      	moveq	r2, #1
 802506e:	1e61      	subs	r1, r4, #1
 8025070:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8025074:	f801 2f01 	strb.w	r2, [r1, #1]!
 8025078:	42a9      	cmp	r1, r5
 802507a:	d1fb      	bne.n	8025074 <__sccl+0x1c>
 802507c:	b90b      	cbnz	r3, 8025082 <__sccl+0x2a>
 802507e:	3801      	subs	r0, #1
 8025080:	bd70      	pop	{r4, r5, r6, pc}
 8025082:	f082 0101 	eor.w	r1, r2, #1
 8025086:	54e1      	strb	r1, [r4, r3]
 8025088:	1c42      	adds	r2, r0, #1
 802508a:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 802508e:	2d2d      	cmp	r5, #45	; 0x2d
 8025090:	f102 36ff 	add.w	r6, r2, #4294967295
 8025094:	4610      	mov	r0, r2
 8025096:	d006      	beq.n	80250a6 <__sccl+0x4e>
 8025098:	2d5d      	cmp	r5, #93	; 0x5d
 802509a:	d0f1      	beq.n	8025080 <__sccl+0x28>
 802509c:	b90d      	cbnz	r5, 80250a2 <__sccl+0x4a>
 802509e:	4630      	mov	r0, r6
 80250a0:	e7ee      	b.n	8025080 <__sccl+0x28>
 80250a2:	462b      	mov	r3, r5
 80250a4:	e7ef      	b.n	8025086 <__sccl+0x2e>
 80250a6:	7816      	ldrb	r6, [r2, #0]
 80250a8:	2e5d      	cmp	r6, #93	; 0x5d
 80250aa:	d0fa      	beq.n	80250a2 <__sccl+0x4a>
 80250ac:	42b3      	cmp	r3, r6
 80250ae:	dcf8      	bgt.n	80250a2 <__sccl+0x4a>
 80250b0:	4618      	mov	r0, r3
 80250b2:	3001      	adds	r0, #1
 80250b4:	4286      	cmp	r6, r0
 80250b6:	5421      	strb	r1, [r4, r0]
 80250b8:	dcfb      	bgt.n	80250b2 <__sccl+0x5a>
 80250ba:	43d8      	mvns	r0, r3
 80250bc:	4430      	add	r0, r6
 80250be:	1c5d      	adds	r5, r3, #1
 80250c0:	42b3      	cmp	r3, r6
 80250c2:	bfa8      	it	ge
 80250c4:	2000      	movge	r0, #0
 80250c6:	182b      	adds	r3, r5, r0
 80250c8:	3202      	adds	r2, #2
 80250ca:	e7de      	b.n	802508a <__sccl+0x32>

080250cc <_strtol_l.isra.0>:
 80250cc:	2b01      	cmp	r3, #1
 80250ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80250d2:	d001      	beq.n	80250d8 <_strtol_l.isra.0+0xc>
 80250d4:	2b24      	cmp	r3, #36	; 0x24
 80250d6:	d906      	bls.n	80250e6 <_strtol_l.isra.0+0x1a>
 80250d8:	f7fd ff5c 	bl	8022f94 <__errno>
 80250dc:	2316      	movs	r3, #22
 80250de:	6003      	str	r3, [r0, #0]
 80250e0:	2000      	movs	r0, #0
 80250e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80250e6:	4f3a      	ldr	r7, [pc, #232]	; (80251d0 <_strtol_l.isra.0+0x104>)
 80250e8:	468e      	mov	lr, r1
 80250ea:	4676      	mov	r6, lr
 80250ec:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80250f0:	5de5      	ldrb	r5, [r4, r7]
 80250f2:	f015 0508 	ands.w	r5, r5, #8
 80250f6:	d1f8      	bne.n	80250ea <_strtol_l.isra.0+0x1e>
 80250f8:	2c2d      	cmp	r4, #45	; 0x2d
 80250fa:	d134      	bne.n	8025166 <_strtol_l.isra.0+0x9a>
 80250fc:	f89e 4000 	ldrb.w	r4, [lr]
 8025100:	f04f 0801 	mov.w	r8, #1
 8025104:	f106 0e02 	add.w	lr, r6, #2
 8025108:	2b00      	cmp	r3, #0
 802510a:	d05c      	beq.n	80251c6 <_strtol_l.isra.0+0xfa>
 802510c:	2b10      	cmp	r3, #16
 802510e:	d10c      	bne.n	802512a <_strtol_l.isra.0+0x5e>
 8025110:	2c30      	cmp	r4, #48	; 0x30
 8025112:	d10a      	bne.n	802512a <_strtol_l.isra.0+0x5e>
 8025114:	f89e 4000 	ldrb.w	r4, [lr]
 8025118:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 802511c:	2c58      	cmp	r4, #88	; 0x58
 802511e:	d14d      	bne.n	80251bc <_strtol_l.isra.0+0xf0>
 8025120:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8025124:	2310      	movs	r3, #16
 8025126:	f10e 0e02 	add.w	lr, lr, #2
 802512a:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 802512e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8025132:	2600      	movs	r6, #0
 8025134:	fbbc f9f3 	udiv	r9, ip, r3
 8025138:	4635      	mov	r5, r6
 802513a:	fb03 ca19 	mls	sl, r3, r9, ip
 802513e:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8025142:	2f09      	cmp	r7, #9
 8025144:	d818      	bhi.n	8025178 <_strtol_l.isra.0+0xac>
 8025146:	463c      	mov	r4, r7
 8025148:	42a3      	cmp	r3, r4
 802514a:	dd24      	ble.n	8025196 <_strtol_l.isra.0+0xca>
 802514c:	2e00      	cmp	r6, #0
 802514e:	db1f      	blt.n	8025190 <_strtol_l.isra.0+0xc4>
 8025150:	45a9      	cmp	r9, r5
 8025152:	d31d      	bcc.n	8025190 <_strtol_l.isra.0+0xc4>
 8025154:	d101      	bne.n	802515a <_strtol_l.isra.0+0x8e>
 8025156:	45a2      	cmp	sl, r4
 8025158:	db1a      	blt.n	8025190 <_strtol_l.isra.0+0xc4>
 802515a:	fb05 4503 	mla	r5, r5, r3, r4
 802515e:	2601      	movs	r6, #1
 8025160:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8025164:	e7eb      	b.n	802513e <_strtol_l.isra.0+0x72>
 8025166:	2c2b      	cmp	r4, #43	; 0x2b
 8025168:	bf08      	it	eq
 802516a:	f89e 4000 	ldrbeq.w	r4, [lr]
 802516e:	46a8      	mov	r8, r5
 8025170:	bf08      	it	eq
 8025172:	f106 0e02 	addeq.w	lr, r6, #2
 8025176:	e7c7      	b.n	8025108 <_strtol_l.isra.0+0x3c>
 8025178:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 802517c:	2f19      	cmp	r7, #25
 802517e:	d801      	bhi.n	8025184 <_strtol_l.isra.0+0xb8>
 8025180:	3c37      	subs	r4, #55	; 0x37
 8025182:	e7e1      	b.n	8025148 <_strtol_l.isra.0+0x7c>
 8025184:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 8025188:	2f19      	cmp	r7, #25
 802518a:	d804      	bhi.n	8025196 <_strtol_l.isra.0+0xca>
 802518c:	3c57      	subs	r4, #87	; 0x57
 802518e:	e7db      	b.n	8025148 <_strtol_l.isra.0+0x7c>
 8025190:	f04f 36ff 	mov.w	r6, #4294967295
 8025194:	e7e4      	b.n	8025160 <_strtol_l.isra.0+0x94>
 8025196:	2e00      	cmp	r6, #0
 8025198:	da05      	bge.n	80251a6 <_strtol_l.isra.0+0xda>
 802519a:	2322      	movs	r3, #34	; 0x22
 802519c:	6003      	str	r3, [r0, #0]
 802519e:	4665      	mov	r5, ip
 80251a0:	b942      	cbnz	r2, 80251b4 <_strtol_l.isra.0+0xe8>
 80251a2:	4628      	mov	r0, r5
 80251a4:	e79d      	b.n	80250e2 <_strtol_l.isra.0+0x16>
 80251a6:	f1b8 0f00 	cmp.w	r8, #0
 80251aa:	d000      	beq.n	80251ae <_strtol_l.isra.0+0xe2>
 80251ac:	426d      	negs	r5, r5
 80251ae:	2a00      	cmp	r2, #0
 80251b0:	d0f7      	beq.n	80251a2 <_strtol_l.isra.0+0xd6>
 80251b2:	b10e      	cbz	r6, 80251b8 <_strtol_l.isra.0+0xec>
 80251b4:	f10e 31ff 	add.w	r1, lr, #4294967295
 80251b8:	6011      	str	r1, [r2, #0]
 80251ba:	e7f2      	b.n	80251a2 <_strtol_l.isra.0+0xd6>
 80251bc:	2430      	movs	r4, #48	; 0x30
 80251be:	2b00      	cmp	r3, #0
 80251c0:	d1b3      	bne.n	802512a <_strtol_l.isra.0+0x5e>
 80251c2:	2308      	movs	r3, #8
 80251c4:	e7b1      	b.n	802512a <_strtol_l.isra.0+0x5e>
 80251c6:	2c30      	cmp	r4, #48	; 0x30
 80251c8:	d0a4      	beq.n	8025114 <_strtol_l.isra.0+0x48>
 80251ca:	230a      	movs	r3, #10
 80251cc:	e7ad      	b.n	802512a <_strtol_l.isra.0+0x5e>
 80251ce:	bf00      	nop
 80251d0:	08029bed 	.word	0x08029bed

080251d4 <_strtol_r>:
 80251d4:	f7ff bf7a 	b.w	80250cc <_strtol_l.isra.0>

080251d8 <__submore>:
 80251d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80251dc:	460c      	mov	r4, r1
 80251de:	6b49      	ldr	r1, [r1, #52]	; 0x34
 80251e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80251e4:	4299      	cmp	r1, r3
 80251e6:	d11d      	bne.n	8025224 <__submore+0x4c>
 80251e8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80251ec:	f7fe f98a 	bl	8023504 <_malloc_r>
 80251f0:	b918      	cbnz	r0, 80251fa <__submore+0x22>
 80251f2:	f04f 30ff 	mov.w	r0, #4294967295
 80251f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80251fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80251fe:	63a3      	str	r3, [r4, #56]	; 0x38
 8025200:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8025204:	6360      	str	r0, [r4, #52]	; 0x34
 8025206:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 802520a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 802520e:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8025212:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8025216:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 802521a:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 802521e:	6020      	str	r0, [r4, #0]
 8025220:	2000      	movs	r0, #0
 8025222:	e7e8      	b.n	80251f6 <__submore+0x1e>
 8025224:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8025226:	0077      	lsls	r7, r6, #1
 8025228:	463a      	mov	r2, r7
 802522a:	f7ff fabb 	bl	80247a4 <_realloc_r>
 802522e:	4605      	mov	r5, r0
 8025230:	2800      	cmp	r0, #0
 8025232:	d0de      	beq.n	80251f2 <__submore+0x1a>
 8025234:	eb00 0806 	add.w	r8, r0, r6
 8025238:	4601      	mov	r1, r0
 802523a:	4632      	mov	r2, r6
 802523c:	4640      	mov	r0, r8
 802523e:	f7fe f8fb 	bl	8023438 <memcpy>
 8025242:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8025246:	f8c4 8000 	str.w	r8, [r4]
 802524a:	e7e9      	b.n	8025220 <__submore+0x48>

0802524c <_init>:
 802524c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802524e:	bf00      	nop
 8025250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025252:	bc08      	pop	{r3}
 8025254:	469e      	mov	lr, r3
 8025256:	4770      	bx	lr

08025258 <_fini>:
 8025258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802525a:	bf00      	nop
 802525c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802525e:	bc08      	pop	{r3}
 8025260:	469e      	mov	lr, r3
 8025262:	4770      	bx	lr
