
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026830  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000050e4  080269f0  080269f0  000369f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 000003fc  0802bad4  0802bad4  0003bad4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802bed0  0802bed0  001760a8  2**0
                  CONTENTS
  5 .ARM          00000008  0802bed0  0802bed0  0003bed0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802bed8  0802bed8  001760a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802bed8  0802bed8  0003bed8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802bef0  0802bef0  0003bef0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0802bef8  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00027df0  20000140  0802c038  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  20027f30  0802c038  00047f30  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  001760a8  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00115700  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000104bc  90115700  90115700  00165700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 000004ec  90125bbc  90125bbc  00175bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0008afbf  00000000  00000000  001760d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   001ed7f3  00000000  00000000  00201097  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00022a5e  00000000  00000000  003ee88a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00004278  00000000  00000000  004112e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013ee59  00000000  00000000  00415560  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000b548  00000000  00000000  005543c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0009c528  00000000  00000000  0055f908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003f969  00000000  00000000  005fbe30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  0063b799  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000bedc  00000000  00000000  0063b86c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	080269d8 	.word	0x080269d8

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	080269d8 	.word	0x080269d8

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f00a ff9b 	bl	800b4fc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f025 fa4f 	bl	8025a68 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff71 	bl	80014b0 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	0802bef8 	.word	0x0802bef8
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	20027f30 	.word	0x20027f30

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bde7 	b.w	80011bc <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be59 	b.w	80012a4 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f00a bae9 	b.w	800abcc <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f00a bb20 	b.w	800ac40 <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f025 f88c 	bl	8025764 <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f025 f84b 	bl	8025764 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f025 f843 	bl	8025764 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f00a fe51 	bl	800b394 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2126      	movs	r1, #38	; 0x26
 800070a:	f025 f859 	bl	80257c0 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	08026a80 	.word	0x08026a80
 8000718:	08026a93 	.word	0x08026a93
 800071c:	08026abd 	.word	0x08026abd

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f00a fe6f 	bl	800b410 <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f00b bee9 	b.w	800c540 <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f00b becd 	b.w	800c540 <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f00b bebb 	b.w	800c54a <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f00b fe9b 	bl	800c534 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd90 	bl	80013a8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa2d 	bl	8000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f00b fc1d 	bl	800c112 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa20 	bl	8000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	20027cac 	.word	0x20027cac

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f012 fa62 	bl	8012db8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd50 	b.w	80013a6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd67 	b.w	80013d8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd67 	b.w	80013dc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd39 	b.w	8001384 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd3f 	b.w	8001394 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd63 	b.w	80013e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800091c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800091e:	4b09      	ldr	r3, [pc, #36]	; (8000944 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000920:	881b      	ldrh	r3, [r3, #0]
 8000922:	428b      	cmp	r3, r1
 8000924:	d803      	bhi.n	800092e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000926:	4b08      	ldr	r3, [pc, #32]	; (8000948 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000928:	881b      	ldrh	r3, [r3, #0]
 800092a:	4293      	cmp	r3, r2
 800092c:	d905      	bls.n	800093a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800092e:	4b07      	ldr	r3, [pc, #28]	; (800094c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000930:	4a07      	ldr	r2, [pc, #28]	; (8000950 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000932:	4808      	ldr	r0, [pc, #32]	; (8000954 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000934:	219e      	movs	r1, #158	; 0x9e
 8000936:	f024 ff43 	bl	80257c0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800093a:	4b07      	ldr	r3, [pc, #28]	; (8000958 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800093c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800093e:	4b07      	ldr	r3, [pc, #28]	; (800095c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000940:	801a      	strh	r2, [r3, #0]
    }
 8000942:	bd08      	pop	{r3, pc}
 8000944:	200279a4 	.word	0x200279a4
 8000948:	200279a6 	.word	0x200279a6
 800094c:	08026b38 	.word	0x08026b38
 8000950:	08026b9b 	.word	0x08026b9b
 8000954:	08026bde 	.word	0x08026bde
 8000958:	200279aa 	.word	0x200279aa
 800095c:	200279ac 	.word	0x200279ac

08000960 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000960:	4b02      	ldr	r3, [pc, #8]	; (800096c <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000962:	2200      	movs	r2, #0
 8000964:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000966:	f011 bc01 	b.w	801216c <_ZN8touchgfx3HAL10beginFrameEv>
 800096a:	bf00      	nop
 800096c:	20000014 	.word	0x20000014

08000970 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000970:	b510      	push	{r4, lr}
 8000972:	4604      	mov	r4, r0
    HAL::endFrame();
 8000974:	f011 fc06 	bl	8012184 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000978:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 800097c:	b113      	cbz	r3, 8000984 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800097e:	4b02      	ldr	r3, [pc, #8]	; (8000988 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000980:	2201      	movs	r2, #1
 8000982:	701a      	strb	r2, [r3, #0]
    }
}
 8000984:	bd10      	pop	{r4, pc}
 8000986:	bf00      	nop
 8000988:	20000014 	.word	0x20000014

0800098c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800098c:	f011 bbb1 	b.w	80120f2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000990 <_ZN11TouchGFXHALD0Ev>:
 8000990:	b510      	push	{r4, lr}
 8000992:	217c      	movs	r1, #124	; 0x7c
 8000994:	4604      	mov	r4, r0
 8000996:	f024 fee5 	bl	8025764 <_ZdlPvj>
 800099a:	4620      	mov	r0, r4
 800099c:	bd10      	pop	{r4, pc}

0800099e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800099e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009a2:	b11b      	cbz	r3, 80009ac <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009a4:	6840      	ldr	r0, [r0, #4]
 80009a6:	6803      	ldr	r3, [r0, #0]
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	4718      	bx	r3
    }
 80009ac:	4618      	mov	r0, r3
 80009ae:	4770      	bx	lr

080009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009b0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009b2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009b6:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80009ba:	4b0c      	ldr	r3, [pc, #48]	; (80009ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 80009bc:	428c      	cmp	r4, r1
 80009be:	781a      	ldrb	r2, [r3, #0]
 80009c0:	d009      	beq.n	80009d6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009c2:	b93a      	cbnz	r2, 80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c4:	4a0a      	ldr	r2, [pc, #40]	; (80009f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009c6:	490b      	ldr	r1, [pc, #44]	; (80009f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ca:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009cc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ce:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009d0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009d2:	701a      	strb	r2, [r3, #0]
    }
 80009d4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009d6:	2a00      	cmp	r2, #0
 80009d8:	d0fc      	beq.n	80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009da:	4a05      	ldr	r2, [pc, #20]	; (80009f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009dc:	4905      	ldr	r1, [pc, #20]	; (80009f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009de:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009e0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009e2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009e6:	2200      	movs	r2, #0
 80009e8:	e7f3      	b.n	80009d2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009ea:	bf00      	nop
 80009ec:	200279a8 	.word	0x200279a8
 80009f0:	200279a4 	.word	0x200279a4
 80009f4:	200279a6 	.word	0x200279a6

080009f8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009f8:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009fa:	4c0c      	ldr	r4, [pc, #48]	; (8000a2c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009fc:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009fe:	b931      	cbnz	r1, 8000a0e <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 8000a00:	4b0b      	ldr	r3, [pc, #44]	; (8000a30 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a02:	4a0c      	ldr	r2, [pc, #48]	; (8000a34 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a04:	480c      	ldr	r0, [pc, #48]	; (8000a38 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a06:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8000a0a:	f024 fed9 	bl	80257c0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a0e:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a12:	3a00      	subs	r2, #0
 8000a14:	4909      	ldr	r1, [pc, #36]	; (8000a3c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000a16:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a18:	bf18      	it	ne
 8000a1a:	2201      	movne	r2, #1
 8000a1c:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000a1e:	3b00      	subs	r3, #0
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 8000a22:	bf18      	it	ne
 8000a24:	2301      	movne	r3, #1
 8000a26:	7013      	strb	r3, [r2, #0]
}
 8000a28:	bd10      	pop	{r4, pc}
 8000a2a:	bf00      	nop
 8000a2c:	20000174 	.word	0x20000174
 8000a30:	08026c23 	.word	0x08026c23
 8000a34:	08026c5b 	.word	0x08026c5b
 8000a38:	08026bde 	.word	0x08026bde
 8000a3c:	200279ae 	.word	0x200279ae
 8000a40:	200279af 	.word	0x200279af

08000a44 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a44:	2801      	cmp	r0, #1
    {
 8000a46:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a48:	d80a      	bhi.n	8000a60 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a4a:	784b      	ldrb	r3, [r1, #1]
 8000a4c:	9300      	str	r3, [sp, #0]
 8000a4e:	780b      	ldrb	r3, [r1, #0]
 8000a50:	4808      	ldr	r0, [pc, #32]	; (8000a74 <DSI_IO_WriteCmd+0x30>)
 8000a52:	2215      	movs	r2, #21
 8000a54:	2100      	movs	r1, #0
 8000a56:	f00b fb5c 	bl	800c112 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a5a:	b003      	add	sp, #12
 8000a5c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a60:	9101      	str	r1, [sp, #4]
 8000a62:	5c0b      	ldrb	r3, [r1, r0]
 8000a64:	9300      	str	r3, [sp, #0]
 8000a66:	2239      	movs	r2, #57	; 0x39
 8000a68:	4603      	mov	r3, r0
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	4801      	ldr	r0, [pc, #4]	; (8000a74 <DSI_IO_WriteCmd+0x30>)
 8000a6e:	f00b fb61 	bl	800c134 <HAL_DSI_LongWrite>
    }
 8000a72:	e7f2      	b.n	8000a5a <DSI_IO_WriteCmd+0x16>
 8000a74:	20027cac 	.word	0x20027cac

08000a78 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a78:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a7a:	4a0b      	ldr	r2, [pc, #44]	; (8000aa8 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a7c:	4c0b      	ldr	r4, [pc, #44]	; (8000aac <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a7e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a80:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a82:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a84:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a86:	9201      	str	r2, [sp, #4]
 8000a88:	2244      	movs	r2, #68	; 0x44
 8000a8a:	9200      	str	r2, [sp, #0]
 8000a8c:	2100      	movs	r1, #0
 8000a8e:	2239      	movs	r2, #57	; 0x39
 8000a90:	4620      	mov	r0, r4
 8000a92:	f00b fb4f 	bl	800c134 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a96:	2100      	movs	r1, #0
 8000a98:	9100      	str	r1, [sp, #0]
 8000a9a:	2335      	movs	r3, #53	; 0x35
 8000a9c:	462a      	mov	r2, r5
 8000a9e:	4620      	mov	r0, r4
 8000aa0:	f00b fb37 	bl	800c112 <HAL_DSI_ShortWrite>
    }
 8000aa4:	b003      	add	sp, #12
 8000aa6:	bd30      	pop	{r4, r5, pc}
 8000aa8:	2000018c 	.word	0x2000018c
 8000aac:	20027cac 	.word	0x20027cac

08000ab0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000ab0:	b507      	push	{r0, r1, r2, lr}
 8000ab2:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000ab4:	f7ff ffe0 	bl	8000a78 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ab8:	9801      	ldr	r0, [sp, #4]
}
 8000aba:	b003      	add	sp, #12
 8000abc:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ac0:	f000 bc70 	b.w	80013a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000ac4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000ac4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000ac6:	4b07      	ldr	r3, [pc, #28]	; (8000ae4 <LCD_SetUpdateRegion+0x20>)
 8000ac8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000acc:	232a      	movs	r3, #42	; 0x2a
 8000ace:	9001      	str	r0, [sp, #4]
 8000ad0:	9300      	str	r3, [sp, #0]
 8000ad2:	2239      	movs	r2, #57	; 0x39
 8000ad4:	2304      	movs	r3, #4
 8000ad6:	2100      	movs	r1, #0
 8000ad8:	4803      	ldr	r0, [pc, #12]	; (8000ae8 <LCD_SetUpdateRegion+0x24>)
 8000ada:	f00b fb2b 	bl	800c134 <HAL_DSI_LongWrite>
    }
 8000ade:	b003      	add	sp, #12
 8000ae0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ae4:	20000004 	.word	0x20000004
 8000ae8:	20027cac 	.word	0x20027cac

08000aec <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000aec:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000aee:	4d15      	ldr	r5, [pc, #84]	; (8000b44 <HAL_DSI_TearingEffectCallback+0x58>)
 8000af0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000af2:	2000      	movs	r0, #0
 8000af4:	f7ff fe2e 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000af8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000afa:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000afe:	3301      	adds	r3, #1
 8000b00:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b04:	f000 f8fe 	bl	8000d04 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b08:	4b0f      	ldr	r3, [pc, #60]	; (8000b48 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b0a:	6828      	ldr	r0, [r5, #0]
 8000b0c:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b0e:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b10:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b14:	b123      	cbz	r3, 8000b20 <HAL_DSI_TearingEffectCallback+0x34>
 8000b16:	4d0d      	ldr	r5, [pc, #52]	; (8000b4c <HAL_DSI_TearingEffectCallback+0x60>)
 8000b18:	782b      	ldrb	r3, [r5, #0]
 8000b1a:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b1e:	b123      	cbz	r3, 8000b2a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b24:	2000      	movs	r0, #0
 8000b26:	f7ff be31 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b2a:	f012 f945 	bl	8012db8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b2e:	4b08      	ldr	r3, [pc, #32]	; (8000b50 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b30:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b32:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b34:	f7ff ffc6 	bl	8000ac4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b38:	4620      	mov	r0, r4
 8000b3a:	f00b fada 	bl	800c0f2 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b3e:	2301      	movs	r3, #1
 8000b40:	702b      	strb	r3, [r5, #0]
    }
 8000b42:	bd70      	pop	{r4, r5, r6, pc}
 8000b44:	200279b0 	.word	0x200279b0
 8000b48:	20000014 	.word	0x20000014
 8000b4c:	2000018e 	.word	0x2000018e
 8000b50:	20000178 	.word	0x20000178

08000b54 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b54:	4b30      	ldr	r3, [pc, #192]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b56:	4a31      	ldr	r2, [pc, #196]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4605      	mov	r5, r0
        updateRegion++;
 8000b5c:	6818      	ldr	r0, [r3, #0]
 8000b5e:	4c30      	ldr	r4, [pc, #192]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b60:	3001      	adds	r0, #1
 8000b62:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b64:	4b2f      	ldr	r3, [pc, #188]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b66:	2803      	cmp	r0, #3
 8000b68:	681e      	ldr	r6, [r3, #0]
 8000b6a:	dc2a      	bgt.n	8000bc2 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b6c:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b70:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b74:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b78:	f021 0108 	bic.w	r1, r1, #8
 8000b7c:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b80:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b82:	bf0c      	ite	eq
 8000b84:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b86:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b88:	3302      	adds	r3, #2
 8000b8a:	4927      	ldr	r1, [pc, #156]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b8c:	041b      	lsls	r3, r3, #16
 8000b8e:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b92:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b94:	4b25      	ldr	r3, [pc, #148]	; (8000c2c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b96:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b98:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b9c:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b9e:	4b24      	ldr	r3, [pc, #144]	; (8000c30 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000ba0:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000ba2:	2301      	movs	r3, #1
 8000ba4:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000ba6:	f7ff ff8d 	bl	8000ac4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000baa:	4a1d      	ldr	r2, [pc, #116]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000bac:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000bb0:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000bb4:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bb6:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000bbe:	f00b ba98 	b.w	800c0f2 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bc6:	491b      	ldr	r1, [pc, #108]	; (8000c34 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc8:	f023 0308 	bic.w	r3, r3, #8
 8000bcc:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bd0:	4b15      	ldr	r3, [pc, #84]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bd2:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bd4:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bd6:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bda:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bdc:	4916      	ldr	r1, [pc, #88]	; (8000c38 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bde:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000be0:	4913      	ldr	r1, [pc, #76]	; (8000c30 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000be4:	2201      	movs	r2, #1
 8000be6:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000be8:	2000      	movs	r0, #0
 8000bea:	f7ff ff6b 	bl	8000ac4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bee:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bf2:	f043 0308 	orr.w	r3, r3, #8
 8000bf6:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	f7ff fdc6 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c00:	4b0e      	ldr	r3, [pc, #56]	; (8000c3c <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000c02:	2200      	movs	r2, #0
 8000c04:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c06:	4b0e      	ldr	r3, [pc, #56]	; (8000c40 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c08:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c0a:	b120      	cbz	r0, 8000c16 <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000c0c:	6803      	ldr	r3, [r0, #0]
    }
 8000c0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c12:	6a1b      	ldr	r3, [r3, #32]
 8000c14:	4718      	bx	r3
 8000c16:	bd70      	pop	{r4, r5, r6, pc}
 8000c18:	20000178 	.word	0x20000178
 8000c1c:	40016884 	.word	0x40016884
 8000c20:	40016c00 	.word	0x40016c00
 8000c24:	20000174 	.word	0x20000174
 8000c28:	40016800 	.word	0x40016800
 8000c2c:	00ca01e3 	.word	0x00ca01e3
 8000c30:	06800193 	.word	0x06800193
 8000c34:	00ca01e2 	.word	0x00ca01e2
 8000c38:	00ca0003 	.word	0x00ca0003
 8000c3c:	2000018e 	.word	0x2000018e
 8000c40:	200279b0 	.word	0x200279b0

08000c44 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c44:	b508      	push	{r3, lr}
 8000c46:	4b04      	ldr	r3, [pc, #16]	; (8000c58 <IdleTaskHook+0x14>)
 8000c48:	4601      	mov	r1, r0
 8000c4a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c4c:	b101      	cbz	r1, 8000c50 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c4e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c50:	f012 f8cc 	bl	8012dec <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c54:	2001      	movs	r0, #1
 8000c56:	bd08      	pop	{r3, pc}
 8000c58:	200279b0 	.word	0x200279b0

08000c5c <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c5c:	4b05      	ldr	r3, [pc, #20]	; (8000c74 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c5e:	4806      	ldr	r0, [pc, #24]	; (8000c78 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c60:	2200      	movs	r2, #0
 8000c62:	605a      	str	r2, [r3, #4]
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	4a05      	ldr	r2, [pc, #20]	; (8000c7c <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c68:	601a      	str	r2, [r3, #0]
 8000c6a:	4b05      	ldr	r3, [pc, #20]	; (8000c80 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c6c:	6003      	str	r3, [r0, #0]
        init();
 8000c6e:	f7ff bd01 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c72:	bf00      	nop
 8000c74:	20000180 	.word	0x20000180
 8000c78:	2000017c 	.word	0x2000017c
 8000c7c:	08026a44 	.word	0x08026a44
 8000c80:	08026a6c 	.word	0x08026a6c

08000c84 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c84:	2101      	movs	r1, #1
{
 8000c86:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c88:	2200      	movs	r2, #0
 8000c8a:	4608      	mov	r0, r1
 8000c8c:	f00d fcc9 	bl	800e622 <osSemaphoreNew>
 8000c90:	4b0a      	ldr	r3, [pc, #40]	; (8000cbc <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c92:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c94:	b928      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c96:	4b0a      	ldr	r3, [pc, #40]	; (8000cc0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c98:	4a0a      	ldr	r2, [pc, #40]	; (8000cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9a:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c9c:	480a      	ldr	r0, [pc, #40]	; (8000cc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c9e:	f024 fd8f 	bl	80257c0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	2104      	movs	r1, #4
 8000ca6:	2001      	movs	r0, #1
 8000ca8:	f00d fd5a 	bl	800e760 <osMessageQueueNew>
 8000cac:	4b07      	ldr	r3, [pc, #28]	; (8000ccc <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000cae:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cb0:	b918      	cbnz	r0, 8000cba <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000cb2:	4b07      	ldr	r3, [pc, #28]	; (8000cd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000cb4:	4a03      	ldr	r2, [pc, #12]	; (8000cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cb6:	212d      	movs	r1, #45	; 0x2d
 8000cb8:	e7f0      	b.n	8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000cba:	bd08      	pop	{r3, pc}
 8000cbc:	20000194 	.word	0x20000194
 8000cc0:	08026d7c 	.word	0x08026d7c
 8000cc4:	08026dc5 	.word	0x08026dc5
 8000cc8:	08026df4 	.word	0x08026df4
 8000ccc:	20000190 	.word	0x20000190
 8000cd0:	08026e54 	.word	0x08026e54

08000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cd4:	4b02      	ldr	r3, [pc, #8]	; (8000ce0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cd6:	f04f 31ff 	mov.w	r1, #4294967295
 8000cda:	6818      	ldr	r0, [r3, #0]
 8000cdc:	f00d bcec 	b.w	800e6b8 <osSemaphoreAcquire>
 8000ce0:	20000194 	.word	0x20000194

08000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ce4:	4b01      	ldr	r3, [pc, #4]	; (8000cec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000ce6:	6818      	ldr	r0, [r3, #0]
 8000ce8:	f00d bd12 	b.w	800e710 <osSemaphoreRelease>
 8000cec:	20000194 	.word	0x20000194

08000cf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cf0:	4b02      	ldr	r3, [pc, #8]	; (8000cfc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cf2:	2100      	movs	r1, #0
 8000cf4:	6818      	ldr	r0, [r3, #0]
 8000cf6:	f00d bcdf 	b.w	800e6b8 <osSemaphoreAcquire>
 8000cfa:	bf00      	nop
 8000cfc:	20000194 	.word	0x20000194

08000d00 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d00:	f7ff bff0 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d04 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d04:	4803      	ldr	r0, [pc, #12]	; (8000d14 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d06:	4904      	ldr	r1, [pc, #16]	; (8000d18 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d08:	6800      	ldr	r0, [r0, #0]
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	461a      	mov	r2, r3
 8000d0e:	f00d bd63 	b.w	800e7d8 <osMessageQueuePut>
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190
 8000d18:	20000018 	.word	0x20000018

08000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d1c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d1e:	4c08      	ldr	r4, [pc, #32]	; (8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d20:	2300      	movs	r3, #0
 8000d22:	461a      	mov	r2, r3
 8000d24:	a901      	add	r1, sp, #4
 8000d26:	6820      	ldr	r0, [r4, #0]
 8000d28:	f00d fd86 	bl	800e838 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d2c:	6820      	ldr	r0, [r4, #0]
 8000d2e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d32:	2200      	movs	r2, #0
 8000d34:	a901      	add	r1, sp, #4
 8000d36:	f00d fd7f 	bl	800e838 <osMessageQueueGet>
}
 8000d3a:	b002      	add	sp, #8
 8000d3c:	bd10      	pop	{r4, pc}
 8000d3e:	bf00      	nop
 8000d40:	20000190 	.word	0x20000190

08000d44 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d44:	6803      	ldr	r3, [r0, #0]
 8000d46:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d48:	4718      	bx	r3

08000d4a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d4a:	2001      	movs	r0, #1
 8000d4c:	4770      	bx	lr

08000d4e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d4e:	6803      	ldr	r3, [r0, #0]
 8000d50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d52:	4718      	bx	r3

08000d54 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000d54:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d56:	2300      	movs	r3, #0
 8000d58:	9301      	str	r3, [sp, #4]
 8000d5a:	4b0d      	ldr	r3, [pc, #52]	; (8000d90 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000d5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d5e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d62:	631a      	str	r2, [r3, #48]	; 0x30
 8000d64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d66:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d6a:	9201      	str	r2, [sp, #4]
 8000d6c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d6e:	691a      	ldr	r2, [r3, #16]
 8000d70:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d74:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d76:	691a      	ldr	r2, [r3, #16]
 8000d78:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d7c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d7e:	4b05      	ldr	r3, [pc, #20]	; (8000d94 <_ZN8STM32DMA10initializeEv+0x40>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	; (8000d98 <_ZN8STM32DMA10initializeEv+0x44>)
 8000d82:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d84:	4b05      	ldr	r3, [pc, #20]	; (8000d9c <_ZN8STM32DMA10initializeEv+0x48>)
 8000d86:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d8a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d8c:	b002      	add	sp, #8
 8000d8e:	4770      	bx	lr
 8000d90:	40023800 	.word	0x40023800
 8000d94:	20027d74 	.word	0x20027d74
 8000d98:	08000da9 	.word	0x08000da9
 8000d9c:	e000e100 	.word	0xe000e100

08000da0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000da0:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000da4:	4770      	bx	lr
	...

08000da8 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000da8:	4b02      	ldr	r3, [pc, #8]	; (8000db4 <DMA2D_XferCpltCallback+0xc>)
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000dae:	6803      	ldr	r3, [r0, #0]
 8000db0:	695b      	ldr	r3, [r3, #20]
 8000db2:	4718      	bx	r3
 8000db4:	200279b0 	.word	0x200279b0

08000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000db8:	b508      	push	{r3, lr}
 8000dba:	280b      	cmp	r0, #11
 8000dbc:	d80b      	bhi.n	8000dd6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000dbe:	e8df f000 	tbb	[pc, r0]
 8000dc2:	0612      	.short	0x0612
 8000dc4:	0a0a0a10 	.word	0x0a0a0a10
 8000dc8:	0808080a 	.word	0x0808080a
 8000dcc:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dce:	2001      	movs	r0, #1
}
 8000dd0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000dd2:	2005      	movs	r0, #5
        break;
 8000dd4:	e7fc      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dd6:	4b05      	ldr	r3, [pc, #20]	; (8000dec <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dd8:	4a05      	ldr	r2, [pc, #20]	; (8000df0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dda:	4806      	ldr	r0, [pc, #24]	; (8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000ddc:	2167      	movs	r1, #103	; 0x67
 8000dde:	f024 fcef 	bl	80257c0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000de2:	2000      	movs	r0, #0
 8000de4:	e7f4      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000de6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000de8:	e7f2      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dea:	bf00      	nop
 8000dec:	08026e96 	.word	0x08026e96
 8000df0:	08026eb1 	.word	0x08026eb1
 8000df4:	08026efb 	.word	0x08026efb

08000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000df8:	b508      	push	{r3, lr}
 8000dfa:	280a      	cmp	r0, #10
 8000dfc:	d809      	bhi.n	8000e12 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dfe:	e8df f000 	tbb	[pc, r0]
 8000e02:	0610      	.short	0x0610
 8000e04:	0808080e 	.word	0x0808080e
 8000e08:	06060608 	.word	0x06060608
 8000e0c:	06          	.byte	0x06
 8000e0d:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e0e:	2001      	movs	r0, #1
}
 8000e10:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000e12:	4b05      	ldr	r3, [pc, #20]	; (8000e28 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000e14:	4a05      	ldr	r2, [pc, #20]	; (8000e2c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000e16:	4806      	ldr	r0, [pc, #24]	; (8000e30 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000e18:	2188      	movs	r1, #136	; 0x88
 8000e1a:	f024 fcd1 	bl	80257c0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e1e:	2000      	movs	r0, #0
 8000e20:	e7f6      	b.n	8000e10 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000e22:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e24:	e7f4      	b.n	8000e10 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e26:	bf00      	nop
 8000e28:	08026e96 	.word	0x08026e96
 8000e2c:	08026f59 	.word	0x08026f59
 8000e30:	08026efb 	.word	0x08026efb

08000e34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e38:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e3c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e3e:	4640      	mov	r0, r8
 8000e40:	f7ff ffba 	bl	8000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e44:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e46:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e48:	4638      	mov	r0, r7
 8000e4a:	f7ff ffb5 	bl	8000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e4e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e50:	4638      	mov	r0, r7
 8000e52:	f7ff ffd1 	bl	8000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e56:	8aa1      	ldrh	r1, [r4, #20]
 8000e58:	8b62      	ldrh	r2, [r4, #26]
 8000e5a:	4b4b      	ldr	r3, [pc, #300]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000e5c:	1a52      	subs	r2, r2, r1
 8000e5e:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e60:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e62:	8b22      	ldrh	r2, [r4, #24]
 8000e64:	1a52      	subs	r2, r2, r1
 8000e66:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e68:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e6a:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e6c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e70:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e72:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e74:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e76:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e78:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e7a:	f8d4 c000 	ldr.w	ip, [r4]
 8000e7e:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e82:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e86:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e8a:	469e      	mov	lr, r3
 8000e8c:	d030      	beq.n	8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000e8e:	d814      	bhi.n	8000eba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000e90:	f1bc 0f20 	cmp.w	ip, #32
 8000e94:	ea45 0002 	orr.w	r0, r5, r2
 8000e98:	d068      	beq.n	8000f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000e9a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e9e:	d065      	beq.n	8000f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ea0:	f1bc 0f04 	cmp.w	ip, #4
 8000ea4:	d020      	beq.n	8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea6:	4b38      	ldr	r3, [pc, #224]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ea8:	432a      	orrs	r2, r5
 8000eaa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000eae:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb0:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000eb2:	d148      	bne.n	8000f46 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000eb4:	f240 2201 	movw	r2, #513	; 0x201
 8000eb8:	e014      	b.n	8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000eba:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000ebe:	d007      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000ec0:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000ec4:	d1ef      	bne.n	8000ea6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eca:	f042 0209 	orr.w	r2, r2, #9
 8000ece:	e003      	b.n	8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ed4:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000eda:	68e2      	ldr	r2, [r4, #12]
 8000edc:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ede:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ee0:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ee2:	4a2a      	ldr	r2, [pc, #168]	; (8000f8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ee4:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ee6:	e04c      	b.n	8000f82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee8:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000eec:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000eee:	e7f6      	b.n	8000ede <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ef0:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef2:	432a      	orrs	r2, r5
 8000ef4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ef8:	1d04      	adds	r4, r0, #4
 8000efa:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000efc:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000efe:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f00:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f02:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f04:	b142      	cbz	r2, 8000f18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000f06:	2a01      	cmp	r2, #1
 8000f08:	d01f      	beq.n	8000f4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000f0a:	4b21      	ldr	r3, [pc, #132]	; (8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000f0c:	4a21      	ldr	r2, [pc, #132]	; (8000f94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000f0e:	4822      	ldr	r0, [pc, #136]	; (8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000f10:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000f14:	f024 fc54 	bl	80257c0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f18:	8842      	ldrh	r2, [r0, #2]
 8000f1a:	69d9      	ldr	r1, [r3, #28]
 8000f1c:	1e50      	subs	r0, r2, #1
 8000f1e:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f22:	f022 0210 	bic.w	r2, r2, #16
 8000f26:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f2a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f2c:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f2e:	4b16      	ldr	r3, [pc, #88]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000f30:	69da      	ldr	r2, [r3, #28]
 8000f32:	f042 0220 	orr.w	r2, r2, #32
 8000f36:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f38:	69da      	ldr	r2, [r3, #28]
 8000f3a:	0692      	lsls	r2, r2, #26
 8000f3c:	d4fc      	bmi.n	8000f38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f3e:	2210      	movs	r2, #16
 8000f40:	609a      	str	r2, [r3, #8]
            if(blend)
 8000f42:	2c00      	cmp	r4, #0
 8000f44:	d1cd      	bne.n	8000ee2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f46:	4a15      	ldr	r2, [pc, #84]	; (8000f9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f48:	e7cc      	b.n	8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f4a:	8842      	ldrh	r2, [r0, #2]
 8000f4c:	69d9      	ldr	r1, [r3, #28]
 8000f4e:	1e50      	subs	r0, r2, #1
 8000f50:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f54:	f022 0210 	bic.w	r2, r2, #16
 8000f58:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f5c:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f60:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f64:	bf18      	it	ne
 8000f66:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f68:	61da      	str	r2, [r3, #28]
                break;
 8000f6a:	e7e0      	b.n	8000f2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f6c:	4b07      	ldr	r3, [pc, #28]	; (8000f8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f6e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f72:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f7a:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f7e:	f8ce 3000 	str.w	r3, [lr]
}
 8000f82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f86:	bf00      	nop
 8000f88:	4002b000 	.word	0x4002b000
 8000f8c:	00020201 	.word	0x00020201
 8000f90:	08026fa4 	.word	0x08026fa4
 8000f94:	08026fbe 	.word	0x08026fbe
 8000f98:	08026efb 	.word	0x08026efb
 8000f9c:	00010201 	.word	0x00010201

08000fa0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000fa0:	b538      	push	{r3, r4, r5, lr}
 8000fa2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000fa4:	7f88      	ldrb	r0, [r1, #30]
 8000fa6:	f7ff ff27 	bl	8000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000faa:	8aa5      	ldrh	r5, [r4, #20]
 8000fac:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	4b16      	ldr	r3, [pc, #88]	; (8001008 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb0:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fb2:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb4:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000fb8:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fba:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fbc:	6921      	ldr	r1, [r4, #16]
 8000fbe:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fc2:	6825      	ldr	r5, [r4, #0]
 8000fc4:	2d08      	cmp	r5, #8
 8000fc6:	d10e      	bne.n	8000fe6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc8:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fca:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fcc:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fce:	7f20      	ldrb	r0, [r4, #28]
 8000fd0:	4a0e      	ldr	r2, [pc, #56]	; (800100c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000fd2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000fd6:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000fd8:	68e2      	ldr	r2, [r4, #12]
 8000fda:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fdc:	4a0c      	ldr	r2, [pc, #48]	; (8001010 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fde:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fe0:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000fe2:	601a      	str	r2, [r3, #0]
    }
}
 8000fe4:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fe8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000fea:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000fec:	68e1      	ldr	r1, [r4, #12]
 8000fee:	0a0a      	lsrs	r2, r1, #8
 8000ff0:	0948      	lsrs	r0, r1, #5
 8000ff2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ff6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000ffa:	4302      	orrs	r2, r0
 8000ffc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001000:	430a      	orrs	r2, r1
 8001002:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001004:	4a03      	ldr	r2, [pc, #12]	; (8001014 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001006:	e7ec      	b.n	8000fe2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001008:	4002b000 	.word	0x4002b000
 800100c:	00010009 	.word	0x00010009
 8001010:	00020201 	.word	0x00020201
 8001014:	00030201 	.word	0x00030201

08001018 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001018:	4b05      	ldr	r3, [pc, #20]	; (8001030 <_ZN8STM32DMAD1Ev+0x18>)
 800101a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800101c:	4b05      	ldr	r3, [pc, #20]	; (8001034 <_ZN8STM32DMAD1Ev+0x1c>)
 800101e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001022:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001026:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800102a:	f3bf 8f6f 	isb	sy
}
 800102e:	4770      	bx	lr
 8001030:	08027004 	.word	0x08027004
 8001034:	e000e100 	.word	0xe000e100

08001038 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001038:	b510      	push	{r4, lr}
 800103a:	4604      	mov	r4, r0
}
 800103c:	f7ff ffec 	bl	8001018 <_ZN8STM32DMAD1Ev>
 8001040:	4620      	mov	r0, r4
 8001042:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001046:	f024 fb8d 	bl	8025764 <_ZdlPvj>
 800104a:	4620      	mov	r0, r4
 800104c:	bd10      	pop	{r4, pc}
	...

08001050 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001050:	b570      	push	{r4, r5, r6, lr}
 8001052:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001054:	4625      	mov	r5, r4
 8001056:	4b0a      	ldr	r3, [pc, #40]	; (8001080 <_ZN8STM32DMAC1Ev+0x30>)
 8001058:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800105a:	2600      	movs	r6, #0
 800105c:	6060      	str	r0, [r4, #4]
 800105e:	7226      	strb	r6, [r4, #8]
 8001060:	7266      	strb	r6, [r4, #9]
 8001062:	f845 3b20 	str.w	r3, [r5], #32
 8001066:	2260      	movs	r2, #96	; 0x60
 8001068:	4629      	mov	r1, r5
 800106a:	f011 fff3 	bl	8013054 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800106e:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001072:	60ee      	str	r6, [r5, #12]
 8001074:	3520      	adds	r5, #32
 8001076:	42ab      	cmp	r3, r5
 8001078:	d1fb      	bne.n	8001072 <_ZN8STM32DMAC1Ev+0x22>
}
 800107a:	4620      	mov	r0, r4
 800107c:	bd70      	pop	{r4, r5, r6, pc}
 800107e:	bf00      	nop
 8001080:	08027004 	.word	0x08027004

08001084 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001084:	2001      	movs	r0, #1
 8001086:	4770      	bx	lr

08001088 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001088:	200c      	movs	r0, #12
 800108a:	4770      	bx	lr

0800108c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800108c:	230c      	movs	r3, #12
 800108e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001092:	3008      	adds	r0, #8
 8001094:	4770      	bx	lr

08001096 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001096:	230c      	movs	r3, #12
 8001098:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800109c:	3008      	adds	r0, #8
 800109e:	4770      	bx	lr

080010a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010a0:	2001      	movs	r0, #1
 80010a2:	4770      	bx	lr

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010a4:	4800      	ldr	r0, [pc, #0]	; (80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv+0x4>)
 80010a6:	4770      	bx	lr
 80010a8:	00015894 	.word	0x00015894

080010ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ac:	4b02      	ldr	r3, [pc, #8]	; (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt+0xc>)
 80010ae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b2:	3008      	adds	r0, #8
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop
 80010b8:	00015894 	.word	0x00015894

080010bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010bc:	4b02      	ldr	r3, [pc, #8]	; (80010c8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt+0xc>)
 80010be:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c2:	3008      	adds	r0, #8
 80010c4:	4770      	bx	lr
 80010c6:	bf00      	nop
 80010c8:	00015894 	.word	0x00015894

080010cc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010cc:	2001      	movs	r0, #1
 80010ce:	4770      	bx	lr

080010d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d0:	2010      	movs	r0, #16
 80010d2:	4770      	bx	lr

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010d8:	3008      	adds	r0, #8
 80010da:	4770      	bx	lr

080010dc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010dc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010e0:	3008      	adds	r0, #8
 80010e2:	4770      	bx	lr

080010e4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010e4:	4608      	mov	r0, r1
 80010e6:	f003 be25 	b.w	8004d34 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

080010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010ec:	b510      	push	{r4, lr}
 80010ee:	4b03      	ldr	r3, [pc, #12]	; (80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010f0:	6003      	str	r3, [r0, #0]
 80010f2:	4604      	mov	r4, r0
 80010f4:	f00f fbee 	bl	80108d4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}
 80010fc:	080270bc 	.word	0x080270bc

08001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001100:	b510      	push	{r4, lr}
 8001102:	4604      	mov	r4, r0
 8001104:	f7ff fff2 	bl	80010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001108:	4620      	mov	r0, r4
 800110a:	2114      	movs	r1, #20
 800110c:	f024 fb2a 	bl	8025764 <_ZdlPvj>
 8001110:	4620      	mov	r0, r4
 8001112:	bd10      	pop	{r4, pc}

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f00f fbda 	bl	80108d4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	08027088 	.word	0x08027088

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	4902      	ldr	r1, [pc, #8]	; (800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x14>)
 8001134:	f024 fb16 	bl	8025764 <_ZdlPvj>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}
 800113c:	0001589c 	.word	0x0001589c

08001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001140:	b510      	push	{r4, lr}
 8001142:	4b03      	ldr	r3, [pc, #12]	; (8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001144:	6003      	str	r3, [r0, #0]
 8001146:	4604      	mov	r4, r0
 8001148:	f00f fbc4 	bl	80108d4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800114c:	4620      	mov	r0, r4
 800114e:	bd10      	pop	{r4, pc}
 8001150:	08027054 	.word	0x08027054

08001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001154:	b510      	push	{r4, lr}
 8001156:	4604      	mov	r4, r0
 8001158:	f7ff fff2 	bl	8001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800115c:	4620      	mov	r0, r4
 800115e:	2118      	movs	r1, #24
 8001160:	f024 fb00 	bl	8025764 <_ZdlPvj>
 8001164:	4620      	mov	r0, r4
 8001166:	bd10      	pop	{r4, pc}

08001168 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001168:	b510      	push	{r4, lr}
 800116a:	4b09      	ldr	r3, [pc, #36]	; (8001190 <_ZN12FrontendHeapD1Ev+0x28>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8001174:	30c8      	adds	r0, #200	; 0xc8
 8001176:	f7ff ffb9 	bl	80010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800117a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800117e:	f7ff ffc9 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001182:	f104 0014 	add.w	r0, r4, #20
 8001186:	f7ff ffdb 	bl	8001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800118a:	4620      	mov	r0, r4
 800118c:	bd10      	pop	{r4, pc}
 800118e:	bf00      	nop
 8001190:	080270f0 	.word	0x080270f0

08001194 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001194:	b508      	push	{r3, lr}
 8001196:	4802      	ldr	r0, [pc, #8]	; (80011a0 <__tcf_0+0xc>)
 8001198:	f7ff ffe6 	bl	8001168 <_ZN12FrontendHeapD1Ev>
 800119c:	bd08      	pop	{r3, pc}
 800119e:	bf00      	nop
 80011a0:	2000019c 	.word	0x2000019c

080011a4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011a4:	b510      	push	{r4, lr}
 80011a6:	4604      	mov	r4, r0
 80011a8:	f7ff ffde 	bl	8001168 <_ZN12FrontendHeapD1Ev>
 80011ac:	4620      	mov	r0, r4
 80011ae:	4902      	ldr	r1, [pc, #8]	; (80011b8 <_ZN12FrontendHeapD0Ev+0x14>)
 80011b0:	f024 fad8 	bl	8025764 <_ZdlPvj>
 80011b4:	4620      	mov	r0, r4
 80011b6:	bd10      	pop	{r4, pc}
 80011b8:	00015a38 	.word	0x00015a38

080011bc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011c0:	f000 ff0e 	bl	8001fe0 <_ZN14BitmapDatabase11getInstanceEv>
 80011c4:	4605      	mov	r5, r0
 80011c6:	f000 ff0f 	bl	8001fe8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011ca:	2400      	movs	r4, #0
 80011cc:	4601      	mov	r1, r0
 80011ce:	4623      	mov	r3, r4
 80011d0:	4628      	mov	r0, r5
 80011d2:	4622      	mov	r2, r4
 80011d4:	9400      	str	r4, [sp, #0]
 80011d6:	f018 fa55 	bl	8019684 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011da:	4b26      	ldr	r3, [pc, #152]	; (8001274 <touchgfx_init+0xb8>)
 80011dc:	4a26      	ldr	r2, [pc, #152]	; (8001278 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80011de:	4d27      	ldr	r5, [pc, #156]	; (800127c <touchgfx_init+0xc0>)
 80011e0:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011e2:	4620      	mov	r0, r4
 80011e4:	f006 fb48 	bl	8007878 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011e8:	4825      	ldr	r0, [pc, #148]	; (8001280 <touchgfx_init+0xc4>)
 80011ea:	f018 f98d 	bl	8019508 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011ee:	782b      	ldrb	r3, [r5, #0]
 80011f0:	f3bf 8f5b 	dmb	ish
 80011f4:	07db      	lsls	r3, r3, #31
 80011f6:	d436      	bmi.n	8001266 <touchgfx_init+0xaa>
 80011f8:	4628      	mov	r0, r5
 80011fa:	f024 fab5 	bl	8025768 <__cxa_guard_acquire>
 80011fe:	b390      	cbz	r0, 8001266 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001200:	4c20      	ldr	r4, [pc, #128]	; (8001284 <touchgfx_init+0xc8>)
 8001202:	4f21      	ldr	r7, [pc, #132]	; (8001288 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001204:	4b21      	ldr	r3, [pc, #132]	; (800128c <touchgfx_init+0xd0>)
 8001206:	6023      	str	r3, [r4, #0]
 8001208:	f107 0618 	add.w	r6, r7, #24
 800120c:	f104 0014 	add.w	r0, r4, #20
 8001210:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001214:	6060      	str	r0, [r4, #4]
 8001216:	f8c4 8008 	str.w	r8, [r4, #8]
 800121a:	60e7      	str	r7, [r4, #12]
 800121c:	6126      	str	r6, [r4, #16]
 800121e:	f00f fb5b 	bl	80108d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001222:	4b1b      	ldr	r3, [pc, #108]	; (8001290 <touchgfx_init+0xd4>)
 8001224:	6163      	str	r3, [r4, #20]
 8001226:	4640      	mov	r0, r8
 8001228:	f00f fb56 	bl	80108d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800122c:	4b19      	ldr	r3, [pc, #100]	; (8001294 <touchgfx_init+0xd8>)
 800122e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001230:	4638      	mov	r0, r7
 8001232:	f00f fb51 	bl	80108d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001236:	f504 33ac 	add.w	r3, r4, #88064	; 0x15800
 800123a:	4a17      	ldr	r2, [pc, #92]	; (8001298 <touchgfx_init+0xdc>)
 800123c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8001240:	f103 00dc 	add.w	r0, r3, #220	; 0xdc
 8001244:	f007 fb0d 	bl	8008862 <_ZN5ModelC1Ev>
 8001248:	4622      	mov	r2, r4
 800124a:	f107 0114 	add.w	r1, r7, #20
 800124e:	4630      	mov	r0, r6
 8001250:	f007 faba 	bl	80087c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001254:	4630      	mov	r0, r6
 8001256:	f003 fd6d 	bl	8004d34 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800125a:	4628      	mov	r0, r5
 800125c:	f024 fa90 	bl	8025780 <__cxa_guard_release>
 8001260:	480e      	ldr	r0, [pc, #56]	; (800129c <touchgfx_init+0xe0>)
 8001262:	f024 facb 	bl	80257fc <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001266:	480e      	ldr	r0, [pc, #56]	; (80012a0 <touchgfx_init+0xe4>)
}
 8001268:	b002      	add	sp, #8
 800126a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800126e:	f7ff bb03 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001272:	bf00      	nop
 8001274:	20027a0c 	.word	0x20027a0c
 8001278:	20016874 	.word	0x20016874
 800127c:	20000198 	.word	0x20000198
 8001280:	2000001c 	.word	0x2000001c
 8001284:	2000019c 	.word	0x2000019c
 8001288:	20015a64 	.word	0x20015a64
 800128c:	080270f0 	.word	0x080270f0
 8001290:	08027054 	.word	0x08027054
 8001294:	08027088 	.word	0x08027088
 8001298:	080270bc 	.word	0x080270bc
 800129c:	08001195 	.word	0x08001195
 80012a0:	200167f8 	.word	0x200167f8

080012a4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012a4:	4801      	ldr	r0, [pc, #4]	; (80012ac <touchgfx_taskEntry+0x8>)
 80012a6:	f7ff bb01 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 80012aa:	bf00      	nop
 80012ac:	200167f8 	.word	0x200167f8

080012b0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012b0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012b2:	4e24      	ldr	r6, [pc, #144]	; (8001344 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 80012b4:	4c24      	ldr	r4, [pc, #144]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 80012b6:	4d25      	ldr	r5, [pc, #148]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012b8:	4b25      	ldr	r3, [pc, #148]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012ba:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012bc:	4630      	mov	r0, r6
 80012be:	f7ff fec7 	bl	8001050 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012c2:	4628      	mov	r0, r5
 80012c4:	f01b faae 	bl	801c824 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012c8:	4b22      	ldr	r3, [pc, #136]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012ca:	4823      	ldr	r0, [pc, #140]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 80012cc:	60dc      	str	r4, [r3, #12]
 80012ce:	2200      	movs	r2, #0
 80012d0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012d4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012d8:	4920      	ldr	r1, [pc, #128]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xac>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012da:	851a      	strh	r2, [r3, #40]	; 0x28
 80012dc:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012e0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012e4:	6759      	str	r1, [r3, #116]	; 0x74
 80012e6:	2101      	movs	r1, #1
 80012e8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012ec:	491c      	ldr	r1, [pc, #112]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80012ee:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 80012f2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012f4:	f44f 7150 	mov.w	r1, #832	; 0x340
 80012f8:	8001      	strh	r1, [r0, #0]
 80012fa:	481a      	ldr	r0, [pc, #104]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80012fc:	62da      	str	r2, [r3, #44]	; 0x2c
          lastRenderMethod(HARDWARE)
 80012fe:	e9c3 2204 	strd	r2, r2, [r3, #16]
              inProgress(false)
 8001302:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001306:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800130a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800130e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001312:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001316:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
        : drag(), listener(0), dragThresholdValue(0)
 800131a:	861a      	strh	r2, [r3, #48]	; 0x30
 800131c:	661a      	str	r2, [r3, #96]	; 0x60
 800131e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001322:	671a      	str	r2, [r3, #112]	; 0x70
 8001324:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001328:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800132a:	480f      	ldr	r0, [pc, #60]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800132c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001330:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001334:	8001      	strh	r1, [r0, #0]
 8001336:	480d      	ldr	r0, [pc, #52]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001338:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800133a:	490d      	ldr	r1, [pc, #52]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800133c:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800133e:	4a0d      	ldr	r2, [pc, #52]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001340:	601a      	str	r2, [r3, #0]
}
 8001342:	bd70      	pop	{r4, r5, r6, pc}
 8001344:	20015bd8 	.word	0x20015bd8
 8001348:	20015bd4 	.word	0x20015bd4
 800134c:	20016878 	.word	0x20016878
 8001350:	08026b28 	.word	0x08026b28
 8001354:	200167f8 	.word	0x200167f8
 8001358:	200279a4 	.word	0x200279a4
 800135c:	01000001 	.word	0x01000001
 8001360:	200279b0 	.word	0x200279b0
 8001364:	200279aa 	.word	0x200279aa
 8001368:	200279a6 	.word	0x200279a6
 800136c:	200279ac 	.word	0x200279ac
 8001370:	200279a8 	.word	0x200279a8
 8001374:	08026cb4 	.word	0x08026cb4

08001378 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001378:	4801      	ldr	r0, [pc, #4]	; (8001380 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800137a:	f7ff be4d 	b.w	8001018 <_ZN8STM32DMAD1Ev>
 800137e:	bf00      	nop
 8001380:	20015bd8 	.word	0x20015bd8

08001384 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001384:	4b02      	ldr	r3, [pc, #8]	; (8001390 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001386:	2290      	movs	r2, #144	; 0x90
 8001388:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 800138c:	4770      	bx	lr
 800138e:	bf00      	nop
 8001390:	e000e100 	.word	0xe000e100

08001394 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001394:	4b02      	ldr	r3, [pc, #8]	; (80013a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001396:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800139a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	e000e100 	.word	0xe000e100

080013a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013a4:	4770      	bx	lr

080013a6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013a6:	4770      	bx	lr

080013a8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013a8:	b538      	push	{r3, r4, r5, lr}
 80013aa:	4604      	mov	r4, r0
    HAL::initialize();
 80013ac:	f010 fef7 	bl	801219e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013b0:	6823      	ldr	r3, [r4, #0]
 80013b2:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80013b4:	f014 fbf2 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 80013b8:	4601      	mov	r1, r0
 80013ba:	4620      	mov	r0, r4
 80013bc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013be:	6823      	ldr	r3, [r4, #0]
 80013c0:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 80013c4:	2300      	movs	r3, #0
 80013c6:	461a      	mov	r2, r3
 80013c8:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013cc:	4620      	mov	r0, r4
 80013ce:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013d0:	2301      	movs	r3, #1
 80013d2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013d6:	bd38      	pop	{r3, r4, r5, pc}

080013d8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013d8:	f010 be91 	b.w	80120fe <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013dc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013dc:	f010 bfed 	b.w	80123ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013e0:	4b04      	ldr	r3, [pc, #16]	; (80013f4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013e2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013e6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013ee:	f3bf 8f6f 	isb	sy
}
 80013f2:	4770      	bx	lr
 80013f4:	e000e100 	.word	0xe000e100

080013f8 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013f8:	4901      	ldr	r1, [pc, #4]	; (8001400 <vApplicationIdleHook+0x8>)
 80013fa:	2000      	movs	r0, #0
 80013fc:	f00e bd72 	b.w	800fee4 <vTaskSetApplicationTaskTag>
 8001400:	08000c45 	.word	0x08000c45

08001404 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001404:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001406:	2064      	movs	r0, #100	; 0x64
 8001408:	f00d f8ff 	bl	800e60a <osDelay>
  for(;;)
 800140c:	e7fb      	b.n	8001406 <StartDefaultTask+0x2>
	...

08001410 <SystemClock_Config>:
{
 8001410:	b530      	push	{r4, r5, lr}
 8001412:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001414:	2210      	movs	r2, #16
 8001416:	2100      	movs	r1, #0
 8001418:	a809      	add	r0, sp, #36	; 0x24
 800141a:	f024 fb7f 	bl	8025b1c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800141e:	2214      	movs	r2, #20
 8001420:	2100      	movs	r1, #0
 8001422:	a802      	add	r0, sp, #8
 8001424:	f024 fb7a 	bl	8025b1c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001428:	2400      	movs	r4, #0
 800142a:	4b1f      	ldr	r3, [pc, #124]	; (80014a8 <SystemClock_Config+0x98>)
 800142c:	9400      	str	r4, [sp, #0]
 800142e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001430:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001434:	641a      	str	r2, [r3, #64]	; 0x40
 8001436:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001438:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800143c:	9300      	str	r3, [sp, #0]
 800143e:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001440:	4b1a      	ldr	r3, [pc, #104]	; (80014ac <SystemClock_Config+0x9c>)
 8001442:	9401      	str	r4, [sp, #4]
 8001444:	681a      	ldr	r2, [r3, #0]
 8001446:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800144a:	601a      	str	r2, [r3, #0]
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001452:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001454:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001456:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001458:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800145c:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001460:	2502      	movs	r5, #2
 8001462:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001466:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001468:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 800146c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001470:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001474:	2004      	movs	r0, #4
 8001476:	2306      	movs	r3, #6
 8001478:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800147c:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800147e:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001480:	f00c fc10 	bl	800dca4 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001484:	f00b fe60 	bl	800d148 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001488:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800148a:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800148e:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001490:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001494:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001498:	2105      	movs	r1, #5
 800149a:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800149c:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014a0:	f00c f9d4 	bl	800d84c <HAL_RCC_ClockConfig>
}
 80014a4:	b015      	add	sp, #84	; 0x54
 80014a6:	bd30      	pop	{r4, r5, pc}
 80014a8:	40023800 	.word	0x40023800
 80014ac:	40007000 	.word	0x40007000

080014b0 <main>:
{
 80014b0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014b4:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014b6:	f00a f82f 	bl	800b518 <HAL_Init>
  SystemClock_Config();
 80014ba:	f7ff ffa9 	bl	8001410 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014be:	2214      	movs	r2, #20
 80014c0:	2100      	movs	r1, #0
 80014c2:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c6:	f024 fb29 	bl	8025b1c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ca:	4bc9      	ldr	r3, [pc, #804]	; (80017f0 <main+0x340>)
 80014cc:	9402      	str	r4, [sp, #8]
 80014ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014d0:	48c8      	ldr	r0, [pc, #800]	; (80017f4 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014d2:	f042 0210 	orr.w	r2, r2, #16
 80014d6:	631a      	str	r2, [r3, #48]	; 0x30
 80014d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014da:	f002 0210 	and.w	r2, r2, #16
 80014de:	9202      	str	r2, [sp, #8]
 80014e0:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014e2:	9403      	str	r4, [sp, #12]
 80014e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e6:	f042 0202 	orr.w	r2, r2, #2
 80014ea:	631a      	str	r2, [r3, #48]	; 0x30
 80014ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ee:	f002 0202 	and.w	r2, r2, #2
 80014f2:	9203      	str	r2, [sp, #12]
 80014f4:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f6:	9404      	str	r4, [sp, #16]
 80014f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001506:	9204      	str	r2, [sp, #16]
 8001508:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800150a:	9405      	str	r4, [sp, #20]
 800150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150e:	f042 0208 	orr.w	r2, r2, #8
 8001512:	631a      	str	r2, [r3, #48]	; 0x30
 8001514:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001516:	f002 0208 	and.w	r2, r2, #8
 800151a:	9205      	str	r2, [sp, #20]
 800151c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800151e:	9406      	str	r4, [sp, #24]
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001526:	631a      	str	r2, [r3, #48]	; 0x30
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800152e:	9206      	str	r2, [sp, #24]
 8001530:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001532:	9407      	str	r4, [sp, #28]
 8001534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001536:	f042 0220 	orr.w	r2, r2, #32
 800153a:	631a      	str	r2, [r3, #48]	; 0x30
 800153c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153e:	f002 0220 	and.w	r2, r2, #32
 8001542:	9207      	str	r2, [sp, #28]
 8001544:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001546:	9408      	str	r4, [sp, #32]
 8001548:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800154e:	631a      	str	r2, [r3, #48]	; 0x30
 8001550:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001552:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001556:	9208      	str	r2, [sp, #32]
 8001558:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800155a:	9409      	str	r4, [sp, #36]	; 0x24
 800155c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001562:	631a      	str	r2, [r3, #48]	; 0x30
 8001564:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001566:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800156a:	9209      	str	r2, [sp, #36]	; 0x24
 800156c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800156e:	940a      	str	r4, [sp, #40]	; 0x28
 8001570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001572:	f042 0204 	orr.w	r2, r2, #4
 8001576:	631a      	str	r2, [r3, #48]	; 0x30
 8001578:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157a:	f002 0204 	and.w	r2, r2, #4
 800157e:	920a      	str	r2, [sp, #40]	; 0x28
 8001580:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001582:	940b      	str	r4, [sp, #44]	; 0x2c
 8001584:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001586:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800158a:	631a      	str	r2, [r3, #48]	; 0x30
 800158c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800158e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001592:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001594:	2201      	movs	r2, #1
 8001596:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001598:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 800159a:	f00a ffd1 	bl	800c540 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800159e:	4896      	ldr	r0, [pc, #600]	; (80017f8 <main+0x348>)
 80015a0:	4622      	mov	r2, r4
 80015a2:	2110      	movs	r1, #16
 80015a4:	f00a ffcc 	bl	800c540 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015a8:	4894      	ldr	r0, [pc, #592]	; (80017fc <main+0x34c>)
 80015aa:	4622      	mov	r2, r4
 80015ac:	2140      	movs	r1, #64	; 0x40
 80015ae:	f00a ffc7 	bl	800c540 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015b2:	4622      	mov	r2, r4
 80015b4:	4892      	ldr	r0, [pc, #584]	; (8001800 <main+0x350>)
 80015b6:	2180      	movs	r1, #128	; 0x80
 80015b8:	f00a ffc2 	bl	800c540 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015bc:	2611      	movs	r6, #17
 80015be:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015c0:	488c      	ldr	r0, [pc, #560]	; (80017f4 <main+0x344>)
 80015c2:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015ca:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ce:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d2:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015d6:	f00a fe25 	bl	800c224 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015da:	4887      	ldr	r0, [pc, #540]	; (80017f8 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015dc:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015de:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e0:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e4:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015e8:	f00a fe1c 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015ec:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015ee:	4883      	ldr	r0, [pc, #524]	; (80017fc <main+0x34c>)
 80015f0:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015f2:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f4:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f8:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015fc:	f00a fe12 	bl	800c224 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001600:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001602:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001604:	487e      	ldr	r0, [pc, #504]	; (8001800 <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001606:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001608:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800160c:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800160e:	f00a fe09 	bl	800c224 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001612:	487c      	ldr	r0, [pc, #496]	; (8001804 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001614:	4e7c      	ldr	r6, [pc, #496]	; (8001808 <main+0x358>)
  hcrc.Instance = CRC;
 8001616:	4b7d      	ldr	r3, [pc, #500]	; (800180c <main+0x35c>)
 8001618:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800161a:	f00a f823 	bl	800b664 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800161e:	4b7c      	ldr	r3, [pc, #496]	; (8001810 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001620:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001624:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001628:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800162a:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800162e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001632:	f00a f92b 	bl	800b88c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001636:	4639      	mov	r1, r7
 8001638:	4630      	mov	r0, r6
 800163a:	f00a f9df 	bl	800b9fc <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800163e:	4629      	mov	r1, r5
 8001640:	4622      	mov	r2, r4
 8001642:	486f      	ldr	r0, [pc, #444]	; (8001800 <main+0x350>)
  hdsi.Instance = DSI;
 8001644:	4e73      	ldr	r6, [pc, #460]	; (8001814 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001646:	f00a ff7b 	bl	800c540 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800164a:	2014      	movs	r0, #20
 800164c:	f009 ff90 	bl	800b570 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001650:	4629      	mov	r1, r5
 8001652:	463a      	mov	r2, r7
 8001654:	486a      	ldr	r0, [pc, #424]	; (8001800 <main+0x350>)
 8001656:	f00a ff73 	bl	800c540 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800165a:	200a      	movs	r0, #10
 800165c:	f009 ff88 	bl	800b570 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001660:	2224      	movs	r2, #36	; 0x24
 8001662:	4621      	mov	r1, r4
 8001664:	a815      	add	r0, sp, #84	; 0x54
 8001666:	f024 fa59 	bl	8025b1c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 800166a:	2218      	movs	r2, #24
 800166c:	4621      	mov	r1, r4
 800166e:	a80f      	add	r0, sp, #60	; 0x3c
 8001670:	f024 fa54 	bl	8025b1c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001674:	2234      	movs	r2, #52	; 0x34
 8001676:	4621      	mov	r1, r4
 8001678:	a82b      	add	r0, sp, #172	; 0xac
 800167a:	f024 fa4f 	bl	8025b1c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800167e:	222c      	movs	r2, #44	; 0x2c
 8001680:	4621      	mov	r1, r4
 8001682:	a81e      	add	r0, sp, #120	; 0x78
 8001684:	f024 fa4a 	bl	8025b1c <memset>
  hdsi.Instance = DSI;
 8001688:	4b63      	ldr	r3, [pc, #396]	; (8001818 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 800168a:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 800168c:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800168e:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001692:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 8001694:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001696:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001698:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 800169c:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a0:	f00a fa74 	bl	800bb8c <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016a4:	a915      	add	r1, sp, #84	; 0x54
 80016a6:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016a8:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016ac:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016b0:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016b4:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016b8:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ba:	f00a fc91 	bl	800bfe0 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016be:	221c      	movs	r2, #28
 80016c0:	2321      	movs	r3, #33	; 0x21
 80016c2:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016c6:	210f      	movs	r1, #15
 80016c8:	2319      	movs	r3, #25
 80016ca:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016ce:	4630      	mov	r0, r6
 80016d0:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016d2:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016d6:	f00a fc46 	bl	800bf66 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016da:	4629      	mov	r1, r5
 80016dc:	4630      	mov	r0, r6
 80016de:	f00a fc31 	bl	800bf44 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016e2:	f242 7110 	movw	r1, #10000	; 0x2710
 80016e6:	4630      	mov	r0, r6
 80016e8:	f00a fd85 	bl	800c1f6 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016ec:	4621      	mov	r1, r4
 80016ee:	4630      	mov	r0, r6
 80016f0:	f00a f9e9 	bl	800bac6 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016f4:	f44f 7080 	mov.w	r0, #256	; 0x100
 80016f8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016fc:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001700:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001704:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001708:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 800170c:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001710:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001714:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001718:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 800171c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001720:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001724:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001728:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800172c:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001730:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001734:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001738:	a92b      	add	r1, sp, #172	; 0xac
 800173a:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800173c:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001740:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001744:	f00a fbca 	bl	800bedc <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001748:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800174a:	a91e      	add	r1, sp, #120	; 0x78
 800174c:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800174e:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001752:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8001756:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800175a:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800175e:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001762:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001764:	f00a fb48 	bl	800bdf8 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001768:	4621      	mov	r1, r4
 800176a:	4630      	mov	r0, r6
 800176c:	f00a fb33 	bl	800bdd6 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001770:	482a      	ldr	r0, [pc, #168]	; (800181c <main+0x36c>)
 8001772:	492b      	ldr	r1, [pc, #172]	; (8001820 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001774:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001776:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800177a:	2340      	movs	r3, #64	; 0x40
 800177c:	2120      	movs	r1, #32
 800177e:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001782:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001786:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800178a:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 800178c:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800178e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 8001792:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 8001796:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001798:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 800179a:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800179e:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017a2:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017a6:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017aa:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017ae:	f00c fc2f 	bl	800e010 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017b2:	f009 fdd9 	bl	800b368 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017b6:	f009 fd89 	bl	800b2cc <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ba:	2234      	movs	r2, #52	; 0x34
 80017bc:	4621      	mov	r1, r4
 80017be:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017c0:	4d18      	ldr	r5, [pc, #96]	; (8001824 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017c2:	f024 f9ab 	bl	8025b1c <memset>
  hltdc.Instance = LTDC;
 80017c6:	4a18      	ldr	r2, [pc, #96]	; (8001828 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017c8:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017ca:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017ce:	23ca      	movs	r3, #202	; 0xca
 80017d0:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017d4:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017d8:	21cb      	movs	r1, #203	; 0xcb
 80017da:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017de:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017e0:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017e4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017e8:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017ec:	e01e      	b.n	800182c <main+0x37c>
 80017ee:	bf00      	nop
 80017f0:	40023800 	.word	0x40023800
 80017f4:	40022800 	.word	0x40022800
 80017f8:	40020c00 	.word	0x40020c00
 80017fc:	40021800 	.word	0x40021800
 8001800:	40021c00 	.word	0x40021c00
 8001804:	20027ca4 	.word	0x20027ca4
 8001808:	20027d74 	.word	0x20027d74
 800180c:	40023000 	.word	0x40023000
 8001810:	4002b000 	.word	0x4002b000
 8001814:	20027cac 	.word	0x20027cac
 8001818:	40016c00 	.word	0x40016c00
 800181c:	20027db4 	.word	0x20027db4
 8001820:	a0000140 	.word	0xa0000140
 8001824:	20027cc8 	.word	0x20027cc8
 8001828:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 800182c:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001830:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001834:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001838:	f00b fb50 	bl	800cedc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800183c:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 800183e:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001840:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001844:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001848:	2005      	movs	r0, #5
 800184a:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800184e:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 8001852:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001856:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001858:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800185c:	4628      	mov	r0, r5
 800185e:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8001860:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001864:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001866:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 800186a:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 800186e:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001872:	f00b fbff 	bl	800d074 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001876:	682a      	ldr	r2, [r5, #0]
 8001878:	6993      	ldr	r3, [r2, #24]
 800187a:	f023 0301 	bic.w	r3, r3, #1
 800187e:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001880:	4630      	mov	r0, r6
 8001882:	f00a fc13 	bl	800c0ac <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001886:	4639      	mov	r1, r7
 8001888:	4640      	mov	r0, r8
 800188a:	f008 fee1 	bl	800a650 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800188e:	2328      	movs	r3, #40	; 0x28
 8001890:	2215      	movs	r2, #21
 8001892:	4621      	mov	r1, r4
 8001894:	4630      	mov	r0, r6
 8001896:	9400      	str	r4, [sp, #0]
 8001898:	f00a fc3b 	bl	800c112 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 800189c:	a92b      	add	r1, sp, #172	; 0xac
 800189e:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018a0:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018a4:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018a8:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018ac:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018b0:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018b4:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018b6:	f00a fb11 	bl	800bedc <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018ba:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018be:	4622      	mov	r2, r4
 80018c0:	4628      	mov	r0, r5
 80018c2:	f00b fc05 	bl	800d0d0 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018c6:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018c8:	481e      	ldr	r0, [pc, #120]	; (8001944 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018ca:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018cc:	4d1e      	ldr	r5, [pc, #120]	; (8001948 <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018ce:	4e1f      	ldr	r6, [pc, #124]	; (800194c <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018d0:	433b      	orrs	r3, r7
 80018d2:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018d4:	4b1e      	ldr	r3, [pc, #120]	; (8001950 <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018d6:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018d8:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018dc:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018de:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018e2:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018e6:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018ea:	f00b fd45 	bl	800d378 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018ee:	f009 fbb3 	bl	800b058 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018f2:	f009 fae7 	bl	800aec4 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018f6:	f009 fa5d 	bl	800adb4 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80018fa:	4b16      	ldr	r3, [pc, #88]	; (8001954 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018fc:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018fe:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 8001900:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001904:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001908:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800190c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001910:	f00b f800 	bl	800c914 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001914:	4628      	mov	r0, r5
 8001916:	f00b f8a5 	bl	800ca64 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800191a:	f7fe fe66 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 800191e:	f00c fdff 	bl	800e520 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001922:	4a0d      	ldr	r2, [pc, #52]	; (8001958 <main+0x4a8>)
 8001924:	480d      	ldr	r0, [pc, #52]	; (800195c <main+0x4ac>)
 8001926:	4621      	mov	r1, r4
 8001928:	f00c fe26 	bl	800e578 <osThreadNew>
 800192c:	4b0c      	ldr	r3, [pc, #48]	; (8001960 <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800192e:	4a0d      	ldr	r2, [pc, #52]	; (8001964 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001930:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001932:	4621      	mov	r1, r4
 8001934:	480c      	ldr	r0, [pc, #48]	; (8001968 <main+0x4b8>)
 8001936:	f00c fe1f 	bl	800e578 <osThreadNew>
 800193a:	4b0c      	ldr	r3, [pc, #48]	; (800196c <main+0x4bc>)
 800193c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800193e:	f00c fe01 	bl	800e544 <osKernelStart>
  while (1)
 8001942:	e7fe      	b.n	8001942 <main+0x492>
 8001944:	20027de8 	.word	0x20027de8
 8001948:	20027c50 	.word	0x20027c50
 800194c:	40005400 	.word	0x40005400
 8001950:	a0001000 	.word	0xa0001000
 8001954:	00061a80 	.word	0x00061a80
 8001958:	0802713c 	.word	0x0802713c
 800195c:	08001405 	.word	0x08001405
 8001960:	20027c4c 	.word	0x20027c4c
 8001964:	08027118 	.word	0x08027118
 8001968:	080005ef 	.word	0x080005ef
 800196c:	20027d70 	.word	0x20027d70

08001970 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001970:	6802      	ldr	r2, [r0, #0]
 8001972:	4b03      	ldr	r3, [pc, #12]	; (8001980 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001974:	429a      	cmp	r2, r3
 8001976:	d101      	bne.n	800197c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001978:	f009 bde8 	b.w	800b54c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop
 8001980:	40001000 	.word	0x40001000

08001984 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001984:	4770      	bx	lr

08001986 <parce_found_logs>:
	f_mount(NULL, "", 0);
	return state_read;
#else
	return 1;
#endif
}
 8001986:	2001      	movs	r0, #1
 8001988:	4770      	bx	lr

0800198a <read_start_stop_state_archiv>:

//========================================================================================
// Чтение и начала и конца архива, содержащие время
void read_start_stop_state_archiv(uint32_t *time_start, uint32_t *time_stop)
{
	*time_start = open_read_state_file_archiv(TYPE_STATE_FILE_START);
 800198a:	2300      	movs	r3, #0
 800198c:	6003      	str	r3, [r0, #0]
	*time_stop = open_read_state_file_archiv(TYPE_STATE_FILE_STOP) + 1;
 800198e:	2301      	movs	r3, #1
 8001990:	600b      	str	r3, [r1, #0]
}
 8001992:	4770      	bx	lr

08001994 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001994:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001996:	4b0e      	ldr	r3, [pc, #56]	; (80019d0 <HAL_MspInit+0x3c>)
 8001998:	2200      	movs	r2, #0
 800199a:	9200      	str	r2, [sp, #0]
 800199c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800199e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019a2:	6459      	str	r1, [r3, #68]	; 0x44
 80019a4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019a6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019aa:	9100      	str	r1, [sp, #0]
 80019ac:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ae:	9201      	str	r2, [sp, #4]
 80019b0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019b2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019b6:	6419      	str	r1, [r3, #64]	; 0x40
 80019b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019be:	9301      	str	r3, [sp, #4]
 80019c0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019c2:	210f      	movs	r1, #15
 80019c4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019c8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019ca:	f009 bdf7 	b.w	800b5bc <HAL_NVIC_SetPriority>
 80019ce:	bf00      	nop
 80019d0:	40023800 	.word	0x40023800

080019d4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019d4:	6802      	ldr	r2, [r0, #0]
 80019d6:	4b09      	ldr	r3, [pc, #36]	; (80019fc <HAL_CRC_MspInit+0x28>)
 80019d8:	429a      	cmp	r2, r3
{
 80019da:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019dc:	d10b      	bne.n	80019f6 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019de:	2300      	movs	r3, #0
 80019e0:	9301      	str	r3, [sp, #4]
 80019e2:	4b07      	ldr	r3, [pc, #28]	; (8001a00 <HAL_CRC_MspInit+0x2c>)
 80019e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019e6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019ea:	631a      	str	r2, [r3, #48]	; 0x30
 80019ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ee:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019f2:	9301      	str	r3, [sp, #4]
 80019f4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019f6:	b002      	add	sp, #8
 80019f8:	4770      	bx	lr
 80019fa:	bf00      	nop
 80019fc:	40023000 	.word	0x40023000
 8001a00:	40023800 	.word	0x40023800

08001a04 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a04:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a06:	4b0f      	ldr	r3, [pc, #60]	; (8001a44 <HAL_DMA2D_MspInit+0x40>)
 8001a08:	6802      	ldr	r2, [r0, #0]
 8001a0a:	429a      	cmp	r2, r3
 8001a0c:	d116      	bne.n	8001a3c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a0e:	2200      	movs	r2, #0
 8001a10:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a14:	9201      	str	r2, [sp, #4]
 8001a16:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a18:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a1c:	6319      	str	r1, [r3, #48]	; 0x30
 8001a1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a20:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a24:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a26:	2105      	movs	r1, #5
 8001a28:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a2a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a2c:	f009 fdc6 	bl	800b5bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a30:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a32:	b003      	add	sp, #12
 8001a34:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a38:	f009 bdf2 	b.w	800b620 <HAL_NVIC_EnableIRQ>
}
 8001a3c:	b003      	add	sp, #12
 8001a3e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a42:	bf00      	nop
 8001a44:	4002b000 	.word	0x4002b000

08001a48 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a48:	b510      	push	{r4, lr}
 8001a4a:	4604      	mov	r4, r0
 8001a4c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a4e:	2214      	movs	r2, #20
 8001a50:	2100      	movs	r1, #0
 8001a52:	a803      	add	r0, sp, #12
 8001a54:	f024 f862 	bl	8025b1c <memset>
  if(hdsi->Instance==DSI)
 8001a58:	6822      	ldr	r2, [r4, #0]
 8001a5a:	4b18      	ldr	r3, [pc, #96]	; (8001abc <HAL_DSI_MspInit+0x74>)
 8001a5c:	429a      	cmp	r2, r3
 8001a5e:	d12a      	bne.n	8001ab6 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a60:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a64:	2400      	movs	r4, #0
 8001a66:	9401      	str	r4, [sp, #4]
 8001a68:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a6a:	4815      	ldr	r0, [pc, #84]	; (8001ac0 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a6c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a70:	645a      	str	r2, [r3, #68]	; 0x44
 8001a72:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a74:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a78:	9201      	str	r2, [sp, #4]
 8001a7a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a7c:	9402      	str	r4, [sp, #8]
 8001a7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a80:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a84:	631a      	str	r2, [r3, #48]	; 0x30
 8001a86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a88:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a8c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a90:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a92:	2302      	movs	r3, #2
 8001a94:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a98:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001a9a:	230d      	movs	r3, #13
 8001a9c:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a9e:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001aa2:	f00a fbbf 	bl	800c224 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001aa6:	205c      	movs	r0, #92	; 0x5c
 8001aa8:	4622      	mov	r2, r4
 8001aaa:	2105      	movs	r1, #5
 8001aac:	f009 fd86 	bl	800b5bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001ab0:	205c      	movs	r0, #92	; 0x5c
 8001ab2:	f009 fdb5 	bl	800b620 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001ab6:	b008      	add	sp, #32
 8001ab8:	bd10      	pop	{r4, pc}
 8001aba:	bf00      	nop
 8001abc:	40016c00 	.word	0x40016c00
 8001ac0:	40022400 	.word	0x40022400

08001ac4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ac4:	b530      	push	{r4, r5, lr}
 8001ac6:	4604      	mov	r4, r0
 8001ac8:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aca:	2214      	movs	r2, #20
 8001acc:	2100      	movs	r1, #0
 8001ace:	a803      	add	r0, sp, #12
 8001ad0:	f024 f824 	bl	8025b1c <memset>
  if(hi2c->Instance==I2C1)
 8001ad4:	6822      	ldr	r2, [r4, #0]
 8001ad6:	4b1a      	ldr	r3, [pc, #104]	; (8001b40 <HAL_I2C_MspInit+0x7c>)
 8001ad8:	429a      	cmp	r2, r3
 8001ada:	d12f      	bne.n	8001b3c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001adc:	4c19      	ldr	r4, [pc, #100]	; (8001b44 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ade:	481a      	ldr	r0, [pc, #104]	; (8001b48 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ae0:	2500      	movs	r5, #0
 8001ae2:	9501      	str	r5, [sp, #4]
 8001ae4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ae6:	f043 0302 	orr.w	r3, r3, #2
 8001aea:	6323      	str	r3, [r4, #48]	; 0x30
 8001aec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001aee:	f003 0302 	and.w	r3, r3, #2
 8001af2:	9301      	str	r3, [sp, #4]
 8001af4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001af6:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001afa:	2312      	movs	r3, #18
 8001afc:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b00:	2101      	movs	r1, #1
 8001b02:	2303      	movs	r3, #3
 8001b04:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b08:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b0a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b0c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b0e:	f00a fb89 	bl	800c224 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b12:	9502      	str	r5, [sp, #8]
 8001b14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b16:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b1a:	6423      	str	r3, [r4, #64]	; 0x40
 8001b1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b1e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b22:	9302      	str	r3, [sp, #8]
 8001b24:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b26:	6a23      	ldr	r3, [r4, #32]
 8001b28:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b2c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b2e:	6a23      	ldr	r3, [r4, #32]
 8001b30:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b34:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b36:	2064      	movs	r0, #100	; 0x64
 8001b38:	f009 fd1a 	bl	800b570 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b3c:	b009      	add	sp, #36	; 0x24
 8001b3e:	bd30      	pop	{r4, r5, pc}
 8001b40:	40005400 	.word	0x40005400
 8001b44:	40023800 	.word	0x40023800
 8001b48:	40020400 	.word	0x40020400

08001b4c <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b4c:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b4e:	6802      	ldr	r2, [r0, #0]
 8001b50:	4b0a      	ldr	r3, [pc, #40]	; (8001b7c <HAL_I2C_MspDeInit+0x30>)
 8001b52:	429a      	cmp	r2, r3
 8001b54:	d110      	bne.n	8001b78 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b56:	4a0a      	ldr	r2, [pc, #40]	; (8001b80 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b58:	480a      	ldr	r0, [pc, #40]	; (8001b84 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b5a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b5c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b60:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b62:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b66:	f00a fc43 	bl	800c3f0 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b6e:	4805      	ldr	r0, [pc, #20]	; (8001b84 <HAL_I2C_MspDeInit+0x38>)
 8001b70:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b74:	f00a bc3c 	b.w	800c3f0 <HAL_GPIO_DeInit>
}
 8001b78:	bd08      	pop	{r3, pc}
 8001b7a:	bf00      	nop
 8001b7c:	40005400 	.word	0x40005400
 8001b80:	40023800 	.word	0x40023800
 8001b84:	40020400 	.word	0x40020400

08001b88 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b88:	b510      	push	{r4, lr}
 8001b8a:	4604      	mov	r4, r0
 8001b8c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b8e:	223c      	movs	r2, #60	; 0x3c
 8001b90:	2100      	movs	r1, #0
 8001b92:	a801      	add	r0, sp, #4
 8001b94:	f023 ffc2 	bl	8025b1c <memset>
  if(hltdc->Instance==LTDC)
 8001b98:	6822      	ldr	r2, [r4, #0]
 8001b9a:	4b13      	ldr	r3, [pc, #76]	; (8001be8 <HAL_LTDC_MspInit+0x60>)
 8001b9c:	429a      	cmp	r2, r3
 8001b9e:	d121      	bne.n	8001be4 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ba0:	2308      	movs	r3, #8
 8001ba2:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001ba4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001ba8:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001baa:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bac:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bae:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bb0:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001bb2:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bb4:	f00b ff14 	bl	800d9e0 <HAL_RCCEx_PeriphCLKConfig>
 8001bb8:	b108      	cbz	r0, 8001bbe <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001bba:	f7ff fee3 	bl	8001984 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bbe:	4b0b      	ldr	r3, [pc, #44]	; (8001bec <HAL_LTDC_MspInit+0x64>)
 8001bc0:	9400      	str	r4, [sp, #0]
 8001bc2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bc4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bc8:	645a      	str	r2, [r3, #68]	; 0x44
 8001bca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bcc:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001bd0:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bd2:	2058      	movs	r0, #88	; 0x58
 8001bd4:	2200      	movs	r2, #0
 8001bd6:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bd8:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bda:	f009 fcef 	bl	800b5bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bde:	2058      	movs	r0, #88	; 0x58
 8001be0:	f009 fd1e 	bl	800b620 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001be4:	b010      	add	sp, #64	; 0x40
 8001be6:	bd10      	pop	{r4, pc}
 8001be8:	40016800 	.word	0x40016800
 8001bec:	40023800 	.word	0x40023800

08001bf0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001bf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bf2:	4604      	mov	r4, r0
 8001bf4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bf6:	2214      	movs	r2, #20
 8001bf8:	2100      	movs	r1, #0
 8001bfa:	a803      	add	r0, sp, #12
 8001bfc:	f023 ff8e 	bl	8025b1c <memset>
  if(hqspi->Instance==QUADSPI)
 8001c00:	6822      	ldr	r2, [r4, #0]
 8001c02:	4b24      	ldr	r3, [pc, #144]	; (8001c94 <HAL_QSPI_MspInit+0xa4>)
 8001c04:	429a      	cmp	r2, r3
 8001c06:	d143      	bne.n	8001c90 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c08:	4b23      	ldr	r3, [pc, #140]	; (8001c98 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c0a:	4824      	ldr	r0, [pc, #144]	; (8001c9c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c0c:	2400      	movs	r4, #0
 8001c0e:	9400      	str	r4, [sp, #0]
 8001c10:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c12:	f042 0202 	orr.w	r2, r2, #2
 8001c16:	639a      	str	r2, [r3, #56]	; 0x38
 8001c18:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c1a:	f002 0202 	and.w	r2, r2, #2
 8001c1e:	9200      	str	r2, [sp, #0]
 8001c20:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c22:	9401      	str	r4, [sp, #4]
 8001c24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c26:	f042 0202 	orr.w	r2, r2, #2
 8001c2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c2e:	f002 0202 	and.w	r2, r2, #2
 8001c32:	9201      	str	r2, [sp, #4]
 8001c34:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c36:	9402      	str	r4, [sp, #8]
 8001c38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3a:	f042 0220 	orr.w	r2, r2, #32
 8001c3e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c42:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c44:	f003 0320 	and.w	r3, r3, #32
 8001c48:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4a:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c4c:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c4e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c50:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c52:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c54:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c56:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c5a:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c5e:	f00a fae1 	bl	800c224 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c62:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c66:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c6a:	480d      	ldr	r0, [pc, #52]	; (8001ca0 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c6c:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c6e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c70:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c72:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c76:	f00a fad5 	bl	800c224 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c7a:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7e:	4808      	ldr	r0, [pc, #32]	; (8001ca0 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c80:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c82:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c84:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c88:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c8c:	f00a faca 	bl	800c224 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001c90:	b009      	add	sp, #36	; 0x24
 8001c92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c94:	a0001000 	.word	0xa0001000
 8001c98:	40023800 	.word	0x40023800
 8001c9c:	40020400 	.word	0x40020400
 8001ca0:	40021400 	.word	0x40021400

08001ca4 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ca4:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001ca6:	6802      	ldr	r2, [r0, #0]
 8001ca8:	4b09      	ldr	r3, [pc, #36]	; (8001cd0 <HAL_QSPI_MspDeInit+0x2c>)
 8001caa:	429a      	cmp	r2, r3
 8001cac:	d10f      	bne.n	8001cce <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cae:	4a09      	ldr	r2, [pc, #36]	; (8001cd4 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cb0:	4809      	ldr	r0, [pc, #36]	; (8001cd8 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cb2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cb4:	f023 0302 	bic.w	r3, r3, #2
 8001cb8:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cba:	2140      	movs	r1, #64	; 0x40
 8001cbc:	f00a fb98 	bl	800c3f0 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001cc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001cc4:	4805      	ldr	r0, [pc, #20]	; (8001cdc <HAL_QSPI_MspDeInit+0x38>)
 8001cc6:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001cca:	f00a bb91 	b.w	800c3f0 <HAL_GPIO_DeInit>
}
 8001cce:	bd08      	pop	{r3, pc}
 8001cd0:	a0001000 	.word	0xa0001000
 8001cd4:	40023800 	.word	0x40023800
 8001cd8:	40020400 	.word	0x40020400
 8001cdc:	40021400 	.word	0x40021400

08001ce0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001ce2:	4b31      	ldr	r3, [pc, #196]	; (8001da8 <HAL_SDRAM_MspInit+0xc8>)
 8001ce4:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001ce6:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001ce8:	2c00      	cmp	r4, #0
 8001cea:	d15b      	bne.n	8001da4 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001cec:	2201      	movs	r2, #1
 8001cee:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cf0:	4b2e      	ldr	r3, [pc, #184]	; (8001dac <HAL_SDRAM_MspInit+0xcc>)
 8001cf2:	9400      	str	r4, [sp, #0]
 8001cf4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cf6:	482e      	ldr	r0, [pc, #184]	; (8001db0 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cf8:	f042 0201 	orr.w	r2, r2, #1
 8001cfc:	639a      	str	r2, [r3, #56]	; 0x38
 8001cfe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d00:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d02:	f003 0301 	and.w	r3, r3, #1
 8001d06:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d08:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d0a:	2603      	movs	r6, #3
 8001d0c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d0e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d10:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d12:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d16:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d1a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d1e:	f00a fa81 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d22:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d26:	4823      	ldr	r0, [pc, #140]	; (8001db4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d28:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d2a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d30:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d34:	f00a fa76 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d38:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3c:	481e      	ldr	r0, [pc, #120]	; (8001db8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d3e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d40:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d42:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d46:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d4a:	f00a fa6b 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d4e:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d52:	481a      	ldr	r0, [pc, #104]	; (8001dbc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d54:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d56:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d5c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d60:	f00a fa60 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d64:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d68:	4815      	ldr	r0, [pc, #84]	; (8001dc0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d6c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d72:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d76:	f00a fa55 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d7a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d7e:	4811      	ldr	r0, [pc, #68]	; (8001dc4 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d80:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d82:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d84:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d88:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d8c:	f00a fa4a 	bl	800c224 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001d90:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d92:	480d      	ldr	r0, [pc, #52]	; (8001dc8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d94:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d96:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d98:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d9c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001da0:	f00a fa40 	bl	800c224 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001da4:	b007      	add	sp, #28
 8001da6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001da8:	200168f4 	.word	0x200168f4
 8001dac:	40023800 	.word	0x40023800
 8001db0:	40021000 	.word	0x40021000
 8001db4:	40021800 	.word	0x40021800
 8001db8:	40020c00 	.word	0x40020c00
 8001dbc:	40022000 	.word	0x40022000
 8001dc0:	40021400 	.word	0x40021400
 8001dc4:	40021c00 	.word	0x40021c00
 8001dc8:	40020800 	.word	0x40020800

08001dcc <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001dcc:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001dce:	4b17      	ldr	r3, [pc, #92]	; (8001e2c <HAL_SDRAM_MspDeInit+0x60>)
 8001dd0:	681a      	ldr	r2, [r3, #0]
 8001dd2:	bb52      	cbnz	r2, 8001e2a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001dd4:	2201      	movs	r2, #1
 8001dd6:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dd8:	4a15      	ldr	r2, [pc, #84]	; (8001e30 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dda:	4816      	ldr	r0, [pc, #88]	; (8001e34 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001ddc:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dde:	f023 0301 	bic.w	r3, r3, #1
 8001de2:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001de4:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001de8:	f00a fb02 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dec:	4812      	ldr	r0, [pc, #72]	; (8001e38 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dee:	f248 1133 	movw	r1, #33075	; 0x8133
 8001df2:	f00a fafd 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001df6:	4811      	ldr	r0, [pc, #68]	; (8001e3c <HAL_SDRAM_MspDeInit+0x70>)
 8001df8:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001dfc:	f00a faf8 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e00:	480f      	ldr	r0, [pc, #60]	; (8001e40 <HAL_SDRAM_MspDeInit+0x74>)
 8001e02:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e06:	f00a faf3 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e0a:	480e      	ldr	r0, [pc, #56]	; (8001e44 <HAL_SDRAM_MspDeInit+0x78>)
 8001e0c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e10:	f00a faee 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e14:	480c      	ldr	r0, [pc, #48]	; (8001e48 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e16:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e1a:	f00a fae9 	bl	800c3f0 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e22:	480a      	ldr	r0, [pc, #40]	; (8001e4c <HAL_SDRAM_MspDeInit+0x80>)
 8001e24:	210d      	movs	r1, #13
 8001e26:	f00a bae3 	b.w	800c3f0 <HAL_GPIO_DeInit>
}
 8001e2a:	bd08      	pop	{r3, pc}
 8001e2c:	200168f0 	.word	0x200168f0
 8001e30:	40023800 	.word	0x40023800
 8001e34:	40021000 	.word	0x40021000
 8001e38:	40021800 	.word	0x40021800
 8001e3c:	40020c00 	.word	0x40020c00
 8001e40:	40022000 	.word	0x40022000
 8001e44:	40021400 	.word	0x40021400
 8001e48:	40021c00 	.word	0x40021c00
 8001e4c:	40020800 	.word	0x40020800

08001e50 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e50:	b530      	push	{r4, r5, lr}
 8001e52:	4601      	mov	r1, r0
 8001e54:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e56:	2200      	movs	r2, #0
 8001e58:	2036      	movs	r0, #54	; 0x36
 8001e5a:	f009 fbaf 	bl	800b5bc <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e5e:	2036      	movs	r0, #54	; 0x36
 8001e60:	f009 fbde 	bl	800b620 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e64:	2500      	movs	r5, #0
 8001e66:	4b15      	ldr	r3, [pc, #84]	; (8001ebc <HAL_InitTick+0x6c>)
 8001e68:	9502      	str	r5, [sp, #8]
 8001e6a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e6c:	4c14      	ldr	r4, [pc, #80]	; (8001ec0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e6e:	f042 0210 	orr.w	r2, r2, #16
 8001e72:	641a      	str	r2, [r3, #64]	; 0x40
 8001e74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e76:	f003 0310 	and.w	r3, r3, #16
 8001e7a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e7c:	a901      	add	r1, sp, #4
 8001e7e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e80:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e82:	f00b fd8f 	bl	800d9a4 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e86:	f00b fd7d 	bl	800d984 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e8a:	4b0e      	ldr	r3, [pc, #56]	; (8001ec4 <HAL_InitTick+0x74>)
 8001e8c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e8e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e92:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e94:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e96:	4b0c      	ldr	r3, [pc, #48]	; (8001ec8 <HAL_InitTick+0x78>)
 8001e98:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e9c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e9e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ea0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001ea2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ea4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ea6:	f00c fa51 	bl	800e34c <HAL_TIM_Base_Init>
 8001eaa:	b920      	cbnz	r0, 8001eb6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001eac:	4620      	mov	r0, r4
 8001eae:	f00c f907 	bl	800e0c0 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001eb2:	b009      	add	sp, #36	; 0x24
 8001eb4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001eb6:	2001      	movs	r0, #1
 8001eb8:	e7fb      	b.n	8001eb2 <HAL_InitTick+0x62>
 8001eba:	bf00      	nop
 8001ebc:	40023800 	.word	0x40023800
 8001ec0:	20027e34 	.word	0x20027e34
 8001ec4:	40001000 	.word	0x40001000
 8001ec8:	000f4240 	.word	0x000f4240

08001ecc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ecc:	4770      	bx	lr

08001ece <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ece:	e7fe      	b.n	8001ece <HardFault_Handler>

08001ed0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ed0:	e7fe      	b.n	8001ed0 <MemManage_Handler>

08001ed2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ed2:	e7fe      	b.n	8001ed2 <BusFault_Handler>

08001ed4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ed4:	e7fe      	b.n	8001ed4 <UsageFault_Handler>

08001ed6 <DebugMon_Handler>:
 8001ed6:	4770      	bx	lr

08001ed8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ed8:	4801      	ldr	r0, [pc, #4]	; (8001ee0 <TIM6_DAC_IRQHandler+0x8>)
 8001eda:	f00c b92f 	b.w	800e13c <HAL_TIM_IRQHandler>
 8001ede:	bf00      	nop
 8001ee0:	20027e34 	.word	0x20027e34

08001ee4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ee4:	4801      	ldr	r0, [pc, #4]	; (8001eec <LTDC_IRQHandler+0x8>)
 8001ee6:	f00b b868 	b.w	800cfba <HAL_LTDC_IRQHandler>
 8001eea:	bf00      	nop
 8001eec:	20027cc8 	.word	0x20027cc8

08001ef0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ef0:	4801      	ldr	r0, [pc, #4]	; (8001ef8 <DMA2D_IRQHandler+0x8>)
 8001ef2:	f009 bcf9 	b.w	800b8e8 <HAL_DMA2D_IRQHandler>
 8001ef6:	bf00      	nop
 8001ef8:	20027d74 	.word	0x20027d74

08001efc <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001efc:	4801      	ldr	r0, [pc, #4]	; (8001f04 <DSI_IRQHandler+0x8>)
 8001efe:	f009 bef8 	b.w	800bcf2 <HAL_DSI_IRQHandler>
 8001f02:	bf00      	nop
 8001f04:	20027cac 	.word	0x20027cac

08001f08 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f08:	2001      	movs	r0, #1
 8001f0a:	4770      	bx	lr

08001f0c <_kill>:

int _kill(int pid, int sig)
{
 8001f0c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f0e:	f023 fc9d 	bl	802584c <__errno>
 8001f12:	2316      	movs	r3, #22
 8001f14:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f16:	f04f 30ff 	mov.w	r0, #4294967295
 8001f1a:	bd08      	pop	{r3, pc}

08001f1c <_exit>:

void _exit (int status)
{
 8001f1c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f1e:	f023 fc95 	bl	802584c <__errno>
 8001f22:	2316      	movs	r3, #22
 8001f24:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f26:	e7fe      	b.n	8001f26 <_exit+0xa>

08001f28 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f28:	b570      	push	{r4, r5, r6, lr}
 8001f2a:	460e      	mov	r6, r1
 8001f2c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f2e:	2500      	movs	r5, #0
 8001f30:	42a5      	cmp	r5, r4
 8001f32:	db01      	blt.n	8001f38 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f34:	4620      	mov	r0, r4
 8001f36:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f38:	f3af 8000 	nop.w
 8001f3c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3e:	3501      	adds	r5, #1
 8001f40:	e7f6      	b.n	8001f30 <_read+0x8>

08001f42 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f42:	b570      	push	{r4, r5, r6, lr}
 8001f44:	460e      	mov	r6, r1
 8001f46:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f48:	2500      	movs	r5, #0
 8001f4a:	42a5      	cmp	r5, r4
 8001f4c:	db01      	blt.n	8001f52 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f4e:	4620      	mov	r0, r4
 8001f50:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f52:	5d70      	ldrb	r0, [r6, r5]
 8001f54:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f58:	3501      	adds	r5, #1
 8001f5a:	e7f6      	b.n	8001f4a <_write+0x8>

08001f5c <_close>:

int _close(int file)
{
	return -1;
}
 8001f5c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f60:	4770      	bx	lr

08001f62 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f62:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f66:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f68:	2000      	movs	r0, #0
 8001f6a:	4770      	bx	lr

08001f6c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f6c:	2001      	movs	r0, #1
 8001f6e:	4770      	bx	lr

08001f70 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f70:	2000      	movs	r0, #0
 8001f72:	4770      	bx	lr

08001f74 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f74:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f76:	4b0a      	ldr	r3, [pc, #40]	; (8001fa0 <_sbrk+0x2c>)
 8001f78:	6819      	ldr	r1, [r3, #0]
{
 8001f7a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f7c:	b909      	cbnz	r1, 8001f82 <_sbrk+0xe>
		heap_end = &end;
 8001f7e:	4909      	ldr	r1, [pc, #36]	; (8001fa4 <_sbrk+0x30>)
 8001f80:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f82:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f84:	4669      	mov	r1, sp
 8001f86:	4402      	add	r2, r0
 8001f88:	428a      	cmp	r2, r1
 8001f8a:	d906      	bls.n	8001f9a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f8c:	f023 fc5e 	bl	802584c <__errno>
 8001f90:	230c      	movs	r3, #12
 8001f92:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f94:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f98:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f9a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001f9c:	e7fc      	b.n	8001f98 <_sbrk+0x24>
 8001f9e:	bf00      	nop
 8001fa0:	200168f8 	.word	0x200168f8
 8001fa4:	20027f30 	.word	0x20027f30

08001fa8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fa8:	4770      	bx	lr

08001faa <_ZN23ApplicationFontProviderD0Ev>:
 8001faa:	b510      	push	{r4, lr}
 8001fac:	2104      	movs	r1, #4
 8001fae:	4604      	mov	r4, r0
 8001fb0:	f023 fbd8 	bl	8025764 <_ZdlPvj>
 8001fb4:	4620      	mov	r0, r4
 8001fb6:	bd10      	pop	{r4, pc}

08001fb8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001fb8:	2901      	cmp	r1, #1
{
 8001fba:	b508      	push	{r3, lr}
    switch (typography)
 8001fbc:	d006      	beq.n	8001fcc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001fbe:	2902      	cmp	r1, #2
 8001fc0:	d008      	beq.n	8001fd4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001fc2:	b959      	cbnz	r1, 8001fdc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fc4:	f005 fca4 	bl	8007910 <_ZN17TypedTextDatabase8getFontsEv>
 8001fc8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001fca:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fcc:	f005 fca0 	bl	8007910 <_ZN17TypedTextDatabase8getFontsEv>
 8001fd0:	6840      	ldr	r0, [r0, #4]
 8001fd2:	e7fa      	b.n	8001fca <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fd4:	f005 fc9c 	bl	8007910 <_ZN17TypedTextDatabase8getFontsEv>
 8001fd8:	6880      	ldr	r0, [r0, #8]
 8001fda:	e7f6      	b.n	8001fca <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fdc:	2000      	movs	r0, #0
 8001fde:	e7f4      	b.n	8001fca <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001fe0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001fe0:	4800      	ldr	r0, [pc, #0]	; (8001fe4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001fe2:	4770      	bx	lr
 8001fe4:	08027174 	.word	0x08027174

08001fe8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001fe8:	2009      	movs	r0, #9
 8001fea:	4770      	bx	lr

08001fec <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001fec:	b513      	push	{r0, r1, r4, lr}
 8001fee:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001ff0:	b151      	cbz	r1, 8002008 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001ff2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001ff4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001ff6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001ffa:	aa01      	add	r2, sp, #4
 8001ffc:	689c      	ldr	r4, [r3, #8]
 8001ffe:	f10d 0303 	add.w	r3, sp, #3
 8002002:	47a0      	blx	r4
        return glyph;
    }
 8002004:	b002      	add	sp, #8
 8002006:	bd10      	pop	{r4, pc}
            return 0;
 8002008:	4608      	mov	r0, r1
 800200a:	e7fb      	b.n	8002004 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800200c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800200c:	8940      	ldrh	r0, [r0, #10]
 800200e:	4770      	bx	lr

08002010 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002010:	8980      	ldrh	r0, [r0, #12]
 8002012:	4770      	bx	lr

08002014 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002014:	8880      	ldrh	r0, [r0, #4]
 8002016:	4770      	bx	lr

08002018 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002018:	7983      	ldrb	r3, [r0, #6]
 800201a:	8880      	ldrh	r0, [r0, #4]
 800201c:	4418      	add	r0, r3
    }
 800201e:	b280      	uxth	r0, r0
 8002020:	4770      	bx	lr

08002022 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002022:	79c0      	ldrb	r0, [r0, #7]
    }
 8002024:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002028:	4770      	bx	lr

0800202a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800202a:	79c0      	ldrb	r0, [r0, #7]
    }
 800202c:	09c0      	lsrs	r0, r0, #7
 800202e:	4770      	bx	lr

08002030 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002030:	2000      	movs	r0, #0
 8002032:	4770      	bx	lr

08002034 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002034:	8081      	strh	r1, [r0, #4]
    }
 8002036:	4770      	bx	lr

08002038 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002038:	80c1      	strh	r1, [r0, #6]
    }
 800203a:	4770      	bx	lr

0800203c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800203c:	8101      	strh	r1, [r0, #8]
    }
 800203e:	4770      	bx	lr

08002040 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002040:	8141      	strh	r1, [r0, #10]
    }
 8002042:	4770      	bx	lr

08002044 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002044:	4770      	bx	lr

08002046 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002046:	4770      	bx	lr

08002048 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002048:	4770      	bx	lr

0800204a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800204a:	4770      	bx	lr

0800204c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800204c:	4770      	bx	lr

0800204e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800204e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002050:	88c4      	ldrh	r4, [r0, #6]
 8002052:	6803      	ldr	r3, [r0, #0]
 8002054:	1b12      	subs	r2, r2, r4
 8002056:	8884      	ldrh	r4, [r0, #4]
 8002058:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800205a:	1b09      	subs	r1, r1, r4
 800205c:	b212      	sxth	r2, r2
    }
 800205e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002062:	b209      	sxth	r1, r1
 8002064:	4718      	bx	r3

08002066 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002066:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800206a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800206c:	f04f 33ff 	mov.w	r3, #4294967295
 8002070:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002072:	6813      	ldr	r3, [r2, #0]
 8002074:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002076:	6010      	str	r0, [r2, #0]
    }
 8002078:	4770      	bx	lr

0800207a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800207a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800207c:	4770      	bx	lr

0800207e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 800207e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002082:	b11a      	cbz	r2, 800208c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002084:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002088:	b102      	cbz	r2, 800208c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800208a:	6018      	str	r0, [r3, #0]
        }
    }
 800208c:	4770      	bx	lr

0800208e <_ZN23ConfigListFilterLogBase20scrollListUpdateItemER8ListTiles>:
    }

    virtual void scrollListUpdateItem(ListTile& item, int16_t itemIndex)
    {
        // Override and implement this function in ConfigListFilterLog
    }
 800208e:	4770      	bx	lr

08002090 <_ZN23ConfigListFilterLogBase20emitTrigger1CallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTrigger1Callback()
 8002090:	b510      	push	{r4, lr}
 8002092:	4604      	mov	r4, r0
    {
        if (trigger1Callback && trigger1Callback->isValid())
 8002094:	f8d0 0ff8 	ldr.w	r0, [r0, #4088]	; 0xff8
 8002098:	b150      	cbz	r0, 80020b0 <_ZN23ConfigListFilterLogBase20emitTrigger1CallbackEv+0x20>
 800209a:	6803      	ldr	r3, [r0, #0]
 800209c:	68db      	ldr	r3, [r3, #12]
 800209e:	4798      	blx	r3
 80020a0:	b130      	cbz	r0, 80020b0 <_ZN23ConfigListFilterLogBase20emitTrigger1CallbackEv+0x20>
        {
            this->trigger1Callback->execute();
 80020a2:	f8d4 0ff8 	ldr.w	r0, [r4, #4088]	; 0xff8
 80020a6:	6803      	ldr	r3, [r0, #0]
        }
    }
 80020a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->trigger1Callback->execute();
 80020ac:	689b      	ldr	r3, [r3, #8]
 80020ae:	4718      	bx	r3
    }
 80020b0:	bd10      	pop	{r4, pc}

080020b2 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 80020b2:	2010      	movs	r0, #16
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1 = void, typename T2 = void, typename T3 = void>
struct Callback : public GenericCallback<T1, T2, T3>
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 80020b8:	b538      	push	{r3, r4, r5, lr}
 80020ba:	4b07      	ldr	r3, [pc, #28]	; (80020d8 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev+0x20>)
 80020bc:	6003      	str	r3, [r0, #0]
 80020be:	4604      	mov	r4, r0
 80020c0:	f640 55d8 	movw	r5, #3544	; 0xdd8
 80020c4:	5963      	ldr	r3, [r4, r5]
 80020c6:	1960      	adds	r0, r4, r5
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	3dec      	subs	r5, #236	; 0xec
 80020cc:	4798      	blx	r3
 80020ce:	f115 0fe8 	cmn.w	r5, #232	; 0xe8
 80020d2:	d1f7      	bne.n	80020c4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev+0xc>
 80020d4:	4620      	mov	r0, r4
 80020d6:	bd38      	pop	{r3, r4, r5, pc}
 80020d8:	08027338 	.word	0x08027338

080020dc <_ZN23ConfigListFilterLogBaseD1Ev>:
    virtual ~ConfigListFilterLogBase() {}
 80020dc:	b510      	push	{r4, lr}
 80020de:	4b04      	ldr	r3, [pc, #16]	; (80020f0 <_ZN23ConfigListFilterLogBaseD1Ev+0x14>)
 80020e0:	6003      	str	r3, [r0, #0]
 80020e2:	4604      	mov	r4, r0
 80020e4:	f500 7092 	add.w	r0, r0, #292	; 0x124
 80020e8:	f7ff ffe6 	bl	80020b8 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>
 80020ec:	4620      	mov	r0, r4
 80020ee:	bd10      	pop	{r4, pc}
 80020f0:	08027368 	.word	0x08027368

080020f4 <_ZN8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     * @param  t2 This value will be passed as the second argument in the function call.
     * @param  t3 This value will be passed as the third argument in the function call.
     */
    virtual void execute(T1 t1, T2 t2, T3 t3)
 80020f4:	b4f0      	push	{r4, r5, r6, r7}
    {
        (pobject->*pmemfun_3)(t1, t2, t3);
 80020f6:	68c5      	ldr	r5, [r0, #12]
 80020f8:	6846      	ldr	r6, [r0, #4]
 80020fa:	106f      	asrs	r7, r5, #1
    virtual void execute(T1 t1, T2 t2, T3 t3)
 80020fc:	4604      	mov	r4, r0
        (pobject->*pmemfun_3)(t1, t2, t3);
 80020fe:	eb06 0065 	add.w	r0, r6, r5, asr #1
 8002102:	07ed      	lsls	r5, r5, #31
 8002104:	68a4      	ldr	r4, [r4, #8]
 8002106:	bf44      	itt	mi
 8002108:	59f5      	ldrmi	r5, [r6, r7]
 800210a:	592c      	ldrmi	r4, [r5, r4]
 800210c:	46a4      	mov	ip, r4
    }
 800210e:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun_3)(t1, t2, t3);
 8002110:	4760      	bx	ip

08002112 <_ZNK8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_3 != 0);
 8002112:	6843      	ldr	r3, [r0, #4]
 8002114:	b12b      	cbz	r3, 8002122 <_ZNK8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 8002116:	6883      	ldr	r3, [r0, #8]
 8002118:	b92b      	cbnz	r3, 8002126 <_ZNK8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 800211a:	68c0      	ldr	r0, [r0, #12]
 800211c:	f000 0001 	and.w	r0, r0, #1
 8002120:	4770      	bx	lr
 8002122:	4618      	mov	r0, r3
 8002124:	4770      	bx	lr
 8002126:	2001      	movs	r0, #1
    }
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED0Ev>:
 800212a:	b510      	push	{r4, lr}
 800212c:	4604      	mov	r4, r0
 800212e:	f7ff ffc3 	bl	80020b8 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>
 8002132:	4620      	mov	r0, r4
 8002134:	f640 61c4 	movw	r1, #3780	; 0xec4
 8002138:	f023 fb14 	bl	8025764 <_ZdlPvj>
 800213c:	4620      	mov	r0, r4
 800213e:	bd10      	pop	{r4, pc}

08002140 <_ZN8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 8002140:	b510      	push	{r4, lr}
 8002142:	2110      	movs	r1, #16
 8002144:	4604      	mov	r4, r0
 8002146:	f023 fb0d 	bl	8025764 <_ZdlPvj>
 800214a:	4620      	mov	r0, r4
 800214c:	bd10      	pop	{r4, pc}

0800214e <_ZN23ConfigListFilterLogBaseD0Ev>:
 800214e:	b510      	push	{r4, lr}
 8002150:	4604      	mov	r4, r0
 8002152:	f7ff ffc3 	bl	80020dc <_ZN23ConfigListFilterLogBaseD1Ev>
 8002156:	4620      	mov	r0, r4
 8002158:	f640 71fc 	movw	r1, #4092	; 0xffc
 800215c:	f023 fb02 	bl	8025764 <_ZdlPvj>
 8002160:	4620      	mov	r0, r4
 8002162:	bd10      	pop	{r4, pc}

08002164 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 8002164:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 8002166:	b28b      	uxth	r3, r1
 8002168:	2b0f      	cmp	r3, #15
 800216a:	d905      	bls.n	8002178 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x14>
 800216c:	4b05      	ldr	r3, [pc, #20]	; (8002184 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x20>)
 800216e:	4a06      	ldr	r2, [pc, #24]	; (8002188 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x24>)
 8002170:	4806      	ldr	r0, [pc, #24]	; (800218c <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x28>)
 8002172:	2154      	movs	r1, #84	; 0x54
 8002174:	f023 fb24 	bl	80257c0 <__assert_func>
        return &element[index];
 8002178:	23ec      	movs	r3, #236	; 0xec
 800217a:	fb01 0003 	mla	r0, r1, r3, r0
    }
 800217e:	3004      	adds	r0, #4
 8002180:	bd08      	pop	{r3, pc}
 8002182:	bf00      	nop
 8002184:	08027228 	.word	0x08027228
 8002188:	08027243 	.word	0x08027243
 800218c:	080272d0 	.word	0x080272d0

08002190 <_ZN23ConfigListFilterLogBase10initializeEv>:
    add(boxBg);
    add(scrollList);
}

void ConfigListFilterLogBase::initialize()
{
 8002190:	b570      	push	{r4, r5, r6, lr}
 8002192:	4605      	mov	r5, r0
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 8002194:	308c      	adds	r0, #140	; 0x8c
 8002196:	f00e fd4d 	bl	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800219a:	f44f 7494 	mov.w	r4, #296	; 0x128
    scrollList.initialize();
    for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 800219e:	f640 76e8 	movw	r6, #4072	; 0xfe8
    {
        scrollListListItems[i].initialize();
 80021a2:	592b      	ldr	r3, [r5, r4]
 80021a4:	1928      	adds	r0, r5, r4
 80021a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80021aa:	34ec      	adds	r4, #236	; 0xec
 80021ac:	4798      	blx	r3
    for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 80021ae:	42b4      	cmp	r4, r6
 80021b0:	d1f7      	bne.n	80021a2 <_ZN23ConfigListFilterLogBase10initializeEv+0x12>
    }
}
 80021b2:	bd70      	pop	{r4, r5, r6, pc}

080021b4 <_ZN23ConfigListFilterLogBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:

void ConfigListFilterLogBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 80021b4:	b513      	push	{r0, r1, r4, lr}
 80021b6:	4604      	mov	r4, r0
 80021b8:	4608      	mov	r0, r1
 80021ba:	4611      	mov	r1, r2
 80021bc:	461a      	mov	r2, r3
    if (items == &scrollListListItems)
 80021be:	f504 7392 	add.w	r3, r4, #292	; 0x124
 80021c2:	4298      	cmp	r0, r3
 80021c4:	d10d      	bne.n	80021e2 <_ZN23ConfigListFilterLogBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x2e>
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 80021c6:	6803      	ldr	r3, [r0, #0]
 80021c8:	9201      	str	r2, [sp, #4]
 80021ca:	689b      	ldr	r3, [r3, #8]
 80021cc:	4798      	blx	r3
        ListTile* cc = (ListTile*)d;
        scrollListUpdateItem(*cc, itemIndex);
 80021ce:	6823      	ldr	r3, [r4, #0]
 80021d0:	9a01      	ldr	r2, [sp, #4]
 80021d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 80021d6:	4601      	mov	r1, r0
        scrollListUpdateItem(*cc, itemIndex);
 80021d8:	4620      	mov	r0, r4
    }
}
 80021da:	b002      	add	sp, #8
 80021dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        scrollListUpdateItem(*cc, itemIndex);
 80021e0:	4718      	bx	r3
}
 80021e2:	b002      	add	sp, #8
 80021e4:	bd10      	pop	{r4, pc}

080021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 80021e6:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 80021e8:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 80021ea:	4604      	mov	r4, r0
        setWidth(width);
 80021ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 80021ee:	4615      	mov	r5, r2
        setWidth(width);
 80021f0:	4798      	blx	r3
        setHeight(height);
 80021f2:	6823      	ldr	r3, [r4, #0]
 80021f4:	4629      	mov	r1, r5
 80021f6:	4620      	mov	r0, r4
 80021f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80021fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80021fe:	4718      	bx	r3

08002200 <_ZN23ConfigListFilterLogBaseC1Ev>:
ConfigListFilterLogBase::ConfigListFilterLogBase() :
 8002200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    trigger1Callback(0)
 8002204:	4607      	mov	r7, r0
 8002206:	2300      	movs	r3, #0
          visible(true)
 8002208:	f44f 7280 	mov.w	r2, #256	; 0x100
 800220c:	494b      	ldr	r1, [pc, #300]	; (800233c <_ZN23ConfigListFilterLogBaseC1Ev+0x13c>)
 800220e:	8482      	strh	r2, [r0, #36]	; 0x24
 8002210:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8002214:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002218:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800221c:	e9c0 3307 	strd	r3, r3, [r0, #28]
          firstChild(0)
 8002220:	6283      	str	r3, [r0, #40]	; 0x28
 8002222:	f847 1b2c 	str.w	r1, [r7], #44
 8002226:	f8a0 2050 	strh.w	r2, [r0, #80]	; 0x50
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800222a:	22ff      	movs	r2, #255	; 0xff
 800222c:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
 8002230:	f100 0560 	add.w	r5, r0, #96	; 0x60
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8002234:	4a42      	ldr	r2, [pc, #264]	; (8002340 <_ZN23ConfigListFilterLogBaseC1Ev+0x140>)
        : color(col)
 8002236:	6543      	str	r3, [r0, #84]	; 0x54
ConfigListFilterLogBase::ConfigListFilterLogBase() :
 8002238:	4604      	mov	r4, r0
        : x(0), y(0), width(0), height(0)
 800223a:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 800223e:	e9c0 330e 	strd	r3, r3, [r0, #56]	; 0x38
 8002242:	e9c0 3310 	strd	r3, r3, [r0, #64]	; 0x40
 8002246:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
        : color(col)
 800224a:	6583      	str	r3, [r0, #88]	; 0x58
 800224c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8002250:	62c2      	str	r2, [r0, #44]	; 0x2c
    trigger1Callback(0)
 8002252:	4628      	mov	r0, r5
 8002254:	f00e ff42 	bl	80110dc <_ZN8touchgfx10ScrollListC1Ev>
class DrawableListItems : public DrawableListItemsInterface
 8002258:	4b3a      	ldr	r3, [pc, #232]	; (8002344 <_ZN23ConfigListFilterLogBaseC1Ev+0x144>)
 800225a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800225e:	f504 7a92 	add.w	sl, r4, #292	; 0x124
 8002262:	f504 7694 	add.w	r6, r4, #296	; 0x128
 8002266:	f604 78e8 	addw	r8, r4, #4072	; 0xfe8
 800226a:	4630      	mov	r0, r6
 800226c:	36ec      	adds	r6, #236	; 0xec
 800226e:	f006 fabf 	bl	80087f0 <_ZN8ListTileC1Ev>
 8002272:	45b0      	cmp	r8, r6
 8002274:	d1f9      	bne.n	800226a <_ZN23ConfigListFilterLogBaseC1Ev+0x6a>
        : pobject(pobject), pmemfun_3(pmemfun_3)
 8002276:	4b34      	ldr	r3, [pc, #208]	; (8002348 <_ZN23ConfigListFilterLogBaseC1Ev+0x148>)
 8002278:	f8c4 3fe8 	str.w	r3, [r4, #4072]	; 0xfe8
 800227c:	4b33      	ldr	r3, [pc, #204]	; (800234c <_ZN23ConfigListFilterLogBaseC1Ev+0x14c>)
 800227e:	f8c4 3ff0 	str.w	r3, [r4, #4080]	; 0xff0
 8002282:	2600      	movs	r6, #0
        rect.width = width;
 8002284:	4b32      	ldr	r3, [pc, #200]	; (8002350 <_ZN23ConfigListFilterLogBaseC1Ev+0x150>)
 8002286:	60a3      	str	r3, [r4, #8]
        setX(x);
 8002288:	4631      	mov	r1, r6
 800228a:	4638      	mov	r0, r7
 800228c:	f8c4 4fec 	str.w	r4, [r4, #4076]	; 0xfec
 8002290:	f8c4 6ff4 	str.w	r6, [r4, #4084]	; 0xff4
 8002294:	f8c4 6ff8 	str.w	r6, [r4, #4088]	; 0xff8
 8002298:	f7ff fecc 	bl	8002034 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 800229c:	4631      	mov	r1, r6
 800229e:	4638      	mov	r0, r7
 80022a0:	f7ff feca 	bl	8002038 <_ZN8touchgfx8Drawable4setYEs>
        setWidthHeight(width, height);
 80022a4:	4638      	mov	r0, r7
 80022a6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80022aa:	21ba      	movs	r1, #186	; 0xba
 80022ac:	f7ff ff9b 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 80022b0:	4a28      	ldr	r2, [pc, #160]	; (8002354 <_ZN23ConfigListFilterLogBaseC1Ev+0x154>)
        rect.x = x;
 80022b2:	6666      	str	r6, [r4, #100]	; 0x64
 80022b4:	f04f 33ff 	mov.w	r3, #4294967295
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80022b8:	f04f 0901 	mov.w	r9, #1
        borderColor = color;
 80022bc:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        setWidthHeight(width, height);
 80022c0:	4628      	mov	r0, r5
 80022c2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
        borderSize = size;
 80022c6:	f8a4 905c 	strh.w	r9, [r4, #92]	; 0x5c
 80022ca:	21ba      	movs	r1, #186	; 0xba
 80022cc:	f7ff ff8b 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    scrollList.setHorizontal(false);
 80022d0:	4631      	mov	r1, r6
 80022d2:	4628      	mov	r0, r5
 80022d4:	f00f f90e 	bl	80114f4 <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    scrollList.setCircular(true);
 80022d8:	4649      	mov	r1, r9
 80022da:	4628      	mov	r0, r5
 80022dc:	f00f f962 	bl	80115a4 <_ZN8touchgfx10ScrollBase11setCircularEb>
    scrollList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 80022e0:	4628      	mov	r0, r5
 80022e2:	491d      	ldr	r1, [pc, #116]	; (8002358 <_ZN23ConfigListFilterLogBaseC1Ev+0x158>)
 80022e4:	f00f f847 	bl	8011376 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    scrollList.setSwipeAcceleration(10);
 80022e8:	4628      	mov	r0, r5
 80022ea:	210a      	movs	r1, #10
 80022ec:	f00f f846 	bl	801137c <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
    scrollList.setDragAcceleration(10);
 80022f0:	4628      	mov	r0, r5
 80022f2:	210a      	movs	r1, #10
 80022f4:	f00f f845 	bl	8011382 <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    scrollList.setNumberOfItems(32);
 80022f8:	4628      	mov	r0, r5
 80022fa:	2120      	movs	r1, #32
 80022fc:	f00e ffb7 	bl	801126e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
    scrollList.setPadding(0, 0);
 8002300:	4632      	mov	r2, r6
 8002302:	4631      	mov	r1, r6
 8002304:	4628      	mov	r0, r5
 8002306:	f00e fefb 	bl	8011100 <_ZN8touchgfx10ScrollList10setPaddingEss>
    scrollList.setSnapping(false);
 800230a:	4631      	mov	r1, r6
 800230c:	4628      	mov	r0, r5
 800230e:	f00e ff0f 	bl	8011130 <_ZN8touchgfx10ScrollList11setSnappingEb>
    scrollList.setDrawableSize(32, 0);
 8002312:	4632      	mov	r2, r6
 8002314:	4628      	mov	r0, r5
 8002316:	2120      	movs	r1, #32
 8002318:	f00f f826 	bl	8011368 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
    scrollList.setDrawables(scrollListListItems, updateItemCallback);
 800231c:	4642      	mov	r2, r8
 800231e:	4651      	mov	r1, sl
 8002320:	4628      	mov	r0, r5
 8002322:	f00e fe0c 	bl	8010f3e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
    add(boxBg);
 8002326:	4639      	mov	r1, r7
 8002328:	4620      	mov	r0, r4
 800232a:	f00f fab1 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(scrollList);
 800232e:	4620      	mov	r0, r4
 8002330:	4629      	mov	r1, r5
 8002332:	f00f faad 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002336:	4620      	mov	r0, r4
 8002338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800233c:	08027368 	.word	0x08027368
 8002340:	0802a200 	.word	0x0802a200
 8002344:	08027338 	.word	0x08027338
 8002348:	08027350 	.word	0x08027350
 800234c:	080021b5 	.word	0x080021b5
 8002350:	00bd00ba 	.word	0x00bd00ba
 8002354:	ff474747 	.word	0xff474747
 8002358:	0801738d 	.word	0x0801738d

0800235c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800235c:	4770      	bx	lr

0800235e <_ZN29CustomContainerButton_keyBaseD1Ev>:

class CustomContainerButton_keyBase : public touchgfx::Container
{
public:
    CustomContainerButton_keyBase();
    virtual ~CustomContainerButton_keyBase() {}
 800235e:	4770      	bx	lr

08002360 <_ZN29CustomContainerButton_keyBase19functionButtonClickEv>:
     * Virtual Action Handlers
     */
    virtual void functionButtonClick()
    {
        // Override and implement this function in CustomContainerButton_key
    }
 8002360:	4770      	bx	lr

08002362 <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerButton_keyCallback()
 8002362:	b510      	push	{r4, lr}
 8002364:	4604      	mov	r4, r0
    {
        if (triggerButton_keyCallback && triggerButton_keyCallback->isValid())
 8002366:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
 800236a:	b150      	cbz	r0, 8002382 <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
 800236c:	6803      	ldr	r3, [r0, #0]
 800236e:	68db      	ldr	r3, [r3, #12]
 8002370:	4798      	blx	r3
 8002372:	b130      	cbz	r0, 8002382 <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
        {
            this->triggerButton_keyCallback->execute();
 8002374:	f8d4 0110 	ldr.w	r0, [r4, #272]	; 0x110
 8002378:	6803      	ldr	r3, [r0, #0]
        }
    }
 800237a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->triggerButton_keyCallback->execute();
 800237e:	689b      	ldr	r3, [r3, #8]
 8002380:	4718      	bx	r3
    }
 8002382:	bd10      	pop	{r4, pc}

08002384 <_ZN29CustomContainerButton_keyBase10initializeEv>:
}

void CustomContainerButton_keyBase::initialize()
{

}
 8002384:	4770      	bx	lr

08002386 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002386:	4770      	bx	lr

08002388 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002388:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800238c:	b12b      	cbz	r3, 800239a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x12>
 800238e:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002390:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002392:	b123      	cbz	r3, 800239e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x16>
 8002394:	6f43      	ldr	r3, [r0, #116]	; 0x74
        borderColor = color;
 8002396:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002398:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 800239a:	6e82      	ldr	r2, [r0, #104]	; 0x68
 800239c:	e7f8      	b.n	8002390 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800239e:	6f03      	ldr	r3, [r0, #112]	; 0x70
 80023a0:	e7f9      	b.n	8002396 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xe>

080023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithOneWildcard wildcardText; ///< The wildcard text
    colortype colorReleased;              ///< The color released
    colortype colorPressed;               ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 80023a2:	b508      	push	{r3, lr}
    {
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80023a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80023a8:	b133      	cbz	r3, 80023b8 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 80023aa:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80023ae:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80023b2:	f7ff ffe9 	bl	8002388 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80023b6:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80023b8:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 80023bc:	e7f7      	b.n	80023ae <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080023be <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023be:	4770      	bx	lr

080023c0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class WildcardTextButtonStyle : public T
 80023c0:	4770      	bx	lr

080023c2 <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80023c2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 80023c4:	68c2      	ldr	r2, [r0, #12]
 80023c6:	6844      	ldr	r4, [r0, #4]
 80023c8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80023ca:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80023cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80023d0:	07d2      	lsls	r2, r2, #31
 80023d2:	bf48      	it	mi
 80023d4:	5962      	ldrmi	r2, [r4, r5]
 80023d6:	689b      	ldr	r3, [r3, #8]
    }
 80023d8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80023da:	bf48      	it	mi
 80023dc:	58d3      	ldrmi	r3, [r2, r3]
 80023de:	4718      	bx	r3

080023e0 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 80023e0:	6843      	ldr	r3, [r0, #4]
 80023e2:	b12b      	cbz	r3, 80023f0 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80023e4:	6883      	ldr	r3, [r0, #8]
 80023e6:	b92b      	cbnz	r3, 80023f4 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80023e8:	68c0      	ldr	r0, [r0, #12]
 80023ea:	f000 0001 	and.w	r0, r0, #1
 80023ee:	4770      	bx	lr
 80023f0:	4618      	mov	r0, r3
 80023f2:	4770      	bx	lr
 80023f4:	2001      	movs	r0, #1
    }
 80023f6:	4770      	bx	lr

080023f8 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        wildcardText.setAlpha(T::getAlpha());
 80023f8:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023fc:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002400:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8002404:	4770      	bx	lr

08002406 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002406:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800240a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800240e:	4770      	bx	lr

08002410 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002410:	b510      	push	{r4, lr}
    }
 8002412:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002414:	4604      	mov	r4, r0
    }
 8002416:	f023 f9a5 	bl	8025764 <_ZdlPvj>
 800241a:	4620      	mov	r0, r4
 800241c:	bd10      	pop	{r4, pc}

0800241e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 800241e:	b510      	push	{r4, lr}
 8002420:	2178      	movs	r1, #120	; 0x78
 8002422:	4604      	mov	r4, r0
 8002424:	f023 f99e 	bl	8025764 <_ZdlPvj>
 8002428:	4620      	mov	r0, r4
 800242a:	bd10      	pop	{r4, pc}

0800242c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class WildcardTextButtonStyle : public T
 800242c:	b510      	push	{r4, lr}
 800242e:	21c0      	movs	r1, #192	; 0xc0
 8002430:	4604      	mov	r4, r0
 8002432:	f023 f997 	bl	8025764 <_ZdlPvj>
 8002436:	4620      	mov	r0, r4
 8002438:	bd10      	pop	{r4, pc}

0800243a <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800243a:	b510      	push	{r4, lr}
 800243c:	2110      	movs	r1, #16
 800243e:	4604      	mov	r4, r0
 8002440:	f023 f990 	bl	8025764 <_ZdlPvj>
 8002444:	4620      	mov	r0, r4
 8002446:	bd10      	pop	{r4, pc}

08002448 <_ZN29CustomContainerButton_keyBaseD0Ev>:
    virtual ~CustomContainerButton_keyBase() {}
 8002448:	b510      	push	{r4, lr}
 800244a:	f44f 718a 	mov.w	r1, #276	; 0x114
 800244e:	4604      	mov	r4, r0
 8002450:	f023 f988 	bl	8025764 <_ZdlPvj>
 8002454:	4620      	mov	r0, r4
 8002456:	bd10      	pop	{r4, pc}

08002458 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002458:	b510      	push	{r4, lr}
 800245a:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 800245c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800245e:	b150      	cbz	r0, 8002476 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002460:	6803      	ldr	r3, [r0, #0]
 8002462:	68db      	ldr	r3, [r3, #12]
 8002464:	4798      	blx	r3
 8002466:	b130      	cbz	r0, 8002476 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002468:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800246a:	6803      	ldr	r3, [r0, #0]
 800246c:	4621      	mov	r1, r4
 800246e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002474:	4718      	bx	r3
    }
 8002476:	bd10      	pop	{r4, pc}

08002478 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

}

void CustomContainerButton_keyBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_keyboard)
 8002478:	f100 032c 	add.w	r3, r0, #44	; 0x2c
 800247c:	428b      	cmp	r3, r1
{
 800247e:	b510      	push	{r4, lr}
 8002480:	4604      	mov	r4, r0
    if (&src == &flexButton_keyboard)
 8002482:	d10a      	bne.n	800249a <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButton_keyboard clicked call virtual function
        //Call functionButtonClick
        functionButtonClick();
 8002484:	6803      	ldr	r3, [r0, #0]
 8002486:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800248a:	4798      	blx	r3

        //Interaction2
        //When flexButton_keyboard clicked emit triggerButton_key callback
        //Emit callback
        emitTriggerButton_keyCallback();
 800248c:	6823      	ldr	r3, [r4, #0]
 800248e:	4620      	mov	r0, r4
 8002490:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
}
 8002494:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        emitTriggerButton_keyCallback();
 8002498:	4718      	bx	r3
}
 800249a:	bd10      	pop	{r4, pc}

0800249c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800249c:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 800249e:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 80024a0:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 80024a4:	4604      	mov	r4, r0
 80024a6:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80024a8:	b99b      	cbnz	r3, 80024d2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80024aa:	b98e      	cbnz	r6, 80024d0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80024ac:	fab3 f383 	clz	r3, r3
 80024b0:	095b      	lsrs	r3, r3, #5
 80024b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 80024b6:	6823      	ldr	r3, [r4, #0]
 80024b8:	4620      	mov	r0, r4
 80024ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80024be:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 80024c0:	6823      	ldr	r3, [r4, #0]
 80024c2:	4620      	mov	r0, r4
 80024c4:	695b      	ldr	r3, [r3, #20]
 80024c6:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80024c8:	b116      	cbz	r6, 80024d0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80024ca:	792b      	ldrb	r3, [r5, #4]
 80024cc:	2b01      	cmp	r3, #1
 80024ce:	d003      	beq.n	80024d8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 80024d0:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80024d2:	2e00      	cmp	r6, #0
 80024d4:	d0fc      	beq.n	80024d0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80024d6:	e7e9      	b.n	80024ac <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80024d8:	6823      	ldr	r3, [r4, #0]
 80024da:	4620      	mov	r0, r4
 80024dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    }
 80024e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80024e4:	4718      	bx	r3
	...

080024e8 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80024e8:	4a07      	ldr	r2, [pc, #28]	; (8002508 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 80024ea:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 80024ec:	2200      	movs	r2, #0
 80024ee:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024f2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80024f6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80024fa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80024fe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002502:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8002504:	4770      	bx	lr
 8002506:	bf00      	nop
 8002508:	0802a5f0 	.word	0x0802a5f0

0800250c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800250c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800250e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002510:	4604      	mov	r4, r0
        setX(x);
 8002512:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002514:	4615      	mov	r5, r2
        setX(x);
 8002516:	4798      	blx	r3
        setY(y);
 8002518:	6823      	ldr	r3, [r4, #0]
 800251a:	4629      	mov	r1, r5
 800251c:	4620      	mov	r0, r4
 800251e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002520:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002524:	4718      	bx	r3
	...

08002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    WildcardTextButtonStyle()
 8002528:	b570      	push	{r4, r5, r6, lr}
 800252a:	4604      	mov	r4, r0
 800252c:	f7ff ffdc 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002530:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8002534:	4626      	mov	r6, r4
 8002536:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002538:	2301      	movs	r3, #1
 800253a:	2500      	movs	r5, #0
 800253c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002540:	4b22      	ldr	r3, [pc, #136]	; (80025cc <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa4>)
 8002542:	62a5      	str	r5, [r4, #40]	; 0x28
 8002544:	6325      	str	r5, [r4, #48]	; 0x30
 8002546:	f846 3b34 	str.w	r3, [r6], #52
        : Widget(), alpha(255), color(0)
 800254a:	2226      	movs	r2, #38	; 0x26
 800254c:	4629      	mov	r1, r5
 800254e:	4630      	mov	r0, r6
 8002550:	f023 fae4 	bl	8025b1c <memset>
class Widget : public Drawable
 8002554:	4630      	mov	r0, r6
 8002556:	f7ff ffc7 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 800255a:	23ff      	movs	r3, #255	; 0xff
 800255c:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
        : Box(), borderColor(0), borderSize(0)
 8002560:	4b1b      	ldr	r3, [pc, #108]	; (80025d0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa8>)
 8002562:	6363      	str	r3, [r4, #52]	; 0x34
        T::add(borderBox);
 8002564:	4631      	mov	r1, r6
 8002566:	4620      	mov	r0, r4
        : T()
 8002568:	4626      	mov	r6, r4
        : color(0)
 800256a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 800256e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002572:	65e5      	str	r5, [r4, #92]	; 0x5c
 8002574:	6625      	str	r5, [r4, #96]	; 0x60
 8002576:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        rect.x = x;
 800257a:	63a5      	str	r5, [r4, #56]	; 0x38
 800257c:	f00f f988 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002580:	4b14      	ldr	r3, [pc, #80]	; (80025d4 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xac>)
 8002582:	f846 3b78 	str.w	r3, [r6], #120
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002586:	2226      	movs	r2, #38	; 0x26
 8002588:	4629      	mov	r1, r5
 800258a:	4630      	mov	r0, r6
 800258c:	f023 fac6 	bl	8025b1c <memset>
 8002590:	4630      	mov	r0, r6
 8002592:	f7ff ffa9 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 8002596:	4b10      	ldr	r3, [pc, #64]	; (80025d8 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb0>)
 8002598:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800259c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025a0:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80025a4:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80025a8:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 80025ac:	4b0b      	ldr	r3, [pc, #44]	; (80025dc <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb4>)
 80025ae:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
        T::add(wildcardText);
 80025b2:	4620      	mov	r0, r4
        : color(0)
 80025b4:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 80025b8:	f8a4 50b0 	strh.w	r5, [r4, #176]	; 0xb0
 80025bc:	67a3      	str	r3, [r4, #120]	; 0x78
 80025be:	f8c4 50bc 	str.w	r5, [r4, #188]	; 0xbc
 80025c2:	4631      	mov	r1, r6
 80025c4:	f00f f964 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80025c8:	4620      	mov	r0, r4
 80025ca:	bd70      	pop	{r4, r5, r6, pc}
 80025cc:	0802751c 	.word	0x0802751c
 80025d0:	0802a200 	.word	0x0802a200
 80025d4:	080275b4 	.word	0x080275b4
 80025d8:	0802750c 	.word	0x0802750c
 80025dc:	0802a0e0 	.word	0x0802a0e0

080025e0 <_ZN29CustomContainerButton_keyBaseC1Ev>:
CustomContainerButton_keyBase::CustomContainerButton_keyBase() :
 80025e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80025e4:	4604      	mov	r4, r0
    triggerButton_keyCallback(0)
 80025e6:	4625      	mov	r5, r4
 80025e8:	f7ff ff7e 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80025ec:	2600      	movs	r6, #0
 80025ee:	4b49      	ldr	r3, [pc, #292]	; (8002714 <_ZN29CustomContainerButton_keyBaseC1Ev+0x134>)
 80025f0:	62a6      	str	r6, [r4, #40]	; 0x28
 80025f2:	f845 3b2c 	str.w	r3, [r5], #44
 80025f6:	4628      	mov	r0, r5
 80025f8:	f7ff ff96 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80025fc:	4b46      	ldr	r3, [pc, #280]	; (8002718 <_ZN29CustomContainerButton_keyBaseC1Ev+0x138>)
 80025fe:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 8002602:	e9c4 3440 	strd	r3, r4, [r4, #256]	; 0x100
 8002606:	4b45      	ldr	r3, [pc, #276]	; (800271c <_ZN29CustomContainerButton_keyBaseC1Ev+0x13c>)
 8002608:	e9c4 3642 	strd	r3, r6, [r4, #264]	; 0x108
        rect.width = width;
 800260c:	f04f 133c 	mov.w	r3, #3932220	; 0x3c003c
 8002610:	60a3      	str	r3, [r4, #8]
        borderBox.setPosition(x, y, width, height);
 8002612:	f104 0060 	add.w	r0, r4, #96	; 0x60
        setXY(x, y);
 8002616:	4632      	mov	r2, r6
 8002618:	4631      	mov	r1, r6
 800261a:	9001      	str	r0, [sp, #4]
 800261c:	f7ff ff76 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8002620:	223c      	movs	r2, #60	; 0x3c
 8002622:	4611      	mov	r1, r2
 8002624:	9801      	ldr	r0, [sp, #4]
 8002626:	f7ff fdde 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        borderSize = size;
 800262a:	2301      	movs	r3, #1
 800262c:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        up = colorReleased;
 8002630:	f1a3 1365 	sub.w	r3, r3, #6619237	; 0x650065
 8002634:	f5a3 43c8 	sub.w	r3, r3, #25600	; 0x6400
 8002638:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        down = colorPressed;
 800263c:	f103 1335 	add.w	r3, r3, #3473461	; 0x350035
 8002640:	f503 5358 	add.w	r3, r3, #13824	; 0x3600
 8002644:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        borderUp = borderColorReleased;
 8002648:	4b35      	ldr	r3, [pc, #212]	; (8002720 <_ZN29CustomContainerButton_keyBaseC1Ev+0x140>)
 800264a:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
 800264e:	f503 2342 	add.w	r3, r3, #794624	; 0xc2000
 8002652:	f203 2339 	addw	r3, r3, #569	; 0x239
 8002656:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
        handlePressedUpdated();
 800265a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800265c:	4628      	mov	r0, r5
 800265e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002662:	4798      	blx	r3
        wildcardText.setTypedText(t);
 8002664:	f104 07a4 	add.w	r7, r4, #164	; 0xa4
 8002668:	4b2e      	ldr	r3, [pc, #184]	; (8002724 <_ZN29CustomContainerButton_keyBaseC1Ev+0x144>)
 800266a:	9302      	str	r3, [sp, #8]
 800266c:	a902      	add	r1, sp, #8
 800266e:	2313      	movs	r3, #19
 8002670:	4638      	mov	r0, r7
 8002672:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002676:	f010 fea2 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 800267a:	f9b4 3036 	ldrsh.w	r3, [r4, #54]	; 0x36
        rect.height = height;
 800267e:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002682:	4b29      	ldr	r3, [pc, #164]	; (8002728 <_ZN29CustomContainerButton_keyBaseC1Ev+0x148>)
        rect.width = width;
 8002684:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	f8a4 20ac 	strh.w	r2, [r4, #172]	; 0xac
    Unicode::snprintf(flexButton_keyboardBuffer, FLEXBUTTON_KEYBOARD_SIZE, "%s", TypedText(T_RESOURCEID11).getText());
 800268c:	f104 08ec 	add.w	r8, r4, #236	; 0xec
 8002690:	b92b      	cbnz	r3, 800269e <_ZN29CustomContainerButton_keyBaseC1Ev+0xbe>
 8002692:	4b26      	ldr	r3, [pc, #152]	; (800272c <_ZN29CustomContainerButton_keyBaseC1Ev+0x14c>)
 8002694:	4a26      	ldr	r2, [pc, #152]	; (8002730 <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 8002696:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002698:	4826      	ldr	r0, [pc, #152]	; (8002734 <_ZN29CustomContainerButton_keyBaseC1Ev+0x154>)
 800269a:	f023 f891 	bl	80257c0 <__assert_func>
 800269e:	4b26      	ldr	r3, [pc, #152]	; (8002738 <_ZN29CustomContainerButton_keyBaseC1Ev+0x158>)
 80026a0:	881b      	ldrh	r3, [r3, #0]
 80026a2:	2b14      	cmp	r3, #20
 80026a4:	d803      	bhi.n	80026ae <_ZN29CustomContainerButton_keyBaseC1Ev+0xce>
 80026a6:	4b25      	ldr	r3, [pc, #148]	; (800273c <_ZN29CustomContainerButton_keyBaseC1Ev+0x15c>)
 80026a8:	4a21      	ldr	r2, [pc, #132]	; (8002730 <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 80026aa:	21af      	movs	r1, #175	; 0xaf
 80026ac:	e7f4      	b.n	8002698 <_ZN29CustomContainerButton_keyBaseC1Ev+0xb8>
        return texts->getText(typedTextId);
 80026ae:	4b24      	ldr	r3, [pc, #144]	; (8002740 <_ZN29CustomContainerButton_keyBaseC1Ev+0x160>)
 80026b0:	2114      	movs	r1, #20
 80026b2:	6818      	ldr	r0, [r3, #0]
 80026b4:	f005 f91c 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80026b8:	4a22      	ldr	r2, [pc, #136]	; (8002744 <_ZN29CustomContainerButton_keyBaseC1Ev+0x164>)
 80026ba:	4603      	mov	r3, r0
 80026bc:	210a      	movs	r1, #10
 80026be:	4640      	mov	r0, r8
 80026c0:	f016 ff14 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        setXY(x, y);
 80026c4:	4631      	mov	r1, r6
 80026c6:	4638      	mov	r0, r7
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 80026c8:	f8c4 80e0 	str.w	r8, [r4, #224]	; 0xe0
 80026cc:	2212      	movs	r2, #18
 80026ce:	f7ff ff1d 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80026d2:	223c      	movs	r2, #60	; 0x3c
 80026d4:	4611      	mov	r1, r2
 80026d6:	4638      	mov	r0, r7
 80026d8:	f7ff fd85 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 80026dc:	4b1a      	ldr	r3, [pc, #104]	; (8002748 <_ZN29CustomContainerButton_keyBaseC1Ev+0x168>)
        handlePressedUpdated();
 80026de:	4628      	mov	r0, r5
        colorPressed = newColorPressed;
 80026e0:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
        handlePressedUpdated();
 80026e4:	f7ff fe5d 	bl	80023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 80026e8:	4632      	mov	r2, r6
 80026ea:	4631      	mov	r1, r6
 80026ec:	4628      	mov	r0, r5
 80026ee:	f7ff ff0d 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80026f2:	223c      	movs	r2, #60	; 0x3c
 80026f4:	4611      	mov	r1, r2
 80026f6:	4628      	mov	r0, r5
 80026f8:	f7ff fd75 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_keyboard.setAction(flexButtonCallback);
 80026fc:	f504 7380 	add.w	r3, r4, #256	; 0x100
    add(flexButton_keyboard);
 8002700:	4620      	mov	r0, r4
        action = &callback;
 8002702:	65e3      	str	r3, [r4, #92]	; 0x5c
 8002704:	4629      	mov	r1, r5
 8002706:	f00f f8c3 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800270a:	4620      	mov	r0, r4
 800270c:	b004      	add	sp, #16
 800270e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002712:	bf00      	nop
 8002714:	08027664 	.word	0x08027664
 8002718:	0802764c 	.word	0x0802764c
 800271c:	08002479 	.word	0x08002479
 8002720:	ff626363 	.word	0xff626363
 8002724:	0802750c 	.word	0x0802750c
 8002728:	20027a00 	.word	0x20027a00
 800272c:	080273f8 	.word	0x080273f8
 8002730:	0802743a 	.word	0x0802743a
 8002734:	08027468 	.word	0x08027468
 8002738:	20027a04 	.word	0x20027a04
 800273c:	080274af 	.word	0x080274af
 8002740:	20027a0c 	.word	0x20027a0c
 8002744:	08027501 	.word	0x08027501
 8002748:	ff0a0a0a 	.word	0xff0a0a0a

0800274c <_ZN27CustomContainerKeyboardBaseD1Ev>:

class CustomContainerKeyboardBase : public touchgfx::Container
{
public:
    CustomContainerKeyboardBase();
    virtual ~CustomContainerKeyboardBase() {}
 800274c:	4770      	bx	lr

0800274e <_ZN27CustomContainerKeyboardBase17ClickButtonDelPreEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 800274e:	4770      	bx	lr

08002750 <_ZN27CustomContainerKeyboardBase17ClickButtonDelAllEv>:

    virtual void ClickButtonDelAll()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002750:	4770      	bx	lr

08002752 <_ZN27CustomContainerKeyboardBase16ClickButtonShiftEv>:

    virtual void ClickButtonShift()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002752:	4770      	bx	lr

08002754 <_ZN27CustomContainerKeyboardBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002754:	4770      	bx	lr

08002756 <_ZN27CustomContainerKeyboardBase19ClickButtonLanguageEv>:

    virtual void ClickButtonLanguage()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002756:	4770      	bx	lr

08002758 <_ZN27CustomContainerKeyboardBase16ClickButtonSpaceEv>:

    virtual void ClickButtonSpace()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002758:	4770      	bx	lr

0800275a <_ZN27CustomContainerKeyboardBase16ClickButtonEnterEv>:

    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 800275a:	4770      	bx	lr

0800275c <_ZN27CustomContainerKeyboardBase17ClickButtonABC123Ev>:

    virtual void ClickButtonABC123()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 800275c:	4770      	bx	lr

0800275e <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboardCallback()
 800275e:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 8002760:	f642 45e4 	movw	r5, #11492	; 0x2ce4
    virtual void emitTriggerKeyboardCallback()
 8002764:	4604      	mov	r4, r0
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 8002766:	5940      	ldr	r0, [r0, r5]
 8002768:	b148      	cbz	r0, 800277e <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
 800276a:	6803      	ldr	r3, [r0, #0]
 800276c:	68db      	ldr	r3, [r3, #12]
 800276e:	4798      	blx	r3
 8002770:	b128      	cbz	r0, 800277e <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
        {
            this->triggerKeyboardCallback->execute();
 8002772:	5960      	ldr	r0, [r4, r5]
 8002774:	6803      	ldr	r3, [r0, #0]
        }
    }
 8002776:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboardCallback->execute();
 800277a:	689b      	ldr	r3, [r3, #8]
 800277c:	4718      	bx	r3
    }
 800277e:	bd70      	pop	{r4, r5, r6, pc}

08002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboardBase::customContainer1TriggerButton_keyCallbackHandler()
{
    //Interaction8
    //When customContainer1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
 8002780:	6803      	ldr	r3, [r0, #0]
 8002782:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002786:	4718      	bx	r3

08002788 <_ZN27CustomContainerKeyboardBase48customContainer2TriggerButton_keyCallbackHandlerEv>:
 8002788:	f7ff bffa 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800278c <_ZN27CustomContainerKeyboardBase48customContainer3TriggerButton_keyCallbackHandlerEv>:
 800278c:	f7ff bff8 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002790 <_ZN27CustomContainerKeyboardBase48customContainer4TriggerButton_keyCallbackHandlerEv>:
 8002790:	f7ff bff6 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002794 <_ZN27CustomContainerKeyboardBase48customContainer5TriggerButton_keyCallbackHandlerEv>:
 8002794:	f7ff bff4 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002798 <_ZN27CustomContainerKeyboardBase48customContainer6TriggerButton_keyCallbackHandlerEv>:
 8002798:	f7ff bff2 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800279c <_ZN27CustomContainerKeyboardBase48customContainer7TriggerButton_keyCallbackHandlerEv>:
 800279c:	f7ff bff0 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027a0 <_ZN27CustomContainerKeyboardBase48customContainer8TriggerButton_keyCallbackHandlerEv>:
 80027a0:	f7ff bfee 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027a4 <_ZN27CustomContainerKeyboardBase48customContainer9TriggerButton_keyCallbackHandlerEv>:
 80027a4:	f7ff bfec 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027a8 <_ZN27CustomContainerKeyboardBase49customContainer10TriggerButton_keyCallbackHandlerEv>:
 80027a8:	f7ff bfea 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027ac <_ZN27CustomContainerKeyboardBase49customContainer11TriggerButton_keyCallbackHandlerEv>:
 80027ac:	f7ff bfe8 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027b0 <_ZN27CustomContainerKeyboardBase49customContainer12TriggerButton_keyCallbackHandlerEv>:
 80027b0:	f7ff bfe6 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027b4 <_ZN27CustomContainerKeyboardBase50customContainer1_1TriggerButton_keyCallbackHandlerEv>:
 80027b4:	f7ff bfe4 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027b8 <_ZN27CustomContainerKeyboardBase50customContainer2_1TriggerButton_keyCallbackHandlerEv>:
 80027b8:	f7ff bfe2 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027bc <_ZN27CustomContainerKeyboardBase50customContainer3_1TriggerButton_keyCallbackHandlerEv>:
 80027bc:	f7ff bfe0 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027c0 <_ZN27CustomContainerKeyboardBase50customContainer4_1TriggerButton_keyCallbackHandlerEv>:
 80027c0:	f7ff bfde 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027c4 <_ZN27CustomContainerKeyboardBase50customContainer5_1TriggerButton_keyCallbackHandlerEv>:
 80027c4:	f7ff bfdc 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027c8 <_ZN27CustomContainerKeyboardBase50customContainer6_1TriggerButton_keyCallbackHandlerEv>:
 80027c8:	f7ff bfda 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027cc <_ZN27CustomContainerKeyboardBase50customContainer7_1TriggerButton_keyCallbackHandlerEv>:
 80027cc:	f7ff bfd8 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027d0 <_ZN27CustomContainerKeyboardBase50customContainer8_1TriggerButton_keyCallbackHandlerEv>:
 80027d0:	f7ff bfd6 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027d4 <_ZN27CustomContainerKeyboardBase50customContainer9_1TriggerButton_keyCallbackHandlerEv>:
 80027d4:	f7ff bfd4 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027d8 <_ZN27CustomContainerKeyboardBase51customContainer10_1TriggerButton_keyCallbackHandlerEv>:
 80027d8:	f7ff bfd2 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027dc <_ZN27CustomContainerKeyboardBase50customContainer1_2TriggerButton_keyCallbackHandlerEv>:
 80027dc:	f7ff bfd0 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027e0 <_ZN27CustomContainerKeyboardBase50customContainer2_2TriggerButton_keyCallbackHandlerEv>:
 80027e0:	f7ff bfce 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027e4 <_ZN27CustomContainerKeyboardBase50customContainer3_2TriggerButton_keyCallbackHandlerEv>:
 80027e4:	f7ff bfcc 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027e8 <_ZN27CustomContainerKeyboardBase50customContainer4_2TriggerButton_keyCallbackHandlerEv>:
 80027e8:	f7ff bfca 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027ec <_ZN27CustomContainerKeyboardBase50customContainer5_2TriggerButton_keyCallbackHandlerEv>:
 80027ec:	f7ff bfc8 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027f0 <_ZN27CustomContainerKeyboardBase50customContainer6_2TriggerButton_keyCallbackHandlerEv>:
 80027f0:	f7ff bfc6 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027f4 <_ZN27CustomContainerKeyboardBase50customContainer7_2TriggerButton_keyCallbackHandlerEv>:
 80027f4:	f7ff bfc4 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027f8 <_ZN27CustomContainerKeyboardBase50customContainer8_2TriggerButton_keyCallbackHandlerEv>:
 80027f8:	f7ff bfc2 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027fc <_ZN27CustomContainerKeyboardBase50customContainer9_2TriggerButton_keyCallbackHandlerEv>:
 80027fc:	f7ff bfc0 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002800 <_ZN27CustomContainerKeyboardBase51customContainer10_2TriggerButton_keyCallbackHandlerEv>:
 8002800:	f7ff bfbe 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002804 <_ZN27CustomContainerKeyboardBase51customContainer11_1TriggerButton_keyCallbackHandlerEv>:
 8002804:	f7ff bfbc 	b.w	8002780 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002808 <_ZN27CustomContainerKeyboardBase7action1Ev>:
}

void CustomContainerKeyboardBase::action1()
{

}
 8002808:	4770      	bx	lr

0800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800280a:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 800280c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002810:	b133      	cbz	r3, 8002820 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8002812:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
        this->color = color;
 8002816:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 800281a:	f7ff fdb5 	bl	8002388 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800281e:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002820:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 8002824:	e7f7      	b.n	8002816 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002826 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002826:	4770      	bx	lr

08002828 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002828:	4770      	bx	lr

0800282a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 800282a:	4770      	bx	lr

0800282c <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800282c:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800282e:	68c2      	ldr	r2, [r0, #12]
 8002830:	6841      	ldr	r1, [r0, #4]
 8002832:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002834:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002836:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800283a:	07d2      	lsls	r2, r2, #31
 800283c:	bf48      	it	mi
 800283e:	590a      	ldrmi	r2, [r1, r4]
 8002840:	689b      	ldr	r3, [r3, #8]
    }
 8002842:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002846:	bf48      	it	mi
 8002848:	58d3      	ldrmi	r3, [r2, r3]
 800284a:	4718      	bx	r3

0800284c <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800284c:	6843      	ldr	r3, [r0, #4]
 800284e:	b12b      	cbz	r3, 800285c <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x10>
 8002850:	6883      	ldr	r3, [r0, #8]
 8002852:	b92b      	cbnz	r3, 8002860 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x14>
 8002854:	68c0      	ldr	r0, [r0, #12]
 8002856:	f000 0001 	and.w	r0, r0, #1
 800285a:	4770      	bx	lr
 800285c:	4618      	mov	r0, r3
 800285e:	4770      	bx	lr
 8002860:	2001      	movs	r0, #1
    }
 8002862:	4770      	bx	lr

08002864 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002864:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002866:	68c2      	ldr	r2, [r0, #12]
 8002868:	6844      	ldr	r4, [r0, #4]
 800286a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800286c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800286e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002872:	07d2      	lsls	r2, r2, #31
 8002874:	bf48      	it	mi
 8002876:	5962      	ldrmi	r2, [r4, r5]
 8002878:	689b      	ldr	r3, [r3, #8]
    }
 800287a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800287c:	bf48      	it	mi
 800287e:	58d3      	ldrmi	r3, [r2, r3]
 8002880:	4718      	bx	r3

08002882 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002882:	6843      	ldr	r3, [r0, #4]
 8002884:	b12b      	cbz	r3, 8002892 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002886:	6883      	ldr	r3, [r0, #8]
 8002888:	b92b      	cbnz	r3, 8002896 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800288a:	68c0      	ldr	r0, [r0, #12]
 800288c:	f000 0001 	and.w	r0, r0, #1
 8002890:	4770      	bx	lr
 8002892:	4618      	mov	r0, r3
 8002894:	4770      	bx	lr
 8002896:	2001      	movs	r0, #1
    }
 8002898:	4770      	bx	lr

0800289a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 800289a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 800289e:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 80028a2:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 80028a6:	4770      	bx	lr

080028a8 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80028a8:	b510      	push	{r4, lr}
 80028aa:	2110      	movs	r1, #16
 80028ac:	4604      	mov	r4, r0
 80028ae:	f022 ff59 	bl	8025764 <_ZdlPvj>
 80028b2:	4620      	mov	r0, r4
 80028b4:	bd10      	pop	{r4, pc}

080028b6 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028b6:	b510      	push	{r4, lr}
 80028b8:	2110      	movs	r1, #16
 80028ba:	4604      	mov	r4, r0
 80028bc:	f022 ff52 	bl	8025764 <_ZdlPvj>
 80028c0:	4620      	mov	r0, r4
 80028c2:	bd10      	pop	{r4, pc}

080028c4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 80028c4:	b510      	push	{r4, lr}
 80028c6:	21bc      	movs	r1, #188	; 0xbc
 80028c8:	4604      	mov	r4, r0
 80028ca:	f022 ff4b 	bl	8025764 <_ZdlPvj>
 80028ce:	4620      	mov	r0, r4
 80028d0:	bd10      	pop	{r4, pc}

080028d2 <_ZN27CustomContainerKeyboardBaseD0Ev>:
    virtual ~CustomContainerKeyboardBase() {}
 80028d2:	b510      	push	{r4, lr}
 80028d4:	f642 41e8 	movw	r1, #11496	; 0x2ce8
 80028d8:	4604      	mov	r4, r0
 80028da:	f022 ff43 	bl	8025764 <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}

080028e2 <_ZN27CustomContainerKeyboardBase10initializeEv>:
{
 80028e2:	b510      	push	{r4, lr}
 80028e4:	4604      	mov	r4, r0
    customContainer1.initialize();
 80028e6:	3060      	adds	r0, #96	; 0x60
 80028e8:	f005 f98c 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2.initialize();
 80028ec:	f504 70ba 	add.w	r0, r4, #372	; 0x174
 80028f0:	f005 f988 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3.initialize();
 80028f4:	f504 7022 	add.w	r0, r4, #648	; 0x288
 80028f8:	f005 f984 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4.initialize();
 80028fc:	f504 7067 	add.w	r0, r4, #924	; 0x39c
 8002900:	f005 f980 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5.initialize();
 8002904:	f504 6096 	add.w	r0, r4, #1200	; 0x4b0
 8002908:	f005 f97c 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6.initialize();
 800290c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8002910:	f005 f978 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7.initialize();
 8002914:	f504 60db 	add.w	r0, r4, #1752	; 0x6d8
 8002918:	f005 f974 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8.initialize();
 800291c:	f204 70ec 	addw	r0, r4, #2028	; 0x7ec
 8002920:	f005 f970 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9.initialize();
 8002924:	f504 6010 	add.w	r0, r4, #2304	; 0x900
 8002928:	f005 f96c 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10.initialize();
 800292c:	f604 2014 	addw	r0, r4, #2580	; 0xa14
 8002930:	f005 f968 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_1.initialize();
 8002934:	f604 3028 	addw	r0, r4, #2856	; 0xb28
 8002938:	f005 f964 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_1.initialize();
 800293c:	f604 403c 	addw	r0, r4, #3132	; 0xc3c
 8002940:	f005 f960 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_1.initialize();
 8002944:	f504 6055 	add.w	r0, r4, #3408	; 0xd50
 8002948:	f005 f95c 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_1.initialize();
 800294c:	f604 6064 	addw	r0, r4, #3684	; 0xe64
 8002950:	f005 f958 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_1.initialize();
 8002954:	f604 7078 	addw	r0, r4, #3960	; 0xf78
 8002958:	f005 f954 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_1.initialize();
 800295c:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8002960:	300c      	adds	r0, #12
 8002962:	f005 f94f 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_1.initialize();
 8002966:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 800296a:	f005 f94b 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_1.initialize();
 800296e:	f504 5095 	add.w	r0, r4, #4768	; 0x12a0
 8002972:	3014      	adds	r0, #20
 8002974:	f005 f946 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_1.initialize();
 8002978:	f504 509e 	add.w	r0, r4, #5056	; 0x13c0
 800297c:	3008      	adds	r0, #8
 800297e:	f005 f941 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_1.initialize();
 8002982:	f504 50a6 	add.w	r0, r4, #5312	; 0x14c0
 8002986:	301c      	adds	r0, #28
 8002988:	f005 f93c 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_2.initialize();
 800298c:	f504 50af 	add.w	r0, r4, #5600	; 0x15e0
 8002990:	3010      	adds	r0, #16
 8002992:	f005 f937 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_2.initialize();
 8002996:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 800299a:	3004      	adds	r0, #4
 800299c:	f005 f932 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_2.initialize();
 80029a0:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 80029a4:	3018      	adds	r0, #24
 80029a6:	f005 f92d 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_2.initialize();
 80029aa:	f504 50c9 	add.w	r0, r4, #6432	; 0x1920
 80029ae:	300c      	adds	r0, #12
 80029b0:	f005 f928 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_2.initialize();
 80029b4:	f504 50d2 	add.w	r0, r4, #6720	; 0x1a40
 80029b8:	f005 f924 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_2.initialize();
 80029bc:	f504 50da 	add.w	r0, r4, #6976	; 0x1b40
 80029c0:	3014      	adds	r0, #20
 80029c2:	f005 f91f 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_2.initialize();
 80029c6:	f504 50e3 	add.w	r0, r4, #7264	; 0x1c60
 80029ca:	3008      	adds	r0, #8
 80029cc:	f005 f91a 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_2.initialize();
 80029d0:	f504 50eb 	add.w	r0, r4, #7520	; 0x1d60
 80029d4:	301c      	adds	r0, #28
 80029d6:	f005 f915 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_2.initialize();
 80029da:	f504 50f4 	add.w	r0, r4, #7808	; 0x1e80
 80029de:	3010      	adds	r0, #16
 80029e0:	f005 f910 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_2.initialize();
 80029e4:	f504 50fd 	add.w	r0, r4, #8096	; 0x1fa0
 80029e8:	3004      	adds	r0, #4
 80029ea:	f005 f90b 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11_1.initialize();
 80029ee:	f504 500c 	add.w	r0, r4, #8960	; 0x2300
 80029f2:	3034      	adds	r0, #52	; 0x34
 80029f4:	f005 f906 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11.initialize();
 80029f8:	f504 5011 	add.w	r0, r4, #9280	; 0x2440
 80029fc:	3008      	adds	r0, #8
 80029fe:	f005 f901 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer12.initialize();
 8002a02:	f504 5015 	add.w	r0, r4, #9536	; 0x2540
 8002a06:	301c      	adds	r0, #28
}
 8002a08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainer12.initialize();
 8002a0c:	f005 b8fa 	b.w	8007c04 <_ZN25CustomContainerButton_key10initializeEv>

08002a10 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboardBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_enter)
 8002a10:	f500 5303 	add.w	r3, r0, #8384	; 0x20c0
 8002a14:	3338      	adds	r3, #56	; 0x38
 8002a16:	4299      	cmp	r1, r3
{
 8002a18:	b510      	push	{r4, lr}
 8002a1a:	4604      	mov	r4, r0
    if (&src == &flexButton_enter)
 8002a1c:	d10a      	bne.n	8002a34 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //ClickButtonEnter
        //When flexButton_enter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 8002a1e:	6803      	ldr	r3, [r0, #0]
 8002a20:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8002a24:	4798      	blx	r3

        //Interaction42
        //When flexButton_enter clicked emit triggerKeyboard callback
        //Emit callback
        emitTriggerKeyboardCallback();
 8002a26:	6823      	ldr	r3, [r4, #0]
 8002a28:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8002a2c:	4620      	mov	r0, r4
        //Interaction43
        //When flexButton_ABC_123 clicked call virtual function
        //Call ClickButtonABC123
        ClickButtonABC123();
    }
}
 8002a2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonABC123();
 8002a32:	4718      	bx	r3
    else if (&src == &flexButton_space)
 8002a34:	f500 5306 	add.w	r3, r0, #8576	; 0x2180
 8002a38:	3334      	adds	r3, #52	; 0x34
 8002a3a:	4299      	cmp	r1, r3
 8002a3c:	d103      	bne.n	8002a46 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        ClickButtonSpace();
 8002a3e:	6803      	ldr	r3, [r0, #0]
 8002a40:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8002a44:	e7f3      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_language)
 8002a46:	f500 5309 	add.w	r3, r0, #8768	; 0x2240
 8002a4a:	3334      	adds	r3, #52	; 0x34
 8002a4c:	4299      	cmp	r1, r3
 8002a4e:	d103      	bne.n	8002a58 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x48>
        ClickButtonLanguage();
 8002a50:	6803      	ldr	r3, [r0, #0]
 8002a52:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8002a56:	e7ea      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_close)
 8002a58:	f500 5319 	add.w	r3, r0, #9792	; 0x2640
 8002a5c:	3330      	adds	r3, #48	; 0x30
 8002a5e:	4299      	cmp	r1, r3
 8002a60:	d103      	bne.n	8002a6a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
        ClickButtonCloseKeyboard();
 8002a62:	6803      	ldr	r3, [r0, #0]
 8002a64:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002a68:	e7e1      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_shift)
 8002a6a:	f500 531c 	add.w	r3, r0, #9984	; 0x2700
 8002a6e:	3330      	adds	r3, #48	; 0x30
 8002a70:	4299      	cmp	r1, r3
 8002a72:	d103      	bne.n	8002a7c <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6c>
        ClickButtonShift();
 8002a74:	6803      	ldr	r3, [r0, #0]
 8002a76:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002a7a:	e7d8      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_all)
 8002a7c:	f500 531f 	add.w	r3, r0, #10176	; 0x27c0
 8002a80:	332c      	adds	r3, #44	; 0x2c
 8002a82:	4299      	cmp	r1, r3
 8002a84:	d103      	bne.n	8002a8e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7e>
        ClickButtonDelAll();
 8002a86:	6803      	ldr	r3, [r0, #0]
 8002a88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a8c:	e7cf      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_pre)
 8002a8e:	f500 5322 	add.w	r3, r0, #10368	; 0x2880
 8002a92:	3328      	adds	r3, #40	; 0x28
 8002a94:	4299      	cmp	r1, r3
 8002a96:	d103      	bne.n	8002aa0 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>
        ClickButtonDelPre();
 8002a98:	6803      	ldr	r3, [r0, #0]
 8002a9a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002a9e:	e7c6      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_ABC_123)
 8002aa0:	f500 5325 	add.w	r3, r0, #10560	; 0x2940
 8002aa4:	3324      	adds	r3, #36	; 0x24
 8002aa6:	4299      	cmp	r1, r3
 8002aa8:	d103      	bne.n	8002ab2 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
        ClickButtonABC123();
 8002aaa:	6803      	ldr	r3, [r0, #0]
 8002aac:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8002ab0:	e7bd      	b.n	8002a2e <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
}
 8002ab2:	bd10      	pop	{r4, pc}

08002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002ab4:	b538      	push	{r3, r4, r5, lr}
 8002ab6:	4604      	mov	r4, r0
 8002ab8:	461d      	mov	r5, r3
        setXY(x, y);
 8002aba:	f7ff fd27 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8002abe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8002ac2:	4629      	mov	r1, r5
 8002ac4:	4620      	mov	r0, r4
 8002ac6:	f7ff fb8e 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002aca:	bd38      	pop	{r3, r4, r5, pc}

08002acc <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002acc:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002ace:	2226      	movs	r2, #38	; 0x26
    Box()
 8002ad0:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002ad2:	2100      	movs	r1, #0
 8002ad4:	f023 f822 	bl	8025b1c <memset>
 8002ad8:	4620      	mov	r0, r4
 8002ada:	f7ff fd05 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8002ade:	4b04      	ldr	r3, [pc, #16]	; (8002af0 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002ae0:	6023      	str	r3, [r4, #0]
 8002ae2:	23ff      	movs	r3, #255	; 0xff
 8002ae4:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002ae8:	2300      	movs	r3, #0
 8002aea:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002aec:	4620      	mov	r0, r4
 8002aee:	bd10      	pop	{r4, pc}
 8002af0:	08029f74 	.word	0x08029f74

08002af4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002af4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002af6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002af8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002afa:	2100      	movs	r1, #0
 8002afc:	f023 f80e 	bl	8025b1c <memset>
 8002b00:	4620      	mov	r0, r4
 8002b02:	f7ff fcf1 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8002b06:	4b07      	ldr	r3, [pc, #28]	; (8002b24 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 8002b08:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002b0a:	4b07      	ldr	r3, [pc, #28]	; (8002b28 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 8002b0c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b0e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b12:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002b14:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002b18:	2300      	movs	r3, #0
 8002b1a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002b1e:	8723      	strh	r3, [r4, #56]	; 0x38
    }
 8002b20:	4620      	mov	r0, r4
 8002b22:	bd10      	pop	{r4, pc}
 8002b24:	08029ecc 	.word	0x08029ecc
 8002b28:	0802750c 	.word	0x0802750c

08002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002b2c:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002b2e:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002b30:	9b01      	ldr	r3, [sp, #4]
 8002b32:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002b34:	6803      	ldr	r3, [r0, #0]
    }
 8002b36:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002b3a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        down = colorPressed;
 8002b3e:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002b42:	4718      	bx	r3

08002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>:
    void setText(TypedText t)
 8002b44:	b513      	push	{r0, r1, r4, lr}
 8002b46:	4604      	mov	r4, r0
        text.setTypedText(t);
 8002b48:	3078      	adds	r0, #120	; 0x78
 8002b4a:	9001      	str	r0, [sp, #4]
 8002b4c:	f010 fc37 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8002b50:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8002b54:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8002b58:	9801      	ldr	r0, [sp, #4]
 8002b5a:	f7ff fb44 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002b5e:	b002      	add	sp, #8
 8002b60:	bd10      	pop	{r4, pc}

08002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>:
    void setWildcardText(TypedText t)
 8002b62:	b513      	push	{r0, r1, r4, lr}
 8002b64:	4604      	mov	r4, r0
        wildcardText.setTypedText(t);
 8002b66:	3078      	adds	r0, #120	; 0x78
 8002b68:	9001      	str	r0, [sp, #4]
 8002b6a:	f010 fc28 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8002b6e:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8002b72:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8002b76:	9801      	ldr	r0, [sp, #4]
 8002b78:	f7ff fb35 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002b7c:	b002      	add	sp, #8
 8002b7e:	bd10      	pop	{r4, pc}

08002b80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 8002b80:	b570      	push	{r4, r5, r6, lr}
 8002b82:	4604      	mov	r4, r0
 8002b84:	f7ff fcb0 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002b88:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8002b8c:	4626      	mov	r6, r4
 8002b8e:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002b90:	2301      	movs	r3, #1
 8002b92:	2500      	movs	r5, #0
 8002b94:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002b98:	4b0d      	ldr	r3, [pc, #52]	; (8002bd0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 8002b9a:	62a5      	str	r5, [r4, #40]	; 0x28
 8002b9c:	6325      	str	r5, [r4, #48]	; 0x30
 8002b9e:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002ba2:	4630      	mov	r0, r6
 8002ba4:	f7ff ff92 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 8002ba8:	4b0a      	ldr	r3, [pc, #40]	; (8002bd4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
 8002baa:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002bac:	462a      	mov	r2, r5
 8002bae:	4629      	mov	r1, r5
 8002bb0:	4630      	mov	r0, r6
        : color(0)
 8002bb2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002bb6:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002bba:	6625      	str	r5, [r4, #96]	; 0x60
 8002bbc:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002bc0:	f7ff fca4 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002bc4:	4620      	mov	r0, r4
 8002bc6:	4631      	mov	r1, r6
 8002bc8:	f00e fe62 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002bcc:	4620      	mov	r0, r4
 8002bce:	bd70      	pop	{r4, r5, r6, pc}
 8002bd0:	0802751c 	.word	0x0802751c
 8002bd4:	0802a200 	.word	0x0802a200

08002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 8002bd8:	b538      	push	{r3, r4, r5, lr}
 8002bda:	4604      	mov	r4, r0
        : T()
 8002bdc:	4625      	mov	r5, r4
 8002bde:	f7ff ffcf 	bl	8002b80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002be2:	4b07      	ldr	r3, [pc, #28]	; (8002c00 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x28>)
 8002be4:	f845 3b78 	str.w	r3, [r5], #120
 8002be8:	4628      	mov	r0, r5
 8002bea:	f7ff ff83 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
        : color(0)
 8002bee:	2300      	movs	r3, #0
        T::add(text);
 8002bf0:	4620      	mov	r0, r4
 8002bf2:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
 8002bf6:	4629      	mov	r1, r5
 8002bf8:	f00e fe4a 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002bfc:	4620      	mov	r0, r4
 8002bfe:	bd38      	pop	{r3, r4, r5, pc}
 8002c00:	08027700 	.word	0x08027700

08002c04 <_ZN27CustomContainerKeyboardBaseC1Ev>:
CustomContainerKeyboardBase::CustomContainerKeyboardBase() :
 8002c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c08:	ed2d 8b10 	vpush	{d8-d15}
 8002c0c:	4604      	mov	r4, r0
 8002c0e:	b0bd      	sub	sp, #244	; 0xf4
 8002c10:	f7ff fc6a 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
    triggerKeyboardCallback(0)
 8002c14:	4622      	mov	r2, r4
 8002c16:	2500      	movs	r5, #0
 8002c18:	4bd4      	ldr	r3, [pc, #848]	; (8002f6c <_ZN27CustomContainerKeyboardBaseC1Ev+0x368>)
 8002c1a:	62a5      	str	r5, [r4, #40]	; 0x28
 8002c1c:	f842 3b2c 	str.w	r3, [r2], #44
 8002c20:	4610      	mov	r0, r2
 8002c22:	ee0a 2a90 	vmov	s21, r2
 8002c26:	f7ff ff51 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 8002c2a:	4bd1      	ldr	r3, [pc, #836]	; (8002f70 <_ZN27CustomContainerKeyboardBaseC1Ev+0x36c>)
 8002c2c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002c2e:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8002c32:	4618      	mov	r0, r3
        : color(col)
 8002c34:	65a5      	str	r5, [r4, #88]	; 0x58
 8002c36:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8002c3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8002c3c:	f004 ffec 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c40:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8002c44:	4618      	mov	r0, r3
 8002c46:	930c      	str	r3, [sp, #48]	; 0x30
 8002c48:	f004 ffe6 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c4c:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002c50:	4618      	mov	r0, r3
 8002c52:	930d      	str	r3, [sp, #52]	; 0x34
 8002c54:	f004 ffe0 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c58:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 8002c5c:	4618      	mov	r0, r3
 8002c5e:	930e      	str	r3, [sp, #56]	; 0x38
 8002c60:	f004 ffda 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c64:	f504 6396 	add.w	r3, r4, #1200	; 0x4b0
 8002c68:	4618      	mov	r0, r3
 8002c6a:	930f      	str	r3, [sp, #60]	; 0x3c
 8002c6c:	f004 ffd4 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c70:	f204 53c4 	addw	r3, r4, #1476	; 0x5c4
 8002c74:	4618      	mov	r0, r3
 8002c76:	9310      	str	r3, [sp, #64]	; 0x40
 8002c78:	f004 ffce 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c7c:	f504 63db 	add.w	r3, r4, #1752	; 0x6d8
 8002c80:	4618      	mov	r0, r3
 8002c82:	9311      	str	r3, [sp, #68]	; 0x44
 8002c84:	f004 ffc8 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c88:	f204 73ec 	addw	r3, r4, #2028	; 0x7ec
 8002c8c:	4618      	mov	r0, r3
 8002c8e:	9312      	str	r3, [sp, #72]	; 0x48
 8002c90:	f004 ffc2 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002c94:	f504 6310 	add.w	r3, r4, #2304	; 0x900
 8002c98:	4618      	mov	r0, r3
 8002c9a:	9313      	str	r3, [sp, #76]	; 0x4c
 8002c9c:	f004 ffbc 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002ca0:	f604 2314 	addw	r3, r4, #2580	; 0xa14
 8002ca4:	4618      	mov	r0, r3
 8002ca6:	9314      	str	r3, [sp, #80]	; 0x50
 8002ca8:	f004 ffb6 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002cac:	f604 3328 	addw	r3, r4, #2856	; 0xb28
 8002cb0:	4618      	mov	r0, r3
 8002cb2:	9315      	str	r3, [sp, #84]	; 0x54
 8002cb4:	f004 ffb0 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002cb8:	f604 433c 	addw	r3, r4, #3132	; 0xc3c
 8002cbc:	4618      	mov	r0, r3
 8002cbe:	9316      	str	r3, [sp, #88]	; 0x58
 8002cc0:	f004 ffaa 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002cc4:	f504 6355 	add.w	r3, r4, #3408	; 0xd50
 8002cc8:	4618      	mov	r0, r3
 8002cca:	9317      	str	r3, [sp, #92]	; 0x5c
 8002ccc:	f004 ffa4 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002cd0:	f604 6364 	addw	r3, r4, #3684	; 0xe64
 8002cd4:	4618      	mov	r0, r3
 8002cd6:	9318      	str	r3, [sp, #96]	; 0x60
 8002cd8:	f004 ff9e 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002cdc:	f604 7378 	addw	r3, r4, #3960	; 0xf78
 8002ce0:	4618      	mov	r0, r3
 8002ce2:	9319      	str	r3, [sp, #100]	; 0x64
 8002ce4:	f004 ff98 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002ce8:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8002cec:	330c      	adds	r3, #12
 8002cee:	4618      	mov	r0, r3
 8002cf0:	ee0b 3a10 	vmov	s22, r3
 8002cf4:	f004 ff90 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002cf8:	f504 538d 	add.w	r3, r4, #4512	; 0x11a0
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	931a      	str	r3, [sp, #104]	; 0x68
 8002d00:	f004 ff8a 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d04:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 8002d08:	3314      	adds	r3, #20
 8002d0a:	4618      	mov	r0, r3
 8002d0c:	ee0b 3a90 	vmov	s23, r3
 8002d10:	f004 ff82 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d14:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8002d18:	3308      	adds	r3, #8
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	ee0c 3a10 	vmov	s24, r3
 8002d20:	f004 ff7a 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d24:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
 8002d28:	331c      	adds	r3, #28
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	ee0c 3a90 	vmov	s25, r3
 8002d30:	f004 ff72 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d34:	f504 53af 	add.w	r3, r4, #5600	; 0x15e0
 8002d38:	3310      	adds	r3, #16
 8002d3a:	4618      	mov	r0, r3
 8002d3c:	ee0d 3a10 	vmov	s26, r3
 8002d40:	f004 ff6a 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d44:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8002d48:	3304      	adds	r3, #4
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	ee0d 3a90 	vmov	s27, r3
 8002d50:	f004 ff62 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d54:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 8002d58:	3318      	adds	r3, #24
 8002d5a:	4618      	mov	r0, r3
 8002d5c:	ee0e 3a10 	vmov	s28, r3
 8002d60:	f004 ff5a 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d64:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 8002d68:	330c      	adds	r3, #12
 8002d6a:	4618      	mov	r0, r3
 8002d6c:	ee0e 3a90 	vmov	s29, r3
 8002d70:	f004 ff52 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d74:	f504 53d2 	add.w	r3, r4, #6720	; 0x1a40
 8002d78:	4618      	mov	r0, r3
 8002d7a:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d7c:	f004 ff4c 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d80:	f504 53da 	add.w	r3, r4, #6976	; 0x1b40
 8002d84:	3314      	adds	r3, #20
 8002d86:	4618      	mov	r0, r3
 8002d88:	ee0f 3a10 	vmov	s30, r3
 8002d8c:	f004 ff44 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002d90:	f504 53e3 	add.w	r3, r4, #7264	; 0x1c60
 8002d94:	3308      	adds	r3, #8
 8002d96:	4618      	mov	r0, r3
 8002d98:	ee0f 3a90 	vmov	s31, r3
 8002d9c:	f004 ff3c 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002da0:	f504 53eb 	add.w	r3, r4, #7520	; 0x1d60
 8002da4:	331c      	adds	r3, #28
 8002da6:	4618      	mov	r0, r3
 8002da8:	9304      	str	r3, [sp, #16]
 8002daa:	f004 ff35 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002dae:	f504 53f4 	add.w	r3, r4, #7808	; 0x1e80
 8002db2:	3310      	adds	r3, #16
 8002db4:	4618      	mov	r0, r3
 8002db6:	9305      	str	r3, [sp, #20]
 8002db8:	f004 ff2e 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002dbc:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
 8002dc0:	3304      	adds	r3, #4
 8002dc2:	f242 06b8 	movw	r6, #8376	; 0x20b8
 8002dc6:	4618      	mov	r0, r3
 8002dc8:	9306      	str	r3, [sp, #24]
 8002dca:	f004 ff25 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002dce:	19a3      	adds	r3, r4, r6
 8002dd0:	ee0a 3a10 	vmov	s20, r3
        : TextArea(), wildcard(0)
 8002dd4:	4618      	mov	r0, r3
 8002dd6:	f7ff fe8d 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8002dda:	4b66      	ldr	r3, [pc, #408]	; (8002f74 <_ZN27CustomContainerKeyboardBaseC1Ev+0x370>)
 8002ddc:	51a3      	str	r3, [r4, r6]
 8002dde:	ee1a 3a10 	vmov	r3, s20
 8002de2:	63dd      	str	r5, [r3, #60]	; 0x3c
 8002de4:	f504 5303 	add.w	r3, r4, #8384	; 0x20c0
 8002de8:	3338      	adds	r3, #56	; 0x38
 8002dea:	4618      	mov	r0, r3
 8002dec:	ee08 3a10 	vmov	s16, r3
 8002df0:	f7ff fef2 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002df4:	f504 5306 	add.w	r3, r4, #8576	; 0x2180
 8002df8:	3334      	adds	r3, #52	; 0x34
 8002dfa:	4618      	mov	r0, r3
 8002dfc:	ee08 3a90 	vmov	s17, r3
 8002e00:	f7ff fb92 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e04:	f504 5309 	add.w	r3, r4, #8768	; 0x2240
 8002e08:	3334      	adds	r3, #52	; 0x34
 8002e0a:	4618      	mov	r0, r3
 8002e0c:	ee09 3a10 	vmov	s18, r3
 8002e10:	f7ff fb8a 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e14:	f504 530c 	add.w	r3, r4, #8960	; 0x2300
 8002e18:	3334      	adds	r3, #52	; 0x34
 8002e1a:	4618      	mov	r0, r3
 8002e1c:	9307      	str	r3, [sp, #28]
 8002e1e:	f004 fefb 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002e22:	f504 5311 	add.w	r3, r4, #9280	; 0x2440
 8002e26:	3308      	adds	r3, #8
 8002e28:	4618      	mov	r0, r3
 8002e2a:	9308      	str	r3, [sp, #32]
 8002e2c:	f004 fef4 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002e30:	f504 5315 	add.w	r3, r4, #9536	; 0x2540
 8002e34:	331c      	adds	r3, #28
 8002e36:	4618      	mov	r0, r3
 8002e38:	9309      	str	r3, [sp, #36]	; 0x24
 8002e3a:	f004 feed 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8002e3e:	f504 5319 	add.w	r3, r4, #9792	; 0x2640
 8002e42:	3330      	adds	r3, #48	; 0x30
 8002e44:	f504 5a1c 	add.w	sl, r4, #9984	; 0x2700
 8002e48:	4618      	mov	r0, r3
 8002e4a:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
 8002e4e:	f504 591f 	add.w	r9, r4, #10176	; 0x27c0
 8002e52:	ee09 3a90 	vmov	s19, r3
 8002e56:	f109 092c 	add.w	r9, r9, #44	; 0x2c
 8002e5a:	f7ff fb65 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e5e:	f504 5822 	add.w	r8, r4, #10368	; 0x2880
 8002e62:	4650      	mov	r0, sl
 8002e64:	f7ff feb8 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e68:	f108 0828 	add.w	r8, r8, #40	; 0x28
 8002e6c:	4648      	mov	r0, r9
 8002e6e:	f504 5b25 	add.w	fp, r4, #10560	; 0x2940
 8002e72:	f7ff feb1 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e76:	f10b 0b24 	add.w	fp, fp, #36	; 0x24
 8002e7a:	4640      	mov	r0, r8
 8002e7c:	f7ff feac 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e80:	4658      	mov	r0, fp
 8002e82:	f7ff fb51 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002e86:	f642 23c4 	movw	r3, #10948	; 0x2ac4
 8002e8a:	18e2      	adds	r2, r4, r3
 8002e8c:	9203      	str	r2, [sp, #12]
 8002e8e:	4a3a      	ldr	r2, [pc, #232]	; (8002f78 <_ZN27CustomContainerKeyboardBaseC1Ev+0x374>)
 8002e90:	50e2      	str	r2, [r4, r3]
 8002e92:	9b03      	ldr	r3, [sp, #12]
 8002e94:	4a39      	ldr	r2, [pc, #228]	; (8002f7c <_ZN27CustomContainerKeyboardBaseC1Ev+0x378>)
 8002e96:	605c      	str	r4, [r3, #4]
 8002e98:	f642 23cc 	movw	r3, #10956	; 0x2acc
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002e9c:	4938      	ldr	r1, [pc, #224]	; (8002f80 <_ZN27CustomContainerKeyboardBaseC1Ev+0x37c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002e9e:	50e2      	str	r2, [r4, r3]
 8002ea0:	f642 23d0 	movw	r3, #10960	; 0x2ad0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002ea4:	f642 22d4 	movw	r2, #10964	; 0x2ad4
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002ea8:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002eaa:	18a3      	adds	r3, r4, r2
 8002eac:	930a      	str	r3, [sp, #40]	; 0x28
 8002eae:	4b35      	ldr	r3, [pc, #212]	; (8002f84 <_ZN27CustomContainerKeyboardBaseC1Ev+0x380>)
 8002eb0:	50a3      	str	r3, [r4, r2]
 8002eb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002eb4:	6054      	str	r4, [r2, #4]
 8002eb6:	f642 22dc 	movw	r2, #10972	; 0x2adc
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002eba:	ee1a 0a90 	vmov	r0, s21
 8002ebe:	50a1      	str	r1, [r4, r2]
 8002ec0:	f642 22e0 	movw	r2, #10976	; 0x2ae0
 8002ec4:	50a5      	str	r5, [r4, r2]
 8002ec6:	f642 22e4 	movw	r2, #10980	; 0x2ae4
 8002eca:	18a1      	adds	r1, r4, r2
 8002ecc:	50a3      	str	r3, [r4, r2]
 8002ece:	f642 22ec 	movw	r2, #10988	; 0x2aec
 8002ed2:	604c      	str	r4, [r1, #4]
 8002ed4:	911c      	str	r1, [sp, #112]	; 0x70
 8002ed6:	492c      	ldr	r1, [pc, #176]	; (8002f88 <_ZN27CustomContainerKeyboardBaseC1Ev+0x384>)
 8002ed8:	50a1      	str	r1, [r4, r2]
 8002eda:	f642 22f0 	movw	r2, #10992	; 0x2af0
 8002ede:	50a5      	str	r5, [r4, r2]
 8002ee0:	f642 22f4 	movw	r2, #10996	; 0x2af4
 8002ee4:	18a1      	adds	r1, r4, r2
 8002ee6:	50a3      	str	r3, [r4, r2]
 8002ee8:	f642 22fc 	movw	r2, #11004	; 0x2afc
 8002eec:	604c      	str	r4, [r1, #4]
 8002eee:	911d      	str	r1, [sp, #116]	; 0x74
 8002ef0:	4926      	ldr	r1, [pc, #152]	; (8002f8c <_ZN27CustomContainerKeyboardBaseC1Ev+0x388>)
 8002ef2:	50a1      	str	r1, [r4, r2]
 8002ef4:	f504 522c 	add.w	r2, r4, #11008	; 0x2b00
 8002ef8:	6015      	str	r5, [r2, #0]
 8002efa:	f642 3204 	movw	r2, #11012	; 0x2b04
 8002efe:	18a1      	adds	r1, r4, r2
 8002f00:	50a3      	str	r3, [r4, r2]
 8002f02:	f642 320c 	movw	r2, #11020	; 0x2b0c
 8002f06:	604c      	str	r4, [r1, #4]
 8002f08:	911e      	str	r1, [sp, #120]	; 0x78
 8002f0a:	4921      	ldr	r1, [pc, #132]	; (8002f90 <_ZN27CustomContainerKeyboardBaseC1Ev+0x38c>)
 8002f0c:	50a1      	str	r1, [r4, r2]
 8002f0e:	f642 3210 	movw	r2, #11024	; 0x2b10
 8002f12:	50a5      	str	r5, [r4, r2]
 8002f14:	f642 3214 	movw	r2, #11028	; 0x2b14
 8002f18:	18a1      	adds	r1, r4, r2
 8002f1a:	50a3      	str	r3, [r4, r2]
 8002f1c:	f642 321c 	movw	r2, #11036	; 0x2b1c
 8002f20:	604c      	str	r4, [r1, #4]
 8002f22:	911f      	str	r1, [sp, #124]	; 0x7c
 8002f24:	491b      	ldr	r1, [pc, #108]	; (8002f94 <_ZN27CustomContainerKeyboardBaseC1Ev+0x390>)
 8002f26:	50a1      	str	r1, [r4, r2]
 8002f28:	f642 3220 	movw	r2, #11040	; 0x2b20
 8002f2c:	50a5      	str	r5, [r4, r2]
 8002f2e:	f642 3224 	movw	r2, #11044	; 0x2b24
 8002f32:	18a1      	adds	r1, r4, r2
 8002f34:	9120      	str	r1, [sp, #128]	; 0x80
 8002f36:	50a3      	str	r3, [r4, r2]
 8002f38:	f642 322c 	movw	r2, #11052	; 0x2b2c
 8002f3c:	604c      	str	r4, [r1, #4]
 8002f3e:	4916      	ldr	r1, [pc, #88]	; (8002f98 <_ZN27CustomContainerKeyboardBaseC1Ev+0x394>)
 8002f40:	50a1      	str	r1, [r4, r2]
 8002f42:	f642 3230 	movw	r2, #11056	; 0x2b30
 8002f46:	50a5      	str	r5, [r4, r2]
 8002f48:	f642 3234 	movw	r2, #11060	; 0x2b34
 8002f4c:	18a1      	adds	r1, r4, r2
 8002f4e:	50a3      	str	r3, [r4, r2]
 8002f50:	f642 323c 	movw	r2, #11068	; 0x2b3c
 8002f54:	604c      	str	r4, [r1, #4]
 8002f56:	9121      	str	r1, [sp, #132]	; 0x84
 8002f58:	4910      	ldr	r1, [pc, #64]	; (8002f9c <_ZN27CustomContainerKeyboardBaseC1Ev+0x398>)
 8002f5a:	50a1      	str	r1, [r4, r2]
 8002f5c:	f504 522d 	add.w	r2, r4, #11072	; 0x2b40
 8002f60:	6015      	str	r5, [r2, #0]
 8002f62:	f642 3244 	movw	r2, #11076	; 0x2b44
 8002f66:	18a1      	adds	r1, r4, r2
 8002f68:	e01a      	b.n	8002fa0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x39c>
 8002f6a:	bf00      	nop
 8002f6c:	080277c8 	.word	0x080277c8
 8002f70:	0802a200 	.word	0x0802a200
 8002f74:	0802a0e0 	.word	0x0802a0e0
 8002f78:	08027798 	.word	0x08027798
 8002f7c:	08002a11 	.word	0x08002a11
 8002f80:	08002781 	.word	0x08002781
 8002f84:	080277b0 	.word	0x080277b0
 8002f88:	08002789 	.word	0x08002789
 8002f8c:	0800278d 	.word	0x0800278d
 8002f90:	08002791 	.word	0x08002791
 8002f94:	08002795 	.word	0x08002795
 8002f98:	08002799 	.word	0x08002799
 8002f9c:	0800279d 	.word	0x0800279d
 8002fa0:	50a3      	str	r3, [r4, r2]
 8002fa2:	f642 324c 	movw	r2, #11084	; 0x2b4c
 8002fa6:	604c      	str	r4, [r1, #4]
 8002fa8:	9122      	str	r1, [sp, #136]	; 0x88
 8002faa:	49af      	ldr	r1, [pc, #700]	; (8003268 <_ZN27CustomContainerKeyboardBaseC1Ev+0x664>)
 8002fac:	50a1      	str	r1, [r4, r2]
 8002fae:	f642 3250 	movw	r2, #11088	; 0x2b50
 8002fb2:	50a5      	str	r5, [r4, r2]
 8002fb4:	f642 3254 	movw	r2, #11092	; 0x2b54
 8002fb8:	18a1      	adds	r1, r4, r2
 8002fba:	50a3      	str	r3, [r4, r2]
 8002fbc:	f642 325c 	movw	r2, #11100	; 0x2b5c
 8002fc0:	604c      	str	r4, [r1, #4]
 8002fc2:	9123      	str	r1, [sp, #140]	; 0x8c
 8002fc4:	49a9      	ldr	r1, [pc, #676]	; (800326c <_ZN27CustomContainerKeyboardBaseC1Ev+0x668>)
 8002fc6:	50a1      	str	r1, [r4, r2]
 8002fc8:	f642 3260 	movw	r2, #11104	; 0x2b60
 8002fcc:	50a5      	str	r5, [r4, r2]
 8002fce:	f642 3264 	movw	r2, #11108	; 0x2b64
 8002fd2:	18a1      	adds	r1, r4, r2
 8002fd4:	50a3      	str	r3, [r4, r2]
 8002fd6:	f642 326c 	movw	r2, #11116	; 0x2b6c
 8002fda:	604c      	str	r4, [r1, #4]
 8002fdc:	9124      	str	r1, [sp, #144]	; 0x90
 8002fde:	49a4      	ldr	r1, [pc, #656]	; (8003270 <_ZN27CustomContainerKeyboardBaseC1Ev+0x66c>)
 8002fe0:	50a1      	str	r1, [r4, r2]
 8002fe2:	f642 3270 	movw	r2, #11120	; 0x2b70
 8002fe6:	50a5      	str	r5, [r4, r2]
 8002fe8:	f642 3274 	movw	r2, #11124	; 0x2b74
 8002fec:	18a1      	adds	r1, r4, r2
 8002fee:	50a3      	str	r3, [r4, r2]
 8002ff0:	f642 327c 	movw	r2, #11132	; 0x2b7c
 8002ff4:	604c      	str	r4, [r1, #4]
 8002ff6:	9125      	str	r1, [sp, #148]	; 0x94
 8002ff8:	499e      	ldr	r1, [pc, #632]	; (8003274 <_ZN27CustomContainerKeyboardBaseC1Ev+0x670>)
 8002ffa:	50a1      	str	r1, [r4, r2]
 8002ffc:	f504 522e 	add.w	r2, r4, #11136	; 0x2b80
 8003000:	6015      	str	r5, [r2, #0]
 8003002:	f642 3284 	movw	r2, #11140	; 0x2b84
 8003006:	18a1      	adds	r1, r4, r2
 8003008:	50a3      	str	r3, [r4, r2]
 800300a:	f642 328c 	movw	r2, #11148	; 0x2b8c
 800300e:	9126      	str	r1, [sp, #152]	; 0x98
 8003010:	604c      	str	r4, [r1, #4]
 8003012:	4999      	ldr	r1, [pc, #612]	; (8003278 <_ZN27CustomContainerKeyboardBaseC1Ev+0x674>)
 8003014:	50a1      	str	r1, [r4, r2]
 8003016:	f642 3290 	movw	r2, #11152	; 0x2b90
 800301a:	50a5      	str	r5, [r4, r2]
 800301c:	f642 3294 	movw	r2, #11156	; 0x2b94
 8003020:	18a1      	adds	r1, r4, r2
 8003022:	50a3      	str	r3, [r4, r2]
 8003024:	f642 329c 	movw	r2, #11164	; 0x2b9c
 8003028:	604c      	str	r4, [r1, #4]
 800302a:	9127      	str	r1, [sp, #156]	; 0x9c
 800302c:	4993      	ldr	r1, [pc, #588]	; (800327c <_ZN27CustomContainerKeyboardBaseC1Ev+0x678>)
 800302e:	50a1      	str	r1, [r4, r2]
 8003030:	f642 32a0 	movw	r2, #11168	; 0x2ba0
 8003034:	50a5      	str	r5, [r4, r2]
 8003036:	f642 32a4 	movw	r2, #11172	; 0x2ba4
 800303a:	18a1      	adds	r1, r4, r2
 800303c:	50a3      	str	r3, [r4, r2]
 800303e:	f642 32ac 	movw	r2, #11180	; 0x2bac
 8003042:	604c      	str	r4, [r1, #4]
 8003044:	9128      	str	r1, [sp, #160]	; 0xa0
 8003046:	498e      	ldr	r1, [pc, #568]	; (8003280 <_ZN27CustomContainerKeyboardBaseC1Ev+0x67c>)
 8003048:	50a1      	str	r1, [r4, r2]
 800304a:	f642 32b0 	movw	r2, #11184	; 0x2bb0
 800304e:	50a5      	str	r5, [r4, r2]
 8003050:	f642 32b4 	movw	r2, #11188	; 0x2bb4
 8003054:	18a1      	adds	r1, r4, r2
 8003056:	50a3      	str	r3, [r4, r2]
 8003058:	f642 32bc 	movw	r2, #11196	; 0x2bbc
 800305c:	604c      	str	r4, [r1, #4]
 800305e:	9129      	str	r1, [sp, #164]	; 0xa4
 8003060:	4988      	ldr	r1, [pc, #544]	; (8003284 <_ZN27CustomContainerKeyboardBaseC1Ev+0x680>)
 8003062:	50a1      	str	r1, [r4, r2]
 8003064:	f504 522f 	add.w	r2, r4, #11200	; 0x2bc0
 8003068:	6015      	str	r5, [r2, #0]
 800306a:	f642 32c4 	movw	r2, #11204	; 0x2bc4
 800306e:	18a1      	adds	r1, r4, r2
 8003070:	50a3      	str	r3, [r4, r2]
 8003072:	f642 32cc 	movw	r2, #11212	; 0x2bcc
 8003076:	604c      	str	r4, [r1, #4]
 8003078:	912a      	str	r1, [sp, #168]	; 0xa8
 800307a:	4983      	ldr	r1, [pc, #524]	; (8003288 <_ZN27CustomContainerKeyboardBaseC1Ev+0x684>)
 800307c:	50a1      	str	r1, [r4, r2]
 800307e:	f642 32d0 	movw	r2, #11216	; 0x2bd0
 8003082:	50a5      	str	r5, [r4, r2]
 8003084:	f642 32d4 	movw	r2, #11220	; 0x2bd4
 8003088:	18a1      	adds	r1, r4, r2
 800308a:	50a3      	str	r3, [r4, r2]
 800308c:	f642 32dc 	movw	r2, #11228	; 0x2bdc
 8003090:	604c      	str	r4, [r1, #4]
 8003092:	912b      	str	r1, [sp, #172]	; 0xac
 8003094:	497d      	ldr	r1, [pc, #500]	; (800328c <_ZN27CustomContainerKeyboardBaseC1Ev+0x688>)
 8003096:	50a1      	str	r1, [r4, r2]
 8003098:	f642 32e0 	movw	r2, #11232	; 0x2be0
 800309c:	50a5      	str	r5, [r4, r2]
 800309e:	f642 32e4 	movw	r2, #11236	; 0x2be4
 80030a2:	18a1      	adds	r1, r4, r2
 80030a4:	50a3      	str	r3, [r4, r2]
 80030a6:	f642 32ec 	movw	r2, #11244	; 0x2bec
 80030aa:	604c      	str	r4, [r1, #4]
 80030ac:	912c      	str	r1, [sp, #176]	; 0xb0
 80030ae:	4978      	ldr	r1, [pc, #480]	; (8003290 <_ZN27CustomContainerKeyboardBaseC1Ev+0x68c>)
 80030b0:	50a1      	str	r1, [r4, r2]
 80030b2:	f642 32f0 	movw	r2, #11248	; 0x2bf0
 80030b6:	50a5      	str	r5, [r4, r2]
 80030b8:	f642 32f4 	movw	r2, #11252	; 0x2bf4
 80030bc:	18a1      	adds	r1, r4, r2
 80030be:	912d      	str	r1, [sp, #180]	; 0xb4
 80030c0:	50a3      	str	r3, [r4, r2]
 80030c2:	f642 32fc 	movw	r2, #11260	; 0x2bfc
 80030c6:	604c      	str	r4, [r1, #4]
 80030c8:	4972      	ldr	r1, [pc, #456]	; (8003294 <_ZN27CustomContainerKeyboardBaseC1Ev+0x690>)
 80030ca:	50a1      	str	r1, [r4, r2]
 80030cc:	f504 5230 	add.w	r2, r4, #11264	; 0x2c00
 80030d0:	6015      	str	r5, [r2, #0]
 80030d2:	f642 4204 	movw	r2, #11268	; 0x2c04
 80030d6:	18a1      	adds	r1, r4, r2
 80030d8:	50a3      	str	r3, [r4, r2]
 80030da:	f642 420c 	movw	r2, #11276	; 0x2c0c
 80030de:	604c      	str	r4, [r1, #4]
 80030e0:	912e      	str	r1, [sp, #184]	; 0xb8
 80030e2:	496d      	ldr	r1, [pc, #436]	; (8003298 <_ZN27CustomContainerKeyboardBaseC1Ev+0x694>)
 80030e4:	50a1      	str	r1, [r4, r2]
 80030e6:	f642 4210 	movw	r2, #11280	; 0x2c10
 80030ea:	50a5      	str	r5, [r4, r2]
 80030ec:	f642 4214 	movw	r2, #11284	; 0x2c14
 80030f0:	18a1      	adds	r1, r4, r2
 80030f2:	50a3      	str	r3, [r4, r2]
 80030f4:	f642 421c 	movw	r2, #11292	; 0x2c1c
 80030f8:	604c      	str	r4, [r1, #4]
 80030fa:	912f      	str	r1, [sp, #188]	; 0xbc
 80030fc:	4967      	ldr	r1, [pc, #412]	; (800329c <_ZN27CustomContainerKeyboardBaseC1Ev+0x698>)
 80030fe:	50a1      	str	r1, [r4, r2]
 8003100:	f642 4220 	movw	r2, #11296	; 0x2c20
 8003104:	50a5      	str	r5, [r4, r2]
 8003106:	f642 4224 	movw	r2, #11300	; 0x2c24
 800310a:	18a1      	adds	r1, r4, r2
 800310c:	50a3      	str	r3, [r4, r2]
 800310e:	f642 422c 	movw	r2, #11308	; 0x2c2c
 8003112:	604c      	str	r4, [r1, #4]
 8003114:	9130      	str	r1, [sp, #192]	; 0xc0
 8003116:	4962      	ldr	r1, [pc, #392]	; (80032a0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x69c>)
 8003118:	50a1      	str	r1, [r4, r2]
 800311a:	f642 4230 	movw	r2, #11312	; 0x2c30
 800311e:	50a5      	str	r5, [r4, r2]
 8003120:	f642 4234 	movw	r2, #11316	; 0x2c34
 8003124:	18a1      	adds	r1, r4, r2
 8003126:	50a3      	str	r3, [r4, r2]
 8003128:	f642 423c 	movw	r2, #11324	; 0x2c3c
 800312c:	604c      	str	r4, [r1, #4]
 800312e:	9131      	str	r1, [sp, #196]	; 0xc4
 8003130:	495c      	ldr	r1, [pc, #368]	; (80032a4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a0>)
 8003132:	50a1      	str	r1, [r4, r2]
 8003134:	f504 5231 	add.w	r2, r4, #11328	; 0x2c40
 8003138:	6015      	str	r5, [r2, #0]
 800313a:	f642 4244 	movw	r2, #11332	; 0x2c44
 800313e:	18a1      	adds	r1, r4, r2
 8003140:	50a3      	str	r3, [r4, r2]
 8003142:	f642 424c 	movw	r2, #11340	; 0x2c4c
 8003146:	604c      	str	r4, [r1, #4]
 8003148:	9132      	str	r1, [sp, #200]	; 0xc8
 800314a:	4957      	ldr	r1, [pc, #348]	; (80032a8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a4>)
 800314c:	50a1      	str	r1, [r4, r2]
 800314e:	f642 4250 	movw	r2, #11344	; 0x2c50
 8003152:	50a5      	str	r5, [r4, r2]
 8003154:	f642 4254 	movw	r2, #11348	; 0x2c54
 8003158:	18a1      	adds	r1, r4, r2
 800315a:	50a3      	str	r3, [r4, r2]
 800315c:	f642 425c 	movw	r2, #11356	; 0x2c5c
 8003160:	604c      	str	r4, [r1, #4]
 8003162:	9133      	str	r1, [sp, #204]	; 0xcc
 8003164:	4951      	ldr	r1, [pc, #324]	; (80032ac <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a8>)
 8003166:	50a1      	str	r1, [r4, r2]
 8003168:	f642 4260 	movw	r2, #11360	; 0x2c60
 800316c:	50a5      	str	r5, [r4, r2]
 800316e:	f642 4264 	movw	r2, #11364	; 0x2c64
 8003172:	18a1      	adds	r1, r4, r2
 8003174:	50a3      	str	r3, [r4, r2]
 8003176:	f642 426c 	movw	r2, #11372	; 0x2c6c
 800317a:	604c      	str	r4, [r1, #4]
 800317c:	9134      	str	r1, [sp, #208]	; 0xd0
 800317e:	494c      	ldr	r1, [pc, #304]	; (80032b0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6ac>)
 8003180:	50a1      	str	r1, [r4, r2]
 8003182:	f642 4270 	movw	r2, #11376	; 0x2c70
 8003186:	50a5      	str	r5, [r4, r2]
 8003188:	f642 4274 	movw	r2, #11380	; 0x2c74
 800318c:	18a1      	adds	r1, r4, r2
 800318e:	50a3      	str	r3, [r4, r2]
 8003190:	f642 427c 	movw	r2, #11388	; 0x2c7c
 8003194:	604c      	str	r4, [r1, #4]
 8003196:	9135      	str	r1, [sp, #212]	; 0xd4
 8003198:	4946      	ldr	r1, [pc, #280]	; (80032b4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b0>)
 800319a:	50a1      	str	r1, [r4, r2]
 800319c:	f504 5232 	add.w	r2, r4, #11392	; 0x2c80
 80031a0:	6015      	str	r5, [r2, #0]
 80031a2:	f642 4284 	movw	r2, #11396	; 0x2c84
 80031a6:	18a1      	adds	r1, r4, r2
 80031a8:	50a3      	str	r3, [r4, r2]
 80031aa:	f642 428c 	movw	r2, #11404	; 0x2c8c
 80031ae:	604c      	str	r4, [r1, #4]
 80031b0:	9136      	str	r1, [sp, #216]	; 0xd8
 80031b2:	4941      	ldr	r1, [pc, #260]	; (80032b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b4>)
 80031b4:	50a1      	str	r1, [r4, r2]
 80031b6:	f642 4290 	movw	r2, #11408	; 0x2c90
 80031ba:	50a5      	str	r5, [r4, r2]
 80031bc:	f642 4294 	movw	r2, #11412	; 0x2c94
 80031c0:	18a1      	adds	r1, r4, r2
 80031c2:	50a3      	str	r3, [r4, r2]
 80031c4:	f642 429c 	movw	r2, #11420	; 0x2c9c
 80031c8:	604c      	str	r4, [r1, #4]
 80031ca:	9137      	str	r1, [sp, #220]	; 0xdc
 80031cc:	493b      	ldr	r1, [pc, #236]	; (80032bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b8>)
 80031ce:	50a1      	str	r1, [r4, r2]
 80031d0:	f642 42a0 	movw	r2, #11424	; 0x2ca0
 80031d4:	50a5      	str	r5, [r4, r2]
 80031d6:	f642 42a4 	movw	r2, #11428	; 0x2ca4
 80031da:	18a1      	adds	r1, r4, r2
 80031dc:	50a3      	str	r3, [r4, r2]
 80031de:	f642 42ac 	movw	r2, #11436	; 0x2cac
 80031e2:	604c      	str	r4, [r1, #4]
 80031e4:	9138      	str	r1, [sp, #224]	; 0xe0
 80031e6:	4936      	ldr	r1, [pc, #216]	; (80032c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6bc>)
 80031e8:	50a1      	str	r1, [r4, r2]
 80031ea:	f642 42b0 	movw	r2, #11440	; 0x2cb0
 80031ee:	4935      	ldr	r1, [pc, #212]	; (80032c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c0>)
 80031f0:	50a5      	str	r5, [r4, r2]
 80031f2:	f642 42b4 	movw	r2, #11444	; 0x2cb4
 80031f6:	18a7      	adds	r7, r4, r2
 80031f8:	50a3      	str	r3, [r4, r2]
 80031fa:	f642 42bc 	movw	r2, #11452	; 0x2cbc
 80031fe:	607c      	str	r4, [r7, #4]
 8003200:	50a1      	str	r1, [r4, r2]
 8003202:	f504 5233 	add.w	r2, r4, #11456	; 0x2cc0
 8003206:	4930      	ldr	r1, [pc, #192]	; (80032c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c4>)
 8003208:	6015      	str	r5, [r2, #0]
 800320a:	f642 42c4 	movw	r2, #11460	; 0x2cc4
 800320e:	18a6      	adds	r6, r4, r2
 8003210:	50a3      	str	r3, [r4, r2]
 8003212:	f642 42cc 	movw	r2, #11468	; 0x2ccc
 8003216:	6074      	str	r4, [r6, #4]
 8003218:	50a1      	str	r1, [r4, r2]
 800321a:	f642 42d0 	movw	r2, #11472	; 0x2cd0
 800321e:	50a5      	str	r5, [r4, r2]
 8003220:	f642 42d4 	movw	r2, #11476	; 0x2cd4
 8003224:	18a1      	adds	r1, r4, r2
 8003226:	50a3      	str	r3, [r4, r2]
 8003228:	f642 43dc 	movw	r3, #11484	; 0x2cdc
 800322c:	4a27      	ldr	r2, [pc, #156]	; (80032cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c8>)
 800322e:	604c      	str	r4, [r1, #4]
 8003230:	50e2      	str	r2, [r4, r3]
 8003232:	f642 43e0 	movw	r3, #11488	; 0x2ce0
 8003236:	9139      	str	r1, [sp, #228]	; 0xe4
 8003238:	50e5      	str	r5, [r4, r3]
    triggerKeyboardCallback(0)
 800323a:	f642 43e4 	movw	r3, #11492	; 0x2ce4
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 800323e:	462a      	mov	r2, r5
    triggerKeyboardCallback(0)
 8003240:	50e5      	str	r5, [r4, r3]
        rect.width = width;
 8003242:	4b23      	ldr	r3, [pc, #140]	; (80032d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6cc>)
 8003244:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8003246:	f44f 7396 	mov.w	r3, #300	; 0x12c
 800324a:	9300      	str	r3, [sp, #0]
 800324c:	f06f 0104 	mvn.w	r1, #4
 8003250:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003254:	f7ff fc2e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003258:	4b1e      	ldr	r3, [pc, #120]	; (80032d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d0>)
 800325a:	6563      	str	r3, [r4, #84]	; 0x54
        borderColor = color;
 800325c:	f103 33c7 	add.w	r3, r3, #3351758791	; 0xc7c7c7c7
 8003260:	f103 5360 	add.w	r3, r3, #939524096	; 0x38000000
 8003264:	65a3      	str	r3, [r4, #88]	; 0x58
 8003266:	e037      	b.n	80032d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d4>
 8003268:	080027a1 	.word	0x080027a1
 800326c:	080027a5 	.word	0x080027a5
 8003270:	080027a9 	.word	0x080027a9
 8003274:	080027ad 	.word	0x080027ad
 8003278:	080027b1 	.word	0x080027b1
 800327c:	080027b5 	.word	0x080027b5
 8003280:	080027b9 	.word	0x080027b9
 8003284:	080027bd 	.word	0x080027bd
 8003288:	080027c1 	.word	0x080027c1
 800328c:	080027c5 	.word	0x080027c5
 8003290:	080027c9 	.word	0x080027c9
 8003294:	080027cd 	.word	0x080027cd
 8003298:	080027d1 	.word	0x080027d1
 800329c:	080027d5 	.word	0x080027d5
 80032a0:	080027d9 	.word	0x080027d9
 80032a4:	080027dd 	.word	0x080027dd
 80032a8:	080027e1 	.word	0x080027e1
 80032ac:	080027e5 	.word	0x080027e5
 80032b0:	080027e9 	.word	0x080027e9
 80032b4:	080027ed 	.word	0x080027ed
 80032b8:	080027f1 	.word	0x080027f1
 80032bc:	080027f5 	.word	0x080027f5
 80032c0:	080027f9 	.word	0x080027f9
 80032c4:	080027fd 	.word	0x080027fd
 80032c8:	08002801 	.word	0x08002801
 80032cc:	08002805 	.word	0x08002805
 80032d0:	012c0320 	.word	0x012c0320
 80032d4:	ff9a9b9c 	.word	0xff9a9b9c
        borderSize = size;
 80032d8:	f04f 0306 	mov.w	r3, #6
    customContainer1.setXY(35, 51);
 80032dc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80032de:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80032e2:	2233      	movs	r2, #51	; 0x33
 80032e4:	2123      	movs	r1, #35	; 0x23
 80032e6:	f7ff f911 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerButton_keyCallback = &callback;
 80032ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    customContainer2.setXY(96, 51);
 80032ec:	980c      	ldr	r0, [sp, #48]	; 0x30
 80032ee:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 80032f2:	2233      	movs	r2, #51	; 0x33
 80032f4:	2160      	movs	r1, #96	; 0x60
 80032f6:	f7ff f909 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80032fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    customContainer3.setXY(157, 51);
 80032fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80032fe:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
 8003302:	2233      	movs	r2, #51	; 0x33
 8003304:	219d      	movs	r1, #157	; 0x9d
 8003306:	f7ff f901 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800330a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    customContainer4.setXY(218, 51);
 800330c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800330e:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8003312:	2233      	movs	r2, #51	; 0x33
 8003314:	21da      	movs	r1, #218	; 0xda
 8003316:	f7ff f8f9 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800331a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    customContainer5.setXY(279, 51);
 800331c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800331e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8003322:	2233      	movs	r2, #51	; 0x33
 8003324:	f240 1117 	movw	r1, #279	; 0x117
 8003328:	f7ff f8f0 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800332c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    customContainer6.setXY(340, 51);
 800332e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003330:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
 8003334:	2233      	movs	r2, #51	; 0x33
 8003336:	f44f 71aa 	mov.w	r1, #340	; 0x154
 800333a:	f7ff f8e7 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800333e:	9b20      	ldr	r3, [sp, #128]	; 0x80
    customContainer7.setXY(401, 51);
 8003340:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003342:	f8c4 36d4 	str.w	r3, [r4, #1748]	; 0x6d4
 8003346:	2233      	movs	r2, #51	; 0x33
 8003348:	f240 1191 	movw	r1, #401	; 0x191
 800334c:	f7ff f8de 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003350:	9b21      	ldr	r3, [sp, #132]	; 0x84
    customContainer8.setXY(462, 51);
 8003352:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003354:	f8c4 37e8 	str.w	r3, [r4, #2024]	; 0x7e8
 8003358:	2233      	movs	r2, #51	; 0x33
 800335a:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800335e:	f7ff f8d5 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003362:	9b22      	ldr	r3, [sp, #136]	; 0x88
    customContainer9.setXY(523, 51);
 8003364:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003366:	f8c4 38fc 	str.w	r3, [r4, #2300]	; 0x8fc
 800336a:	2233      	movs	r2, #51	; 0x33
 800336c:	f240 210b 	movw	r1, #523	; 0x20b
 8003370:	f7ff f8cc 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003374:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    customContainer10.setXY(584, 51);
 8003376:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003378:	f8c4 3a10 	str.w	r3, [r4, #2576]	; 0xa10
 800337c:	2233      	movs	r2, #51	; 0x33
 800337e:	f44f 7112 	mov.w	r1, #584	; 0x248
 8003382:	f7ff f8c3 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003386:	9b24      	ldr	r3, [sp, #144]	; 0x90
    customContainer1_1.setXY(35, 112);
 8003388:	9815      	ldr	r0, [sp, #84]	; 0x54
 800338a:	f8c4 3b24 	str.w	r3, [r4, #2852]	; 0xb24
 800338e:	2270      	movs	r2, #112	; 0x70
 8003390:	2123      	movs	r1, #35	; 0x23
 8003392:	f7ff f8bb 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003396:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    customContainer2_1.setXY(96, 112);
 8003398:	9816      	ldr	r0, [sp, #88]	; 0x58
 800339a:	f8c4 3c38 	str.w	r3, [r4, #3128]	; 0xc38
 800339e:	2270      	movs	r2, #112	; 0x70
 80033a0:	2160      	movs	r1, #96	; 0x60
 80033a2:	f7ff f8b3 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80033a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    customContainer3_1.setXY(157, 112);
 80033a8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80033aa:	f8c4 3d4c 	str.w	r3, [r4, #3404]	; 0xd4c
 80033ae:	2270      	movs	r2, #112	; 0x70
 80033b0:	219d      	movs	r1, #157	; 0x9d
 80033b2:	f7ff f8ab 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80033b6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    customContainer4_1.setXY(218, 112);
 80033b8:	9818      	ldr	r0, [sp, #96]	; 0x60
 80033ba:	f8c4 3e60 	str.w	r3, [r4, #3680]	; 0xe60
 80033be:	2270      	movs	r2, #112	; 0x70
 80033c0:	21da      	movs	r1, #218	; 0xda
 80033c2:	f7ff f8a3 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80033c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    customContainer5_1.setXY(279, 112);
 80033c8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80033ca:	f8c4 3f74 	str.w	r3, [r4, #3956]	; 0xf74
 80033ce:	2270      	movs	r2, #112	; 0x70
 80033d0:	f240 1117 	movw	r1, #279	; 0x117
 80033d4:	f7ff f89a 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80033d8:	f241 0388 	movw	r3, #4232	; 0x1088
 80033dc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80033de:	50e2      	str	r2, [r4, r3]
    customContainer6_1.setXY(340, 112);
 80033e0:	ee1b 0a10 	vmov	r0, s22
 80033e4:	2270      	movs	r2, #112	; 0x70
 80033e6:	f44f 71aa 	mov.w	r1, #340	; 0x154
 80033ea:	f7ff f88f 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80033ee:	f241 139c 	movw	r3, #4508	; 0x119c
 80033f2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80033f4:	50e2      	str	r2, [r4, r3]
    customContainer7_1.setXY(401, 112);
 80033f6:	981a      	ldr	r0, [sp, #104]	; 0x68
 80033f8:	2270      	movs	r2, #112	; 0x70
 80033fa:	f240 1191 	movw	r1, #401	; 0x191
 80033fe:	f7ff f885 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003402:	f241 23b0 	movw	r3, #4784	; 0x12b0
 8003406:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8003408:	50e2      	str	r2, [r4, r3]
    customContainer8_1.setXY(462, 112);
 800340a:	ee1b 0a90 	vmov	r0, s23
 800340e:	2270      	movs	r2, #112	; 0x70
 8003410:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8003414:	f7ff f87a 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003418:	f241 33c4 	movw	r3, #5060	; 0x13c4
 800341c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 800341e:	50e2      	str	r2, [r4, r3]
    customContainer9_1.setXY(523, 112);
 8003420:	ee1c 0a10 	vmov	r0, s24
 8003424:	2270      	movs	r2, #112	; 0x70
 8003426:	f240 210b 	movw	r1, #523	; 0x20b
 800342a:	f7ff f86f 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800342e:	f241 43d8 	movw	r3, #5336	; 0x14d8
 8003432:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8003434:	50e2      	str	r2, [r4, r3]
    customContainer10_1.setXY(584, 112);
 8003436:	ee1c 0a90 	vmov	r0, s25
 800343a:	2270      	movs	r2, #112	; 0x70
 800343c:	f44f 7112 	mov.w	r1, #584	; 0x248
 8003440:	f7ff f864 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003444:	f241 53ec 	movw	r3, #5612	; 0x15ec
 8003448:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 800344a:	50e2      	str	r2, [r4, r3]
    customContainer1_2.setXY(96, 173);
 800344c:	ee1d 0a10 	vmov	r0, s26
 8003450:	22ad      	movs	r2, #173	; 0xad
 8003452:	2160      	movs	r1, #96	; 0x60
 8003454:	f7ff f85a 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003458:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 800345c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 800345e:	601a      	str	r2, [r3, #0]
    customContainer2_2.setXY(157, 173);
 8003460:	ee1d 0a90 	vmov	r0, s27
 8003464:	22ad      	movs	r2, #173	; 0xad
 8003466:	219d      	movs	r1, #157	; 0x9d
 8003468:	f7ff f850 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800346c:	f641 0314 	movw	r3, #6164	; 0x1814
 8003470:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8003472:	50e2      	str	r2, [r4, r3]
    customContainer3_2.setXY(218, 173);
 8003474:	ee1e 0a10 	vmov	r0, s28
 8003478:	22ad      	movs	r2, #173	; 0xad
 800347a:	21da      	movs	r1, #218	; 0xda
 800347c:	f7ff f846 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003480:	f641 1328 	movw	r3, #6440	; 0x1928
 8003484:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8003486:	50e2      	str	r2, [r4, r3]
    customContainer4_2.setXY(279, 173);
 8003488:	ee1e 0a90 	vmov	r0, s29
 800348c:	22ad      	movs	r2, #173	; 0xad
 800348e:	f240 1117 	movw	r1, #279	; 0x117
 8003492:	f7ff f83b 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003496:	f641 233c 	movw	r3, #6716	; 0x1a3c
 800349a:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 800349c:	50e2      	str	r2, [r4, r3]
    customContainer5_2.setXY(340, 173);
 800349e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80034a0:	22ad      	movs	r2, #173	; 0xad
 80034a2:	f44f 71aa 	mov.w	r1, #340	; 0x154
 80034a6:	f7ff f831 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80034aa:	f641 3350 	movw	r3, #6992	; 0x1b50
 80034ae:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80034b0:	50e2      	str	r2, [r4, r3]
    customContainer6_2.setXY(401, 173);
 80034b2:	ee1f 0a10 	vmov	r0, s30
 80034b6:	22ad      	movs	r2, #173	; 0xad
 80034b8:	f240 1191 	movw	r1, #401	; 0x191
 80034bc:	f7ff f826 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80034c0:	f641 4364 	movw	r3, #7268	; 0x1c64
 80034c4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80034c6:	50e2      	str	r2, [r4, r3]
    customContainer7_2.setXY(462, 173);
 80034c8:	ee1f 0a90 	vmov	r0, s31
 80034cc:	22ad      	movs	r2, #173	; 0xad
 80034ce:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 80034d2:	f7ff f81b 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80034d6:	f641 5378 	movw	r3, #7544	; 0x1d78
 80034da:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 80034dc:	50e2      	str	r2, [r4, r3]
    customContainer8_2.setXY(523, 173);
 80034de:	9804      	ldr	r0, [sp, #16]
 80034e0:	22ad      	movs	r2, #173	; 0xad
 80034e2:	f240 210b 	movw	r1, #523	; 0x20b
 80034e6:	f7ff f811 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80034ea:	f641 638c 	movw	r3, #7820	; 0x1e8c
 80034ee:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 80034f0:	50e2      	str	r2, [r4, r3]
    customContainer9_2.setXY(584, 173);
 80034f2:	9805      	ldr	r0, [sp, #20]
 80034f4:	22ad      	movs	r2, #173	; 0xad
 80034f6:	f44f 7112 	mov.w	r1, #584	; 0x248
 80034fa:	f7ff f807 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80034fe:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
    customContainer10_2.setXY(645, 173);
 8003502:	9806      	ldr	r0, [sp, #24]
 8003504:	601f      	str	r7, [r3, #0]
 8003506:	22ad      	movs	r2, #173	; 0xad
 8003508:	f240 2185 	movw	r1, #645	; 0x285
 800350c:	f7fe fffe 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8003510:	f242 03b4 	movw	r3, #8372	; 0x20b4
    textArea1.setPosition(35, 21, 720, 30);
 8003514:	2215      	movs	r2, #21
 8003516:	50e6      	str	r6, [r4, r3]
 8003518:	231e      	movs	r3, #30
 800351a:	9300      	str	r3, [sp, #0]
 800351c:	ee1a 0a10 	vmov	r0, s20
 8003520:	f44f 7334 	mov.w	r3, #720	; 0x2d0
 8003524:	2123      	movs	r1, #35	; 0x23
 8003526:	f7ff fac5 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800352a:	f242 03e8 	movw	r3, #8424	; 0x20e8
 800352e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003532:	50e2      	str	r2, [r4, r3]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003534:	ee1a 3a10 	vmov	r3, s20
 8003538:	869d      	strh	r5, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800353a:	4b0a      	ldr	r3, [pc, #40]	; (8003564 <_ZN27CustomContainerKeyboardBaseC1Ev+0x960>)
 800353c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID2).getText());
 800353e:	f504 5628 	add.w	r6, r4, #10752	; 0x2a00
 8003542:	3624      	adds	r6, #36	; 0x24
 8003544:	b92b      	cbnz	r3, 8003552 <_ZN27CustomContainerKeyboardBaseC1Ev+0x94e>
 8003546:	4b08      	ldr	r3, [pc, #32]	; (8003568 <_ZN27CustomContainerKeyboardBaseC1Ev+0x964>)
 8003548:	4a08      	ldr	r2, [pc, #32]	; (800356c <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 800354a:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800354c:	4808      	ldr	r0, [pc, #32]	; (8003570 <_ZN27CustomContainerKeyboardBaseC1Ev+0x96c>)
 800354e:	f022 f937 	bl	80257c0 <__assert_func>
 8003552:	4b08      	ldr	r3, [pc, #32]	; (8003574 <_ZN27CustomContainerKeyboardBaseC1Ev+0x970>)
 8003554:	881b      	ldrh	r3, [r3, #0]
 8003556:	2b02      	cmp	r3, #2
 8003558:	d810      	bhi.n	800357c <_ZN27CustomContainerKeyboardBaseC1Ev+0x978>
 800355a:	4b07      	ldr	r3, [pc, #28]	; (8003578 <_ZN27CustomContainerKeyboardBaseC1Ev+0x974>)
 800355c:	4a03      	ldr	r2, [pc, #12]	; (800356c <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 800355e:	21af      	movs	r1, #175	; 0xaf
 8003560:	e7f4      	b.n	800354c <_ZN27CustomContainerKeyboardBaseC1Ev+0x948>
 8003562:	bf00      	nop
 8003564:	20027a00 	.word	0x20027a00
 8003568:	080273f8 	.word	0x080273f8
 800356c:	0802743a 	.word	0x0802743a
 8003570:	08027468 	.word	0x08027468
 8003574:	20027a04 	.word	0x20027a04
 8003578:	080274af 	.word	0x080274af
        return texts->getText(typedTextId);
 800357c:	4bce      	ldr	r3, [pc, #824]	; (80038b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 800357e:	2102      	movs	r1, #2
 8003580:	6818      	ldr	r0, [r3, #0]
 8003582:	f004 f9b5 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8003586:	4acd      	ldr	r2, [pc, #820]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 8003588:	4603      	mov	r3, r0
 800358a:	2128      	movs	r1, #40	; 0x28
 800358c:	4630      	mov	r0, r6
 800358e:	f015 ffad 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 8003592:	f242 03f4 	movw	r3, #8436	; 0x20f4
        borderBox.setPosition(x, y, width, height);
 8003596:	ee18 7a10 	vmov	r7, s16
 800359a:	50e6      	str	r6, [r4, r3]
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID3));
 800359c:	ee1a 0a10 	vmov	r0, s20
        : typedTextId(id)
 80035a0:	4ec7      	ldr	r6, [pc, #796]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 80035a2:	963a      	str	r6, [sp, #232]	; 0xe8
 80035a4:	2303      	movs	r3, #3
 80035a6:	a93a      	add	r1, sp, #232	; 0xe8
 80035a8:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80035ac:	f00f ff07 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035b0:	2279      	movs	r2, #121	; 0x79
 80035b2:	f107 0034 	add.w	r0, r7, #52	; 0x34
 80035b6:	9200      	str	r2, [sp, #0]
 80035b8:	233c      	movs	r3, #60	; 0x3c
 80035ba:	462a      	mov	r2, r5
 80035bc:	4629      	mov	r1, r5
 80035be:	f7ff fa79 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035c2:	f242 135c 	movw	r3, #8540	; 0x215c
 80035c6:	f04f 0201 	mov.w	r2, #1
 80035ca:	52e2      	strh	r2, [r4, r3]
    flexButton_enter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80035cc:	4bbd      	ldr	r3, [pc, #756]	; (80038c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80035ce:	9300      	str	r3, [sp, #0]
 80035d0:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80035d4:	4abc      	ldr	r2, [pc, #752]	; (80038c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc4>)
 80035d6:	49bd      	ldr	r1, [pc, #756]	; (80038cc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 80035d8:	ee18 0a10 	vmov	r0, s16
 80035dc:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80035e0:	f7ff faa4 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80035e4:	2309      	movs	r3, #9
    flexButton_enter.setText(TypedText(T___SINGLEUSE_CLAL));
 80035e6:	ee18 0a10 	vmov	r0, s16
 80035ea:	a93a      	add	r1, sp, #232	; 0xe8
 80035ec:	963a      	str	r6, [sp, #232]	; 0xe8
 80035ee:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80035f2:	f7ff faa7 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80035f6:	2179      	movs	r1, #121	; 0x79
 80035f8:	2234      	movs	r2, #52	; 0x34
 80035fa:	f107 0078 	add.w	r0, r7, #120	; 0x78
 80035fe:	9100      	str	r1, [sp, #0]
 8003600:	233c      	movs	r3, #60	; 0x3c
 8003602:	4629      	mov	r1, r5
 8003604:	f7ff fa56 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003608:	f242 13ac 	movw	r3, #8620	; 0x21ac
 800360c:	4fb0      	ldr	r7, [pc, #704]	; (80038d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xccc>)
 800360e:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003610:	f242 13b0 	movw	r3, #8624	; 0x21b0
        handlePressedUpdated();
 8003614:	ee18 0a10 	vmov	r0, s16
        colorPressed = newColorPressed;
 8003618:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800361a:	f7ff f8f6 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_enter.setPosition(706, 173, 60, 121);
 800361e:	2179      	movs	r1, #121	; 0x79
 8003620:	ee18 0a10 	vmov	r0, s16
 8003624:	9100      	str	r1, [sp, #0]
 8003626:	233c      	movs	r3, #60	; 0x3c
 8003628:	22ad      	movs	r2, #173	; 0xad
 800362a:	f240 21c2 	movw	r1, #706	; 0x2c2
 800362e:	f7ff fa41 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 8003632:	f242 1328 	movw	r3, #8488	; 0x2128
 8003636:	ee18 0a90 	vmov	r0, s17
 800363a:	263c      	movs	r6, #60	; 0x3c
 800363c:	9903      	ldr	r1, [sp, #12]
 800363e:	50e1      	str	r1, [r4, r3]
 8003640:	462a      	mov	r2, r5
 8003642:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 8003646:	4629      	mov	r1, r5
 8003648:	3034      	adds	r0, #52	; 0x34
 800364a:	9600      	str	r6, [sp, #0]
 800364c:	f7ff fa32 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_space.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003650:	4a9c      	ldr	r2, [pc, #624]	; (80038c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 8003652:	9200      	str	r2, [sp, #0]
 8003654:	f242 2318 	movw	r3, #8728	; 0x2218
 8003658:	f04f 0101 	mov.w	r1, #1
 800365c:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003660:	52e1      	strh	r1, [r4, r3]
 8003662:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003666:	4b9b      	ldr	r3, [pc, #620]	; (80038d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 8003668:	4998      	ldr	r1, [pc, #608]	; (80038cc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 800366a:	ee18 0a90 	vmov	r0, s17
 800366e:	f7ff fa5d 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_space.setWildcardText(TypedText(T_RESOURCEID15));
 8003672:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 8003676:	4b92      	ldr	r3, [pc, #584]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003678:	933a      	str	r3, [sp, #232]	; 0xe8
 800367a:	4661      	mov	r1, ip
 800367c:	230c      	movs	r3, #12
 800367e:	ee18 0a90 	vmov	r0, s17
 8003682:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003686:	f7ff fa6c 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    flexButton_spaceBuffer[0] = 0;
 800368a:	f642 2374 	movw	r3, #10868	; 0x2a74
 800368e:	18e2      	adds	r2, r4, r3
 8003690:	52e5      	strh	r5, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 8003692:	ee18 0a90 	vmov	r0, s17
 8003696:	f242 2368 	movw	r3, #8808	; 0x2268
 800369a:	4629      	mov	r1, r5
 800369c:	50e2      	str	r2, [r4, r3]
 800369e:	3078      	adds	r0, #120	; 0x78
 80036a0:	462a      	mov	r2, r5
 80036a2:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 80036a6:	9600      	str	r6, [sp, #0]
 80036a8:	f7ff fa04 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80036ac:	f242 236c 	movw	r3, #8812	; 0x226c
        handlePressedUpdated();
 80036b0:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 80036b4:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80036b6:	f242 2370 	movw	r3, #8816	; 0x2270
 80036ba:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80036bc:	f7fe fe71 	bl	80023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_space.setPosition(218, 234, 426, 60);
 80036c0:	ee18 0a90 	vmov	r0, s17
 80036c4:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 80036c8:	22ea      	movs	r2, #234	; 0xea
 80036ca:	21da      	movs	r1, #218	; 0xda
 80036cc:	9600      	str	r6, [sp, #0]
 80036ce:	f7ff f9f1 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80036d2:	f242 13e4 	movw	r3, #8676	; 0x21e4
 80036d6:	ee19 0a10 	vmov	r0, s18
 80036da:	9903      	ldr	r1, [sp, #12]
 80036dc:	50e1      	str	r1, [r4, r3]
 80036de:	462a      	mov	r2, r5
 80036e0:	4633      	mov	r3, r6
 80036e2:	4629      	mov	r1, r5
 80036e4:	3034      	adds	r0, #52	; 0x34
 80036e6:	9600      	str	r6, [sp, #0]
 80036e8:	f7ff f9e4 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_language.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80036ec:	4a75      	ldr	r2, [pc, #468]	; (80038c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80036ee:	9200      	str	r2, [sp, #0]
 80036f0:	f242 23d8 	movw	r3, #8920	; 0x22d8
 80036f4:	f04f 0101 	mov.w	r1, #1
 80036f8:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80036fc:	52e1      	strh	r1, [r4, r3]
 80036fe:	ee19 0a10 	vmov	r0, s18
 8003702:	4b74      	ldr	r3, [pc, #464]	; (80038d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 8003704:	4971      	ldr	r1, [pc, #452]	; (80038cc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003706:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800370a:	f7ff fa0f 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_language.setWildcardText(TypedText(T_RESOURCEID13));
 800370e:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003712:	4b6b      	ldr	r3, [pc, #428]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003714:	933a      	str	r3, [sp, #232]	; 0xe8
 8003716:	4671      	mov	r1, lr
 8003718:	2304      	movs	r3, #4
 800371a:	ee19 0a10 	vmov	r0, s18
 800371e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003722:	f7ff fa1e 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003726:	496c      	ldr	r1, [pc, #432]	; (80038d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_languageBuffer, FLEXBUTTON_LANGUAGE_SIZE, "%s", TypedText(T_RESOURCEID4).getText());
 8003728:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 800372c:	680b      	ldr	r3, [r1, #0]
 800372e:	f10e 0e08 	add.w	lr, lr, #8
 8003732:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8003736:	2b00      	cmp	r3, #0
 8003738:	f43f af05 	beq.w	8003546 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800373c:	4867      	ldr	r0, [pc, #412]	; (80038dc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 800373e:	8803      	ldrh	r3, [r0, #0]
 8003740:	2b05      	cmp	r3, #5
 8003742:	f67f af0a 	bls.w	800355a <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 8003746:	485c      	ldr	r0, [pc, #368]	; (80038b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 8003748:	2105      	movs	r1, #5
 800374a:	6800      	ldr	r0, [r0, #0]
 800374c:	f004 f8d0 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8003750:	4a5a      	ldr	r2, [pc, #360]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 8003752:	4603      	mov	r3, r0
 8003754:	210a      	movs	r1, #10
 8003756:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003758:	f015 fec8 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800375c:	f242 3328 	movw	r3, #9000	; 0x2328
        wildcardText.setPosition(x, y, width, height);
 8003760:	ee19 0a10 	vmov	r0, s18
 8003764:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003766:	50e1      	str	r1, [r4, r3]
 8003768:	2214      	movs	r2, #20
 800376a:	4629      	mov	r1, r5
 800376c:	4633      	mov	r3, r6
 800376e:	3078      	adds	r0, #120	; 0x78
 8003770:	9600      	str	r6, [sp, #0]
 8003772:	f7ff f99f 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003776:	f242 332c 	movw	r3, #9004	; 0x232c
        handlePressedUpdated();
 800377a:	ee19 0a10 	vmov	r0, s18
        colorReleased = newColorReleased;
 800377e:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003780:	f242 3330 	movw	r3, #9008	; 0x2330
 8003784:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003786:	f7fe fe0c 	bl	80023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_language.setPosition(157, 234, 60, 60);
 800378a:	ee19 0a10 	vmov	r0, s18
 800378e:	4633      	mov	r3, r6
 8003790:	22ea      	movs	r2, #234	; 0xea
 8003792:	219d      	movs	r1, #157	; 0x9d
 8003794:	9600      	str	r6, [sp, #0]
 8003796:	f7ff f98d 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800379a:	f242 23a4 	movw	r3, #8868	; 0x22a4
 800379e:	9903      	ldr	r1, [sp, #12]
 80037a0:	50e1      	str	r1, [r4, r3]
    customContainer11_1.setXY(645, 112);
 80037a2:	9807      	ldr	r0, [sp, #28]
 80037a4:	2270      	movs	r2, #112	; 0x70
 80037a6:	f240 2185 	movw	r1, #645	; 0x285
 80037aa:	f7fe feaf 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80037ae:	f242 4344 	movw	r3, #9284	; 0x2444
 80037b2:	9939      	ldr	r1, [sp, #228]	; 0xe4
 80037b4:	50e1      	str	r1, [r4, r3]
    customContainer11.setXY(645, 51);
 80037b6:	9808      	ldr	r0, [sp, #32]
 80037b8:	2233      	movs	r2, #51	; 0x33
 80037ba:	f240 2185 	movw	r1, #645	; 0x285
 80037be:	f7fe fea5 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80037c2:	f242 5358 	movw	r3, #9560	; 0x2558
 80037c6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80037c8:	50e1      	str	r1, [r4, r3]
    customContainer12.setXY(706, 51);
 80037ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80037cc:	2233      	movs	r2, #51	; 0x33
 80037ce:	f240 21c2 	movw	r1, #706	; 0x2c2
 80037d2:	f7fe fe9b 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80037d6:	f242 636c 	movw	r3, #9836	; 0x266c
 80037da:	ee19 0a90 	vmov	r0, s19
 80037de:	9926      	ldr	r1, [sp, #152]	; 0x98
 80037e0:	50e1      	str	r1, [r4, r3]
 80037e2:	462a      	mov	r2, r5
 80037e4:	4633      	mov	r3, r6
 80037e6:	4629      	mov	r1, r5
 80037e8:	3034      	adds	r0, #52	; 0x34
 80037ea:	9600      	str	r6, [sp, #0]
 80037ec:	f7ff f962 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_close.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80037f0:	4a34      	ldr	r2, [pc, #208]	; (80038c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80037f2:	9200      	str	r2, [sp, #0]
 80037f4:	f242 63d4 	movw	r3, #9940	; 0x26d4
 80037f8:	f04f 0c01 	mov.w	ip, #1
 80037fc:	f824 c003 	strh.w	ip, [r4, r3]
 8003800:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003804:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003808:	4930      	ldr	r1, [pc, #192]	; (80038cc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 800380a:	ee19 0a90 	vmov	r0, s19
 800380e:	f603 4392 	addw	r3, r3, #3218	; 0xc92
 8003812:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003816:	f7ff f989 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800381a:	f04f 0e06 	mov.w	lr, #6
 800381e:	f8ad e0ec 	strh.w	lr, [sp, #236]	; 0xec
    flexButton_close.setWildcardText(TypedText(T_RESOURCEID14));
 8003822:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003826:	4b26      	ldr	r3, [pc, #152]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003828:	933a      	str	r3, [sp, #232]	; 0xe8
 800382a:	4671      	mov	r1, lr
 800382c:	ee19 0a90 	vmov	r0, s19
 8003830:	f7ff f997 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003834:	4928      	ldr	r1, [pc, #160]	; (80038d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_closeBuffer, FLEXBUTTON_CLOSE_SIZE, "%s", TypedText(T_RESOURCEID5).getText());
 8003836:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 800383a:	680b      	ldr	r3, [r1, #0]
 800383c:	f10e 0e1c 	add.w	lr, lr, #28
 8003840:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8003844:	2b00      	cmp	r3, #0
 8003846:	f43f ae7e 	beq.w	8003546 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800384a:	4824      	ldr	r0, [pc, #144]	; (80038dc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 800384c:	8803      	ldrh	r3, [r0, #0]
 800384e:	2b07      	cmp	r3, #7
 8003850:	f67f ae83 	bls.w	800355a <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 8003854:	4818      	ldr	r0, [pc, #96]	; (80038b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 8003856:	2107      	movs	r1, #7
 8003858:	6800      	ldr	r0, [r0, #0]
 800385a:	f004 f849 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 800385e:	4a17      	ldr	r2, [pc, #92]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 8003860:	4603      	mov	r3, r0
 8003862:	210a      	movs	r1, #10
 8003864:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003866:	f015 fe41 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800386a:	f242 7324 	movw	r3, #10020	; 0x2724
        wildcardText.setPosition(x, y, width, height);
 800386e:	ee19 0a90 	vmov	r0, s19
 8003872:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003874:	50e1      	str	r1, [r4, r3]
 8003876:	2214      	movs	r2, #20
 8003878:	4629      	mov	r1, r5
 800387a:	4633      	mov	r3, r6
 800387c:	3078      	adds	r0, #120	; 0x78
 800387e:	9600      	str	r6, [sp, #0]
 8003880:	f7ff f918 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003884:	f242 7328 	movw	r3, #10024	; 0x2728
        handlePressedUpdated();
 8003888:	ee19 0a90 	vmov	r0, s19
        colorReleased = newColorReleased;
 800388c:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800388e:	f242 732c 	movw	r3, #10028	; 0x272c
 8003892:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003894:	f7fe fd85 	bl	80023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_close.setPosition(96, 234, 60, 60);
 8003898:	ee19 0a90 	vmov	r0, s19
 800389c:	4633      	mov	r3, r6
 800389e:	22ea      	movs	r2, #234	; 0xea
 80038a0:	2160      	movs	r1, #96	; 0x60
 80038a2:	9600      	str	r6, [sp, #0]
 80038a4:	f7ff f906 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038a8:	f242 63a0 	movw	r3, #9888	; 0x26a0
 80038ac:	f04f 0e79 	mov.w	lr, #121	; 0x79
 80038b0:	9903      	ldr	r1, [sp, #12]
 80038b2:	50e1      	str	r1, [r4, r3]
 80038b4:	e014      	b.n	80038e0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcdc>
 80038b6:	bf00      	nop
 80038b8:	20027a0c 	.word	0x20027a0c
 80038bc:	08027501 	.word	0x08027501
 80038c0:	0802750c 	.word	0x0802750c
 80038c4:	ff336699 	.word	0xff336699
 80038c8:	ff0099cc 	.word	0xff0099cc
 80038cc:	ff006699 	.word	0xff006699
 80038d0:	ff0a0a0a 	.word	0xff0a0a0a
 80038d4:	ff003366 	.word	0xff003366
 80038d8:	20027a00 	.word	0x20027a00
 80038dc:	20027a04 	.word	0x20027a04
 80038e0:	f8cd e000 	str.w	lr, [sp]
 80038e4:	462a      	mov	r2, r5
 80038e6:	4629      	mov	r1, r5
 80038e8:	4633      	mov	r3, r6
 80038ea:	f10a 0034 	add.w	r0, sl, #52	; 0x34
 80038ee:	f7ff f8e1 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_shift.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80038f2:	4ad9      	ldr	r2, [pc, #868]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80038f4:	9200      	str	r2, [sp, #0]
 80038f6:	f242 7394 	movw	r3, #10132	; 0x2794
 80038fa:	f04f 0c01 	mov.w	ip, #1
 80038fe:	f824 c003 	strh.w	ip, [r4, r3]
 8003902:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003906:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 800390a:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800390e:	49d3      	ldr	r1, [pc, #844]	; (8003c5c <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003910:	f603 33d2 	addw	r3, r3, #3026	; 0xbd2
 8003914:	4650      	mov	r0, sl
 8003916:	f7ff f909 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_shift.setText(TypedText(T___SINGLEUSE_DBNX));
 800391a:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
        : typedTextId(id)
 800391e:	4bd0      	ldr	r3, [pc, #832]	; (8003c60 <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 8003920:	933a      	str	r3, [sp, #232]	; 0xe8
 8003922:	4671      	mov	r1, lr
 8003924:	2308      	movs	r3, #8
 8003926:	4650      	mov	r0, sl
 8003928:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800392c:	f7ff f90a 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003930:	4629      	mov	r1, r5
 8003932:	2214      	movs	r2, #20
 8003934:	4633      	mov	r3, r6
 8003936:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800393a:	9600      	str	r6, [sp, #0]
 800393c:	f7ff f8ba 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003940:	f242 73e4 	movw	r3, #10212	; 0x27e4
        handlePressedUpdated();
 8003944:	4650      	mov	r0, sl
        colorReleased = newColorReleased;
 8003946:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003948:	f242 73e8 	movw	r3, #10216	; 0x27e8
 800394c:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800394e:	f7fe ff5c 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_shift.setPosition(35, 173, 60, 60);
 8003952:	4633      	mov	r3, r6
 8003954:	22ad      	movs	r2, #173	; 0xad
 8003956:	2123      	movs	r1, #35	; 0x23
 8003958:	4650      	mov	r0, sl
 800395a:	9600      	str	r6, [sp, #0]
 800395c:	f7ff f8aa 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003960:	f242 7360 	movw	r3, #10080	; 0x2760
 8003964:	9903      	ldr	r1, [sp, #12]
 8003966:	50e1      	str	r1, [r4, r3]
 8003968:	462a      	mov	r2, r5
 800396a:	4629      	mov	r1, r5
 800396c:	4633      	mov	r3, r6
 800396e:	f109 0034 	add.w	r0, r9, #52	; 0x34
 8003972:	9600      	str	r6, [sp, #0]
 8003974:	f7ff f89e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_all.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003978:	4ab7      	ldr	r2, [pc, #732]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 800397a:	9200      	str	r2, [sp, #0]
 800397c:	f642 0350 	movw	r3, #10320	; 0x2850
 8003980:	f04f 0c01 	mov.w	ip, #1
 8003984:	f824 c003 	strh.w	ip, [r4, r3]
 8003988:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800398c:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003990:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003994:	49b1      	ldr	r1, [pc, #708]	; (8003c5c <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003996:	4db2      	ldr	r5, [pc, #712]	; (8003c60 <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 8003998:	f603 3316 	addw	r3, r3, #2838	; 0xb16
 800399c:	4648      	mov	r0, r9
 800399e:	f7ff f8c5 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_all.setText(TypedText(T___SINGLEUSE_HLSL));
 80039a2:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 80039a6:	4671      	mov	r1, lr
 80039a8:	230a      	movs	r3, #10
 80039aa:	4648      	mov	r0, r9
 80039ac:	953a      	str	r5, [sp, #232]	; 0xe8
 80039ae:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80039b2:	f7ff f8c7 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80039b6:	2214      	movs	r2, #20
 80039b8:	2100      	movs	r1, #0
 80039ba:	4633      	mov	r3, r6
 80039bc:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80039c0:	9600      	str	r6, [sp, #0]
 80039c2:	f7ff f877 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80039c6:	f642 03a0 	movw	r3, #10400	; 0x28a0
        handlePressedUpdated();
 80039ca:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 80039cc:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80039ce:	f642 03a4 	movw	r3, #10404	; 0x28a4
 80039d2:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80039d4:	f7fe ff19 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_all.setPosition(645, 234, 60, 60);
 80039d8:	4633      	mov	r3, r6
 80039da:	22ea      	movs	r2, #234	; 0xea
 80039dc:	f240 2185 	movw	r1, #645	; 0x285
 80039e0:	4648      	mov	r0, r9
 80039e2:	9600      	str	r6, [sp, #0]
 80039e4:	f7ff f866 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039e8:	f642 031c 	movw	r3, #10268	; 0x281c
 80039ec:	9903      	ldr	r1, [sp, #12]
 80039ee:	50e1      	str	r1, [r4, r3]
 80039f0:	2200      	movs	r2, #0
 80039f2:	4611      	mov	r1, r2
 80039f4:	4633      	mov	r3, r6
 80039f6:	f108 0034 	add.w	r0, r8, #52	; 0x34
 80039fa:	9600      	str	r6, [sp, #0]
 80039fc:	f7ff f85a 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_pre.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003a00:	4a95      	ldr	r2, [pc, #596]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003a02:	9200      	str	r2, [sp, #0]
 8003a04:	f642 130c 	movw	r3, #10508	; 0x290c
 8003a08:	f04f 0c01 	mov.w	ip, #1
 8003a0c:	f824 c003 	strh.w	ip, [r4, r3]
 8003a10:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003a14:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003a18:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003a1c:	498f      	ldr	r1, [pc, #572]	; (8003c5c <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003a1e:	f603 235a 	addw	r3, r3, #2650	; 0xa5a
 8003a22:	4640      	mov	r0, r8
 8003a24:	f7ff f882 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_K2XR));
 8003a28:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003a2c:	4671      	mov	r1, lr
 8003a2e:	230b      	movs	r3, #11
 8003a30:	4640      	mov	r0, r8
 8003a32:	953a      	str	r5, [sp, #232]	; 0xe8
 8003a34:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003a38:	f7ff f884 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003a3c:	2214      	movs	r2, #20
 8003a3e:	2100      	movs	r1, #0
 8003a40:	4633      	mov	r3, r6
 8003a42:	f108 0078 	add.w	r0, r8, #120	; 0x78
 8003a46:	9600      	str	r6, [sp, #0]
 8003a48:	f7ff f834 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003a4c:	f642 135c 	movw	r3, #10588	; 0x295c
        handlePressedUpdated();
 8003a50:	4640      	mov	r0, r8
        colorReleased = newColorReleased;
 8003a52:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003a54:	f642 1360 	movw	r3, #10592	; 0x2960
 8003a58:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003a5a:	f7fe fed6 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(706, 112, 60, 60);
 8003a5e:	4633      	mov	r3, r6
 8003a60:	2270      	movs	r2, #112	; 0x70
 8003a62:	f240 21c2 	movw	r1, #706	; 0x2c2
 8003a66:	4640      	mov	r0, r8
 8003a68:	9600      	str	r6, [sp, #0]
 8003a6a:	f7ff f823 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a6e:	f642 03d8 	movw	r3, #10456	; 0x28d8
 8003a72:	9903      	ldr	r1, [sp, #12]
 8003a74:	50e1      	str	r1, [r4, r3]
 8003a76:	2200      	movs	r2, #0
 8003a78:	4611      	mov	r1, r2
 8003a7a:	4633      	mov	r3, r6
 8003a7c:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 8003a80:	9600      	str	r6, [sp, #0]
 8003a82:	f7ff f817 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_ABC_123.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003a86:	4a74      	ldr	r2, [pc, #464]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003a88:	9200      	str	r2, [sp, #0]
 8003a8a:	f642 13c8 	movw	r3, #10696	; 0x29c8
 8003a8e:	f04f 0c01 	mov.w	ip, #1
 8003a92:	f824 c003 	strh.w	ip, [r4, r3]
 8003a96:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003a9a:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003a9e:	496f      	ldr	r1, [pc, #444]	; (8003c5c <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003aa0:	f603 139e 	addw	r3, r3, #2462	; 0x99e
 8003aa4:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003aa8:	4658      	mov	r0, fp
 8003aaa:	f7ff f83f 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003aae:	953a      	str	r5, [sp, #232]	; 0xe8
    flexButton_ABC_123.setWildcardText(TypedText(T_RESOURCEID17));
 8003ab0:	ad3a      	add	r5, sp, #232	; 0xe8
 8003ab2:	230f      	movs	r3, #15
 8003ab4:	4629      	mov	r1, r5
 8003ab6:	4658      	mov	r0, fp
 8003ab8:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003abc:	f7ff f851 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ac0:	4968      	ldr	r1, [pc, #416]	; (8003c64 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1060>)
 8003ac2:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "%s", TypedText(T_RESOURCEID7).getText());
 8003ac4:	f504 552a 	add.w	r5, r4, #10880	; 0x2a80
 8003ac8:	3530      	adds	r5, #48	; 0x30
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	f43f ad3b 	beq.w	8003546 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003ad0:	4a65      	ldr	r2, [pc, #404]	; (8003c68 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1064>)
 8003ad2:	8813      	ldrh	r3, [r2, #0]
 8003ad4:	2b10      	cmp	r3, #16
 8003ad6:	f67f ad40 	bls.w	800355a <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 8003ada:	4864      	ldr	r0, [pc, #400]	; (8003c6c <_ZN27CustomContainerKeyboardBaseC1Ev+0x1068>)
 8003adc:	2110      	movs	r1, #16
 8003ade:	6800      	ldr	r0, [r0, #0]
 8003ae0:	f003 ff06 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8003ae4:	4a62      	ldr	r2, [pc, #392]	; (8003c70 <_ZN27CustomContainerKeyboardBaseC1Ev+0x106c>)
 8003ae6:	4603      	mov	r3, r0
 8003ae8:	210a      	movs	r1, #10
 8003aea:	4628      	mov	r0, r5
 8003aec:	f015 fcfe 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003af0:	f642 2318 	movw	r3, #10776	; 0x2a18
        wildcardText.setPosition(x, y, width, height);
 8003af4:	2214      	movs	r2, #20
 8003af6:	50e5      	str	r5, [r4, r3]
 8003af8:	2100      	movs	r1, #0
 8003afa:	4633      	mov	r3, r6
 8003afc:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8003b00:	9600      	str	r6, [sp, #0]
 8003b02:	f7fe ffd7 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003b06:	f642 231c 	movw	r3, #10780	; 0x2a1c
        handlePressedUpdated();
 8003b0a:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 8003b0c:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003b0e:	f642 2320 	movw	r3, #10784	; 0x2a20
 8003b12:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003b14:	f7fe fc45 	bl	80023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_ABC_123.setPosition(35, 234, 60, 60);
 8003b18:	4633      	mov	r3, r6
 8003b1a:	4658      	mov	r0, fp
 8003b1c:	9600      	str	r6, [sp, #0]
 8003b1e:	22ea      	movs	r2, #234	; 0xea
 8003b20:	2123      	movs	r1, #35	; 0x23
 8003b22:	f7fe ffc7 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b26:	f642 1394 	movw	r3, #10644	; 0x2994
 8003b2a:	9a03      	ldr	r2, [sp, #12]
 8003b2c:	50e2      	str	r2, [r4, r3]
    add(boxWithBorder1);
 8003b2e:	ee1a 1a90 	vmov	r1, s21
 8003b32:	4620      	mov	r0, r4
 8003b34:	f00d feac 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1);
 8003b38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	f00d fea8 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2);
 8003b40:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003b42:	4620      	mov	r0, r4
 8003b44:	f00d fea4 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3);
 8003b48:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003b4a:	4620      	mov	r0, r4
 8003b4c:	f00d fea0 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4);
 8003b50:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003b52:	4620      	mov	r0, r4
 8003b54:	f00d fe9c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5);
 8003b58:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003b5a:	4620      	mov	r0, r4
 8003b5c:	f00d fe98 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6);
 8003b60:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003b62:	4620      	mov	r0, r4
 8003b64:	f00d fe94 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7);
 8003b68:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003b6a:	4620      	mov	r0, r4
 8003b6c:	f00d fe90 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8);
 8003b70:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003b72:	4620      	mov	r0, r4
 8003b74:	f00d fe8c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9);
 8003b78:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	f00d fe88 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10);
 8003b80:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003b82:	4620      	mov	r0, r4
 8003b84:	f00d fe84 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_1);
 8003b88:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003b8a:	4620      	mov	r0, r4
 8003b8c:	f00d fe80 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_1);
 8003b90:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003b92:	4620      	mov	r0, r4
 8003b94:	f00d fe7c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_1);
 8003b98:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003b9a:	4620      	mov	r0, r4
 8003b9c:	f00d fe78 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_1);
 8003ba0:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003ba2:	4620      	mov	r0, r4
 8003ba4:	f00d fe74 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_1);
 8003ba8:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003baa:	4620      	mov	r0, r4
 8003bac:	f00d fe70 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_1);
 8003bb0:	ee1b 1a10 	vmov	r1, s22
 8003bb4:	4620      	mov	r0, r4
 8003bb6:	f00d fe6b 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_1);
 8003bba:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	f00d fe67 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_1);
 8003bc2:	ee1b 1a90 	vmov	r1, s23
 8003bc6:	4620      	mov	r0, r4
 8003bc8:	f00d fe62 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_1);
 8003bcc:	ee1c 1a10 	vmov	r1, s24
 8003bd0:	4620      	mov	r0, r4
 8003bd2:	f00d fe5d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_1);
 8003bd6:	ee1c 1a90 	vmov	r1, s25
 8003bda:	4620      	mov	r0, r4
 8003bdc:	f00d fe58 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_2);
 8003be0:	ee1d 1a10 	vmov	r1, s26
 8003be4:	4620      	mov	r0, r4
 8003be6:	f00d fe53 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_2);
 8003bea:	ee1d 1a90 	vmov	r1, s27
 8003bee:	4620      	mov	r0, r4
 8003bf0:	f00d fe4e 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_2);
 8003bf4:	ee1e 1a10 	vmov	r1, s28
 8003bf8:	4620      	mov	r0, r4
 8003bfa:	f00d fe49 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_2);
 8003bfe:	ee1e 1a90 	vmov	r1, s29
 8003c02:	4620      	mov	r0, r4
 8003c04:	f00d fe44 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_2);
 8003c08:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003c0a:	4620      	mov	r0, r4
 8003c0c:	f00d fe40 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_2);
 8003c10:	ee1f 1a10 	vmov	r1, s30
 8003c14:	4620      	mov	r0, r4
 8003c16:	f00d fe3b 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_2);
 8003c1a:	ee1f 1a90 	vmov	r1, s31
 8003c1e:	4620      	mov	r0, r4
 8003c20:	f00d fe36 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_2);
 8003c24:	9904      	ldr	r1, [sp, #16]
 8003c26:	4620      	mov	r0, r4
 8003c28:	f00d fe32 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_2);
 8003c2c:	9905      	ldr	r1, [sp, #20]
 8003c2e:	4620      	mov	r0, r4
 8003c30:	f00d fe2e 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_2);
 8003c34:	9906      	ldr	r1, [sp, #24]
 8003c36:	4620      	mov	r0, r4
 8003c38:	f00d fe2a 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 8003c3c:	ee1a 1a10 	vmov	r1, s20
 8003c40:	4620      	mov	r0, r4
 8003c42:	f00d fe25 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_enter);
 8003c46:	ee18 1a10 	vmov	r1, s16
 8003c4a:	4620      	mov	r0, r4
 8003c4c:	f00d fe20 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_space);
 8003c50:	ee18 1a90 	vmov	r1, s17
 8003c54:	e00e      	b.n	8003c74 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1070>
 8003c56:	bf00      	nop
 8003c58:	ff336699 	.word	0xff336699
 8003c5c:	ff006699 	.word	0xff006699
 8003c60:	0802750c 	.word	0x0802750c
 8003c64:	20027a00 	.word	0x20027a00
 8003c68:	20027a04 	.word	0x20027a04
 8003c6c:	20027a0c 	.word	0x20027a0c
 8003c70:	08027501 	.word	0x08027501
 8003c74:	4620      	mov	r0, r4
 8003c76:	f00d fe0b 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_language);
 8003c7a:	ee19 1a10 	vmov	r1, s18
 8003c7e:	4620      	mov	r0, r4
 8003c80:	f00d fe06 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11_1);
 8003c84:	9907      	ldr	r1, [sp, #28]
 8003c86:	4620      	mov	r0, r4
 8003c88:	f00d fe02 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11);
 8003c8c:	9908      	ldr	r1, [sp, #32]
 8003c8e:	4620      	mov	r0, r4
 8003c90:	f00d fdfe 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer12);
 8003c94:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003c96:	4620      	mov	r0, r4
 8003c98:	f00d fdfa 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_close);
 8003c9c:	ee19 1a90 	vmov	r1, s19
 8003ca0:	4620      	mov	r0, r4
 8003ca2:	f00d fdf5 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_shift);
 8003ca6:	4651      	mov	r1, sl
 8003ca8:	4620      	mov	r0, r4
 8003caa:	f00d fdf1 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_all);
 8003cae:	4649      	mov	r1, r9
 8003cb0:	4620      	mov	r0, r4
 8003cb2:	f00d fded 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 8003cb6:	4641      	mov	r1, r8
 8003cb8:	4620      	mov	r0, r4
 8003cba:	f00d fde9 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_ABC_123);
 8003cbe:	4620      	mov	r0, r4
 8003cc0:	4659      	mov	r1, fp
 8003cc2:	f00d fde5 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003cc6:	4620      	mov	r0, r4
 8003cc8:	b03d      	add	sp, #244	; 0xf4
 8003cca:	ecbd 8b10 	vpop	{d8-d15}
 8003cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cd2:	bf00      	nop

08003cd4 <_ZN31CustomContainerKeyboard_NumBaseD1Ev>:

class CustomContainerKeyboard_NumBase : public touchgfx::Container
{
public:
    CustomContainerKeyboard_NumBase();
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003cd4:	4770      	bx	lr

08003cd6 <_ZN31CustomContainerKeyboard_NumBase16ClickButtonEnterEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003cd6:	4770      	bx	lr

08003cd8 <_ZN31CustomContainerKeyboard_NumBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003cd8:	4770      	bx	lr

08003cda <_ZN31CustomContainerKeyboard_NumBase17ClickButtonDelPreEv>:

    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003cda:	4770      	bx	lr

08003cdc <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboard_NumCallback()
 8003cdc:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003cde:	f241 05a8 	movw	r5, #4264	; 0x10a8
    virtual void emitTriggerKeyboard_NumCallback()
 8003ce2:	4604      	mov	r4, r0
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003ce4:	5940      	ldr	r0, [r0, r5]
 8003ce6:	b148      	cbz	r0, 8003cfc <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
 8003ce8:	6803      	ldr	r3, [r0, #0]
 8003cea:	68db      	ldr	r3, [r3, #12]
 8003cec:	4798      	blx	r3
 8003cee:	b128      	cbz	r0, 8003cfc <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
        {
            this->triggerKeyboard_NumCallback->execute();
 8003cf0:	5960      	ldr	r0, [r4, r5]
 8003cf2:	6803      	ldr	r3, [r0, #0]
        }
    }
 8003cf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboard_NumCallback->execute();
 8003cf8:	689b      	ldr	r3, [r3, #8]
 8003cfa:	4718      	bx	r3
    }
 8003cfc:	bd70      	pop	{r4, r5, r6, pc}

08003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboard_NumBase::customContainerButton_key1TriggerButton_keyCallbackHandler()
{
    //Interaction3
    //When customContainerButton_key1 triggerButton_key call action1 on CustomContainerKeyboard_Num
    //Call action1
    action1();
 8003cfe:	6803      	ldr	r3, [r0, #0]
 8003d00:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003d04:	4718      	bx	r3

08003d06 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key2TriggerButton_keyCallbackHandlerEv>:
 8003d06:	f7ff bffa 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d0a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key3TriggerButton_keyCallbackHandlerEv>:
 8003d0a:	f7ff bff8 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d0e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key4TriggerButton_keyCallbackHandlerEv>:
 8003d0e:	f7ff bff6 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d12 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key5TriggerButton_keyCallbackHandlerEv>:
 8003d12:	f7ff bff4 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d16 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key6TriggerButton_keyCallbackHandlerEv>:
 8003d16:	f7ff bff2 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d1a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key7TriggerButton_keyCallbackHandlerEv>:
 8003d1a:	f7ff bff0 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d1e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key8TriggerButton_keyCallbackHandlerEv>:
 8003d1e:	f7ff bfee 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d22 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key9TriggerButton_keyCallbackHandlerEv>:
 8003d22:	f7ff bfec 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d26 <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key10TriggerButton_keyCallbackHandlerEv>:
 8003d26:	f7ff bfea 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d2a <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key11TriggerButton_keyCallbackHandlerEv>:
 8003d2a:	f7ff bfe8 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d2e <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key12TriggerButton_keyCallbackHandlerEv>:
 8003d2e:	f7ff bfe6 	b.w	8003cfe <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d32 <_ZN31CustomContainerKeyboard_NumBase7action1Ev>:
}

void CustomContainerKeyboard_NumBase::action1()
{

}
 8003d32:	4770      	bx	lr

08003d34 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003d34:	4770      	bx	lr

08003d36 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d36:	4770      	bx	lr

08003d38 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7executeEv>:
    virtual void execute()
 8003d38:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8003d3a:	68c2      	ldr	r2, [r0, #12]
 8003d3c:	6841      	ldr	r1, [r0, #4]
 8003d3e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003d40:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8003d42:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003d46:	07d2      	lsls	r2, r2, #31
 8003d48:	bf48      	it	mi
 8003d4a:	590a      	ldrmi	r2, [r1, r4]
 8003d4c:	689b      	ldr	r3, [r3, #8]
    }
 8003d4e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8003d52:	bf48      	it	mi
 8003d54:	58d3      	ldrmi	r3, [r2, r3]
 8003d56:	4718      	bx	r3

08003d58 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8003d58:	6843      	ldr	r3, [r0, #4]
 8003d5a:	b12b      	cbz	r3, 8003d68 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x10>
 8003d5c:	6883      	ldr	r3, [r0, #8]
 8003d5e:	b92b      	cbnz	r3, 8003d6c <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x14>
 8003d60:	68c0      	ldr	r0, [r0, #12]
 8003d62:	f000 0001 	and.w	r0, r0, #1
 8003d66:	4770      	bx	lr
 8003d68:	4618      	mov	r0, r3
 8003d6a:	4770      	bx	lr
 8003d6c:	2001      	movs	r0, #1
    }
 8003d6e:	4770      	bx	lr

08003d70 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d70:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d72:	68c2      	ldr	r2, [r0, #12]
 8003d74:	6844      	ldr	r4, [r0, #4]
 8003d76:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d78:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003d7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d7e:	07d2      	lsls	r2, r2, #31
 8003d80:	bf48      	it	mi
 8003d82:	5962      	ldrmi	r2, [r4, r5]
 8003d84:	689b      	ldr	r3, [r3, #8]
    }
 8003d86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d88:	bf48      	it	mi
 8003d8a:	58d3      	ldrmi	r3, [r2, r3]
 8003d8c:	4718      	bx	r3

08003d8e <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003d8e:	6843      	ldr	r3, [r0, #4]
 8003d90:	b12b      	cbz	r3, 8003d9e <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003d92:	6883      	ldr	r3, [r0, #8]
 8003d94:	b92b      	cbnz	r3, 8003da2 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003d96:	68c0      	ldr	r0, [r0, #12]
 8003d98:	f000 0001 	and.w	r0, r0, #1
 8003d9c:	4770      	bx	lr
 8003d9e:	4618      	mov	r0, r3
 8003da0:	4770      	bx	lr
 8003da2:	2001      	movs	r0, #1
    }
 8003da4:	4770      	bx	lr

08003da6 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003da6:	b510      	push	{r4, lr}
 8003da8:	2110      	movs	r1, #16
 8003daa:	4604      	mov	r4, r0
 8003dac:	f021 fcda 	bl	8025764 <_ZdlPvj>
 8003db0:	4620      	mov	r0, r4
 8003db2:	bd10      	pop	{r4, pc}

08003db4 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003db4:	b510      	push	{r4, lr}
 8003db6:	2110      	movs	r1, #16
 8003db8:	4604      	mov	r4, r0
 8003dba:	f021 fcd3 	bl	8025764 <_ZdlPvj>
 8003dbe:	4620      	mov	r0, r4
 8003dc0:	bd10      	pop	{r4, pc}

08003dc2 <_ZN31CustomContainerKeyboard_NumBaseD0Ev>:
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003dc2:	b510      	push	{r4, lr}
 8003dc4:	f241 01ac 	movw	r1, #4268	; 0x10ac
 8003dc8:	4604      	mov	r4, r0
 8003dca:	f021 fccb 	bl	8025764 <_ZdlPvj>
 8003dce:	4620      	mov	r0, r4
 8003dd0:	bd10      	pop	{r4, pc}

08003dd2 <_ZN31CustomContainerKeyboard_NumBase10initializeEv>:
{
 8003dd2:	b510      	push	{r4, lr}
 8003dd4:	4604      	mov	r4, r0
    customContainerButton_key1.initialize();
 8003dd6:	f500 7006 	add.w	r0, r0, #536	; 0x218
 8003dda:	f003 ff13 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key2.initialize();
 8003dde:	f504 704b 	add.w	r0, r4, #812	; 0x32c
 8003de2:	f003 ff0f 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key3.initialize();
 8003de6:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8003dea:	f003 ff0b 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key4.initialize();
 8003dee:	f204 5054 	addw	r0, r4, #1364	; 0x554
 8003df2:	f003 ff07 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key5.initialize();
 8003df6:	f504 60cd 	add.w	r0, r4, #1640	; 0x668
 8003dfa:	f003 ff03 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key6.initialize();
 8003dfe:	f204 707c 	addw	r0, r4, #1916	; 0x77c
 8003e02:	f003 feff 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key7.initialize();
 8003e06:	f504 6009 	add.w	r0, r4, #2192	; 0x890
 8003e0a:	f003 fefb 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key8.initialize();
 8003e0e:	f604 10a4 	addw	r0, r4, #2468	; 0x9a4
 8003e12:	f003 fef7 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key9.initialize();
 8003e16:	f604 20b8 	addw	r0, r4, #2744	; 0xab8
 8003e1a:	f003 fef3 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key10.initialize();
 8003e1e:	f604 30cc 	addw	r0, r4, #3020	; 0xbcc
 8003e22:	f003 feef 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key11.initialize();
 8003e26:	f504 604e 	add.w	r0, r4, #3296	; 0xce0
 8003e2a:	f003 feeb 	bl	8007c04 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key12.initialize();
 8003e2e:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
}
 8003e32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerButton_key12.initialize();
 8003e36:	f003 bee5 	b.w	8007c04 <_ZN25CustomContainerButton_key10initializeEv>

08003e3a <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboard_NumBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonEnter)
 8003e3a:	f100 0360 	add.w	r3, r0, #96	; 0x60
 8003e3e:	4299      	cmp	r1, r3
{
 8003e40:	b510      	push	{r4, lr}
 8003e42:	4604      	mov	r4, r0
    if (&src == &flexButtonEnter)
 8003e44:	d10a      	bne.n	8003e5c <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButtonEnter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 8003e46:	6803      	ldr	r3, [r0, #0]
 8003e48:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003e4c:	4798      	blx	r3

        //Interaction15
        //When flexButtonEnter clicked emit triggerKeyboard_Num callback
        //Emit callback
        emitTriggerKeyboard_NumCallback();
 8003e4e:	6823      	ldr	r3, [r4, #0]
 8003e50:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8003e54:	4620      	mov	r0, r4
        //Interaction16
        //When flexButton_del_pre clicked call virtual function
        //Call ClickButtonDelPre
        ClickButtonDelPre();
    }
}
 8003e56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonDelPre();
 8003e5a:	4718      	bx	r3
    else if (&src == &flexButtonClose)
 8003e5c:	f500 738e 	add.w	r3, r0, #284	; 0x11c
 8003e60:	4299      	cmp	r1, r3
 8003e62:	d103      	bne.n	8003e6c <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        ClickButtonCloseKeyboard();
 8003e64:	6803      	ldr	r3, [r0, #0]
 8003e66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e6a:	e7f4      	b.n	8003e56 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
    else if (&src == &flexButton_del_pre)
 8003e6c:	f600 7308 	addw	r3, r0, #3848	; 0xf08
 8003e70:	4299      	cmp	r1, r3
 8003e72:	d103      	bne.n	8003e7c <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        ClickButtonDelPre();
 8003e74:	6803      	ldr	r3, [r0, #0]
 8003e76:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003e7a:	e7ec      	b.n	8003e56 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
}
 8003e7c:	bd10      	pop	{r4, pc}
	...

08003e80 <_ZN31CustomContainerKeyboard_NumBaseC1Ev>:
CustomContainerKeyboard_NumBase::CustomContainerKeyboard_NumBase() :
 8003e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e84:	ed2d 8b0c 	vpush	{d8-d13}
 8003e88:	4604      	mov	r4, r0
 8003e8a:	b091      	sub	sp, #68	; 0x44
    triggerKeyboard_NumCallback(0)
 8003e8c:	46a3      	mov	fp, r4
 8003e8e:	2500      	movs	r5, #0
 8003e90:	f7fe fb2a 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8003e94:	4bcd      	ldr	r3, [pc, #820]	; (80041cc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x34c>)
 8003e96:	62a5      	str	r5, [r4, #40]	; 0x28
 8003e98:	f84b 3b2c 	str.w	r3, [fp], #44
        : Box(), borderColor(0), borderSize(0)
 8003e9c:	4658      	mov	r0, fp
 8003e9e:	f7fe fe15 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 8003ea2:	f104 0960 	add.w	r9, r4, #96	; 0x60
 8003ea6:	4bca      	ldr	r3, [pc, #808]	; (80041d0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x350>)
 8003ea8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003eaa:	f504 788e 	add.w	r8, r4, #284	; 0x11c
 8003eae:	65a5      	str	r5, [r4, #88]	; 0x58
 8003eb0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8003eb4:	4648      	mov	r0, r9
 8003eb6:	f7fe fe8f 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003eba:	f504 7aec 	add.w	sl, r4, #472	; 0x1d8
 8003ebe:	4640      	mov	r0, r8
 8003ec0:	f7fe fe8a 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea(), wildcard(0)
 8003ec4:	4650      	mov	r0, sl
 8003ec6:	f7fe fe15 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8003eca:	4bc2      	ldr	r3, [pc, #776]	; (80041d4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x354>)
 8003ecc:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
 8003ed0:	f504 7306 	add.w	r3, r4, #536	; 0x218
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8003eda:	ee08 3a10 	vmov	s16, r3
 8003ede:	f003 fe9b 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003ee2:	f504 734b 	add.w	r3, r4, #812	; 0x32c
 8003ee6:	4618      	mov	r0, r3
 8003ee8:	ee08 3a90 	vmov	s17, r3
 8003eec:	f003 fe94 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003ef0:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003ef4:	4618      	mov	r0, r3
 8003ef6:	ee09 3a10 	vmov	s18, r3
 8003efa:	f003 fe8d 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003efe:	f204 5354 	addw	r3, r4, #1364	; 0x554
 8003f02:	4618      	mov	r0, r3
 8003f04:	ee09 3a90 	vmov	s19, r3
 8003f08:	f003 fe86 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f0c:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
 8003f10:	4618      	mov	r0, r3
 8003f12:	ee0a 3a10 	vmov	s20, r3
 8003f16:	f003 fe7f 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f1a:	f204 737c 	addw	r3, r4, #1916	; 0x77c
 8003f1e:	4618      	mov	r0, r3
 8003f20:	ee0a 3a90 	vmov	s21, r3
 8003f24:	f003 fe78 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f28:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 8003f2c:	4618      	mov	r0, r3
 8003f2e:	ee0b 3a10 	vmov	s22, r3
 8003f32:	f003 fe71 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f36:	f604 13a4 	addw	r3, r4, #2468	; 0x9a4
 8003f3a:	4618      	mov	r0, r3
 8003f3c:	ee0b 3a90 	vmov	s23, r3
 8003f40:	f003 fe6a 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f44:	f604 23b8 	addw	r3, r4, #2744	; 0xab8
 8003f48:	4618      	mov	r0, r3
 8003f4a:	ee0c 3a10 	vmov	s24, r3
 8003f4e:	f003 fe63 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f52:	f604 33cc 	addw	r3, r4, #3020	; 0xbcc
 8003f56:	4618      	mov	r0, r3
 8003f58:	ee0c 3a90 	vmov	s25, r3
 8003f5c:	f003 fe5c 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f60:	f504 634e 	add.w	r3, r4, #3296	; 0xce0
 8003f64:	4618      	mov	r0, r3
 8003f66:	ee0d 3a10 	vmov	s26, r3
 8003f6a:	f003 fe55 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f6e:	f604 53f4 	addw	r3, r4, #3572	; 0xdf4
 8003f72:	4618      	mov	r0, r3
 8003f74:	f604 7708 	addw	r7, r4, #3848	; 0xf08
 8003f78:	ee0d 3a90 	vmov	s27, r3
 8003f7c:	f003 fe4c 	bl	8007c18 <_ZN25CustomContainerButton_keyC1Ev>
 8003f80:	4638      	mov	r0, r7
 8003f82:	f7fe fe29 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003f86:	4b94      	ldr	r3, [pc, #592]	; (80041d8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x358>)
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003f88:	4a94      	ldr	r2, [pc, #592]	; (80041dc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x35c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003f8a:	f8c4 3fd8 	str.w	r3, [r4, #4056]	; 0xfd8
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003f8e:	f8c4 2ff0 	str.w	r2, [r4, #4080]	; 0xff0
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003f92:	4b93      	ldr	r3, [pc, #588]	; (80041e0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x360>)
 8003f94:	f8c4 3fe0 	str.w	r3, [r4, #4064]	; 0xfe0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003f98:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
 8003f9c:	4b91      	ldr	r3, [pc, #580]	; (80041e4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x364>)
 8003f9e:	4992      	ldr	r1, [pc, #584]	; (80041e8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x368>)
 8003fa0:	f8c4 3fe8 	str.w	r3, [r4, #4072]	; 0xfe8
 8003fa4:	f8c4 3ff8 	str.w	r3, [r4, #4088]	; 0xff8
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003fa8:	f8c4 4fdc 	str.w	r4, [r4, #4060]	; 0xfdc
 8003fac:	f8c4 5fe4 	str.w	r5, [r4, #4068]	; 0xfe4
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003fb0:	f8c4 4fec 	str.w	r4, [r4, #4076]	; 0xfec
 8003fb4:	f8c4 5ff4 	str.w	r5, [r4, #4084]	; 0xff4
 8003fb8:	f8c4 4ffc 	str.w	r4, [r4, #4092]	; 0xffc
 8003fbc:	6011      	str	r1, [r2, #0]
 8003fbe:	f241 0204 	movw	r2, #4100	; 0x1004
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003fc2:	4658      	mov	r0, fp
 8003fc4:	50a5      	str	r5, [r4, r2]
 8003fc6:	f241 0208 	movw	r2, #4104	; 0x1008
 8003fca:	18a1      	adds	r1, r4, r2
 8003fcc:	50a3      	str	r3, [r4, r2]
 8003fce:	f241 0210 	movw	r2, #4112	; 0x1010
 8003fd2:	604c      	str	r4, [r1, #4]
 8003fd4:	9104      	str	r1, [sp, #16]
 8003fd6:	4985      	ldr	r1, [pc, #532]	; (80041ec <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x36c>)
 8003fd8:	50a1      	str	r1, [r4, r2]
 8003fda:	f241 0214 	movw	r2, #4116	; 0x1014
 8003fde:	2679      	movs	r6, #121	; 0x79
 8003fe0:	50a5      	str	r5, [r4, r2]
 8003fe2:	f241 0218 	movw	r2, #4120	; 0x1018
 8003fe6:	18a1      	adds	r1, r4, r2
 8003fe8:	50a3      	str	r3, [r4, r2]
 8003fea:	f504 5281 	add.w	r2, r4, #4128	; 0x1020
 8003fee:	604c      	str	r4, [r1, #4]
 8003ff0:	9105      	str	r1, [sp, #20]
 8003ff2:	497f      	ldr	r1, [pc, #508]	; (80041f0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x370>)
 8003ff4:	6011      	str	r1, [r2, #0]
 8003ff6:	f241 0224 	movw	r2, #4132	; 0x1024
 8003ffa:	50a5      	str	r5, [r4, r2]
 8003ffc:	f241 0228 	movw	r2, #4136	; 0x1028
 8004000:	18a1      	adds	r1, r4, r2
 8004002:	50a3      	str	r3, [r4, r2]
 8004004:	f241 0230 	movw	r2, #4144	; 0x1030
 8004008:	604c      	str	r4, [r1, #4]
 800400a:	9106      	str	r1, [sp, #24]
 800400c:	4979      	ldr	r1, [pc, #484]	; (80041f4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x374>)
 800400e:	50a1      	str	r1, [r4, r2]
 8004010:	f241 0234 	movw	r2, #4148	; 0x1034
 8004014:	50a5      	str	r5, [r4, r2]
 8004016:	f241 0238 	movw	r2, #4152	; 0x1038
 800401a:	18a1      	adds	r1, r4, r2
 800401c:	50a3      	str	r3, [r4, r2]
 800401e:	f504 5282 	add.w	r2, r4, #4160	; 0x1040
 8004022:	604c      	str	r4, [r1, #4]
 8004024:	9107      	str	r1, [sp, #28]
 8004026:	4974      	ldr	r1, [pc, #464]	; (80041f8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x378>)
 8004028:	6011      	str	r1, [r2, #0]
 800402a:	f241 0244 	movw	r2, #4164	; 0x1044
 800402e:	50a5      	str	r5, [r4, r2]
 8004030:	f241 0248 	movw	r2, #4168	; 0x1048
 8004034:	18a1      	adds	r1, r4, r2
 8004036:	9108      	str	r1, [sp, #32]
 8004038:	50a3      	str	r3, [r4, r2]
 800403a:	f241 0250 	movw	r2, #4176	; 0x1050
 800403e:	604c      	str	r4, [r1, #4]
 8004040:	496e      	ldr	r1, [pc, #440]	; (80041fc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x37c>)
 8004042:	50a1      	str	r1, [r4, r2]
 8004044:	f241 0254 	movw	r2, #4180	; 0x1054
 8004048:	50a5      	str	r5, [r4, r2]
 800404a:	f241 0258 	movw	r2, #4184	; 0x1058
 800404e:	18a1      	adds	r1, r4, r2
 8004050:	50a3      	str	r3, [r4, r2]
 8004052:	f504 5283 	add.w	r2, r4, #4192	; 0x1060
 8004056:	604c      	str	r4, [r1, #4]
 8004058:	9109      	str	r1, [sp, #36]	; 0x24
 800405a:	4969      	ldr	r1, [pc, #420]	; (8004200 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x380>)
 800405c:	6011      	str	r1, [r2, #0]
 800405e:	f241 0264 	movw	r2, #4196	; 0x1064
 8004062:	50a5      	str	r5, [r4, r2]
 8004064:	f241 0268 	movw	r2, #4200	; 0x1068
 8004068:	18a1      	adds	r1, r4, r2
 800406a:	50a3      	str	r3, [r4, r2]
 800406c:	f241 0270 	movw	r2, #4208	; 0x1070
 8004070:	604c      	str	r4, [r1, #4]
 8004072:	910a      	str	r1, [sp, #40]	; 0x28
 8004074:	4963      	ldr	r1, [pc, #396]	; (8004204 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x384>)
 8004076:	50a1      	str	r1, [r4, r2]
 8004078:	f241 0274 	movw	r2, #4212	; 0x1074
 800407c:	50a5      	str	r5, [r4, r2]
 800407e:	f241 0278 	movw	r2, #4216	; 0x1078
 8004082:	18a1      	adds	r1, r4, r2
 8004084:	50a3      	str	r3, [r4, r2]
 8004086:	f504 5284 	add.w	r2, r4, #4224	; 0x1080
 800408a:	604c      	str	r4, [r1, #4]
 800408c:	910b      	str	r1, [sp, #44]	; 0x2c
 800408e:	495e      	ldr	r1, [pc, #376]	; (8004208 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x388>)
 8004090:	6011      	str	r1, [r2, #0]
 8004092:	f241 0284 	movw	r2, #4228	; 0x1084
 8004096:	50a5      	str	r5, [r4, r2]
 8004098:	f241 0288 	movw	r2, #4232	; 0x1088
 800409c:	18a1      	adds	r1, r4, r2
 800409e:	50a3      	str	r3, [r4, r2]
 80040a0:	f241 0290 	movw	r2, #4240	; 0x1090
 80040a4:	604c      	str	r4, [r1, #4]
 80040a6:	910c      	str	r1, [sp, #48]	; 0x30
 80040a8:	4958      	ldr	r1, [pc, #352]	; (800420c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x38c>)
 80040aa:	50a1      	str	r1, [r4, r2]
 80040ac:	f241 0294 	movw	r2, #4244	; 0x1094
 80040b0:	50a5      	str	r5, [r4, r2]
 80040b2:	f241 0298 	movw	r2, #4248	; 0x1098
 80040b6:	18a1      	adds	r1, r4, r2
 80040b8:	50a3      	str	r3, [r4, r2]
 80040ba:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80040be:	4a54      	ldr	r2, [pc, #336]	; (8004210 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x390>)
 80040c0:	604c      	str	r4, [r1, #4]
 80040c2:	601a      	str	r2, [r3, #0]
 80040c4:	f241 03a4 	movw	r3, #4260	; 0x10a4
 80040c8:	910d      	str	r1, [sp, #52]	; 0x34
 80040ca:	50e5      	str	r5, [r4, r3]
    triggerKeyboard_NumCallback(0)
 80040cc:	f241 03a8 	movw	r3, #4264	; 0x10a8
    boxWithBorder1.setPosition(0, 0, 270, 300);
 80040d0:	462a      	mov	r2, r5
    triggerKeyboard_NumCallback(0)
 80040d2:	50e5      	str	r5, [r4, r3]
 80040d4:	4b4f      	ldr	r3, [pc, #316]	; (8004214 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x394>)
 80040d6:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(0, 0, 270, 300);
 80040d8:	f44f 7396 	mov.w	r3, #300	; 0x12c
 80040dc:	9300      	str	r3, [sp, #0]
 80040de:	4629      	mov	r1, r5
 80040e0:	f44f 7387 	mov.w	r3, #270	; 0x10e
 80040e4:	f7fe fce6 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80040e8:	4a4b      	ldr	r2, [pc, #300]	; (8004218 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x398>)
 80040ea:	9600      	str	r6, [sp, #0]
 80040ec:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80040f0:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 80040f4:	2305      	movs	r3, #5
 80040f6:	462a      	mov	r2, r5
 80040f8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80040fc:	4629      	mov	r1, r5
 80040fe:	233c      	movs	r3, #60	; 0x3c
 8004100:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8004104:	f7fe fcd6 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004108:	f04f 0301 	mov.w	r3, #1
        down = colorPressed;
 800410c:	4943      	ldr	r1, [pc, #268]	; (800421c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 800410e:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 8004112:	4b43      	ldr	r3, [pc, #268]	; (8004220 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        borderUp = borderColorReleased;
 8004114:	4843      	ldr	r0, [pc, #268]	; (8004224 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
 8004116:	f8c4 00d0 	str.w	r0, [r4, #208]	; 0xd0
        down = colorPressed;
 800411a:	e9c4 3132 	strd	r3, r1, [r4, #200]	; 0xc8
        borderDown = borderColorPressed;
 800411e:	f503 134c 	add.w	r3, r3, #3342336	; 0x330000
 8004122:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        handlePressedUpdated();
 8004126:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004128:	4648      	mov	r0, r9
 800412a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800412e:	4798      	blx	r3
    flexButtonEnter.setText(TypedText(T___SINGLEUSE_O6I9));
 8004130:	f10d 0e38 	add.w	lr, sp, #56	; 0x38
        : typedTextId(id)
 8004134:	4b3c      	ldr	r3, [pc, #240]	; (8004228 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 8004136:	930e      	str	r3, [sp, #56]	; 0x38
 8004138:	4671      	mov	r1, lr
 800413a:	231c      	movs	r3, #28
 800413c:	4648      	mov	r0, r9
 800413e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004142:	f7fe fcff 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8004146:	2232      	movs	r2, #50	; 0x32
 8004148:	4629      	mov	r1, r5
 800414a:	9600      	str	r6, [sp, #0]
 800414c:	233c      	movs	r3, #60	; 0x3c
 800414e:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 8004152:	f7fe fcaf 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8004156:	4b35      	ldr	r3, [pc, #212]	; (800422c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3ac>)
        handlePressedUpdated();
 8004158:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 800415a:	e9c4 3345 	strd	r3, r3, [r4, #276]	; 0x114
        handlePressedUpdated();
 800415e:	f7fe fb54 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonEnter.setPosition(196, 106, 60, 121);
 8004162:	9600      	str	r6, [sp, #0]
 8004164:	233c      	movs	r3, #60	; 0x3c
    flexButtonEnter.setAction(flexButtonCallback);
 8004166:	f604 76d8 	addw	r6, r4, #4056	; 0xfd8
    flexButtonEnter.setPosition(196, 106, 60, 121);
 800416a:	226a      	movs	r2, #106	; 0x6a
 800416c:	21c4      	movs	r1, #196	; 0xc4
 800416e:	4648      	mov	r0, r9
 8004170:	f7fe fca0 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonEnter.setAction(flexButtonCallback);
 8004174:	9602      	str	r6, [sp, #8]
 8004176:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
        borderBox.setPosition(x, y, width, height);
 800417a:	263c      	movs	r6, #60	; 0x3c
 800417c:	4633      	mov	r3, r6
 800417e:	462a      	mov	r2, r5
 8004180:	4629      	mov	r1, r5
 8004182:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8004186:	9600      	str	r6, [sp, #0]
 8004188:	f7fe fc94 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 800418c:	4923      	ldr	r1, [pc, #140]	; (800421c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 800418e:	4a24      	ldr	r2, [pc, #144]	; (8004220 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        handlePressedUpdated();
 8004190:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
        borderUp = borderColorReleased;
 8004194:	4823      	ldr	r0, [pc, #140]	; (8004224 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
        handlePressedUpdated();
 8004196:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        borderUp = borderColorReleased;
 800419a:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
 800419e:	f04f 0c01 	mov.w	ip, #1
        down = colorPressed;
 80041a2:	e9c4 2161 	strd	r2, r1, [r4, #388]	; 0x184
        borderDown = borderColorPressed;
 80041a6:	f502 124c 	add.w	r2, r2, #3342336	; 0x330000
 80041aa:	f8a4 c180 	strh.w	ip, [r4, #384]	; 0x180
 80041ae:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 80041b2:	4640      	mov	r0, r8
 80041b4:	4798      	blx	r3
 80041b6:	4a1c      	ldr	r2, [pc, #112]	; (8004228 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 80041b8:	920e      	str	r2, [sp, #56]	; 0x38
 80041ba:	231b      	movs	r3, #27
    flexButtonClose.setText(TypedText(T___SINGLEUSE_66SU));
 80041bc:	a90e      	add	r1, sp, #56	; 0x38
 80041be:	4640      	mov	r0, r8
 80041c0:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 80041c4:	f7fe fcbe 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
 80041c8:	e032      	b.n	8004230 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3b0>
 80041ca:	bf00      	nop
 80041cc:	080278b0 	.word	0x080278b0
 80041d0:	0802a200 	.word	0x0802a200
 80041d4:	0802a0e0 	.word	0x0802a0e0
 80041d8:	08027880 	.word	0x08027880
 80041dc:	08003cff 	.word	0x08003cff
 80041e0:	08003e3b 	.word	0x08003e3b
 80041e4:	08027898 	.word	0x08027898
 80041e8:	08003d07 	.word	0x08003d07
 80041ec:	08003d0b 	.word	0x08003d0b
 80041f0:	08003d0f 	.word	0x08003d0f
 80041f4:	08003d13 	.word	0x08003d13
 80041f8:	08003d17 	.word	0x08003d17
 80041fc:	08003d1b 	.word	0x08003d1b
 8004200:	08003d1f 	.word	0x08003d1f
 8004204:	08003d23 	.word	0x08003d23
 8004208:	08003d27 	.word	0x08003d27
 800420c:	08003d2b 	.word	0x08003d2b
 8004210:	08003d2f 	.word	0x08003d2f
 8004214:	012c010e 	.word	0x012c010e
 8004218:	ff878787 	.word	0xff878787
 800421c:	ff0099cc 	.word	0xff0099cc
 8004220:	ff006699 	.word	0xff006699
 8004224:	ff003366 	.word	0xff003366
 8004228:	0802750c 	.word	0x0802750c
 800422c:	ff0a0a0a 	.word	0xff0a0a0a
        text.setPosition(x, y, width, height);
 8004230:	2214      	movs	r2, #20
 8004232:	4629      	mov	r1, r5
 8004234:	4633      	mov	r3, r6
 8004236:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 800423a:	9600      	str	r6, [sp, #0]
 800423c:	f7fe fc3a 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8004240:	4baa      	ldr	r3, [pc, #680]	; (80044ec <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
        handlePressedUpdated();
 8004242:	4640      	mov	r0, r8
        colorPressed = newColorPressed;
 8004244:	e9c4 3374 	strd	r3, r3, [r4, #464]	; 0x1d0
        handlePressedUpdated();
 8004248:	f7fe fadf 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonClose.setPosition(196, 228, 60, 60);
 800424c:	4633      	mov	r3, r6
 800424e:	22e4      	movs	r2, #228	; 0xe4
 8004250:	21c4      	movs	r1, #196	; 0xc4
 8004252:	4640      	mov	r0, r8
 8004254:	9600      	str	r6, [sp, #0]
 8004256:	f7fe fc2d 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800425a:	9b02      	ldr	r3, [sp, #8]
 800425c:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    textArea1.setPosition(13, 14, 200, 25);
 8004260:	2319      	movs	r3, #25
 8004262:	9300      	str	r3, [sp, #0]
 8004264:	220e      	movs	r2, #14
 8004266:	23c8      	movs	r3, #200	; 0xc8
 8004268:	210d      	movs	r1, #13
 800426a:	4650      	mov	r0, sl
 800426c:	f7fe fc22 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004270:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004274:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4UB8).getText());
 8004278:	f604 73c4 	addw	r3, r4, #4036	; 0xfc4
 800427c:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800427e:	4b9c      	ldr	r3, [pc, #624]	; (80044f0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x670>)
        linespace = space;
 8004280:	f8a4 520c 	strh.w	r5, [r4, #524]	; 0x20c
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	b92b      	cbnz	r3, 8004294 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x414>
 8004288:	4b9a      	ldr	r3, [pc, #616]	; (80044f4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x674>)
 800428a:	4a9b      	ldr	r2, [pc, #620]	; (80044f8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 800428c:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800428e:	489b      	ldr	r0, [pc, #620]	; (80044fc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x67c>)
 8004290:	f021 fa96 	bl	80257c0 <__assert_func>
 8004294:	4b9a      	ldr	r3, [pc, #616]	; (8004500 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x680>)
 8004296:	881b      	ldrh	r3, [r3, #0]
 8004298:	2b1a      	cmp	r3, #26
 800429a:	d803      	bhi.n	80042a4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x424>
 800429c:	4b99      	ldr	r3, [pc, #612]	; (8004504 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x684>)
 800429e:	4a96      	ldr	r2, [pc, #600]	; (80044f8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 80042a0:	21af      	movs	r1, #175	; 0xaf
 80042a2:	e7f4      	b.n	800428e <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x40e>
        return texts->getText(typedTextId);
 80042a4:	4b98      	ldr	r3, [pc, #608]	; (8004508 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x688>)
 80042a6:	211a      	movs	r1, #26
 80042a8:	6818      	ldr	r0, [r3, #0]
 80042aa:	f003 fb21 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80042ae:	4a97      	ldr	r2, [pc, #604]	; (800450c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x68c>)
 80042b0:	4603      	mov	r3, r0
 80042b2:	210a      	movs	r1, #10
 80042b4:	9803      	ldr	r0, [sp, #12]
 80042b6:	f015 f919 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 80042ba:	9b03      	ldr	r3, [sp, #12]
 80042bc:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        : typedTextId(id)
 80042c0:	f04f 0219 	mov.w	r2, #25
 80042c4:	4b92      	ldr	r3, [pc, #584]	; (8004510 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 80042c6:	930e      	str	r3, [sp, #56]	; 0x38
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z4JY));
 80042c8:	a90e      	add	r1, sp, #56	; 0x38
 80042ca:	4650      	mov	r0, sl
 80042cc:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 80042d0:	f00f f875 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    customContainerButton_key1.setXY(13, 45);
 80042d4:	ee18 0a10 	vmov	r0, s16
 80042d8:	222d      	movs	r2, #45	; 0x2d
 80042da:	210d      	movs	r1, #13
 80042dc:	f7fe f916 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key1.setTriggerButton_keyCallback(customContainerButton_key1TriggerButton_keyCallback);
 80042e0:	f604 73e8 	addw	r3, r4, #4072	; 0xfe8
    customContainerButton_key2.setXY(74, 45);
 80042e4:	ee18 0a90 	vmov	r0, s17
 80042e8:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
 80042ec:	222d      	movs	r2, #45	; 0x2d
 80042ee:	214a      	movs	r1, #74	; 0x4a
 80042f0:	f7fe f90c 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key2.setTriggerButton_keyCallback(customContainerButton_key2TriggerButton_keyCallback);
 80042f4:	f604 73f8 	addw	r3, r4, #4088	; 0xff8
 80042f8:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    customContainerButton_key3.setXY(135, 45);
 80042fc:	ee19 0a10 	vmov	r0, s18
 8004300:	222d      	movs	r2, #45	; 0x2d
 8004302:	2187      	movs	r1, #135	; 0x87
 8004304:	f7fe f902 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8004308:	9a04      	ldr	r2, [sp, #16]
 800430a:	f8c4 2550 	str.w	r2, [r4, #1360]	; 0x550
    customContainerButton_key4.setXY(13, 106);
 800430e:	ee19 0a90 	vmov	r0, s19
 8004312:	226a      	movs	r2, #106	; 0x6a
 8004314:	210d      	movs	r1, #13
 8004316:	f7fe f8f9 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800431a:	9a05      	ldr	r2, [sp, #20]
 800431c:	f8c4 2664 	str.w	r2, [r4, #1636]	; 0x664
    customContainerButton_key5.setXY(74, 106);
 8004320:	ee1a 0a10 	vmov	r0, s20
 8004324:	226a      	movs	r2, #106	; 0x6a
 8004326:	214a      	movs	r1, #74	; 0x4a
 8004328:	f7fe f8f0 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800432c:	9a06      	ldr	r2, [sp, #24]
 800432e:	f8c4 2778 	str.w	r2, [r4, #1912]	; 0x778
    customContainerButton_key6.setXY(135, 106);
 8004332:	ee1a 0a90 	vmov	r0, s21
 8004336:	226a      	movs	r2, #106	; 0x6a
 8004338:	2187      	movs	r1, #135	; 0x87
 800433a:	f7fe f8e7 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800433e:	9a07      	ldr	r2, [sp, #28]
 8004340:	f8c4 288c 	str.w	r2, [r4, #2188]	; 0x88c
    customContainerButton_key7.setXY(13, 167);
 8004344:	ee1b 0a10 	vmov	r0, s22
 8004348:	22a7      	movs	r2, #167	; 0xa7
 800434a:	210d      	movs	r1, #13
 800434c:	f7fe f8de 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8004350:	9a08      	ldr	r2, [sp, #32]
 8004352:	f8c4 29a0 	str.w	r2, [r4, #2464]	; 0x9a0
    customContainerButton_key8.setXY(74, 167);
 8004356:	ee1b 0a90 	vmov	r0, s23
 800435a:	22a7      	movs	r2, #167	; 0xa7
 800435c:	214a      	movs	r1, #74	; 0x4a
 800435e:	f7fe f8d5 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8004362:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004364:	f8c4 2ab4 	str.w	r2, [r4, #2740]	; 0xab4
    customContainerButton_key9.setXY(135, 167);
 8004368:	ee1c 0a10 	vmov	r0, s24
 800436c:	22a7      	movs	r2, #167	; 0xa7
 800436e:	2187      	movs	r1, #135	; 0x87
 8004370:	f7fe f8cc 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8004374:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004376:	f8c4 2bc8 	str.w	r2, [r4, #3016]	; 0xbc8
    customContainerButton_key10.setXY(13, 228);
 800437a:	ee1c 0a90 	vmov	r0, s25
 800437e:	22e4      	movs	r2, #228	; 0xe4
 8004380:	210d      	movs	r1, #13
 8004382:	f7fe f8c3 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8004386:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004388:	f8c4 2cdc 	str.w	r2, [r4, #3292]	; 0xcdc
    customContainerButton_key11.setXY(74, 228);
 800438c:	ee1d 0a10 	vmov	r0, s26
 8004390:	22e4      	movs	r2, #228	; 0xe4
 8004392:	214a      	movs	r1, #74	; 0x4a
 8004394:	f7fe f8ba 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8004398:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800439a:	f8c4 2df0 	str.w	r2, [r4, #3568]	; 0xdf0
    customContainerButton_key12.setXY(135, 228);
 800439e:	ee1d 0a90 	vmov	r0, s27
 80043a2:	22e4      	movs	r2, #228	; 0xe4
 80043a4:	2187      	movs	r1, #135	; 0x87
 80043a6:	f7fe f8b1 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80043aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80043ac:	f8c4 2f04 	str.w	r2, [r4, #3844]	; 0xf04
        borderBox.setPosition(x, y, width, height);
 80043b0:	4629      	mov	r1, r5
 80043b2:	4633      	mov	r3, r6
 80043b4:	462a      	mov	r2, r5
 80043b6:	f604 703c 	addw	r0, r4, #3900	; 0xf3c
 80043ba:	9600      	str	r6, [sp, #0]
 80043bc:	f7fe fb7a 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043c0:	f04f 0201 	mov.w	r2, #1
 80043c4:	f8a4 2f6c 	strh.w	r2, [r4, #3948]	; 0xf6c
        up = colorReleased;
 80043c8:	4a52      	ldr	r2, [pc, #328]	; (8004514 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x694>)
 80043ca:	f8c4 2f70 	str.w	r2, [r4, #3952]	; 0xf70
        down = colorPressed;
 80043ce:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 80043d2:	3233      	adds	r2, #51	; 0x33
 80043d4:	f8c4 2f74 	str.w	r2, [r4, #3956]	; 0xf74
        borderUp = borderColorReleased;
 80043d8:	f5a2 42cc 	sub.w	r2, r2, #26112	; 0x6600
 80043dc:	3a66      	subs	r2, #102	; 0x66
        handlePressedUpdated();
 80043de:	f8d4 3f08 	ldr.w	r3, [r4, #3848]	; 0xf08
        borderUp = borderColorReleased;
 80043e2:	f8c4 2f78 	str.w	r2, [r4, #3960]	; 0xf78
        borderDown = borderColorPressed;
 80043e6:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 80043ea:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 80043ee:	f8c4 2f7c 	str.w	r2, [r4, #3964]	; 0xf7c
        handlePressedUpdated();
 80043f2:	4638      	mov	r0, r7
 80043f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80043f8:	4798      	blx	r3
 80043fa:	4b45      	ldr	r3, [pc, #276]	; (8004510 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 80043fc:	930e      	str	r3, [sp, #56]	; 0x38
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_TS12));
 80043fe:	a90e      	add	r1, sp, #56	; 0x38
 8004400:	2316      	movs	r3, #22
 8004402:	4638      	mov	r0, r7
 8004404:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004408:	f7fe fb9c 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800440c:	4629      	mov	r1, r5
 800440e:	4633      	mov	r3, r6
 8004410:	2214      	movs	r2, #20
 8004412:	f504 6078 	add.w	r0, r4, #3968	; 0xf80
 8004416:	9600      	str	r6, [sp, #0]
 8004418:	f7fe fb4c 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800441c:	4b33      	ldr	r3, [pc, #204]	; (80044ec <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
 800441e:	f8c4 3fbc 	str.w	r3, [r4, #4028]	; 0xfbc
        colorPressed = newColorPressed;
 8004422:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        handlePressedUpdated();
 8004426:	4638      	mov	r0, r7
 8004428:	f7fe f9ef 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(196, 45, 60, 60);
 800442c:	222d      	movs	r2, #45	; 0x2d
 800442e:	4633      	mov	r3, r6
 8004430:	4638      	mov	r0, r7
 8004432:	9600      	str	r6, [sp, #0]
 8004434:	21c4      	movs	r1, #196	; 0xc4
 8004436:	f7fe fb3d 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800443a:	9b02      	ldr	r3, [sp, #8]
 800443c:	f8c4 3f38 	str.w	r3, [r4, #3896]	; 0xf38
    add(boxWithBorder1);
 8004440:	4659      	mov	r1, fp
 8004442:	4620      	mov	r0, r4
 8004444:	f00d fa24 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonEnter);
 8004448:	4649      	mov	r1, r9
 800444a:	4620      	mov	r0, r4
 800444c:	f00d fa20 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonClose);
 8004450:	4641      	mov	r1, r8
 8004452:	4620      	mov	r0, r4
 8004454:	f00d fa1c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 8004458:	4651      	mov	r1, sl
 800445a:	4620      	mov	r0, r4
 800445c:	f00d fa18 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key1);
 8004460:	ee18 1a10 	vmov	r1, s16
 8004464:	4620      	mov	r0, r4
 8004466:	f00d fa13 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key2);
 800446a:	ee18 1a90 	vmov	r1, s17
 800446e:	4620      	mov	r0, r4
 8004470:	f00d fa0e 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key3);
 8004474:	ee19 1a10 	vmov	r1, s18
 8004478:	4620      	mov	r0, r4
 800447a:	f00d fa09 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key4);
 800447e:	ee19 1a90 	vmov	r1, s19
 8004482:	4620      	mov	r0, r4
 8004484:	f00d fa04 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key5);
 8004488:	ee1a 1a10 	vmov	r1, s20
 800448c:	4620      	mov	r0, r4
 800448e:	f00d f9ff 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key6);
 8004492:	ee1a 1a90 	vmov	r1, s21
 8004496:	4620      	mov	r0, r4
 8004498:	f00d f9fa 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key7);
 800449c:	ee1b 1a10 	vmov	r1, s22
 80044a0:	4620      	mov	r0, r4
 80044a2:	f00d f9f5 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key8);
 80044a6:	ee1b 1a90 	vmov	r1, s23
 80044aa:	4620      	mov	r0, r4
 80044ac:	f00d f9f0 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key9);
 80044b0:	ee1c 1a10 	vmov	r1, s24
 80044b4:	4620      	mov	r0, r4
 80044b6:	f00d f9eb 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key10);
 80044ba:	ee1c 1a90 	vmov	r1, s25
 80044be:	4620      	mov	r0, r4
 80044c0:	f00d f9e6 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key11);
 80044c4:	ee1d 1a10 	vmov	r1, s26
 80044c8:	4620      	mov	r0, r4
 80044ca:	f00d f9e1 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key12);
 80044ce:	ee1d 1a90 	vmov	r1, s27
 80044d2:	4620      	mov	r0, r4
 80044d4:	f00d f9dc 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 80044d8:	4620      	mov	r0, r4
 80044da:	4639      	mov	r1, r7
 80044dc:	f00d f9d8 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80044e0:	4620      	mov	r0, r4
 80044e2:	b011      	add	sp, #68	; 0x44
 80044e4:	ecbd 8b0c 	vpop	{d8-d13}
 80044e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044ec:	ff0a0a0a 	.word	0xff0a0a0a
 80044f0:	20027a00 	.word	0x20027a00
 80044f4:	080273f8 	.word	0x080273f8
 80044f8:	0802743a 	.word	0x0802743a
 80044fc:	08027468 	.word	0x08027468
 8004500:	20027a04 	.word	0x20027a04
 8004504:	080274af 	.word	0x080274af
 8004508:	20027a0c 	.word	0x20027a0c
 800450c:	08027501 	.word	0x08027501
 8004510:	0802750c 	.word	0x0802750c
 8004514:	ff006699 	.word	0xff006699

08004518 <_ZN27CustomContainerTableLogBaseD1Ev>:

class CustomContainerTableLogBase : public touchgfx::Container
{
public:
    CustomContainerTableLogBase();
    virtual ~CustomContainerTableLogBase() {}
 8004518:	4770      	bx	lr

0800451a <_ZN27CustomContainerTableLogBase10initializeEv>:
}

void CustomContainerTableLogBase::initialize()
{

}
 800451a:	4770      	bx	lr

0800451c <_ZN27CustomContainerTableLogBaseD0Ev>:
 800451c:	b510      	push	{r4, lr}
 800451e:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004522:	4604      	mov	r4, r0
 8004524:	f021 f91e 	bl	8025764 <_ZdlPvj>
 8004528:	4620      	mov	r0, r4
 800452a:	bd10      	pop	{r4, pc}

0800452c <_ZN8touchgfx13BoxWithBorderC1Ev>:
    BoxWithBorder()
 800452c:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 800452e:	2226      	movs	r2, #38	; 0x26
 8004530:	4604      	mov	r4, r0
 8004532:	2100      	movs	r1, #0
 8004534:	f021 faf2 	bl	8025b1c <memset>
 8004538:	4620      	mov	r0, r4
 800453a:	f7fd ffd5 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 800453e:	23ff      	movs	r3, #255	; 0xff
        : Box(), borderColor(0), borderSize(0)
 8004540:	4a04      	ldr	r2, [pc, #16]	; (8004554 <_ZN8touchgfx13BoxWithBorderC1Ev+0x28>)
 8004542:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 8004546:	2300      	movs	r3, #0
 8004548:	62a3      	str	r3, [r4, #40]	; 0x28
 800454a:	6022      	str	r2, [r4, #0]
 800454c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800454e:	8623      	strh	r3, [r4, #48]	; 0x30
    }
 8004550:	4620      	mov	r0, r4
 8004552:	bd10      	pop	{r4, pc}
 8004554:	0802a200 	.word	0x0802a200

08004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004558:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800455a:	2226      	movs	r2, #38	; 0x26
 800455c:	4604      	mov	r4, r0
 800455e:	2100      	movs	r1, #0
 8004560:	f021 fadc 	bl	8025b1c <memset>
 8004564:	4620      	mov	r0, r4
 8004566:	f7fd ffbf 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 800456a:	4b08      	ldr	r3, [pc, #32]	; (800458c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x34>)
 800456c:	62a3      	str	r3, [r4, #40]	; 0x28
 800456e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004572:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8004574:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8004578:	2300      	movs	r3, #0
 800457a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextArea(), wildcard(0)
 800457e:	4a04      	ldr	r2, [pc, #16]	; (8004590 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x38>)
 8004580:	8723      	strh	r3, [r4, #56]	; 0x38
 8004582:	6022      	str	r2, [r4, #0]
 8004584:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8004586:	4620      	mov	r0, r4
 8004588:	bd10      	pop	{r4, pc}
 800458a:	bf00      	nop
 800458c:	0802750c 	.word	0x0802750c
 8004590:	0802a0e0 	.word	0x0802a0e0

08004594 <_ZN27CustomContainerTableLogBaseC1Ev>:
CustomContainerTableLogBase::CustomContainerTableLogBase()
 8004594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004598:	ed2d 8b10 	vpush	{d8-d15}
 800459c:	4604      	mov	r4, r0
 800459e:	b087      	sub	sp, #28
 80045a0:	f7fd ffa2 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80045a4:	4622      	mov	r2, r4
 80045a6:	2500      	movs	r5, #0
 80045a8:	4b8e      	ldr	r3, [pc, #568]	; (80047e4 <_ZN27CustomContainerTableLogBaseC1Ev+0x250>)
 80045aa:	62a5      	str	r5, [r4, #40]	; 0x28
 80045ac:	f842 3b2c 	str.w	r3, [r2], #44
 80045b0:	4610      	mov	r0, r2
 80045b2:	ee08 2a10 	vmov	s16, r2
 80045b6:	f7ff ffb9 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045ba:	f104 0360 	add.w	r3, r4, #96	; 0x60
 80045be:	4618      	mov	r0, r3
 80045c0:	ee0d 3a10 	vmov	s26, r3
 80045c4:	f7ff ffb2 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045c8:	f104 0394 	add.w	r3, r4, #148	; 0x94
 80045cc:	4618      	mov	r0, r3
 80045ce:	ee0d 3a90 	vmov	s27, r3
 80045d2:	f7ff ffab 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045d6:	f104 03c8 	add.w	r3, r4, #200	; 0xc8
 80045da:	4618      	mov	r0, r3
 80045dc:	ee0e 3a10 	vmov	s28, r3
 80045e0:	f7ff ffa4 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045e4:	f104 03fc 	add.w	r3, r4, #252	; 0xfc
 80045e8:	4618      	mov	r0, r3
 80045ea:	ee0e 3a90 	vmov	s29, r3
 80045ee:	f7ff ff9d 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045f2:	f504 7398 	add.w	r3, r4, #304	; 0x130
 80045f6:	4618      	mov	r0, r3
 80045f8:	ee0f 3a10 	vmov	s30, r3
 80045fc:	f7ff ff96 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004600:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8004604:	4618      	mov	r0, r3
 8004606:	ee0f 3a90 	vmov	s31, r3
 800460a:	f7ff ff8f 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800460e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8004612:	4618      	mov	r0, r3
 8004614:	9302      	str	r3, [sp, #8]
 8004616:	f7ff ff89 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800461a:	f504 73e6 	add.w	r3, r4, #460	; 0x1cc
 800461e:	4618      	mov	r0, r3
 8004620:	9303      	str	r3, [sp, #12]
 8004622:	f7ff ff83 	bl	800452c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004626:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800462a:	4618      	mov	r0, r3
 800462c:	ee08 3a90 	vmov	s17, r3
 8004630:	f7ff ff92 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004634:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004638:	4618      	mov	r0, r3
 800463a:	ee09 3a10 	vmov	s18, r3
 800463e:	f7ff ff8b 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004642:	f504 7320 	add.w	r3, r4, #640	; 0x280
 8004646:	4618      	mov	r0, r3
 8004648:	ee09 3a90 	vmov	s19, r3
 800464c:	f7ff ff84 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004650:	f504 7330 	add.w	r3, r4, #704	; 0x2c0
 8004654:	4618      	mov	r0, r3
 8004656:	ee0a 3a10 	vmov	s20, r3
 800465a:	f7ff ff7d 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800465e:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8004662:	4618      	mov	r0, r3
 8004664:	ee0a 3a90 	vmov	s21, r3
 8004668:	f7ff ff76 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800466c:	f504 7350 	add.w	r3, r4, #832	; 0x340
 8004670:	4618      	mov	r0, r3
 8004672:	ee0b 3a10 	vmov	s22, r3
 8004676:	f7ff ff6f 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800467a:	f504 7360 	add.w	r3, r4, #896	; 0x380
 800467e:	4618      	mov	r0, r3
 8004680:	ee0b 3a90 	vmov	s23, r3
 8004684:	f7ff ff68 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004688:	f504 7370 	add.w	r3, r4, #960	; 0x3c0
 800468c:	4618      	mov	r0, r3
 800468e:	ee0c 3a10 	vmov	s24, r3
 8004692:	f7ff ff61 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004696:	f504 6380 	add.w	r3, r4, #1024	; 0x400
 800469a:	4618      	mov	r0, r3
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 800469c:	2714      	movs	r7, #20
CustomContainerTableLogBase::CustomContainerTableLogBase()
 800469e:	ee0c 3a90 	vmov	s25, r3
 80046a2:	f7ff ff59 	bl	8004558 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80046a6:	4b50      	ldr	r3, [pc, #320]	; (80047e8 <_ZN27CustomContainerTableLogBaseC1Ev+0x254>)
 80046a8:	60a3      	str	r3, [r4, #8]
        borderColor = color;
 80046aa:	f04f 39ff 	mov.w	r9, #4294967295
        borderSize = size;
 80046ae:	f04f 0801 	mov.w	r8, #1
        borderColor = color;
 80046b2:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 80046b6:	ee18 0a10 	vmov	r0, s16
 80046ba:	2396      	movs	r3, #150	; 0x96
 80046bc:	462a      	mov	r2, r5
 80046be:	4629      	mov	r1, r5
 80046c0:	9700      	str	r7, [sp, #0]
 80046c2:	f7fe f9f7 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046c6:	e9c4 9615 	strd	r9, r6, [r4, #84]	; 0x54
    boxWithBorderChan.setPosition(150, 0, 50, 20);
 80046ca:	ee1d 0a10 	vmov	r0, s26
 80046ce:	2332      	movs	r3, #50	; 0x32
 80046d0:	462a      	mov	r2, r5
 80046d2:	2196      	movs	r1, #150	; 0x96
        borderSize = size;
 80046d4:	f8a4 805c 	strh.w	r8, [r4, #92]	; 0x5c
 80046d8:	9700      	str	r7, [sp, #0]
 80046da:	f7fe f9eb 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80046de:	e9c4 9622 	strd	r9, r6, [r4, #136]	; 0x88
    boxWithBorderTypeChan.setPosition(200, 0, 100, 20);
 80046e2:	ee1d 0a90 	vmov	r0, s27
 80046e6:	2364      	movs	r3, #100	; 0x64
 80046e8:	462a      	mov	r2, r5
 80046ea:	21c8      	movs	r1, #200	; 0xc8
        borderSize = size;
 80046ec:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 80046f0:	9700      	str	r7, [sp, #0]
 80046f2:	f7fe f9df 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80046f6:	e9c4 962f 	strd	r9, r6, [r4, #188]	; 0xbc
    boxWithBorderStLoop.setPosition(300, 0, 100, 20);
 80046fa:	ee1e 0a10 	vmov	r0, s28
 80046fe:	2364      	movs	r3, #100	; 0x64
 8004700:	462a      	mov	r2, r5
 8004702:	f44f 7196 	mov.w	r1, #300	; 0x12c
        borderSize = size;
 8004706:	f8a4 80c4 	strh.w	r8, [r4, #196]	; 0xc4
 800470a:	9700      	str	r7, [sp, #0]
 800470c:	f7fe f9d2 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004710:	e9c4 963c 	strd	r9, r6, [r4, #240]	; 0xf0
    boxWithBorderConc.setPosition(400, 0, 50, 20);
 8004714:	ee1e 0a90 	vmov	r0, s29
 8004718:	2332      	movs	r3, #50	; 0x32
 800471a:	462a      	mov	r2, r5
 800471c:	f44f 71c8 	mov.w	r1, #400	; 0x190
        borderSize = size;
 8004720:	f8a4 80f8 	strh.w	r8, [r4, #248]	; 0xf8
 8004724:	9700      	str	r7, [sp, #0]
 8004726:	f7fe f9c5 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800472a:	e9c4 9649 	strd	r9, r6, [r4, #292]	; 0x124
    boxWithBorderUnit.setPosition(450, 0, 50, 20);
 800472e:	ee1f 0a10 	vmov	r0, s30
 8004732:	2332      	movs	r3, #50	; 0x32
 8004734:	462a      	mov	r2, r5
 8004736:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
        borderSize = size;
 800473a:	f8a4 812c 	strh.w	r8, [r4, #300]	; 0x12c
 800473e:	9700      	str	r7, [sp, #0]
 8004740:	f7fe f9b8 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004744:	e9c4 9656 	strd	r9, r6, [r4, #344]	; 0x158
    boxWithBorderStCur.setPosition(500, 0, 100, 20);
 8004748:	ee1f 0a90 	vmov	r0, s31
 800474c:	2364      	movs	r3, #100	; 0x64
 800474e:	462a      	mov	r2, r5
 8004750:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
        borderSize = size;
 8004754:	f8a4 8160 	strh.w	r8, [r4, #352]	; 0x160
 8004758:	9700      	str	r7, [sp, #0]
 800475a:	f7fe f9ab 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800475e:	e9c4 9663 	strd	r9, r6, [r4, #396]	; 0x18c
    boxWithBorderErr.setPosition(600, 0, 50, 20);
 8004762:	9802      	ldr	r0, [sp, #8]
        borderSize = size;
 8004764:	f8a4 8194 	strh.w	r8, [r4, #404]	; 0x194
 8004768:	2332      	movs	r3, #50	; 0x32
 800476a:	462a      	mov	r2, r5
 800476c:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004770:	9700      	str	r7, [sp, #0]
 8004772:	f7fe f99f 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004776:	f04f 0a13 	mov.w	sl, #19
        borderColor = color;
 800477a:	e9c4 9670 	strd	r9, r6, [r4, #448]	; 0x1c0
    boxWithBorderGas.setPosition(650, 0, 100, 20);
 800477e:	9803      	ldr	r0, [sp, #12]
        borderSize = size;
 8004780:	f8a4 81c8 	strh.w	r8, [r4, #456]	; 0x1c8
 8004784:	2364      	movs	r3, #100	; 0x64
 8004786:	462a      	mov	r2, r5
 8004788:	f240 218a 	movw	r1, #650	; 0x28a
 800478c:	9700      	str	r7, [sp, #0]
 800478e:	f7fe f991 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004792:	e9c4 967d 	strd	r9, r6, [r4, #500]	; 0x1f4
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004796:	2396      	movs	r3, #150	; 0x96
 8004798:	ee18 0a90 	vmov	r0, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800479c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8004800 <_ZN27CustomContainerTableLogBaseC1Ev+0x26c>
        borderSize = size;
 80047a0:	f8a4 81fc 	strh.w	r8, [r4, #508]	; 0x1fc
 80047a4:	f8cd a000 	str.w	sl, [sp]
 80047a8:	462a      	mov	r2, r5
 80047aa:	4629      	mov	r1, r5
 80047ac:	f7fe f982 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80047b0:	4b0e      	ldr	r3, [pc, #56]	; (80047ec <_ZN27CustomContainerTableLogBaseC1Ev+0x258>)
 80047b2:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
 80047b6:	f8d9 3000 	ldr.w	r3, [r9]
        linespace = space;
 80047ba:	f8a4 8234 	strh.w	r8, [r4, #564]	; 0x234
    Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WIXH).getText());
 80047be:	f504 6b88 	add.w	fp, r4, #1088	; 0x440
 80047c2:	b92b      	cbnz	r3, 80047d0 <_ZN27CustomContainerTableLogBaseC1Ev+0x23c>
 80047c4:	4b0a      	ldr	r3, [pc, #40]	; (80047f0 <_ZN27CustomContainerTableLogBaseC1Ev+0x25c>)
 80047c6:	4a0b      	ldr	r2, [pc, #44]	; (80047f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 80047c8:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80047ca:	480b      	ldr	r0, [pc, #44]	; (80047f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x264>)
 80047cc:	f020 fff8 	bl	80257c0 <__assert_func>
 80047d0:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004804 <_ZN27CustomContainerTableLogBaseC1Ev+0x270>
 80047d4:	f8b8 3000 	ldrh.w	r3, [r8]
 80047d8:	2b24      	cmp	r3, #36	; 0x24
 80047da:	d815      	bhi.n	8004808 <_ZN27CustomContainerTableLogBaseC1Ev+0x274>
 80047dc:	4b07      	ldr	r3, [pc, #28]	; (80047fc <_ZN27CustomContainerTableLogBaseC1Ev+0x268>)
 80047de:	4a05      	ldr	r2, [pc, #20]	; (80047f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 80047e0:	21af      	movs	r1, #175	; 0xaf
 80047e2:	e7f2      	b.n	80047ca <_ZN27CustomContainerTableLogBaseC1Ev+0x236>
 80047e4:	08027954 	.word	0x08027954
 80047e8:	001402ee 	.word	0x001402ee
 80047ec:	ff030202 	.word	0xff030202
 80047f0:	080273f8 	.word	0x080273f8
 80047f4:	0802743a 	.word	0x0802743a
 80047f8:	08027468 	.word	0x08027468
 80047fc:	080274af 	.word	0x080274af
 8004800:	20027a00 	.word	0x20027a00
 8004804:	20027a04 	.word	0x20027a04
        return texts->getText(typedTextId);
 8004808:	4be2      	ldr	r3, [pc, #904]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 800480a:	2124      	movs	r1, #36	; 0x24
 800480c:	6818      	ldr	r0, [r3, #0]
 800480e:	f003 f86f 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8004812:	4ae1      	ldr	r2, [pc, #900]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004814:	4603      	mov	r3, r0
 8004816:	4639      	mov	r1, r7
 8004818:	4658      	mov	r0, fp
 800481a:	f014 fe67 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800481e:	4fdf      	ldr	r7, [pc, #892]	; (8004b9c <_ZN27CustomContainerTableLogBaseC1Ev+0x608>)
        wildcard = value;
 8004820:	f8c4 b23c 	str.w	fp, [r4, #572]	; 0x23c
 8004824:	2323      	movs	r3, #35	; 0x23
    textAreaDataTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LBEI));
 8004826:	ee18 0a90 	vmov	r0, s17
 800482a:	a904      	add	r1, sp, #16
 800482c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004830:	9704      	str	r7, [sp, #16]
 8004832:	f00e fdc4 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaNumChan.setPosition(150, 0, 50, 19);
 8004836:	2332      	movs	r3, #50	; 0x32
 8004838:	ee19 0a10 	vmov	r0, s18
 800483c:	f8cd a000 	str.w	sl, [sp]
 8004840:	462a      	mov	r2, r5
 8004842:	2196      	movs	r1, #150	; 0x96
 8004844:	f7fe f936 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004848:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 800484c:	f8c4 6270 	str.w	r6, [r4, #624]	; 0x270
        linespace = space;
 8004850:	f8a4 5274 	strh.w	r5, [r4, #628]	; 0x274
    Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_53KN).getText());
 8004854:	f504 6b8d 	add.w	fp, r4, #1128	; 0x468
 8004858:	2b00      	cmp	r3, #0
 800485a:	d0b3      	beq.n	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800485c:	f8b8 3000 	ldrh.w	r3, [r8]
 8004860:	2b22      	cmp	r3, #34	; 0x22
 8004862:	d9bb      	bls.n	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004864:	4bcb      	ldr	r3, [pc, #812]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004866:	2122      	movs	r1, #34	; 0x22
 8004868:	6818      	ldr	r0, [r3, #0]
 800486a:	f003 f841 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 800486e:	4aca      	ldr	r2, [pc, #808]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004870:	4603      	mov	r3, r0
 8004872:	2105      	movs	r1, #5
 8004874:	4658      	mov	r0, fp
 8004876:	f014 fe39 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800487a:	2321      	movs	r3, #33	; 0x21
    textAreaNumChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L982));
 800487c:	ee19 0a10 	vmov	r0, s18
 8004880:	f8c4 b27c 	str.w	fp, [r4, #636]	; 0x27c
 8004884:	a904      	add	r1, sp, #16
 8004886:	f8ad 3014 	strh.w	r3, [sp, #20]
 800488a:	9704      	str	r7, [sp, #16]
 800488c:	f00e fd97 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaTypeChan.setPosition(200, 0, 100, 19);
 8004890:	2364      	movs	r3, #100	; 0x64
 8004892:	ee19 0a90 	vmov	r0, s19
 8004896:	f8cd a000 	str.w	sl, [sp]
 800489a:	462a      	mov	r2, r5
 800489c:	21c8      	movs	r1, #200	; 0xc8
 800489e:	f7fe f909 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048a2:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 80048a6:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
        linespace = space;
 80048aa:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
    Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P13T).getText());
 80048ae:	f204 4b72 	addw	fp, r4, #1138	; 0x472
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d086      	beq.n	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80048b6:	f8b8 3000 	ldrh.w	r3, [r8]
 80048ba:	2b26      	cmp	r3, #38	; 0x26
 80048bc:	d98e      	bls.n	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80048be:	4bb5      	ldr	r3, [pc, #724]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 80048c0:	2126      	movs	r1, #38	; 0x26
 80048c2:	6818      	ldr	r0, [r3, #0]
 80048c4:	f003 f814 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80048c8:	4ab3      	ldr	r2, [pc, #716]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80048ca:	4603      	mov	r3, r0
 80048cc:	210a      	movs	r1, #10
 80048ce:	4658      	mov	r0, fp
 80048d0:	f014 fe0c 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80048d4:	2325      	movs	r3, #37	; 0x25
    textAreaTypeChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOAO));
 80048d6:	ee19 0a90 	vmov	r0, s19
 80048da:	f8c4 b2bc 	str.w	fp, [r4, #700]	; 0x2bc
 80048de:	a904      	add	r1, sp, #16
 80048e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80048e4:	9704      	str	r7, [sp, #16]
 80048e6:	f00e fd6a 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStLoop.setPosition(300, 0, 100, 19);
 80048ea:	2364      	movs	r3, #100	; 0x64
 80048ec:	ee1a 0a10 	vmov	r0, s20
 80048f0:	f8cd a000 	str.w	sl, [sp]
 80048f4:	462a      	mov	r2, r5
 80048f6:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80048fa:	f7fe f8db 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048fe:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004902:	f8c4 62f0 	str.w	r6, [r4, #752]	; 0x2f0
        linespace = space;
 8004906:	f8a4 52f4 	strh.w	r5, [r4, #756]	; 0x2f4
    Unicode::snprintf(textAreaStLoopBuffer, TEXTAREASTLOOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A188).getText());
 800490a:	f204 4b86 	addw	fp, r4, #1158	; 0x486
 800490e:	2b00      	cmp	r3, #0
 8004910:	f43f af58 	beq.w	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004914:	f8b8 3000 	ldrh.w	r3, [r8]
 8004918:	2b28      	cmp	r3, #40	; 0x28
 800491a:	f67f af5f 	bls.w	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800491e:	4b9d      	ldr	r3, [pc, #628]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004920:	2128      	movs	r1, #40	; 0x28
 8004922:	6818      	ldr	r0, [r3, #0]
 8004924:	f002 ffe4 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8004928:	4a9b      	ldr	r2, [pc, #620]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800492a:	4603      	mov	r3, r0
 800492c:	210a      	movs	r1, #10
 800492e:	4658      	mov	r0, fp
 8004930:	f014 fddc 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004934:	2327      	movs	r3, #39	; 0x27
    textAreaStLoop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I04R));
 8004936:	ee1a 0a10 	vmov	r0, s20
 800493a:	a904      	add	r1, sp, #16
 800493c:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
 8004940:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004944:	9704      	str	r7, [sp, #16]
 8004946:	f00e fd3a 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaConc.setPosition(400, 0, 50, 19);
 800494a:	2332      	movs	r3, #50	; 0x32
 800494c:	462a      	mov	r2, r5
 800494e:	ee1a 0a90 	vmov	r0, s21
 8004952:	f8cd a000 	str.w	sl, [sp]
 8004956:	f44f 71c8 	mov.w	r1, #400	; 0x190
 800495a:	f7fe f8ab 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800495e:	f8d9 3000 	ldr.w	r3, [r9]
 8004962:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        this->color = color;
 8004966:	f8c4 6330 	str.w	r6, [r4, #816]	; 0x330
    Unicode::snprintf(textAreaConcBuffer, TEXTAREACONC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QS1C).getText());
 800496a:	f204 459a 	addw	r5, r4, #1178	; 0x49a
 800496e:	2b00      	cmp	r3, #0
 8004970:	f43f af28 	beq.w	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004974:	f8b8 3000 	ldrh.w	r3, [r8]
 8004978:	2b2a      	cmp	r3, #42	; 0x2a
 800497a:	f67f af2f 	bls.w	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800497e:	f8df 9214 	ldr.w	r9, [pc, #532]	; 8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004982:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8004ba4 <_ZN27CustomContainerTableLogBaseC1Ev+0x610>
        return texts->getText(typedTextId);
 8004986:	f8d9 0000 	ldr.w	r0, [r9]
 800498a:	212a      	movs	r1, #42	; 0x2a
 800498c:	f002 ffb0 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8004990:	4a81      	ldr	r2, [pc, #516]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004992:	4603      	mov	r3, r0
 8004994:	210a      	movs	r1, #10
 8004996:	4628      	mov	r0, r5
 8004998:	f014 fda8 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaUnit.setPosition(450, 0, 50, 19);
 800499c:	f04f 0a13 	mov.w	sl, #19
        : typedTextId(id)
 80049a0:	2329      	movs	r3, #41	; 0x29
    textAreaConc.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q6FU));
 80049a2:	ee1a 0a90 	vmov	r0, s21
 80049a6:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
 80049aa:	a904      	add	r1, sp, #16
 80049ac:	f8ad 3014 	strh.w	r3, [sp, #20]
 80049b0:	9704      	str	r7, [sp, #16]
 80049b2:	f00e fd04 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaUnit.setPosition(450, 0, 50, 19);
 80049b6:	2332      	movs	r3, #50	; 0x32
 80049b8:	ee1b 0a10 	vmov	r0, s22
 80049bc:	f8cd a000 	str.w	sl, [sp]
 80049c0:	2200      	movs	r2, #0
 80049c2:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 80049c6:	f7fe f875 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80049ca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80049ce:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049d2:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 80049d6:	2500      	movs	r5, #0
        : typedTextId(id)
 80049d8:	463e      	mov	r6, r7
 80049da:	f8a4 5374 	strh.w	r5, [r4, #884]	; 0x374
    Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LNEH).getText());
 80049de:	f204 4bae 	addw	fp, r4, #1198	; 0x4ae
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	f43f aeee 	beq.w	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80049e8:	4f6d      	ldr	r7, [pc, #436]	; (8004ba0 <_ZN27CustomContainerTableLogBaseC1Ev+0x60c>)
 80049ea:	883b      	ldrh	r3, [r7, #0]
 80049ec:	2b2c      	cmp	r3, #44	; 0x2c
 80049ee:	f67f aef5 	bls.w	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80049f2:	212c      	movs	r1, #44	; 0x2c
 80049f4:	f8d9 0000 	ldr.w	r0, [r9]
 80049f8:	f002 ff7a 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80049fc:	4a66      	ldr	r2, [pc, #408]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80049fe:	4603      	mov	r3, r0
 8004a00:	210a      	movs	r1, #10
 8004a02:	4658      	mov	r0, fp
 8004a04:	f014 fd72 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a08:	232b      	movs	r3, #43	; 0x2b
    textAreaUnit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YDSR));
 8004a0a:	ee1b 0a10 	vmov	r0, s22
 8004a0e:	f8c4 b37c 	str.w	fp, [r4, #892]	; 0x37c
 8004a12:	a904      	add	r1, sp, #16
 8004a14:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004a18:	9604      	str	r6, [sp, #16]
 8004a1a:	f00e fcd0 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStCur.setPosition(500, 0, 100, 19);
 8004a1e:	2364      	movs	r3, #100	; 0x64
 8004a20:	ee1b 0a90 	vmov	r0, s23
 8004a24:	f8cd a000 	str.w	sl, [sp]
 8004a28:	462a      	mov	r2, r5
 8004a2a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8004a2e:	f7fe f841 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004a32:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004a36:	f8c4 33b0 	str.w	r3, [r4, #944]	; 0x3b0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a3a:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004a3e:	f8a4 53b4 	strh.w	r5, [r4, #948]	; 0x3b4
    Unicode::snprintf(textAreaStCurBuffer, TEXTAREASTCUR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_83ZL).getText());
 8004a42:	f204 4bc2 	addw	fp, r4, #1218	; 0x4c2
 8004a46:	2b00      	cmp	r3, #0
 8004a48:	f43f aebc 	beq.w	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004a4c:	883b      	ldrh	r3, [r7, #0]
 8004a4e:	2b2e      	cmp	r3, #46	; 0x2e
 8004a50:	f67f aec4 	bls.w	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004a54:	212e      	movs	r1, #46	; 0x2e
 8004a56:	f8d9 0000 	ldr.w	r0, [r9]
 8004a5a:	f002 ff49 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8004a5e:	4a4e      	ldr	r2, [pc, #312]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004a60:	4603      	mov	r3, r0
 8004a62:	210a      	movs	r1, #10
 8004a64:	4658      	mov	r0, fp
 8004a66:	f014 fd41 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a6a:	232d      	movs	r3, #45	; 0x2d
    textAreaStCur.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJ1U));
 8004a6c:	ee1b 0a90 	vmov	r0, s23
 8004a70:	f8c4 b3bc 	str.w	fp, [r4, #956]	; 0x3bc
 8004a74:	a904      	add	r1, sp, #16
 8004a76:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004a7a:	9604      	str	r6, [sp, #16]
 8004a7c:	f00e fc9f 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaErr.setPosition(600, 0, 50, 19);
 8004a80:	2332      	movs	r3, #50	; 0x32
 8004a82:	ee1c 0a10 	vmov	r0, s24
 8004a86:	f8cd a000 	str.w	sl, [sp]
 8004a8a:	462a      	mov	r2, r5
 8004a8c:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004a90:	f7fe f810 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004a94:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004a98:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a9c:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004aa0:	f8a4 53f4 	strh.w	r5, [r4, #1012]	; 0x3f4
    Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_60JG).getText());
 8004aa4:	f204 4bd6 	addw	fp, r4, #1238	; 0x4d6
 8004aa8:	2b00      	cmp	r3, #0
 8004aaa:	f43f ae8b 	beq.w	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004aae:	883b      	ldrh	r3, [r7, #0]
 8004ab0:	2b30      	cmp	r3, #48	; 0x30
 8004ab2:	f67f ae93 	bls.w	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004ab6:	2130      	movs	r1, #48	; 0x30
 8004ab8:	f8d9 0000 	ldr.w	r0, [r9]
 8004abc:	f002 ff18 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8004ac0:	4a35      	ldr	r2, [pc, #212]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004ac2:	4603      	mov	r3, r0
 8004ac4:	210a      	movs	r1, #10
 8004ac6:	4658      	mov	r0, fp
 8004ac8:	f014 fd10 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004acc:	232f      	movs	r3, #47	; 0x2f
    textAreaErr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXKK));
 8004ace:	ee1c 0a10 	vmov	r0, s24
 8004ad2:	a904      	add	r1, sp, #16
 8004ad4:	f8c4 b3fc 	str.w	fp, [r4, #1020]	; 0x3fc
 8004ad8:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004adc:	9604      	str	r6, [sp, #16]
 8004ade:	f00e fc6e 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaGas.setPosition(650, 0, 100, 19);
 8004ae2:	2364      	movs	r3, #100	; 0x64
 8004ae4:	462a      	mov	r2, r5
 8004ae6:	ee1c 0a90 	vmov	r0, s25
 8004aea:	f8cd a000 	str.w	sl, [sp]
 8004aee:	f240 218a 	movw	r1, #650	; 0x28a
 8004af2:	f7fd ffdf 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004af6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004afa:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004afe:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004b02:	f8a4 5434 	strh.w	r5, [r4, #1076]	; 0x434
    Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A04E).getText());
 8004b06:	f204 45ea 	addw	r5, r4, #1258	; 0x4ea
 8004b0a:	2b00      	cmp	r3, #0
 8004b0c:	f43f ae5a 	beq.w	80047c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004b10:	883b      	ldrh	r3, [r7, #0]
 8004b12:	2b32      	cmp	r3, #50	; 0x32
 8004b14:	f67f ae62 	bls.w	80047dc <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004b18:	f8d9 0000 	ldr.w	r0, [r9]
 8004b1c:	2132      	movs	r1, #50	; 0x32
 8004b1e:	f002 fee7 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8004b22:	4a1d      	ldr	r2, [pc, #116]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004b24:	4603      	mov	r3, r0
 8004b26:	210a      	movs	r1, #10
 8004b28:	4628      	mov	r0, r5
 8004b2a:	f014 fcdf 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004b2e:	2331      	movs	r3, #49	; 0x31
    textAreaGas.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JQ77));
 8004b30:	ee1c 0a90 	vmov	r0, s25
 8004b34:	a904      	add	r1, sp, #16
 8004b36:	f8c4 543c 	str.w	r5, [r4, #1084]	; 0x43c
 8004b3a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004b3e:	9604      	str	r6, [sp, #16]
 8004b40:	f00e fc3d 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxWithBorderDataTime);
 8004b44:	ee18 1a10 	vmov	r1, s16
 8004b48:	4620      	mov	r0, r4
 8004b4a:	f00c fea1 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderChan);
 8004b4e:	ee1d 1a10 	vmov	r1, s26
 8004b52:	4620      	mov	r0, r4
 8004b54:	f00c fe9c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderTypeChan);
 8004b58:	ee1d 1a90 	vmov	r1, s27
 8004b5c:	4620      	mov	r0, r4
 8004b5e:	f00c fe97 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStLoop);
 8004b62:	ee1e 1a10 	vmov	r1, s28
 8004b66:	4620      	mov	r0, r4
 8004b68:	f00c fe92 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderConc);
 8004b6c:	ee1e 1a90 	vmov	r1, s29
 8004b70:	4620      	mov	r0, r4
 8004b72:	f00c fe8d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderUnit);
 8004b76:	ee1f 1a10 	vmov	r1, s30
 8004b7a:	4620      	mov	r0, r4
 8004b7c:	f00c fe88 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStCur);
 8004b80:	ee1f 1a90 	vmov	r1, s31
 8004b84:	4620      	mov	r0, r4
 8004b86:	f00c fe83 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderErr);
 8004b8a:	9902      	ldr	r1, [sp, #8]
 8004b8c:	4620      	mov	r0, r4
 8004b8e:	f00c fe7f 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b92:	e009      	b.n	8004ba8 <_ZN27CustomContainerTableLogBaseC1Ev+0x614>
 8004b94:	20027a0c 	.word	0x20027a0c
 8004b98:	08027501 	.word	0x08027501
 8004b9c:	0802750c 	.word	0x0802750c
 8004ba0:	20027a04 	.word	0x20027a04
 8004ba4:	20027a00 	.word	0x20027a00
    add(boxWithBorderGas);
 8004ba8:	9903      	ldr	r1, [sp, #12]
 8004baa:	4620      	mov	r0, r4
 8004bac:	f00c fe70 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaDataTime);
 8004bb0:	ee18 1a90 	vmov	r1, s17
 8004bb4:	4620      	mov	r0, r4
 8004bb6:	f00c fe6b 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaNumChan);
 8004bba:	ee19 1a10 	vmov	r1, s18
 8004bbe:	4620      	mov	r0, r4
 8004bc0:	f00c fe66 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaTypeChan);
 8004bc4:	ee19 1a90 	vmov	r1, s19
 8004bc8:	4620      	mov	r0, r4
 8004bca:	f00c fe61 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStLoop);
 8004bce:	ee1a 1a10 	vmov	r1, s20
 8004bd2:	4620      	mov	r0, r4
 8004bd4:	f00c fe5c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaConc);
 8004bd8:	ee1a 1a90 	vmov	r1, s21
 8004bdc:	4620      	mov	r0, r4
 8004bde:	f00c fe57 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaUnit);
 8004be2:	ee1b 1a10 	vmov	r1, s22
 8004be6:	4620      	mov	r0, r4
 8004be8:	f00c fe52 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStCur);
 8004bec:	ee1b 1a90 	vmov	r1, s23
 8004bf0:	4620      	mov	r0, r4
 8004bf2:	f00c fe4d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaErr);
 8004bf6:	ee1c 1a10 	vmov	r1, s24
 8004bfa:	4620      	mov	r0, r4
 8004bfc:	f00c fe48 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaGas);
 8004c00:	4620      	mov	r0, r4
 8004c02:	ee1c 1a90 	vmov	r1, s25
 8004c06:	f00c fe43 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004c0a:	4620      	mov	r0, r4
 8004c0c:	b007      	add	sp, #28
 8004c0e:	ecbd 8b10 	vpop	{d8-d15}
 8004c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004c16:	bf00      	nop

08004c18 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8004c18:	4770      	bx	lr

08004c1a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004c1a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8004c1e:	6808      	ldr	r0, [r1, #0]
 8004c20:	6849      	ldr	r1, [r1, #4]
 8004c22:	c303      	stmia	r3!, {r0, r1}
    }
 8004c24:	4770      	bx	lr

08004c26 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004c26:	4770      	bx	lr

08004c28 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004c28:	4770      	bx	lr

08004c2a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004c2a:	6041      	str	r1, [r0, #4]
    }
 8004c2c:	4770      	bx	lr

08004c2e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004c2e:	4770      	bx	lr

08004c30 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004c30:	2301      	movs	r3, #1
 8004c32:	7203      	strb	r3, [r0, #8]
    }
 8004c34:	4770      	bx	lr

08004c36 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004c36:	4770      	bx	lr

08004c38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004c38:	4770      	bx	lr

08004c3a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
    virtual void execute()
 8004c3a:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8004c3c:	68c2      	ldr	r2, [r0, #12]
 8004c3e:	6841      	ldr	r1, [r0, #4]
 8004c40:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004c42:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8004c44:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004c48:	07d2      	lsls	r2, r2, #31
 8004c4a:	bf48      	it	mi
 8004c4c:	590a      	ldrmi	r2, [r1, r4]
 8004c4e:	689b      	ldr	r3, [r3, #8]
    }
 8004c50:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8004c54:	bf48      	it	mi
 8004c56:	58d3      	ldrmi	r3, [r2, r3]
 8004c58:	4718      	bx	r3

08004c5a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8004c5a:	6843      	ldr	r3, [r0, #4]
 8004c5c:	b12b      	cbz	r3, 8004c6a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004c5e:	6883      	ldr	r3, [r0, #8]
 8004c60:	b92b      	cbnz	r3, 8004c6e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004c62:	68c0      	ldr	r0, [r0, #12]
 8004c64:	f000 0001 	and.w	r0, r0, #1
 8004c68:	4770      	bx	lr
 8004c6a:	4618      	mov	r0, r3
 8004c6c:	4770      	bx	lr
 8004c6e:	2001      	movs	r0, #1
    }
 8004c70:	4770      	bx	lr

08004c72 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004c72:	b510      	push	{r4, lr}
 8004c74:	210c      	movs	r1, #12
 8004c76:	4604      	mov	r4, r0
 8004c78:	f020 fd74 	bl	8025764 <_ZdlPvj>
 8004c7c:	4620      	mov	r0, r4
 8004c7e:	bd10      	pop	{r4, pc}

08004c80 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004c80:	b510      	push	{r4, lr}
 8004c82:	2110      	movs	r1, #16
 8004c84:	4604      	mov	r4, r0
 8004c86:	f020 fd6d 	bl	8025764 <_ZdlPvj>
 8004c8a:	4620      	mov	r0, r4
 8004c8c:	bd10      	pop	{r4, pc}

08004c8e <_ZN23FrontendApplicationBaseD0Ev>:
 8004c8e:	b510      	push	{r4, lr}
 8004c90:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004c94:	4604      	mov	r4, r0
 8004c96:	f020 fd65 	bl	8025764 <_ZdlPvj>
 8004c9a:	4620      	mov	r0, r4
 8004c9c:	bd10      	pop	{r4, pc}

08004c9e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004c9e:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8004ca0:	f010 ff7c 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8004ca4:	6803      	ldr	r3, [r0, #0]
    }
 8004ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8004caa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004cac:	4718      	bx	r3

08004cae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004cae:	b510      	push	{r4, lr}
 8004cb0:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004cb2:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8004cb6:	b158      	cbz	r0, 8004cd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004cb8:	6803      	ldr	r3, [r0, #0]
 8004cba:	68db      	ldr	r3, [r3, #12]
 8004cbc:	4798      	blx	r3
 8004cbe:	b138      	cbz	r0, 8004cd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8004cc0:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8004cc4:	6803      	ldr	r3, [r0, #0]
 8004cc6:	689b      	ldr	r3, [r3, #8]
 8004cc8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004cca:	2300      	movs	r3, #0
 8004ccc:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8004cd0:	bd10      	pop	{r4, pc}
	...

08004cd4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cd6:	4604      	mov	r4, r0
 8004cd8:	4617      	mov	r7, r2
 8004cda:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004cdc:	f010 ffc6 	bl	8015c6c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004ce0:	4b10      	ldr	r3, [pc, #64]	; (8004d24 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8004ce2:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8004ce4:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8004ce8:	4e0f      	ldr	r6, [pc, #60]	; (8004d28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8004cea:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8004cec:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8004cf0:	4b0e      	ldr	r3, [pc, #56]	; (8004d2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8004cf2:	6830      	ldr	r0, [r6, #0]
 8004cf4:	6023      	str	r3, [r4, #0]
 8004cf6:	4b0e      	ldr	r3, [pc, #56]	; (8004d30 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004cf8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004cfc:	6803      	ldr	r3, [r0, #0]
 8004cfe:	4629      	mov	r1, r5
 8004d00:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004d02:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8004d06:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004d08:	4628      	mov	r0, r5
 8004d0a:	f002 fdb5 	bl	8007878 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004d0e:	6833      	ldr	r3, [r6, #0]
 8004d10:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8004d14:	b10a      	cbz	r2, 8004d1a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8004d16:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004d18:	b900      	cbnz	r0, 8004d1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8004d1a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004d1c:	f019 fbcd 	bl	801e4ba <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8004d20:	4620      	mov	r0, r4
 8004d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d24:	200279fc 	.word	0x200279fc
 8004d28:	200279b0 	.word	0x200279b0
 8004d2c:	08027e20 	.word	0x08027e20
 8004d30:	08027e08 	.word	0x08027e08

08004d34 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004d34:	4b06      	ldr	r3, [pc, #24]	; (8004d50 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8004d36:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004d3a:	2300      	movs	r3, #0
 8004d3c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004d40:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004d44:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004d48:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004d4c:	4770      	bx	lr
 8004d4e:	bf00      	nop
 8004d50:	08004eb9 	.word	0x08004eb9

08004d54 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8004d54:	4b06      	ldr	r3, [pc, #24]	; (8004d70 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8004d56:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004d5a:	2300      	movs	r3, #0
 8004d5c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004d60:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004d64:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004d68:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004d6c:	4770      	bx	lr
 8004d6e:	bf00      	nop
 8004d70:	08005021 	.word	0x08005021

08004d74 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004d74:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d78:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d7a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004d7c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004d80:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d82:	6803      	ldr	r3, [r0, #0]
 8004d84:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004d86:	4688      	mov	r8, r1
 8004d88:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d8a:	4798      	blx	r3
 8004d8c:	4b43      	ldr	r3, [pc, #268]	; (8004e9c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8004d8e:	4298      	cmp	r0, r3
 8004d90:	d805      	bhi.n	8004d9e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8004d92:	4b43      	ldr	r3, [pc, #268]	; (8004ea0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004d94:	4a43      	ldr	r2, [pc, #268]	; (8004ea4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004d96:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d98:	4843      	ldr	r0, [pc, #268]	; (8004ea8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8004d9a:	f020 fd11 	bl	80257c0 <__assert_func>
 8004d9e:	6860      	ldr	r0, [r4, #4]
 8004da0:	6803      	ldr	r3, [r0, #0]
 8004da2:	6a1b      	ldr	r3, [r3, #32]
 8004da4:	4798      	blx	r3
 8004da6:	280f      	cmp	r0, #15
 8004da8:	d803      	bhi.n	8004db2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8004daa:	4b40      	ldr	r3, [pc, #256]	; (8004eac <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004dac:	4a3d      	ldr	r2, [pc, #244]	; (8004ea4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004dae:	21a4      	movs	r1, #164	; 0xa4
 8004db0:	e7f2      	b.n	8004d98 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004db2:	68e0      	ldr	r0, [r4, #12]
 8004db4:	6803      	ldr	r3, [r0, #0]
 8004db6:	6a1b      	ldr	r3, [r3, #32]
 8004db8:	4798      	blx	r3
 8004dba:	280b      	cmp	r0, #11
 8004dbc:	d803      	bhi.n	8004dc6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8004dbe:	4b3c      	ldr	r3, [pc, #240]	; (8004eb0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004dc0:	4a38      	ldr	r2, [pc, #224]	; (8004ea4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004dc2:	21a5      	movs	r1, #165	; 0xa5
 8004dc4:	e7e8      	b.n	8004d98 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 8004dc6:	f010 fee9 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8004dca:	f010 ff35 	bl	8015c38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004dce:	f8d9 0000 	ldr.w	r0, [r9]
 8004dd2:	b110      	cbz	r0, 8004dda <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8004dd4:	6803      	ldr	r3, [r0, #0]
 8004dd6:	68db      	ldr	r3, [r3, #12]
 8004dd8:	4798      	blx	r3
    if (*currentTrans)
 8004dda:	f8d9 0000 	ldr.w	r0, [r9]
 8004dde:	b110      	cbz	r0, 8004de6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8004de0:	6803      	ldr	r3, [r0, #0]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	4798      	blx	r3
    if (*currentScreen)
 8004de6:	6838      	ldr	r0, [r7, #0]
 8004de8:	b110      	cbz	r0, 8004df0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8004dea:	6803      	ldr	r3, [r0, #0]
 8004dec:	695b      	ldr	r3, [r3, #20]
 8004dee:	4798      	blx	r3
    if (*currentPresenter)
 8004df0:	f8d8 0000 	ldr.w	r0, [r8]
 8004df4:	b110      	cbz	r0, 8004dfc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8004df6:	6803      	ldr	r3, [r0, #0]
 8004df8:	685b      	ldr	r3, [r3, #4]
 8004dfa:	4798      	blx	r3
    if (*currentScreen)
 8004dfc:	6838      	ldr	r0, [r7, #0]
 8004dfe:	b110      	cbz	r0, 8004e06 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8004e00:	6803      	ldr	r3, [r0, #0]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	4798      	blx	r3
    if (*currentPresenter)
 8004e06:	f8d8 0000 	ldr.w	r0, [r8]
 8004e0a:	b110      	cbz	r0, 8004e12 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8004e0c:	6803      	ldr	r3, [r0, #0]
 8004e0e:	689b      	ldr	r3, [r3, #8]
 8004e10:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e12:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004e14:	6803      	ldr	r3, [r0, #0]
 8004e16:	2100      	movs	r1, #0
 8004e18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e1a:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004e1c:	f04f 0b00 	mov.w	fp, #0
 8004e20:	4b24      	ldr	r3, [pc, #144]	; (8004eb4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x140>)
 8004e22:	6003      	str	r3, [r0, #0]
 8004e24:	4605      	mov	r5, r0
 8004e26:	f8c0 b004 	str.w	fp, [r0, #4]
 8004e2a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e2e:	68a0      	ldr	r0, [r4, #8]
 8004e30:	6803      	ldr	r3, [r0, #0]
 8004e32:	4659      	mov	r1, fp
 8004e34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e36:	4798      	blx	r3
 8004e38:	4606      	mov	r6, r0
 8004e3a:	f004 f99b 	bl	8009174 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e3e:	6860      	ldr	r0, [r4, #4]
 8004e40:	6803      	ldr	r3, [r0, #0]
 8004e42:	4659      	mov	r1, fp
 8004e44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e46:	4798      	blx	r3
 8004e48:	4631      	mov	r1, r6
 8004e4a:	4604      	mov	r4, r0
 8004e4c:	f003 fd1c 	bl	8008888 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8004e50:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e54:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8004e58:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004e5a:	b1e4      	cbz	r4, 8004e96 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8004e5c:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004e5e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e62:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004e64:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e68:	4630      	mov	r0, r6
 8004e6a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8004e6c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e6e:	4798      	blx	r3
    newPresenter->activate();
 8004e70:	6823      	ldr	r3, [r4, #0]
 8004e72:	4620      	mov	r0, r4
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e78:	4629      	mov	r1, r5
 8004e7a:	4630      	mov	r0, r6
 8004e7c:	f012 fa80 	bl	8017380 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e80:	682b      	ldr	r3, [r5, #0]
 8004e82:	4628      	mov	r0, r5
 8004e84:	691b      	ldr	r3, [r3, #16]
 8004e86:	4798      	blx	r3
    newTransition->invalidate();
 8004e88:	682b      	ldr	r3, [r5, #0]
 8004e8a:	4628      	mov	r0, r5
 8004e8c:	695b      	ldr	r3, [r3, #20]
 8004e8e:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8004e90:	4620      	mov	r0, r4
 8004e92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8004e96:	4623      	mov	r3, r4
 8004e98:	e7e1      	b.n	8004e5e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8004e9a:	bf00      	nop
 8004e9c:	00015893 	.word	0x00015893
 8004ea0:	080279dc 	.word	0x080279dc
 8004ea4:	08027a6a 	.word	0x08027a6a
 8004ea8:	08027b6e 	.word	0x08027b6e
 8004eac:	08027bb5 	.word	0x08027bb5
 8004eb0:	08027c58 	.word	0x08027c58
 8004eb4:	08027e64 	.word	0x08027e64

08004eb8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8004eb8:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004eba:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8004ebe:	9300      	str	r3, [sp, #0]
 8004ec0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8004ec4:	4b04      	ldr	r3, [pc, #16]	; (8004ed8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 8004ec6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8004eca:	4804      	ldr	r0, [pc, #16]	; (8004edc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8004ecc:	f7ff ff52 	bl	8004d74 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004ed0:	b003      	add	sp, #12
 8004ed2:	f85d fb04 	ldr.w	pc, [sp], #4
 8004ed6:	bf00      	nop
 8004ed8:	200279f0 	.word	0x200279f0
 8004edc:	200279ec 	.word	0x200279ec

08004ee0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004ee0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ee4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ee6:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004ee8:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004eec:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004eee:	6803      	ldr	r3, [r0, #0]
 8004ef0:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004ef2:	4688      	mov	r8, r1
 8004ef4:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ef6:	4798      	blx	r3
 8004ef8:	f244 537b 	movw	r3, #17787	; 0x457b
 8004efc:	4298      	cmp	r0, r3
 8004efe:	d805      	bhi.n	8004f0c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8004f00:	4b41      	ldr	r3, [pc, #260]	; (8005008 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8004f02:	4a42      	ldr	r2, [pc, #264]	; (800500c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004f04:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f06:	4842      	ldr	r0, [pc, #264]	; (8005010 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004f08:	f020 fc5a 	bl	80257c0 <__assert_func>
 8004f0c:	6860      	ldr	r0, [r4, #4]
 8004f0e:	6803      	ldr	r3, [r0, #0]
 8004f10:	6a1b      	ldr	r3, [r3, #32]
 8004f12:	4798      	blx	r3
 8004f14:	280f      	cmp	r0, #15
 8004f16:	d803      	bhi.n	8004f20 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8004f18:	4b3e      	ldr	r3, [pc, #248]	; (8005014 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8004f1a:	4a3c      	ldr	r2, [pc, #240]	; (800500c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004f1c:	21a4      	movs	r1, #164	; 0xa4
 8004f1e:	e7f2      	b.n	8004f06 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f20:	68e0      	ldr	r0, [r4, #12]
 8004f22:	6803      	ldr	r3, [r0, #0]
 8004f24:	6a1b      	ldr	r3, [r3, #32]
 8004f26:	4798      	blx	r3
 8004f28:	280b      	cmp	r0, #11
 8004f2a:	d803      	bhi.n	8004f34 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8004f2c:	4b3a      	ldr	r3, [pc, #232]	; (8005018 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004f2e:	4a37      	ldr	r2, [pc, #220]	; (800500c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004f30:	21a5      	movs	r1, #165	; 0xa5
 8004f32:	e7e8      	b.n	8004f06 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8004f34:	f010 fe32 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8004f38:	f010 fe7e 	bl	8015c38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004f3c:	f8d9 0000 	ldr.w	r0, [r9]
 8004f40:	b110      	cbz	r0, 8004f48 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8004f42:	6803      	ldr	r3, [r0, #0]
 8004f44:	68db      	ldr	r3, [r3, #12]
 8004f46:	4798      	blx	r3
    if (*currentTrans)
 8004f48:	f8d9 0000 	ldr.w	r0, [r9]
 8004f4c:	b110      	cbz	r0, 8004f54 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8004f4e:	6803      	ldr	r3, [r0, #0]
 8004f50:	681b      	ldr	r3, [r3, #0]
 8004f52:	4798      	blx	r3
    if (*currentScreen)
 8004f54:	6838      	ldr	r0, [r7, #0]
 8004f56:	b110      	cbz	r0, 8004f5e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8004f58:	6803      	ldr	r3, [r0, #0]
 8004f5a:	695b      	ldr	r3, [r3, #20]
 8004f5c:	4798      	blx	r3
    if (*currentPresenter)
 8004f5e:	f8d8 0000 	ldr.w	r0, [r8]
 8004f62:	b110      	cbz	r0, 8004f6a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8004f64:	6803      	ldr	r3, [r0, #0]
 8004f66:	685b      	ldr	r3, [r3, #4]
 8004f68:	4798      	blx	r3
    if (*currentScreen)
 8004f6a:	6838      	ldr	r0, [r7, #0]
 8004f6c:	b110      	cbz	r0, 8004f74 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8004f6e:	6803      	ldr	r3, [r0, #0]
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	4798      	blx	r3
    if (*currentPresenter)
 8004f74:	f8d8 0000 	ldr.w	r0, [r8]
 8004f78:	b110      	cbz	r0, 8004f80 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8004f7a:	6803      	ldr	r3, [r0, #0]
 8004f7c:	689b      	ldr	r3, [r3, #8]
 8004f7e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f80:	68e0      	ldr	r0, [r4, #12]
 8004f82:	6803      	ldr	r3, [r0, #0]
 8004f84:	2100      	movs	r1, #0
 8004f86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f88:	4798      	blx	r3
 8004f8a:	f04f 0b00 	mov.w	fp, #0
 8004f8e:	4b23      	ldr	r3, [pc, #140]	; (800501c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004f90:	6003      	str	r3, [r0, #0]
 8004f92:	4605      	mov	r5, r0
 8004f94:	f8c0 b004 	str.w	fp, [r0, #4]
 8004f98:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f9c:	68a0      	ldr	r0, [r4, #8]
 8004f9e:	6803      	ldr	r3, [r0, #0]
 8004fa0:	4659      	mov	r1, fp
 8004fa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fa4:	4798      	blx	r3
 8004fa6:	4606      	mov	r6, r0
 8004fa8:	f004 fc12 	bl	80097d0 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004fac:	6860      	ldr	r0, [r4, #4]
 8004fae:	6803      	ldr	r3, [r0, #0]
 8004fb0:	4659      	mov	r1, fp
 8004fb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fb4:	4798      	blx	r3
 8004fb6:	4631      	mov	r1, r6
 8004fb8:	4604      	mov	r4, r0
 8004fba:	f004 fb09 	bl	80095d0 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8004fbe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004fc2:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8004fc6:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004fc8:	b1e4      	cbz	r4, 8005004 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 8004fca:	1d23      	adds	r3, r4, #4
 8004fcc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004fd0:	6833      	ldr	r3, [r6, #0]
 8004fd2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fd6:	4630      	mov	r0, r6
 8004fd8:	68db      	ldr	r3, [r3, #12]
 8004fda:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fdc:	4798      	blx	r3
    newPresenter->activate();
 8004fde:	6823      	ldr	r3, [r4, #0]
 8004fe0:	4620      	mov	r0, r4
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fe6:	4629      	mov	r1, r5
 8004fe8:	4630      	mov	r0, r6
 8004fea:	f012 f9c9 	bl	8017380 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fee:	682b      	ldr	r3, [r5, #0]
 8004ff0:	4628      	mov	r0, r5
 8004ff2:	691b      	ldr	r3, [r3, #16]
 8004ff4:	4798      	blx	r3
    newTransition->invalidate();
 8004ff6:	682b      	ldr	r3, [r5, #0]
 8004ff8:	4628      	mov	r0, r5
 8004ffa:	695b      	ldr	r3, [r3, #20]
 8004ffc:	4798      	blx	r3
}
 8004ffe:	4620      	mov	r0, r4
 8005000:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8005004:	4623      	mov	r3, r4
 8005006:	e7e1      	b.n	8004fcc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8005008:	080279dc 	.word	0x080279dc
 800500c:	08027cfb 	.word	0x08027cfb
 8005010:	08027b6e 	.word	0x08027b6e
 8005014:	08027bb5 	.word	0x08027bb5
 8005018:	08027c58 	.word	0x08027c58
 800501c:	08027e64 	.word	0x08027e64

08005020 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 8005020:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005022:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8005026:	9300      	str	r3, [sp, #0]
 8005028:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 800502c:	4b04      	ldr	r3, [pc, #16]	; (8005040 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 800502e:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8005032:	4804      	ldr	r0, [pc, #16]	; (8005044 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 8005034:	f7ff ff54 	bl	8004ee0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8005038:	b003      	add	sp, #12
 800503a:	f85d fb04 	ldr.w	pc, [sp], #4
 800503e:	bf00      	nop
 8005040:	200279f0 	.word	0x200279f0
 8005044:	200279ec 	.word	0x200279ec

08005048 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005048:	6a00      	ldr	r0, [r0, #32]
 800504a:	4770      	bx	lr

0800504c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800504c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800504e:	4770      	bx	lr

08005050 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005050:	4770      	bx	lr

08005052 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005052:	888b      	ldrh	r3, [r1, #4]
 8005054:	6980      	ldr	r0, [r0, #24]
 8005056:	680a      	ldr	r2, [r1, #0]
 8005058:	0adb      	lsrs	r3, r3, #11
 800505a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800505e:	4410      	add	r0, r2
 8005060:	4770      	bx	lr

08005062 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005062:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005064:	b1c2      	cbz	r2, 8005098 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005066:	7b13      	ldrb	r3, [r2, #12]
 8005068:	b1b3      	cbz	r3, 8005098 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800506a:	7b54      	ldrb	r4, [r2, #13]
 800506c:	7ad2      	ldrb	r2, [r2, #11]
 800506e:	0224      	lsls	r4, r4, #8
 8005070:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005074:	4314      	orrs	r4, r2
 8005076:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005078:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800507a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800507e:	8813      	ldrh	r3, [r2, #0]
 8005080:	428b      	cmp	r3, r1
 8005082:	d102      	bne.n	800508a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005084:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005088:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800508a:	d805      	bhi.n	8005098 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800508c:	3801      	subs	r0, #1
 800508e:	b280      	uxth	r0, r0
 8005090:	3204      	adds	r2, #4
 8005092:	2800      	cmp	r0, #0
 8005094:	d1f3      	bne.n	800507e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005096:	e7f7      	b.n	8005088 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005098:	2000      	movs	r0, #0
 800509a:	e7f5      	b.n	8005088 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800509c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800509c:	b510      	push	{r4, lr}
 800509e:	2128      	movs	r1, #40	; 0x28
 80050a0:	4604      	mov	r4, r0
 80050a2:	f020 fb5f 	bl	8025764 <_ZdlPvj>
 80050a6:	4620      	mov	r0, r4
 80050a8:	bd10      	pop	{r4, pc}
	...

080050ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80050ac:	b530      	push	{r4, r5, lr}
 80050ae:	b089      	sub	sp, #36	; 0x24
 80050b0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80050b2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80050b6:	9506      	str	r5, [sp, #24]
 80050b8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80050bc:	9505      	str	r5, [sp, #20]
 80050be:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80050c2:	9504      	str	r5, [sp, #16]
 80050c4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80050c8:	9503      	str	r5, [sp, #12]
 80050ca:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80050ce:	9502      	str	r5, [sp, #8]
 80050d0:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80050d4:	9501      	str	r5, [sp, #4]
 80050d6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80050da:	9500      	str	r5, [sp, #0]
 80050dc:	f011 fdb0 	bl	8016c40 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80050e0:	4b06      	ldr	r3, [pc, #24]	; (80050fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80050e2:	6023      	str	r3, [r4, #0]
 80050e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80050e6:	61a3      	str	r3, [r4, #24]
 80050e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80050ea:	61e3      	str	r3, [r4, #28]
 80050ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80050ee:	6223      	str	r3, [r4, #32]
 80050f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80050f2:	6263      	str	r3, [r4, #36]	; 0x24
}
 80050f4:	4620      	mov	r0, r4
 80050f6:	b009      	add	sp, #36	; 0x24
 80050f8:	bd30      	pop	{r4, r5, pc}
 80050fa:	bf00      	nop
 80050fc:	08027e88 	.word	0x08027e88

08005100 <_ZN12ListTileBaseD1Ev>:

class ListTileBase : public touchgfx::Container
{
public:
    ListTileBase();
    virtual ~ListTileBase() {}
 8005100:	4770      	bx	lr

08005102 <_ZN12ListTileBase20emitTrigger1CallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTrigger1Callback()
 8005102:	b510      	push	{r4, lr}
 8005104:	4604      	mov	r4, r0
    {
        if (trigger1Callback && trigger1Callback->isValid())
 8005106:	f8d0 00e4 	ldr.w	r0, [r0, #228]	; 0xe4
 800510a:	b150      	cbz	r0, 8005122 <_ZN12ListTileBase20emitTrigger1CallbackEv+0x20>
 800510c:	6803      	ldr	r3, [r0, #0]
 800510e:	68db      	ldr	r3, [r3, #12]
 8005110:	4798      	blx	r3
 8005112:	b130      	cbz	r0, 8005122 <_ZN12ListTileBase20emitTrigger1CallbackEv+0x20>
        {
            this->trigger1Callback->execute();
 8005114:	f8d4 00e4 	ldr.w	r0, [r4, #228]	; 0xe4
 8005118:	6803      	ldr	r3, [r0, #0]
        }
    }
 800511a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->trigger1Callback->execute();
 800511e:	689b      	ldr	r3, [r3, #8]
 8005120:	4718      	bx	r3
    }
 8005122:	bd10      	pop	{r4, pc}

08005124 <_ZN12ListTileBase10initializeEv>:
}

void ListTileBase::initialize()
{

}
 8005124:	4770      	bx	lr

08005126 <_ZN12ListTileBaseD0Ev>:
    virtual ~ListTileBase() {}
 8005126:	b510      	push	{r4, lr}
 8005128:	21e8      	movs	r1, #232	; 0xe8
 800512a:	4604      	mov	r4, r0
 800512c:	f020 fb1a 	bl	8025764 <_ZdlPvj>
 8005130:	4620      	mov	r0, r4
 8005132:	bd10      	pop	{r4, pc}

08005134 <_ZN12ListTileBaseC1Ev>:
ListTileBase::ListTileBase() :
 8005134:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005138:	4604      	mov	r4, r0
    trigger1Callback(0)
 800513a:	4627      	mov	r7, r4
 800513c:	2500      	movs	r5, #0
 800513e:	f7fd f9d3 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8005142:	4b4a      	ldr	r3, [pc, #296]	; (800526c <_ZN12ListTileBaseC1Ev+0x138>)
 8005144:	62a5      	str	r5, [r4, #40]	; 0x28
 8005146:	f847 3b2c 	str.w	r3, [r7], #44
 800514a:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800514e:	4638      	mov	r0, r7
 8005150:	f7fd fcbc 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 8005154:	f104 0684 	add.w	r6, r4, #132	; 0x84
 8005158:	4640      	mov	r0, r8
 800515a:	f7fd fcb7 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800515e:	4629      	mov	r1, r5
 8005160:	2226      	movs	r2, #38	; 0x26
 8005162:	4630      	mov	r0, r6
 8005164:	f020 fcda 	bl	8025b1c <memset>
 8005168:	4630      	mov	r0, r6
 800516a:	f7fd f9bd 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 800516e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005172:	f8a4 30b0 	strh.w	r3, [r4, #176]	; 0xb0
 8005176:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800517a:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
        : TextArea(), wildcard(0)
 800517e:	4b3c      	ldr	r3, [pc, #240]	; (8005270 <_ZN12ListTileBaseC1Ev+0x13c>)
 8005180:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
        setXY(x, y);
 8005184:	2201      	movs	r2, #1
        rect.width = width;
 8005186:	4b3b      	ldr	r3, [pc, #236]	; (8005274 <_ZN12ListTileBaseC1Ev+0x140>)
 8005188:	f8df 9110 	ldr.w	r9, [pc, #272]	; 800529c <_ZN12ListTileBaseC1Ev+0x168>
 800518c:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 800518e:	4611      	mov	r1, r2
 8005190:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8005194:	f8a4 50bc 	strh.w	r5, [r4, #188]	; 0xbc
 8005198:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 800519c:	f8c4 50e4 	str.w	r5, [r4, #228]	; 0xe4
 80051a0:	4638      	mov	r0, r7
 80051a2:	f8c4 90ac 	str.w	r9, [r4, #172]	; 0xac
 80051a6:	f7fd f9b1 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80051aa:	221e      	movs	r2, #30
 80051ac:	21b8      	movs	r1, #184	; 0xb8
 80051ae:	4638      	mov	r0, r7
 80051b0:	f7fd f819 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        this->color = color;
 80051b4:	f04f 3aff 	mov.w	sl, #4294967295
        setXY(x, y);
 80051b8:	2201      	movs	r2, #1
 80051ba:	4611      	mov	r1, r2
        visible = vis;
 80051bc:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
        setXY(x, y);
 80051c0:	4640      	mov	r0, r8
 80051c2:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
 80051c6:	f7fd f9a1 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80051ca:	221e      	movs	r2, #30
 80051cc:	21b8      	movs	r1, #184	; 0xb8
 80051ce:	4640      	mov	r0, r8
 80051d0:	f7fd f809 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80051d4:	4b28      	ldr	r3, [pc, #160]	; (8005278 <_ZN12ListTileBaseC1Ev+0x144>)
 80051d6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
        visible = vis;
 80051da:	f884 507d 	strb.w	r5, [r4, #125]	; 0x7d
        setXY(x, y);
 80051de:	2204      	movs	r2, #4
 80051e0:	2106      	movs	r1, #6
 80051e2:	4630      	mov	r0, r6
 80051e4:	f7fd f992 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80051e8:	2219      	movs	r2, #25
 80051ea:	2182      	movs	r1, #130	; 0x82
 80051ec:	4630      	mov	r0, r6
 80051ee:	f7fc fffa 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80051f2:	4b22      	ldr	r3, [pc, #136]	; (800527c <_ZN12ListTileBaseC1Ev+0x148>)
        linespace = space;
 80051f4:	f8a4 50b8 	strh.w	r5, [r4, #184]	; 0xb8
 80051f8:	681b      	ldr	r3, [r3, #0]
        this->color = color;
 80051fa:	f8c4 a0b4 	str.w	sl, [r4, #180]	; 0xb4
    Unicode::snprintf(textBuffer, TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_510H).getText());
 80051fe:	f104 05c4 	add.w	r5, r4, #196	; 0xc4
 8005202:	b92b      	cbnz	r3, 8005210 <_ZN12ListTileBaseC1Ev+0xdc>
 8005204:	4b1e      	ldr	r3, [pc, #120]	; (8005280 <_ZN12ListTileBaseC1Ev+0x14c>)
 8005206:	4a1f      	ldr	r2, [pc, #124]	; (8005284 <_ZN12ListTileBaseC1Ev+0x150>)
 8005208:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800520a:	481f      	ldr	r0, [pc, #124]	; (8005288 <_ZN12ListTileBaseC1Ev+0x154>)
 800520c:	f020 fad8 	bl	80257c0 <__assert_func>
 8005210:	4b1e      	ldr	r3, [pc, #120]	; (800528c <_ZN12ListTileBaseC1Ev+0x158>)
 8005212:	881b      	ldrh	r3, [r3, #0]
 8005214:	2b50      	cmp	r3, #80	; 0x50
 8005216:	d803      	bhi.n	8005220 <_ZN12ListTileBaseC1Ev+0xec>
 8005218:	4b1d      	ldr	r3, [pc, #116]	; (8005290 <_ZN12ListTileBaseC1Ev+0x15c>)
 800521a:	4a1a      	ldr	r2, [pc, #104]	; (8005284 <_ZN12ListTileBaseC1Ev+0x150>)
 800521c:	21af      	movs	r1, #175	; 0xaf
 800521e:	e7f4      	b.n	800520a <_ZN12ListTileBaseC1Ev+0xd6>
        return texts->getText(typedTextId);
 8005220:	4b1c      	ldr	r3, [pc, #112]	; (8005294 <_ZN12ListTileBaseC1Ev+0x160>)
 8005222:	2150      	movs	r1, #80	; 0x50
 8005224:	6818      	ldr	r0, [r3, #0]
 8005226:	f002 fb63 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 800522a:	4a1b      	ldr	r2, [pc, #108]	; (8005298 <_ZN12ListTileBaseC1Ev+0x164>)
 800522c:	4603      	mov	r3, r0
 800522e:	2110      	movs	r1, #16
 8005230:	4628      	mov	r0, r5
 8005232:	f014 f95b 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005236:	234f      	movs	r3, #79	; 0x4f
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7SO4));
 8005238:	4669      	mov	r1, sp
 800523a:	4630      	mov	r0, r6
        wildcard = value;
 800523c:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8005240:	f8ad 3004 	strh.w	r3, [sp, #4]
 8005244:	f8cd 9000 	str.w	r9, [sp]
 8005248:	f00e f8b9 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxBg_1);
 800524c:	4639      	mov	r1, r7
 800524e:	4620      	mov	r0, r4
 8005250:	f00c fb1e 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxBg);
 8005254:	4641      	mov	r1, r8
 8005256:	4620      	mov	r0, r4
 8005258:	f00c fb1a 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(text);
 800525c:	4620      	mov	r0, r4
 800525e:	4631      	mov	r1, r6
 8005260:	f00c fb16 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005264:	4620      	mov	r0, r4
 8005266:	b002      	add	sp, #8
 8005268:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800526c:	08027ee0 	.word	0x08027ee0
 8005270:	0802a0e0 	.word	0x0802a0e0
 8005274:	002000ba 	.word	0x002000ba
 8005278:	ff9ae624 	.word	0xff9ae624
 800527c:	20027a00 	.word	0x20027a00
 8005280:	080273f8 	.word	0x080273f8
 8005284:	0802743a 	.word	0x0802743a
 8005288:	08027468 	.word	0x08027468
 800528c:	20027a04 	.word	0x20027a04
 8005290:	080274af 	.word	0x080274af
 8005294:	20027a0c 	.word	0x20027a0c
 8005298:	08027501 	.word	0x08027501
 800529c:	0802750c 	.word	0x0802750c

080052a0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80052a0:	4770      	bx	lr

080052a2 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80052a2:	4770      	bx	lr

080052a4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80052a4:	4770      	bx	lr

080052a6 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80052a6:	4770      	bx	lr

080052a8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80052a8:	4770      	bx	lr

080052aa <_ZN15Screen1ViewBase18functionFilterDateEv>:
     * Virtual Action Handlers
     */
    virtual void functionFilterDate()
    {
        // Override and implement this function in Screen1
    }
 80052aa:	4770      	bx	lr

080052ac <_ZN15Screen1ViewBase15functionReadLogEv>:

    virtual void functionReadLog()
    {
        // Override and implement this function in Screen1
    }
 80052ac:	4770      	bx	lr

080052ae <_ZN15Screen1ViewBase16functionPageBackEv>:

    virtual void functionPageBack()
    {
        // Override and implement this function in Screen1
    }
 80052ae:	4770      	bx	lr

080052b0 <_ZN15Screen1ViewBase19functionPageForwardEv>:

    virtual void functionPageForward()
    {
        // Override and implement this function in Screen1
    }
 80052b0:	4770      	bx	lr

080052b2 <_ZN15Screen1ViewBase14functionPage_1Ev>:

    virtual void functionPage_1()
    {
        // Override and implement this function in Screen1
    }
 80052b2:	4770      	bx	lr

080052b4 <_ZN15Screen1ViewBase14functionPage_2Ev>:

    virtual void functionPage_2()
    {
        // Override and implement this function in Screen1
    }
 80052b4:	4770      	bx	lr

080052b6 <_ZN15Screen1ViewBase14functionPage_3Ev>:

    virtual void functionPage_3()
    {
        // Override and implement this function in Screen1
    }
 80052b6:	4770      	bx	lr

080052b8 <_ZN15Screen1ViewBase14functionPage_4Ev>:

    virtual void functionPage_4()
    {
        // Override and implement this function in Screen1
    }
 80052b8:	4770      	bx	lr

080052ba <_ZN15Screen1ViewBase14functionPage_5Ev>:

    virtual void functionPage_5()
    {
        // Override and implement this function in Screen1
    }
 80052ba:	4770      	bx	lr

080052bc <_ZN15Screen1ViewBase21functionOkFilDataTimeEv>:

    virtual void functionOkFilDataTime()
    {
        // Override and implement this function in Screen1
    }
 80052bc:	4770      	bx	lr

080052be <_ZN15Screen1ViewBase17functionFilterNumEv>:

    virtual void functionFilterNum()
    {
        // Override and implement this function in Screen1
    }
 80052be:	4770      	bx	lr

080052c0 <_ZN15Screen1ViewBase25functionFilterTypeChannelEv>:

    virtual void functionFilterTypeChannel()
    {
        // Override and implement this function in Screen1
    }
 80052c0:	4770      	bx	lr

080052c2 <_ZN15Screen1ViewBase20functionFilterStLoopEv>:

    virtual void functionFilterStLoop()
    {
        // Override and implement this function in Screen1
    }
 80052c2:	4770      	bx	lr

080052c4 <_ZN15Screen1ViewBase18functionFilterUnitEv>:

    virtual void functionFilterUnit()
    {
        // Override and implement this function in Screen1
    }
 80052c4:	4770      	bx	lr

080052c6 <_ZN15Screen1ViewBase23functionFilterThresholdEv>:

    virtual void functionFilterThreshold()
    {
        // Override and implement this function in Screen1
    }
 80052c6:	4770      	bx	lr

080052c8 <_ZN15Screen1ViewBase17functionFilterErrEv>:

    virtual void functionFilterErr()
    {
        // Override and implement this function in Screen1
    }
 80052c8:	4770      	bx	lr

080052ca <_ZN15Screen1ViewBase17functionFilterGasEv>:

    virtual void functionFilterGas()
    {
        // Override and implement this function in Screen1
    }
 80052ca:	4770      	bx	lr

080052cc <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithTwoWildcards twoWildcardText; ///< The wildcard text
    colortype colorReleased;                  ///< The color released
    colortype colorPressed;                   ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 80052cc:	b508      	push	{r3, lr}
    {
        twoWildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80052ce:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80052d2:	b133      	cbz	r3, 80052e2 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 80052d4:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 80052d8:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80052dc:	f7fd f854 	bl	8002388 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80052e0:	bd08      	pop	{r3, pc}
        twoWildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80052e2:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 80052e6:	e7f7      	b.n	80052d8 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080052e8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80052e8:	4770      	bx	lr

080052ea <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80052ea:	4770      	bx	lr

080052ec <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TwoWildcardTextButtonStyle : public T
 80052ec:	4770      	bx	lr

080052ee <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80052ee:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80052f0:	68c2      	ldr	r2, [r0, #12]
 80052f2:	6844      	ldr	r4, [r0, #4]
 80052f4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80052f6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80052f8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80052fc:	07d2      	lsls	r2, r2, #31
 80052fe:	bf48      	it	mi
 8005300:	5962      	ldrmi	r2, [r4, r5]
 8005302:	689b      	ldr	r3, [r3, #8]
    }
 8005304:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005306:	bf48      	it	mi
 8005308:	58d3      	ldrmi	r3, [r2, r3]
 800530a:	4718      	bx	r3

0800530c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800530c:	6843      	ldr	r3, [r0, #4]
 800530e:	b12b      	cbz	r3, 800531c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8005310:	6883      	ldr	r3, [r0, #8]
 8005312:	b92b      	cbnz	r3, 8005320 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8005314:	68c0      	ldr	r0, [r0, #12]
 8005316:	f000 0001 	and.w	r0, r0, #1
 800531a:	4770      	bx	lr
 800531c:	4618      	mov	r0, r3
 800531e:	4770      	bx	lr
 8005320:	2001      	movs	r0, #1
    }
 8005322:	4770      	bx	lr

08005324 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005324:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005326:	68c2      	ldr	r2, [r0, #12]
 8005328:	6844      	ldr	r4, [r0, #4]
 800532a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800532c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800532e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005332:	07d2      	lsls	r2, r2, #31
 8005334:	bf48      	it	mi
 8005336:	5962      	ldrmi	r2, [r4, r5]
 8005338:	689b      	ldr	r3, [r3, #8]
    }
 800533a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800533c:	bf48      	it	mi
 800533e:	58d3      	ldrmi	r3, [r2, r3]
 8005340:	4718      	bx	r3

08005342 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8005342:	6843      	ldr	r3, [r0, #4]
 8005344:	b12b      	cbz	r3, 8005352 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005346:	6883      	ldr	r3, [r0, #8]
 8005348:	b92b      	cbnz	r3, 8005356 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800534a:	68c0      	ldr	r0, [r0, #12]
 800534c:	f000 0001 	and.w	r0, r0, #1
 8005350:	4770      	bx	lr
 8005352:	4618      	mov	r0, r3
 8005354:	4770      	bx	lr
 8005356:	2001      	movs	r0, #1
    }
 8005358:	4770      	bx	lr

0800535a <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        twoWildcardText.setAlpha(T::getAlpha());
 800535a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 800535e:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 8005362:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8005366:	4770      	bx	lr

08005368 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005368:	b510      	push	{r4, lr}
 800536a:	2110      	movs	r1, #16
 800536c:	4604      	mov	r4, r0
 800536e:	f020 f9f9 	bl	8025764 <_ZdlPvj>
 8005372:	4620      	mov	r0, r4
 8005374:	bd10      	pop	{r4, pc}

08005376 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8005376:	b510      	push	{r4, lr}
 8005378:	2110      	movs	r1, #16
 800537a:	4604      	mov	r4, r0
 800537c:	f020 f9f2 	bl	8025764 <_ZdlPvj>
 8005380:	4620      	mov	r0, r4
 8005382:	bd10      	pop	{r4, pc}

08005384 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TwoWildcardTextButtonStyle : public T
 8005384:	b510      	push	{r4, lr}
 8005386:	21c4      	movs	r1, #196	; 0xc4
 8005388:	4604      	mov	r4, r0
 800538a:	f020 f9eb 	bl	8025764 <_ZdlPvj>
 800538e:	4620      	mov	r0, r4
 8005390:	bd10      	pop	{r4, pc}

08005392 <_ZN15Screen1ViewBase11setupScreenEv>:
    add(textAreaStopDate);
    add(modalWindow1);
}

void Screen1ViewBase::setupScreen()
{
 8005392:	b510      	push	{r4, lr}
 8005394:	4604      	mov	r4, r0
    customContainerTableLog_0.initialize();
 8005396:	30d0      	adds	r0, #208	; 0xd0
 8005398:	f002 fe39 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_1.initialize();
 800539c:	f504 60d4 	add.w	r0, r4, #1696	; 0x6a0
 80053a0:	f002 fe35 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_2.initialize();
 80053a4:	f504 6047 	add.w	r0, r4, #3184	; 0xc70
 80053a8:	f002 fe31 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_3.initialize();
 80053ac:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
 80053b0:	f002 fe2d 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_4.initialize();
 80053b4:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 80053b8:	3010      	adds	r0, #16
 80053ba:	f002 fe28 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_5.initialize();
 80053be:	f504 50ef 	add.w	r0, r4, #7648	; 0x1de0
 80053c2:	f002 fe24 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_6.initialize();
 80053c6:	f504 500e 	add.w	r0, r4, #9088	; 0x2380
 80053ca:	3030      	adds	r0, #48	; 0x30
 80053cc:	f002 fe1f 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_7.initialize();
 80053d0:	f504 5026 	add.w	r0, r4, #10624	; 0x2980
 80053d4:	f002 fe1b 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_8.initialize();
 80053d8:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 80053dc:	3010      	adds	r0, #16
 80053de:	f002 fe16 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_9.initialize();
 80053e2:	f504 5054 	add.w	r0, r4, #13568	; 0x3500
 80053e6:	3020      	adds	r0, #32
 80053e8:	f002 fe11 	bl	800800e <_ZN23CustomContainerTableLog10initializeEv>
    ListFilterLog_Gas.initialize();
 80053ec:	f504 4082 	add.w	r0, r4, #16640	; 0x4100
 80053f0:	3050      	adds	r0, #80	; 0x50
 80053f2:	f002 fac2 	bl	800797a <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_Err.initialize();
 80053f6:	f504 40a2 	add.w	r0, r4, #20736	; 0x5100
 80053fa:	3070      	adds	r0, #112	; 0x70
 80053fc:	f002 fabd 	bl	800797a <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_StCur.initialize();
 8005400:	f504 40c3 	add.w	r0, r4, #24960	; 0x6180
 8005404:	3010      	adds	r0, #16
 8005406:	f002 fab8 	bl	800797a <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_Unit.initialize();
 800540a:	f504 40e3 	add.w	r0, r4, #29056	; 0x7180
 800540e:	3030      	adds	r0, #48	; 0x30
 8005410:	f002 fab3 	bl	800797a <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_StLoop.initialize();
 8005414:	f504 4001 	add.w	r0, r4, #33024	; 0x8100
 8005418:	30d0      	adds	r0, #208	; 0xd0
 800541a:	f002 faae 	bl	800797a <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_TypeChan.initialize();
 800541e:	f504 4011 	add.w	r0, r4, #37120	; 0x9100
 8005422:	30f0      	adds	r0, #240	; 0xf0
 8005424:	f002 faa9 	bl	800797a <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_Num.initialize();
 8005428:	f504 4022 	add.w	r0, r4, #41472	; 0xa200
 800542c:	3010      	adds	r0, #16
}
 800542e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ListFilterLog_Num.initialize();
 8005432:	f002 baa2 	b.w	800797a <_ZN19ConfigListFilterLog10initializeEv>

08005436 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonReadLog)
 8005436:	f500 526c 	add.w	r2, r0, #15104	; 0x3b00
 800543a:	3224      	adds	r2, #36	; 0x24
 800543c:	4291      	cmp	r1, r2
{
 800543e:	4603      	mov	r3, r0
    if (&src == &flexButtonReadLog)
 8005440:	d102      	bne.n	8005448 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12>
    {
        //InteractionReadLog
        //When flexButtonReadLog clicked call virtual function
        //Call functionReadLog
        functionReadLog();
 8005442:	6803      	ldr	r3, [r0, #0]
 8005444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonPageBack)
    {
        //InteractionPageBack
        //When flexButtonPageBack clicked call virtual function
        //Call functionPageBack
        functionPageBack();
 8005446:	4718      	bx	r3
    else if (&src == &flexButtonPageBack)
 8005448:	f500 5270 	add.w	r2, r0, #15360	; 0x3c00
 800544c:	3210      	adds	r2, #16
 800544e:	4291      	cmp	r1, r2
 8005450:	d102      	bne.n	8005458 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
        functionPageBack();
 8005452:	6803      	ldr	r3, [r0, #0]
 8005454:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005456:	e7f6      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_1)
 8005458:	f500 5273 	add.w	r2, r0, #15552	; 0x3cc0
 800545c:	3210      	adds	r2, #16
 800545e:	4291      	cmp	r1, r2
 8005460:	d102      	bne.n	8005468 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
    {
        //InteractionPage_1
        //When flexButtonPage_1 clicked call virtual function
        //Call functionPage_1
        functionPage_1();
 8005462:	6803      	ldr	r3, [r0, #0]
 8005464:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005466:	e7ee      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_2)
 8005468:	f500 5276 	add.w	r2, r0, #15744	; 0x3d80
 800546c:	3210      	adds	r2, #16
 800546e:	4291      	cmp	r1, r2
 8005470:	d102      	bne.n	8005478 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
    {
        //InteractionPage_2
        //When flexButtonPage_2 clicked call virtual function
        //Call functionPage_2
        functionPage_2();
 8005472:	6803      	ldr	r3, [r0, #0]
 8005474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005476:	e7e6      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_3)
 8005478:	f500 5279 	add.w	r2, r0, #15936	; 0x3e40
 800547c:	3210      	adds	r2, #16
 800547e:	4291      	cmp	r1, r2
 8005480:	d102      	bne.n	8005488 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x52>
    {
        //InteractionPage_3
        //When flexButtonPage_3 clicked call virtual function
        //Call functionPage_3
        functionPage_3();
 8005482:	6803      	ldr	r3, [r0, #0]
 8005484:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005486:	e7de      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_4)
 8005488:	f500 527c 	add.w	r2, r0, #16128	; 0x3f00
 800548c:	3210      	adds	r2, #16
 800548e:	4291      	cmp	r1, r2
 8005490:	d102      	bne.n	8005498 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    {
        //InteractionPage_4
        //When flexButtonPage_4 clicked call virtual function
        //Call functionPage_4
        functionPage_4();
 8005492:	6803      	ldr	r3, [r0, #0]
 8005494:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005496:	e7d6      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_5)
 8005498:	f500 527f 	add.w	r2, r0, #16320	; 0x3fc0
 800549c:	3210      	adds	r2, #16
 800549e:	4291      	cmp	r1, r2
 80054a0:	d102      	bne.n	80054a8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    {
        //InteractionPage_5
        //When flexButtonPage_5 clicked call virtual function
        //Call functionPage_5
        functionPage_5();
 80054a2:	6803      	ldr	r3, [r0, #0]
 80054a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80054a6:	e7ce      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPageForward)
 80054a8:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 80054ac:	3210      	adds	r2, #16
 80054ae:	4291      	cmp	r1, r2
 80054b0:	d102      	bne.n	80054b8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    {
        //InteractionPageForward
        //When flexButtonPageForward clicked call virtual function
        //Call functionPageForward
        functionPageForward();
 80054b2:	6803      	ldr	r3, [r0, #0]
 80054b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80054b6:	e7c6      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonFilterGas)
 80054b8:	f500 4232 	add.w	r2, r0, #45568	; 0xb200
 80054bc:	3230      	adds	r2, #48	; 0x30
 80054be:	4291      	cmp	r1, r2
 80054c0:	d102      	bne.n	80054c8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    {
        //InteractionFilterGas
        //When flexButtonFilterGas clicked call virtual function
        //Call functionFilterGas
        functionFilterGas();
 80054c2:	6803      	ldr	r3, [r0, #0]
 80054c4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80054c6:	e7be      	b.n	8005446 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonFilterErr)
 80054c8:	f500 4232 	add.w	r2, r0, #45568	; 0xb200
 80054cc:	32f4      	adds	r2, #244	; 0xf4
 80054ce:	4291      	cmp	r1, r2
 80054d0:	d103      	bne.n	80054da <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa4>
    {
        //InteractionFilterErr
        //When flexButtonFilterErr clicked call virtual function
        //Call functionFilterErr
        functionFilterErr();
 80054d2:	6802      	ldr	r2, [r0, #0]
 80054d4:	6e92      	ldr	r2, [r2, #104]	; 0x68
    else if (&src == &flexButtonOkFilDataTime)
    {
        //InteractionOkFilDataTime
        //When flexButtonOkFilDataTime clicked call virtual function
        //Call functionOkFilDataTime
        functionOkFilDataTime();
 80054d6:	4618      	mov	r0, r3
 80054d8:	4710      	bx	r2
    else if (&src == &flexButtonFilterThreshold)
 80054da:	f500 4233 	add.w	r2, r0, #45824	; 0xb300
 80054de:	32b8      	adds	r2, #184	; 0xb8
 80054e0:	4291      	cmp	r1, r2
 80054e2:	d102      	bne.n	80054ea <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb4>
        functionFilterThreshold();
 80054e4:	6802      	ldr	r2, [r0, #0]
 80054e6:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80054e8:	e7f5      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterUnit)
 80054ea:	f500 4234 	add.w	r2, r0, #46080	; 0xb400
 80054ee:	327c      	adds	r2, #124	; 0x7c
 80054f0:	4291      	cmp	r1, r2
 80054f2:	d102      	bne.n	80054fa <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc4>
        functionFilterUnit();
 80054f4:	6802      	ldr	r2, [r0, #0]
 80054f6:	6e12      	ldr	r2, [r2, #96]	; 0x60
 80054f8:	e7ed      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterStLoop)
 80054fa:	f500 4236 	add.w	r2, r0, #46592	; 0xb600
 80054fe:	4291      	cmp	r1, r2
 8005500:	d102      	bne.n	8005508 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
        functionFilterStLoop();
 8005502:	6802      	ldr	r2, [r0, #0]
 8005504:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8005506:	e7e6      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterTypeChannel)
 8005508:	f500 4236 	add.w	r2, r0, #46592	; 0xb600
 800550c:	32c4      	adds	r2, #196	; 0xc4
 800550e:	4291      	cmp	r1, r2
 8005510:	d102      	bne.n	8005518 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe2>
        functionFilterTypeChannel();
 8005512:	6802      	ldr	r2, [r0, #0]
 8005514:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8005516:	e7de      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterNum)
 8005518:	f500 4237 	add.w	r2, r0, #46848	; 0xb700
 800551c:	3288      	adds	r2, #136	; 0x88
 800551e:	4291      	cmp	r1, r2
 8005520:	d102      	bne.n	8005528 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf2>
        functionFilterNum();
 8005522:	6802      	ldr	r2, [r0, #0]
 8005524:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8005526:	e7d6      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterData)
 8005528:	f500 4238 	add.w	r2, r0, #47104	; 0xb800
 800552c:	324c      	adds	r2, #76	; 0x4c
 800552e:	4291      	cmp	r1, r2
 8005530:	d102      	bne.n	8005538 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x102>
        functionFilterDate();
 8005532:	6802      	ldr	r2, [r0, #0]
 8005534:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8005536:	e7ce      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonOkFilDataTime)
 8005538:	f500 423a 	add.w	r2, r0, #47616	; 0xba00
 800553c:	323c      	adds	r2, #60	; 0x3c
 800553e:	4291      	cmp	r1, r2
 8005540:	d102      	bne.n	8005548 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x112>
        functionOkFilDataTime();
 8005542:	6802      	ldr	r2, [r0, #0]
 8005544:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8005546:	e7c6      	b.n	80054d6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    }
    else if (&src == &flexButtonExitFilDataTime)
 8005548:	f500 423a 	add.w	r2, r0, #47616	; 0xba00
 800554c:	32f8      	adds	r2, #248	; 0xf8
 800554e:	4291      	cmp	r1, r2
 8005550:	d108      	bne.n	8005564 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12e>
        visible = vis;
 8005552:	f64b 12b1 	movw	r2, #47537	; 0xb9b1
 8005556:	2100      	movs	r1, #0
 8005558:	5481      	strb	r1, [r0, r2]
    {
        //InteractionExitFilDataTime
        //When flexButtonExitFilDataTime clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
 800555a:	f500 4039 	add.w	r0, r0, #47360	; 0xb900
 800555e:	308c      	adds	r0, #140	; 0x8c
 8005560:	f011 bac4 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
    }
}
 8005564:	4770      	bx	lr

08005566 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 8005566:	f500 506b 	add.w	r0, r0, #15040	; 0x3ac0
 800556a:	3030      	adds	r0, #48	; 0x30
 800556c:	4281      	cmp	r1, r0
{
 800556e:	b508      	push	{r3, lr}
    if (&src == &button1)
 8005570:	d105      	bne.n	800557e <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005572:	f010 fb13 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
}
 8005576:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 800557a:	f7ff bbeb 	b.w	8004d54 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 800557e:	bd08      	pop	{r3, pc}

08005580 <_ZN19ConfigListFilterLogD1Ev>:

class ConfigListFilterLog : public ConfigListFilterLogBase
{
public:
    ConfigListFilterLog();
    virtual ~ConfigListFilterLog()
 8005580:	b510      	push	{r4, lr}
 8005582:	4b04      	ldr	r3, [pc, #16]	; (8005594 <_ZN19ConfigListFilterLogD1Ev+0x14>)
 8005584:	6003      	str	r3, [r0, #0]
 8005586:	4604      	mov	r4, r0
 8005588:	f500 7092 	add.w	r0, r0, #292	; 0x124
 800558c:	f7fc fd94 	bl	80020b8 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>
    {
    }
 8005590:	4620      	mov	r0, r4
 8005592:	bd10      	pop	{r4, pc}
 8005594:	08027368 	.word	0x08027368

08005598 <_ZN15Screen1ViewBaseD1Ev>:
    virtual ~Screen1ViewBase() {}
 8005598:	4b14      	ldr	r3, [pc, #80]	; (80055ec <_ZN15Screen1ViewBaseD1Ev+0x54>)
 800559a:	b510      	push	{r4, lr}
 800559c:	4604      	mov	r4, r0
 800559e:	6003      	str	r3, [r0, #0]
 80055a0:	f500 4022 	add.w	r0, r0, #41472	; 0xa200
 80055a4:	3010      	adds	r0, #16
 80055a6:	f7ff ffeb 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055aa:	f504 4011 	add.w	r0, r4, #37120	; 0x9100
 80055ae:	30f0      	adds	r0, #240	; 0xf0
 80055b0:	f7ff ffe6 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055b4:	f504 4001 	add.w	r0, r4, #33024	; 0x8100
 80055b8:	30d0      	adds	r0, #208	; 0xd0
 80055ba:	f7ff ffe1 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055be:	f504 40e3 	add.w	r0, r4, #29056	; 0x7180
 80055c2:	3030      	adds	r0, #48	; 0x30
 80055c4:	f7ff ffdc 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055c8:	f504 40c3 	add.w	r0, r4, #24960	; 0x6180
 80055cc:	3010      	adds	r0, #16
 80055ce:	f7ff ffd7 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055d2:	f504 40a2 	add.w	r0, r4, #20736	; 0x5100
 80055d6:	3070      	adds	r0, #112	; 0x70
 80055d8:	f7ff ffd2 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055dc:	f504 4082 	add.w	r0, r4, #16640	; 0x4100
 80055e0:	3050      	adds	r0, #80	; 0x50
 80055e2:	f7ff ffcd 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 80055e6:	4620      	mov	r0, r4
 80055e8:	bd10      	pop	{r4, pc}
 80055ea:	bf00      	nop
 80055ec:	0802803c 	.word	0x0802803c

080055f0 <_ZN15Screen1ViewBaseD0Ev>:
 80055f0:	b510      	push	{r4, lr}
 80055f2:	4604      	mov	r4, r0
 80055f4:	f7ff ffd0 	bl	8005598 <_ZN15Screen1ViewBaseD1Ev>
 80055f8:	4620      	mov	r0, r4
 80055fa:	f64b 61c8 	movw	r1, #48840	; 0xbec8
 80055fe:	f020 f8b1 	bl	8025764 <_ZdlPvj>
 8005602:	4620      	mov	r0, r4
 8005604:	bd10      	pop	{r4, pc}

08005606 <_ZN19ConfigListFilterLogD0Ev>:
    virtual ~ConfigListFilterLog()
 8005606:	b510      	push	{r4, lr}
 8005608:	4604      	mov	r4, r0
    }
 800560a:	f7ff ffb9 	bl	8005580 <_ZN19ConfigListFilterLogD1Ev>
 800560e:	4620      	mov	r0, r4
 8005610:	f44f 5181 	mov.w	r1, #4128	; 0x1020
 8005614:	f020 f8a6 	bl	8025764 <_ZdlPvj>
 8005618:	4620      	mov	r0, r4
 800561a:	bd10      	pop	{r4, pc}

0800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>:
 800561c:	6803      	ldr	r3, [r0, #0]
        colorPressed = newColorPressed;
 800561e:	e9c0 122e 	strd	r1, r2, [r0, #184]	; 0xb8
        handlePressedUpdated();
 8005622:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005626:	4718      	bx	r3

08005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>:
    void setTwoWildcardText(TypedText t)
 8005628:	b513      	push	{r0, r1, r4, lr}
 800562a:	4604      	mov	r4, r0
        twoWildcardText.setTypedText(t);
 800562c:	3078      	adds	r0, #120	; 0x78
 800562e:	9001      	str	r0, [sp, #4]
 8005630:	f00d fec5 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        twoWildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8005634:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8005638:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800563c:	9801      	ldr	r0, [sp, #4]
 800563e:	f7fc fdd2 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8005642:	b002      	add	sp, #8
 8005644:	bd10      	pop	{r4, pc}

08005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>:
        handlePressedUpdated();
 8005646:	6803      	ldr	r3, [r0, #0]
        colorPressed = newColorPressed;
 8005648:	e9c0 122f 	strd	r1, r2, [r0, #188]	; 0xbc
        handlePressedUpdated();
 800564c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005650:	4718      	bx	r3
	...

08005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TwoWildcardTextButtonStyle()
 8005654:	b538      	push	{r3, r4, r5, lr}
 8005656:	4604      	mov	r4, r0
        : T()
 8005658:	4625      	mov	r5, r4
 800565a:	f7fd fa91 	bl	8002b80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800565e:	4b09      	ldr	r3, [pc, #36]	; (8005684 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x30>)
 8005660:	f845 3b78 	str.w	r3, [r5], #120
 */
class TextAreaWithTwoWildcards : public TextArea
{
public:
    TextAreaWithTwoWildcards()
        : TextArea(), wc1(0), wc2(0)
 8005664:	4628      	mov	r0, r5
 8005666:	f7fd fa45 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 800566a:	4b07      	ldr	r3, [pc, #28]	; (8005688 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x34>)
 800566c:	67a3      	str	r3, [r4, #120]	; 0x78
 800566e:	2300      	movs	r3, #0
        T::add(twoWildcardText);
 8005670:	4620      	mov	r0, r4
 8005672:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
        : color(0)
 8005676:	e9c4 332f 	strd	r3, r3, [r4, #188]	; 0xbc
 800567a:	4629      	mov	r1, r5
 800567c:	f00c f908 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8005680:	4620      	mov	r0, r4
 8005682:	bd38      	pop	{r3, r4, r5, pc}
 8005684:	08027f74 	.word	0x08027f74
 8005688:	0802a158 	.word	0x0802a158

0800568c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800568c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005690:	ed2d 8b10 	vpush	{d8-d15}
 8005694:	4604      	mov	r4, r0
 8005696:	b0a3      	sub	sp, #140	; 0x8c
        : presenter(0)
 8005698:	f011 fcc6 	bl	8017028 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800569c:	4622      	mov	r2, r4
 800569e:	2500      	movs	r5, #0
 80056a0:	4bdd      	ldr	r3, [pc, #884]	; (8005a18 <_ZN15Screen1ViewBaseC1Ev+0x38c>)
 80056a2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80056a4:	f842 3b40 	str.w	r3, [r2], #64
 80056a8:	4610      	mov	r0, r2
 80056aa:	9216      	str	r2, [sp, #88]	; 0x58
 80056ac:	f7fd fa0e 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 80056b0:	f104 036c 	add.w	r3, r4, #108	; 0x6c
        : Box(), borderColor(0), borderSize(0)
 80056b4:	4618      	mov	r0, r3
 80056b6:	9317      	str	r3, [sp, #92]	; 0x5c
 80056b8:	f7fd fa08 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 80056bc:	4bd7      	ldr	r3, [pc, #860]	; (8005a1c <_ZN15Screen1ViewBaseC1Ev+0x390>)
 80056be:	66e3      	str	r3, [r4, #108]	; 0x6c
 80056c0:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80056c4:	4618      	mov	r0, r3
        : color(col)
 80056c6:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 80056ca:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 80056ce:	ee08 3a10 	vmov	s16, r3
     *           places the elements vertically, ::EAST places the elements horizontally.
     *
     * @see setDirection
     */
    ListLayout(const Direction d = SOUTH)
        : Container(), direction(d), offset(0)
 80056d2:	f04f 0901 	mov.w	r9, #1
 80056d6:	f7fc ff07 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80056da:	4ed1      	ldr	r6, [pc, #836]	; (8005a20 <_ZN15Screen1ViewBaseC1Ev+0x394>)
 80056dc:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 80056e0:	f104 03d0 	add.w	r3, r4, #208	; 0xd0
 80056e4:	f884 90cc 	strb.w	r9, [r4, #204]	; 0xcc
 80056e8:	4618      	mov	r0, r3
 80056ea:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 80056ee:	f8a4 50ce 	strh.w	r5, [r4, #206]	; 0xce
 80056f2:	9318      	str	r3, [sp, #96]	; 0x60
 80056f4:	f002 fc96 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 80056f8:	f504 63d4 	add.w	r3, r4, #1696	; 0x6a0
 80056fc:	4618      	mov	r0, r3
 80056fe:	9319      	str	r3, [sp, #100]	; 0x64
 8005700:	f002 fc90 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 8005704:	f504 6347 	add.w	r3, r4, #3184	; 0xc70
 8005708:	4618      	mov	r0, r3
 800570a:	931a      	str	r3, [sp, #104]	; 0x68
 800570c:	f002 fc8a 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 8005710:	f504 5392 	add.w	r3, r4, #4672	; 0x1240
 8005714:	4618      	mov	r0, r3
 8005716:	931b      	str	r3, [sp, #108]	; 0x6c
 8005718:	f002 fc84 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 800571c:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 8005720:	3310      	adds	r3, #16
 8005722:	4618      	mov	r0, r3
 8005724:	9304      	str	r3, [sp, #16]
 8005726:	f002 fc7d 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 800572a:	f504 53ef 	add.w	r3, r4, #7648	; 0x1de0
 800572e:	4618      	mov	r0, r3
 8005730:	931c      	str	r3, [sp, #112]	; 0x70
 8005732:	f002 fc77 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 8005736:	f504 530e 	add.w	r3, r4, #9088	; 0x2380
 800573a:	3330      	adds	r3, #48	; 0x30
 800573c:	4618      	mov	r0, r3
 800573e:	9315      	str	r3, [sp, #84]	; 0x54
 8005740:	f504 583d 	add.w	r8, r4, #12096	; 0x2f40
 8005744:	f002 fc6e 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 8005748:	f504 5326 	add.w	r3, r4, #10624	; 0x2980
 800574c:	4618      	mov	r0, r3
 800574e:	f108 0810 	add.w	r8, r8, #16
 8005752:	f504 5754 	add.w	r7, r4, #13568	; 0x3500
 8005756:	931d      	str	r3, [sp, #116]	; 0x74
 8005758:	3720      	adds	r7, #32
 800575a:	f002 fc63 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 800575e:	4640      	mov	r0, r8
 8005760:	f002 fc60 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 8005764:	f643 2af0 	movw	sl, #15088	; 0x3af0
 8005768:	4638      	mov	r0, r7
 800576a:	f002 fc5b 	bl	8008024 <_ZN23CustomContainerTableLogC1Ev>
 800576e:	eb04 030a 	add.w	r3, r4, sl
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8005772:	4629      	mov	r1, r5
 8005774:	2226      	movs	r2, #38	; 0x26
 8005776:	4618      	mov	r0, r3
 8005778:	9306      	str	r3, [sp, #24]
 800577a:	f020 f9cf 	bl	8025b1c <memset>
 800577e:	9806      	ldr	r0, [sp, #24]
 8005780:	f7fc feb2 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8005784:	9b06      	ldr	r3, [sp, #24]
 8005786:	629d      	str	r5, [r3, #40]	; 0x28
 8005788:	f883 502c 	strb.w	r5, [r3, #44]	; 0x2c
        touchable = touch;
 800578c:	f643 3314 	movw	r3, #15124	; 0x3b14
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8005790:	f643 321e 	movw	r2, #15134	; 0x3b1e
 8005794:	f804 9003 	strb.w	r9, [r4, r3]
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8005798:	4ba2      	ldr	r3, [pc, #648]	; (8005a24 <_ZN15Screen1ViewBaseC1Ev+0x398>)
 800579a:	f844 300a 	str.w	r3, [r4, sl]
 800579e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80057a2:	52a3      	strh	r3, [r4, r2]
 80057a4:	f643 3220 	movw	r2, #15136	; 0x3b20
 80057a8:	f643 3ae0 	movw	sl, #15328	; 0x3be0
 80057ac:	52a3      	strh	r3, [r4, r2]
 80057ae:	9a06      	ldr	r2, [sp, #24]
 80057b0:	f882 3032 	strb.w	r3, [r2, #50]	; 0x32
 80057b4:	f504 536c 	add.w	r3, r4, #15104	; 0x3b00
 80057b8:	3324      	adds	r3, #36	; 0x24
 80057ba:	4618      	mov	r0, r3
 80057bc:	ee09 3a90 	vmov	s19, r3
 80057c0:	f7fd fa0a 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80057c4:	eb04 030a 	add.w	r3, r4, sl
 80057c8:	ee08 3a90 	vmov	s17, r3
 80057cc:	4618      	mov	r0, r3
 80057ce:	f7fc fe8b 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80057d2:	ee18 3a90 	vmov	r3, s17
 80057d6:	629d      	str	r5, [r3, #40]	; 0x28
 80057d8:	f844 600a 	str.w	r6, [r4, sl]
 80057dc:	f883 902c 	strb.w	r9, [r3, #44]	; 0x2c
 80057e0:	85dd      	strh	r5, [r3, #46]	; 0x2e
 80057e2:	f504 5370 	add.w	r3, r4, #15360	; 0x3c00
 80057e6:	3310      	adds	r3, #16
 80057e8:	f504 5973 	add.w	r9, r4, #15552	; 0x3cc0
 80057ec:	4618      	mov	r0, r3
 80057ee:	f109 0910 	add.w	r9, r9, #16
 80057f2:	f504 5b76 	add.w	fp, r4, #15744	; 0x3d80
 80057f6:	ee0d 3a90 	vmov	s27, r3
 80057fa:	f10b 0b10 	add.w	fp, fp, #16
 80057fe:	f7fc fe93 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8005802:	4648      	mov	r0, r9
 8005804:	f7fc fe90 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8005808:	4658      	mov	r0, fp
 800580a:	f7fc fe8d 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800580e:	f504 5379 	add.w	r3, r4, #15936	; 0x3e40
 8005812:	3310      	adds	r3, #16
 8005814:	4618      	mov	r0, r3
 8005816:	ee0e 3a10 	vmov	s28, r3
 800581a:	f7fc fe85 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800581e:	f504 537c 	add.w	r3, r4, #16128	; 0x3f00
 8005822:	3310      	adds	r3, #16
 8005824:	4618      	mov	r0, r3
 8005826:	ee0e 3a90 	vmov	s29, r3
 800582a:	f7fc fe7d 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800582e:	f504 537f 	add.w	r3, r4, #16320	; 0x3fc0
 8005832:	3310      	adds	r3, #16
 8005834:	4618      	mov	r0, r3
 8005836:	ee0f 3a10 	vmov	s30, r3
 800583a:	f7fc fe75 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800583e:	f504 4381 	add.w	r3, r4, #16512	; 0x4080
 8005842:	3310      	adds	r3, #16
 8005844:	4618      	mov	r0, r3
 8005846:	ee0f 3a90 	vmov	s31, r3
 800584a:	f7fc fe6d 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800584e:	f504 4382 	add.w	r3, r4, #16640	; 0x4100
 8005852:	3350      	adds	r3, #80	; 0x50
 8005854:	4618      	mov	r0, r3
 8005856:	930e      	str	r3, [sp, #56]	; 0x38
 8005858:	f002 f904 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 800585c:	f504 43a2 	add.w	r3, r4, #20736	; 0x5100
 8005860:	3370      	adds	r3, #112	; 0x70
 8005862:	4618      	mov	r0, r3
 8005864:	930f      	str	r3, [sp, #60]	; 0x3c
 8005866:	f002 f8fd 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 800586a:	f504 43c3 	add.w	r3, r4, #24960	; 0x6180
 800586e:	3310      	adds	r3, #16
 8005870:	4618      	mov	r0, r3
 8005872:	9310      	str	r3, [sp, #64]	; 0x40
 8005874:	f002 f8f6 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 8005878:	f504 43e3 	add.w	r3, r4, #29056	; 0x7180
 800587c:	3330      	adds	r3, #48	; 0x30
 800587e:	4618      	mov	r0, r3
 8005880:	9311      	str	r3, [sp, #68]	; 0x44
 8005882:	f002 f8ef 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 8005886:	f504 4301 	add.w	r3, r4, #33024	; 0x8100
 800588a:	33d0      	adds	r3, #208	; 0xd0
 800588c:	4618      	mov	r0, r3
 800588e:	9312      	str	r3, [sp, #72]	; 0x48
 8005890:	f002 f8e8 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 8005894:	f504 4311 	add.w	r3, r4, #37120	; 0x9100
 8005898:	33f0      	adds	r3, #240	; 0xf0
 800589a:	4618      	mov	r0, r3
 800589c:	9313      	str	r3, [sp, #76]	; 0x4c
 800589e:	f002 f8e1 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 80058a2:	f504 4322 	add.w	r3, r4, #41472	; 0xa200
 80058a6:	3310      	adds	r3, #16
 80058a8:	4618      	mov	r0, r3
 80058aa:	9314      	str	r3, [sp, #80]	; 0x50
 80058ac:	f002 f8da 	bl	8007a64 <_ZN19ConfigListFilterLogC1Ev>
 80058b0:	f504 4332 	add.w	r3, r4, #45568	; 0xb200
 80058b4:	3330      	adds	r3, #48	; 0x30
 80058b6:	4618      	mov	r0, r3
 80058b8:	ee0a 3a10 	vmov	s20, r3
 80058bc:	f7ff feca 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80058c0:	f504 4332 	add.w	r3, r4, #45568	; 0xb200
 80058c4:	33f4      	adds	r3, #244	; 0xf4
 80058c6:	4618      	mov	r0, r3
 80058c8:	ee0a 3a90 	vmov	s21, r3
 80058cc:	f7ff fec2 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80058d0:	f504 4333 	add.w	r3, r4, #45824	; 0xb300
 80058d4:	33b8      	adds	r3, #184	; 0xb8
 80058d6:	4618      	mov	r0, r3
 80058d8:	ee0b 3a10 	vmov	s22, r3
 80058dc:	f7ff feba 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80058e0:	f504 4334 	add.w	r3, r4, #46080	; 0xb400
 80058e4:	337c      	adds	r3, #124	; 0x7c
 80058e6:	4618      	mov	r0, r3
 80058e8:	ee0b 3a90 	vmov	s23, r3
 80058ec:	f7ff feb2 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80058f0:	f504 4335 	add.w	r3, r4, #46336	; 0xb500
 80058f4:	3340      	adds	r3, #64	; 0x40
 80058f6:	4618      	mov	r0, r3
 80058f8:	ee0c 3a10 	vmov	s24, r3
 80058fc:	f7fc fe14 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8005900:	f504 4336 	add.w	r3, r4, #46592	; 0xb600
 8005904:	4618      	mov	r0, r3
 8005906:	9309      	str	r3, [sp, #36]	; 0x24
 8005908:	f7ff fea4 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800590c:	f504 4336 	add.w	r3, r4, #46592	; 0xb600
 8005910:	33c4      	adds	r3, #196	; 0xc4
 8005912:	4618      	mov	r0, r3
 8005914:	ee0c 3a90 	vmov	s25, r3
 8005918:	f7ff fe9c 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800591c:	f504 4337 	add.w	r3, r4, #46848	; 0xb700
 8005920:	3388      	adds	r3, #136	; 0x88
 8005922:	4618      	mov	r0, r3
 8005924:	9305      	str	r3, [sp, #20]
 8005926:	f7ff fe95 	bl	8005654 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800592a:	f504 4338 	add.w	r3, r4, #47104	; 0xb800
 800592e:	334c      	adds	r3, #76	; 0x4c
 8005930:	f64b 1a0c 	movw	sl, #47372	; 0xb90c
 8005934:	4618      	mov	r0, r3
 8005936:	ee0d 3a10 	vmov	s26, r3
 800593a:	f7fc fdf5 	bl	8002528 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800593e:	eb04 030a 	add.w	r3, r4, sl
        : TextArea(), wildcard(0)
 8005942:	4618      	mov	r0, r3
 8005944:	4e38      	ldr	r6, [pc, #224]	; (8005a28 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
 8005946:	930a      	str	r3, [sp, #40]	; 0x28
 8005948:	f7fd f8d4 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 800594c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800594e:	f844 600a 	str.w	r6, [r4, sl]
 8005952:	f64b 1a4c 	movw	sl, #47436	; 0xb94c
 8005956:	63dd      	str	r5, [r3, #60]	; 0x3c
 8005958:	eb04 030a 	add.w	r3, r4, sl
 800595c:	4618      	mov	r0, r3
 800595e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005960:	f7fd f8c8 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8005964:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005966:	f844 600a 	str.w	r6, [r4, sl]
 800596a:	63dd      	str	r5, [r3, #60]	; 0x3c
 800596c:	f504 4339 	add.w	r3, r4, #47360	; 0xb900
 8005970:	338c      	adds	r3, #140	; 0x8c
 8005972:	4618      	mov	r0, r3
 8005974:	ee09 3a10 	vmov	s18, r3
 8005978:	f00b fe9a 	bl	80116b0 <_ZN8touchgfx11ModalWindowC1Ev>
 800597c:	f504 433a 	add.w	r3, r4, #47616	; 0xba00
 8005980:	333c      	adds	r3, #60	; 0x3c
 8005982:	4618      	mov	r0, r3
 8005984:	9307      	str	r3, [sp, #28]
 8005986:	f7fd f927 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800598a:	f504 433a 	add.w	r3, r4, #47616	; 0xba00
 800598e:	33f8      	adds	r3, #248	; 0xf8
 8005990:	f64b 3ab4 	movw	sl, #48052	; 0xbbb4
 8005994:	4618      	mov	r0, r3
 8005996:	9308      	str	r3, [sp, #32]
 8005998:	f7fd f91e 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800599c:	eb04 030a 	add.w	r3, r4, sl
 80059a0:	4618      	mov	r0, r3
 80059a2:	930c      	str	r3, [sp, #48]	; 0x30
 80059a4:	f7fd f8a6 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 80059a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80059aa:	f844 600a 	str.w	r6, [r4, sl]
 80059ae:	f64b 3af4 	movw	sl, #48116	; 0xbbf4
 80059b2:	63dd      	str	r5, [r3, #60]	; 0x3c
 80059b4:	eb04 030a 	add.w	r3, r4, sl
 80059b8:	4618      	mov	r0, r3
 80059ba:	930d      	str	r3, [sp, #52]	; 0x34
 80059bc:	f7fd f89a 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 80059c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80059c2:	f844 600a 	str.w	r6, [r4, sl]
 80059c6:	63dd      	str	r5, [r3, #60]	; 0x3c
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80059c8:	f64b 63a8 	movw	r3, #48808	; 0xbea8
 80059cc:	4a17      	ldr	r2, [pc, #92]	; (8005a2c <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 80059ce:	50e2      	str	r2, [r4, r3]
 80059d0:	18e6      	adds	r6, r4, r3
 80059d2:	f64b 63b0 	movw	r3, #48816	; 0xbeb0
 80059d6:	4a16      	ldr	r2, [pc, #88]	; (8005a30 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 80059d8:	6074      	str	r4, [r6, #4]
 80059da:	50e2      	str	r2, [r4, r3]
 80059dc:	f64b 63b4 	movw	r3, #48820	; 0xbeb4
    __background.setPosition(0, 0, 800, 480);
 80059e0:	9816      	ldr	r0, [sp, #88]	; 0x58
 80059e2:	50e5      	str	r5, [r4, r3]
 80059e4:	f64b 63b8 	movw	r3, #48824	; 0xbeb8
 80059e8:	18e2      	adds	r2, r4, r3
 80059ea:	9203      	str	r2, [sp, #12]
 80059ec:	4a11      	ldr	r2, [pc, #68]	; (8005a34 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 80059ee:	50e2      	str	r2, [r4, r3]
 80059f0:	9b03      	ldr	r3, [sp, #12]
 80059f2:	4a11      	ldr	r2, [pc, #68]	; (8005a38 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 80059f4:	605c      	str	r4, [r3, #4]
 80059f6:	f64b 63c0 	movw	r3, #48832	; 0xbec0
 80059fa:	4629      	mov	r1, r5
 80059fc:	50e2      	str	r2, [r4, r3]
 80059fe:	f64b 63c4 	movw	r3, #48836	; 0xbec4
 8005a02:	462a      	mov	r2, r5
 8005a04:	50e5      	str	r5, [r4, r3]
 8005a06:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8005a0a:	9300      	str	r3, [sp, #0]
 8005a0c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8005a10:	f7fd f850 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a14:	e012      	b.n	8005a3c <_ZN15Screen1ViewBaseC1Ev+0x3b0>
 8005a16:	bf00      	nop
 8005a18:	0802803c 	.word	0x0802803c
 8005a1c:	0802a200 	.word	0x0802a200
 8005a20:	08029638 	.word	0x08029638
 8005a24:	0802a03c 	.word	0x0802a03c
 8005a28:	0802a0e0 	.word	0x0802a0e0
 8005a2c:	0802800c 	.word	0x0802800c
 8005a30:	08005567 	.word	0x08005567
 8005a34:	08028024 	.word	0x08028024
 8005a38:	08005437 	.word	0x08005437
        this->color = color;
 8005a3c:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
    boxWithBorder1.setPosition(3, 0, 800, 480);
 8005a40:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8005a44:	462a      	mov	r2, r5
 8005a46:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8005a48:	f8c4 a068 	str.w	sl, [r4, #104]	; 0x68
 8005a4c:	9300      	str	r3, [sp, #0]
 8005a4e:	2103      	movs	r1, #3
 8005a50:	f44f 7348 	mov.w	r3, #800	; 0x320
 8005a54:	f7fd f82e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a58:	f04f 33ff 	mov.w	r3, #4294967295
        borderColor = color;
 8005a5c:	e9c4 3a25 	strd	r3, sl, [r4, #148]	; 0x94
        borderSize = size;
 8005a60:	2303      	movs	r3, #3
 8005a62:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
    listLayoutLogTable.setDirection(touchgfx::SOUTH);
 8005a66:	ee18 0a10 	vmov	r0, s16
 8005a6a:	2101      	movs	r1, #1
 8005a6c:	f00c fa1a 	bl	8011ea4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutLogTable.setXY(32, 200);
 8005a70:	22c8      	movs	r2, #200	; 0xc8
 8005a72:	ee18 0a10 	vmov	r0, s16
 8005a76:	2120      	movs	r1, #32
 8005a78:	f7fc fd48 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    listLayoutLogTable.add(customContainerTableLog_0);
 8005a7c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8005a7e:	f8df a1cc 	ldr.w	sl, [pc, #460]	; 8005c4c <_ZN15Screen1ViewBaseC1Ev+0x5c0>
 8005a82:	ee18 0a10 	vmov	r0, s16
 8005a86:	f00c fa77 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_1);
 8005a8a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005a8c:	ee18 0a10 	vmov	r0, s16
 8005a90:	f00c fa72 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_2);
 8005a94:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005a96:	ee18 0a10 	vmov	r0, s16
 8005a9a:	f00c fa6d 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_3);
 8005a9e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8005aa0:	ee18 0a10 	vmov	r0, s16
 8005aa4:	f00c fa68 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_4);
 8005aa8:	9904      	ldr	r1, [sp, #16]
 8005aaa:	ee18 0a10 	vmov	r0, s16
 8005aae:	f00c fa63 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_5);
 8005ab2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005ab4:	ee18 0a10 	vmov	r0, s16
 8005ab8:	f00c fa5e 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_6);
 8005abc:	9915      	ldr	r1, [sp, #84]	; 0x54
 8005abe:	ee18 0a10 	vmov	r0, s16
 8005ac2:	f00c fa59 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_7);
 8005ac6:	991d      	ldr	r1, [sp, #116]	; 0x74
 8005ac8:	ee18 0a10 	vmov	r0, s16
 8005acc:	f00c fa54 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_8);
 8005ad0:	4641      	mov	r1, r8
 8005ad2:	ee18 0a10 	vmov	r0, s16
 8005ad6:	f00c fa4f 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_9);
 8005ada:	4639      	mov	r1, r7
 8005adc:	ee18 0a10 	vmov	r0, s16
 8005ae0:	f00c fa4a 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    button1.setXY(18, 14);
 8005ae4:	9806      	ldr	r0, [sp, #24]
        colorReleased = newColorReleased;
 8005ae6:	4f51      	ldr	r7, [pc, #324]	; (8005c2c <_ZN15Screen1ViewBaseC1Ev+0x5a0>)
 8005ae8:	220e      	movs	r2, #14
 8005aea:	2112      	movs	r1, #18
 8005aec:	f7fc fd0e 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8005af0:	f04f 0801 	mov.w	r8, #1
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8005af4:	9806      	ldr	r0, [sp, #24]
 8005af6:	f8ad 8080 	strh.w	r8, [sp, #128]	; 0x80
 8005afa:	aa20      	add	r2, sp, #128	; 0x80
 8005afc:	a91f      	add	r1, sp, #124	; 0x7c
 8005afe:	f8ad 507c 	strh.w	r5, [sp, #124]	; 0x7c
 8005b02:	f00d fc9f 	bl	8013444 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8005b06:	f643 3318 	movw	r3, #15128	; 0x3b18
        borderBox.setPosition(x, y, width, height);
 8005b0a:	ee19 0a90 	vmov	r0, s19
 8005b0e:	50e6      	str	r6, [r4, r3]
 8005b10:	261e      	movs	r6, #30
 8005b12:	9600      	str	r6, [sp, #0]
 8005b14:	23c4      	movs	r3, #196	; 0xc4
 8005b16:	462a      	mov	r2, r5
 8005b18:	4629      	mov	r1, r5
 8005b1a:	3034      	adds	r0, #52	; 0x34
 8005b1c:	f7fc ffca 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b20:	f643 3388 	movw	r3, #15240	; 0x3b88
    flexButtonReadLog.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005b24:	4a42      	ldr	r2, [pc, #264]	; (8005c30 <_ZN15Screen1ViewBaseC1Ev+0x5a4>)
 8005b26:	f824 8003 	strh.w	r8, [r4, r3]
 8005b2a:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005b2e:	4941      	ldr	r1, [pc, #260]	; (8005c34 <_ZN15Screen1ViewBaseC1Ev+0x5a8>)
 8005b30:	f8cd a000 	str.w	sl, [sp]
 8005b34:	ee19 0a90 	vmov	r0, s19
 8005b38:	f6a3 0322 	subw	r3, r3, #2082	; 0x822
 8005b3c:	f7fc fff6 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005b40:	4b3d      	ldr	r3, [pc, #244]	; (8005c38 <_ZN15Screen1ViewBaseC1Ev+0x5ac>)
 8005b42:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonReadLog.setText(TypedText(T___SINGLEUSE_Z9OO));
 8005b44:	ee19 0a90 	vmov	r0, s19
 8005b48:	2333      	movs	r3, #51	; 0x33
 8005b4a:	a920      	add	r1, sp, #128	; 0x80
 8005b4c:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8005b50:	f7fc fff8 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8005b54:	ee19 0a90 	vmov	r0, s19
 8005b58:	2205      	movs	r2, #5
 8005b5a:	4629      	mov	r1, r5
 8005b5c:	9600      	str	r6, [sp, #0]
 8005b5e:	23c4      	movs	r3, #196	; 0xc4
 8005b60:	3078      	adds	r0, #120	; 0x78
 8005b62:	f7fc ffa7 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8005b66:	f643 33d8 	movw	r3, #15320	; 0x3bd8
        handlePressedUpdated();
 8005b6a:	ee19 0a90 	vmov	r0, s19
        colorReleased = newColorReleased;
 8005b6e:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8005b70:	f643 33dc 	movw	r3, #15324	; 0x3bdc
 8005b74:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8005b76:	f7fc fe48 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonReadLog.setPosition(585, 74, 196, 30);
 8005b7a:	ee19 0a90 	vmov	r0, s19
 8005b7e:	9600      	str	r6, [sp, #0]
 8005b80:	23c4      	movs	r3, #196	; 0xc4
 8005b82:	224a      	movs	r2, #74	; 0x4a
 8005b84:	f240 2149 	movw	r1, #585	; 0x249
 8005b88:	f7fc ff94 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b8c:	f643 3354 	movw	r3, #15188	; 0x3b54
 8005b90:	9a03      	ldr	r2, [sp, #12]
 8005b92:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.setDirection(touchgfx::EAST);
 8005b94:	ee18 0a90 	vmov	r0, s17
 8005b98:	2102      	movs	r1, #2
 8005b9a:	f00c f983 	bl	8011ea4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutPageButton.setXY(203, 413);
 8005b9e:	ee18 0a90 	vmov	r0, s17
 8005ba2:	f240 129d 	movw	r2, #413	; 0x19d
 8005ba6:	21cb      	movs	r1, #203	; 0xcb
 8005ba8:	f7fc fcb0 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8005bac:	ee1d 0a90 	vmov	r0, s27
 8005bb0:	2632      	movs	r6, #50	; 0x32
 8005bb2:	4633      	mov	r3, r6
 8005bb4:	462a      	mov	r2, r5
 8005bb6:	4629      	mov	r1, r5
 8005bb8:	3034      	adds	r0, #52	; 0x34
 8005bba:	9600      	str	r6, [sp, #0]
 8005bbc:	f7fc ff7a 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005bc0:	f643 4374 	movw	r3, #15476	; 0x3c74
    flexButtonPageBack.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005bc4:	4a1a      	ldr	r2, [pc, #104]	; (8005c30 <_ZN15Screen1ViewBaseC1Ev+0x5a4>)
 8005bc6:	f824 8003 	strh.w	r8, [r4, r3]
 8005bca:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005bce:	4919      	ldr	r1, [pc, #100]	; (8005c34 <_ZN15Screen1ViewBaseC1Ev+0x5a8>)
 8005bd0:	f8cd a000 	str.w	sl, [sp]
 8005bd4:	ee1d 0a90 	vmov	r0, s27
 8005bd8:	f6a3 130e 	subw	r3, r3, #2318	; 0x90e
 8005bdc:	f7fc ffa6 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005be0:	4b15      	ldr	r3, [pc, #84]	; (8005c38 <_ZN15Screen1ViewBaseC1Ev+0x5ac>)
 8005be2:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPageBack.setWildcardText(TypedText(T___SINGLEUSE_IRA4));
 8005be4:	ee1d 0a90 	vmov	r0, s27
 8005be8:	2334      	movs	r3, #52	; 0x34
 8005bea:	a920      	add	r1, sp, #128	; 0x80
 8005bec:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005bf0:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8005c50 <_ZN15Screen1ViewBaseC1Ev+0x5c4>
 8005bf4:	f7fc ffb5 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    Unicode::snprintf(flexButtonPageBackBuffer, FLEXBUTTONPAGEBACK_SIZE, "%s", TypedText(T___SINGLEUSE_EGRS).getText());
 8005bf8:	f504 433c 	add.w	r3, r4, #48128	; 0xbc00
 8005bfc:	338c      	adds	r3, #140	; 0x8c
 8005bfe:	9315      	str	r3, [sp, #84]	; 0x54
 8005c00:	f8d8 3000 	ldr.w	r3, [r8]
 8005c04:	f8cd a010 	str.w	sl, [sp, #16]
 8005c08:	b92b      	cbnz	r3, 8005c16 <_ZN15Screen1ViewBaseC1Ev+0x58a>
 8005c0a:	4b0c      	ldr	r3, [pc, #48]	; (8005c3c <_ZN15Screen1ViewBaseC1Ev+0x5b0>)
 8005c0c:	4a0c      	ldr	r2, [pc, #48]	; (8005c40 <_ZN15Screen1ViewBaseC1Ev+0x5b4>)
 8005c0e:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005c10:	480c      	ldr	r0, [pc, #48]	; (8005c44 <_ZN15Screen1ViewBaseC1Ev+0x5b8>)
 8005c12:	f01f fdd5 	bl	80257c0 <__assert_func>
 8005c16:	f8df a03c 	ldr.w	sl, [pc, #60]	; 8005c54 <_ZN15Screen1ViewBaseC1Ev+0x5c8>
 8005c1a:	f8ba 3000 	ldrh.w	r3, [sl]
 8005c1e:	2b35      	cmp	r3, #53	; 0x35
 8005c20:	d81a      	bhi.n	8005c58 <_ZN15Screen1ViewBaseC1Ev+0x5cc>
 8005c22:	4b09      	ldr	r3, [pc, #36]	; (8005c48 <_ZN15Screen1ViewBaseC1Ev+0x5bc>)
 8005c24:	4a06      	ldr	r2, [pc, #24]	; (8005c40 <_ZN15Screen1ViewBaseC1Ev+0x5b4>)
 8005c26:	21af      	movs	r1, #175	; 0xaf
 8005c28:	e7f2      	b.n	8005c10 <_ZN15Screen1ViewBaseC1Ev+0x584>
 8005c2a:	bf00      	nop
 8005c2c:	ff0a0a0a 	.word	0xff0a0a0a
 8005c30:	ff0099cc 	.word	0xff0099cc
 8005c34:	ff006699 	.word	0xff006699
 8005c38:	0802750c 	.word	0x0802750c
 8005c3c:	080273f8 	.word	0x080273f8
 8005c40:	0802743a 	.word	0x0802743a
 8005c44:	08027468 	.word	0x08027468
 8005c48:	080274af 	.word	0x080274af
 8005c4c:	ff336699 	.word	0xff336699
 8005c50:	20027a00 	.word	0x20027a00
 8005c54:	20027a04 	.word	0x20027a04
        return texts->getText(typedTextId);
 8005c58:	4bd4      	ldr	r3, [pc, #848]	; (8005fac <_ZN15Screen1ViewBaseC1Ev+0x920>)
 8005c5a:	2135      	movs	r1, #53	; 0x35
 8005c5c:	6818      	ldr	r0, [r3, #0]
 8005c5e:	f001 fe47 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8005c62:	4ad3      	ldr	r2, [pc, #844]	; (8005fb0 <_ZN15Screen1ViewBaseC1Ev+0x924>)
 8005c64:	4603      	mov	r3, r0
 8005c66:	210a      	movs	r1, #10
 8005c68:	9815      	ldr	r0, [sp, #84]	; 0x54
 8005c6a:	f013 fc3f 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 8005c6e:	f643 43c4 	movw	r3, #15556	; 0x3cc4
        wildcardText.setPosition(x, y, width, height);
 8005c72:	ee1d 0a90 	vmov	r0, s27
 8005c76:	9915      	ldr	r1, [sp, #84]	; 0x54
 8005c78:	50e1      	str	r1, [r4, r3]
 8005c7a:	2205      	movs	r2, #5
 8005c7c:	4633      	mov	r3, r6
 8005c7e:	4629      	mov	r1, r5
 8005c80:	3078      	adds	r0, #120	; 0x78
 8005c82:	9600      	str	r6, [sp, #0]
 8005c84:	f7fc ff16 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageBack.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005c88:	463a      	mov	r2, r7
 8005c8a:	ee1d 0a90 	vmov	r0, s27
 8005c8e:	4639      	mov	r1, r7
 8005c90:	f7ff fcc4 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
        rect.width = width;
 8005c94:	f643 4318 	movw	r3, #15384	; 0x3c18
 8005c98:	f04f 1132 	mov.w	r1, #3276850	; 0x320032
 8005c9c:	50e1      	str	r1, [r4, r3]
 8005c9e:	f504 5371 	add.w	r3, r4, #15424	; 0x3c40
 8005ca2:	9903      	ldr	r1, [sp, #12]
 8005ca4:	6019      	str	r1, [r3, #0]
    listLayoutPageButton.add(flexButtonPageBack);
 8005ca6:	ee18 0a90 	vmov	r0, s17
 8005caa:	ee1d 1a90 	vmov	r1, s27
 8005cae:	f00c f963 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005cb2:	4633      	mov	r3, r6
 8005cb4:	462a      	mov	r2, r5
 8005cb6:	4629      	mov	r1, r5
 8005cb8:	f109 0034 	add.w	r0, r9, #52	; 0x34
 8005cbc:	9600      	str	r6, [sp, #0]
 8005cbe:	f7fc fef9 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005cc2:	f643 5334 	movw	r3, #15668	; 0x3d34
 8005cc6:	f04f 0101 	mov.w	r1, #1
 8005cca:	52e1      	strh	r1, [r4, r3]
    flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005ccc:	9904      	ldr	r1, [sp, #16]
 8005cce:	4ab9      	ldr	r2, [pc, #740]	; (8005fb4 <_ZN15Screen1ViewBaseC1Ev+0x928>)
 8005cd0:	9100      	str	r1, [sp, #0]
 8005cd2:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005cd6:	49b8      	ldr	r1, [pc, #736]	; (8005fb8 <_ZN15Screen1ViewBaseC1Ev+0x92c>)
 8005cd8:	f6a3 13ce 	subw	r3, r3, #2510	; 0x9ce
 8005cdc:	4648      	mov	r0, r9
 8005cde:	f7fc ff25 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005ce2:	4bb6      	ldr	r3, [pc, #728]	; (8005fbc <_ZN15Screen1ViewBaseC1Ev+0x930>)
 8005ce4:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPage_1.setWildcardText(TypedText(T___SINGLEUSE_WP7W));
 8005ce6:	a820      	add	r0, sp, #128	; 0x80
 8005ce8:	2336      	movs	r3, #54	; 0x36
 8005cea:	4601      	mov	r1, r0
 8005cec:	4648      	mov	r0, r9
 8005cee:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8005cf2:	f7fc ff36 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    Unicode::snprintf(flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, "%s", TypedText(T___SINGLEUSE_IWNN).getText());
 8005cf6:	f504 403c 	add.w	r0, r4, #48128	; 0xbc00
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cfa:	f8d8 3000 	ldr.w	r3, [r8]
 8005cfe:	30a0      	adds	r0, #160	; 0xa0
 8005d00:	9015      	str	r0, [sp, #84]	; 0x54
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	d081      	beq.n	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005d06:	f8ba 3000 	ldrh.w	r3, [sl]
 8005d0a:	2b37      	cmp	r3, #55	; 0x37
 8005d0c:	d989      	bls.n	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8005d0e:	4aa7      	ldr	r2, [pc, #668]	; (8005fac <_ZN15Screen1ViewBaseC1Ev+0x920>)
 8005d10:	2137      	movs	r1, #55	; 0x37
 8005d12:	6810      	ldr	r0, [r2, #0]
 8005d14:	f001 fdec 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8005d18:	4aa5      	ldr	r2, [pc, #660]	; (8005fb0 <_ZN15Screen1ViewBaseC1Ev+0x924>)
 8005d1a:	4603      	mov	r3, r0
 8005d1c:	210a      	movs	r1, #10
 8005d1e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8005d20:	f013 fbe4 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005d24:	f643 5384 	movw	r3, #15748	; 0x3d84
 8005d28:	9915      	ldr	r1, [sp, #84]	; 0x54
 8005d2a:	50e1      	str	r1, [r4, r3]
 8005d2c:	f109 0078 	add.w	r0, r9, #120	; 0x78
 8005d30:	4633      	mov	r3, r6
 8005d32:	2205      	movs	r2, #5
 8005d34:	4629      	mov	r1, r5
 8005d36:	9600      	str	r6, [sp, #0]
 8005d38:	f7fc febc 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005d3c:	463a      	mov	r2, r7
 8005d3e:	4648      	mov	r0, r9
 8005d40:	4639      	mov	r1, r7
 8005d42:	f7ff fc6b 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005d46:	f643 43d8 	movw	r3, #15576	; 0x3cd8
 8005d4a:	f04f 1032 	mov.w	r0, #3276850	; 0x320032
 8005d4e:	50e0      	str	r0, [r4, r3]
 8005d50:	f504 5374 	add.w	r3, r4, #15616	; 0x3d00
 8005d54:	9903      	ldr	r1, [sp, #12]
 8005d56:	6019      	str	r1, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_1);
 8005d58:	ee18 0a90 	vmov	r0, s17
 8005d5c:	4649      	mov	r1, r9
 8005d5e:	f00c f90b 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005d62:	4633      	mov	r3, r6
 8005d64:	462a      	mov	r2, r5
 8005d66:	4629      	mov	r1, r5
 8005d68:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 8005d6c:	9600      	str	r6, [sp, #0]
 8005d6e:	f7fc fea1 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d72:	f643 53f4 	movw	r3, #15860	; 0x3df4
 8005d76:	f04f 0101 	mov.w	r1, #1
 8005d7a:	52e1      	strh	r1, [r4, r3]
    flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005d7c:	9904      	ldr	r1, [sp, #16]
 8005d7e:	4a8d      	ldr	r2, [pc, #564]	; (8005fb4 <_ZN15Screen1ViewBaseC1Ev+0x928>)
 8005d80:	9100      	str	r1, [sp, #0]
 8005d82:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005d86:	498c      	ldr	r1, [pc, #560]	; (8005fb8 <_ZN15Screen1ViewBaseC1Ev+0x92c>)
 8005d88:	f6a3 238e 	subw	r3, r3, #2702	; 0xa8e
 8005d8c:	4658      	mov	r0, fp
 8005d8e:	f7fc fecd 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005d92:	4b8a      	ldr	r3, [pc, #552]	; (8005fbc <_ZN15Screen1ViewBaseC1Ev+0x930>)
 8005d94:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPage_2.setWildcardText(TypedText(T___SINGLEUSE_AKZM));
 8005d96:	a820      	add	r0, sp, #128	; 0x80
 8005d98:	2338      	movs	r3, #56	; 0x38
 8005d9a:	4601      	mov	r1, r0
 8005d9c:	4658      	mov	r0, fp
 8005d9e:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8005da2:	f7fc fede 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005da6:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, "%s", TypedText(T___SINGLEUSE_G02N).getText());
 8005daa:	f504 493c 	add.w	r9, r4, #48128	; 0xbc00
 8005dae:	f109 09b4 	add.w	r9, r9, #180	; 0xb4
 8005db2:	2b00      	cmp	r3, #0
 8005db4:	f43f af29 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005db8:	f8ba 3000 	ldrh.w	r3, [sl]
 8005dbc:	2b39      	cmp	r3, #57	; 0x39
 8005dbe:	f67f af30 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8005dc2:	4a7a      	ldr	r2, [pc, #488]	; (8005fac <_ZN15Screen1ViewBaseC1Ev+0x920>)
 8005dc4:	2139      	movs	r1, #57	; 0x39
 8005dc6:	6810      	ldr	r0, [r2, #0]
 8005dc8:	f001 fd92 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8005dcc:	4a78      	ldr	r2, [pc, #480]	; (8005fb0 <_ZN15Screen1ViewBaseC1Ev+0x924>)
 8005dce:	4603      	mov	r3, r0
 8005dd0:	210a      	movs	r1, #10
 8005dd2:	4648      	mov	r0, r9
 8005dd4:	f013 fb8a 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005dd8:	f643 6344 	movw	r3, #15940	; 0x3e44
 8005ddc:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8005de0:	f844 9003 	str.w	r9, [r4, r3]
 8005de4:	2205      	movs	r2, #5
 8005de6:	4633      	mov	r3, r6
 8005de8:	4629      	mov	r1, r5
 8005dea:	9600      	str	r6, [sp, #0]
 8005dec:	f7fc fe62 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005df0:	463a      	mov	r2, r7
 8005df2:	4658      	mov	r0, fp
 8005df4:	4639      	mov	r1, r7
 8005df6:	f7ff fc11 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005dfa:	f643 5398 	movw	r3, #15768	; 0x3d98
 8005dfe:	f04f 1032 	mov.w	r0, #3276850	; 0x320032
 8005e02:	50e0      	str	r0, [r4, r3]
 8005e04:	f504 5377 	add.w	r3, r4, #15808	; 0x3dc0
 8005e08:	9903      	ldr	r1, [sp, #12]
 8005e0a:	6019      	str	r1, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_2);
 8005e0c:	ee18 0a90 	vmov	r0, s17
 8005e10:	4659      	mov	r1, fp
 8005e12:	f00c f8b1 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005e16:	ee1e 0a10 	vmov	r0, s28
 8005e1a:	4633      	mov	r3, r6
 8005e1c:	462a      	mov	r2, r5
 8005e1e:	4629      	mov	r1, r5
 8005e20:	3034      	adds	r0, #52	; 0x34
 8005e22:	9600      	str	r6, [sp, #0]
 8005e24:	f7fc fe46 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e28:	f643 63b4 	movw	r3, #16052	; 0x3eb4
 8005e2c:	f04f 0901 	mov.w	r9, #1
    flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005e30:	9904      	ldr	r1, [sp, #16]
 8005e32:	f824 9003 	strh.w	r9, [r4, r3]
 8005e36:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005e3a:	4a5e      	ldr	r2, [pc, #376]	; (8005fb4 <_ZN15Screen1ViewBaseC1Ev+0x928>)
 8005e3c:	9100      	str	r1, [sp, #0]
 8005e3e:	ee1e 0a10 	vmov	r0, s28
 8005e42:	495d      	ldr	r1, [pc, #372]	; (8005fb8 <_ZN15Screen1ViewBaseC1Ev+0x92c>)
 8005e44:	f6a3 334e 	subw	r3, r3, #2894	; 0xb4e
 8005e48:	f7fc fe70 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005e4c:	4b5b      	ldr	r3, [pc, #364]	; (8005fbc <_ZN15Screen1ViewBaseC1Ev+0x930>)
 8005e4e:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPage_3.setWildcardText(TypedText(T___SINGLEUSE_5HYA));
 8005e50:	ee1e 0a10 	vmov	r0, s28
 8005e54:	233a      	movs	r3, #58	; 0x3a
 8005e56:	a920      	add	r1, sp, #128	; 0x80
 8005e58:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8005e5c:	f7fc fe81 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e60:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, "%s", TypedText(T___SINGLEUSE_LYTH).getText());
 8005e64:	f504 4b3c 	add.w	fp, r4, #48128	; 0xbc00
 8005e68:	f10b 0bc8 	add.w	fp, fp, #200	; 0xc8
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	f43f aecc 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005e72:	f8ba 3000 	ldrh.w	r3, [sl]
 8005e76:	2b3b      	cmp	r3, #59	; 0x3b
 8005e78:	f67f aed3 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8005e7c:	4a4b      	ldr	r2, [pc, #300]	; (8005fac <_ZN15Screen1ViewBaseC1Ev+0x920>)
 8005e7e:	213b      	movs	r1, #59	; 0x3b
 8005e80:	6810      	ldr	r0, [r2, #0]
 8005e82:	f001 fd35 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8005e86:	4a4a      	ldr	r2, [pc, #296]	; (8005fb0 <_ZN15Screen1ViewBaseC1Ev+0x924>)
 8005e88:	4603      	mov	r3, r0
 8005e8a:	210a      	movs	r1, #10
 8005e8c:	4658      	mov	r0, fp
 8005e8e:	f013 fb2d 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005e92:	f643 7304 	movw	r3, #16132	; 0x3f04
 8005e96:	ee1e 0a10 	vmov	r0, s28
 8005e9a:	4629      	mov	r1, r5
 8005e9c:	f844 b003 	str.w	fp, [r4, r3]
 8005ea0:	2205      	movs	r2, #5
 8005ea2:	4633      	mov	r3, r6
 8005ea4:	3078      	adds	r0, #120	; 0x78
 8005ea6:	9600      	str	r6, [sp, #0]
 8005ea8:	f7fc fe04 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_3.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005eac:	463a      	mov	r2, r7
 8005eae:	ee1e 0a10 	vmov	r0, s28
 8005eb2:	4639      	mov	r1, r7
 8005eb4:	f7ff fbb2 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005eb8:	f643 6358 	movw	r3, #15960	; 0x3e58
 8005ebc:	f04f 1132 	mov.w	r1, #3276850	; 0x320032
 8005ec0:	50e1      	str	r1, [r4, r3]
 8005ec2:	f504 537a 	add.w	r3, r4, #16000	; 0x3e80
 8005ec6:	9903      	ldr	r1, [sp, #12]
 8005ec8:	6019      	str	r1, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_3);
 8005eca:	ee18 0a90 	vmov	r0, s17
 8005ece:	ee1e 1a10 	vmov	r1, s28
 8005ed2:	f00c f851 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005ed6:	ee1e 0a90 	vmov	r0, s29
 8005eda:	462a      	mov	r2, r5
 8005edc:	4629      	mov	r1, r5
 8005ede:	4633      	mov	r3, r6
 8005ee0:	3034      	adds	r0, #52	; 0x34
 8005ee2:	9600      	str	r6, [sp, #0]
 8005ee4:	f7fc fde6 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ee8:	f643 7374 	movw	r3, #16244	; 0x3f74
    flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005eec:	9904      	ldr	r1, [sp, #16]
 8005eee:	f824 9003 	strh.w	r9, [r4, r3]
 8005ef2:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005ef6:	4a2f      	ldr	r2, [pc, #188]	; (8005fb4 <_ZN15Screen1ViewBaseC1Ev+0x928>)
 8005ef8:	9100      	str	r1, [sp, #0]
 8005efa:	ee1e 0a90 	vmov	r0, s29
 8005efe:	492e      	ldr	r1, [pc, #184]	; (8005fb8 <_ZN15Screen1ViewBaseC1Ev+0x92c>)
 8005f00:	f6a3 430e 	subw	r3, r3, #3086	; 0xc0e
 8005f04:	f7fc fe12 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005f08:	4b2c      	ldr	r3, [pc, #176]	; (8005fbc <_ZN15Screen1ViewBaseC1Ev+0x930>)
 8005f0a:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPage_4.setWildcardText(TypedText(T___SINGLEUSE_IX3T));
 8005f0c:	ee1e 0a90 	vmov	r0, s29
 8005f10:	233c      	movs	r3, #60	; 0x3c
 8005f12:	a920      	add	r1, sp, #128	; 0x80
 8005f14:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8005f18:	f7fc fe23 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f1c:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, "%s", TypedText(T___SINGLEUSE_MKU4).getText());
 8005f20:	f504 453c 	add.w	r5, r4, #48128	; 0xbc00
 8005f24:	35dc      	adds	r5, #220	; 0xdc
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	f43f ae6f 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005f2c:	f8ba 3000 	ldrh.w	r3, [sl]
 8005f30:	2b3d      	cmp	r3, #61	; 0x3d
 8005f32:	f67f ae76 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8005f36:	f8df 9074 	ldr.w	r9, [pc, #116]	; 8005fac <_ZN15Screen1ViewBaseC1Ev+0x920>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f3a:	f8df 8088 	ldr.w	r8, [pc, #136]	; 8005fc4 <_ZN15Screen1ViewBaseC1Ev+0x938>
        return texts->getText(typedTextId);
 8005f3e:	f8d9 0000 	ldr.w	r0, [r9]
 8005f42:	213d      	movs	r1, #61	; 0x3d
 8005f44:	f001 fcd4 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8005f48:	4a19      	ldr	r2, [pc, #100]	; (8005fb0 <_ZN15Screen1ViewBaseC1Ev+0x924>)
 8005f4a:	4603      	mov	r3, r0
 8005f4c:	210a      	movs	r1, #10
 8005f4e:	4628      	mov	r0, r5
 8005f50:	f013 facc 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005f54:	f643 73c4 	movw	r3, #16324	; 0x3fc4
 8005f58:	ee1e 0a90 	vmov	r0, s29
 8005f5c:	2632      	movs	r6, #50	; 0x32
 8005f5e:	50e5      	str	r5, [r4, r3]
 8005f60:	2205      	movs	r2, #5
 8005f62:	4633      	mov	r3, r6
 8005f64:	2100      	movs	r1, #0
 8005f66:	3078      	adds	r0, #120	; 0x78
 8005f68:	9600      	str	r6, [sp, #0]
 8005f6a:	f7fc fda3 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_4.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005f6e:	4a14      	ldr	r2, [pc, #80]	; (8005fc0 <_ZN15Screen1ViewBaseC1Ev+0x934>)
 8005f70:	ee1e 0a90 	vmov	r0, s29
 8005f74:	4611      	mov	r1, r2
 8005f76:	f7ff fb51 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005f7a:	f643 7318 	movw	r3, #16152	; 0x3f18
 8005f7e:	f04f 1732 	mov.w	r7, #3276850	; 0x320032
 8005f82:	50e7      	str	r7, [r4, r3]
 8005f84:	f504 537d 	add.w	r3, r4, #16192	; 0x3f40
 8005f88:	9903      	ldr	r1, [sp, #12]
 8005f8a:	6019      	str	r1, [r3, #0]
    listLayoutPageButton.add(flexButtonPage_4);
 8005f8c:	ee18 0a90 	vmov	r0, s17
 8005f90:	ee1e 1a90 	vmov	r1, s29
 8005f94:	f00b fff0 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005f98:	ee1f 0a10 	vmov	r0, s30
 8005f9c:	2200      	movs	r2, #0
 8005f9e:	4611      	mov	r1, r2
 8005fa0:	4633      	mov	r3, r6
 8005fa2:	3034      	adds	r0, #52	; 0x34
 8005fa4:	9600      	str	r6, [sp, #0]
 8005fa6:	f7fc fd85 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005faa:	e00d      	b.n	8005fc8 <_ZN15Screen1ViewBaseC1Ev+0x93c>
 8005fac:	20027a0c 	.word	0x20027a0c
 8005fb0:	08027501 	.word	0x08027501
 8005fb4:	ff0099cc 	.word	0xff0099cc
 8005fb8:	ff006699 	.word	0xff006699
 8005fbc:	0802750c 	.word	0x0802750c
 8005fc0:	ff0a0a0a 	.word	0xff0a0a0a
 8005fc4:	20027a00 	.word	0x20027a00
 8005fc8:	f244 0334 	movw	r3, #16436	; 0x4034
 8005fcc:	f04f 0a01 	mov.w	sl, #1
    flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005fd0:	9904      	ldr	r1, [sp, #16]
 8005fd2:	f824 a003 	strh.w	sl, [r4, r3]
 8005fd6:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005fda:	4ad8      	ldr	r2, [pc, #864]	; (800633c <_ZN15Screen1ViewBaseC1Ev+0xcb0>)
 8005fdc:	9100      	str	r1, [sp, #0]
 8005fde:	ee1f 0a10 	vmov	r0, s30
 8005fe2:	49d7      	ldr	r1, [pc, #860]	; (8006340 <_ZN15Screen1ViewBaseC1Ev+0xcb4>)
 8005fe4:	f6a3 43ce 	subw	r3, r3, #3278	; 0xcce
 8005fe8:	f7fc fda0 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005fec:	4bd5      	ldr	r3, [pc, #852]	; (8006344 <_ZN15Screen1ViewBaseC1Ev+0xcb8>)
 8005fee:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPage_5.setWildcardText(TypedText(T___SINGLEUSE_I0UZ));
 8005ff0:	ee1f 0a10 	vmov	r0, s30
 8005ff4:	233e      	movs	r3, #62	; 0x3e
 8005ff6:	a920      	add	r1, sp, #128	; 0x80
 8005ff8:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8005ffc:	f7fc fdb1 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006000:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, "%s", TypedText(T___SINGLEUSE_ONOL).getText());
 8006004:	f504 453c 	add.w	r5, r4, #48128	; 0xbc00
 8006008:	35f0      	adds	r5, #240	; 0xf0
 800600a:	2b00      	cmp	r3, #0
 800600c:	f43f adfd 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006010:	f8df b340 	ldr.w	fp, [pc, #832]	; 8006354 <_ZN15Screen1ViewBaseC1Ev+0xcc8>
 8006014:	f8bb 3000 	ldrh.w	r3, [fp]
 8006018:	2b3f      	cmp	r3, #63	; 0x3f
 800601a:	f67f ae02 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 800601e:	213f      	movs	r1, #63	; 0x3f
 8006020:	f8d9 0000 	ldr.w	r0, [r9]
 8006024:	f001 fc64 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006028:	4ac7      	ldr	r2, [pc, #796]	; (8006348 <_ZN15Screen1ViewBaseC1Ev+0xcbc>)
 800602a:	4603      	mov	r3, r0
 800602c:	210a      	movs	r1, #10
 800602e:	4628      	mov	r0, r5
 8006030:	f013 fa5c 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006034:	f244 0384 	movw	r3, #16516	; 0x4084
 8006038:	ee1f 0a10 	vmov	r0, s30
 800603c:	50e5      	str	r5, [r4, r3]
 800603e:	2205      	movs	r2, #5
 8006040:	4633      	mov	r3, r6
 8006042:	2100      	movs	r1, #0
 8006044:	3078      	adds	r0, #120	; 0x78
 8006046:	9600      	str	r6, [sp, #0]
 8006048:	f7fc fd34 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_5.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800604c:	4abf      	ldr	r2, [pc, #764]	; (800634c <_ZN15Screen1ViewBaseC1Ev+0xcc0>)
 800604e:	ee1f 0a10 	vmov	r0, s30
 8006052:	4611      	mov	r1, r2
 8006054:	f7ff fae2 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006058:	f643 73d8 	movw	r3, #16344	; 0x3fd8
 800605c:	9903      	ldr	r1, [sp, #12]
 800605e:	50e7      	str	r7, [r4, r3]
 8006060:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
    listLayoutPageButton.add(flexButtonPage_5);
 8006064:	ee18 0a90 	vmov	r0, s17
 8006068:	6019      	str	r1, [r3, #0]
 800606a:	ee1f 1a10 	vmov	r1, s30
 800606e:	f00b ff83 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006072:	ee1f 0a90 	vmov	r0, s31
 8006076:	2200      	movs	r2, #0
 8006078:	4611      	mov	r1, r2
 800607a:	4633      	mov	r3, r6
 800607c:	3034      	adds	r0, #52	; 0x34
 800607e:	9600      	str	r6, [sp, #0]
 8006080:	f7fc fd18 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006084:	f244 03f4 	movw	r3, #16628	; 0x40f4
    flexButtonPageForward.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006088:	9904      	ldr	r1, [sp, #16]
 800608a:	f824 a003 	strh.w	sl, [r4, r3]
 800608e:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8006092:	4aaa      	ldr	r2, [pc, #680]	; (800633c <_ZN15Screen1ViewBaseC1Ev+0xcb0>)
 8006094:	9100      	str	r1, [sp, #0]
 8006096:	ee1f 0a90 	vmov	r0, s31
 800609a:	49a9      	ldr	r1, [pc, #676]	; (8006340 <_ZN15Screen1ViewBaseC1Ev+0xcb4>)
 800609c:	f6a3 538e 	subw	r3, r3, #3470	; 0xd8e
 80060a0:	f7fc fd44 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80060a4:	4ba7      	ldr	r3, [pc, #668]	; (8006344 <_ZN15Screen1ViewBaseC1Ev+0xcb8>)
 80060a6:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonPageForward.setWildcardText(TypedText(T___SINGLEUSE_A1TC));
 80060a8:	ee1f 0a90 	vmov	r0, s31
 80060ac:	2340      	movs	r3, #64	; 0x40
 80060ae:	a920      	add	r1, sp, #128	; 0x80
 80060b0:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80060b4:	f7fc fd55 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80060b8:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPageForwardBuffer, FLEXBUTTONPAGEFORWARD_SIZE, "%s", TypedText(T___SINGLEUSE_UI2S).getText());
 80060bc:	f504 453d 	add.w	r5, r4, #48384	; 0xbd00
 80060c0:	3504      	adds	r5, #4
 80060c2:	2b00      	cmp	r3, #0
 80060c4:	f43f ada1 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80060c8:	f8bb 3000 	ldrh.w	r3, [fp]
 80060cc:	2b41      	cmp	r3, #65	; 0x41
 80060ce:	f67f ada8 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 80060d2:	2141      	movs	r1, #65	; 0x41
 80060d4:	f8d9 0000 	ldr.w	r0, [r9]
 80060d8:	f001 fc0a 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80060dc:	4a9a      	ldr	r2, [pc, #616]	; (8006348 <_ZN15Screen1ViewBaseC1Ev+0xcbc>)
 80060de:	4603      	mov	r3, r0
 80060e0:	210a      	movs	r1, #10
 80060e2:	4628      	mov	r0, r5
 80060e4:	f013 fa02 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80060e8:	f244 1344 	movw	r3, #16708	; 0x4144
 80060ec:	ee1f 0a90 	vmov	r0, s31
 80060f0:	50e5      	str	r5, [r4, r3]
 80060f2:	2205      	movs	r2, #5
 80060f4:	4633      	mov	r3, r6
 80060f6:	2100      	movs	r1, #0
 80060f8:	3078      	adds	r0, #120	; 0x78
 80060fa:	9600      	str	r6, [sp, #0]
 80060fc:	f7fc fcda 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageForward.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006100:	4a92      	ldr	r2, [pc, #584]	; (800634c <_ZN15Screen1ViewBaseC1Ev+0xcc0>)
 8006102:	ee1f 0a90 	vmov	r0, s31
 8006106:	4611      	mov	r1, r2
 8006108:	f7ff fa88 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 800610c:	f244 0398 	movw	r3, #16536	; 0x4098
 8006110:	9903      	ldr	r1, [sp, #12]
 8006112:	50e7      	str	r7, [r4, r3]
 8006114:	f244 03c0 	movw	r3, #16576	; 0x40c0
    listLayoutPageButton.add(flexButtonPageForward);
 8006118:	ee18 0a90 	vmov	r0, s17
 800611c:	50e1      	str	r1, [r4, r3]
 800611e:	ee1f 1a90 	vmov	r1, s31
 8006122:	f00b ff29 	bl	8011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    ListFilterLog_Gas.setXY(1199, 4);
 8006126:	980e      	ldr	r0, [sp, #56]	; 0x38
 8006128:	2204      	movs	r2, #4
 800612a:	f240 41af 	movw	r1, #1199	; 0x4af
 800612e:	f7fc f9ed 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_Err.setXY(1001, 384);
 8006132:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006134:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8006138:	f240 31e9 	movw	r1, #1001	; 0x3e9
 800613c:	f7fc f9e6 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        visible = vis;
 8006140:	f245 1395 	movw	r3, #20885	; 0x5195
 8006144:	2500      	movs	r5, #0
 8006146:	54e5      	strb	r5, [r4, r3]
    ListFilterLog_StCur.setXY(1001, 195);
 8006148:	9810      	ldr	r0, [sp, #64]	; 0x40
 800614a:	22c3      	movs	r2, #195	; 0xc3
 800614c:	f240 31e9 	movw	r1, #1001	; 0x3e9
 8006150:	f7fc f9dc 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8006154:	f246 13b5 	movw	r3, #25013	; 0x61b5
    ListFilterLog_Unit.setXY(1001, 4);
 8006158:	9811      	ldr	r0, [sp, #68]	; 0x44
 800615a:	54e5      	strb	r5, [r4, r3]
 800615c:	2204      	movs	r2, #4
 800615e:	f240 31e9 	movw	r1, #1001	; 0x3e9
 8006162:	f7fc f9d3 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8006166:	f247 13d5 	movw	r3, #29141	; 0x71d5
    ListFilterLog_StLoop.setXY(806, 384);
 800616a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800616c:	54e5      	strb	r5, [r4, r3]
 800616e:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8006172:	f240 3126 	movw	r1, #806	; 0x326
 8006176:	f7fc f9c9 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800617a:	f248 13f5 	movw	r3, #33269	; 0x81f5
    ListFilterLog_TypeChan.setXY(806, 195);
 800617e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006180:	54e5      	strb	r5, [r4, r3]
 8006182:	22c3      	movs	r2, #195	; 0xc3
 8006184:	f240 3126 	movw	r1, #806	; 0x326
 8006188:	f7fc f9c0 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800618c:	f249 2315 	movw	r3, #37397	; 0x9215
    ListFilterLog_Num.setXY(806, 4);
 8006190:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006192:	54e5      	strb	r5, [r4, r3]
 8006194:	2204      	movs	r2, #4
 8006196:	f240 3126 	movw	r1, #806	; 0x326
 800619a:	f7fc f9b7 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 800619e:	f24a 2335 	movw	r3, #41525	; 0xa235
 80061a2:	ee1a 0a10 	vmov	r0, s20
 80061a6:	273b      	movs	r7, #59	; 0x3b
 80061a8:	54e5      	strb	r5, [r4, r3]
 80061aa:	462a      	mov	r2, r5
 80061ac:	2364      	movs	r3, #100	; 0x64
 80061ae:	4629      	mov	r1, r5
 80061b0:	3034      	adds	r0, #52	; 0x34
 80061b2:	9700      	str	r7, [sp, #0]
 80061b4:	f7fc fc7e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061b8:	f24b 2394 	movw	r3, #45716	; 0xb294
    flexButtonFilterGas.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80061bc:	9904      	ldr	r1, [sp, #16]
 80061be:	4a5f      	ldr	r2, [pc, #380]	; (800633c <_ZN15Screen1ViewBaseC1Ev+0xcb0>)
 80061c0:	9100      	str	r1, [sp, #0]
 80061c2:	f04f 0002 	mov.w	r0, #2
 80061c6:	52e0      	strh	r0, [r4, r3]
 80061c8:	495d      	ldr	r1, [pc, #372]	; (8006340 <_ZN15Screen1ViewBaseC1Ev+0xcb4>)
 80061ca:	4b61      	ldr	r3, [pc, #388]	; (8006350 <_ZN15Screen1ViewBaseC1Ev+0xcc4>)
 80061cc:	ee1a 0a10 	vmov	r0, s20
 80061d0:	f7fc fcac 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80061d4:	4b5b      	ldr	r3, [pc, #364]	; (8006344 <_ZN15Screen1ViewBaseC1Ev+0xcb8>)
 80061d6:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterGas.setTwoWildcardText(TypedText(T___SINGLEUSE_84Z8));
 80061d8:	ee1a 0a10 	vmov	r0, s20
 80061dc:	2361      	movs	r3, #97	; 0x61
 80061de:	a920      	add	r1, sp, #128	; 0x80
 80061e0:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80061e4:	f7ff fa20 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80061e8:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterGasBuffer1, FLEXBUTTONFILTERGASBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_NNWG).getText());
 80061ec:	f504 4a3d 	add.w	sl, r4, #48384	; 0xbd00
 80061f0:	f10a 0a18 	add.w	sl, sl, #24
 80061f4:	2b00      	cmp	r3, #0
 80061f6:	f43f ad08 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80061fa:	f8bb 3000 	ldrh.w	r3, [fp]
 80061fe:	2b62      	cmp	r3, #98	; 0x62
 8006200:	f67f ad0f 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8006204:	2162      	movs	r1, #98	; 0x62
 8006206:	f8d9 0000 	ldr.w	r0, [r9]
 800620a:	f001 fb71 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 800620e:	4a4e      	ldr	r2, [pc, #312]	; (8006348 <_ZN15Screen1ViewBaseC1Ev+0xcbc>)
 8006210:	4603      	mov	r3, r0
 8006212:	210f      	movs	r1, #15
 8006214:	4650      	mov	r0, sl
 8006216:	f013 f969 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
    {
        wc1 = value;
 800621a:	f24b 23e4 	movw	r3, #45796	; 0xb2e4
        twoWildcardText.setPosition(x, y, width, height);
 800621e:	ee1a 0a10 	vmov	r0, s20
 8006222:	f844 a003 	str.w	sl, [r4, r3]
    flexButtonFilterGasBuffer2[0] = 0;
 8006226:	f64b 5336 	movw	r3, #48438	; 0xbd36
 800622a:	18e2      	adds	r2, r4, r3
 800622c:	52e5      	strh	r5, [r4, r3]
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard2(const Unicode::UnicodeChar* value)
    {
        wc2 = value;
 800622e:	f24b 23e8 	movw	r3, #45800	; 0xb2e8
 8006232:	4629      	mov	r1, r5
 8006234:	50e2      	str	r2, [r4, r3]
 8006236:	3078      	adds	r0, #120	; 0x78
 8006238:	2364      	movs	r3, #100	; 0x64
 800623a:	462a      	mov	r2, r5
 800623c:	9700      	str	r7, [sp, #0]
 800623e:	f7fc fc39 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterGas.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006242:	4a42      	ldr	r2, [pc, #264]	; (800634c <_ZN15Screen1ViewBaseC1Ev+0xcc0>)
 8006244:	ee1a 0a10 	vmov	r0, s20
 8006248:	4611      	mov	r1, r2
 800624a:	f7ff f9fc 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterGas.setPosition(682, 141, 100, 59);
 800624e:	ee1a 0a10 	vmov	r0, s20
 8006252:	2364      	movs	r3, #100	; 0x64
 8006254:	228d      	movs	r2, #141	; 0x8d
 8006256:	f240 21aa 	movw	r1, #682	; 0x2aa
 800625a:	9700      	str	r7, [sp, #0]
 800625c:	f7fc fc2a 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006260:	f24b 2360 	movw	r3, #45664	; 0xb260
 8006264:	ee1a 0a90 	vmov	r0, s21
 8006268:	9903      	ldr	r1, [sp, #12]
 800626a:	50e1      	str	r1, [r4, r3]
 800626c:	462a      	mov	r2, r5
 800626e:	4633      	mov	r3, r6
 8006270:	4629      	mov	r1, r5
 8006272:	3034      	adds	r0, #52	; 0x34
 8006274:	9700      	str	r7, [sp, #0]
 8006276:	f7fc fc1d 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800627a:	f24b 3358 	movw	r3, #45912	; 0xb358
    flexButtonFilterErr.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800627e:	9904      	ldr	r1, [sp, #16]
 8006280:	4a2e      	ldr	r2, [pc, #184]	; (800633c <_ZN15Screen1ViewBaseC1Ev+0xcb0>)
 8006282:	9100      	str	r1, [sp, #0]
 8006284:	f04f 0002 	mov.w	r0, #2
 8006288:	52e0      	strh	r0, [r4, r3]
 800628a:	492d      	ldr	r1, [pc, #180]	; (8006340 <_ZN15Screen1ViewBaseC1Ev+0xcb4>)
 800628c:	4b30      	ldr	r3, [pc, #192]	; (8006350 <_ZN15Screen1ViewBaseC1Ev+0xcc4>)
 800628e:	ee1a 0a90 	vmov	r0, s21
 8006292:	f7fc fc4b 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006296:	4b2b      	ldr	r3, [pc, #172]	; (8006344 <_ZN15Screen1ViewBaseC1Ev+0xcb8>)
 8006298:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterErr.setTwoWildcardText(TypedText(T___SINGLEUSE_4O78));
 800629a:	ee1a 0a90 	vmov	r0, s21
 800629e:	235f      	movs	r3, #95	; 0x5f
 80062a0:	a920      	add	r1, sp, #128	; 0x80
 80062a2:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80062a6:	f7ff f9bf 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80062aa:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterErrBuffer1, FLEXBUTTONFILTERERRBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_XN5A).getText());
 80062ae:	f504 4a3d 	add.w	sl, r4, #48384	; 0xbd00
 80062b2:	f10a 0a4a 	add.w	sl, sl, #74	; 0x4a
 80062b6:	2b00      	cmp	r3, #0
 80062b8:	f43f aca7 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80062bc:	f8bb 3000 	ldrh.w	r3, [fp]
 80062c0:	2b60      	cmp	r3, #96	; 0x60
 80062c2:	f67f acae 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 80062c6:	2160      	movs	r1, #96	; 0x60
 80062c8:	f8d9 0000 	ldr.w	r0, [r9]
 80062cc:	f001 fb10 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80062d0:	4a1d      	ldr	r2, [pc, #116]	; (8006348 <_ZN15Screen1ViewBaseC1Ev+0xcbc>)
 80062d2:	4603      	mov	r3, r0
 80062d4:	210f      	movs	r1, #15
 80062d6:	4650      	mov	r0, sl
 80062d8:	f013 f908 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80062dc:	f24b 33a8 	movw	r3, #45992	; 0xb3a8
 80062e0:	ee1a 0a90 	vmov	r0, s21
 80062e4:	f844 a003 	str.w	sl, [r4, r3]
    flexButtonFilterErrBuffer2[0] = 0;
 80062e8:	f64b 5368 	movw	r3, #48488	; 0xbd68
 80062ec:	18e2      	adds	r2, r4, r3
 80062ee:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 80062f0:	f24b 33ac 	movw	r3, #45996	; 0xb3ac
 80062f4:	4629      	mov	r1, r5
 80062f6:	50e2      	str	r2, [r4, r3]
 80062f8:	9700      	str	r7, [sp, #0]
 80062fa:	4633      	mov	r3, r6
 80062fc:	462a      	mov	r2, r5
 80062fe:	3078      	adds	r0, #120	; 0x78
 8006300:	f7fc fbd8 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterErr.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006304:	4a11      	ldr	r2, [pc, #68]	; (800634c <_ZN15Screen1ViewBaseC1Ev+0xcc0>)
 8006306:	ee1a 0a90 	vmov	r0, s21
 800630a:	4611      	mov	r1, r2
 800630c:	f7ff f99b 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterErr.setPosition(632, 141, 50, 59);
 8006310:	ee1a 0a90 	vmov	r0, s21
 8006314:	9700      	str	r7, [sp, #0]
 8006316:	4633      	mov	r3, r6
 8006318:	228d      	movs	r2, #141	; 0x8d
 800631a:	f44f 711e 	mov.w	r1, #632	; 0x278
 800631e:	f7fc fbc9 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006322:	f24b 3324 	movw	r3, #45860	; 0xb324
 8006326:	ee1b 0a10 	vmov	r0, s22
 800632a:	9903      	ldr	r1, [sp, #12]
 800632c:	50e1      	str	r1, [r4, r3]
 800632e:	462a      	mov	r2, r5
 8006330:	4629      	mov	r1, r5
 8006332:	9700      	str	r7, [sp, #0]
 8006334:	2364      	movs	r3, #100	; 0x64
 8006336:	3034      	adds	r0, #52	; 0x34
 8006338:	e00e      	b.n	8006358 <_ZN15Screen1ViewBaseC1Ev+0xccc>
 800633a:	bf00      	nop
 800633c:	ff0099cc 	.word	0xff0099cc
 8006340:	ff006699 	.word	0xff006699
 8006344:	0802750c 	.word	0x0802750c
 8006348:	08027501 	.word	0x08027501
 800634c:	ff0a0a0a 	.word	0xff0a0a0a
 8006350:	ff003366 	.word	0xff003366
 8006354:	20027a04 	.word	0x20027a04
 8006358:	f7fc fbac 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800635c:	f24b 431c 	movw	r3, #46108	; 0xb41c
    flexButtonFilterThreshold.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006360:	9904      	ldr	r1, [sp, #16]
 8006362:	4ad1      	ldr	r2, [pc, #836]	; (80066a8 <_ZN15Screen1ViewBaseC1Ev+0x101c>)
 8006364:	9100      	str	r1, [sp, #0]
 8006366:	f04f 0002 	mov.w	r0, #2
 800636a:	52e0      	strh	r0, [r4, r3]
 800636c:	49cf      	ldr	r1, [pc, #828]	; (80066ac <_ZN15Screen1ViewBaseC1Ev+0x1020>)
 800636e:	4bd0      	ldr	r3, [pc, #832]	; (80066b0 <_ZN15Screen1ViewBaseC1Ev+0x1024>)
        : typedTextId(id)
 8006370:	4fd0      	ldr	r7, [pc, #832]	; (80066b4 <_ZN15Screen1ViewBaseC1Ev+0x1028>)
 8006372:	ee1b 0a10 	vmov	r0, s22
 8006376:	f7fc fbd9 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 800637a:	235d      	movs	r3, #93	; 0x5d
 800637c:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
    flexButtonFilterThreshold.setTwoWildcardText(TypedText(T___SINGLEUSE_D5AS));
 8006380:	ab20      	add	r3, sp, #128	; 0x80
 8006382:	4619      	mov	r1, r3
 8006384:	ee1b 0a10 	vmov	r0, s22
 8006388:	9720      	str	r7, [sp, #128]	; 0x80
 800638a:	f7ff f94d 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800638e:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterThresholdBuffer1, FLEXBUTTONFILTERTHRESHOLDBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_VTHY).getText());
 8006392:	f504 453d 	add.w	r5, r4, #48384	; 0xbd00
 8006396:	357c      	adds	r5, #124	; 0x7c
 8006398:	2b00      	cmp	r3, #0
 800639a:	f43f ac36 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800639e:	f8bb 3000 	ldrh.w	r3, [fp]
 80063a2:	2b5e      	cmp	r3, #94	; 0x5e
 80063a4:	f67f ac3d 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 80063a8:	215e      	movs	r1, #94	; 0x5e
 80063aa:	f8d9 0000 	ldr.w	r0, [r9]
 80063ae:	f001 fa9f 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80063b2:	4ac1      	ldr	r2, [pc, #772]	; (80066b8 <_ZN15Screen1ViewBaseC1Ev+0x102c>)
 80063b4:	4603      	mov	r3, r0
 80063b6:	210f      	movs	r1, #15
 80063b8:	4628      	mov	r0, r5
 80063ba:	f013 f897 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80063be:	f24b 436c 	movw	r3, #46188	; 0xb46c
 80063c2:	ee1b 0a10 	vmov	r0, s22
 80063c6:	50e5      	str	r5, [r4, r3]
    flexButtonFilterThresholdBuffer2[0] = 0;
 80063c8:	f64b 539a 	movw	r3, #48538	; 0xbd9a
 80063cc:	2500      	movs	r5, #0
 80063ce:	52e5      	strh	r5, [r4, r3]
 80063d0:	18e2      	adds	r2, r4, r3
        wc2 = value;
 80063d2:	f24b 4370 	movw	r3, #46192	; 0xb470
 80063d6:	263b      	movs	r6, #59	; 0x3b
 80063d8:	50e2      	str	r2, [r4, r3]
 80063da:	4629      	mov	r1, r5
 80063dc:	2364      	movs	r3, #100	; 0x64
 80063de:	462a      	mov	r2, r5
 80063e0:	3078      	adds	r0, #120	; 0x78
 80063e2:	9600      	str	r6, [sp, #0]
 80063e4:	f7fc fb66 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterThreshold.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80063e8:	4ab4      	ldr	r2, [pc, #720]	; (80066bc <_ZN15Screen1ViewBaseC1Ev+0x1030>)
 80063ea:	ee1b 0a10 	vmov	r0, s22
 80063ee:	4611      	mov	r1, r2
 80063f0:	f7ff f929 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterThreshold.setPosition(532, 141, 100, 59);
 80063f4:	ee1b 0a10 	vmov	r0, s22
 80063f8:	2364      	movs	r3, #100	; 0x64
 80063fa:	228d      	movs	r2, #141	; 0x8d
 80063fc:	f44f 7105 	mov.w	r1, #532	; 0x214
 8006400:	9600      	str	r6, [sp, #0]
 8006402:	f7fc fb57 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006406:	f24b 33e8 	movw	r3, #46056	; 0xb3e8
 800640a:	ee1b 0a90 	vmov	r0, s23
 800640e:	9903      	ldr	r1, [sp, #12]
 8006410:	50e1      	str	r1, [r4, r3]
 8006412:	462a      	mov	r2, r5
 8006414:	2332      	movs	r3, #50	; 0x32
 8006416:	4629      	mov	r1, r5
 8006418:	3034      	adds	r0, #52	; 0x34
 800641a:	9600      	str	r6, [sp, #0]
 800641c:	f7fc fb4a 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006420:	f24b 43e0 	movw	r3, #46304	; 0xb4e0
 8006424:	f04f 0b02 	mov.w	fp, #2
 8006428:	f824 b003 	strh.w	fp, [r4, r3]
    flexButtonFilterUnit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800642c:	9b04      	ldr	r3, [sp, #16]
 800642e:	4a9e      	ldr	r2, [pc, #632]	; (80066a8 <_ZN15Screen1ViewBaseC1Ev+0x101c>)
 8006430:	499e      	ldr	r1, [pc, #632]	; (80066ac <_ZN15Screen1ViewBaseC1Ev+0x1020>)
 8006432:	9300      	str	r3, [sp, #0]
 8006434:	ee1b 0a90 	vmov	r0, s23
 8006438:	4b9d      	ldr	r3, [pc, #628]	; (80066b0 <_ZN15Screen1ViewBaseC1Ev+0x1024>)
 800643a:	f7fc fb77 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800643e:	235b      	movs	r3, #91	; 0x5b
    flexButtonFilterUnit.setTwoWildcardText(TypedText(T___SINGLEUSE_7RS5));
 8006440:	ee1b 0a90 	vmov	r0, s23
 8006444:	a920      	add	r1, sp, #128	; 0x80
 8006446:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 800644a:	9720      	str	r7, [sp, #128]	; 0x80
 800644c:	f7ff f8ec 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006450:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterUnitBuffer1, FLEXBUTTONFILTERUNITBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_3018).getText());
 8006454:	f504 4a3d 	add.w	sl, r4, #48384	; 0xbd00
 8006458:	f10a 0aae 	add.w	sl, sl, #174	; 0xae
 800645c:	2b00      	cmp	r3, #0
 800645e:	f43f abd4 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006462:	4f97      	ldr	r7, [pc, #604]	; (80066c0 <_ZN15Screen1ViewBaseC1Ev+0x1034>)
 8006464:	883b      	ldrh	r3, [r7, #0]
 8006466:	2b5c      	cmp	r3, #92	; 0x5c
 8006468:	f67f abdb 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 800646c:	215c      	movs	r1, #92	; 0x5c
 800646e:	f8d9 0000 	ldr.w	r0, [r9]
 8006472:	f001 fa3d 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006476:	4a90      	ldr	r2, [pc, #576]	; (80066b8 <_ZN15Screen1ViewBaseC1Ev+0x102c>)
 8006478:	4603      	mov	r3, r0
 800647a:	210f      	movs	r1, #15
 800647c:	4650      	mov	r0, sl
 800647e:	f013 f835 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006482:	f24b 5330 	movw	r3, #46384	; 0xb530
 8006486:	ee1b 0a90 	vmov	r0, s23
 800648a:	f844 a003 	str.w	sl, [r4, r3]
    flexButtonFilterUnitBuffer2[0] = 0;
 800648e:	f64b 53cc 	movw	r3, #48588	; 0xbdcc
 8006492:	18e2      	adds	r2, r4, r3
 8006494:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 8006496:	f24b 5334 	movw	r3, #46388	; 0xb534
 800649a:	4629      	mov	r1, r5
 800649c:	50e2      	str	r2, [r4, r3]
 800649e:	3078      	adds	r0, #120	; 0x78
 80064a0:	2332      	movs	r3, #50	; 0x32
 80064a2:	462a      	mov	r2, r5
 80064a4:	9600      	str	r6, [sp, #0]
 80064a6:	f7fc fb05 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterUnit.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80064aa:	4a84      	ldr	r2, [pc, #528]	; (80066bc <_ZN15Screen1ViewBaseC1Ev+0x1030>)
 80064ac:	ee1b 0a90 	vmov	r0, s23
 80064b0:	4611      	mov	r1, r2
 80064b2:	f7ff f8c8 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterUnit.setPosition(482, 141, 50, 59);
 80064b6:	ee1b 0a90 	vmov	r0, s23
 80064ba:	2332      	movs	r3, #50	; 0x32
 80064bc:	228d      	movs	r2, #141	; 0x8d
 80064be:	f44f 71f1 	mov.w	r1, #482	; 0x1e2
 80064c2:	9600      	str	r6, [sp, #0]
 80064c4:	f7fc faf6 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064c8:	f24b 43ac 	movw	r3, #46252	; 0xb4ac
 80064cc:	ee1c 0a10 	vmov	r0, s24
 80064d0:	9903      	ldr	r1, [sp, #12]
 80064d2:	50e1      	str	r1, [r4, r3]
 80064d4:	462a      	mov	r2, r5
 80064d6:	2332      	movs	r3, #50	; 0x32
 80064d8:	4629      	mov	r1, r5
 80064da:	3034      	adds	r0, #52	; 0x34
 80064dc:	9600      	str	r6, [sp, #0]
 80064de:	f7fc fae9 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064e2:	f24b 53a4 	movw	r3, #46500	; 0xb5a4
    flexButtonFilterConc.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80064e6:	9904      	ldr	r1, [sp, #16]
 80064e8:	f824 b003 	strh.w	fp, [r4, r3]
 80064ec:	4a6e      	ldr	r2, [pc, #440]	; (80066a8 <_ZN15Screen1ViewBaseC1Ev+0x101c>)
 80064ee:	4b70      	ldr	r3, [pc, #448]	; (80066b0 <_ZN15Screen1ViewBaseC1Ev+0x1024>)
 80064f0:	9100      	str	r1, [sp, #0]
 80064f2:	ee1c 0a10 	vmov	r0, s24
 80064f6:	496d      	ldr	r1, [pc, #436]	; (80066ac <_ZN15Screen1ViewBaseC1Ev+0x1020>)
 80064f8:	f7fc fb18 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80064fc:	4b6d      	ldr	r3, [pc, #436]	; (80066b4 <_ZN15Screen1ViewBaseC1Ev+0x1028>)
 80064fe:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterConc.setWildcardText(TypedText(T___SINGLEUSE_0XAZ));
 8006500:	ee1c 0a10 	vmov	r0, s24
 8006504:	2359      	movs	r3, #89	; 0x59
 8006506:	a920      	add	r1, sp, #128	; 0x80
 8006508:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 800650c:	f7fc fb29 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006510:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterConcBuffer, FLEXBUTTONFILTERCONC_SIZE, "%s", TypedText(T___SINGLEUSE_FH4T).getText());
 8006514:	f504 4a3d 	add.w	sl, r4, #48384	; 0xbd00
 8006518:	f10a 0ae0 	add.w	sl, sl, #224	; 0xe0
 800651c:	2b00      	cmp	r3, #0
 800651e:	f43f ab74 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006522:	883b      	ldrh	r3, [r7, #0]
 8006524:	2b5a      	cmp	r3, #90	; 0x5a
 8006526:	f67f ab7c 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 800652a:	215a      	movs	r1, #90	; 0x5a
 800652c:	f8d9 0000 	ldr.w	r0, [r9]
 8006530:	f001 f9de 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006534:	4a60      	ldr	r2, [pc, #384]	; (80066b8 <_ZN15Screen1ViewBaseC1Ev+0x102c>)
 8006536:	4603      	mov	r3, r0
 8006538:	210f      	movs	r1, #15
 800653a:	4650      	mov	r0, sl
 800653c:	f012 ffd6 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 8006540:	f24b 53f4 	movw	r3, #46580	; 0xb5f4
 8006544:	ee1c 0a10 	vmov	r0, s24
 8006548:	f844 a003 	str.w	sl, [r4, r3]
 800654c:	462a      	mov	r2, r5
 800654e:	2332      	movs	r3, #50	; 0x32
 8006550:	4629      	mov	r1, r5
 8006552:	3078      	adds	r0, #120	; 0x78
 8006554:	9600      	str	r6, [sp, #0]
 8006556:	f7fc faad 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterConc.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800655a:	4a58      	ldr	r2, [pc, #352]	; (80066bc <_ZN15Screen1ViewBaseC1Ev+0x1030>)
 800655c:	ee1c 0a10 	vmov	r0, s24
 8006560:	4611      	mov	r1, r2
 8006562:	f7ff f85b 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterConc.setPosition(432, 141, 50, 59);
 8006566:	ee1c 0a10 	vmov	r0, s24
 800656a:	2332      	movs	r3, #50	; 0x32
 800656c:	228d      	movs	r2, #141	; 0x8d
 800656e:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 8006572:	9600      	str	r6, [sp, #0]
 8006574:	f7fc fa9e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006578:	f504 4136 	add.w	r1, r4, #46592	; 0xb600
 800657c:	9115      	str	r1, [sp, #84]	; 0x54
 800657e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006580:	9600      	str	r6, [sp, #0]
 8006582:	2364      	movs	r3, #100	; 0x64
 8006584:	462a      	mov	r2, r5
 8006586:	4629      	mov	r1, r5
 8006588:	3034      	adds	r0, #52	; 0x34
 800658a:	f7fc fa93 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800658e:	f24b 6364 	movw	r3, #46692	; 0xb664
    flexButtonFilterStLoop.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006592:	9904      	ldr	r1, [sp, #16]
 8006594:	f824 b003 	strh.w	fp, [r4, r3]
 8006598:	4a43      	ldr	r2, [pc, #268]	; (80066a8 <_ZN15Screen1ViewBaseC1Ev+0x101c>)
 800659a:	4b45      	ldr	r3, [pc, #276]	; (80066b0 <_ZN15Screen1ViewBaseC1Ev+0x1024>)
 800659c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800659e:	9100      	str	r1, [sp, #0]
 80065a0:	4942      	ldr	r1, [pc, #264]	; (80066ac <_ZN15Screen1ViewBaseC1Ev+0x1020>)
 80065a2:	f7fc fac3 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80065a6:	4b43      	ldr	r3, [pc, #268]	; (80066b4 <_ZN15Screen1ViewBaseC1Ev+0x1028>)
 80065a8:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterStLoop.setTwoWildcardText(TypedText(T___SINGLEUSE_3ADS));
 80065aa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065ac:	2357      	movs	r3, #87	; 0x57
 80065ae:	a920      	add	r1, sp, #128	; 0x80
 80065b0:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80065b4:	f7ff f838 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80065b8:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterStLoopBuffer1, FLEXBUTTONFILTERSTLOOPBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_FR0S).getText());
 80065bc:	f504 4a3d 	add.w	sl, r4, #48384	; 0xbd00
 80065c0:	f10a 0afe 	add.w	sl, sl, #254	; 0xfe
 80065c4:	2b00      	cmp	r3, #0
 80065c6:	f43f ab20 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80065ca:	883b      	ldrh	r3, [r7, #0]
 80065cc:	2b58      	cmp	r3, #88	; 0x58
 80065ce:	f67f ab28 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 80065d2:	2158      	movs	r1, #88	; 0x58
 80065d4:	f8d9 0000 	ldr.w	r0, [r9]
 80065d8:	f001 f98a 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80065dc:	4a36      	ldr	r2, [pc, #216]	; (80066b8 <_ZN15Screen1ViewBaseC1Ev+0x102c>)
 80065de:	4603      	mov	r3, r0
 80065e0:	210f      	movs	r1, #15
 80065e2:	4650      	mov	r0, sl
 80065e4:	f012 ff82 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80065e8:	f24b 63b4 	movw	r3, #46772	; 0xb6b4
 80065ec:	9815      	ldr	r0, [sp, #84]	; 0x54
 80065ee:	f844 a003 	str.w	sl, [r4, r3]
    flexButtonFilterStLoopBuffer2[0] = 0;
 80065f2:	f64b 631c 	movw	r3, #48668	; 0xbe1c
 80065f6:	18e2      	adds	r2, r4, r3
 80065f8:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 80065fa:	f24b 63b8 	movw	r3, #46776	; 0xb6b8
 80065fe:	4629      	mov	r1, r5
 8006600:	50e2      	str	r2, [r4, r3]
 8006602:	3078      	adds	r0, #120	; 0x78
 8006604:	2364      	movs	r3, #100	; 0x64
 8006606:	462a      	mov	r2, r5
 8006608:	9600      	str	r6, [sp, #0]
 800660a:	f7fc fa53 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterStLoop.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800660e:	4a2b      	ldr	r2, [pc, #172]	; (80066bc <_ZN15Screen1ViewBaseC1Ev+0x1030>)
 8006610:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006612:	4611      	mov	r1, r2
 8006614:	f7ff f817 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterStLoop.setPosition(332, 141, 100, 59);
 8006618:	9809      	ldr	r0, [sp, #36]	; 0x24
 800661a:	9600      	str	r6, [sp, #0]
 800661c:	2364      	movs	r3, #100	; 0x64
 800661e:	228d      	movs	r2, #141	; 0x8d
 8006620:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 8006624:	f7fc fa46 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006628:	f24b 6330 	movw	r3, #46640	; 0xb630
 800662c:	ee1c 0a90 	vmov	r0, s25
 8006630:	9903      	ldr	r1, [sp, #12]
 8006632:	50e1      	str	r1, [r4, r3]
 8006634:	462a      	mov	r2, r5
 8006636:	2364      	movs	r3, #100	; 0x64
 8006638:	4629      	mov	r1, r5
 800663a:	3034      	adds	r0, #52	; 0x34
 800663c:	9600      	str	r6, [sp, #0]
 800663e:	f7fc fa39 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006642:	f24b 7328 	movw	r3, #46888	; 0xb728
    flexButtonFilterTypeChannel.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006646:	9904      	ldr	r1, [sp, #16]
 8006648:	f824 b003 	strh.w	fp, [r4, r3]
 800664c:	4a16      	ldr	r2, [pc, #88]	; (80066a8 <_ZN15Screen1ViewBaseC1Ev+0x101c>)
 800664e:	4b18      	ldr	r3, [pc, #96]	; (80066b0 <_ZN15Screen1ViewBaseC1Ev+0x1024>)
 8006650:	9100      	str	r1, [sp, #0]
 8006652:	ee1c 0a90 	vmov	r0, s25
 8006656:	4915      	ldr	r1, [pc, #84]	; (80066ac <_ZN15Screen1ViewBaseC1Ev+0x1020>)
 8006658:	f7fc fa68 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800665c:	4b15      	ldr	r3, [pc, #84]	; (80066b4 <_ZN15Screen1ViewBaseC1Ev+0x1028>)
 800665e:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterTypeChannel.setTwoWildcardText(TypedText(T___SINGLEUSE_0627));
 8006660:	ee1c 0a90 	vmov	r0, s25
 8006664:	2351      	movs	r3, #81	; 0x51
 8006666:	a920      	add	r1, sp, #128	; 0x80
 8006668:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 800666c:	f7fe ffdc 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006670:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterTypeChannelBuffer1, FLEXBUTTONFILTERTYPECHANNELBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_QCEL).getText());
 8006674:	f504 4a3e 	add.w	sl, r4, #48640	; 0xbe00
 8006678:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
 800667c:	2b00      	cmp	r3, #0
 800667e:	f43f aac4 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006682:	883b      	ldrh	r3, [r7, #0]
 8006684:	2b52      	cmp	r3, #82	; 0x52
 8006686:	f67f aacc 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 800668a:	2152      	movs	r1, #82	; 0x52
 800668c:	f8d9 0000 	ldr.w	r0, [r9]
 8006690:	f001 f92e 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006694:	4a08      	ldr	r2, [pc, #32]	; (80066b8 <_ZN15Screen1ViewBaseC1Ev+0x102c>)
 8006696:	4603      	mov	r3, r0
 8006698:	210f      	movs	r1, #15
 800669a:	4650      	mov	r0, sl
 800669c:	f012 ff26 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80066a0:	f24b 7378 	movw	r3, #46968	; 0xb778
 80066a4:	e00e      	b.n	80066c4 <_ZN15Screen1ViewBaseC1Ev+0x1038>
 80066a6:	bf00      	nop
 80066a8:	ff0099cc 	.word	0xff0099cc
 80066ac:	ff006699 	.word	0xff006699
 80066b0:	ff003366 	.word	0xff003366
 80066b4:	0802750c 	.word	0x0802750c
 80066b8:	08027501 	.word	0x08027501
 80066bc:	ff0a0a0a 	.word	0xff0a0a0a
 80066c0:	20027a04 	.word	0x20027a04
 80066c4:	ee1c 0a90 	vmov	r0, s25
 80066c8:	f844 a003 	str.w	sl, [r4, r3]
    flexButtonFilterTypeChannelBuffer2[0] = 0;
 80066cc:	f64b 634e 	movw	r3, #48718	; 0xbe4e
 80066d0:	18e2      	adds	r2, r4, r3
 80066d2:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 80066d4:	f24b 737c 	movw	r3, #46972	; 0xb77c
 80066d8:	4629      	mov	r1, r5
 80066da:	50e2      	str	r2, [r4, r3]
 80066dc:	3078      	adds	r0, #120	; 0x78
 80066de:	2364      	movs	r3, #100	; 0x64
 80066e0:	462a      	mov	r2, r5
 80066e2:	9600      	str	r6, [sp, #0]
 80066e4:	f7fc f9e6 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterTypeChannel.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80066e8:	4acd      	ldr	r2, [pc, #820]	; (8006a20 <_ZN15Screen1ViewBaseC1Ev+0x1394>)
 80066ea:	ee1c 0a90 	vmov	r0, s25
 80066ee:	4611      	mov	r1, r2
 80066f0:	f7fe ffa9 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterTypeChannel.setPosition(232, 141, 100, 59);
 80066f4:	ee1c 0a90 	vmov	r0, s25
 80066f8:	2364      	movs	r3, #100	; 0x64
 80066fa:	228d      	movs	r2, #141	; 0x8d
 80066fc:	21e8      	movs	r1, #232	; 0xe8
 80066fe:	9600      	str	r6, [sp, #0]
 8006700:	f7fc f9d8 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006704:	9805      	ldr	r0, [sp, #20]
 8006706:	9903      	ldr	r1, [sp, #12]
 8006708:	9600      	str	r6, [sp, #0]
 800670a:	f24b 63f4 	movw	r3, #46836	; 0xb6f4
 800670e:	462a      	mov	r2, r5
 8006710:	50e1      	str	r1, [r4, r3]
 8006712:	3034      	adds	r0, #52	; 0x34
 8006714:	4629      	mov	r1, r5
 8006716:	2332      	movs	r3, #50	; 0x32
 8006718:	f7fc f9cc 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800671c:	f24b 73ec 	movw	r3, #47084	; 0xb7ec
    flexButtonFilterNum.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006720:	9904      	ldr	r1, [sp, #16]
 8006722:	f824 b003 	strh.w	fp, [r4, r3]
 8006726:	4abf      	ldr	r2, [pc, #764]	; (8006a24 <_ZN15Screen1ViewBaseC1Ev+0x1398>)
 8006728:	4bbf      	ldr	r3, [pc, #764]	; (8006a28 <_ZN15Screen1ViewBaseC1Ev+0x139c>)
 800672a:	9805      	ldr	r0, [sp, #20]
 800672c:	9100      	str	r1, [sp, #0]
 800672e:	49bf      	ldr	r1, [pc, #764]	; (8006a2c <_ZN15Screen1ViewBaseC1Ev+0x13a0>)
 8006730:	f7fc f9fc 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006734:	4bbe      	ldr	r3, [pc, #760]	; (8006a30 <_ZN15Screen1ViewBaseC1Ev+0x13a4>)
 8006736:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterNum.setTwoWildcardText(TypedText(T___SINGLEUSE_PRB2));
 8006738:	9805      	ldr	r0, [sp, #20]
 800673a:	234d      	movs	r3, #77	; 0x4d
 800673c:	a920      	add	r1, sp, #128	; 0x80
 800673e:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8006742:	f7fe ff71 	bl	8005628 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006746:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterNumBuffer1, FLEXBUTTONFILTERNUMBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_459A).getText());
 800674a:	f504 453e 	add.w	r5, r4, #48640	; 0xbe00
 800674e:	3562      	adds	r5, #98	; 0x62
 8006750:	2b00      	cmp	r3, #0
 8006752:	f43f aa5a 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006756:	883b      	ldrh	r3, [r7, #0]
 8006758:	2b4e      	cmp	r3, #78	; 0x4e
 800675a:	f67f aa62 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 800675e:	f8d9 0000 	ldr.w	r0, [r9]
 8006762:	214e      	movs	r1, #78	; 0x4e
 8006764:	f001 f8c4 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006768:	4ab2      	ldr	r2, [pc, #712]	; (8006a34 <_ZN15Screen1ViewBaseC1Ev+0x13a8>)
 800676a:	4603      	mov	r3, r0
 800676c:	210a      	movs	r1, #10
 800676e:	4628      	mov	r0, r5
 8006770:	f012 febc 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006774:	f64b 033c 	movw	r3, #47164	; 0xb83c
 8006778:	4637      	mov	r7, r6
 800677a:	50e5      	str	r5, [r4, r3]
    flexButtonFilterNumBuffer2[0] = 0;
 800677c:	f64b 6376 	movw	r3, #48758	; 0xbe76
 8006780:	2500      	movs	r5, #0
 8006782:	52e5      	strh	r5, [r4, r3]
 8006784:	18e2      	adds	r2, r4, r3
        wc2 = value;
 8006786:	f64b 0340 	movw	r3, #47168	; 0xb840
 800678a:	9600      	str	r6, [sp, #0]
 800678c:	4ea4      	ldr	r6, [pc, #656]	; (8006a20 <_ZN15Screen1ViewBaseC1Ev+0x1394>)
 800678e:	50e2      	str	r2, [r4, r3]
 8006790:	4629      	mov	r1, r5
 8006792:	2332      	movs	r3, #50	; 0x32
 8006794:	462a      	mov	r2, r5
 8006796:	f504 4038 	add.w	r0, r4, #47104	; 0xb800
 800679a:	f7fc f98b 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterNum.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800679e:	9805      	ldr	r0, [sp, #20]
 80067a0:	4632      	mov	r2, r6
 80067a2:	4631      	mov	r1, r6
 80067a4:	f7fe ff4f 	bl	8005646 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterNum.setPosition(182, 141, 50, 59);
 80067a8:	9805      	ldr	r0, [sp, #20]
 80067aa:	9700      	str	r7, [sp, #0]
 80067ac:	2332      	movs	r3, #50	; 0x32
 80067ae:	228d      	movs	r2, #141	; 0x8d
 80067b0:	21b6      	movs	r1, #182	; 0xb6
 80067b2:	f7fc f97f 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067b6:	f24b 73b8 	movw	r3, #47032	; 0xb7b8
 80067ba:	ee1d 0a10 	vmov	r0, s26
 80067be:	9903      	ldr	r1, [sp, #12]
 80067c0:	50e1      	str	r1, [r4, r3]
 80067c2:	462a      	mov	r2, r5
 80067c4:	2396      	movs	r3, #150	; 0x96
 80067c6:	4629      	mov	r1, r5
 80067c8:	3034      	adds	r0, #52	; 0x34
 80067ca:	9700      	str	r7, [sp, #0]
 80067cc:	f7fc f972 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067d0:	f64b 03b0 	movw	r3, #47280	; 0xb8b0
    flexButtonFilterData.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80067d4:	9904      	ldr	r1, [sp, #16]
 80067d6:	f824 b003 	strh.w	fp, [r4, r3]
 80067da:	4a92      	ldr	r2, [pc, #584]	; (8006a24 <_ZN15Screen1ViewBaseC1Ev+0x1398>)
 80067dc:	4b92      	ldr	r3, [pc, #584]	; (8006a28 <_ZN15Screen1ViewBaseC1Ev+0x139c>)
 80067de:	9100      	str	r1, [sp, #0]
 80067e0:	ee1d 0a10 	vmov	r0, s26
 80067e4:	4991      	ldr	r1, [pc, #580]	; (8006a2c <_ZN15Screen1ViewBaseC1Ev+0x13a0>)
 80067e6:	f7fc f9a1 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80067ea:	4b91      	ldr	r3, [pc, #580]	; (8006a30 <_ZN15Screen1ViewBaseC1Ev+0x13a4>)
 80067ec:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonFilterData.setWildcardText(TypedText(T___SINGLEUSE_ZX97));
 80067ee:	ee1d 0a10 	vmov	r0, s26
 80067f2:	2342      	movs	r3, #66	; 0x42
 80067f4:	a920      	add	r1, sp, #128	; 0x80
 80067f6:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80067fa:	f7fc f9b2 	bl	8002b62 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80067fe:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterDataBuffer, FLEXBUTTONFILTERDATA_SIZE, "%s", TypedText(T___SINGLEUSE_5ZOV).getText());
 8006802:	f504 493e 	add.w	r9, r4, #48640	; 0xbe00
 8006806:	f109 098a 	add.w	r9, r9, #138	; 0x8a
 800680a:	2b00      	cmp	r3, #0
 800680c:	f43f a9fd 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006810:	f8df b228 	ldr.w	fp, [pc, #552]	; 8006a3c <_ZN15Screen1ViewBaseC1Ev+0x13b0>
 8006814:	f8bb 3000 	ldrh.w	r3, [fp]
 8006818:	2b43      	cmp	r3, #67	; 0x43
 800681a:	f67f aa02 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 800681e:	4a86      	ldr	r2, [pc, #536]	; (8006a38 <_ZN15Screen1ViewBaseC1Ev+0x13ac>)
 8006820:	2143      	movs	r1, #67	; 0x43
 8006822:	6810      	ldr	r0, [r2, #0]
 8006824:	f001 f864 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006828:	4a82      	ldr	r2, [pc, #520]	; (8006a34 <_ZN15Screen1ViewBaseC1Ev+0x13a8>)
 800682a:	4603      	mov	r3, r0
 800682c:	210f      	movs	r1, #15
 800682e:	4648      	mov	r0, r9
 8006830:	f012 fe5c 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 8006834:	f504 4339 	add.w	r3, r4, #47360	; 0xb900
 8006838:	ee1d 0a10 	vmov	r0, s26
 800683c:	f8c3 9000 	str.w	r9, [r3]
 8006840:	462a      	mov	r2, r5
 8006842:	2396      	movs	r3, #150	; 0x96
 8006844:	9700      	str	r7, [sp, #0]
 8006846:	4629      	mov	r1, r5
 8006848:	3078      	adds	r0, #120	; 0x78
 800684a:	f7fc f933 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterData.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800684e:	ee1d 0a10 	vmov	r0, s26
 8006852:	4632      	mov	r2, r6
 8006854:	4631      	mov	r1, r6
 8006856:	f7fe fee1 	bl	800561c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
    flexButtonFilterData.setPosition(32, 141, 150, 59);
 800685a:	ee1d 0a10 	vmov	r0, s26
 800685e:	9700      	str	r7, [sp, #0]
 8006860:	2396      	movs	r3, #150	; 0x96
 8006862:	228d      	movs	r2, #141	; 0x8d
 8006864:	2120      	movs	r1, #32
 8006866:	f7fc f925 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800686a:	f64b 037c 	movw	r3, #47228	; 0xb87c
 800686e:	9903      	ldr	r1, [sp, #12]
 8006870:	50e1      	str	r1, [r4, r3]
    textAreaStartDate.setXY(60, 160);
 8006872:	980a      	ldr	r0, [sp, #40]	; 0x28
 8006874:	22a0      	movs	r2, #160	; 0xa0
 8006876:	213c      	movs	r1, #60	; 0x3c
 8006878:	f7fb fe48 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800687c:	f64b 133c 	movw	r3, #47420	; 0xb93c
 8006880:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
 8006884:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8006888:	f504 4339 	add.w	r3, r4, #47360	; 0xb900
    Unicode::snprintf(textAreaStartDateBuffer, TEXTAREASTARTDATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3H21).getText());
 800688c:	f504 473c 	add.w	r7, r4, #48128	; 0xbc00
 8006890:	f8a3 5040 	strh.w	r5, [r3, #64]	; 0x40
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006894:	f8d8 3000 	ldr.w	r3, [r8]
 8006898:	3734      	adds	r7, #52	; 0x34
 800689a:	2b00      	cmp	r3, #0
 800689c:	f43f a9b5 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80068a0:	f8bb 3000 	ldrh.w	r3, [fp]
 80068a4:	2b54      	cmp	r3, #84	; 0x54
 80068a6:	f67f a9bc 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 80068aa:	4a63      	ldr	r2, [pc, #396]	; (8006a38 <_ZN15Screen1ViewBaseC1Ev+0x13ac>)
 80068ac:	2154      	movs	r1, #84	; 0x54
 80068ae:	6810      	ldr	r0, [r2, #0]
 80068b0:	f001 f81e 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80068b4:	4a5f      	ldr	r2, [pc, #380]	; (8006a34 <_ZN15Screen1ViewBaseC1Ev+0x13a8>)
 80068b6:	4603      	mov	r3, r0
 80068b8:	210c      	movs	r1, #12
 80068ba:	4638      	mov	r0, r7
 80068bc:	f012 fe16 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80068c0:	f64b 1348 	movw	r3, #47432	; 0xb948
    textAreaStartDate.resizeToCurrentText();
 80068c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80068c6:	50e7      	str	r7, [r4, r3]
 80068c8:	f00c fd5c 	bl	8013384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80068cc:	4b58      	ldr	r3, [pc, #352]	; (8006a30 <_ZN15Screen1ViewBaseC1Ev+0x13a4>)
    textAreaStartDate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9LC6));
 80068ce:	980a      	ldr	r0, [sp, #40]	; 0x28
 80068d0:	9320      	str	r3, [sp, #128]	; 0x80
 80068d2:	a920      	add	r1, sp, #128	; 0x80
 80068d4:	2353      	movs	r3, #83	; 0x53
 80068d6:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80068da:	f00c fd70 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStopDate.setXY(60, 179);
 80068de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80068e0:	22b3      	movs	r2, #179	; 0xb3
 80068e2:	213c      	movs	r1, #60	; 0x3c
 80068e4:	f7fb fe12 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80068e8:	f64b 137c 	movw	r3, #47484	; 0xb97c
    Unicode::snprintf(textAreaStopDateBuffer, TEXTAREASTOPDATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FS6U).getText());
 80068ec:	f504 473c 	add.w	r7, r4, #48128	; 0xbc00
 80068f0:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 80068f4:	f504 4339 	add.w	r3, r4, #47360	; 0xb900
 80068f8:	374c      	adds	r7, #76	; 0x4c
 80068fa:	f8a3 5080 	strh.w	r5, [r3, #128]	; 0x80
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068fe:	f8d8 3000 	ldr.w	r3, [r8]
 8006902:	2b00      	cmp	r3, #0
 8006904:	f43f a981 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006908:	f8bb 3000 	ldrh.w	r3, [fp]
 800690c:	2b56      	cmp	r3, #86	; 0x56
 800690e:	f67f a988 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8006912:	4a49      	ldr	r2, [pc, #292]	; (8006a38 <_ZN15Screen1ViewBaseC1Ev+0x13ac>)
 8006914:	2156      	movs	r1, #86	; 0x56
 8006916:	6810      	ldr	r0, [r2, #0]
 8006918:	f000 ffea 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 800691c:	4a45      	ldr	r2, [pc, #276]	; (8006a34 <_ZN15Screen1ViewBaseC1Ev+0x13a8>)
 800691e:	4603      	mov	r3, r0
 8006920:	210c      	movs	r1, #12
 8006922:	4638      	mov	r0, r7
 8006924:	f012 fde2 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006928:	f64b 1388 	movw	r3, #47496	; 0xb988
    textAreaStopDate.resizeToCurrentText();
 800692c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800692e:	50e7      	str	r7, [r4, r3]
 8006930:	f00c fd28 	bl	8013384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006934:	4b3e      	ldr	r3, [pc, #248]	; (8006a30 <_ZN15Screen1ViewBaseC1Ev+0x13a4>)
    textAreaStopDate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V4DC));
 8006936:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006938:	9320      	str	r3, [sp, #128]	; 0x80
 800693a:	a920      	add	r1, sp, #128	; 0x80
 800693c:	2355      	movs	r3, #85	; 0x55
 800693e:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8006942:	f00c fd3c 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_480X272PX_ID), 160, 104);
 8006946:	2303      	movs	r3, #3
 8006948:	22a0      	movs	r2, #160	; 0xa0
 800694a:	ee19 0a10 	vmov	r0, s18
 800694e:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8006952:	a920      	add	r1, sp, #128	; 0x80
 8006954:	2368      	movs	r3, #104	; 0x68
 8006956:	f00a fe6a 	bl	801162e <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800695a:	ee19 0a10 	vmov	r0, s18
 800695e:	4649      	mov	r1, r9
 8006960:	f00a fe52 	bl	8011608 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8006964:	2196      	movs	r1, #150	; 0x96
 8006966:	ee19 0a10 	vmov	r0, s18
 800696a:	2728      	movs	r7, #40	; 0x28
 800696c:	f00a fe50 	bl	8011610 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
 8006970:	f504 4a3a 	add.w	sl, r4, #47616	; 0xba00
    modalWindow1.hide();
 8006974:	ee19 0a10 	vmov	r0, s18
 8006978:	f00a fe3c 	bl	80115f4 <_ZN8touchgfx11ModalWindow4hideEv>
 800697c:	f10a 0070 	add.w	r0, sl, #112	; 0x70
 8006980:	2332      	movs	r3, #50	; 0x32
 8006982:	462a      	mov	r2, r5
 8006984:	4629      	mov	r1, r5
 8006986:	9700      	str	r7, [sp, #0]
 8006988:	f7fc f894 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800698c:	f64b 23a0 	movw	r3, #47776	; 0xbaa0
 8006990:	f04f 0101 	mov.w	r1, #1
 8006994:	52e1      	strh	r1, [r4, r3]
    flexButtonOkFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006996:	9904      	ldr	r1, [sp, #16]
 8006998:	4a22      	ldr	r2, [pc, #136]	; (8006a24 <_ZN15Screen1ViewBaseC1Ev+0x1398>)
 800699a:	4b23      	ldr	r3, [pc, #140]	; (8006a28 <_ZN15Screen1ViewBaseC1Ev+0x139c>)
 800699c:	9807      	ldr	r0, [sp, #28]
 800699e:	9100      	str	r1, [sp, #0]
 80069a0:	4922      	ldr	r1, [pc, #136]	; (8006a2c <_ZN15Screen1ViewBaseC1Ev+0x13a0>)
 80069a2:	f7fc f8c3 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80069a6:	4b22      	ldr	r3, [pc, #136]	; (8006a30 <_ZN15Screen1ViewBaseC1Ev+0x13a4>)
 80069a8:	9320      	str	r3, [sp, #128]	; 0x80
    flexButtonOkFilDataTime.setText(TypedText(T___SINGLEUSE_NY18));
 80069aa:	a820      	add	r0, sp, #128	; 0x80
 80069ac:	2344      	movs	r3, #68	; 0x44
 80069ae:	4601      	mov	r1, r0
 80069b0:	9807      	ldr	r0, [sp, #28]
 80069b2:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80069b6:	f7fc f8c5 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80069ba:	462a      	mov	r2, r5
 80069bc:	4629      	mov	r1, r5
 80069be:	f10a 00b4 	add.w	r0, sl, #180	; 0xb4
 80069c2:	2332      	movs	r3, #50	; 0x32
 80069c4:	9700      	str	r7, [sp, #0]
 80069c6:	f7fc f875 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80069ca:	f64b 23f0 	movw	r3, #47856	; 0xbaf0
        handlePressedUpdated();
 80069ce:	9807      	ldr	r0, [sp, #28]
        colorReleased = newColorReleased;
 80069d0:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 80069d2:	f64b 23f4 	movw	r3, #47860	; 0xbaf4
 80069d6:	f504 4a3a 	add.w	sl, r4, #47616	; 0xba00
 80069da:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 80069dc:	f7fb ff15 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonOkFilDataTime.setPosition(143, 222, 50, 40);
 80069e0:	22de      	movs	r2, #222	; 0xde
 80069e2:	9807      	ldr	r0, [sp, #28]
 80069e4:	9700      	str	r7, [sp, #0]
 80069e6:	2332      	movs	r3, #50	; 0x32
 80069e8:	218f      	movs	r1, #143	; 0x8f
 80069ea:	f7fc f863 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069ee:	f64b 236c 	movw	r3, #47724	; 0xba6c
 80069f2:	9903      	ldr	r1, [sp, #12]
 80069f4:	50e1      	str	r1, [r4, r3]
    modalWindow1.add(flexButtonOkFilDataTime);
 80069f6:	ee19 0a10 	vmov	r0, s18
 80069fa:	9907      	ldr	r1, [sp, #28]
 80069fc:	f00a fe01 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8006a00:	2332      	movs	r3, #50	; 0x32
 8006a02:	462a      	mov	r2, r5
 8006a04:	4629      	mov	r1, r5
 8006a06:	f50a 7096 	add.w	r0, sl, #300	; 0x12c
 8006a0a:	9700      	str	r7, [sp, #0]
 8006a0c:	f7fc f852 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a10:	f64b 335c 	movw	r3, #47964	; 0xbb5c
 8006a14:	f04f 0101 	mov.w	r1, #1
 8006a18:	52e1      	strh	r1, [r4, r3]
    flexButtonExitFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006a1a:	9904      	ldr	r1, [sp, #16]
 8006a1c:	4a01      	ldr	r2, [pc, #4]	; (8006a24 <_ZN15Screen1ViewBaseC1Ev+0x1398>)
 8006a1e:	e00f      	b.n	8006a40 <_ZN15Screen1ViewBaseC1Ev+0x13b4>
 8006a20:	ff0a0a0a 	.word	0xff0a0a0a
 8006a24:	ff0099cc 	.word	0xff0099cc
 8006a28:	ff003366 	.word	0xff003366
 8006a2c:	ff006699 	.word	0xff006699
 8006a30:	0802750c 	.word	0x0802750c
 8006a34:	08027501 	.word	0x08027501
 8006a38:	20027a0c 	.word	0x20027a0c
 8006a3c:	20027a04 	.word	0x20027a04
 8006a40:	4b8c      	ldr	r3, [pc, #560]	; (8006c74 <_ZN15Screen1ViewBaseC1Ev+0x15e8>)
 8006a42:	9808      	ldr	r0, [sp, #32]
 8006a44:	9100      	str	r1, [sp, #0]
 8006a46:	498c      	ldr	r1, [pc, #560]	; (8006c78 <_ZN15Screen1ViewBaseC1Ev+0x15ec>)
 8006a48:	f7fc f870 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006a4c:	4b8b      	ldr	r3, [pc, #556]	; (8006c7c <_ZN15Screen1ViewBaseC1Ev+0x15f0>)
    flexButtonExitFilDataTime.setText(TypedText(T___SINGLEUSE_BK1O));
 8006a4e:	9808      	ldr	r0, [sp, #32]
 8006a50:	9320      	str	r3, [sp, #128]	; 0x80
 8006a52:	a920      	add	r1, sp, #128	; 0x80
 8006a54:	2345      	movs	r3, #69	; 0x45
 8006a56:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8006a5a:	f7fc f873 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006a5e:	462a      	mov	r2, r5
 8006a60:	4629      	mov	r1, r5
 8006a62:	2332      	movs	r3, #50	; 0x32
 8006a64:	f50a 70b8 	add.w	r0, sl, #368	; 0x170
 8006a68:	9700      	str	r7, [sp, #0]
 8006a6a:	f7fc f823 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006a6e:	f64b 33ac 	movw	r3, #48044	; 0xbbac
        handlePressedUpdated();
 8006a72:	9808      	ldr	r0, [sp, #32]
        colorReleased = newColorReleased;
 8006a74:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8006a76:	f64b 33b0 	movw	r3, #48048	; 0xbbb0
 8006a7a:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8006a7c:	f7fb fec5 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonExitFilDataTime.setPosition(279, 222, 50, 40);
 8006a80:	22de      	movs	r2, #222	; 0xde
 8006a82:	9808      	ldr	r0, [sp, #32]
 8006a84:	9700      	str	r7, [sp, #0]
 8006a86:	2332      	movs	r3, #50	; 0x32
 8006a88:	f240 1117 	movw	r1, #279	; 0x117
 8006a8c:	f7fc f812 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a90:	f64b 3328 	movw	r3, #47912	; 0xbb28
 8006a94:	9903      	ldr	r1, [sp, #12]
 8006a96:	50e1      	str	r1, [r4, r3]
    modalWindow1.add(flexButtonExitFilDataTime);
 8006a98:	ee19 0a10 	vmov	r0, s18
 8006a9c:	9908      	ldr	r1, [sp, #32]
 8006a9e:	f00a fdb0 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textAreaDataStart.setXY(80, 25);
 8006aa2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006aa4:	2219      	movs	r2, #25
 8006aa6:	2150      	movs	r1, #80	; 0x50
 8006aa8:	f7fb fd30 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006aac:	f64b 33e4 	movw	r3, #48100	; 0xbbe4
    Unicode::snprintf(textAreaDataStartBuffer, TEXTAREADATASTART_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_68K3).getText());
 8006ab0:	f504 463c 	add.w	r6, r4, #48128	; 0xbc00
 8006ab4:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8006ab8:	f504 433b 	add.w	r3, r4, #47872	; 0xbb00
 8006abc:	3664      	adds	r6, #100	; 0x64
 8006abe:	f8a3 50e8 	strh.w	r5, [r3, #232]	; 0xe8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006ac2:	f8d8 3000 	ldr.w	r3, [r8]
 8006ac6:	2b00      	cmp	r3, #0
 8006ac8:	f43f a89f 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006acc:	f8bb 3000 	ldrh.w	r3, [fp]
 8006ad0:	2b4a      	cmp	r3, #74	; 0x4a
 8006ad2:	f67f a8a6 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8006ad6:	4a6a      	ldr	r2, [pc, #424]	; (8006c80 <_ZN15Screen1ViewBaseC1Ev+0x15f4>)
 8006ad8:	214a      	movs	r1, #74	; 0x4a
 8006ada:	6810      	ldr	r0, [r2, #0]
 8006adc:	f000 ff08 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006ae0:	4a68      	ldr	r2, [pc, #416]	; (8006c84 <_ZN15Screen1ViewBaseC1Ev+0x15f8>)
 8006ae2:	4603      	mov	r3, r0
 8006ae4:	210a      	movs	r1, #10
 8006ae6:	4630      	mov	r0, r6
 8006ae8:	f012 fd00 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006aec:	f64b 33f0 	movw	r3, #48112	; 0xbbf0
    textAreaDataStart.resizeToCurrentText();
 8006af0:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006af2:	50e6      	str	r6, [r4, r3]
 8006af4:	f00c fc46 	bl	8013384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006af8:	4b60      	ldr	r3, [pc, #384]	; (8006c7c <_ZN15Screen1ViewBaseC1Ev+0x15f0>)
    textAreaDataStart.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8GK));
 8006afa:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006afc:	9320      	str	r3, [sp, #128]	; 0x80
 8006afe:	a920      	add	r1, sp, #128	; 0x80
 8006b00:	2349      	movs	r3, #73	; 0x49
 8006b02:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8006b06:	f00c fc5a 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textAreaDataStart);
 8006b0a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006b0c:	ee19 0a10 	vmov	r0, s18
 8006b10:	f00a fd77 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textAreaDataStop.setXY(330, 25);
 8006b14:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006b16:	2219      	movs	r2, #25
 8006b18:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8006b1c:	f7fb fcf6 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006b20:	f64b 4324 	movw	r3, #48164	; 0xbc24
 8006b24:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8006b28:	f504 433b 	add.w	r3, r4, #47872	; 0xbb00
 8006b2c:	f8a3 5128 	strh.w	r5, [r3, #296]	; 0x128
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b30:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(textAreaDataStopBuffer, TEXTAREADATASTOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EEOS).getText());
 8006b34:	f504 453c 	add.w	r5, r4, #48128	; 0xbc00
 8006b38:	3578      	adds	r5, #120	; 0x78
 8006b3a:	2b00      	cmp	r3, #0
 8006b3c:	f43f a865 	beq.w	8005c0a <_ZN15Screen1ViewBaseC1Ev+0x57e>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006b40:	f8bb 3000 	ldrh.w	r3, [fp]
 8006b44:	2b4c      	cmp	r3, #76	; 0x4c
 8006b46:	f67f a86c 	bls.w	8005c22 <_ZN15Screen1ViewBaseC1Ev+0x596>
        return texts->getText(typedTextId);
 8006b4a:	4b4d      	ldr	r3, [pc, #308]	; (8006c80 <_ZN15Screen1ViewBaseC1Ev+0x15f4>)
 8006b4c:	214c      	movs	r1, #76	; 0x4c
 8006b4e:	6818      	ldr	r0, [r3, #0]
 8006b50:	f000 fece 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8006b54:	4a4b      	ldr	r2, [pc, #300]	; (8006c84 <_ZN15Screen1ViewBaseC1Ev+0x15f8>)
 8006b56:	4603      	mov	r3, r0
 8006b58:	210a      	movs	r1, #10
 8006b5a:	4628      	mov	r0, r5
 8006b5c:	f012 fcc6 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006b60:	f64b 4330 	movw	r3, #48176	; 0xbc30
    textAreaDataStop.resizeToCurrentText();
 8006b64:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006b66:	50e5      	str	r5, [r4, r3]
 8006b68:	f00c fc0c 	bl	8013384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006b6c:	4b43      	ldr	r3, [pc, #268]	; (8006c7c <_ZN15Screen1ViewBaseC1Ev+0x15f0>)
    textAreaDataStop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_01JS));
 8006b6e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006b70:	9320      	str	r3, [sp, #128]	; 0x80
 8006b72:	a920      	add	r1, sp, #128	; 0x80
 8006b74:	234b      	movs	r3, #75	; 0x4b
 8006b76:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8006b7a:	1d25      	adds	r5, r4, #4
 8006b7c:	f00c fc1f 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textAreaDataStop);
 8006b80:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006b82:	ee19 0a10 	vmov	r0, s18
 8006b86:	f00a fd3c 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8006b8a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8006b8c:	4628      	mov	r0, r5
 8006b8e:	f00a fe7f 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b92:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8006b94:	4628      	mov	r0, r5
 8006b96:	f00a fe7b 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b9a:	ee18 1a10 	vmov	r1, s16
 8006b9e:	4628      	mov	r0, r5
 8006ba0:	f00a fe76 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ba4:	9906      	ldr	r1, [sp, #24]
 8006ba6:	4628      	mov	r0, r5
 8006ba8:	f00a fe72 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bac:	ee19 1a90 	vmov	r1, s19
 8006bb0:	4628      	mov	r0, r5
 8006bb2:	f00a fe6d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bb6:	ee18 1a90 	vmov	r1, s17
 8006bba:	4628      	mov	r0, r5
 8006bbc:	f00a fe68 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bc0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006bc2:	4628      	mov	r0, r5
 8006bc4:	f00a fe64 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bc8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006bca:	4628      	mov	r0, r5
 8006bcc:	f00a fe60 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bd0:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006bd2:	4628      	mov	r0, r5
 8006bd4:	f00a fe5c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bd8:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006bda:	4628      	mov	r0, r5
 8006bdc:	f00a fe58 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006be0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006be2:	4628      	mov	r0, r5
 8006be4:	f00a fe54 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006be8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006bea:	4628      	mov	r0, r5
 8006bec:	f00a fe50 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bf0:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006bf2:	4628      	mov	r0, r5
 8006bf4:	f00a fe4c 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006bf8:	ee1a 1a10 	vmov	r1, s20
 8006bfc:	4628      	mov	r0, r5
 8006bfe:	f00a fe47 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c02:	ee1a 1a90 	vmov	r1, s21
 8006c06:	4628      	mov	r0, r5
 8006c08:	f00a fe42 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c0c:	ee1b 1a10 	vmov	r1, s22
 8006c10:	4628      	mov	r0, r5
 8006c12:	f00a fe3d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c16:	ee1b 1a90 	vmov	r1, s23
 8006c1a:	4628      	mov	r0, r5
 8006c1c:	f00a fe38 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c20:	ee1c 1a10 	vmov	r1, s24
 8006c24:	4628      	mov	r0, r5
 8006c26:	f00a fe33 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006c2c:	4628      	mov	r0, r5
 8006c2e:	f00a fe2f 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c32:	ee1c 1a90 	vmov	r1, s25
 8006c36:	4628      	mov	r0, r5
 8006c38:	f00a fe2a 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c3c:	9905      	ldr	r1, [sp, #20]
 8006c3e:	4628      	mov	r0, r5
 8006c40:	f00a fe26 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c44:	ee1d 1a10 	vmov	r1, s26
 8006c48:	4628      	mov	r0, r5
 8006c4a:	f00a fe21 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c4e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006c50:	4628      	mov	r0, r5
 8006c52:	f00a fe1d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c56:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006c58:	4628      	mov	r0, r5
 8006c5a:	f00a fe19 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c5e:	4628      	mov	r0, r5
 8006c60:	ee19 1a10 	vmov	r1, s18
 8006c64:	f00a fe14 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c68:	4620      	mov	r0, r4
 8006c6a:	b023      	add	sp, #140	; 0x8c
 8006c6c:	ecbd 8b10 	vpop	{d8-d15}
 8006c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c74:	ff003366 	.word	0xff003366
 8006c78:	ff006699 	.word	0xff006699
 8006c7c:	0802750c 	.word	0x0802750c
 8006c80:	20027a0c 	.word	0x20027a0c
 8006c84:	08027501 	.word	0x08027501

08006c88 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8006c88:	4770      	bx	lr

08006c8a <_ZN15Screen2ViewBase31CallbackcustomContainerKeyboardEv>:
     * Virtual Action Handlers
     */
    virtual void CallbackcustomContainerKeyboard()
    {
        // Override and implement this function in Screen2
    }
 8006c8a:	4770      	bx	lr

08006c8c <_ZN15Screen2ViewBase9function2Ev>:

    virtual void function2()
    {
        // Override and implement this function in Screen2
    }
 8006c8c:	4770      	bx	lr

08006c8e <_ZN15Screen2ViewBase9function3Ev>:

    virtual void function3()
    {
        // Override and implement this function in Screen2
    }
 8006c8e:	4770      	bx	lr

08006c90 <_ZN15Screen2ViewBase35CallbackcustomContainerKeyboard_NumEv>:

    virtual void CallbackcustomContainerKeyboard_Num()
    {
        // Override and implement this function in Screen2
    }
 8006c90:	4770      	bx	lr

08006c92 <_ZN15Screen2ViewBase20functionSaveSettingsEv>:

    virtual void functionSaveSettings()
    {
        // Override and implement this function in Screen2
    }
 8006c92:	4770      	bx	lr

08006c94 <_ZN15Screen2ViewBase23functionSaveModalWindowEv>:

    virtual void functionSaveModalWindow()
    {
        // Override and implement this function in Screen2
    }
 8006c94:	4770      	bx	lr

08006c96 <_ZN15Screen2ViewBase54customContainerKeyboard1TriggerKeyboardCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard1TriggerKeyboardCallbackHandler()
{
    //Interaction1
    //When customContainerKeyboard1 triggerKeyboard call virtual function
    //Call CallbackcustomContainerKeyboard
    CallbackcustomContainerKeyboard();
 8006c96:	6803      	ldr	r3, [r0, #0]
 8006c98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c9a:	4718      	bx	r3

08006c9c <_ZN15Screen2ViewBase62customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler()
{
    //Interaction4
    //When customContainerKeyboard_Num1 triggerKeyboard_Num call virtual function
    //Call CallbackcustomContainerKeyboard_Num
    CallbackcustomContainerKeyboard_Num();
 8006c9c:	6803      	ldr	r3, [r0, #0]
 8006c9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ca0:	4718      	bx	r3

08006ca2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8006ca2:	4770      	bx	lr

08006ca4 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006ca4:	4770      	bx	lr

08006ca6 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ca6:	4770      	bx	lr

08006ca8 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8006ca8:	4770      	bx	lr

08006caa <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED1Ev>:
class WildcardTextButtonStyle : public T
 8006caa:	4770      	bx	lr

08006cac <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvE7executeEv>:
    virtual void execute()
 8006cac:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8006cae:	68c2      	ldr	r2, [r0, #12]
 8006cb0:	6841      	ldr	r1, [r0, #4]
 8006cb2:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8006cb4:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8006cb6:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8006cba:	07d2      	lsls	r2, r2, #31
 8006cbc:	bf48      	it	mi
 8006cbe:	590a      	ldrmi	r2, [r1, r4]
 8006cc0:	689b      	ldr	r3, [r3, #8]
    }
 8006cc2:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8006cc6:	bf48      	it	mi
 8006cc8:	58d3      	ldrmi	r3, [r2, r3]
 8006cca:	4718      	bx	r3

08006ccc <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8006ccc:	6843      	ldr	r3, [r0, #4]
 8006cce:	b12b      	cbz	r3, 8006cdc <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x10>
 8006cd0:	6883      	ldr	r3, [r0, #8]
 8006cd2:	b92b      	cbnz	r3, 8006ce0 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x14>
 8006cd4:	68c0      	ldr	r0, [r0, #12]
 8006cd6:	f000 0001 	and.w	r0, r0, #1
 8006cda:	4770      	bx	lr
 8006cdc:	4618      	mov	r0, r3
 8006cde:	4770      	bx	lr
 8006ce0:	2001      	movs	r0, #1
    }
 8006ce2:	4770      	bx	lr

08006ce4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006ce4:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006ce6:	68c2      	ldr	r2, [r0, #12]
 8006ce8:	6844      	ldr	r4, [r0, #4]
 8006cea:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006cec:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8006cee:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006cf2:	07d2      	lsls	r2, r2, #31
 8006cf4:	bf48      	it	mi
 8006cf6:	5962      	ldrmi	r2, [r4, r5]
 8006cf8:	689b      	ldr	r3, [r3, #8]
    }
 8006cfa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006cfc:	bf48      	it	mi
 8006cfe:	58d3      	ldrmi	r3, [r2, r3]
 8006d00:	4718      	bx	r3

08006d02 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8006d02:	6843      	ldr	r3, [r0, #4]
 8006d04:	b12b      	cbz	r3, 8006d12 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8006d06:	6883      	ldr	r3, [r0, #8]
 8006d08:	b92b      	cbnz	r3, 8006d16 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8006d0a:	68c0      	ldr	r0, [r0, #12]
 8006d0c:	f000 0001 	and.w	r0, r0, #1
 8006d10:	4770      	bx	lr
 8006d12:	4618      	mov	r0, r3
 8006d14:	4770      	bx	lr
 8006d16:	2001      	movs	r0, #1
    }
 8006d18:	4770      	bx	lr

08006d1a <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006d1a:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006d1c:	68c2      	ldr	r2, [r0, #12]
 8006d1e:	6844      	ldr	r4, [r0, #4]
 8006d20:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006d22:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8006d24:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006d28:	07d2      	lsls	r2, r2, #31
 8006d2a:	bf48      	it	mi
 8006d2c:	5962      	ldrmi	r2, [r4, r5]
 8006d2e:	689b      	ldr	r3, [r3, #8]
    }
 8006d30:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006d32:	bf48      	it	mi
 8006d34:	58d3      	ldrmi	r3, [r2, r3]
 8006d36:	4718      	bx	r3

08006d38 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8006d38:	6843      	ldr	r3, [r0, #4]
 8006d3a:	b12b      	cbz	r3, 8006d48 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006d3c:	6883      	ldr	r3, [r0, #8]
 8006d3e:	b92b      	cbnz	r3, 8006d4c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006d40:	68c0      	ldr	r0, [r0, #12]
 8006d42:	f000 0001 	and.w	r0, r0, #1
 8006d46:	4770      	bx	lr
 8006d48:	4618      	mov	r0, r3
 8006d4a:	4770      	bx	lr
 8006d4c:	2001      	movs	r0, #1
    }
 8006d4e:	4770      	bx	lr

08006d50 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE18handleAlphaUpdatedEv>:
        wildcardText.setAlpha(T::getAlpha());
 8006d50:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8006d54:	f880 30de 	strb.w	r3, [r0, #222]	; 0xde
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8006d58:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
        alpha = newAlpha;
 8006d5c:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    }
 8006d60:	4770      	bx	lr

08006d62 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
 8006d62:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8006d66:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
 8006d6a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8006d6e:	4770      	bx	lr

08006d70 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006d70:	b510      	push	{r4, lr}
 8006d72:	2110      	movs	r1, #16
 8006d74:	4604      	mov	r4, r0
 8006d76:	f01e fcf5 	bl	8025764 <_ZdlPvj>
 8006d7a:	4620      	mov	r0, r4
 8006d7c:	bd10      	pop	{r4, pc}

08006d7e <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d7e:	b510      	push	{r4, lr}
 8006d80:	2110      	movs	r1, #16
 8006d82:	4604      	mov	r4, r0
 8006d84:	f01e fcee 	bl	8025764 <_ZdlPvj>
 8006d88:	4620      	mov	r0, r4
 8006d8a:	bd10      	pop	{r4, pc}

08006d8c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8006d8c:	b510      	push	{r4, lr}
 8006d8e:	2110      	movs	r1, #16
 8006d90:	4604      	mov	r4, r0
 8006d92:	f01e fce7 	bl	8025764 <_ZdlPvj>
 8006d96:	4620      	mov	r0, r4
 8006d98:	bd10      	pop	{r4, pc}

08006d9a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8006d9a:	b510      	push	{r4, lr}
 8006d9c:	21a8      	movs	r1, #168	; 0xa8
 8006d9e:	4604      	mov	r4, r0
 8006da0:	f01e fce0 	bl	8025764 <_ZdlPvj>
 8006da4:	4620      	mov	r0, r4
 8006da6:	bd10      	pop	{r4, pc}

08006da8 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED0Ev>:
class WildcardTextButtonStyle : public T
 8006da8:	b510      	push	{r4, lr}
 8006daa:	21f0      	movs	r1, #240	; 0xf0
 8006dac:	4604      	mov	r4, r0
 8006dae:	f01e fcd9 	bl	8025764 <_ZdlPvj>
 8006db2:	4620      	mov	r0, r4
 8006db4:	bd10      	pop	{r4, pc}

08006db6 <_ZN15Screen2ViewBaseD0Ev>:
    virtual ~Screen2ViewBase() {}
 8006db6:	b510      	push	{r4, lr}
 8006db8:	f244 5178 	movw	r1, #17784	; 0x4578
 8006dbc:	4604      	mov	r4, r0
 8006dbe:	f01e fcd1 	bl	8025764 <_ZdlPvj>
 8006dc2:	4620      	mov	r0, r4
 8006dc4:	bd10      	pop	{r4, pc}

08006dc6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8006dc6:	b510      	push	{r4, lr}
 8006dc8:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8006dca:	307c      	adds	r0, #124	; 0x7c
 8006dcc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8006dd0:	b13b      	cbz	r3, 8006de2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8006dd2:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8006dd6:	f00c fe25 	bl	8013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8006dda:	4620      	mov	r0, r4
 8006ddc:	f7fb fad4 	bl	8002388 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8006de0:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8006de2:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8006de6:	e7f6      	b.n	8006dd6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08006de8 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8006de8:	b508      	push	{r3, lr}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8006dea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006dee:	b133      	cbz	r3, 8006dfe <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x16>
 8006df0:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
        this->color = color;
 8006df4:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
        T::handlePressedUpdated();
 8006df8:	f7ff ffe5 	bl	8006dc6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    }
 8006dfc:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8006dfe:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
 8006e02:	e7f7      	b.n	8006df4 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0xc>

08006e04 <_ZN15Screen2ViewBase11setupScreenEv>:
{
 8006e04:	b510      	push	{r4, lr}
 8006e06:	4604      	mov	r4, r0
    customContainerKeyboard1.initialize();
 8006e08:	30a0      	adds	r0, #160	; 0xa0
 8006e0a:	f000 ffc3 	bl	8007d94 <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard_Num1.initialize();
 8006e0e:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
 8006e12:	3038      	adds	r0, #56	; 0x38
}
 8006e14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerKeyboard_Num1.initialize();
 8006e18:	f001 b822 	b.w	8007e60 <_ZN27CustomContainerKeyboard_Num10initializeEv>

08006e1c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_text_out)
 8006e1c:	f500 523d 	add.w	r2, r0, #12096	; 0x2f40
 8006e20:	3208      	adds	r2, #8
 8006e22:	4291      	cmp	r1, r2
{
 8006e24:	4603      	mov	r3, r0
    if (&src == &flexButton_text_out)
 8006e26:	d102      	bne.n	8006e2e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12>
    {
        //Interaction2
        //When flexButton_text_out clicked call virtual function
        //Call function2
        function2();
 8006e28:	6803      	ldr	r3, [r0, #0]
 8006e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonSaveYes)
    {
        //Interaction6
        //When flexButtonSaveYes clicked call virtual function
        //Call functionSaveModalWindow
        functionSaveModalWindow();
 8006e2c:	4718      	bx	r3
    else if (&src == &flexButton_text_out_Num)
 8006e2e:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 8006e32:	3274      	adds	r2, #116	; 0x74
 8006e34:	4291      	cmp	r1, r2
 8006e36:	d102      	bne.n	8006e3e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
        function3();
 8006e38:	6803      	ldr	r3, [r0, #0]
 8006e3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e3c:	e7f6      	b.n	8006e2c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSave)
 8006e3e:	f500 4283 	add.w	r2, r0, #16768	; 0x4180
 8006e42:	3234      	adds	r2, #52	; 0x34
 8006e44:	4291      	cmp	r1, r2
 8006e46:	d102      	bne.n	8006e4e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        functionSaveSettings();
 8006e48:	6803      	ldr	r3, [r0, #0]
 8006e4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e4c:	e7ee      	b.n	8006e2c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveNo)
 8006e4e:	f500 4286 	add.w	r2, r0, #17152	; 0x4300
 8006e52:	3220      	adds	r2, #32
 8006e54:	4291      	cmp	r1, r2
 8006e56:	d102      	bne.n	8006e5e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        functionSaveModalWindow();
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e5c:	e7e6      	b.n	8006e2c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveYes)
 8006e5e:	f500 4287 	add.w	r2, r0, #17280	; 0x4380
 8006e62:	325c      	adds	r2, #92	; 0x5c
 8006e64:	4291      	cmp	r1, r2
 8006e66:	d0f7      	beq.n	8006e58 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    }
}
 8006e68:	4770      	bx	lr

08006e6a <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 8006e6a:	306c      	adds	r0, #108	; 0x6c
 8006e6c:	4288      	cmp	r0, r1
{
 8006e6e:	b508      	push	{r3, lr}
    if (&src == &button1)
 8006e70:	d105      	bne.n	8006e7e <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e72:	f00e fe93 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
}
 8006e76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8006e7a:	f7fd bf5b 	b.w	8004d34 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8006e7e:	bd08      	pop	{r3, pc}

08006e80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8006e80:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8006e82:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8006e86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8006e8a:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8006e8e:	8813      	ldrh	r3, [r2, #0]
 8006e90:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8006e94:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8006e96:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8006e9a:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8006e9c:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8006e9e:	f3c1 054f 	ubfx	r5, r1, #1, #16
 8006ea2:	f012 fc03 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8006ea6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8006eaa:	4680      	mov	r8, r0
 8006eac:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8006eb0:	4638      	mov	r0, r7
 8006eb2:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8006eb6:	f012 fc33 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8006eba:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 8006ebe:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 8006ec2:	b212      	sxth	r2, r2
 8006ec4:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8006ec8:	b209      	sxth	r1, r1
 8006eca:	f7fb fb1f 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8006ece:	6823      	ldr	r3, [r4, #0]
 8006ed0:	4620      	mov	r0, r4
 8006ed2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8006ed6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8006eda:	4718      	bx	r3

08006edc <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 8006edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ee0:	ed2d 8b08 	vpush	{d8-d11}
 8006ee4:	4604      	mov	r4, r0
 8006ee6:	b08b      	sub	sp, #44	; 0x2c
 8006ee8:	f010 f89e 	bl	8017028 <_ZN8touchgfx6ScreenC1Ev>
    customContainerKeyboard_Num1TriggerKeyboard_NumCallback(this, &Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler)
 8006eec:	4622      	mov	r2, r4
 8006eee:	2500      	movs	r5, #0
 8006ef0:	4bd8      	ldr	r3, [pc, #864]	; (8007254 <_ZN15Screen2ViewBaseC1Ev+0x378>)
 8006ef2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006ef4:	f842 3b40 	str.w	r3, [r2], #64
 8006ef8:	4610      	mov	r0, r2
 8006efa:	ee09 2a90 	vmov	s19, r2
 8006efe:	f7fb fde5 	bl	8002acc <_ZN8touchgfx3BoxC1Ev>
 8006f02:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8006f06:	ee0a 3a10 	vmov	s20, r3
        : Widget(), action(), pressed(false)
 8006f0a:	2226      	movs	r2, #38	; 0x26
 8006f0c:	4629      	mov	r1, r5
 8006f0e:	4618      	mov	r0, r3
 8006f10:	f01e fe04 	bl	8025b1c <memset>
 8006f14:	ee1a 0a10 	vmov	r0, s20
 8006f18:	f7fb fae6 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8006f1c:	f04f 0301 	mov.w	r3, #1
 8006f20:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 8006f24:	4bcc      	ldr	r3, [pc, #816]	; (8007258 <_ZN15Screen2ViewBaseC1Ev+0x37c>)
 8006f26:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f28:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8006f2c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8006f30:	f642 7848 	movw	r8, #12104	; 0x2f48
 8006f34:	eb04 0608 	add.w	r6, r4, r8
 8006f38:	4618      	mov	r0, r3
 8006f3a:	f8a4 709a 	strh.w	r7, [r4, #154]	; 0x9a
 8006f3e:	f8a4 709c 	strh.w	r7, [r4, #156]	; 0x9c
 8006f42:	f884 709e 	strb.w	r7, [r4, #158]	; 0x9e
 8006f46:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8006f4a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8006f4e:	ee0b 3a10 	vmov	s22, r3
 8006f52:	f000 fed7 	bl	8007d04 <_ZN23CustomContainerKeyboardC1Ev>
        : T()
 8006f56:	4630      	mov	r0, r6
 8006f58:	f7fb fe12 	bl	8002b80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006f5c:	4bbf      	ldr	r3, [pc, #764]	; (800725c <_ZN15Screen2ViewBaseC1Ev+0x380>)
 8006f5e:	f844 3008 	str.w	r3, [r4, r8]
 8006f62:	f504 533f 	add.w	r3, r4, #12224	; 0x2fc0
        : Widget(), bitmap(bitmap), alpha(255)
 8006f66:	f642 7bc4 	movw	fp, #12228	; 0x2fc4
 8006f6a:	801f      	strh	r7, [r3, #0]
 8006f6c:	f642 73c2 	movw	r3, #12226	; 0x2fc2
 8006f70:	eb04 0a0b 	add.w	sl, r4, fp
 8006f74:	2226      	movs	r2, #38	; 0x26
 8006f76:	52e7      	strh	r7, [r4, r3]
 8006f78:	f106 097c 	add.w	r9, r6, #124	; 0x7c
 8006f7c:	4629      	mov	r1, r5
 8006f7e:	4650      	mov	r0, sl
 8006f80:	f8ad 7020 	strh.w	r7, [sp, #32]
 8006f84:	f01e fdca 	bl	8025b1c <memset>
 8006f88:	4648      	mov	r0, r9
 8006f8a:	f7fb faad 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8006f8e:	4bb4      	ldr	r3, [pc, #720]	; (8007260 <_ZN15Screen2ViewBaseC1Ev+0x384>)
 8006f90:	f844 300b 	str.w	r3, [r4, fp]
 8006f94:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8006f98:	f8aa 3026 	strh.w	r3, [sl, #38]	; 0x26
 8006f9c:	f88a 7028 	strb.w	r7, [sl, #40]	; 0x28
        Image::setBitmap(bitmap);
 8006fa0:	4648      	mov	r0, r9
 8006fa2:	a908      	add	r1, sp, #32
 8006fa4:	f00c fd3e 	bl	8013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
 8006fa8:	4649      	mov	r1, r9
 8006faa:	4630      	mov	r0, r6
 8006fac:	f00a fc70 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8006fb0:	4bac      	ldr	r3, [pc, #688]	; (8007264 <_ZN15Screen2ViewBaseC1Ev+0x388>)
 8006fb2:	f844 3008 	str.w	r3, [r4, r8]
 8006fb6:	f106 08a8 	add.w	r8, r6, #168	; 0xa8
        : TextArea(), wildcard(0)
 8006fba:	4640      	mov	r0, r8
 8006fbc:	f7fb fd9a 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8006fc0:	f642 73f0 	movw	r3, #12272	; 0x2ff0
 8006fc4:	18e2      	adds	r2, r4, r3
 8006fc6:	f8df 92d8 	ldr.w	r9, [pc, #728]	; 80072a0 <_ZN15Screen2ViewBaseC1Ev+0x3c4>
 8006fca:	f844 9003 	str.w	r9, [r4, r3]
 8006fce:	63d5      	str	r5, [r2, #60]	; 0x3c
        : color(0)
 8006fd0:	f243 0330 	movw	r3, #12336	; 0x3030
 8006fd4:	f243 0234 	movw	r2, #12340	; 0x3034
        T::add(wildcardText);
 8006fd8:	4641      	mov	r1, r8
 8006fda:	50e5      	str	r5, [r4, r3]
 8006fdc:	4630      	mov	r0, r6
 8006fde:	50a5      	str	r5, [r4, r2]
 8006fe0:	f00a fc56 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006fe4:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8006fe8:	3338      	adds	r3, #56	; 0x38
 8006fea:	f244 07f4 	movw	r7, #16628	; 0x40f4
 8006fee:	4618      	mov	r0, r3
 8006ff0:	ee0a 3a90 	vmov	s21, r3
 8006ff4:	f000 ff3e 	bl	8007e74 <_ZN27CustomContainerKeyboard_NumC1Ev>
 8006ff8:	19e3      	adds	r3, r4, r7
 8006ffa:	ee08 3a90 	vmov	s17, r3
        : T()
 8006ffe:	4618      	mov	r0, r3
 8007000:	f7fb fdbe 	bl	8002b80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8007004:	4b98      	ldr	r3, [pc, #608]	; (8007268 <_ZN15Screen2ViewBaseC1Ev+0x38c>)
 8007006:	51e3      	str	r3, [r4, r7]
 8007008:	ee18 3a90 	vmov	r3, s17
 800700c:	f103 0778 	add.w	r7, r3, #120	; 0x78
 8007010:	4638      	mov	r0, r7
 8007012:	f7fb fd6f 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8007016:	f244 136c 	movw	r3, #16748	; 0x416c
 800701a:	18e2      	adds	r2, r4, r3
 800701c:	f244 10ac 	movw	r0, #16812	; 0x41ac
 8007020:	f844 9003 	str.w	r9, [r4, r3]
 8007024:	63d5      	str	r5, [r2, #60]	; 0x3c
 8007026:	5025      	str	r5, [r4, r0]
 8007028:	f244 10b0 	movw	r0, #16816	; 0x41b0
 800702c:	f504 4983 	add.w	r9, r4, #16768	; 0x4180
        T::add(wildcardText);
 8007030:	4639      	mov	r1, r7
 8007032:	5025      	str	r5, [r4, r0]
 8007034:	f109 0934 	add.w	r9, r9, #52	; 0x34
 8007038:	ee18 0a90 	vmov	r0, s17
 800703c:	f504 4a84 	add.w	sl, r4, #16896	; 0x4200
 8007040:	f00a fc26 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007044:	f10a 0a70 	add.w	sl, sl, #112	; 0x70
 8007048:	4648      	mov	r0, r9
 800704a:	f7fb fdc5 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800704e:	4650      	mov	r0, sl
 8007050:	f00a fb2e 	bl	80116b0 <_ZN8touchgfx11ModalWindowC1Ev>
 8007054:	f504 4386 	add.w	r3, r4, #17152	; 0x4300
 8007058:	3320      	adds	r3, #32
 800705a:	f504 4b87 	add.w	fp, r4, #17280	; 0x4380
 800705e:	4618      	mov	r0, r3
 8007060:	f10b 0b5c 	add.w	fp, fp, #92	; 0x5c
 8007064:	ee08 3a10 	vmov	s16, r3
 8007068:	f7fb fdb6 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800706c:	4658      	mov	r0, fp
 800706e:	f7fb fdb3 	bl	8002bd8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8007072:	f504 4389 	add.w	r3, r4, #17536	; 0x4480
 8007076:	3318      	adds	r3, #24
 8007078:	4618      	mov	r0, r3
 800707a:	ee09 3a10 	vmov	s18, r3
 800707e:	f7fb fd39 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8007082:	f244 5338 	movw	r3, #17720	; 0x4538
 8007086:	18e2      	adds	r2, r4, r3
 8007088:	9203      	str	r2, [sp, #12]
 800708a:	4a78      	ldr	r2, [pc, #480]	; (800726c <_ZN15Screen2ViewBaseC1Ev+0x390>)
 800708c:	50e2      	str	r2, [r4, r3]
 800708e:	9b03      	ldr	r3, [sp, #12]
 8007090:	4a77      	ldr	r2, [pc, #476]	; (8007270 <_ZN15Screen2ViewBaseC1Ev+0x394>)
 8007092:	605c      	str	r4, [r3, #4]
 8007094:	f244 5340 	movw	r3, #17728	; 0x4540
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8007098:	4976      	ldr	r1, [pc, #472]	; (8007274 <_ZN15Screen2ViewBaseC1Ev+0x398>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800709a:	50e2      	str	r2, [r4, r3]
 800709c:	f244 5344 	movw	r3, #17732	; 0x4544
    __background.setPosition(0, 0, 800, 480);
 80070a0:	ee19 0a90 	vmov	r0, s19
 80070a4:	50e5      	str	r5, [r4, r3]
 80070a6:	f244 5348 	movw	r3, #17736	; 0x4548
 80070aa:	18e2      	adds	r2, r4, r3
 80070ac:	9202      	str	r2, [sp, #8]
 80070ae:	4a72      	ldr	r2, [pc, #456]	; (8007278 <_ZN15Screen2ViewBaseC1Ev+0x39c>)
 80070b0:	50e2      	str	r2, [r4, r3]
 80070b2:	9b02      	ldr	r3, [sp, #8]
 80070b4:	4a71      	ldr	r2, [pc, #452]	; (800727c <_ZN15Screen2ViewBaseC1Ev+0x3a0>)
 80070b6:	605c      	str	r4, [r3, #4]
 80070b8:	f244 5350 	movw	r3, #17744	; 0x4550
 80070bc:	50e2      	str	r2, [r4, r3]
 80070be:	f244 5354 	movw	r3, #17748	; 0x4554
 80070c2:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 80070c4:	f244 5358 	movw	r3, #17752	; 0x4558
 80070c8:	18e2      	adds	r2, r4, r3
 80070ca:	9204      	str	r2, [sp, #16]
 80070cc:	4a6c      	ldr	r2, [pc, #432]	; (8007280 <_ZN15Screen2ViewBaseC1Ev+0x3a4>)
 80070ce:	50e2      	str	r2, [r4, r3]
 80070d0:	9b04      	ldr	r3, [sp, #16]
 80070d2:	605c      	str	r4, [r3, #4]
 80070d4:	f244 5360 	movw	r3, #17760	; 0x4560
 80070d8:	50e1      	str	r1, [r4, r3]
 80070da:	f244 5364 	movw	r3, #17764	; 0x4564
 80070de:	50e5      	str	r5, [r4, r3]
 80070e0:	f244 5368 	movw	r3, #17768	; 0x4568
 80070e4:	18e1      	adds	r1, r4, r3
 80070e6:	50e2      	str	r2, [r4, r3]
 80070e8:	f244 5370 	movw	r3, #17776	; 0x4570
 80070ec:	4a65      	ldr	r2, [pc, #404]	; (8007284 <_ZN15Screen2ViewBaseC1Ev+0x3a8>)
 80070ee:	604c      	str	r4, [r1, #4]
 80070f0:	50e2      	str	r2, [r4, r3]
 80070f2:	f244 5374 	movw	r3, #17780	; 0x4574
 80070f6:	9105      	str	r1, [sp, #20]
 80070f8:	50e5      	str	r5, [r4, r3]
 80070fa:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80070fe:	9300      	str	r3, [sp, #0]
 8007100:	462a      	mov	r2, r5
 8007102:	f44f 7348 	mov.w	r3, #800	; 0x320
 8007106:	4629      	mov	r1, r5
 8007108:	f7fb fcd4 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800710c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007110:	66a3      	str	r3, [r4, #104]	; 0x68
    button1.setXY(0, 0);
 8007112:	ee1a 0a10 	vmov	r0, s20
 8007116:	462a      	mov	r2, r5
 8007118:	4629      	mov	r1, r5
 800711a:	f7fb f9f7 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800711e:	f10d 0c1c 	add.w	ip, sp, #28
 8007122:	f04f 0001 	mov.w	r0, #1
 8007126:	4661      	mov	r1, ip
 8007128:	f8ad 0020 	strh.w	r0, [sp, #32]
 800712c:	aa08      	add	r2, sp, #32
 800712e:	ee1a 0a10 	vmov	r0, s20
 8007132:	f8ad 501c 	strh.w	r5, [sp, #28]
 8007136:	f00c f985 	bl	8013444 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        action = &callback;
 800713a:	9b03      	ldr	r3, [sp, #12]
 800713c:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    customContainerKeyboard1.setXY(0, 480);
 8007140:	ee1b 0a10 	vmov	r0, s22
 8007144:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007148:	4629      	mov	r1, r5
 800714a:	f7fb f9df 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboardCallback = &callback;
 800714e:	f642 5384 	movw	r3, #11652	; 0x2d84
 8007152:	9a04      	ldr	r2, [sp, #16]
 8007154:	50e2      	str	r2, [r4, r3]
 8007156:	2332      	movs	r3, #50	; 0x32
 8007158:	9300      	str	r3, [sp, #0]
 800715a:	462a      	mov	r2, r5
 800715c:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8007160:	4629      	mov	r1, r5
 8007162:	f106 0034 	add.w	r0, r6, #52	; 0x34
 8007166:	f7fb fca5 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800716a:	f642 73ac 	movw	r3, #12204	; 0x2fac
 800716e:	f04f 0c05 	mov.w	ip, #5
 8007172:	f824 c003 	strh.w	ip, [r4, r3]
    flexButton_text_out.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007176:	4b44      	ldr	r3, [pc, #272]	; (8007288 <_ZN15Screen2ViewBaseC1Ev+0x3ac>)
 8007178:	9300      	str	r3, [sp, #0]
 800717a:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800717e:	4a43      	ldr	r2, [pc, #268]	; (800728c <_ZN15Screen2ViewBaseC1Ev+0x3b0>)
 8007180:	4943      	ldr	r1, [pc, #268]	; (8007290 <_ZN15Screen2ViewBaseC1Ev+0x3b4>)
 8007182:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8007186:	4630      	mov	r0, r6
 8007188:	f7fb fcd0 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_text_out.setIconBitmaps(Bitmap(BITMAP_KEYBOARD_ID), Bitmap(BITMAP_KEYBOARD_ID));
 800718c:	f10d 0c1c 	add.w	ip, sp, #28
 8007190:	2308      	movs	r3, #8
 8007192:	4661      	mov	r1, ip
 8007194:	aa08      	add	r2, sp, #32
 8007196:	4630      	mov	r0, r6
 8007198:	f8ad 301c 	strh.w	r3, [sp, #28]
 800719c:	f8ad 3020 	strh.w	r3, [sp, #32]
 80071a0:	f7ff fe6e 	bl	8006e80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 80071a4:	f642 73c8 	movw	r3, #12232	; 0x2fc8
        wildcardText.setTypedText(t);
 80071a8:	f10d 0c20 	add.w	ip, sp, #32
 80071ac:	4a39      	ldr	r2, [pc, #228]	; (8007294 <_ZN15Screen2ViewBaseC1Ev+0x3b8>)
 80071ae:	50e2      	str	r2, [r4, r3]
 80071b0:	4661      	mov	r1, ip
 80071b2:	4a39      	ldr	r2, [pc, #228]	; (8007298 <_ZN15Screen2ViewBaseC1Ev+0x3bc>)
 80071b4:	9208      	str	r2, [sp, #32]
 80071b6:	230e      	movs	r3, #14
 80071b8:	4640      	mov	r0, r8
 80071ba:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80071be:	f00c f8fe 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80071c2:	f642 7352 	movw	r3, #12114	; 0x2f52
 80071c6:	4640      	mov	r0, r8
 80071c8:	5ee2      	ldrsh	r2, [r4, r3]
 80071ca:	f642 7350 	movw	r3, #12112	; 0x2f50
 80071ce:	5ee1      	ldrsh	r1, [r4, r3]
 80071d0:	f7fb f809 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_text_outBuffer[0] = 0;
 80071d4:	f244 43d4 	movw	r3, #17620	; 0x44d4
 80071d8:	18e2      	adds	r2, r4, r3
 80071da:	52e5      	strh	r5, [r4, r3]
        wildcard = value;
 80071dc:	f243 032c 	movw	r3, #12332	; 0x302c
        wildcardText.setPosition(x, y, width, height);
 80071e0:	f04f 0c32 	mov.w	ip, #50	; 0x32
 80071e4:	f8cd c000 	str.w	ip, [sp]
 80071e8:	50e2      	str	r2, [r4, r3]
 80071ea:	4640      	mov	r0, r8
 80071ec:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80071f0:	462a      	mov	r2, r5
 80071f2:	4629      	mov	r1, r5
 80071f4:	f7fb fc5e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80071f8:	f243 0130 	movw	r1, #12336	; 0x3030
 80071fc:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 80072a4 <_ZN15Screen2ViewBaseC1Ev+0x3c8>
 8007200:	f844 8001 	str.w	r8, [r4, r1]
        colorPressed = newColorPressed;
 8007204:	f243 0134 	movw	r1, #12340	; 0x3034
        handlePressedUpdated();
 8007208:	4630      	mov	r0, r6
        colorPressed = newColorPressed;
 800720a:	f844 8001 	str.w	r8, [r4, r1]
        handlePressedUpdated();
 800720e:	f7ff fdeb 	bl	8006de8 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>
    flexButton_text_out.setPosition(407, 25, 384, 50);
 8007212:	2132      	movs	r1, #50	; 0x32
 8007214:	9100      	str	r1, [sp, #0]
 8007216:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800721a:	2219      	movs	r2, #25
 800721c:	f240 1197 	movw	r1, #407	; 0x197
 8007220:	4630      	mov	r0, r6
 8007222:	f7fb fc47 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007226:	f642 7378 	movw	r3, #12152	; 0x2f78
 800722a:	9902      	ldr	r1, [sp, #8]
 800722c:	50e1      	str	r1, [r4, r3]
    customContainerKeyboard_Num1.setXY(-270, 180);
 800722e:	ee1a 0a90 	vmov	r0, s21
 8007232:	491a      	ldr	r1, [pc, #104]	; (800729c <_ZN15Screen2ViewBaseC1Ev+0x3c0>)
 8007234:	22b4      	movs	r2, #180	; 0xb4
 8007236:	f7fb f969 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboard_NumCallback = &callback;
 800723a:	f244 03e0 	movw	r3, #16608	; 0x40e0
 800723e:	9905      	ldr	r1, [sp, #20]
 8007240:	50e1      	str	r1, [r4, r3]
 8007242:	ee18 0a90 	vmov	r0, s17
 8007246:	212d      	movs	r1, #45	; 0x2d
 8007248:	9100      	str	r1, [sp, #0]
 800724a:	23c7      	movs	r3, #199	; 0xc7
 800724c:	462a      	mov	r2, r5
 800724e:	4629      	mov	r1, r5
 8007250:	3034      	adds	r0, #52	; 0x34
 8007252:	e029      	b.n	80072a8 <_ZN15Screen2ViewBaseC1Ev+0x3cc>
 8007254:	08028234 	.word	0x08028234
 8007258:	0802a03c 	.word	0x0802a03c
 800725c:	080280b4 	.word	0x080280b4
 8007260:	0802a264 	.word	0x0802a264
 8007264:	08028150 	.word	0x08028150
 8007268:	080275b4 	.word	0x080275b4
 800726c:	080281ec 	.word	0x080281ec
 8007270:	08006e6b 	.word	0x08006e6b
 8007274:	08006c97 	.word	0x08006c97
 8007278:	08028204 	.word	0x08028204
 800727c:	08006e1d 	.word	0x08006e1d
 8007280:	0802821c 	.word	0x0802821c
 8007284:	08006c9d 	.word	0x08006c9d
 8007288:	ff336699 	.word	0xff336699
 800728c:	ff0099cc 	.word	0xff0099cc
 8007290:	ff006699 	.word	0xff006699
 8007294:	000e0162 	.word	0x000e0162
 8007298:	0802750c 	.word	0x0802750c
 800729c:	fffffef2 	.word	0xfffffef2
 80072a0:	0802a0e0 	.word	0x0802a0e0
 80072a4:	ff0a0a0a 	.word	0xff0a0a0a
 80072a8:	f7fb fc04 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072ac:	f244 1358 	movw	r3, #16728	; 0x4158
 80072b0:	f04f 0001 	mov.w	r0, #1
 80072b4:	52e0      	strh	r0, [r4, r3]
    flexButton_text_out_Num.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80072b6:	4bc8      	ldr	r3, [pc, #800]	; (80075d8 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80072b8:	9300      	str	r3, [sp, #0]
 80072ba:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80072be:	4ac7      	ldr	r2, [pc, #796]	; (80075dc <_ZN15Screen2ViewBaseC1Ev+0x700>)
 80072c0:	49c7      	ldr	r1, [pc, #796]	; (80075e0 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 80072c2:	ee18 0a90 	vmov	r0, s17
 80072c6:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80072ca:	f7fb fc2f 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80072ce:	4ac5      	ldr	r2, [pc, #788]	; (80075e4 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80072d0:	9208      	str	r2, [sp, #32]
 80072d2:	2317      	movs	r3, #23
        wildcardText.setTypedText(t);
 80072d4:	a908      	add	r1, sp, #32
 80072d6:	4638      	mov	r0, r7
 80072d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80072dc:	f00c f86f 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80072e0:	f244 03fe 	movw	r3, #16638	; 0x40fe
 80072e4:	4638      	mov	r0, r7
 80072e6:	5ee2      	ldrsh	r2, [r4, r3]
 80072e8:	f244 03fc 	movw	r3, #16636	; 0x40fc
 80072ec:	5ee1      	ldrsh	r1, [r4, r3]
 80072ee:	f7fa ff7a 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    Unicode::snprintf(flexButton_text_out_NumBuffer, FLEXBUTTON_TEXT_OUT_NUM_SIZE, "%s", TypedText(T___SINGLEUSE_D72U).getText());
 80072f2:	f504 438a 	add.w	r3, r4, #17664	; 0x4500
 80072f6:	3324      	adds	r3, #36	; 0x24
 80072f8:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80072fa:	4bbb      	ldr	r3, [pc, #748]	; (80075e8 <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	b92b      	cbnz	r3, 800730c <_ZN15Screen2ViewBaseC1Ev+0x430>
 8007300:	4bba      	ldr	r3, [pc, #744]	; (80075ec <_ZN15Screen2ViewBaseC1Ev+0x710>)
 8007302:	4abb      	ldr	r2, [pc, #748]	; (80075f0 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 8007304:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007306:	48bb      	ldr	r0, [pc, #748]	; (80075f4 <_ZN15Screen2ViewBaseC1Ev+0x718>)
 8007308:	f01e fa5a 	bl	80257c0 <__assert_func>
 800730c:	4bba      	ldr	r3, [pc, #744]	; (80075f8 <_ZN15Screen2ViewBaseC1Ev+0x71c>)
 800730e:	881b      	ldrh	r3, [r3, #0]
 8007310:	2b18      	cmp	r3, #24
 8007312:	d803      	bhi.n	800731c <_ZN15Screen2ViewBaseC1Ev+0x440>
 8007314:	4bb9      	ldr	r3, [pc, #740]	; (80075fc <_ZN15Screen2ViewBaseC1Ev+0x720>)
 8007316:	4ab6      	ldr	r2, [pc, #728]	; (80075f0 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 8007318:	21af      	movs	r1, #175	; 0xaf
 800731a:	e7f4      	b.n	8007306 <_ZN15Screen2ViewBaseC1Ev+0x42a>
        return texts->getText(typedTextId);
 800731c:	4bb8      	ldr	r3, [pc, #736]	; (8007600 <_ZN15Screen2ViewBaseC1Ev+0x724>)
 800731e:	2118      	movs	r1, #24
 8007320:	6818      	ldr	r0, [r3, #0]
 8007322:	f000 fae5 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8007326:	4ab7      	ldr	r2, [pc, #732]	; (8007604 <_ZN15Screen2ViewBaseC1Ev+0x728>)
 8007328:	4603      	mov	r3, r0
 800732a:	210a      	movs	r1, #10
 800732c:	9803      	ldr	r0, [sp, #12]
 800732e:	f012 f8dd 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8007332:	f244 13a8 	movw	r3, #16808	; 0x41a8
 8007336:	9a03      	ldr	r2, [sp, #12]
 8007338:	50e2      	str	r2, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 800733a:	232d      	movs	r3, #45	; 0x2d
 800733c:	4629      	mov	r1, r5
 800733e:	9300      	str	r3, [sp, #0]
 8007340:	2207      	movs	r2, #7
 8007342:	4638      	mov	r0, r7
 8007344:	23c7      	movs	r3, #199	; 0xc7
 8007346:	f7fb fbb5 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800734a:	f244 13ac 	movw	r3, #16812	; 0x41ac
        handlePressedUpdated();
 800734e:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 8007352:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 8007356:	f244 13b0 	movw	r3, #16816	; 0x41b0
 800735a:	2746      	movs	r7, #70	; 0x46
 800735c:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8007360:	f7fb f81f 	bl	80023a2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_text_out_Num.setPosition(178, 30, 199, 45);
 8007364:	232d      	movs	r3, #45	; 0x2d
 8007366:	ee18 0a90 	vmov	r0, s17
 800736a:	9300      	str	r3, [sp, #0]
 800736c:	221e      	movs	r2, #30
 800736e:	23c7      	movs	r3, #199	; 0xc7
 8007370:	21b2      	movs	r1, #178	; 0xb2
 8007372:	f7fb fb9f 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007376:	f244 1324 	movw	r3, #16676	; 0x4124
 800737a:	9a02      	ldr	r2, [sp, #8]
 800737c:	50e2      	str	r2, [r4, r3]
 800737e:	4629      	mov	r1, r5
 8007380:	462a      	mov	r2, r5
 8007382:	f109 0034 	add.w	r0, r9, #52	; 0x34
 8007386:	9700      	str	r7, [sp, #0]
 8007388:	23a0      	movs	r3, #160	; 0xa0
 800738a:	f7fb fb93 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800738e:	f244 2318 	movw	r3, #16920	; 0x4218
 8007392:	f04f 0205 	mov.w	r2, #5
 8007396:	52e2      	strh	r2, [r4, r3]
    flexButtonSave.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007398:	4b8f      	ldr	r3, [pc, #572]	; (80075d8 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 800739a:	9300      	str	r3, [sp, #0]
 800739c:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80073a0:	4a8e      	ldr	r2, [pc, #568]	; (80075dc <_ZN15Screen2ViewBaseC1Ev+0x700>)
 80073a2:	498f      	ldr	r1, [pc, #572]	; (80075e0 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 80073a4:	4648      	mov	r0, r9
 80073a6:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80073aa:	f7fb fbbf 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80073ae:	4b8d      	ldr	r3, [pc, #564]	; (80075e4 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80073b0:	9308      	str	r3, [sp, #32]
    flexButtonSave.setText(TypedText(T___SINGLEUSE_QKLS));
 80073b2:	a908      	add	r1, sp, #32
 80073b4:	231d      	movs	r3, #29
 80073b6:	4648      	mov	r0, r9
 80073b8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80073bc:	f7fb fbc2 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80073c0:	4629      	mov	r1, r5
 80073c2:	220a      	movs	r2, #10
 80073c4:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80073c8:	9700      	str	r7, [sp, #0]
 80073ca:	23a0      	movs	r3, #160	; 0xa0
 80073cc:	f7fb fb72 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80073d0:	f244 2368 	movw	r3, #17000	; 0x4268
        handlePressedUpdated();
 80073d4:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 80073d6:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 80073da:	f244 236c 	movw	r3, #17004	; 0x426c
 80073de:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 80073e2:	f7fb fa12 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSave.setPosition(631, 368, 160, 70);
 80073e6:	4648      	mov	r0, r9
 80073e8:	9700      	str	r7, [sp, #0]
 80073ea:	23a0      	movs	r3, #160	; 0xa0
 80073ec:	f44f 72b8 	mov.w	r2, #368	; 0x170
 80073f0:	f240 2177 	movw	r1, #631	; 0x277
 80073f4:	f7fb fb5e 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073f8:	f244 13e4 	movw	r3, #16868	; 0x41e4
 80073fc:	9902      	ldr	r1, [sp, #8]
 80073fe:	50e1      	str	r1, [r4, r3]
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_320X240PX_ID), 240, 120);
 8007400:	2302      	movs	r3, #2
 8007402:	22f0      	movs	r2, #240	; 0xf0
 8007404:	f8ad 3020 	strh.w	r3, [sp, #32]
 8007408:	a908      	add	r1, sp, #32
 800740a:	2378      	movs	r3, #120	; 0x78
 800740c:	4650      	mov	r0, sl
 800740e:	f00a f90e 	bl	801162e <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(28, 28, 28));
 8007412:	4650      	mov	r0, sl
 8007414:	497c      	ldr	r1, [pc, #496]	; (8007608 <_ZN15Screen2ViewBaseC1Ev+0x72c>)
 8007416:	f00a f8f7 	bl	8011608 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(149);
 800741a:	2195      	movs	r1, #149	; 0x95
 800741c:	4650      	mov	r0, sl
 800741e:	f00a f8f7 	bl	8011610 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8007422:	4650      	mov	r0, sl
 8007424:	f00a f8e6 	bl	80115f4 <_ZN8touchgfx11ModalWindow4hideEv>
 8007428:	ee18 0a10 	vmov	r0, s16
 800742c:	462a      	mov	r2, r5
 800742e:	4629      	mov	r1, r5
 8007430:	9700      	str	r7, [sp, #0]
 8007432:	2364      	movs	r3, #100	; 0x64
 8007434:	3034      	adds	r0, #52	; 0x34
 8007436:	f7fb fb3d 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveNo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800743a:	4a67      	ldr	r2, [pc, #412]	; (80075d8 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 800743c:	9200      	str	r2, [sp, #0]
 800743e:	f244 3384 	movw	r3, #17284	; 0x4384
 8007442:	f04f 0105 	mov.w	r1, #5
 8007446:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800744a:	52e1      	strh	r1, [r4, r3]
 800744c:	ee18 0a10 	vmov	r0, s16
 8007450:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8007454:	4b6d      	ldr	r3, [pc, #436]	; (800760c <_ZN15Screen2ViewBaseC1Ev+0x730>)
 8007456:	4962      	ldr	r1, [pc, #392]	; (80075e0 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 8007458:	f7fb fb68 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonSaveNo.setText(TypedText(T___SINGLEUSE_XFCU));
 800745c:	a808      	add	r0, sp, #32
 800745e:	4b61      	ldr	r3, [pc, #388]	; (80075e4 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8007460:	9308      	str	r3, [sp, #32]
 8007462:	4601      	mov	r1, r0
 8007464:	231e      	movs	r3, #30
 8007466:	ee18 0a10 	vmov	r0, s16
 800746a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800746e:	f7fb fb69 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8007472:	ee18 0a10 	vmov	r0, s16
 8007476:	4629      	mov	r1, r5
 8007478:	2214      	movs	r2, #20
 800747a:	9700      	str	r7, [sp, #0]
 800747c:	2364      	movs	r3, #100	; 0x64
 800747e:	3078      	adds	r0, #120	; 0x78
 8007480:	f7fb fb18 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8007484:	f244 33d4 	movw	r3, #17364	; 0x43d4
        handlePressedUpdated();
 8007488:	ee18 0a10 	vmov	r0, s16
        colorReleased = newColorReleased;
 800748c:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 8007490:	f244 33d8 	movw	r3, #17368	; 0x43d8
 8007494:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8007498:	f7fb f9b7 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveNo.setPosition(196, 120, 100, 70);
 800749c:	ee18 0a10 	vmov	r0, s16
 80074a0:	2278      	movs	r2, #120	; 0x78
 80074a2:	9700      	str	r7, [sp, #0]
 80074a4:	2364      	movs	r3, #100	; 0x64
 80074a6:	21c4      	movs	r1, #196	; 0xc4
 80074a8:	f7fb fb04 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074ac:	f244 3350 	movw	r3, #17232	; 0x4350
 80074b0:	9902      	ldr	r1, [sp, #8]
 80074b2:	50e1      	str	r1, [r4, r3]
    modalWindow1.add(flexButtonSaveNo);
 80074b4:	4650      	mov	r0, sl
 80074b6:	ee18 1a10 	vmov	r1, s16
 80074ba:	f00a f8a2 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 80074be:	462a      	mov	r2, r5
 80074c0:	4629      	mov	r1, r5
 80074c2:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 80074c6:	9700      	str	r7, [sp, #0]
 80074c8:	2364      	movs	r3, #100	; 0x64
 80074ca:	f7fb faf3 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveYes.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80074ce:	4a42      	ldr	r2, [pc, #264]	; (80075d8 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80074d0:	9200      	str	r2, [sp, #0]
 80074d2:	f244 4340 	movw	r3, #17472	; 0x4440
 80074d6:	f04f 0105 	mov.w	r1, #5
 80074da:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80074de:	52e1      	strh	r1, [r4, r3]
 80074e0:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80074e4:	4658      	mov	r0, fp
 80074e6:	4b49      	ldr	r3, [pc, #292]	; (800760c <_ZN15Screen2ViewBaseC1Ev+0x730>)
 80074e8:	493d      	ldr	r1, [pc, #244]	; (80075e0 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 80074ea:	f7fb fb1f 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80074ee:	4b3d      	ldr	r3, [pc, #244]	; (80075e4 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80074f0:	9308      	str	r3, [sp, #32]
    flexButtonSaveYes.setText(TypedText(T___SINGLEUSE_KVEN));
 80074f2:	a908      	add	r1, sp, #32
 80074f4:	231f      	movs	r3, #31
 80074f6:	4658      	mov	r0, fp
 80074f8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80074fc:	f7fb fb22 	bl	8002b44 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8007500:	4629      	mov	r1, r5
 8007502:	2214      	movs	r2, #20
 8007504:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8007508:	9700      	str	r7, [sp, #0]
 800750a:	2364      	movs	r3, #100	; 0x64
 800750c:	f7fb fad2 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8007510:	f244 4390 	movw	r3, #17552	; 0x4490
        handlePressedUpdated();
 8007514:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 8007516:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 800751a:	f244 4394 	movw	r3, #17556	; 0x4494
 800751e:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8007522:	f7fb f972 	bl	800280a <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveYes.setPosition(37, 120, 100, 70);
 8007526:	4658      	mov	r0, fp
 8007528:	9700      	str	r7, [sp, #0]
 800752a:	2364      	movs	r3, #100	; 0x64
 800752c:	2278      	movs	r2, #120	; 0x78
 800752e:	2125      	movs	r1, #37	; 0x25
 8007530:	f7fb fac0 	bl	8002ab4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007534:	f244 430c 	movw	r3, #17420	; 0x440c
 8007538:	9a02      	ldr	r2, [sp, #8]
 800753a:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonSaveYes);
 800753c:	4659      	mov	r1, fp
 800753e:	4650      	mov	r0, sl
 8007540:	f00a f85f 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textArea1.setXY(50, 60);
 8007544:	ee19 0a10 	vmov	r0, s18
 8007548:	223c      	movs	r2, #60	; 0x3c
 800754a:	2132      	movs	r1, #50	; 0x32
 800754c:	f7fa ffde 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8007550:	f244 43c8 	movw	r3, #17608	; 0x44c8
 8007554:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8007558:	50e2      	str	r2, [r4, r3]
        linespace = space;
 800755a:	ee19 2a10 	vmov	r2, s18
 800755e:	4b21      	ldr	r3, [pc, #132]	; (80075e4 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8007560:	9308      	str	r3, [sp, #32]
 8007562:	2320      	movs	r3, #32
 8007564:	8695      	strh	r5, [r2, #52]	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5CIK));
 8007566:	eb0d 0103 	add.w	r1, sp, r3
 800756a:	ee19 0a10 	vmov	r0, s18
 800756e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007572:	1d25      	adds	r5, r4, #4
 8007574:	f00b ff23 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textArea1);
 8007578:	ee19 1a10 	vmov	r1, s18
 800757c:	4650      	mov	r0, sl
 800757e:	f00a f840 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8007582:	ee19 1a90 	vmov	r1, s19
 8007586:	4628      	mov	r0, r5
 8007588:	f00a f982 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800758c:	ee1a 1a10 	vmov	r1, s20
 8007590:	4628      	mov	r0, r5
 8007592:	f00a f97d 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007596:	ee1b 1a10 	vmov	r1, s22
 800759a:	4628      	mov	r0, r5
 800759c:	f00a f978 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80075a0:	4631      	mov	r1, r6
 80075a2:	4628      	mov	r0, r5
 80075a4:	f00a f974 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80075a8:	ee1a 1a90 	vmov	r1, s21
 80075ac:	4628      	mov	r0, r5
 80075ae:	f00a f96f 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80075b2:	ee18 1a90 	vmov	r1, s17
 80075b6:	4628      	mov	r0, r5
 80075b8:	f00a f96a 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80075bc:	4649      	mov	r1, r9
 80075be:	4628      	mov	r0, r5
 80075c0:	f00a f966 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80075c4:	4628      	mov	r0, r5
 80075c6:	4651      	mov	r1, sl
 80075c8:	f00a f962 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80075cc:	4620      	mov	r0, r4
 80075ce:	b00b      	add	sp, #44	; 0x2c
 80075d0:	ecbd 8b08 	vpop	{d8-d11}
 80075d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075d8:	ff336699 	.word	0xff336699
 80075dc:	ff0099cc 	.word	0xff0099cc
 80075e0:	ff006699 	.word	0xff006699
 80075e4:	0802750c 	.word	0x0802750c
 80075e8:	20027a00 	.word	0x20027a00
 80075ec:	080273f8 	.word	0x080273f8
 80075f0:	0802743a 	.word	0x0802743a
 80075f4:	08027468 	.word	0x08027468
 80075f8:	20027a04 	.word	0x20027a04
 80075fc:	080274af 	.word	0x080274af
 8007600:	20027a0c 	.word	0x20027a0c
 8007604:	08027501 	.word	0x08027501
 8007608:	ff1c1c1c 	.word	0xff1c1c1c
 800760c:	ff003366 	.word	0xff003366

08007610 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007610:	4770      	bx	lr
	...

08007614 <_Z23getFont_verdana_10_4bppv>:
{
 8007614:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007616:	4d16      	ldr	r5, [pc, #88]	; (8007670 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8007618:	782c      	ldrb	r4, [r5, #0]
 800761a:	f3bf 8f5b 	dmb	ish
 800761e:	f014 0401 	ands.w	r4, r4, #1
{
 8007622:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007624:	d120      	bne.n	8007668 <_Z23getFont_verdana_10_4bppv+0x54>
 8007626:	4628      	mov	r0, r5
 8007628:	f01e f89e 	bl	8025768 <__cxa_guard_acquire>
 800762c:	b1e0      	cbz	r0, 8007668 <_Z23getFont_verdana_10_4bppv+0x54>
 800762e:	233f      	movs	r3, #63	; 0x3f
 8007630:	9307      	str	r3, [sp, #28]
 8007632:	4b10      	ldr	r3, [pc, #64]	; (8007674 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007634:	9306      	str	r3, [sp, #24]
 8007636:	4b10      	ldr	r3, [pc, #64]	; (8007678 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007638:	9305      	str	r3, [sp, #20]
 800763a:	2301      	movs	r3, #1
 800763c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8007640:	9302      	str	r3, [sp, #8]
 8007642:	2204      	movs	r2, #4
 8007644:	2302      	movs	r3, #2
 8007646:	e9cd 3200 	strd	r3, r2, [sp]
 800764a:	490c      	ldr	r1, [pc, #48]	; (800767c <_Z23getFont_verdana_10_4bppv+0x68>)
 800764c:	480c      	ldr	r0, [pc, #48]	; (8007680 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800764e:	9408      	str	r4, [sp, #32]
 8007650:	230a      	movs	r3, #10
 8007652:	229b      	movs	r2, #155	; 0x9b
 8007654:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8007658:	f7fd fd28 	bl	80050ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800765c:	4628      	mov	r0, r5
 800765e:	f01e f88f 	bl	8025780 <__cxa_guard_release>
 8007662:	4808      	ldr	r0, [pc, #32]	; (8007684 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007664:	f01e f8ca 	bl	80257fc <atexit>
    return verdana_10_4bpp;
}
 8007668:	4805      	ldr	r0, [pc, #20]	; (8007680 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800766a:	b00d      	add	sp, #52	; 0x34
 800766c:	bd30      	pop	{r4, r5, pc}
 800766e:	bf00      	nop
 8007670:	200168fc 	.word	0x200168fc
 8007674:	0802bad4 	.word	0x0802bad4
 8007678:	0802bec4 	.word	0x0802bec4
 800767c:	90124258 	.word	0x90124258
 8007680:	20016900 	.word	0x20016900
 8007684:	08007611 	.word	0x08007611

08007688 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007688:	4770      	bx	lr
	...

0800768c <_Z23getFont_verdana_15_4bppv>:
{
 800768c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800768e:	4d16      	ldr	r5, [pc, #88]	; (80076e8 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8007690:	782c      	ldrb	r4, [r5, #0]
 8007692:	f3bf 8f5b 	dmb	ish
 8007696:	f014 0401 	ands.w	r4, r4, #1
{
 800769a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800769c:	d120      	bne.n	80076e0 <_Z23getFont_verdana_15_4bppv+0x54>
 800769e:	4628      	mov	r0, r5
 80076a0:	f01e f862 	bl	8025768 <__cxa_guard_acquire>
 80076a4:	b1e0      	cbz	r0, 80076e0 <_Z23getFont_verdana_15_4bppv+0x54>
 80076a6:	233f      	movs	r3, #63	; 0x3f
 80076a8:	9307      	str	r3, [sp, #28]
 80076aa:	4b10      	ldr	r3, [pc, #64]	; (80076ec <_Z23getFont_verdana_15_4bppv+0x60>)
 80076ac:	9306      	str	r3, [sp, #24]
 80076ae:	4b10      	ldr	r3, [pc, #64]	; (80076f0 <_Z23getFont_verdana_15_4bppv+0x64>)
 80076b0:	9305      	str	r3, [sp, #20]
 80076b2:	2301      	movs	r3, #1
 80076b4:	e9cd 3303 	strd	r3, r3, [sp, #12]
 80076b8:	9302      	str	r3, [sp, #8]
 80076ba:	2204      	movs	r2, #4
 80076bc:	2303      	movs	r3, #3
 80076be:	e9cd 3200 	strd	r3, r2, [sp]
 80076c2:	490c      	ldr	r1, [pc, #48]	; (80076f4 <_Z23getFont_verdana_15_4bppv+0x68>)
 80076c4:	480c      	ldr	r0, [pc, #48]	; (80076f8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 80076c6:	9408      	str	r4, [sp, #32]
 80076c8:	230f      	movs	r3, #15
 80076ca:	229b      	movs	r2, #155	; 0x9b
 80076cc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80076d0:	f7fd fcec 	bl	80050ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80076d4:	4628      	mov	r0, r5
 80076d6:	f01e f853 	bl	8025780 <__cxa_guard_release>
 80076da:	4808      	ldr	r0, [pc, #32]	; (80076fc <_Z23getFont_verdana_15_4bppv+0x70>)
 80076dc:	f01e f88e 	bl	80257fc <atexit>
    return verdana_15_4bpp;
}
 80076e0:	4805      	ldr	r0, [pc, #20]	; (80076f8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 80076e2:	b00d      	add	sp, #52	; 0x34
 80076e4:	bd30      	pop	{r4, r5, pc}
 80076e6:	bf00      	nop
 80076e8:	20016928 	.word	0x20016928
 80076ec:	0802bb08 	.word	0x0802bb08
 80076f0:	0802bec8 	.word	0x0802bec8
 80076f4:	90124ad4 	.word	0x90124ad4
 80076f8:	2001692c 	.word	0x2001692c
 80076fc:	08007689 	.word	0x08007689

08007700 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007700:	4770      	bx	lr
	...

08007704 <_Z23getFont_verdana_40_4bppv>:
{
 8007704:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007706:	4d16      	ldr	r5, [pc, #88]	; (8007760 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007708:	782c      	ldrb	r4, [r5, #0]
 800770a:	f3bf 8f5b 	dmb	ish
 800770e:	f014 0401 	ands.w	r4, r4, #1
{
 8007712:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007714:	d121      	bne.n	800775a <_Z23getFont_verdana_40_4bppv+0x56>
 8007716:	4628      	mov	r0, r5
 8007718:	f01e f826 	bl	8025768 <__cxa_guard_acquire>
 800771c:	b1e8      	cbz	r0, 800775a <_Z23getFont_verdana_40_4bppv+0x56>
 800771e:	233f      	movs	r3, #63	; 0x3f
 8007720:	9307      	str	r3, [sp, #28]
 8007722:	4b10      	ldr	r3, [pc, #64]	; (8007764 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007724:	9306      	str	r3, [sp, #24]
 8007726:	4b10      	ldr	r3, [pc, #64]	; (8007768 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007728:	9305      	str	r3, [sp, #20]
 800772a:	2302      	movs	r3, #2
 800772c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8007730:	2201      	movs	r2, #1
 8007732:	2304      	movs	r3, #4
 8007734:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8007738:	2308      	movs	r3, #8
 800773a:	490c      	ldr	r1, [pc, #48]	; (800776c <_Z23getFont_verdana_40_4bppv+0x68>)
 800773c:	9300      	str	r3, [sp, #0]
 800773e:	229a      	movs	r2, #154	; 0x9a
 8007740:	2328      	movs	r3, #40	; 0x28
 8007742:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8007746:	480a      	ldr	r0, [pc, #40]	; (8007770 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007748:	9408      	str	r4, [sp, #32]
 800774a:	f7fd fcaf 	bl	80050ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800774e:	4628      	mov	r0, r5
 8007750:	f01e f816 	bl	8025780 <__cxa_guard_release>
 8007754:	4807      	ldr	r0, [pc, #28]	; (8007774 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007756:	f01e f851 	bl	80257fc <atexit>
    return verdana_40_4bpp;
}
 800775a:	4805      	ldr	r0, [pc, #20]	; (8007770 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800775c:	b00d      	add	sp, #52	; 0x34
 800775e:	bd30      	pop	{r4, r5, pc}
 8007760:	20016954 	.word	0x20016954
 8007764:	0802bbe4 	.word	0x0802bbe4
 8007768:	0802becc 	.word	0x0802becc
 800776c:	90125350 	.word	0x90125350
 8007770:	20016958 	.word	0x20016958
 8007774:	08007701 	.word	0x08007701

08007778 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007778:	2000      	movs	r0, #0
 800777a:	4770      	bx	lr

0800777c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800777c:	2000      	movs	r0, #0
 800777e:	4770      	bx	lr

08007780 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007780:	b40e      	push	{r1, r2, r3}
 8007782:	b503      	push	{r0, r1, lr}
 8007784:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 8007786:	2100      	movs	r1, #0
{
 8007788:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800778c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 800778e:	f00f f8af 	bl	80168f0 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007792:	b002      	add	sp, #8
 8007794:	f85d eb04 	ldr.w	lr, [sp], #4
 8007798:	b003      	add	sp, #12
 800779a:	4770      	bx	lr

0800779c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800779c:	b40c      	push	{r2, r3}
 800779e:	b507      	push	{r0, r1, r2, lr}
 80077a0:	ab04      	add	r3, sp, #16
 80077a2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80077a6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
 80077a8:	f00f f8a2 	bl	80168f0 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80077ac:	b003      	add	sp, #12
 80077ae:	f85d eb04 	ldr.w	lr, [sp], #4
 80077b2:	b002      	add	sp, #8
 80077b4:	4770      	bx	lr
	...

080077b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 80077b8:	b510      	push	{r4, lr}
 80077ba:	4604      	mov	r4, r0
    nextCharacters.replaceAt0(unicodeConverter(direction));
 80077bc:	f00f ff2c 	bl	8017618 <_ZN8touchgfx12TextProvider16unicodeConverterEh>
            assert(used < size);
            replaceAt(++used - 1, newChar);
        }
        FORCE_INLINE_FUNCTION void replaceAt0(Unicode::UnicodeChar newChar)
        {
            buffer[pos] = newChar;
 80077c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80077c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80077c6:	8458      	strh	r0, [r3, #34]	; 0x22
    if (fontGsubTable && nextCharacters.peekChar())
 80077c8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80077ca:	b35b      	cbz	r3, 8007824 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
            assert(used > 0);
 80077cc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80077ce:	b92b      	cbnz	r3, 80077dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x24>
 80077d0:	4b17      	ldr	r3, [pc, #92]	; (8007830 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80077d2:	4a18      	ldr	r2, [pc, #96]	; (8007834 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80077d4:	21c0      	movs	r1, #192	; 0xc0
            assert(offset < used);
 80077d6:	4818      	ldr	r0, [pc, #96]	; (8007838 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80077d8:	f01d fff2 	bl	80257c0 <__assert_func>
 80077dc:	b310      	cbz	r0, 8007824 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
    {
        substituteGlyphs();
 80077de:	4620      	mov	r0, r4
 80077e0:	f011 f8a6 	bl	8018930 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 80077e4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80077e6:	2b01      	cmp	r3, #1
 80077e8:	d803      	bhi.n	80077f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x3a>
 80077ea:	4b14      	ldr	r3, [pc, #80]	; (800783c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x84>)
 80077ec:	4a14      	ldr	r2, [pc, #80]	; (8007840 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x88>)
 80077ee:	21c5      	movs	r1, #197	; 0xc5
 80077f0:	e7f1      	b.n	80077d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x1e>
            const uint16_t index = pos + offset;
 80077f2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80077f4:	1c53      	adds	r3, r2, #1
 80077f6:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80077f8:	2b09      	cmp	r3, #9
 80077fa:	4619      	mov	r1, r3
 80077fc:	bf88      	it	hi
 80077fe:	f1a3 010a 	subhi.w	r1, r3, #10
 8007802:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007806:	f640 103f 	movw	r0, #2367	; 0x93f
 800780a:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800780c:	4281      	cmp	r1, r0
 800780e:	d109      	bne.n	8007824 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007810:	2b0a      	cmp	r3, #10
 8007812:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007816:	bf28      	it	cs
 8007818:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800781a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800781e:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007820:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007822:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007824:	4620      	mov	r0, r4
}
 8007826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800782a:	f010 bf65 	b.w	80186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800782e:	bf00      	nop
 8007830:	08028278 	.word	0x08028278
 8007834:	08028281 	.word	0x08028281
 8007838:	0802832c 	.word	0x0802832c
 800783c:	08028376 	.word	0x08028376
 8007840:	08028384 	.word	0x08028384

08007844 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8007844:	b510      	push	{r4, lr}
 8007846:	4604      	mov	r4, r0
    fillInputBuffer();
 8007848:	f010 ff0e 	bl	8018668 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
    unicodeConverterInit();
 800784c:	4620      	mov	r0, r4
}
 800784e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    unicodeConverterInit();
 8007852:	f00f bedc 	b.w	801760e <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>

08007856 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007856:	b510      	push	{r4, lr}
 8007858:	b086      	sub	sp, #24
 800785a:	ac02      	add	r4, sp, #8
 800785c:	e884 0006 	stmia.w	r4, {r1, r2}
 8007860:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007862:	ab0a      	add	r3, sp, #40	; 0x28
 8007864:	9305      	str	r3, [sp, #20]
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007866:	9301      	str	r3, [sp, #4]
 8007868:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800786a:	9300      	str	r3, [sp, #0]
 800786c:	4621      	mov	r1, r4
 800786e:	9b08      	ldr	r3, [sp, #32]
 8007870:	f00d fce6 	bl	8015240 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007874:	b006      	add	sp, #24
 8007876:	bd10      	pop	{r4, pc}

08007878 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007878:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800787a:	bb18      	cbnz	r0, 80078c4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800787c:	4b12      	ldr	r3, [pc, #72]	; (80078c8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800787e:	4813      	ldr	r0, [pc, #76]	; (80078cc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007880:	681b      	ldr	r3, [r3, #0]
 8007882:	4913      	ldr	r1, [pc, #76]	; (80078d0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007884:	b1b3      	cbz	r3, 80078b4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007886:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007888:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800788a:	441a      	add	r2, r3
 800788c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800788e:	685a      	ldr	r2, [r3, #4]
 8007890:	441a      	add	r2, r3
 8007892:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007894:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007896:	4b0f      	ldr	r3, [pc, #60]	; (80078d4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007898:	2200      	movs	r2, #0
 800789a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800789c:	f000 f838 	bl	8007910 <_ZN17TypedTextDatabase8getFontsEv>
 80078a0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80078a2:	f000 f833 	bl	800790c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80078a6:	4b0c      	ldr	r3, [pc, #48]	; (80078d8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80078a8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80078aa:	4b0c      	ldr	r3, [pc, #48]	; (80078dc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80078ac:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80078ae:	4b0c      	ldr	r3, [pc, #48]	; (80078e0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80078b0:	8018      	strh	r0, [r3, #0]
    }
}
 80078b2:	e007      	b.n	80078c4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80078b4:	4b0b      	ldr	r3, [pc, #44]	; (80078e4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80078b6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80078b8:	4b0b      	ldr	r3, [pc, #44]	; (80078e8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80078ba:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80078bc:	4b0b      	ldr	r3, [pc, #44]	; (80078ec <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80078be:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80078c0:	2c00      	cmp	r4, #0
 80078c2:	d1e8      	bne.n	8007896 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80078c4:	bd38      	pop	{r3, r4, r5, pc}
 80078c6:	bf00      	nop
 80078c8:	20016980 	.word	0x20016980
 80078cc:	20016984 	.word	0x20016984
 80078d0:	20016988 	.word	0x20016988
 80078d4:	2001698c 	.word	0x2001698c
 80078d8:	20027a00 	.word	0x20027a00
 80078dc:	20027a08 	.word	0x20027a08
 80078e0:	20027a04 	.word	0x20027a04
 80078e4:	90125d48 	.word	0x90125d48
 80078e8:	90125bbc 	.word	0x90125bbc
 80078ec:	901260a4 	.word	0x901260a4

080078f0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80078f0:	4b04      	ldr	r3, [pc, #16]	; (8007904 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80078f8:	4b03      	ldr	r3, [pc, #12]	; (8007908 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80078fa:	681b      	ldr	r3, [r3, #0]
}
 80078fc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007900:	4770      	bx	lr
 8007902:	bf00      	nop
 8007904:	20016988 	.word	0x20016988
 8007908:	20016984 	.word	0x20016984

0800790c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800790c:	2063      	movs	r0, #99	; 0x63
 800790e:	4770      	bx	lr

08007910 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007910:	4800      	ldr	r0, [pc, #0]	; (8007914 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007912:	4770      	bx	lr
 8007914:	20016990 	.word	0x20016990

08007918 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007918:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 800791a:	f7ff feb7 	bl	800768c <_Z23getFont_verdana_15_4bppv>
};
 800791e:	4c04      	ldr	r4, [pc, #16]	; (8007930 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8007920:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007922:	f7ff feef 	bl	8007704 <_Z23getFont_verdana_40_4bppv>
};
 8007926:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8007928:	f7ff fe74 	bl	8007614 <_Z23getFont_verdana_10_4bppv>
};
 800792c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800792e:	bd10      	pop	{r4, pc}
 8007930:	20016990 	.word	0x20016990

08007934 <_ZN8touchgfx8CallbackI19ConfigListFilterLogsvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007934:	4770      	bx	lr

08007936 <_ZN8touchgfx8CallbackI19ConfigListFilterLogsvvE7executeEs>:
    virtual void execute(T1 t1)
 8007936:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007938:	68c2      	ldr	r2, [r0, #12]
 800793a:	6844      	ldr	r4, [r0, #4]
 800793c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800793e:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8007940:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007944:	07d2      	lsls	r2, r2, #31
 8007946:	bf48      	it	mi
 8007948:	5962      	ldrmi	r2, [r4, r5]
 800794a:	689b      	ldr	r3, [r3, #8]
    }
 800794c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800794e:	bf48      	it	mi
 8007950:	58d3      	ldrmi	r3, [r2, r3]
 8007952:	4718      	bx	r3

08007954 <_ZNK8touchgfx8CallbackI19ConfigListFilterLogsvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8007954:	6843      	ldr	r3, [r0, #4]
 8007956:	b12b      	cbz	r3, 8007964 <_ZNK8touchgfx8CallbackI19ConfigListFilterLogsvvE7isValidEv+0x10>
 8007958:	6883      	ldr	r3, [r0, #8]
 800795a:	b92b      	cbnz	r3, 8007968 <_ZNK8touchgfx8CallbackI19ConfigListFilterLogsvvE7isValidEv+0x14>
 800795c:	68c0      	ldr	r0, [r0, #12]
 800795e:	f000 0001 	and.w	r0, r0, #1
 8007962:	4770      	bx	lr
 8007964:	4618      	mov	r0, r3
 8007966:	4770      	bx	lr
 8007968:	2001      	movs	r0, #1
    }
 800796a:	4770      	bx	lr

0800796c <_ZN8touchgfx8CallbackI19ConfigListFilterLogsvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800796c:	b510      	push	{r4, lr}
 800796e:	2110      	movs	r1, #16
 8007970:	4604      	mov	r4, r0
 8007972:	f01d fef7 	bl	8025764 <_ZdlPvj>
 8007976:	4620      	mov	r0, r4
 8007978:	bd10      	pop	{r4, pc}

0800797a <_ZN19ConfigListFilterLog10initializeEv>:
{

}

void ConfigListFilterLog::initialize()
{
 800797a:	b513      	push	{r0, r1, r4, lr}
 800797c:	4604      	mov	r4, r0
	ConfigListFilterLogBase::initialize();
 800797e:	f7fa fc07 	bl	8002190 <_ZN23ConfigListFilterLogBase10initializeEv>

	scrollList.setItemSelectedCallback(scrollListItemSelectedCallback);
 8007982:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8007986:	f504 5180 	add.w	r1, r4, #4096	; 0x1000
 800798a:	9001      	str	r0, [sp, #4]
 800798c:	f009 fcfc 	bl	8011388 <_ZN8touchgfx10ScrollBase23setItemSelectedCallbackERNS_15GenericCallbackIsvvEE>
	if (list_id == ListID::list_channel)
 8007990:	f241 031c 	movw	r3, #4124	; 0x101c
 8007994:	9801      	ldr	r0, [sp, #4]
 8007996:	58e3      	ldr	r3, [r4, r3]
 8007998:	2b01      	cmp	r3, #1
 800799a:	d105      	bne.n	80079a8 <_ZN19ConfigListFilterLog10initializeEv+0x2e>
		scrollList.setNumberOfItems(32);
 800799c:	2120      	movs	r1, #32
	else if (list_id == ListID::list_units)
		scrollList.setNumberOfItems(UNITS_SIZE);
	else if (list_id == ListID::list_formula)
		scrollList.setNumberOfItems(GAS_SIZE);
}
 800799e:	b002      	add	sp, #8
 80079a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		scrollList.setNumberOfItems(GAS_SIZE);
 80079a4:	f009 bc63 	b.w	801126e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
	else if (list_id == ListID::list_units)
 80079a8:	2b04      	cmp	r3, #4
 80079aa:	d101      	bne.n	80079b0 <_ZN19ConfigListFilterLog10initializeEv+0x36>
		scrollList.setNumberOfItems(UNITS_SIZE);
 80079ac:	2105      	movs	r1, #5
 80079ae:	e7f6      	b.n	800799e <_ZN19ConfigListFilterLog10initializeEv+0x24>
	else if (list_id == ListID::list_formula)
 80079b0:	2b07      	cmp	r3, #7
 80079b2:	d101      	bne.n	80079b8 <_ZN19ConfigListFilterLog10initializeEv+0x3e>
		scrollList.setNumberOfItems(GAS_SIZE);
 80079b4:	2106      	movs	r1, #6
 80079b6:	e7f2      	b.n	800799e <_ZN19ConfigListFilterLog10initializeEv+0x24>
}
 80079b8:	b002      	add	sp, #8
 80079ba:	bd10      	pop	{r4, pc}

080079bc <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles>:
{
	currentIndex = (1<<itemIndex);
}

void ConfigListFilterLog::scrollListUpdateItem(ListTile& item, int16_t itemIndex)
{
 80079bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80079c0:	b08a      	sub	sp, #40	; 0x28
 80079c2:	4604      	mov	r4, r0
 80079c4:	460d      	mov	r5, r1
 80079c6:	4616      	mov	r6, r2
	Unicode::UnicodeChar item_text[16] = { 0 };
 80079c8:	2100      	movs	r1, #0
 80079ca:	2220      	movs	r2, #32
 80079cc:	a802      	add	r0, sp, #8
 80079ce:	f01e f8a5 	bl	8025b1c <memset>
	item.setIndex((uint8_t)itemIndex);
 80079d2:	b2f1      	uxtb	r1, r6
 80079d4:	4628      	mov	r0, r5
 80079d6:	f000 ff26 	bl	8008826 <_ZN8ListTile8setIndexEh>

	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
	{
		if (currentIndex & (1<<item.getIndex()))
 80079da:	f504 5880 	add.w	r8, r4, #4096	; 0x1000
	item.setIndex((uint8_t)itemIndex);
 80079de:	2710      	movs	r7, #16
		if (currentIndex & (1<<item.getIndex()))
 80079e0:	f108 0814 	add.w	r8, r8, #20
 80079e4:	f04f 0901 	mov.w	r9, #1
 80079e8:	4628      	mov	r0, r5
 80079ea:	f8d8 a000 	ldr.w	sl, [r8]
 80079ee:	f000 ff1d 	bl	800882c <_ZN8ListTile8getIndexEv>
 80079f2:	fa09 f000 	lsl.w	r0, r9, r0
 80079f6:	ea10 0f0a 	tst.w	r0, sl
 80079fa:	d024      	beq.n	8007a46 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x8a>
		{
			item.setSelected(scrollList.getWidth());
 80079fc:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8007a00:	4628      	mov	r0, r5
 8007a02:	f000 ff16 	bl	8008832 <_ZN8ListTile11setSelectedEi>
	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 8007a06:	3f01      	subs	r7, #1
 8007a08:	d1ee      	bne.n	80079e8 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x2c>
		{
			item.setUnselected();
		}
	}

	if (list_id == ListID::list_channel)
 8007a0a:	f241 031c 	movw	r3, #4124	; 0x101c
 8007a0e:	58e3      	ldr	r3, [r4, r3]
 8007a10:	2b01      	cmp	r3, #1
 8007a12:	d115      	bne.n	8007a40 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x84>
	{
		if((itemIndex + 1) <= 32){
 8007a14:	2e1f      	cmp	r6, #31
 8007a16:	dc1a      	bgt.n	8007a4e <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x92>
			Unicode::snprintf(item_text, 16, "%d", itemIndex + 1);
 8007a18:	4a10      	ldr	r2, [pc, #64]	; (8007a5c <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xa0>)
 8007a1a:	1c73      	adds	r3, r6, #1
 8007a1c:	2110      	movs	r1, #16
 8007a1e:	a802      	add	r0, sp, #8
 8007a20:	f011 fd64 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		}
		else{
			Unicode::snprintf(item_text, 16, "All");
		}
		item.updateText(item_text);
 8007a24:	a902      	add	r1, sp, #8
 8007a26:	4628      	mov	r0, r5
 8007a28:	f000 fef0 	bl	800880c <_ZN8ListTile10updateTextEPt>
		scrollList.setNumberOfItems(33);
 8007a2c:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8007a30:	2121      	movs	r1, #33	; 0x21
 8007a32:	9001      	str	r0, [sp, #4]
 8007a34:	f009 fc1b 	bl	801126e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
		scrollList.setCircular(true);
 8007a38:	9801      	ldr	r0, [sp, #4]
 8007a3a:	2101      	movs	r1, #1
 8007a3c:	f009 fdb2 	bl	80115a4 <_ZN8touchgfx10ScrollBase11setCircularEb>
//
//		item.updateText(item_text);
//		scrollList.setNumberOfItems(GAS_SIZE);
//		scrollList.setCircular(false);
//	}
}
 8007a40:	b00a      	add	sp, #40	; 0x28
 8007a42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			item.setUnselected();
 8007a46:	4628      	mov	r0, r5
 8007a48:	f000 ff00 	bl	800884c <_ZN8ListTile13setUnselectedEv>
 8007a4c:	e7db      	b.n	8007a06 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x4a>
			Unicode::snprintf(item_text, 16, "All");
 8007a4e:	4a04      	ldr	r2, [pc, #16]	; (8007a60 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xa4>)
 8007a50:	2110      	movs	r1, #16
 8007a52:	a802      	add	r0, sp, #8
 8007a54:	f011 fd4a 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8007a58:	e7e4      	b.n	8007a24 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x68>
 8007a5a:	bf00      	nop
 8007a5c:	08028456 	.word	0x08028456
 8007a60:	08028459 	.word	0x08028459

08007a64 <_ZN19ConfigListFilterLogC1Ev>:
ConfigListFilterLog::ConfigListFilterLog() :
 8007a64:	b510      	push	{r4, lr}
 8007a66:	4604      	mov	r4, r0
	scrollListItemSelectedCallback(this, &ConfigListFilterLog::scrollListItemSelectedHandler), previousIndex(100), currentIndex(0), highlighted_box_width(0)
 8007a68:	f7fa fbca 	bl	8002200 <_ZN23ConfigListFilterLogBaseC1Ev>
 8007a6c:	4b0f      	ldr	r3, [pc, #60]	; (8007aac <_ZN19ConfigListFilterLogC1Ev+0x48>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8007a6e:	4a10      	ldr	r2, [pc, #64]	; (8007ab0 <_ZN19ConfigListFilterLogC1Ev+0x4c>)
 8007a70:	6023      	str	r3, [r4, #0]
 8007a72:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007a76:	e9c3 2400 	strd	r2, r4, [r3]
 8007a7a:	f241 0308 	movw	r3, #4104	; 0x1008
 8007a7e:	4a0d      	ldr	r2, [pc, #52]	; (8007ab4 <_ZN19ConfigListFilterLogC1Ev+0x50>)
 8007a80:	50e2      	str	r2, [r4, r3]
 8007a82:	f241 020c 	movw	r2, #4108	; 0x100c
 8007a86:	2300      	movs	r3, #0
 8007a88:	50a3      	str	r3, [r4, r2]
 8007a8a:	f241 0210 	movw	r2, #4112	; 0x1010
 8007a8e:	2164      	movs	r1, #100	; 0x64
 8007a90:	54a1      	strb	r1, [r4, r2]
 8007a92:	f241 0214 	movw	r2, #4116	; 0x1014
}
 8007a96:	4620      	mov	r0, r4
	scrollListItemSelectedCallback(this, &ConfigListFilterLog::scrollListItemSelectedHandler), previousIndex(100), currentIndex(0), highlighted_box_width(0)
 8007a98:	50a3      	str	r3, [r4, r2]
 8007a9a:	f241 0218 	movw	r2, #4120	; 0x1018
 8007a9e:	50a3      	str	r3, [r4, r2]
 8007aa0:	f241 031c 	movw	r3, #4124	; 0x101c
 8007aa4:	2201      	movs	r2, #1
 8007aa6:	50e2      	str	r2, [r4, r3]
}
 8007aa8:	bd10      	pop	{r4, pc}
 8007aaa:	bf00      	nop
 8007aac:	080284e4 	.word	0x080284e4
 8007ab0:	080284cc 	.word	0x080284cc
 8007ab4:	08007b1d 	.word	0x08007b1d

08007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>:
	currentIndex = (1<<itemIndex);
 8007ab8:	2301      	movs	r3, #1
 8007aba:	fa03 f101 	lsl.w	r1, r3, r1
 8007abe:	f241 0314 	movw	r3, #4116	; 0x1014
 8007ac2:	50c1      	str	r1, [r0, r3]
}
 8007ac4:	4770      	bx	lr

08007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>:
{
	return 32 * scrollList.getNumberOfItems();
}

void ConfigListFilterLog::resizeXY(int x, int y)
{
 8007ac6:	b513      	push	{r0, r1, r4, lr}
//	highlighted_box_width = x;
	boxBg.setWidthHeight(x, y);
 8007ac8:	b214      	sxth	r4, r2
 8007aca:	b209      	sxth	r1, r1
        rect.width = width;
 8007acc:	8681      	strh	r1, [r0, #52]	; 0x34
        rect.height = height;
 8007ace:	86c4      	strh	r4, [r0, #54]	; 0x36
	scrollList.setWidthHeight(x, y);
 8007ad0:	3060      	adds	r0, #96	; 0x60
        setWidth(width);
 8007ad2:	9001      	str	r0, [sp, #4]
 8007ad4:	f009 fd69 	bl	80115aa <_ZN8touchgfx10ScrollBase8setWidthEs>
        setHeight(height);
 8007ad8:	9801      	ldr	r0, [sp, #4]
 8007ada:	4621      	mov	r1, r4
}
 8007adc:	b002      	add	sp, #8
 8007ade:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ae2:	f009 bd66 	b.w	80115b2 <_ZN8touchgfx10ScrollBase9setHeightEs>

08007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>:

void ConfigListFilterLog::setContainerID(ListID id)
{
	list_id = static_cast<ListID>(id);
 8007ae6:	f241 031c 	movw	r3, #4124	; 0x101c
 8007aea:	50c1      	str	r1, [r0, r3]
}
 8007aec:	4770      	bx	lr

08007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>:
	}
}

void ConfigListFilterLog::setViewCallback(GenericCallback<uint8_t, ConfigListFilterLog *>& callback)
{
	viewCallback = &callback;
 8007aee:	f8c0 1ffc 	str.w	r1, [r0, #4092]	; 0xffc
}
 8007af2:	4770      	bx	lr

08007af4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>:
        assert(index >= 0 && index < SIZE);
 8007af4:	290f      	cmp	r1, #15
    TYPE& operator[](int index)
 8007af6:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 8007af8:	d905      	bls.n	8007b06 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x12>
 8007afa:	4b05      	ldr	r3, [pc, #20]	; (8007b10 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x1c>)
 8007afc:	4a05      	ldr	r2, [pc, #20]	; (8007b14 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x20>)
 8007afe:	4806      	ldr	r0, [pc, #24]	; (8007b18 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x24>)
 8007b00:	2161      	movs	r1, #97	; 0x61
 8007b02:	f01d fe5d 	bl	80257c0 <__assert_func>
        return element[index];
 8007b06:	23ec      	movs	r3, #236	; 0xec
 8007b08:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8007b0c:	3004      	adds	r0, #4
 8007b0e:	bd08      	pop	{r3, pc}
 8007b10:	08027228 	.word	0x08027228
 8007b14:	0802845d 	.word	0x0802845d
 8007b18:	080272d0 	.word	0x080272d0

08007b1c <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs>:
	if(list_id == ListID::list_channel){
 8007b1c:	f241 031c 	movw	r3, #4124	; 0x101c
{
 8007b20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007b24:	460d      	mov	r5, r1
	if(list_id == ListID::list_channel){
 8007b26:	58c1      	ldr	r1, [r0, r3]
 8007b28:	2901      	cmp	r1, #1
{
 8007b2a:	4604      	mov	r4, r0
 8007b2c:	f241 0314 	movw	r3, #4116	; 0x1014
	if(list_id == ListID::list_channel){
 8007b30:	d13e      	bne.n	8007bb0 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x94>
		if(itemSelected <= 31){
 8007b32:	2d1f      	cmp	r5, #31
 8007b34:	dc06      	bgt.n	8007b44 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x28>
			if(TESTBIT(currentIndex, itemSelected)){
 8007b36:	58c2      	ldr	r2, [r0, r3]
			if(TESTBIT(currentIndex, itemSelected)){
 8007b38:	40a9      	lsls	r1, r5
 8007b3a:	420a      	tst	r2, r1
				CLRBIT(currentIndex, itemSelected);
 8007b3c:	bf14      	ite	ne
 8007b3e:	438a      	bicne	r2, r1
				SETBIT(currentIndex, itemSelected);
 8007b40:	430a      	orreq	r2, r1
 8007b42:	e000      	b.n	8007b46 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x2a>
			currentIndex = 0;
 8007b44:	2200      	movs	r2, #0
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8007b46:	f504 5880 	add.w	r8, r4, #4096	; 0x1000
				SETBIT(currentIndex, itemSelected);
 8007b4a:	50e2      	str	r2, [r4, r3]
{
 8007b4c:	2600      	movs	r6, #0
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8007b4e:	f108 0814 	add.w	r8, r8, #20
	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 8007b52:	2e10      	cmp	r6, #16
 8007b54:	f504 7792 	add.w	r7, r4, #292	; 0x124
 8007b58:	d034      	beq.n	8007bc4 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xa8>
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8007b5a:	4631      	mov	r1, r6
 8007b5c:	4638      	mov	r0, r7
 8007b5e:	f7ff ffc9 	bl	8007af4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8007b62:	f8d8 9000 	ldr.w	r9, [r8]
 8007b66:	f000 fe61 	bl	800882c <_ZN8ListTile8getIndexEv>
 8007b6a:	2301      	movs	r3, #1
 8007b6c:	fa03 f000 	lsl.w	r0, r3, r0
 8007b70:	ea10 0f09 	tst.w	r0, r9
			scrollListListItems[i].setSelected(scrollList.getWidth());
 8007b74:	4631      	mov	r1, r6
 8007b76:	4638      	mov	r0, r7
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8007b78:	d01f      	beq.n	8007bba <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x9e>
			scrollListListItems[i].setSelected(scrollList.getWidth());
 8007b7a:	f7ff ffbb 	bl	8007af4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8007b7e:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8007b82:	f000 fe56 	bl	8008832 <_ZN8ListTile11setSelectedEi>
		if((currentIndex == 0) && (itemSelected == scrollListListItems[i].getIndex())){
 8007b86:	f8d8 3000 	ldr.w	r3, [r8]
 8007b8a:	b97b      	cbnz	r3, 8007bac <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x90>
 8007b8c:	4631      	mov	r1, r6
 8007b8e:	4638      	mov	r0, r7
 8007b90:	f7ff ffb0 	bl	8007af4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8007b94:	f000 fe4a 	bl	800882c <_ZN8ListTile8getIndexEv>
 8007b98:	4285      	cmp	r5, r0
 8007b9a:	d107      	bne.n	8007bac <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x90>
				scrollListListItems[i].setSelected(scrollList.getWidth());
 8007b9c:	4631      	mov	r1, r6
 8007b9e:	4638      	mov	r0, r7
 8007ba0:	f7ff ffa8 	bl	8007af4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8007ba4:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8007ba8:	f000 fe43 	bl	8008832 <_ZN8ListTile11setSelectedEi>
	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 8007bac:	3601      	adds	r6, #1
 8007bae:	e7d0      	b.n	8007b52 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x36>
		if(itemSelected){
 8007bb0:	2d00      	cmp	r5, #0
 8007bb2:	d0c7      	beq.n	8007b44 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x28>
			if(TESTBIT(currentIndex, itemSelected)){
 8007bb4:	58c2      	ldr	r2, [r0, r3]
 8007bb6:	2101      	movs	r1, #1
 8007bb8:	e7be      	b.n	8007b38 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x1c>
			scrollListListItems[i].setUnselected();
 8007bba:	f7ff ff9b 	bl	8007af4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8007bbe:	f000 fe45 	bl	800884c <_ZN8ListTile13setUnselectedEv>
 8007bc2:	e7e0      	b.n	8007b86 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x6a>
	if (viewCallback && viewCallback->isValid())
 8007bc4:	f8d4 0ffc 	ldr.w	r0, [r4, #4092]	; 0xffc
 8007bc8:	b160      	cbz	r0, 8007be4 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xc8>
 8007bca:	6803      	ldr	r3, [r0, #0]
 8007bcc:	68db      	ldr	r3, [r3, #12]
 8007bce:	4798      	blx	r3
 8007bd0:	b140      	cbz	r0, 8007be4 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xc8>
		viewCallback->execute((uint8_t)itemSelected, this);
 8007bd2:	f8d4 0ffc 	ldr.w	r0, [r4, #4092]	; 0xffc
 8007bd6:	6803      	ldr	r3, [r0, #0]
 8007bd8:	4622      	mov	r2, r4
 8007bda:	b2e9      	uxtb	r1, r5
 8007bdc:	689b      	ldr	r3, [r3, #8]
}
 8007bde:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		viewCallback->execute((uint8_t)itemSelected, this);
 8007be2:	4718      	bx	r3
}
 8007be4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007be8 <_ZN25CustomContainerButton_keyD1Ev>:

class CustomContainerButton_key : public CustomContainerButton_keyBase
{
public:
    CustomContainerButton_key();
    virtual ~CustomContainerButton_key() {}
 8007be8:	4770      	bx	lr
	...

08007bec <_ZN25CustomContainerButton_key19functionButtonClickEv>:
}

void CustomContainerButton_key::functionButtonClick()
{
	touchgfx_printf("function1 %s\n\r", flexButton_keyboardBuffer);
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_keyboardBuffer[0];
 8007bec:	4b03      	ldr	r3, [pc, #12]	; (8007bfc <_ZN25CustomContainerButton_key19functionButtonClickEv+0x10>)
 8007bee:	f8b0 10ec 	ldrh.w	r1, [r0, #236]	; 0xec
 8007bf2:	881a      	ldrh	r2, [r3, #0]
 8007bf4:	4b02      	ldr	r3, [pc, #8]	; (8007c00 <_ZN25CustomContainerButton_key19functionButtonClickEv+0x14>)
 8007bf6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
}
 8007bfa:	4770      	bx	lr
 8007bfc:	2001699c 	.word	0x2001699c
 8007c00:	2001699e 	.word	0x2001699e

08007c04 <_ZN25CustomContainerButton_key10initializeEv>:
    CustomContainerButton_keyBase::initialize();
 8007c04:	f7fa bbbe 	b.w	8002384 <_ZN29CustomContainerButton_keyBase10initializeEv>

08007c08 <_ZN25CustomContainerButton_keyD0Ev>:
 8007c08:	b510      	push	{r4, lr}
 8007c0a:	f44f 718a 	mov.w	r1, #276	; 0x114
 8007c0e:	4604      	mov	r4, r0
 8007c10:	f01d fda8 	bl	8025764 <_ZdlPvj>
 8007c14:	4620      	mov	r0, r4
 8007c16:	bd10      	pop	{r4, pc}

08007c18 <_ZN25CustomContainerButton_keyC1Ev>:
CustomContainerButton_key::CustomContainerButton_key()
 8007c18:	b510      	push	{r4, lr}
 8007c1a:	4604      	mov	r4, r0
 8007c1c:	f7fa fce0 	bl	80025e0 <_ZN29CustomContainerButton_keyBaseC1Ev>
 8007c20:	4b01      	ldr	r3, [pc, #4]	; (8007c28 <_ZN25CustomContainerButton_keyC1Ev+0x10>)
 8007c22:	6023      	str	r3, [r4, #0]
}
 8007c24:	4620      	mov	r0, r4
 8007c26:	bd10      	pop	{r4, pc}
 8007c28:	0802857c 	.word	0x0802857c

08007c2c <_ZN23CustomContainerKeyboardD1Ev>:

class CustomContainerKeyboard : public CustomContainerKeyboardBase
{
public:
    CustomContainerKeyboard();
    virtual ~CustomContainerKeyboard() {}
 8007c2c:	4770      	bx	lr

08007c2e <_ZN23CustomContainerKeyboard16ClickButtonEnterEv>:
//	customContainer6_2.initialize_my(keyboard_mas[language_type][28]);
//	customContainer7_2.initialize_my(keyboard_mas[language_type][29]);
//	customContainer8_2.initialize_my(keyboard_mas[language_type][30]);
//	customContainer9_2.initialize_my(keyboard_mas[language_type][31]);
//	customContainer10_2.initialize_my(keyboard_mas[language_type][32]);
}
 8007c2e:	4770      	bx	lr

08007c30 <_ZN23CustomContainerKeyboard16ClickButtonShiftEv>:
}

//==================================================================================================================
//When flexButton_shift clicked call virtual function
void CustomContainerKeyboard::ClickButtonShift() {
	if (capital_letters) {
 8007c30:	f642 42eb 	movw	r2, #11499	; 0x2ceb
 8007c34:	5c83      	ldrb	r3, [r0, r2]
 8007c36:	fab3 f383 	clz	r3, r3
 8007c3a:	095b      	lsrs	r3, r3, #5
 8007c3c:	5483      	strb	r3, [r0, r2]
	}
	else {
		capital_letters = 1;
	}
	UpdateButtonKeyboard();
}
 8007c3e:	4770      	bx	lr

08007c40 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv>:

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 8007c40:	4b0d      	ldr	r3, [pc, #52]	; (8007c78 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv+0x38>)
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 8007c42:	b570      	push	{r4, r5, r6, lr}
	count_ContainerTextArea = 0;
 8007c44:	2500      	movs	r5, #0
 8007c46:	801d      	strh	r5, [r3, #0]
	setVisible(false);
	invalidate();
 8007c48:	6803      	ldr	r3, [r0, #0]
        visible = vis;
 8007c4a:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 8007c4e:	4604      	mov	r4, r0
	invalidate();
 8007c50:	695b      	ldr	r3, [r3, #20]
 8007c52:	4798      	blx	r3
        setX(x);
 8007c54:	6823      	ldr	r3, [r4, #0]
 8007c56:	4629      	mov	r1, r5
 8007c58:	4620      	mov	r0, r4
 8007c5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c5c:	4798      	blx	r3
        setY(y);
 8007c5e:	6823      	ldr	r3, [r4, #0]
 8007c60:	4620      	mov	r0, r4
 8007c62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007c64:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8007c68:	4798      	blx	r3
	setXY(0, 480);
	invalidate();
 8007c6a:	6823      	ldr	r3, [r4, #0]
 8007c6c:	4620      	mov	r0, r4
 8007c6e:	695b      	ldr	r3, [r3, #20]
}
 8007c70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 8007c74:	4718      	bx	r3
 8007c76:	bf00      	nop
 8007c78:	2001699c 	.word	0x2001699c

08007c7c <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv>:
}

//==================================================================================================================
//When flexButton_space clicked call virtual function
void CustomContainerKeyboard::ClickButtonSpace() {
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8007c7c:	f642 2274 	movw	r2, #10868	; 0x2a74
void CustomContainerKeyboard::ClickButtonSpace() {
 8007c80:	b410      	push	{r4}
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8007c82:	5a84      	ldrh	r4, [r0, r2]
 8007c84:	4a05      	ldr	r2, [pc, #20]	; (8007c9c <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x20>)
	action1();
 8007c86:	6803      	ldr	r3, [r0, #0]
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8007c88:	8811      	ldrh	r1, [r2, #0]
 8007c8a:	4a05      	ldr	r2, [pc, #20]	; (8007ca0 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x24>)
	action1();
 8007c8c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8007c90:	f822 4011 	strh.w	r4, [r2, r1, lsl #1]
}
 8007c94:	f85d 4b04 	ldr.w	r4, [sp], #4
	action1();
 8007c98:	4718      	bx	r3
 8007c9a:	bf00      	nop
 8007c9c:	2001699c 	.word	0x2001699c
 8007ca0:	2001699e 	.word	0x2001699e

08007ca4 <_ZN23CustomContainerKeyboard19ClickButtonLanguageEv>:
	if (language_type == LANG_RUS) {
 8007ca4:	f642 42e9 	movw	r2, #11497	; 0x2ce9
 8007ca8:	5c83      	ldrb	r3, [r0, r2]
 8007caa:	3b01      	subs	r3, #1
 8007cac:	bf18      	it	ne
 8007cae:	2301      	movne	r3, #1
 8007cb0:	5483      	strb	r3, [r0, r2]
	flexButton_language.invalidate();
 8007cb2:	f500 5009 	add.w	r0, r0, #8768	; 0x2240
 8007cb6:	3034      	adds	r0, #52	; 0x34
 8007cb8:	f00e bf18 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

08007cbc <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev>:

}

//==================================================================================================================
//When flexButton_ABC_123 clicked call virtual function button_ABC_mas
void CustomContainerKeyboard::ClickButtonABC123() {
 8007cbc:	b510      	push	{r4, lr}
	if (keyboard_type == TYPE_ABC) {
 8007cbe:	f642 43ea 	movw	r3, #11498	; 0x2cea
void CustomContainerKeyboard::ClickButtonABC123() {
 8007cc2:	4604      	mov	r4, r0
	if (keyboard_type == TYPE_ABC) {
 8007cc4:	5cc2      	ldrb	r2, [r0, r3]
 8007cc6:	2a01      	cmp	r2, #1
 8007cc8:	d10f      	bne.n	8007cea <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x2e>
		keyboard_type = TYPE_123;
 8007cca:	2200      	movs	r2, #0
 8007ccc:	54c2      	strb	r2, [r0, r3]
		Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "123");
 8007cce:	f500 502a 	add.w	r0, r0, #10880	; 0x2a80
 8007cd2:	4a07      	ldr	r2, [pc, #28]	; (8007cf0 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x34>)
 8007cd4:	210a      	movs	r1, #10
 8007cd6:	3030      	adds	r0, #48	; 0x30
 8007cd8:	f011 fc08 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}
	else {
		keyboard_type = TYPE_ABC;
		keyboard_mas_from_cp1251_to_utf8((char*) button_ABC_mas[language_type], &flexButton_ABC_123Buffer[0], sizeof(button_ABC_mas)/2);
	}
	flexButton_ABC_123.invalidate();
 8007cdc:	f504 5025 	add.w	r0, r4, #10560	; 0x2940
 8007ce0:	3024      	adds	r0, #36	; 0x24
	UpdateButtonKeyboard();
}
 8007ce2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_ABC_123.invalidate();
 8007ce6:	f00e bf01 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
		keyboard_type = TYPE_ABC;
 8007cea:	2201      	movs	r2, #1
 8007cec:	54c2      	strb	r2, [r0, r3]
}
 8007cee:	e7f5      	b.n	8007cdc <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x20>
 8007cf0:	08028610 	.word	0x08028610

08007cf4 <_ZN23CustomContainerKeyboardD0Ev>:
 8007cf4:	b510      	push	{r4, lr}
 8007cf6:	f642 61a8 	movw	r1, #11944	; 0x2ea8
 8007cfa:	4604      	mov	r4, r0
 8007cfc:	f01d fd32 	bl	8025764 <_ZdlPvj>
 8007d00:	4620      	mov	r0, r4
 8007d02:	bd10      	pop	{r4, pc}

08007d04 <_ZN23CustomContainerKeyboardC1Ev>:
CustomContainerKeyboard::CustomContainerKeyboard() {
 8007d04:	b538      	push	{r3, r4, r5, lr}
 8007d06:	4604      	mov	r4, r0
 8007d08:	f7fa ff7c 	bl	8002c04 <_ZN27CustomContainerKeyboardBaseC1Ev>
 8007d0c:	4b13      	ldr	r3, [pc, #76]	; (8007d5c <_ZN23CustomContainerKeyboardC1Ev+0x58>)
 8007d0e:	6023      	str	r3, [r4, #0]
 8007d10:	f642 43e8 	movw	r3, #11496	; 0x2ce8
 8007d14:	4a12      	ldr	r2, [pc, #72]	; (8007d60 <_ZN23CustomContainerKeyboardC1Ev+0x5c>)
 8007d16:	50e2      	str	r2, [r4, r3]
 8007d18:	f642 53f4 	movw	r3, #11764	; 0x2df4
 8007d1c:	2500      	movs	r5, #0
 8007d1e:	18e2      	adds	r2, r4, r3
 8007d20:	50e5      	str	r5, [r4, r3]
 8007d22:	f642 53fa 	movw	r3, #11770	; 0x2dfa
 8007d26:	8095      	strh	r5, [r2, #4]
 8007d28:	18e2      	adds	r2, r4, r3
 8007d2a:	50e5      	str	r5, [r4, r3]
 8007d2c:	4629      	mov	r1, r5
 8007d2e:	8095      	strh	r5, [r2, #4]
 8007d30:	f504 5038 	add.w	r0, r4, #11776	; 0x2e00
 8007d34:	2242      	movs	r2, #66	; 0x42
 8007d36:	f01d fef1 	bl	8025b1c <memset>
 8007d3a:	f504 5039 	add.w	r0, r4, #11840	; 0x2e40
 8007d3e:	4629      	mov	r1, r5
 8007d40:	2242      	movs	r2, #66	; 0x42
 8007d42:	3002      	adds	r0, #2
 8007d44:	f01d feea 	bl	8025b1c <memset>
 8007d48:	f504 503a 	add.w	r0, r4, #11904	; 0x2e80
 8007d4c:	2221      	movs	r2, #33	; 0x21
 8007d4e:	4629      	mov	r1, r5
 8007d50:	3004      	adds	r0, #4
 8007d52:	f01d fee3 	bl	8025b1c <memset>
}
 8007d56:	4620      	mov	r0, r4
 8007d58:	bd38      	pop	{r3, r4, r5, pc}
 8007d5a:	bf00      	nop
 8007d5c:	0802861c 	.word	0x0802861c
 8007d60:	0101001e 	.word	0x0101001e

08007d64 <_ZN23CustomContainerKeyboard10UpdateTextEv>:
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007d64:	4b09      	ldr	r3, [pc, #36]	; (8007d8c <_ZN23CustomContainerKeyboard10UpdateTextEv+0x28>)
 8007d66:	4a0a      	ldr	r2, [pc, #40]	; (8007d90 <_ZN23CustomContainerKeyboard10UpdateTextEv+0x2c>)
 8007d68:	8819      	ldrh	r1, [r3, #0]
void CustomContainerKeyboard::UpdateText() {
 8007d6a:	b510      	push	{r4, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007d6c:	3101      	adds	r1, #1
void CustomContainerKeyboard::UpdateText() {
 8007d6e:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007d70:	f500 5028 	add.w	r0, r0, #10752	; 0x2a00
 8007d74:	b289      	uxth	r1, r1
 8007d76:	3024      	adds	r0, #36	; 0x24
 8007d78:	f011 fba2 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	textArea1.invalidate();
 8007d7c:	f504 5002 	add.w	r0, r4, #8320	; 0x2080
 8007d80:	3038      	adds	r0, #56	; 0x38
}
 8007d82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 8007d86:	f00e beb1 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 8007d8a:	bf00      	nop
 8007d8c:	2001699c 	.word	0x2001699c
 8007d90:	2001699e 	.word	0x2001699e

08007d94 <_ZN23CustomContainerKeyboard10initializeEv>:
void CustomContainerKeyboard::initialize() {
 8007d94:	b510      	push	{r4, lr}
 8007d96:	4604      	mov	r4, r0
	CustomContainerKeyboardBase::initialize();
 8007d98:	f7fa fda3 	bl	80028e2 <_ZN27CustomContainerKeyboardBase10initializeEv>
	count_ContainerTextArea = 0; // Очистка буфера обмена элемента контейнера CustomContainerKeyboard
 8007d9c:	4b05      	ldr	r3, [pc, #20]	; (8007db4 <_ZN23CustomContainerKeyboard10initializeEv+0x20>)
 8007d9e:	2200      	movs	r2, #0
 8007da0:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;			// Включение заглавных букв
 8007da2:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8007da6:	2201      	movs	r2, #1
 8007da8:	54e2      	strb	r2, [r4, r3]
	UpdateText();
 8007daa:	4620      	mov	r0, r4
}
 8007dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	UpdateText();
 8007db0:	f7ff bfd8 	b.w	8007d64 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8007db4:	2001699c 	.word	0x2001699c

08007db8 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv>:
void CustomContainerKeyboard::ClickButtonDelPre() {
 8007db8:	b538      	push	{r3, r4, r5, lr}
	if (count_ContainerTextArea) {
 8007dba:	4d0a      	ldr	r5, [pc, #40]	; (8007de4 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x2c>)
 8007dbc:	882b      	ldrh	r3, [r5, #0]
void CustomContainerKeyboard::ClickButtonDelPre() {
 8007dbe:	4604      	mov	r4, r0
	if (count_ContainerTextArea) {
 8007dc0:	b923      	cbnz	r3, 8007dcc <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x14>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 8007dc2:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8007dc6:	5ce2      	ldrb	r2, [r4, r3]
 8007dc8:	b142      	cbz	r2, 8007ddc <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x24>
}
 8007dca:	bd38      	pop	{r3, r4, r5, pc}
		count_ContainerTextArea -= 1;
 8007dcc:	3b01      	subs	r3, #1
 8007dce:	802b      	strh	r3, [r5, #0]
		UpdateText();
 8007dd0:	f7ff ffc8 	bl	8007d64 <_ZN23CustomContainerKeyboard10UpdateTextEv>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 8007dd4:	882b      	ldrh	r3, [r5, #0]
 8007dd6:	2b00      	cmp	r3, #0
 8007dd8:	d1f7      	bne.n	8007dca <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 8007dda:	e7f2      	b.n	8007dc2 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0xa>
		capital_letters = 1;
 8007ddc:	2201      	movs	r2, #1
 8007dde:	54e2      	strb	r2, [r4, r3]
}
 8007de0:	e7f3      	b.n	8007dca <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 8007de2:	bf00      	nop
 8007de4:	2001699c 	.word	0x2001699c

08007de8 <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv>:
	count_ContainerTextArea = 0;
 8007de8:	4b04      	ldr	r3, [pc, #16]	; (8007dfc <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv+0x14>)
 8007dea:	2200      	movs	r2, #0
 8007dec:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;
 8007dee:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8007df2:	2201      	movs	r2, #1
 8007df4:	54c2      	strb	r2, [r0, r3]
	UpdateText();
 8007df6:	f7ff bfb5 	b.w	8007d64 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8007dfa:	bf00      	nop
 8007dfc:	2001699c 	.word	0x2001699c

08007e00 <_ZN23CustomContainerKeyboard7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard::action1() {
//	textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8007e00:	4a06      	ldr	r2, [pc, #24]	; (8007e1c <_ZN23CustomContainerKeyboard7action1Ev+0x1c>)
 8007e02:	8813      	ldrh	r3, [r2, #0]
 8007e04:	3301      	adds	r3, #1
 8007e06:	b29b      	uxth	r3, r3
	if (count_ContainerTextArea == 1) {
 8007e08:	2b01      	cmp	r3, #1
	count_ContainerTextArea++;
 8007e0a:	8013      	strh	r3, [r2, #0]
		capital_letters = 0;
 8007e0c:	bf02      	ittt	eq
 8007e0e:	f642 43eb 	movweq	r3, #11499	; 0x2ceb
 8007e12:	2200      	moveq	r2, #0
 8007e14:	54c2      	strbeq	r2, [r0, r3]
	if (count_ContainerTextArea == count_Container) {
		count_ContainerTextArea = (count_Container);
	}
	//-----------------------------------------------------------

	UpdateText();
 8007e16:	f7ff bfa5 	b.w	8007d64 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8007e1a:	bf00      	nop
 8007e1c:	2001699c 	.word	0x2001699c

08007e20 <_ZN27CustomContainerKeyboard_NumD1Ev>:

class CustomContainerKeyboard_Num : public CustomContainerKeyboard_NumBase
{
public:
    CustomContainerKeyboard_Num();
    virtual ~CustomContainerKeyboard_Num() {}
 8007e20:	4770      	bx	lr

08007e22 <_ZN27CustomContainerKeyboard_Num16ClickButtonEnterEv>:
//	customContainerButton_key8.initialize_my(keyboard_mas[7]);
//	customContainerButton_key9.initialize_my(keyboard_mas[8]);
//	customContainerButton_key10.initialize_my(keyboard_mas[9]);
//	customContainerButton_key11.initialize_my(keyboard_mas[10]);
//	customContainerButton_key12.initialize_my(keyboard_mas[11]);
}
 8007e22:	4770      	bx	lr

08007e24 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv>:
}

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 8007e24:	4a0c      	ldr	r2, [pc, #48]	; (8007e58 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x34>)
 8007e26:	2300      	movs	r3, #0
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 8007e28:	b510      	push	{r4, lr}
	count_ContainerTextArea = 0;
 8007e2a:	8013      	strh	r3, [r2, #0]
        visible = vis;
 8007e2c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	setVisible(false);
	invalidate();
 8007e30:	6803      	ldr	r3, [r0, #0]
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 8007e32:	4604      	mov	r4, r0
	invalidate();
 8007e34:	695b      	ldr	r3, [r3, #20]
 8007e36:	4798      	blx	r3
        setX(x);
 8007e38:	6823      	ldr	r3, [r4, #0]
 8007e3a:	4908      	ldr	r1, [pc, #32]	; (8007e5c <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x38>)
 8007e3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e3e:	4620      	mov	r0, r4
 8007e40:	4798      	blx	r3
        setY(y);
 8007e42:	6823      	ldr	r3, [r4, #0]
 8007e44:	4620      	mov	r0, r4
 8007e46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e48:	21b4      	movs	r1, #180	; 0xb4
 8007e4a:	4798      	blx	r3
	setXY(-270, 180);
	invalidate();
 8007e4c:	6823      	ldr	r3, [r4, #0]
 8007e4e:	4620      	mov	r0, r4
 8007e50:	695b      	ldr	r3, [r3, #20]
}
 8007e52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	invalidate();
 8007e56:	4718      	bx	r3
 8007e58:	2001699c 	.word	0x2001699c
 8007e5c:	fffffef2 	.word	0xfffffef2

08007e60 <_ZN27CustomContainerKeyboard_Num10initializeEv>:
    CustomContainerKeyboard_NumBase::initialize();
 8007e60:	f7fb bfb7 	b.w	8003dd2 <_ZN31CustomContainerKeyboard_NumBase10initializeEv>

08007e64 <_ZN27CustomContainerKeyboard_NumD0Ev>:
 8007e64:	b510      	push	{r4, lr}
 8007e66:	f241 01bc 	movw	r1, #4284	; 0x10bc
 8007e6a:	4604      	mov	r4, r0
 8007e6c:	f01d fc7a 	bl	8025764 <_ZdlPvj>
 8007e70:	4620      	mov	r0, r4
 8007e72:	bd10      	pop	{r4, pc}

08007e74 <_ZN27CustomContainerKeyboard_NumC1Ev>:
CustomContainerKeyboard_Num::CustomContainerKeyboard_Num()
 8007e74:	b510      	push	{r4, lr}
 8007e76:	4604      	mov	r4, r0
 8007e78:	f7fc f802 	bl	8003e80 <_ZN31CustomContainerKeyboard_NumBaseC1Ev>
 8007e7c:	4b08      	ldr	r3, [pc, #32]	; (8007ea0 <_ZN27CustomContainerKeyboard_NumC1Ev+0x2c>)
 8007e7e:	6023      	str	r3, [r4, #0]
 8007e80:	f241 03ac 	movw	r3, #4268	; 0x10ac
 8007e84:	2205      	movs	r2, #5
 8007e86:	54e2      	strb	r2, [r4, r3]
 8007e88:	4a06      	ldr	r2, [pc, #24]	; (8007ea4 <_ZN27CustomContainerKeyboard_NumC1Ev+0x30>)
 8007e8a:	f241 00ad 	movw	r0, #4269	; 0x10ad
 8007e8e:	1821      	adds	r1, r4, r0
 8007e90:	6813      	ldr	r3, [r2, #0]
 8007e92:	5023      	str	r3, [r4, r0]
 8007e94:	6853      	ldr	r3, [r2, #4]
 8007e96:	604b      	str	r3, [r1, #4]
 8007e98:	6893      	ldr	r3, [r2, #8]
 8007e9a:	608b      	str	r3, [r1, #8]
}
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	bd10      	pop	{r4, pc}
 8007ea0:	080286d4 	.word	0x080286d4
 8007ea4:	080269f0 	.word	0x080269f0

08007ea8 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>:
void CustomContainerKeyboard_Num::UpdateText() {
 8007ea8:	b538      	push	{r3, r4, r5, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007eaa:	4d14      	ldr	r5, [pc, #80]	; (8007efc <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x54>)
 8007eac:	4a14      	ldr	r2, [pc, #80]	; (8007f00 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x58>)
 8007eae:	8829      	ldrh	r1, [r5, #0]
 8007eb0:	3101      	adds	r1, #1
void CustomContainerKeyboard_Num::UpdateText() {
 8007eb2:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007eb4:	b289      	uxth	r1, r1
 8007eb6:	f600 70c4 	addw	r0, r0, #4036	; 0xfc4
 8007eba:	f011 fb01 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	if(count_ContainerTextArea == 1){
 8007ebe:	882b      	ldrh	r3, [r5, #0]
 8007ec0:	2b01      	cmp	r3, #1
 8007ec2:	d113      	bne.n	8007eec <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x44>
		if((textArea1Buffer[1] == button_123_mas[9]) || (textArea1Buffer[1] == button_123_mas[11])){
 8007ec4:	f241 02b6 	movw	r2, #4278	; 0x10b6
 8007ec8:	f8b4 3fc6 	ldrh.w	r3, [r4, #4038]	; 0xfc6
 8007ecc:	5ca2      	ldrb	r2, [r4, r2]
 8007ece:	429a      	cmp	r2, r3
 8007ed0:	d004      	beq.n	8007edc <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x34>
 8007ed2:	f241 02b8 	movw	r2, #4280	; 0x10b8
 8007ed6:	5ca2      	ldrb	r2, [r4, r2]
 8007ed8:	429a      	cmp	r2, r3
 8007eda:	d109      	bne.n	8007ef0 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
			count_ContainerTextArea = 0;
 8007edc:	2300      	movs	r3, #0
 8007ede:	802b      	strh	r3, [r5, #0]
		textArea1Buffer[0] = button_123_mas[10];
 8007ee0:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8007ee4:	5ce3      	ldrb	r3, [r4, r3]
 8007ee6:	f8a4 3fc4 	strh.w	r3, [r4, #4036]	; 0xfc4
 8007eea:	e001      	b.n	8007ef0 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
	if(count_ContainerTextArea == 0){
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	d0f7      	beq.n	8007ee0 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x38>
	textArea1.invalidate();
 8007ef0:	f504 70ec 	add.w	r0, r4, #472	; 0x1d8
}
 8007ef4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	textArea1.invalidate();
 8007ef8:	f00e bdf8 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 8007efc:	2001699c 	.word	0x2001699c
 8007f00:	2001699e 	.word	0x2001699e

08007f04 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv>:
	if (count_ContainerTextArea) {
 8007f04:	4a03      	ldr	r2, [pc, #12]	; (8007f14 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0x10>)
 8007f06:	8813      	ldrh	r3, [r2, #0]
 8007f08:	b11b      	cbz	r3, 8007f12 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0xe>
		count_ContainerTextArea -= 1;
 8007f0a:	3b01      	subs	r3, #1
 8007f0c:	8013      	strh	r3, [r2, #0]
		UpdateText();
 8007f0e:	f7ff bfcb 	b.w	8007ea8 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
}
 8007f12:	4770      	bx	lr
 8007f14:	2001699c 	.word	0x2001699c

08007f18 <_ZN27CustomContainerKeyboard_Num7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard_Num::action1() {
 8007f18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
// textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8007f1a:	4d3a      	ldr	r5, [pc, #232]	; (8008004 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xec>)

	//------------------------------------------------------------------------------
	// Проверка на одну запятую
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007f1c:	4e3a      	ldr	r6, [pc, #232]	; (8008008 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xf0>)
	count_ContainerTextArea++;
 8007f1e:	882b      	ldrh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007f20:	f241 02b8 	movw	r2, #4280	; 0x10b8
	count_ContainerTextArea++;
 8007f24:	3301      	adds	r3, #1
 8007f26:	b29b      	uxth	r3, r3
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007f28:	5c81      	ldrb	r1, [r0, r2]
	count_ContainerTextArea++;
 8007f2a:	802b      	strh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007f2c:	1e5a      	subs	r2, r3, #1
void CustomContainerKeyboard_Num::action1() {
 8007f2e:	4604      	mov	r4, r0
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007f30:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8007f34:	428a      	cmp	r2, r1
 8007f36:	460f      	mov	r7, r1
 8007f38:	d116      	bne.n	8007f68 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
		if(count_ContainerTextArea == 1){
 8007f3a:	2b01      	cmp	r3, #1
 8007f3c:	d107      	bne.n	8007f4e <_ZN27CustomContainerKeyboard_Num7action1Ev+0x36>
			data_ContainerTextArea[1] = data_ContainerTextArea[0];
 8007f3e:	8833      	ldrh	r3, [r6, #0]
 8007f40:	8073      	strh	r3, [r6, #2]
			data_ContainerTextArea[0] = button_123_mas[10];
 8007f42:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8007f46:	5cc3      	ldrb	r3, [r0, r3]
 8007f48:	8033      	strh	r3, [r6, #0]
			count_ContainerTextArea += 1;
 8007f4a:	2302      	movs	r3, #2
 8007f4c:	802b      	strh	r3, [r5, #0]
		}
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 8007f4e:	220a      	movs	r2, #10
 8007f50:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 8007f54:	9101      	str	r1, [sp, #4]
 8007f56:	f7f8 f953 	bl	8000200 <memchr>
		if(str_no != NULL){
 8007f5a:	9901      	ldr	r1, [sp, #4]
 8007f5c:	b120      	cbz	r0, 8007f68 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
			count_ContainerTextArea -= 1;
 8007f5e:	882b      	ldrh	r3, [r5, #0]
 8007f60:	3b01      	subs	r3, #1
 8007f62:	802b      	strh	r3, [r5, #0]
	}

	UpdateText();


}
 8007f64:	b003      	add	sp, #12
 8007f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if((textArea1Buffer[0] == button_123_mas[10]) &&
 8007f68:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8007f6c:	5ce2      	ldrb	r2, [r4, r3]
 8007f6e:	f8b4 3fc4 	ldrh.w	r3, [r4, #4036]	; 0xfc4
 8007f72:	4293      	cmp	r3, r2
 8007f74:	d10b      	bne.n	8007f8e <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
 8007f76:	882b      	ldrh	r3, [r5, #0]
 8007f78:	1e58      	subs	r0, r3, #1
 8007f7a:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8007f7e:	42b8      	cmp	r0, r7
 8007f80:	d005      	beq.n	8007f8e <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
			(data_ContainerTextArea[count_ContainerTextArea - 1] != button_123_mas[11]) &&
 8007f82:	2b02      	cmp	r3, #2
			data_ContainerTextArea[0] = data_ContainerTextArea[1];
 8007f84:	bf01      	itttt	eq
 8007f86:	8873      	ldrheq	r3, [r6, #2]
 8007f88:	8033      	strheq	r3, [r6, #0]
		count_ContainerTextArea = 1;
 8007f8a:	2301      	moveq	r3, #1
 8007f8c:	802b      	strheq	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea == 1)){
 8007f8e:	8828      	ldrh	r0, [r5, #0]
 8007f90:	f241 03b6 	movw	r3, #4278	; 0x10b6
 8007f94:	1e47      	subs	r7, r0, #1
 8007f96:	5ce3      	ldrb	r3, [r4, r3]
 8007f98:	f836 7017 	ldrh.w	r7, [r6, r7, lsl #1]
 8007f9c:	429f      	cmp	r7, r3
 8007f9e:	d104      	bne.n	8007faa <_ZN27CustomContainerKeyboard_Num7action1Ev+0x92>
 8007fa0:	2801      	cmp	r0, #1
		data_ContainerTextArea[1] = button_123_mas[10];
 8007fa2:	bf02      	ittt	eq
 8007fa4:	8072      	strheq	r2, [r6, #2]
		count_ContainerTextArea += 1;
 8007fa6:	2202      	moveq	r2, #2
 8007fa8:	802a      	strheq	r2, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea > 1)){
 8007faa:	882f      	ldrh	r7, [r5, #0]
 8007fac:	1e7a      	subs	r2, r7, #1
 8007fae:	f836 0012 	ldrh.w	r0, [r6, r2, lsl #1]
 8007fb2:	4298      	cmp	r0, r3
 8007fb4:	d103      	bne.n	8007fbe <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
 8007fb6:	2f01      	cmp	r7, #1
 8007fb8:	d901      	bls.n	8007fbe <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
		count_ContainerTextArea -= 1;
 8007fba:	802a      	strh	r2, [r5, #0]
		return;
 8007fbc:	e7d2      	b.n	8007f64 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x4c>
	count_Container = 5;
 8007fbe:	2005      	movs	r0, #5
 8007fc0:	f241 02ac 	movw	r2, #4268	; 0x10ac
	if (count_ContainerTextArea > 5) {
 8007fc4:	4287      	cmp	r7, r0
	count_Container = 5;
 8007fc6:	54a0      	strb	r0, [r4, r2]
	if (count_ContainerTextArea > 5) {
 8007fc8:	d915      	bls.n	8007ff6 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xde>
		if(data_ContainerTextArea[0] == button_123_mas[9]){
 8007fca:	8830      	ldrh	r0, [r6, #0]
 8007fcc:	4298      	cmp	r0, r3
			count_Container += 1;
 8007fce:	bf04      	itt	eq
 8007fd0:	2306      	moveq	r3, #6
 8007fd2:	54a3      	strbeq	r3, [r4, r2]
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 8007fd4:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 8007fd8:	220a      	movs	r2, #10
 8007fda:	f7f8 f911 	bl	8000200 <memchr>
		if(str_no != NULL){
 8007fde:	b120      	cbz	r0, 8007fea <_ZN27CustomContainerKeyboard_Num7action1Ev+0xd2>
			count_Container += 1;
 8007fe0:	f241 02ac 	movw	r2, #4268	; 0x10ac
 8007fe4:	5ca3      	ldrb	r3, [r4, r2]
 8007fe6:	3301      	adds	r3, #1
 8007fe8:	54a3      	strb	r3, [r4, r2]
		if(count_ContainerTextArea >= count_Container){
 8007fea:	f241 03ac 	movw	r3, #4268	; 0x10ac
 8007fee:	5ce3      	ldrb	r3, [r4, r3]
 8007ff0:	429f      	cmp	r7, r3
			count_ContainerTextArea = (count_Container);
 8007ff2:	bf28      	it	cs
 8007ff4:	802b      	strhcs	r3, [r5, #0]
	UpdateText();
 8007ff6:	4620      	mov	r0, r4
}
 8007ff8:	b003      	add	sp, #12
 8007ffa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	UpdateText();
 8007ffe:	f7ff bf53 	b.w	8007ea8 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 8008002:	bf00      	nop
 8008004:	2001699c 	.word	0x2001699c
 8008008:	2001699e 	.word	0x2001699e

0800800c <_ZN23CustomContainerTableLogD1Ev>:

class CustomContainerTableLog : public CustomContainerTableLogBase
{
public:
    CustomContainerTableLog();
    virtual ~CustomContainerTableLog() {}
 800800c:	4770      	bx	lr

0800800e <_ZN23CustomContainerTableLog10initializeEv>:

}

void CustomContainerTableLog::initialize()
{
    CustomContainerTableLogBase::initialize();
 800800e:	f7fc ba84 	b.w	800451a <_ZN27CustomContainerTableLogBase10initializeEv>

08008012 <_ZN23CustomContainerTableLogD0Ev>:
 8008012:	b510      	push	{r4, lr}
 8008014:	f44f 61ba 	mov.w	r1, #1488	; 0x5d0
 8008018:	4604      	mov	r4, r0
 800801a:	f01d fba3 	bl	8025764 <_ZdlPvj>
 800801e:	4620      	mov	r0, r4
 8008020:	bd10      	pop	{r4, pc}
	...

08008024 <_ZN23CustomContainerTableLogC1Ev>:
CustomContainerTableLog::CustomContainerTableLog()
 8008024:	b570      	push	{r4, r5, r6, lr}
 8008026:	4604      	mov	r4, r0
 8008028:	f7fc fab4 	bl	8004594 <_ZN27CustomContainerTableLogBaseC1Ev>
 800802c:	4b2b      	ldr	r3, [pc, #172]	; (80080dc <_ZN23CustomContainerTableLogC1Ev+0xb8>)
 800802e:	6023      	str	r3, [r4, #0]
 8008030:	2228      	movs	r2, #40	; 0x28
 8008032:	2100      	movs	r1, #0
 8008034:	f204 40fe 	addw	r0, r4, #1278	; 0x4fe
 8008038:	f01d fd70 	bl	8025b1c <memset>
 800803c:	f240 431f 	movw	r3, #1055	; 0x41f
 8008040:	f8a4 34fe 	strh.w	r3, [r4, #1278]	; 0x4fe
 8008044:	4b26      	ldr	r3, [pc, #152]	; (80080e0 <_ZN23CustomContainerTableLogC1Ev+0xbc>)
 8008046:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
 800804a:	f503 2350 	add.w	r3, r3, #851968	; 0xd0000
 800804e:	3306      	adds	r3, #6
 8008050:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
 8008054:	2228      	movs	r2, #40	; 0x28
 8008056:	2100      	movs	r1, #0
 8008058:	f204 5026 	addw	r0, r4, #1318	; 0x526
 800805c:	f01d fd5e 	bl	8025b1c <memset>
 8008060:	234b      	movs	r3, #75	; 0x4b
 8008062:	f8a4 3528 	strh.w	r3, [r4, #1320]	; 0x528
 8008066:	f240 431e 	movw	r3, #1054	; 0x41e
 800806a:	f8a4 353a 	strh.w	r3, [r4, #1338]	; 0x53a
 800806e:	4b1d      	ldr	r3, [pc, #116]	; (80080e4 <_ZN23CustomContainerTableLogC1Ev+0xc0>)
 8008070:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
 8008074:	f5a3 235f 	sub.w	r3, r3, #913408	; 0xdf000
 8008078:	264f      	movs	r6, #79	; 0x4f
 800807a:	f6a3 73e6 	subw	r3, r3, #4070	; 0xfe6
 800807e:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
 8008082:	f8a4 6526 	strh.w	r6, [r4, #1318]	; 0x526
 8008086:	2228      	movs	r2, #40	; 0x28
 8008088:	2100      	movs	r1, #0
 800808a:	f204 504e 	addw	r0, r4, #1358	; 0x54e
 800808e:	f01d fd45 	bl	8025b1c <memset>
 8008092:	234c      	movs	r3, #76	; 0x4c
 8008094:	f8a4 354e 	strh.w	r3, [r4, #1358]	; 0x54e
 8008098:	4b13      	ldr	r3, [pc, #76]	; (80080e8 <_ZN23CustomContainerTableLogC1Ev+0xc4>)
 800809a:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
 800809e:	2356      	movs	r3, #86	; 0x56
 80080a0:	f8a4 3562 	strh.w	r3, [r4, #1378]	; 0x562
 80080a4:	4b11      	ldr	r3, [pc, #68]	; (80080ec <_ZN23CustomContainerTableLogC1Ev+0xc8>)
 80080a6:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80080aa:	2500      	movs	r5, #0
 80080ac:	234e      	movs	r3, #78	; 0x4e
 80080ae:	f8a4 3576 	strh.w	r3, [r4, #1398]	; 0x576
 80080b2:	4629      	mov	r1, r5
 80080b4:	f8c4 557a 	str.w	r5, [r4, #1402]	; 0x57a
 80080b8:	f8a4 557e 	strh.w	r5, [r4, #1406]	; 0x57e
 80080bc:	f8a4 6578 	strh.w	r6, [r4, #1400]	; 0x578
 80080c0:	2228      	movs	r2, #40	; 0x28
 80080c2:	f504 60b0 	add.w	r0, r4, #1408	; 0x580
 80080c6:	f01d fd29 	bl	8025b1c <memset>
 80080ca:	2228      	movs	r2, #40	; 0x28
 80080cc:	4629      	mov	r1, r5
 80080ce:	f504 60b5 	add.w	r0, r4, #1448	; 0x5a8
 80080d2:	f01d fd23 	bl	8025b1c <memset>
}
 80080d6:	4620      	mov	r0, r4
 80080d8:	bd70      	pop	{r4, r5, r6, pc}
 80080da:	bf00      	nop
 80080dc:	08028790 	.word	0x08028790
 80080e0:	04420435 	.word	0x04420435
 80080e4:	04400431 	.word	0x04400431
 80080e8:	004c0045 	.word	0x004c0045
 80080ec:	004c004f 	.word	0x004c004f

080080f0 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef>:
}

void CustomContainerTableLog::UpdateLog_1(TileInfoTypeDef * data)
{
 80080f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
        visible = vis;
 80080f2:	2601      	movs	r6, #1
 80080f4:	4604      	mov	r4, r0
 80080f6:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
	setVisible(true);
	tmp = data->working_hours_log;
 80080fa:	481c      	ldr	r0, [pc, #112]	; (800816c <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x7c>)
 80080fc:	680b      	ldr	r3, [r1, #0]
 80080fe:	6003      	str	r3, [r0, #0]
{
 8008100:	460d      	mov	r5, r1
	tm_ptr = *gmtime(&tmp);
 8008102:	f002 f8fb 	bl	800a2fc <gmtime>
 8008106:	4a1a      	ldr	r2, [pc, #104]	; (8008170 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x80>)
 8008108:	6803      	ldr	r3, [r0, #0]
 800810a:	6013      	str	r3, [r2, #0]
 800810c:	6843      	ldr	r3, [r0, #4]
 800810e:	6053      	str	r3, [r2, #4]
 8008110:	6883      	ldr	r3, [r0, #8]
	tm_ptr.tm_mon = 1;
	tm_ptr.tm_mday = 30;
//
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8008112:	7851      	ldrb	r1, [r2, #1]
	tm_ptr = *gmtime(&tmp);
 8008114:	6093      	str	r3, [r2, #8]
	tm_ptr.tm_mday = 30;
 8008116:	231e      	movs	r3, #30
	tm_ptr.tm_mon = 1;
 8008118:	7156      	strb	r6, [r2, #5]
	tm_ptr.tm_mday = 30;
 800811a:	70d3      	strb	r3, [r2, #3]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 800811c:	9103      	str	r1, [sp, #12]
 800811e:	7891      	ldrb	r1, [r2, #2]
 8008120:	9102      	str	r1, [sp, #8]
	tm_ptr.tm_mday, tm_ptr.tm_mon, tm_ptr.tm_year + 1900, tm_ptr.tm_hour, tm_ptr.tm_min);
 8008122:	88d2      	ldrh	r2, [r2, #6]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8008124:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 8008128:	e9cd 6200 	strd	r6, r2, [sp]
 800812c:	2114      	movs	r1, #20
 800812e:	4a11      	ldr	r2, [pc, #68]	; (8008174 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x84>)
 8008130:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8008134:	f011 f9da 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
	Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%d", data->channel_num);
 8008138:	7a2b      	ldrb	r3, [r5, #8]
 800813a:	4a0f      	ldr	r2, [pc, #60]	; (8008178 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x88>)
 800813c:	2105      	movs	r1, #5
 800813e:	f504 608d 	add.w	r0, r4, #1128	; 0x468
 8008142:	f011 f9d3 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
	Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", NamesTypeChannel[data->ch_type]);
 8008146:	7c6b      	ldrb	r3, [r5, #17]
 8008148:	2214      	movs	r2, #20
 800814a:	fb02 4303 	mla	r3, r2, r3, r4
 800814e:	f203 43fe 	addw	r3, r3, #1278	; 0x4fe
 8008152:	4a0a      	ldr	r2, [pc, #40]	; (800817c <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x8c>)
 8008154:	210a      	movs	r1, #10
 8008156:	f204 4072 	addw	r0, r4, #1138	; 0x472
 800815a:	f011 f9c7 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
//	Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", NamesErr[err]);
//
//	Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", NamesGas[gas]);

	invalidate();
 800815e:	6823      	ldr	r3, [r4, #0]
 8008160:	695b      	ldr	r3, [r3, #20]
 8008162:	4620      	mov	r0, r4
}
 8008164:	b004      	add	sp, #16
 8008166:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 800816a:	4718      	bx	r3
 800816c:	200169f0 	.word	0x200169f0
 8008170:	200169f4 	.word	0x200169f4
 8008174:	08028770 	.word	0x08028770
 8008178:	08028456 	.word	0x08028456
 800817c:	08027501 	.word	0x08027501

08008180 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8008180:	4770      	bx	lr

08008182 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7executeES4_S6_>:
    virtual void execute(T1 t1, T2 t2)
 8008182:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8008184:	68c4      	ldr	r4, [r0, #12]
 8008186:	6845      	ldr	r5, [r0, #4]
 8008188:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 800818a:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 800818c:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8008190:	07e4      	lsls	r4, r4, #31
 8008192:	bf48      	it	mi
 8008194:	59ac      	ldrmi	r4, [r5, r6]
 8008196:	689b      	ldr	r3, [r3, #8]
 8008198:	bf48      	it	mi
 800819a:	58e3      	ldrmi	r3, [r4, r3]
    }
 800819c:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800819e:	4718      	bx	r3

080081a0 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 80081a0:	6843      	ldr	r3, [r0, #4]
 80081a2:	b12b      	cbz	r3, 80081b0 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x10>
 80081a4:	6883      	ldr	r3, [r0, #8]
 80081a6:	b92b      	cbnz	r3, 80081b4 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x14>
 80081a8:	68c0      	ldr	r0, [r0, #12]
 80081aa:	f000 0001 	and.w	r0, r0, #1
 80081ae:	4770      	bx	lr
 80081b0:	4618      	mov	r0, r3
 80081b2:	4770      	bx	lr
 80081b4:	2001      	movs	r0, #1
    }
 80081b6:	4770      	bx	lr

080081b8 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80081b8:	b510      	push	{r4, lr}
 80081ba:	2110      	movs	r1, #16
 80081bc:	4604      	mov	r4, r0
 80081be:	f01d fad1 	bl	8025764 <_ZdlPvj>
 80081c2:	4620      	mov	r0, r4
 80081c4:	bd10      	pop	{r4, pc}
	...

080081c8 <_ZN10DatePickerC1Ev>:
#include <gui/settings_screen/DatePicker.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DatePicker::DatePicker() :
 80081c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 80081cc:	4681      	mov	r9, r0
        : x(0), y(0), width(0), height(0)
 80081ce:	2500      	movs	r5, #0
 80081d0:	4ab5      	ldr	r2, [pc, #724]	; (80084a8 <_ZN10DatePickerC1Ev+0x2e0>)
 80081d2:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 80081d4:	f44f 7380 	mov.w	r3, #256	; 0x100
DatePicker::DatePicker() :
 80081d8:	4604      	mov	r4, r0
 80081da:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80081de:	e9c0 5503 	strd	r5, r5, [r0, #12]
 80081e2:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80081e6:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80081ea:	8483      	strh	r3, [r0, #36]	; 0x24
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 80081ec:	f849 2b2c 	str.w	r2, [r9], #44
 80081f0:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
        : Widget(), alpha(255), color(0)
 80081f4:	23ff      	movs	r3, #255	; 0xff
 80081f6:	f880 3052 	strb.w	r3, [r0, #82]	; 0x52
 80081fa:	f100 0860 	add.w	r8, r0, #96	; 0x60
        : Box(), borderColor(0), borderSize(0)
 80081fe:	4bab      	ldr	r3, [pc, #684]	; (80084ac <_ZN10DatePickerC1Ev+0x2e4>)
 8008200:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008202:	f504 56cd 	add.w	r6, r4, #6560	; 0x19a0
DatePicker::DatePicker() :
 8008206:	b088      	sub	sp, #32
 8008208:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 800820c:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8008210:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 8008214:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
        : color(col)
 8008218:	6545      	str	r5, [r0, #84]	; 0x54
 800821a:	6585      	str	r5, [r0, #88]	; 0x58
 800821c:	f8a0 505c 	strh.w	r5, [r0, #92]	; 0x5c
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 8008220:	360c      	adds	r6, #12
 8008222:	4640      	mov	r0, r8
 8008224:	f504 574b 	add.w	r7, r4, #12992	; 0x32c0
 8008228:	f001 fbe0 	bl	80099ec <_ZN13WheelSelectorC1Ev>
 800822c:	3738      	adds	r7, #56	; 0x38
 800822e:	4630      	mov	r0, r6
 8008230:	f001 fbdc 	bl	80099ec <_ZN13WheelSelectorC1Ev>
 8008234:	4638      	mov	r0, r7
 8008236:	f001 fbd9 	bl	80099ec <_ZN13WheelSelectorC1Ev>
        : pobject(pobject), pmemfun_2(pmemfun_2)
 800823a:	f644 4344 	movw	r3, #19524	; 0x4c44
 800823e:	4a9c      	ldr	r2, [pc, #624]	; (80084b0 <_ZN10DatePickerC1Ev+0x2e8>)
 8008240:	50e2      	str	r2, [r4, r3]
 8008242:	eb04 0a03 	add.w	sl, r4, r3
 8008246:	f644 434c 	movw	r3, #19532	; 0x4c4c
 800824a:	4a9a      	ldr	r2, [pc, #616]	; (80084b4 <_ZN10DatePickerC1Ev+0x2ec>)
 800824c:	f8ca 4004 	str.w	r4, [sl, #4]
 8008250:	50e2      	str	r2, [r4, r3]
 8008252:	f644 4350 	movw	r3, #19536	; 0x4c50
        setXY(x, y);
 8008256:	462a      	mov	r2, r5
 8008258:	50e5      	str	r5, [r4, r3]
 800825a:	4629      	mov	r1, r5
 800825c:	4648      	mov	r0, r9
 800825e:	f7fa f955 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008262:	4648      	mov	r0, r9
 8008264:	21e6      	movs	r1, #230	; 0xe6
 8008266:	f7f9 fee9 	bl	800203c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800826a:	4648      	mov	r0, r9
 800826c:	2182      	movs	r1, #130	; 0x82
 800826e:	f7f9 fee7 	bl	8002040 <_ZN8touchgfx8Drawable9setHeightEs>
        borderColor = color;
 8008272:	4a91      	ldr	r2, [pc, #580]	; (80084b8 <_ZN10DatePickerC1Ev+0x2f0>)
 8008274:	4b91      	ldr	r3, [pc, #580]	; (80084bc <_ZN10DatePickerC1Ev+0x2f4>)
 8008276:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 800827a:	2303      	movs	r3, #3
 800827c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
//    add(background);
	background.setPosition(0, 0, 230, 130);
	background.setColor(touchgfx::Color::getColorFromRGB(0, 102, 53));
	background.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 102));
	background.setBorderSize(3);
	add(background);
 8008280:	4649      	mov	r1, r9
 8008282:	4620      	mov	r0, r4
 8008284:	f009 fb04 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>

	months.setXY(10, 20);
 8008288:	2214      	movs	r2, #20
 800828a:	210a      	movs	r1, #10
 800828c:	4630      	mov	r0, r6
 800828e:	f7fa f93d 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    virtual void handleDragEvent(const DragEvent& evt);
    virtual void handleGestureEvent(const GestureEvent& evt);

    void setElementSelectedCallback(touchgfx::GenericCallback<const WheelSelector&, const int&>& callback)
    {
        elementSelectedAction = &callback;
 8008292:	f243 23f0 	movw	r3, #13040	; 0x32f0
	months.setElementSelectedCallback(onSelectedElementChanged);
	add(months);
 8008296:	4631      	mov	r1, r6
 8008298:	f844 a003 	str.w	sl, [r4, r3]
 800829c:	4620      	mov	r0, r4
 800829e:	f009 faf7 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    days.setXY(80, 20);
 80082a2:	2214      	movs	r2, #20
 80082a4:	2150      	movs	r1, #80	; 0x50
 80082a6:	4640      	mov	r0, r8
 80082a8:	f7fa f930 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    add(days);
 80082ac:	4641      	mov	r1, r8
 80082ae:	4620      	mov	r0, r4
 80082b0:	f009 faee 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    years.setXY(150, 20);
 80082b4:	2214      	movs	r2, #20
 80082b6:	2196      	movs	r1, #150	; 0x96
 80082b8:	4638      	mov	r0, r7
 80082ba:	f7fa f927 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80082be:	f644 433c 	movw	r3, #19516	; 0x4c3c
    years.setElementSelectedCallback(onSelectedElementChanged);
    add(years);
 80082c2:	4639      	mov	r1, r7
 80082c4:	f844 a003 	str.w	sl, [r4, r3]
 80082c8:	4620      	mov	r0, r4
 80082ca:	f009 fae1 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
 80082ce:	4b7c      	ldr	r3, [pc, #496]	; (80084c0 <_ZN10DatePickerC1Ev+0x2f8>)
 80082d0:	60a3      	str	r3, [r4, #8]
    setWidth(230);
    setHeight(130);

    // Setup the year wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    years.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 80082d2:	f06f 020d 	mvn.w	r2, #13
 80082d6:	231e      	movs	r3, #30
 80082d8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80082dc:	2202      	movs	r2, #2
 80082de:	e9cd 3200 	strd	r3, r2, [sp]
 80082e2:	2107      	movs	r1, #7
 80082e4:	235a      	movs	r3, #90	; 0x5a
 80082e6:	2246      	movs	r2, #70	; 0x46
 80082e8:	4638      	mov	r0, r7
 80082ea:	f001 fc31 	bl	8009b50 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
    {
        Unicode::UnicodeChar temp[6];
        Unicode::snprintf(temp, 6, "%d", i);
 80082ee:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80084c8 <_ZN10DatePickerC1Ev+0x300>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 80082f2:	f240 75e4 	movw	r5, #2020	; 0x7e4
        Unicode::snprintf(temp, 6, "%d", i);
 80082f6:	462b      	mov	r3, r5
 80082f8:	464a      	mov	r2, r9
 80082fa:	2106      	movs	r1, #6
 80082fc:	a805      	add	r0, sp, #20
 80082fe:	f011 f8f5 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        years.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008302:	ab05      	add	r3, sp, #20
 8008304:	2247      	movs	r2, #71	; 0x47
 8008306:	2146      	movs	r1, #70	; 0x46
 8008308:	4638      	mov	r0, r7
 800830a:	f001 fca7 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 800830e:	3501      	adds	r5, #1
 8008310:	f640 0302 	movw	r3, #2050	; 0x802
 8008314:	429d      	cmp	r5, r3
 8008316:	d1ee      	bne.n	80082f6 <_ZN10DatePickerC1Ev+0x12e>
    }
    years.setSelectedItem(1, 20);
 8008318:	4638      	mov	r0, r7
 800831a:	4b6a      	ldr	r3, [pc, #424]	; (80084c4 <_ZN10DatePickerC1Ev+0x2fc>)
    // a negative x value is used to place the overlay correctly inside the wheel
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
    for (int i = 1; i < 32; i++)
    {
        Unicode::UnicodeChar temp[3];
        Unicode::snprintf(temp, 3, "%d", i);
 800831c:	4f6a      	ldr	r7, [pc, #424]	; (80084c8 <_ZN10DatePickerC1Ev+0x300>)
    years.setSelectedItem(1, 20);
 800831e:	2214      	movs	r2, #20
 8008320:	2101      	movs	r1, #1
 8008322:	f001 ff35 	bl	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 8008326:	231e      	movs	r3, #30
 8008328:	f06f 020d 	mvn.w	r2, #13
 800832c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008330:	2202      	movs	r2, #2
 8008332:	e9cd 3200 	strd	r3, r2, [sp]
 8008336:	2107      	movs	r1, #7
 8008338:	235a      	movs	r3, #90	; 0x5a
 800833a:	2246      	movs	r2, #70	; 0x46
 800833c:	4640      	mov	r0, r8
 800833e:	f001 fc07 	bl	8009b50 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = 1; i < 32; i++)
 8008342:	2501      	movs	r5, #1
        Unicode::snprintf(temp, 3, "%d", i);
 8008344:	462b      	mov	r3, r5
 8008346:	463a      	mov	r2, r7
 8008348:	2103      	movs	r1, #3
 800834a:	a805      	add	r0, sp, #20
 800834c:	f011 f8ce 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    for (int i = 1; i < 32; i++)
 8008350:	3501      	adds	r5, #1
        days.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008352:	ab05      	add	r3, sp, #20
 8008354:	2247      	movs	r2, #71	; 0x47
 8008356:	2146      	movs	r1, #70	; 0x46
 8008358:	4640      	mov	r0, r8
 800835a:	f001 fc7f 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>
    for (int i = 1; i < 32; i++)
 800835e:	2d20      	cmp	r5, #32
 8008360:	d1f0      	bne.n	8008344 <_ZN10DatePickerC1Ev+0x17c>
    }
    days.setSelectedItem(1, 20);
 8008362:	4640      	mov	r0, r8
 8008364:	4b57      	ldr	r3, [pc, #348]	; (80084c4 <_ZN10DatePickerC1Ev+0x2fc>)
 8008366:	2214      	movs	r2, #20
 8008368:	2101      	movs	r1, #1
 800836a:	f001 ff11 	bl	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

    // Setup the month wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    months.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 800836e:	231e      	movs	r3, #30
 8008370:	f06f 020d 	mvn.w	r2, #13
 8008374:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008378:	2202      	movs	r2, #2
 800837a:	e9cd 3200 	strd	r3, r2, [sp]
 800837e:	4630      	mov	r0, r6
 8008380:	235a      	movs	r3, #90	; 0x5a
 8008382:	2246      	movs	r2, #70	; 0x46
 8008384:	2107      	movs	r1, #7
 8008386:	f001 fbe3 	bl	8009b50 <_ZN13WheelSelector5setupEtiiiiii>
    Unicode::UnicodeChar temp[5];

    Unicode::snprintf(temp, 5, "JAN");
 800838a:	4a50      	ldr	r2, [pc, #320]	; (80084cc <_ZN10DatePickerC1Ev+0x304>)
 800838c:	2105      	movs	r1, #5
 800838e:	a805      	add	r0, sp, #20
 8008390:	f011 f8ac 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008394:	ab05      	add	r3, sp, #20
 8008396:	4630      	mov	r0, r6
 8008398:	2247      	movs	r2, #71	; 0x47
 800839a:	2146      	movs	r1, #70	; 0x46
 800839c:	f001 fc5e 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "FEB");
 80083a0:	4a4b      	ldr	r2, [pc, #300]	; (80084d0 <_ZN10DatePickerC1Ev+0x308>)
 80083a2:	2105      	movs	r1, #5
 80083a4:	a805      	add	r0, sp, #20
 80083a6:	f011 f8a1 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80083aa:	ab05      	add	r3, sp, #20
 80083ac:	4630      	mov	r0, r6
 80083ae:	2247      	movs	r2, #71	; 0x47
 80083b0:	2146      	movs	r1, #70	; 0x46
 80083b2:	f001 fc53 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAR");
 80083b6:	4a47      	ldr	r2, [pc, #284]	; (80084d4 <_ZN10DatePickerC1Ev+0x30c>)
 80083b8:	2105      	movs	r1, #5
 80083ba:	a805      	add	r0, sp, #20
 80083bc:	f011 f896 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80083c0:	ab05      	add	r3, sp, #20
 80083c2:	4630      	mov	r0, r6
 80083c4:	2247      	movs	r2, #71	; 0x47
 80083c6:	2146      	movs	r1, #70	; 0x46
 80083c8:	f001 fc48 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "APR");
 80083cc:	4a42      	ldr	r2, [pc, #264]	; (80084d8 <_ZN10DatePickerC1Ev+0x310>)
 80083ce:	2105      	movs	r1, #5
 80083d0:	a805      	add	r0, sp, #20
 80083d2:	f011 f88b 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80083d6:	ab05      	add	r3, sp, #20
 80083d8:	4630      	mov	r0, r6
 80083da:	2247      	movs	r2, #71	; 0x47
 80083dc:	2146      	movs	r1, #70	; 0x46
 80083de:	f001 fc3d 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAY");
 80083e2:	4a3e      	ldr	r2, [pc, #248]	; (80084dc <_ZN10DatePickerC1Ev+0x314>)
 80083e4:	2105      	movs	r1, #5
 80083e6:	a805      	add	r0, sp, #20
 80083e8:	f011 f880 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80083ec:	ab05      	add	r3, sp, #20
 80083ee:	4630      	mov	r0, r6
 80083f0:	2247      	movs	r2, #71	; 0x47
 80083f2:	2146      	movs	r1, #70	; 0x46
 80083f4:	f001 fc32 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUN");
 80083f8:	4a39      	ldr	r2, [pc, #228]	; (80084e0 <_ZN10DatePickerC1Ev+0x318>)
 80083fa:	2105      	movs	r1, #5
 80083fc:	a805      	add	r0, sp, #20
 80083fe:	f011 f875 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008402:	ab05      	add	r3, sp, #20
 8008404:	4630      	mov	r0, r6
 8008406:	2247      	movs	r2, #71	; 0x47
 8008408:	2146      	movs	r1, #70	; 0x46
 800840a:	f001 fc27 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUL");
 800840e:	4a35      	ldr	r2, [pc, #212]	; (80084e4 <_ZN10DatePickerC1Ev+0x31c>)
 8008410:	2105      	movs	r1, #5
 8008412:	a805      	add	r0, sp, #20
 8008414:	f011 f86a 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008418:	ab05      	add	r3, sp, #20
 800841a:	4630      	mov	r0, r6
 800841c:	2247      	movs	r2, #71	; 0x47
 800841e:	2146      	movs	r1, #70	; 0x46
 8008420:	f001 fc1c 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "AUG");
 8008424:	4a30      	ldr	r2, [pc, #192]	; (80084e8 <_ZN10DatePickerC1Ev+0x320>)
 8008426:	2105      	movs	r1, #5
 8008428:	a805      	add	r0, sp, #20
 800842a:	f011 f85f 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800842e:	ab05      	add	r3, sp, #20
 8008430:	4630      	mov	r0, r6
 8008432:	2247      	movs	r2, #71	; 0x47
 8008434:	2146      	movs	r1, #70	; 0x46
 8008436:	f001 fc11 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "SEP");
 800843a:	4a2c      	ldr	r2, [pc, #176]	; (80084ec <_ZN10DatePickerC1Ev+0x324>)
 800843c:	2105      	movs	r1, #5
 800843e:	a805      	add	r0, sp, #20
 8008440:	f011 f854 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008444:	ab05      	add	r3, sp, #20
 8008446:	4630      	mov	r0, r6
 8008448:	2247      	movs	r2, #71	; 0x47
 800844a:	2146      	movs	r1, #70	; 0x46
 800844c:	f001 fc06 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "OCT");
 8008450:	4a27      	ldr	r2, [pc, #156]	; (80084f0 <_ZN10DatePickerC1Ev+0x328>)
 8008452:	2105      	movs	r1, #5
 8008454:	a805      	add	r0, sp, #20
 8008456:	f011 f849 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800845a:	ab05      	add	r3, sp, #20
 800845c:	4630      	mov	r0, r6
 800845e:	2247      	movs	r2, #71	; 0x47
 8008460:	2146      	movs	r1, #70	; 0x46
 8008462:	f001 fbfb 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "NOV");
 8008466:	4a23      	ldr	r2, [pc, #140]	; (80084f4 <_ZN10DatePickerC1Ev+0x32c>)
 8008468:	2105      	movs	r1, #5
 800846a:	a805      	add	r0, sp, #20
 800846c:	f011 f83e 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008470:	ab05      	add	r3, sp, #20
 8008472:	4630      	mov	r0, r6
 8008474:	2247      	movs	r2, #71	; 0x47
 8008476:	2146      	movs	r1, #70	; 0x46
 8008478:	f001 fbf0 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "DEC");
 800847c:	4a1e      	ldr	r2, [pc, #120]	; (80084f8 <_ZN10DatePickerC1Ev+0x330>)
 800847e:	2105      	movs	r1, #5
 8008480:	a805      	add	r0, sp, #20
 8008482:	f011 f833 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8008486:	ab05      	add	r3, sp, #20
 8008488:	4630      	mov	r0, r6
 800848a:	2247      	movs	r2, #71	; 0x47
 800848c:	2146      	movs	r1, #70	; 0x46
 800848e:	f001 fbe5 	bl	8009c5c <_ZN13WheelSelector7addTextEttPKt>

    months.setSelectedItem(1, 20);
 8008492:	4630      	mov	r0, r6
 8008494:	4b0b      	ldr	r3, [pc, #44]	; (80084c4 <_ZN10DatePickerC1Ev+0x2fc>)
 8008496:	2214      	movs	r2, #20
 8008498:	2101      	movs	r1, #1
 800849a:	f001 fe79 	bl	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
}
 800849e:	4620      	mov	r0, r4
 80084a0:	b008      	add	sp, #32
 80084a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80084a6:	bf00      	nop
 80084a8:	08028868 	.word	0x08028868
 80084ac:	0802a200 	.word	0x0802a200
 80084b0:	08028850 	.word	0x08028850
 80084b4:	08008591 	.word	0x08008591
 80084b8:	ff006635 	.word	0xff006635
 80084bc:	ff000066 	.word	0xff000066
 80084c0:	008200e6 	.word	0x008200e6
 80084c4:	0801738d 	.word	0x0801738d
 80084c8:	08028456 	.word	0x08028456
 80084cc:	08028818 	.word	0x08028818
 80084d0:	0802881c 	.word	0x0802881c
 80084d4:	08028820 	.word	0x08028820
 80084d8:	08028824 	.word	0x08028824
 80084dc:	08028828 	.word	0x08028828
 80084e0:	0802882c 	.word	0x0802882c
 80084e4:	08028830 	.word	0x08028830
 80084e8:	08028834 	.word	0x08028834
 80084ec:	08028838 	.word	0x08028838
 80084f0:	0802883c 	.word	0x0802883c
 80084f4:	08028840 	.word	0x08028840
 80084f8:	08028844 	.word	0x08028844

080084fc <_ZN10DatePicker6setDayEiiPFstsstE>:
{
}

void DatePicker::setDay(int index, int duration, EasingEquation equation)
{
    days.setSelectedItem(index, duration, equation);
 80084fc:	3060      	adds	r0, #96	; 0x60
 80084fe:	f001 be47 	b.w	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08008502 <_ZN10DatePicker8setMonthEiiPFstsstE>:
}

void DatePicker::setMonth(int index, int duration, EasingEquation equation)
{
    months.setSelectedItem(index, duration, equation);
 8008502:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8008506:	300c      	adds	r0, #12
 8008508:	f001 be42 	b.w	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

0800850c <_ZN10DatePicker7setYearEiiPFstsstE>:
}

void DatePicker::setYear(int index, int duration, EasingEquation equation)
{
    years.setSelectedItem(index, duration, equation);
 800850c:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8008510:	3038      	adds	r0, #56	; 0x38
 8008512:	f001 be3d 	b.w	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08008516 <_ZN10DatePicker6getDayEv>:
}

int DatePicker::getDay()
{
    return days.getSelectedItem();
 8008516:	3060      	adds	r0, #96	; 0x60
 8008518:	f001 bc44 	b.w	8009da4 <_ZN13WheelSelector15getSelectedItemEv>

0800851c <_ZN10DatePicker8getMonthEv>:
}

int DatePicker::getMonth()
{
    return months.getSelectedItem();
 800851c:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8008520:	300c      	adds	r0, #12
 8008522:	f001 bc3f 	b.w	8009da4 <_ZN13WheelSelector15getSelectedItemEv>

08008526 <_ZN10DatePicker7getYearEv>:
}

int DatePicker::getYear()
{
    return years.getSelectedItem();
 8008526:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 800852a:	3038      	adds	r0, #56	; 0x38
 800852c:	f001 bc3a 	b.w	8009da4 <_ZN13WheelSelector15getSelectedItemEv>

08008530 <_ZN10DatePicker15getNumberOfDaysEtt>:
}

uint16_t DatePicker::getNumberOfDays(uint16_t month, uint16_t year)
{
    uint16_t result = 0;
    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
 8008530:	290c      	cmp	r1, #12
 8008532:	d804      	bhi.n	800853e <_ZN10DatePicker15getNumberOfDaysEtt+0xe>
 8008534:	f241 53aa 	movw	r3, #5546	; 0x15aa
 8008538:	40cb      	lsrs	r3, r1
 800853a:	07db      	lsls	r3, r3, #31
 800853c:	d41d      	bmi.n	800857a <_ZN10DatePicker15getNumberOfDaysEtt+0x4a>
    {
        result = 31;
    }
    else if (month == 4 || month == 6 || month == 9 || month == 11)
 800853e:	f021 0302 	bic.w	r3, r1, #2
 8008542:	2b04      	cmp	r3, #4
 8008544:	b298      	uxth	r0, r3
 8008546:	d01a      	beq.n	800857e <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
 8008548:	2809      	cmp	r0, #9
 800854a:	d018      	beq.n	800857e <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
    {
        result = 30;
    }
    else if (month == 2)
 800854c:	2902      	cmp	r1, #2
 800854e:	d118      	bne.n	8008582 <_ZN10DatePicker15getNumberOfDaysEtt+0x52>
    {
        result = 28;
        if (year % 400 == 0)
 8008550:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8008554:	fbb2 f3f1 	udiv	r3, r2, r1
 8008558:	fb01 2313 	mls	r3, r1, r3, r2
 800855c:	b29b      	uxth	r3, r3
 800855e:	b193      	cbz	r3, 8008586 <_ZN10DatePicker15getNumberOfDaysEtt+0x56>
        {
            result++;
        }
        else if (year % 100 == 0)
 8008560:	2164      	movs	r1, #100	; 0x64
 8008562:	fbb2 f3f1 	udiv	r3, r2, r1
 8008566:	fb01 2313 	mls	r3, r1, r3, r2
 800856a:	b29b      	uxth	r3, r3
 800856c:	b16b      	cbz	r3, 800858a <_ZN10DatePicker15getNumberOfDaysEtt+0x5a>
        {
        }
        else if (year % 4 == 0)
 800856e:	f012 0f03 	tst.w	r2, #3
            result++;
 8008572:	bf14      	ite	ne
 8008574:	201c      	movne	r0, #28
 8008576:	201d      	moveq	r0, #29
 8008578:	4770      	bx	lr
        result = 31;
 800857a:	201f      	movs	r0, #31
 800857c:	4770      	bx	lr
        result = 30;
 800857e:	201e      	movs	r0, #30
 8008580:	4770      	bx	lr
    uint16_t result = 0;
 8008582:	2000      	movs	r0, #0
 8008584:	4770      	bx	lr
            result++;
 8008586:	201d      	movs	r0, #29
 8008588:	4770      	bx	lr
        result = 28;
 800858a:	201c      	movs	r0, #28
        {
            result++;
        }
    }
    return result;
}
 800858c:	4770      	bx	lr
	...

08008590 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi>:
{
 8008590:	b570      	push	{r4, r5, r6, lr}
 8008592:	4604      	mov	r4, r0
    int numberOfDaysInMonth = getNumberOfDays(months.getSelectedItem() + 1, START_YEAR + years.getSelectedItem());
 8008594:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8008598:	300c      	adds	r0, #12
 800859a:	f001 fc03 	bl	8009da4 <_ZN13WheelSelector15getSelectedItemEv>
 800859e:	4605      	mov	r5, r0
 80085a0:	f504 504b 	add.w	r0, r4, #12992	; 0x32c0
 80085a4:	3038      	adds	r0, #56	; 0x38
 80085a6:	f001 fbfd 	bl	8009da4 <_ZN13WheelSelector15getSelectedItemEv>
 80085aa:	1c69      	adds	r1, r5, #1
 80085ac:	f200 70e4 	addw	r0, r0, #2020	; 0x7e4
 80085b0:	b282      	uxth	r2, r0
 80085b2:	b289      	uxth	r1, r1
 80085b4:	4620      	mov	r0, r4
 80085b6:	f7ff ffbb 	bl	8008530 <_ZN10DatePicker15getNumberOfDaysEtt>
    if (numberOfDaysInMonth == 28)
 80085ba:	281c      	cmp	r0, #28
 80085bc:	f104 0460 	add.w	r4, r4, #96	; 0x60
 80085c0:	d110      	bne.n	80085e4 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x54>
        days.hideBottomElements(3);
 80085c2:	2103      	movs	r1, #3
 80085c4:	4620      	mov	r0, r4
 80085c6:	f001 fce5 	bl	8009f94 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 27)
 80085ca:	4620      	mov	r0, r4
 80085cc:	f001 fbea 	bl	8009da4 <_ZN13WheelSelector15getSelectedItemEv>
 80085d0:	281b      	cmp	r0, #27
 80085d2:	dd2b      	ble.n	800862c <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(27, 20);
 80085d4:	4b16      	ldr	r3, [pc, #88]	; (8008630 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 80085d6:	2214      	movs	r2, #20
 80085d8:	211b      	movs	r1, #27
            days.setSelectedItem(28, 20);
 80085da:	4620      	mov	r0, r4
}
 80085dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            days.setSelectedItem(28, 20);
 80085e0:	f001 bdd6 	b.w	800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    else if (numberOfDaysInMonth == 29)
 80085e4:	281d      	cmp	r0, #29
 80085e6:	d10c      	bne.n	8008602 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x72>
        days.hideBottomElements(2);
 80085e8:	2102      	movs	r1, #2
 80085ea:	4620      	mov	r0, r4
 80085ec:	f001 fcd2 	bl	8009f94 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 28)
 80085f0:	4620      	mov	r0, r4
 80085f2:	f001 fbd7 	bl	8009da4 <_ZN13WheelSelector15getSelectedItemEv>
 80085f6:	281c      	cmp	r0, #28
 80085f8:	dd18      	ble.n	800862c <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(28, 20);
 80085fa:	4b0d      	ldr	r3, [pc, #52]	; (8008630 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 80085fc:	2214      	movs	r2, #20
 80085fe:	211c      	movs	r1, #28
 8008600:	e7eb      	b.n	80085da <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
    else if (numberOfDaysInMonth == 30)
 8008602:	281e      	cmp	r0, #30
 8008604:	d10c      	bne.n	8008620 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x90>
        days.hideBottomElements(1);
 8008606:	2101      	movs	r1, #1
 8008608:	4620      	mov	r0, r4
 800860a:	f001 fcc3 	bl	8009f94 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 29)
 800860e:	4620      	mov	r0, r4
 8008610:	f001 fbc8 	bl	8009da4 <_ZN13WheelSelector15getSelectedItemEv>
 8008614:	281d      	cmp	r0, #29
 8008616:	dd09      	ble.n	800862c <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(29, 20);
 8008618:	4b05      	ldr	r3, [pc, #20]	; (8008630 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 800861a:	2214      	movs	r2, #20
 800861c:	211d      	movs	r1, #29
 800861e:	e7dc      	b.n	80085da <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
        days.hideBottomElements(0);
 8008620:	4620      	mov	r0, r4
 8008622:	2100      	movs	r1, #0
}
 8008624:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        days.hideBottomElements(0);
 8008628:	f001 bcb4 	b.w	8009f94 <_ZN13WheelSelector18hideBottomElementsEi>
}
 800862c:	bd70      	pop	{r4, r5, r6, pc}
 800862e:	bf00      	nop
 8008630:	0801738d 	.word	0x0801738d

08008634 <_ZN13WheelSelectorD1Ev>:
class WheelSelector : public Container
 8008634:	4b0c      	ldr	r3, [pc, #48]	; (8008668 <_ZN13WheelSelectorD1Ev+0x34>)
 8008636:	b570      	push	{r4, r5, r6, lr}
 8008638:	4604      	mov	r4, r0
 800863a:	6003      	str	r3, [r0, #0]
 800863c:	f241 7518 	movw	r5, #5912	; 0x1718
 8008640:	f640 4698 	movw	r6, #3224	; 0xc98
 8008644:	5963      	ldr	r3, [r4, r5]
 8008646:	1960      	adds	r0, r4, r5
 8008648:	681b      	ldr	r3, [r3, #0]
 800864a:	3d54      	subs	r5, #84	; 0x54
 800864c:	4798      	blx	r3
 800864e:	42b5      	cmp	r5, r6
 8008650:	d1f8      	bne.n	8008644 <_ZN13WheelSelectorD1Ev+0x10>
 8008652:	f44f 652d 	mov.w	r5, #2768	; 0xad0
 8008656:	5963      	ldr	r3, [r4, r5]
 8008658:	1960      	adds	r0, r4, r5
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	3d54      	subs	r5, #84	; 0x54
 800865e:	4798      	blx	r3
 8008660:	2d50      	cmp	r5, #80	; 0x50
 8008662:	d1f8      	bne.n	8008656 <_ZN13WheelSelectorD1Ev+0x22>
 8008664:	4620      	mov	r0, r4
 8008666:	bd70      	pop	{r4, r5, r6, pc}
 8008668:	08028cc0 	.word	0x08028cc0

0800866c <_ZN10DatePickerD1Ev>:
DatePicker::~DatePicker()
 800866c:	4b09      	ldr	r3, [pc, #36]	; (8008694 <_ZN10DatePickerD1Ev+0x28>)
 800866e:	b510      	push	{r4, lr}
 8008670:	4604      	mov	r4, r0
 8008672:	6003      	str	r3, [r0, #0]
 8008674:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8008678:	3038      	adds	r0, #56	; 0x38
 800867a:	f7ff ffdb 	bl	8008634 <_ZN13WheelSelectorD1Ev>
 800867e:	f504 50cd 	add.w	r0, r4, #6560	; 0x19a0
 8008682:	300c      	adds	r0, #12
 8008684:	f7ff ffd6 	bl	8008634 <_ZN13WheelSelectorD1Ev>
 8008688:	f104 0060 	add.w	r0, r4, #96	; 0x60
 800868c:	f7ff ffd2 	bl	8008634 <_ZN13WheelSelectorD1Ev>
}
 8008690:	4620      	mov	r0, r4
 8008692:	bd10      	pop	{r4, pc}
 8008694:	08028868 	.word	0x08028868

08008698 <_ZN10DatePickerD0Ev>:
DatePicker::~DatePicker()
 8008698:	b510      	push	{r4, lr}
 800869a:	4604      	mov	r4, r0
}
 800869c:	f7ff ffe6 	bl	800866c <_ZN10DatePickerD1Ev>
 80086a0:	4620      	mov	r0, r4
 80086a2:	f644 4154 	movw	r1, #19540	; 0x4c54
 80086a6:	f01d f85d 	bl	8025764 <_ZdlPvj>
 80086aa:	4620      	mov	r0, r4
 80086ac:	bd10      	pop	{r4, pc}

080086ae <_ZN13WheelSelectorD0Ev>:
 80086ae:	b510      	push	{r4, lr}
 80086b0:	4604      	mov	r4, r0
 80086b2:	f7ff ffbf 	bl	8008634 <_ZN13WheelSelectorD1Ev>
 80086b6:	4620      	mov	r0, r4
 80086b8:	f641 114c 	movw	r1, #6476	; 0x194c
 80086bc:	f01d f852 	bl	8025764 <_ZdlPvj>
 80086c0:	4620      	mov	r0, r4
 80086c2:	bd10      	pop	{r4, pc}

080086c4 <_ZN21DateSelectorContainerC1Ev>:
#include <gui/settings_screen/DateSelectorContainer.hpp>

DateSelectorContainer::DateSelectorContainer()
 80086c4:	b570      	push	{r4, r5, r6, lr}
          visible(true)
 80086c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80086ca:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 80086cc:	2500      	movs	r5, #0
 80086ce:	8483      	strh	r3, [r0, #36]	; 0x24
 80086d0:	4b0b      	ldr	r3, [pc, #44]	; (8008700 <_ZN21DateSelectorContainerC1Ev+0x3c>)
 80086d2:	6285      	str	r5, [r0, #40]	; 0x28
 80086d4:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80086d8:	e9c0 5503 	strd	r5, r5, [r0, #12]
 80086dc:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80086e0:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80086e4:	f846 3b2c 	str.w	r3, [r6], #44
 80086e8:	4604      	mov	r4, r0
 80086ea:	4630      	mov	r0, r6
 80086ec:	f7ff fd6c 	bl	80081c8 <_ZN10DatePickerC1Ev>
{
    datePicker.setXY(0, 0);
    add(datePicker);
 80086f0:	4620      	mov	r0, r4
        rect.x = x;
 80086f2:	6325      	str	r5, [r4, #48]	; 0x30
 80086f4:	4631      	mov	r1, r6
 80086f6:	f009 f8cb 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80086fa:	4620      	mov	r0, r4
 80086fc:	bd70      	pop	{r4, r5, r6, pc}
 80086fe:	bf00      	nop
 8008700:	080288f4 	.word	0x080288f4

08008704 <_ZN21DateSelectorContainer7setDateEthh>:
DateSelectorContainer::~DateSelectorContainer()
{
}

void DateSelectorContainer::setDate(uint16_t year, uint8_t month, uint8_t day)
{
 8008704:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008706:	460c      	mov	r4, r1
 8008708:	4619      	mov	r1, r3
 800870a:	4615      	mov	r5, r2
    datePicker.setDay((day - 1), 16, EasingEquations::backEaseOut);
 800870c:	302c      	adds	r0, #44	; 0x2c
 800870e:	4b0d      	ldr	r3, [pc, #52]	; (8008744 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 8008710:	9001      	str	r0, [sp, #4]
 8008712:	2210      	movs	r2, #16
 8008714:	3901      	subs	r1, #1
 8008716:	f7ff fef1 	bl	80084fc <_ZN10DatePicker6setDayEiiPFstsstE>
    datePicker.setMonth(month, 16, EasingEquations::backEaseOut);
 800871a:	4629      	mov	r1, r5
 800871c:	9801      	ldr	r0, [sp, #4]
 800871e:	4b09      	ldr	r3, [pc, #36]	; (8008744 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 8008720:	2210      	movs	r2, #16
 8008722:	f7ff feee 	bl	8008502 <_ZN10DatePicker8setMonthEiiPFstsstE>
    if(year >= 120){
 8008726:	2c77      	cmp	r4, #119	; 0x77
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 8008728:	4b06      	ldr	r3, [pc, #24]	; (8008744 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
    if(year >= 120){
 800872a:	9801      	ldr	r0, [sp, #4]
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 800872c:	f04f 0210 	mov.w	r2, #16
 8008730:	bf8c      	ite	hi
 8008732:	f1a4 0178 	subhi.w	r1, r4, #120	; 0x78
    }
    else{
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 8008736:	2100      	movls	r1, #0
    }
}
 8008738:	b003      	add	sp, #12
 800873a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 800873e:	f7ff bee5 	b.w	800850c <_ZN10DatePicker7setYearEiiPFstsstE>
 8008742:	bf00      	nop
 8008744:	0801738d 	.word	0x0801738d

08008748 <_ZN21DateSelectorContainer7getYearEv>:

uint16_t DateSelectorContainer::getYear()
{
 8008748:	b508      	push	{r3, lr}
    return (datePicker.getYear() + 120);
 800874a:	302c      	adds	r0, #44	; 0x2c
 800874c:	f7ff feeb 	bl	8008526 <_ZN10DatePicker7getYearEv>
 8008750:	3078      	adds	r0, #120	; 0x78
}
 8008752:	b280      	uxth	r0, r0
 8008754:	bd08      	pop	{r3, pc}

08008756 <_ZN21DateSelectorContainer8getMonthEv>:

uint8_t DateSelectorContainer::getMonth()
{
 8008756:	b508      	push	{r3, lr}
    return datePicker.getMonth();
 8008758:	302c      	adds	r0, #44	; 0x2c
 800875a:	f7ff fedf 	bl	800851c <_ZN10DatePicker8getMonthEv>
}
 800875e:	b2c0      	uxtb	r0, r0
 8008760:	bd08      	pop	{r3, pc}

08008762 <_ZN21DateSelectorContainer6getDayEv>:

uint8_t DateSelectorContainer::getDay()
{
 8008762:	b508      	push	{r3, lr}
    return (datePicker.getDay() + 1);
 8008764:	302c      	adds	r0, #44	; 0x2c
 8008766:	f7ff fed6 	bl	8008516 <_ZN10DatePicker6getDayEv>
 800876a:	3001      	adds	r0, #1
}
 800876c:	b2c0      	uxtb	r0, r0
 800876e:	bd08      	pop	{r3, pc}

08008770 <_ZN21DateSelectorContainerD1Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8008770:	b510      	push	{r4, lr}
 8008772:	4b04      	ldr	r3, [pc, #16]	; (8008784 <_ZN21DateSelectorContainerD1Ev+0x14>)
 8008774:	4604      	mov	r4, r0
 8008776:	f840 3b2c 	str.w	r3, [r0], #44
 800877a:	f7ff ff77 	bl	800866c <_ZN10DatePickerD1Ev>
}
 800877e:	4620      	mov	r0, r4
 8008780:	bd10      	pop	{r4, pc}
 8008782:	bf00      	nop
 8008784:	080288f4 	.word	0x080288f4

08008788 <_ZN21DateSelectorContainerD0Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8008788:	b510      	push	{r4, lr}
 800878a:	4604      	mov	r4, r0
}
 800878c:	f7ff fff0 	bl	8008770 <_ZN21DateSelectorContainerD1Ev>
 8008790:	4620      	mov	r0, r4
 8008792:	f44f 4199 	mov.w	r1, #19584	; 0x4c80
 8008796:	f01c ffe5 	bl	8025764 <_ZdlPvj>
 800879a:	4620      	mov	r0, r4
 800879c:	bd10      	pop	{r4, pc}

0800879e <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800879e:	4770      	bx	lr

080087a0 <_ZN19FrontendApplicationD0Ev>:
 80087a0:	b510      	push	{r4, lr}
 80087a2:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80087a6:	4604      	mov	r4, r0
 80087a8:	f01c ffdc 	bl	8025764 <_ZdlPvj>
 80087ac:	4620      	mov	r0, r4
 80087ae:	bd10      	pop	{r4, pc}

080087b0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80087b0:	b510      	push	{r4, lr}
 80087b2:	4604      	mov	r4, r0
    {
        model.tick();
 80087b4:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80087b8:	f000 f856 	bl	8008868 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80087bc:	4620      	mov	r0, r4
    }
 80087be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80087c2:	f00d b8bf 	b.w	8015944 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080087c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80087c8:	b510      	push	{r4, lr}
 80087ca:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80087cc:	f7fc fa82 	bl	8004cd4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80087d0:	4b01      	ldr	r3, [pc, #4]	; (80087d8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80087d2:	6023      	str	r3, [r4, #0]
{

}
 80087d4:	4620      	mov	r0, r4
 80087d6:	bd10      	pop	{r4, pc}
 80087d8:	08028980 	.word	0x08028980

080087dc <_ZN8ListTileD1Ev>:

class ListTile : public ListTileBase
{
public:
    ListTile();
    virtual ~ListTile() {}
 80087dc:	4770      	bx	lr

080087de <_ZN8ListTile10initializeEv>:

}

void ListTile::initialize()
{
    ListTileBase::initialize();
 80087de:	f7fc bca1 	b.w	8005124 <_ZN12ListTileBase10initializeEv>

080087e2 <_ZN8ListTileD0Ev>:
 80087e2:	b510      	push	{r4, lr}
 80087e4:	21ec      	movs	r1, #236	; 0xec
 80087e6:	4604      	mov	r4, r0
 80087e8:	f01c ffbc 	bl	8025764 <_ZdlPvj>
 80087ec:	4620      	mov	r0, r4
 80087ee:	bd10      	pop	{r4, pc}

080087f0 <_ZN8ListTileC1Ev>:
ListTile::ListTile() :
 80087f0:	b510      	push	{r4, lr}
 80087f2:	4604      	mov	r4, r0
    index(0), selected(false)
 80087f4:	f7fc fc9e 	bl	8005134 <_ZN12ListTileBaseC1Ev>
 80087f8:	4b03      	ldr	r3, [pc, #12]	; (8008808 <_ZN8ListTileC1Ev+0x18>)
 80087fa:	6023      	str	r3, [r4, #0]
 80087fc:	2300      	movs	r3, #0
 80087fe:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
}
 8008802:	4620      	mov	r0, r4
 8008804:	bd10      	pop	{r4, pc}
 8008806:	bf00      	nop
 8008808:	080289c4 	.word	0x080289c4

0800880c <_ZN8ListTile10updateTextEPt>:
}

void ListTile::updateText(Unicode::UnicodeChar* buf)
{
 800880c:	b510      	push	{r4, lr}
 800880e:	460a      	mov	r2, r1
 8008810:	4604      	mov	r4, r0
    Unicode::snprintf(textBuffer, TEXT_SIZE, buf);
 8008812:	2110      	movs	r1, #16
 8008814:	30c4      	adds	r0, #196	; 0xc4
 8008816:	f010 fe53 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
    text.invalidate();
 800881a:	f104 0084 	add.w	r0, r4, #132	; 0x84
}
 800881e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    text.invalidate();
 8008822:	f00e b963 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

08008826 <_ZN8ListTile8setIndexEh>:

void ListTile::setIndex(uint8_t ind)
{
    index = ind;
 8008826:	f880 10e8 	strb.w	r1, [r0, #232]	; 0xe8
}
 800882a:	4770      	bx	lr

0800882c <_ZN8ListTile8getIndexEv>:

uint8_t ListTile::getIndex()
{
    return index;
}
 800882c:	f890 00e8 	ldrb.w	r0, [r0, #232]	; 0xe8
 8008830:	4770      	bx	lr

08008832 <_ZN8ListTile11setSelectedEi>:

void ListTile::setSelected(int x)
{
 8008832:	b538      	push	{r3, r4, r5, lr}
    boxBg.setWidth(x);
    boxBg.setVisible(true);
    invalidate();
 8008834:	6803      	ldr	r3, [r0, #0]
    boxBg.setWidth(x);
 8008836:	f8a0 1060 	strh.w	r1, [r0, #96]	; 0x60
{
 800883a:	4604      	mov	r4, r0
        visible = vis;
 800883c:	2501      	movs	r5, #1
    invalidate();
 800883e:	695b      	ldr	r3, [r3, #20]
 8008840:	f880 507d 	strb.w	r5, [r0, #125]	; 0x7d
 8008844:	4798      	blx	r3
    selected = true;
 8008846:	f884 50e9 	strb.w	r5, [r4, #233]	; 0xe9
}
 800884a:	bd38      	pop	{r3, r4, r5, pc}

0800884c <_ZN8ListTile13setUnselectedEv>:

void ListTile::setUnselected()
{
 800884c:	b538      	push	{r3, r4, r5, lr}
    boxBg.setVisible(false);
    invalidate();
 800884e:	6803      	ldr	r3, [r0, #0]
{
 8008850:	4604      	mov	r4, r0
 8008852:	2500      	movs	r5, #0
    invalidate();
 8008854:	695b      	ldr	r3, [r3, #20]
 8008856:	f880 507d 	strb.w	r5, [r0, #125]	; 0x7d
 800885a:	4798      	blx	r3
    selected = false;
 800885c:	f884 50e9 	strb.w	r5, [r4, #233]	; 0xe9
}
 8008860:	bd38      	pop	{r3, r4, r5, pc}

08008862 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8008862:	2200      	movs	r2, #0
 8008864:	6002      	str	r2, [r0, #0]
{

}
 8008866:	4770      	bx	lr

08008868 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8008868:	4770      	bx	lr

0800886a <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800886a:	4770      	bx	lr

0800886c <_ZThn4_N16Screen1PresenterD1Ev>:
 800886c:	3804      	subs	r0, #4
 800886e:	4770      	bx	lr

08008870 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8008870:	4770      	bx	lr

08008872 <_ZN16Screen1PresenterD0Ev>:
 8008872:	b510      	push	{r4, lr}
 8008874:	2110      	movs	r1, #16
 8008876:	4604      	mov	r4, r0
 8008878:	f01c ff74 	bl	8025764 <_ZdlPvj>
 800887c:	4620      	mov	r0, r4
 800887e:	bd10      	pop	{r4, pc}

08008880 <_ZThn4_N16Screen1PresenterD0Ev>:
 8008880:	f1a0 0004 	sub.w	r0, r0, #4
 8008884:	e7f5      	b.n	8008872 <_ZN16Screen1PresenterD0Ev>
	...

08008888 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8008888:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800888a:	2200      	movs	r2, #0
 800888c:	6082      	str	r2, [r0, #8]
    : view(v)
 800888e:	4a04      	ldr	r2, [pc, #16]	; (80088a0 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8008890:	60c1      	str	r1, [r0, #12]
 8008892:	f102 0408 	add.w	r4, r2, #8
 8008896:	3220      	adds	r2, #32
 8008898:	6004      	str	r4, [r0, #0]
 800889a:	6042      	str	r2, [r0, #4]
}
 800889c:	bd10      	pop	{r4, pc}
 800889e:	bf00      	nop
 80088a0:	08028a50 	.word	0x08028a50

080088a4 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80088a4:	4770      	bx	lr

080088a6 <_ZN8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80088a6:	4770      	bx	lr

080088a8 <_ZN8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7executeEhS3_>:
    virtual void execute(T1 t1, T2 t2)
 80088a8:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80088aa:	68c4      	ldr	r4, [r0, #12]
 80088ac:	6845      	ldr	r5, [r0, #4]
 80088ae:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 80088b0:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 80088b2:	eb05 0064 	add.w	r0, r5, r4, asr #1
 80088b6:	07e4      	lsls	r4, r4, #31
 80088b8:	bf48      	it	mi
 80088ba:	59ac      	ldrmi	r4, [r5, r6]
 80088bc:	689b      	ldr	r3, [r3, #8]
 80088be:	bf48      	it	mi
 80088c0:	58e3      	ldrmi	r3, [r4, r3]
    }
 80088c2:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80088c4:	4718      	bx	r3

080088c6 <_ZNK8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 80088c6:	6843      	ldr	r3, [r0, #4]
 80088c8:	b12b      	cbz	r3, 80088d6 <_ZNK8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7isValidEv+0x10>
 80088ca:	6883      	ldr	r3, [r0, #8]
 80088cc:	b92b      	cbnz	r3, 80088da <_ZNK8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7isValidEv+0x14>
 80088ce:	68c0      	ldr	r0, [r0, #12]
 80088d0:	f000 0001 	and.w	r0, r0, #1
 80088d4:	4770      	bx	lr
 80088d6:	4618      	mov	r0, r3
 80088d8:	4770      	bx	lr
 80088da:	2001      	movs	r0, #1
    }
 80088dc:	4770      	bx	lr

080088de <_ZN8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80088de:	b510      	push	{r4, lr}
 80088e0:	2110      	movs	r1, #16
 80088e2:	4604      	mov	r4, r0
 80088e4:	f01c ff3e 	bl	8025764 <_ZdlPvj>
 80088e8:	4620      	mov	r0, r4
 80088ea:	bd10      	pop	{r4, pc}

080088ec <_ZN11Screen1View18functionFilterDateEv>:
	modalWindow1.setVisible(false);
	invalidate();
}

void Screen1View::functionFilterDate(void)
{
 80088ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	static time_p tmp;
	static struct tm timeptr;
	tmp = time_stop_fil;
 80088ee:	4e1a      	ldr	r6, [pc, #104]	; (8008958 <_ZN11Screen1View18functionFilterDateEv+0x6c>)
	timeptr = *gmtime(&tmp);
 80088f0:	4c1a      	ldr	r4, [pc, #104]	; (800895c <_ZN11Screen1View18functionFilterDateEv+0x70>)
	tmp = time_stop_fil;
 80088f2:	f500 37ac 	add.w	r7, r0, #88064	; 0x15800
{
 80088f6:	4605      	mov	r5, r0
	tmp = time_stop_fil;
 80088f8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80088fa:	6033      	str	r3, [r6, #0]
	timeptr = *gmtime(&tmp);
 80088fc:	4630      	mov	r0, r6
 80088fe:	f001 fcfd 	bl	800a2fc <gmtime>
 8008902:	6803      	ldr	r3, [r0, #0]
 8008904:	6023      	str	r3, [r4, #0]
 8008906:	6843      	ldr	r3, [r0, #4]
 8008908:	6063      	str	r3, [r4, #4]
 800890a:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 800890c:	7962      	ldrb	r2, [r4, #5]
 800890e:	88e1      	ldrh	r1, [r4, #6]
	timeptr = *gmtime(&tmp);
 8008910:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8008912:	f505 3085 	add.w	r0, r5, #68096	; 0x10a00
 8008916:	78e3      	ldrb	r3, [r4, #3]
 8008918:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 800891c:	f7ff fef2 	bl	8008704 <_ZN21DateSelectorContainer7setDateEthh>

	tmp = time_start_fil;
 8008920:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008922:	6033      	str	r3, [r6, #0]
	timeptr = *gmtime(&tmp);
 8008924:	4630      	mov	r0, r6
 8008926:	f001 fce9 	bl	800a2fc <gmtime>
 800892a:	6803      	ldr	r3, [r0, #0]
 800892c:	6023      	str	r3, [r4, #0]
 800892e:	6843      	ldr	r3, [r0, #4]
 8008930:	6063      	str	r3, [r4, #4]
 8008932:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8008934:	7962      	ldrb	r2, [r4, #5]
	timeptr = *gmtime(&tmp);
 8008936:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8008938:	f505 403e 	add.w	r0, r5, #48640	; 0xbe00
 800893c:	78e3      	ldrb	r3, [r4, #3]
 800893e:	88e1      	ldrh	r1, [r4, #6]
 8008940:	30d8      	adds	r0, #216	; 0xd8
 8008942:	f7ff fedf 	bl	8008704 <_ZN21DateSelectorContainer7setDateEthh>
 8008946:	f64b 13b1 	movw	r3, #47537	; 0xb9b1
 800894a:	2201      	movs	r2, #1
 800894c:	54ea      	strb	r2, [r5, r3]
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 800894e:	1d28      	adds	r0, r5, #4


	modalWindow1.setVisible(true);
	invalidate();
}
 8008950:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008954:	f00e b8ca 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 8008958:	20016a10 	.word	0x20016a10
 800895c:	20016a14 	.word	0x20016a14

08008960 <_ZN11Screen1View21functionOkFilDataTimeEv>:
{
 8008960:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	timeptrStart.tm_year = dateSelectorContainerStart.getYear();
 8008964:	f500 443e 	add.w	r4, r0, #48640	; 0xbe00
 8008968:	34d8      	adds	r4, #216	; 0xd8
{
 800896a:	4606      	mov	r6, r0
	timeptrStart.tm_year = dateSelectorContainerStart.getYear();
 800896c:	4620      	mov	r0, r4
 800896e:	f7ff feeb 	bl	8008748 <_ZN21DateSelectorContainer7getYearEv>
 8008972:	4d2d      	ldr	r5, [pc, #180]	; (8008a28 <_ZN11Screen1View21functionOkFilDataTimeEv+0xc8>)
 8008974:	80e8      	strh	r0, [r5, #6]
	timeptrStart.tm_mon = dateSelectorContainerStart.getMonth();
 8008976:	4620      	mov	r0, r4
 8008978:	f7ff feed 	bl	8008756 <_ZN21DateSelectorContainer8getMonthEv>
 800897c:	7168      	strb	r0, [r5, #5]
	timeptrStart.tm_mday = dateSelectorContainerStart.getDay();
 800897e:	4620      	mov	r0, r4
 8008980:	f7ff feef 	bl	8008762 <_ZN21DateSelectorContainer6getDayEv>
 8008984:	70e8      	strb	r0, [r5, #3]
	time_start_fil 	= (uint32_t)mktime(&timeptrStart);
 8008986:	4628      	mov	r0, r5
 8008988:	f001 fdbe 	bl	800a508 <mktime>
 800898c:	f506 38ac 	add.w	r8, r6, #88064	; 0x15800
	timeptrStop.tm_year = dateSelectorContainerStop.getYear();
 8008990:	f506 3785 	add.w	r7, r6, #68096	; 0x10a00
 8008994:	f507 77ac 	add.w	r7, r7, #344	; 0x158
	time_start_fil 	= (uint32_t)mktime(&timeptrStart);
 8008998:	f8c8 004c 	str.w	r0, [r8, #76]	; 0x4c
	timeptrStop.tm_year = dateSelectorContainerStop.getYear();
 800899c:	4638      	mov	r0, r7
 800899e:	f7ff fed3 	bl	8008748 <_ZN21DateSelectorContainer7getYearEv>
 80089a2:	4c22      	ldr	r4, [pc, #136]	; (8008a2c <_ZN11Screen1View21functionOkFilDataTimeEv+0xcc>)
 80089a4:	80e0      	strh	r0, [r4, #6]
	timeptrStop.tm_mon 	= dateSelectorContainerStop.getMonth();
 80089a6:	4638      	mov	r0, r7
 80089a8:	f7ff fed5 	bl	8008756 <_ZN21DateSelectorContainer8getMonthEv>
 80089ac:	7160      	strb	r0, [r4, #5]
	timeptrStop.tm_mday = dateSelectorContainerStop.getDay();
 80089ae:	4638      	mov	r0, r7
 80089b0:	f7ff fed7 	bl	8008762 <_ZN21DateSelectorContainer6getDayEv>
 80089b4:	70e0      	strb	r0, [r4, #3]
	time_stop_fil 	= (uint32_t)mktime(&timeptrStop);
 80089b6:	4620      	mov	r0, r4
 80089b8:	f001 fda6 	bl	800a508 <mktime>
	if(time_stop_fil < time_start_fil){
 80089bc:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
	time_stop_fil 	= (uint32_t)mktime(&timeptrStop);
 80089c0:	f8c8 0050 	str.w	r0, [r8, #80]	; 0x50
	if(time_stop_fil < time_start_fil){
 80089c4:	4298      	cmp	r0, r3
 80089c6:	462b      	mov	r3, r5
 80089c8:	d205      	bcs.n	80089d6 <_ZN11Screen1View21functionOkFilDataTimeEv+0x76>
		timeptrStop = timeptrStart;
 80089ca:	682a      	ldr	r2, [r5, #0]
 80089cc:	6022      	str	r2, [r4, #0]
 80089ce:	686a      	ldr	r2, [r5, #4]
 80089d0:	6062      	str	r2, [r4, #4]
 80089d2:	68aa      	ldr	r2, [r5, #8]
 80089d4:	60a2      	str	r2, [r4, #8]
	Unicode::snprintf(textAreaStartDateBuffer, TEXTAREASTARTDATE_SIZE, "%.2d-%.2d-%4d", timeptrStart.tm_mday, timeptrStart.tm_mon + 1, timeptrStart.tm_year + 1900);
 80089d6:	88da      	ldrh	r2, [r3, #6]
 80089d8:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 80089dc:	9201      	str	r2, [sp, #4]
 80089de:	795a      	ldrb	r2, [r3, #5]
 80089e0:	3201      	adds	r2, #1
 80089e2:	9200      	str	r2, [sp, #0]
 80089e4:	f506 403c 	add.w	r0, r6, #48128	; 0xbc00
 80089e8:	78db      	ldrb	r3, [r3, #3]
 80089ea:	4a11      	ldr	r2, [pc, #68]	; (8008a30 <_ZN11Screen1View21functionOkFilDataTimeEv+0xd0>)
 80089ec:	210c      	movs	r1, #12
 80089ee:	3034      	adds	r0, #52	; 0x34
 80089f0:	f010 fd7c 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaStopDateBuffer, TEXTAREASTOPDATE_SIZE, "%.2d-%.2d-%4d", timeptrStop.tm_mday, timeptrStop.tm_mon + 1, timeptrStop.tm_year + 1900);
 80089f4:	88e3      	ldrh	r3, [r4, #6]
 80089f6:	4a0e      	ldr	r2, [pc, #56]	; (8008a30 <_ZN11Screen1View21functionOkFilDataTimeEv+0xd0>)
 80089f8:	f203 736c 	addw	r3, r3, #1900	; 0x76c
 80089fc:	9301      	str	r3, [sp, #4]
 80089fe:	7963      	ldrb	r3, [r4, #5]
 8008a00:	3301      	adds	r3, #1
 8008a02:	9300      	str	r3, [sp, #0]
 8008a04:	f506 403c 	add.w	r0, r6, #48128	; 0xbc00
 8008a08:	78e3      	ldrb	r3, [r4, #3]
 8008a0a:	210c      	movs	r1, #12
 8008a0c:	304c      	adds	r0, #76	; 0x4c
 8008a0e:	f010 fd6d 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8008a12:	f64b 13b1 	movw	r3, #47537	; 0xb9b1
 8008a16:	2200      	movs	r2, #0
 8008a18:	1d30      	adds	r0, r6, #4
 8008a1a:	54f2      	strb	r2, [r6, r3]
}
 8008a1c:	b002      	add	sp, #8
 8008a1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008a22:	f00e b863 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 8008a26:	bf00      	nop
 8008a28:	20016a2c 	.word	0x20016a2c
 8008a2c:	20016a20 	.word	0x20016a20
 8008a30:	08028a78 	.word	0x08028a78

08008a34 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog>:
}

//=================================================================================================
void Screen1View::handleListItemSelected(uint8_t list_item, ConfigListFilterLog* list)
{
	if(list == &ListFilterLog_Num){
 8008a34:	f500 4322 	add.w	r3, r0, #41472	; 0xa200
 8008a38:	3310      	adds	r3, #16
 8008a3a:	429a      	cmp	r2, r3
{
 8008a3c:	b510      	push	{r4, lr}
	if(list == &ListFilterLog_Num){
 8008a3e:	d10f      	bne.n	8008a60 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2c>
		if(list_item <= 31){
 8008a40:	291f      	cmp	r1, #31
 8008a42:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008a46:	d809      	bhi.n	8008a5c <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x28>
			if(TESTBIT(channel_num_fil, list_item)){
 8008a48:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8008a4a:	2201      	movs	r2, #1
 8008a4c:	fa02 f101 	lsl.w	r1, r2, r1
 8008a50:	420b      	tst	r3, r1
				CLRBIT(channel_num_fil, list_item);
 8008a52:	bf14      	ite	ne
 8008a54:	438b      	bicne	r3, r1
			}
			else{
				SETBIT(channel_num_fil, list_item);
 8008a56:	430b      	orreq	r3, r1
 8008a58:	6583      	str	r3, [r0, #88]	; 0x58
			formula_fil = list_item;
		}
	}
//	list->moveTo(800, 0);
//	list->invalidate();
}
 8008a5a:	bd10      	pop	{r4, pc}
			channel_num_fil = 0;
 8008a5c:	2300      	movs	r3, #0
 8008a5e:	e7fb      	b.n	8008a58 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x24>
	else if(list == &ListFilterLog_TypeChan){
 8008a60:	f500 4311 	add.w	r3, r0, #37120	; 0x9100
 8008a64:	33f0      	adds	r3, #240	; 0xf0
 8008a66:	429a      	cmp	r2, r3
 8008a68:	d115      	bne.n	8008a96 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x62>
		if(list_item){
 8008a6a:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008a6e:	b179      	cbz	r1, 8008a90 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x5c>
			if(TESTBIT(ch_type_fil, list_item)){
 8008a70:	f890 405c 	ldrb.w	r4, [r0, #92]	; 0x5c
 8008a74:	f990 305c 	ldrsb.w	r3, [r0, #92]	; 0x5c
 8008a78:	2201      	movs	r2, #1
 8008a7a:	408a      	lsls	r2, r1
 8008a7c:	fa44 f101 	asr.w	r1, r4, r1
 8008a80:	b252      	sxtb	r2, r2
 8008a82:	07cc      	lsls	r4, r1, #31
				CLRBIT(ch_type_fil, list_item);
 8008a84:	bf4c      	ite	mi
 8008a86:	4393      	bicmi	r3, r2
				SETBIT(ch_type_fil, list_item);
 8008a88:	4313      	orrpl	r3, r2
 8008a8a:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8008a8e:	e7e4      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
			ch_type_fil = list_item;
 8008a90:	f880 105c 	strb.w	r1, [r0, #92]	; 0x5c
 8008a94:	e7e1      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	else if(list == &ListFilterLog_StLoop){
 8008a96:	f500 4301 	add.w	r3, r0, #33024	; 0x8100
 8008a9a:	33d0      	adds	r3, #208	; 0xd0
 8008a9c:	429a      	cmp	r2, r3
 8008a9e:	d115      	bne.n	8008acc <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x98>
		if(list_item){
 8008aa0:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008aa4:	b179      	cbz	r1, 8008ac6 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x92>
			if(TESTBIT(loop_state_fil, list_item)){
 8008aa6:	f890 405d 	ldrb.w	r4, [r0, #93]	; 0x5d
 8008aaa:	f990 305d 	ldrsb.w	r3, [r0, #93]	; 0x5d
 8008aae:	2201      	movs	r2, #1
 8008ab0:	408a      	lsls	r2, r1
 8008ab2:	fa44 f101 	asr.w	r1, r4, r1
 8008ab6:	b252      	sxtb	r2, r2
 8008ab8:	07c9      	lsls	r1, r1, #31
				CLRBIT(loop_state_fil, list_item);
 8008aba:	bf4c      	ite	mi
 8008abc:	4393      	bicmi	r3, r2
				SETBIT(loop_state_fil, list_item);
 8008abe:	4313      	orrpl	r3, r2
 8008ac0:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
 8008ac4:	e7c9      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
			loop_state_fil = list_item;
 8008ac6:	f880 105d 	strb.w	r1, [r0, #93]	; 0x5d
 8008aca:	e7c6      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	else if(list == &ListFilterLog_Unit){
 8008acc:	f500 43e3 	add.w	r3, r0, #29056	; 0x7180
 8008ad0:	3330      	adds	r3, #48	; 0x30
 8008ad2:	429a      	cmp	r2, r3
 8008ad4:	d115      	bne.n	8008b02 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0xce>
		if(list_item){
 8008ad6:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008ada:	b179      	cbz	r1, 8008afc <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0xc8>
			if(TESTBIT(units_fil, list_item)){
 8008adc:	f890 405e 	ldrb.w	r4, [r0, #94]	; 0x5e
 8008ae0:	f990 305e 	ldrsb.w	r3, [r0, #94]	; 0x5e
 8008ae4:	2201      	movs	r2, #1
 8008ae6:	408a      	lsls	r2, r1
 8008ae8:	fa44 f101 	asr.w	r1, r4, r1
 8008aec:	b252      	sxtb	r2, r2
 8008aee:	07cc      	lsls	r4, r1, #31
				CLRBIT(units_fil, list_item);
 8008af0:	bf4c      	ite	mi
 8008af2:	4393      	bicmi	r3, r2
				SETBIT(units_fil, list_item);
 8008af4:	4313      	orrpl	r3, r2
 8008af6:	f880 305e 	strb.w	r3, [r0, #94]	; 0x5e
 8008afa:	e7ae      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
			units_fil = list_item;
 8008afc:	f880 105e 	strb.w	r1, [r0, #94]	; 0x5e
 8008b00:	e7ab      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	else if(list == &ListFilterLog_StCur){
 8008b02:	f500 43c3 	add.w	r3, r0, #24960	; 0x6180
 8008b06:	3310      	adds	r3, #16
 8008b08:	429a      	cmp	r2, r3
 8008b0a:	d115      	bne.n	8008b38 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x104>
		if(list_item){
 8008b0c:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008b10:	b179      	cbz	r1, 8008b32 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0xfe>
			if(TESTBIT(thld_state_fil, list_item)){
 8008b12:	f890 405f 	ldrb.w	r4, [r0, #95]	; 0x5f
 8008b16:	f990 305f 	ldrsb.w	r3, [r0, #95]	; 0x5f
 8008b1a:	2201      	movs	r2, #1
 8008b1c:	408a      	lsls	r2, r1
 8008b1e:	fa44 f101 	asr.w	r1, r4, r1
 8008b22:	b252      	sxtb	r2, r2
 8008b24:	07c9      	lsls	r1, r1, #31
				CLRBIT(thld_state_fil, list_item);
 8008b26:	bf4c      	ite	mi
 8008b28:	4393      	bicmi	r3, r2
				SETBIT(thld_state_fil, list_item);
 8008b2a:	4313      	orrpl	r3, r2
 8008b2c:	f880 305f 	strb.w	r3, [r0, #95]	; 0x5f
 8008b30:	e793      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
			thld_state_fil = list_item;
 8008b32:	f880 105f 	strb.w	r1, [r0, #95]	; 0x5f
 8008b36:	e790      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	else if(list == &ListFilterLog_Err){
 8008b38:	f500 43a2 	add.w	r3, r0, #20736	; 0x5100
 8008b3c:	3370      	adds	r3, #112	; 0x70
 8008b3e:	429a      	cmp	r2, r3
 8008b40:	d115      	bne.n	8008b6e <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x13a>
		if(list_item){
 8008b42:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008b46:	b179      	cbz	r1, 8008b68 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x134>
			if(TESTBIT(err_state_fil, list_item)){
 8008b48:	f8b0 4060 	ldrh.w	r4, [r0, #96]	; 0x60
 8008b4c:	f9b0 3060 	ldrsh.w	r3, [r0, #96]	; 0x60
 8008b50:	2201      	movs	r2, #1
 8008b52:	408a      	lsls	r2, r1
 8008b54:	fa44 f101 	asr.w	r1, r4, r1
 8008b58:	b212      	sxth	r2, r2
 8008b5a:	07cc      	lsls	r4, r1, #31
				CLRBIT(err_state_fil, list_item);
 8008b5c:	bf4c      	ite	mi
 8008b5e:	4393      	bicmi	r3, r2
				SETBIT(err_state_fil, list_item);
 8008b60:	4313      	orrpl	r3, r2
 8008b62:	f8a0 3060 	strh.w	r3, [r0, #96]	; 0x60
 8008b66:	e778      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
			err_state_fil = list_item;
 8008b68:	f8a0 1060 	strh.w	r1, [r0, #96]	; 0x60
 8008b6c:	e775      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	else if(list == &ListFilterLog_Gas){
 8008b6e:	f500 4382 	add.w	r3, r0, #16640	; 0x4100
 8008b72:	3350      	adds	r3, #80	; 0x50
 8008b74:	429a      	cmp	r2, r3
 8008b76:	f47f af70 	bne.w	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
		if(list_item){
 8008b7a:	f500 30ac 	add.w	r0, r0, #88064	; 0x15800
 8008b7e:	b179      	cbz	r1, 8008ba0 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x16c>
			if(TESTBIT(formula_fil, list_item)){
 8008b80:	f890 4062 	ldrb.w	r4, [r0, #98]	; 0x62
 8008b84:	f990 3062 	ldrsb.w	r3, [r0, #98]	; 0x62
 8008b88:	2201      	movs	r2, #1
 8008b8a:	408a      	lsls	r2, r1
 8008b8c:	fa44 f101 	asr.w	r1, r4, r1
 8008b90:	b252      	sxtb	r2, r2
 8008b92:	07c9      	lsls	r1, r1, #31
				CLRBIT(formula_fil, list_item);
 8008b94:	bf4c      	ite	mi
 8008b96:	4393      	bicmi	r3, r2
				SETBIT(formula_fil, list_item);
 8008b98:	4313      	orrpl	r3, r2
 8008b9a:	f880 3062 	strb.w	r3, [r0, #98]	; 0x62
 8008b9e:	e75c      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
			formula_fil = list_item;
 8008ba0:	f880 1062 	strb.w	r1, [r0, #98]	; 0x62
}
 8008ba4:	e759      	b.n	8008a5a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	...

08008ba8 <_ZN11Screen1View11setupScreenEv>:
{
 8008ba8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bac:	4604      	mov	r4, r0
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 8008bae:	f504 36ac 	add.w	r6, r4, #88064	; 0x15800
    Screen1ViewBase::setupScreen();
 8008bb2:	f7fc fbee 	bl	8005392 <_ZN15Screen1ViewBase11setupScreenEv>
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 8008bb6:	f106 0150 	add.w	r1, r6, #80	; 0x50
 8008bba:	f106 004c 	add.w	r0, r6, #76	; 0x4c
 8008bbe:	f7f8 fee4 	bl	800198a <read_start_stop_state_archiv>
    tmp = time_stop_fil;
 8008bc2:	4f6c      	ldr	r7, [pc, #432]	; (8008d74 <_ZN11Screen1View11setupScreenEv+0x1cc>)
    time_stop_fil = 1735039935;
 8008bc4:	4b6c      	ldr	r3, [pc, #432]	; (8008d78 <_ZN11Screen1View11setupScreenEv+0x1d0>)
    tmp = time_stop_fil;
 8008bc6:	603b      	str	r3, [r7, #0]
    time_start_fil = time_stop_fil;
 8008bc8:	e9c6 3313 	strd	r3, r3, [r6, #76]	; 0x4c
	timeptr = *gmtime(&tmp);
 8008bcc:	4638      	mov	r0, r7
 8008bce:	f001 fb95 	bl	800a2fc <gmtime>
 8008bd2:	4d6a      	ldr	r5, [pc, #424]	; (8008d7c <_ZN11Screen1View11setupScreenEv+0x1d4>)
 8008bd4:	6803      	ldr	r3, [r0, #0]
 8008bd6:	602b      	str	r3, [r5, #0]
 8008bd8:	6843      	ldr	r3, [r0, #4]
 8008bda:	606b      	str	r3, [r5, #4]
 8008bdc:	6883      	ldr	r3, [r0, #8]
 8008bde:	60ab      	str	r3, [r5, #8]
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 8008be0:	f64b 1a94 	movw	sl, #47508	; 0xb994
 8008be4:	f504 3385 	add.w	r3, r4, #68096	; 0x10a00
 8008be8:	f64b 1996 	movw	r9, #47510	; 0xb996
 8008bec:	f503 7bac 	add.w	fp, r3, #344	; 0x158
        rect.x = x;
 8008bf0:	4863      	ldr	r0, [pc, #396]	; (8008d80 <_ZN11Screen1View11setupScreenEv+0x1d8>)
 8008bf2:	f934 100a 	ldrsh.w	r1, [r4, sl]
 8008bf6:	f934 2009 	ldrsh.w	r2, [r4, r9]
 8008bfa:	f8c3 015c 	str.w	r0, [r3, #348]	; 0x15c
	modalWindow1.add(dateSelectorContainerStop);
 8008bfe:	f504 4839 	add.w	r8, r4, #47360	; 0xb900
        setWidthHeight(width, height);
 8008c02:	4658      	mov	r0, fp
 8008c04:	f7f9 faef 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8008c08:	f108 088c 	add.w	r8, r8, #140	; 0x8c
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8008c0c:	796a      	ldrb	r2, [r5, #5]
 8008c0e:	78eb      	ldrb	r3, [r5, #3]
 8008c10:	88e9      	ldrh	r1, [r5, #6]
 8008c12:	4658      	mov	r0, fp
 8008c14:	f7ff fd76 	bl	8008704 <_ZN21DateSelectorContainer7setDateEthh>
	modalWindow1.add(dateSelectorContainerStop);
 8008c18:	4659      	mov	r1, fp
 8008c1a:	4640      	mov	r0, r8
 8008c1c:	f008 fcf1 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    tmp = time_start_fil;
 8008c20:	6cf3      	ldr	r3, [r6, #76]	; 0x4c
 8008c22:	603b      	str	r3, [r7, #0]
    timeptr = *gmtime(&tmp);
 8008c24:	4638      	mov	r0, r7
 8008c26:	f001 fb69 	bl	800a2fc <gmtime>
 8008c2a:	6803      	ldr	r3, [r0, #0]
 8008c2c:	602b      	str	r3, [r5, #0]
 8008c2e:	6843      	ldr	r3, [r0, #4]
 8008c30:	606b      	str	r3, [r5, #4]
 8008c32:	6883      	ldr	r3, [r0, #8]
 8008c34:	60ab      	str	r3, [r5, #8]
    dateSelectorContainerStart.setPosition(0, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 8008c36:	f504 473e 	add.w	r7, r4, #48640	; 0xbe00
        rect.x = x;
 8008c3a:	f64b 63dc 	movw	r3, #48860	; 0xbedc
 8008c3e:	37d8      	adds	r7, #216	; 0xd8
 8008c40:	f44f 1048 	mov.w	r0, #3276800	; 0x320000
 8008c44:	f934 100a 	ldrsh.w	r1, [r4, sl]
 8008c48:	f934 2009 	ldrsh.w	r2, [r4, r9]
 8008c4c:	50e0      	str	r0, [r4, r3]
        setWidthHeight(width, height);
 8008c4e:	4638      	mov	r0, r7
 8008c50:	f7f9 fac9 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8008c54:	796a      	ldrb	r2, [r5, #5]
 8008c56:	78eb      	ldrb	r3, [r5, #3]
 8008c58:	88e9      	ldrh	r1, [r5, #6]
 8008c5a:	4638      	mov	r0, r7
 8008c5c:	f7ff fd52 	bl	8008704 <_ZN21DateSelectorContainer7setDateEthh>
    modalWindow1.add(dateSelectorContainerStart);
 8008c60:	4639      	mov	r1, r7
 8008c62:	4640      	mov	r0, r8
 8008c64:	f008 fccd 	bl	8011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    functionOkFilDataTime();
 8008c68:	6823      	ldr	r3, [r4, #0]
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008c6e:	4798      	blx	r3
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008c70:	f504 4322 	add.w	r3, r4, #41472	; 0xa200
 8008c74:	3310      	adds	r3, #16
    channel_num_fil = 0;
 8008c76:	2500      	movs	r5, #0
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008c78:	f504 413e 	add.w	r1, r4, #48640	; 0xbe00
    ListFilterLog_TypeChan.	setViewCallback(CallbackListItemSelected);
 8008c7c:	f504 4b11 	add.w	fp, r4, #37120	; 0x9100
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008c80:	4618      	mov	r0, r3
    ListFilterLog_TypeChan.	setViewCallback(CallbackListItemSelected);
 8008c82:	f10b 0bf0 	add.w	fp, fp, #240	; 0xf0
    ch_type_fil 	= 0;
 8008c86:	e9c6 5516 	strd	r5, r5, [r6, #88]	; 0x58
    err_state_fil 	= 0;
 8008c8a:	f8a6 5060 	strh.w	r5, [r6, #96]	; 0x60
    formula_fil 	= 0;
 8008c8e:	f886 5062 	strb.w	r5, [r6, #98]	; 0x62
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008c92:	31c8      	adds	r1, #200	; 0xc8
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 8008c94:	f504 4a01 	add.w	sl, r4, #33024	; 0x8100
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008c98:	9301      	str	r3, [sp, #4]
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 8008c9a:	f10a 0ad0 	add.w	sl, sl, #208	; 0xd0
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008c9e:	9100      	str	r1, [sp, #0]
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 8008ca0:	f504 49e3 	add.w	r9, r4, #29056	; 0x7180
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 8008ca4:	f7fe ff23 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_TypeChan.	setViewCallback(CallbackListItemSelected);
 8008ca8:	9900      	ldr	r1, [sp, #0]
 8008caa:	4658      	mov	r0, fp
 8008cac:	f7fe ff1f 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 8008cb0:	f109 0930 	add.w	r9, r9, #48	; 0x30
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 8008cb4:	9900      	ldr	r1, [sp, #0]
 8008cb6:	4650      	mov	r0, sl
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 8008cb8:	f504 48c3 	add.w	r8, r4, #24960	; 0x6180
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 8008cbc:	f7fe ff17 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 8008cc0:	f108 0810 	add.w	r8, r8, #16
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 8008cc4:	9900      	ldr	r1, [sp, #0]
 8008cc6:	4648      	mov	r0, r9
    ListFilterLog_Err.		setViewCallback(CallbackListItemSelected);
 8008cc8:	f504 47a2 	add.w	r7, r4, #20736	; 0x5100
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 8008ccc:	f7fe ff0f 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Err.		setViewCallback(CallbackListItemSelected);
 8008cd0:	3770      	adds	r7, #112	; 0x70
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 8008cd2:	9900      	ldr	r1, [sp, #0]
 8008cd4:	4640      	mov	r0, r8
    ListFilterLog_Gas.		setViewCallback(CallbackListItemSelected);
 8008cd6:	f504 4682 	add.w	r6, r4, #16640	; 0x4100
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 8008cda:	f7fe ff08 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Gas.		setViewCallback(CallbackListItemSelected);
 8008cde:	3650      	adds	r6, #80	; 0x50
    ListFilterLog_Err.		setViewCallback(CallbackListItemSelected);
 8008ce0:	9900      	ldr	r1, [sp, #0]
 8008ce2:	4638      	mov	r0, r7
 8008ce4:	f7fe ff03 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Gas.		setViewCallback(CallbackListItemSelected);
 8008ce8:	9900      	ldr	r1, [sp, #0]
 8008cea:	4630      	mov	r0, r6
 8008cec:	f7fe feff 	bl	8007aee <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
	ListFilterLog_Num.		setContainerID(ConfigListFilterLog::ListID::list_channel);
 8008cf0:	9b01      	ldr	r3, [sp, #4]
 8008cf2:	9300      	str	r3, [sp, #0]
 8008cf4:	4618      	mov	r0, r3
 8008cf6:	2101      	movs	r1, #1
 8008cf8:	f7fe fef5 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_TypeChan.	setContainerID(ConfigListFilterLog::ListID::list_type_channel);
 8008cfc:	4658      	mov	r0, fp
 8008cfe:	2102      	movs	r1, #2
 8008d00:	f7fe fef1 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_StLoop.	setContainerID(ConfigListFilterLog::ListID::list_st_loop);
 8008d04:	4650      	mov	r0, sl
 8008d06:	2103      	movs	r1, #3
 8008d08:	f7fe feed 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Unit.		setContainerID(ConfigListFilterLog::ListID::list_units);
 8008d0c:	4648      	mov	r0, r9
 8008d0e:	2104      	movs	r1, #4
 8008d10:	f7fe fee9 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_StCur.	setContainerID(ConfigListFilterLog::ListID::list_st_cur);
 8008d14:	4640      	mov	r0, r8
 8008d16:	2105      	movs	r1, #5
 8008d18:	f7fe fee5 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Err.		setContainerID(ConfigListFilterLog::ListID::list_err);
 8008d1c:	4638      	mov	r0, r7
 8008d1e:	2106      	movs	r1, #6
 8008d20:	f7fe fee1 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Gas.		setContainerID(ConfigListFilterLog::ListID::list_formula);
 8008d24:	4630      	mov	r0, r6
 8008d26:	2107      	movs	r1, #7
 8008d28:	f7fe fedd 	bl	8007ae6 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Num.		setHighlighted(32);
 8008d2c:	9b00      	ldr	r3, [sp, #0]
 8008d2e:	2120      	movs	r1, #32
 8008d30:	4618      	mov	r0, r3
 8008d32:	f7fe fec1 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_TypeChan.	setHighlighted(2);
 8008d36:	4658      	mov	r0, fp
 8008d38:	2102      	movs	r1, #2
 8008d3a:	f7fe febd 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_StLoop.	setHighlighted(0);
 8008d3e:	4629      	mov	r1, r5
 8008d40:	4650      	mov	r0, sl
 8008d42:	f7fe feb9 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_Unit.		setHighlighted(0);
 8008d46:	4629      	mov	r1, r5
 8008d48:	4648      	mov	r0, r9
 8008d4a:	f7fe feb5 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_StCur.	setHighlighted(0);
 8008d4e:	4629      	mov	r1, r5
 8008d50:	4640      	mov	r0, r8
 8008d52:	f7fe feb1 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_Err.		setHighlighted(0);
 8008d56:	4629      	mov	r1, r5
 8008d58:	4638      	mov	r0, r7
 8008d5a:	f7fe fead 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_Gas.		setHighlighted(0);
 8008d5e:	4630      	mov	r0, r6
 8008d60:	4629      	mov	r1, r5
 8008d62:	f7fe fea9 	bl	8007ab8 <_ZN19ConfigListFilterLog14setHighlightedEs>
 8008d66:	1d20      	adds	r0, r4, #4
}
 8008d68:	b003      	add	sp, #12
 8008d6a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d6e:	f00d bebd 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 8008d72:	bf00      	nop
 8008d74:	20016a00 	.word	0x20016a00
 8008d78:	676a9bbf 	.word	0x676a9bbf
 8008d7c:	20016a04 	.word	0x20016a04
 8008d80:	003200fa 	.word	0x003200fa

08008d84 <_ZN11Screen1View17functionFilterNumEv>:
{
 8008d84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008d86:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 8008d88:	f24a 2535 	movw	r5, #41525	; 0xa235
	ConfigListFilterLog *list = &ListFilterLog_Num;
 8008d8c:	f500 4022 	add.w	r0, r0, #41472	; 0xa200
	if(list->isVisible() == false)
 8008d90:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Num;
 8008d92:	3010      	adds	r0, #16
	if(list->isVisible() == false)
 8008d94:	bb7b      	cbnz	r3, 8008df6 <_ZN11Screen1View17functionFilterNumEv+0x72>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 8008d96:	f24b 7692 	movw	r6, #46994	; 0xb792
 8008d9a:	f24b 778e 	movw	r7, #46990	; 0xb78e
 8008d9e:	5ba3      	ldrh	r3, [r4, r6]
 8008da0:	5be2      	ldrh	r2, [r4, r7]
 8008da2:	9001      	str	r0, [sp, #4]
 8008da4:	441a      	add	r2, r3
 8008da6:	f24b 738c 	movw	r3, #46988	; 0xb78c
 8008daa:	b212      	sxth	r2, r2
 8008dac:	5ee1      	ldrsh	r1, [r4, r3]
 8008dae:	f7f9 f94e 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8008db2:	5fa3      	ldrsh	r3, [r4, r6]
 8008db4:	5fe2      	ldrsh	r2, [r4, r7]
 8008db6:	9801      	ldr	r0, [sp, #4]
 8008db8:	f24b 7690 	movw	r6, #46992	; 0xb790
 8008dbc:	441a      	add	r2, r3
 8008dbe:	5fa1      	ldrsh	r1, [r4, r6]
 8008dc0:	f7fe fe81 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8008dc4:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8008dc8:	5fa1      	ldrsh	r1, [r4, r6]
 8008dca:	9801      	ldr	r0, [sp, #4]
 8008dcc:	f7f9 fa0b 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        visible = vis;
 8008dd0:	2301      	movs	r3, #1
 8008dd2:	5563      	strb	r3, [r4, r5]
 8008dd4:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 8008dd6:	f00d fe89 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(channel_num_fil){
 8008dda:	f504 403e 	add.w	r0, r4, #48640	; 0xbe00
 8008dde:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 8008de2:	3076      	adds	r0, #118	; 0x76
 8008de4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8008de6:	b173      	cbz	r3, 8008e06 <_ZN11Screen1View17functionFilterNumEv+0x82>
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, "+");
 8008de8:	4a08      	ldr	r2, [pc, #32]	; (8008e0c <_ZN11Screen1View17functionFilterNumEv+0x88>)
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, " ");
 8008dea:	210a      	movs	r1, #10
}
 8008dec:	b003      	add	sp, #12
 8008dee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, " ");
 8008df2:	f010 bb7b 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 8008df6:	2200      	movs	r2, #0
 8008df8:	f44f 7148 	mov.w	r1, #800	; 0x320
 8008dfc:	9001      	str	r0, [sp, #4]
 8008dfe:	f7f9 f926 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 8008e02:	2300      	movs	r3, #0
 8008e04:	e7e5      	b.n	8008dd2 <_ZN11Screen1View17functionFilterNumEv+0x4e>
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, " ");
 8008e06:	4a02      	ldr	r2, [pc, #8]	; (8008e10 <_ZN11Screen1View17functionFilterNumEv+0x8c>)
 8008e08:	e7ef      	b.n	8008dea <_ZN11Screen1View17functionFilterNumEv+0x66>
 8008e0a:	bf00      	nop
 8008e0c:	08028a86 	.word	0x08028a86
 8008e10:	0802baa0 	.word	0x0802baa0

08008e14 <_ZN11Screen1View25functionFilterTypeChannelEv>:
{
 8008e14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008e16:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 8008e18:	f249 2515 	movw	r5, #37397	; 0x9215
	ConfigListFilterLog *list = &ListFilterLog_TypeChan;
 8008e1c:	f500 4011 	add.w	r0, r0, #37120	; 0x9100
	if(list->isVisible() == false)
 8008e20:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_TypeChan;
 8008e22:	30f0      	adds	r0, #240	; 0xf0
	if(list->isVisible() == false)
 8008e24:	bb83      	cbnz	r3, 8008e88 <_ZN11Screen1View25functionFilterTypeChannelEv+0x74>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 8008e26:	f24b 66ce 	movw	r6, #46798	; 0xb6ce
 8008e2a:	f24b 67ca 	movw	r7, #46794	; 0xb6ca
 8008e2e:	5ba3      	ldrh	r3, [r4, r6]
 8008e30:	5be2      	ldrh	r2, [r4, r7]
 8008e32:	9001      	str	r0, [sp, #4]
 8008e34:	441a      	add	r2, r3
 8008e36:	f24b 63c8 	movw	r3, #46792	; 0xb6c8
 8008e3a:	b212      	sxth	r2, r2
 8008e3c:	5ee1      	ldrsh	r1, [r4, r3]
 8008e3e:	f7f9 f906 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8008e42:	5fa3      	ldrsh	r3, [r4, r6]
 8008e44:	5fe2      	ldrsh	r2, [r4, r7]
 8008e46:	9801      	ldr	r0, [sp, #4]
 8008e48:	f24b 66cc 	movw	r6, #46796	; 0xb6cc
 8008e4c:	441a      	add	r2, r3
 8008e4e:	5fa1      	ldrsh	r1, [r4, r6]
 8008e50:	f7fe fe39 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8008e54:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8008e58:	5fa1      	ldrsh	r1, [r4, r6]
 8008e5a:	9801      	ldr	r0, [sp, #4]
 8008e5c:	f7f9 f9c3 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8008e60:	2301      	movs	r3, #1
 8008e62:	5563      	strb	r3, [r4, r5]
 8008e64:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 8008e66:	f00d fe41 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(ch_type_fil){
 8008e6a:	f504 403e 	add.w	r0, r4, #48640	; 0xbe00
 8008e6e:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 8008e72:	304e      	adds	r0, #78	; 0x4e
 8008e74:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 8008e78:	b173      	cbz	r3, 8008e98 <_ZN11Screen1View25functionFilterTypeChannelEv+0x84>
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, "+");
 8008e7a:	4a08      	ldr	r2, [pc, #32]	; (8008e9c <_ZN11Screen1View25functionFilterTypeChannelEv+0x88>)
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, " ");
 8008e7c:	210a      	movs	r1, #10
}
 8008e7e:	b003      	add	sp, #12
 8008e80:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, " ");
 8008e84:	f010 bb32 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 8008e88:	2200      	movs	r2, #0
 8008e8a:	f44f 7148 	mov.w	r1, #800	; 0x320
 8008e8e:	9001      	str	r0, [sp, #4]
 8008e90:	f7f9 f8dd 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 8008e94:	2300      	movs	r3, #0
 8008e96:	e7e4      	b.n	8008e62 <_ZN11Screen1View25functionFilterTypeChannelEv+0x4e>
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, " ");
 8008e98:	4a01      	ldr	r2, [pc, #4]	; (8008ea0 <_ZN11Screen1View25functionFilterTypeChannelEv+0x8c>)
 8008e9a:	e7ef      	b.n	8008e7c <_ZN11Screen1View25functionFilterTypeChannelEv+0x68>
 8008e9c:	08028a86 	.word	0x08028a86
 8008ea0:	0802baa0 	.word	0x0802baa0

08008ea4 <_ZN11Screen1View20functionFilterStLoopEv>:
{
 8008ea4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008ea6:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 8008ea8:	f248 15f5 	movw	r5, #33269	; 0x81f5
	ConfigListFilterLog *list = &ListFilterLog_StLoop;
 8008eac:	f500 4001 	add.w	r0, r0, #33024	; 0x8100
	if(list->isVisible() == false)
 8008eb0:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_StLoop;
 8008eb2:	30d0      	adds	r0, #208	; 0xd0
	if(list->isVisible() == false)
 8008eb4:	bb83      	cbnz	r3, 8008f18 <_ZN11Screen1View20functionFilterStLoopEv+0x74>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 8008eb6:	f24b 660a 	movw	r6, #46602	; 0xb60a
 8008eba:	f24b 6706 	movw	r7, #46598	; 0xb606
 8008ebe:	5ba3      	ldrh	r3, [r4, r6]
 8008ec0:	5be2      	ldrh	r2, [r4, r7]
 8008ec2:	9001      	str	r0, [sp, #4]
 8008ec4:	441a      	add	r2, r3
 8008ec6:	f24b 6304 	movw	r3, #46596	; 0xb604
 8008eca:	b212      	sxth	r2, r2
 8008ecc:	5ee1      	ldrsh	r1, [r4, r3]
 8008ece:	f7f9 f8be 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8008ed2:	5fa3      	ldrsh	r3, [r4, r6]
 8008ed4:	5fe2      	ldrsh	r2, [r4, r7]
 8008ed6:	9801      	ldr	r0, [sp, #4]
 8008ed8:	f24b 6608 	movw	r6, #46600	; 0xb608
 8008edc:	441a      	add	r2, r3
 8008ede:	5fa1      	ldrsh	r1, [r4, r6]
 8008ee0:	f7fe fdf1 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8008ee4:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8008ee8:	5fa1      	ldrsh	r1, [r4, r6]
 8008eea:	9801      	ldr	r0, [sp, #4]
 8008eec:	f7f9 f97b 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8008ef0:	2301      	movs	r3, #1
 8008ef2:	5563      	strb	r3, [r4, r5]
		list->invalidate();
 8008ef4:	9801      	ldr	r0, [sp, #4]
 8008ef6:	f00d fdf9 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(loop_state_fil){
 8008efa:	f504 403e 	add.w	r0, r4, #48640	; 0xbe00
 8008efe:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 8008f02:	301c      	adds	r0, #28
 8008f04:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 8008f08:	b173      	cbz	r3, 8008f28 <_ZN11Screen1View20functionFilterStLoopEv+0x84>
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, "+");
 8008f0a:	4a08      	ldr	r2, [pc, #32]	; (8008f2c <_ZN11Screen1View20functionFilterStLoopEv+0x88>)
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, " ");
 8008f0c:	210a      	movs	r1, #10
}
 8008f0e:	b003      	add	sp, #12
 8008f10:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, " ");
 8008f14:	f010 baea 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 8008f18:	2200      	movs	r2, #0
 8008f1a:	f44f 7148 	mov.w	r1, #800	; 0x320
 8008f1e:	9001      	str	r0, [sp, #4]
 8008f20:	f7f9 f895 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 8008f24:	2300      	movs	r3, #0
 8008f26:	e7e4      	b.n	8008ef2 <_ZN11Screen1View20functionFilterStLoopEv+0x4e>
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, " ");
 8008f28:	4a01      	ldr	r2, [pc, #4]	; (8008f30 <_ZN11Screen1View20functionFilterStLoopEv+0x8c>)
 8008f2a:	e7ef      	b.n	8008f0c <_ZN11Screen1View20functionFilterStLoopEv+0x68>
 8008f2c:	08028a86 	.word	0x08028a86
 8008f30:	0802baa0 	.word	0x0802baa0

08008f34 <_ZN11Screen1View18functionFilterUnitEv>:
{
 8008f34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008f36:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 8008f38:	f247 15d5 	movw	r5, #29141	; 0x71d5
	ConfigListFilterLog *list = &ListFilterLog_Unit;
 8008f3c:	f500 40e3 	add.w	r0, r0, #29056	; 0x7180
	if(list->isVisible() == false)
 8008f40:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Unit;
 8008f42:	3030      	adds	r0, #48	; 0x30
	if(list->isVisible() == false)
 8008f44:	bb83      	cbnz	r3, 8008fa8 <_ZN11Screen1View18functionFilterUnitEv+0x74>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 8008f46:	f24b 4686 	movw	r6, #46214	; 0xb486
 8008f4a:	f24b 4782 	movw	r7, #46210	; 0xb482
 8008f4e:	5ba3      	ldrh	r3, [r4, r6]
 8008f50:	5be2      	ldrh	r2, [r4, r7]
 8008f52:	9001      	str	r0, [sp, #4]
 8008f54:	441a      	add	r2, r3
 8008f56:	f24b 4380 	movw	r3, #46208	; 0xb480
 8008f5a:	b212      	sxth	r2, r2
 8008f5c:	5ee1      	ldrsh	r1, [r4, r3]
 8008f5e:	f7f9 f876 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8008f62:	5fa3      	ldrsh	r3, [r4, r6]
 8008f64:	5fe2      	ldrsh	r2, [r4, r7]
 8008f66:	9801      	ldr	r0, [sp, #4]
 8008f68:	f24b 4684 	movw	r6, #46212	; 0xb484
 8008f6c:	441a      	add	r2, r3
 8008f6e:	5fa1      	ldrsh	r1, [r4, r6]
 8008f70:	f7fe fda9 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8008f74:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8008f78:	5fa1      	ldrsh	r1, [r4, r6]
 8008f7a:	9801      	ldr	r0, [sp, #4]
 8008f7c:	f7f9 f933 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8008f80:	2301      	movs	r3, #1
 8008f82:	5563      	strb	r3, [r4, r5]
 8008f84:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 8008f86:	f00d fdb1 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(units_fil){
 8008f8a:	f504 403d 	add.w	r0, r4, #48384	; 0xbd00
 8008f8e:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 8008f92:	30cc      	adds	r0, #204	; 0xcc
 8008f94:	f894 305e 	ldrb.w	r3, [r4, #94]	; 0x5e
 8008f98:	b173      	cbz	r3, 8008fb8 <_ZN11Screen1View18functionFilterUnitEv+0x84>
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, "+");
 8008f9a:	4a08      	ldr	r2, [pc, #32]	; (8008fbc <_ZN11Screen1View18functionFilterUnitEv+0x88>)
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, " ");
 8008f9c:	210a      	movs	r1, #10
}
 8008f9e:	b003      	add	sp, #12
 8008fa0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, " ");
 8008fa4:	f010 baa2 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 8008fa8:	2200      	movs	r2, #0
 8008faa:	f44f 7148 	mov.w	r1, #800	; 0x320
 8008fae:	9001      	str	r0, [sp, #4]
 8008fb0:	f7f9 f84d 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 8008fb4:	2300      	movs	r3, #0
 8008fb6:	e7e4      	b.n	8008f82 <_ZN11Screen1View18functionFilterUnitEv+0x4e>
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, " ");
 8008fb8:	4a01      	ldr	r2, [pc, #4]	; (8008fc0 <_ZN11Screen1View18functionFilterUnitEv+0x8c>)
 8008fba:	e7ef      	b.n	8008f9c <_ZN11Screen1View18functionFilterUnitEv+0x68>
 8008fbc:	08028a86 	.word	0x08028a86
 8008fc0:	0802baa0 	.word	0x0802baa0

08008fc4 <_ZN11Screen1View23functionFilterThresholdEv>:
{
 8008fc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008fc6:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 8008fc8:	f246 15b5 	movw	r5, #25013	; 0x61b5
	ConfigListFilterLog *list = &ListFilterLog_StCur;
 8008fcc:	f500 40c3 	add.w	r0, r0, #24960	; 0x6180
	if(list->isVisible() == false)
 8008fd0:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_StCur;
 8008fd2:	3010      	adds	r0, #16
	if(list->isVisible() == false)
 8008fd4:	bb83      	cbnz	r3, 8009038 <_ZN11Screen1View23functionFilterThresholdEv+0x74>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 8008fd6:	f24b 36c2 	movw	r6, #46018	; 0xb3c2
 8008fda:	f24b 37be 	movw	r7, #46014	; 0xb3be
 8008fde:	5ba3      	ldrh	r3, [r4, r6]
 8008fe0:	5be2      	ldrh	r2, [r4, r7]
 8008fe2:	9001      	str	r0, [sp, #4]
 8008fe4:	441a      	add	r2, r3
 8008fe6:	f24b 33bc 	movw	r3, #46012	; 0xb3bc
 8008fea:	b212      	sxth	r2, r2
 8008fec:	5ee1      	ldrsh	r1, [r4, r3]
 8008fee:	f7f9 f82e 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8008ff2:	5fa3      	ldrsh	r3, [r4, r6]
 8008ff4:	5fe2      	ldrsh	r2, [r4, r7]
 8008ff6:	9801      	ldr	r0, [sp, #4]
 8008ff8:	f24b 36c0 	movw	r6, #46016	; 0xb3c0
 8008ffc:	441a      	add	r2, r3
 8008ffe:	5fa1      	ldrsh	r1, [r4, r6]
 8009000:	f7fe fd61 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8009004:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8009008:	5fa1      	ldrsh	r1, [r4, r6]
 800900a:	9801      	ldr	r0, [sp, #4]
 800900c:	f7f9 f8eb 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009010:	2301      	movs	r3, #1
 8009012:	5563      	strb	r3, [r4, r5]
 8009014:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 8009016:	f00d fd69 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(thld_state_fil){
 800901a:	f504 403d 	add.w	r0, r4, #48384	; 0xbd00
 800901e:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 8009022:	309a      	adds	r0, #154	; 0x9a
 8009024:	f894 305f 	ldrb.w	r3, [r4, #95]	; 0x5f
 8009028:	b173      	cbz	r3, 8009048 <_ZN11Screen1View23functionFilterThresholdEv+0x84>
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, "+");
 800902a:	4a08      	ldr	r2, [pc, #32]	; (800904c <_ZN11Screen1View23functionFilterThresholdEv+0x88>)
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, " ");
 800902c:	210a      	movs	r1, #10
}
 800902e:	b003      	add	sp, #12
 8009030:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, " ");
 8009034:	f010 ba5a 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 8009038:	2200      	movs	r2, #0
 800903a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800903e:	9001      	str	r0, [sp, #4]
 8009040:	f7f9 f805 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 8009044:	2300      	movs	r3, #0
 8009046:	e7e4      	b.n	8009012 <_ZN11Screen1View23functionFilterThresholdEv+0x4e>
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, " ");
 8009048:	4a01      	ldr	r2, [pc, #4]	; (8009050 <_ZN11Screen1View23functionFilterThresholdEv+0x8c>)
 800904a:	e7ef      	b.n	800902c <_ZN11Screen1View23functionFilterThresholdEv+0x68>
 800904c:	08028a86 	.word	0x08028a86
 8009050:	0802baa0 	.word	0x0802baa0

08009054 <_ZN11Screen1View17functionFilterErrEv>:
{
 8009054:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009056:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 8009058:	f245 1595 	movw	r5, #20885	; 0x5195
	ConfigListFilterLog *list = &ListFilterLog_Err;
 800905c:	f500 40a2 	add.w	r0, r0, #20736	; 0x5100
	if(list->isVisible() == false)
 8009060:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Err;
 8009062:	3070      	adds	r0, #112	; 0x70
	if(list->isVisible() == false)
 8009064:	bb83      	cbnz	r3, 80090c8 <_ZN11Screen1View17functionFilterErrEv+0x74>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 8009066:	f24b 26fe 	movw	r6, #45822	; 0xb2fe
 800906a:	f24b 27fa 	movw	r7, #45818	; 0xb2fa
 800906e:	5ba3      	ldrh	r3, [r4, r6]
 8009070:	5be2      	ldrh	r2, [r4, r7]
 8009072:	9001      	str	r0, [sp, #4]
 8009074:	441a      	add	r2, r3
 8009076:	f24b 23f8 	movw	r3, #45816	; 0xb2f8
 800907a:	b212      	sxth	r2, r2
 800907c:	5ee1      	ldrsh	r1, [r4, r3]
 800907e:	f7f8 ffe6 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8009082:	5fa3      	ldrsh	r3, [r4, r6]
 8009084:	5fe2      	ldrsh	r2, [r4, r7]
 8009086:	9801      	ldr	r0, [sp, #4]
 8009088:	f24b 26fc 	movw	r6, #45820	; 0xb2fc
 800908c:	441a      	add	r2, r3
 800908e:	5fa1      	ldrsh	r1, [r4, r6]
 8009090:	f7fe fd19 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8009094:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8009098:	5fa1      	ldrsh	r1, [r4, r6]
 800909a:	9801      	ldr	r0, [sp, #4]
 800909c:	f7f9 f8a3 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80090a0:	2301      	movs	r3, #1
 80090a2:	5563      	strb	r3, [r4, r5]
 80090a4:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 80090a6:	f00d fd21 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(err_state_fil){
 80090aa:	f504 403d 	add.w	r0, r4, #48384	; 0xbd00
 80090ae:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 80090b2:	3068      	adds	r0, #104	; 0x68
 80090b4:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 80090b8:	b173      	cbz	r3, 80090d8 <_ZN11Screen1View17functionFilterErrEv+0x84>
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, "+");
 80090ba:	4a08      	ldr	r2, [pc, #32]	; (80090dc <_ZN11Screen1View17functionFilterErrEv+0x88>)
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, " ");
 80090bc:	210a      	movs	r1, #10
}
 80090be:	b003      	add	sp, #12
 80090c0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, " ");
 80090c4:	f010 ba12 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 80090c8:	2200      	movs	r2, #0
 80090ca:	f44f 7148 	mov.w	r1, #800	; 0x320
 80090ce:	9001      	str	r0, [sp, #4]
 80090d0:	f7f8 ffbd 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 80090d4:	2300      	movs	r3, #0
 80090d6:	e7e4      	b.n	80090a2 <_ZN11Screen1View17functionFilterErrEv+0x4e>
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, " ");
 80090d8:	4a01      	ldr	r2, [pc, #4]	; (80090e0 <_ZN11Screen1View17functionFilterErrEv+0x8c>)
 80090da:	e7ef      	b.n	80090bc <_ZN11Screen1View17functionFilterErrEv+0x68>
 80090dc:	08028a86 	.word	0x08028a86
 80090e0:	0802baa0 	.word	0x0802baa0

080090e4 <_ZN11Screen1View17functionFilterGasEv>:
{
 80090e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80090e6:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 80090e8:	f244 1575 	movw	r5, #16757	; 0x4175
	ConfigListFilterLog *list = &ListFilterLog_Gas;
 80090ec:	f500 4082 	add.w	r0, r0, #16640	; 0x4100
	if(list->isVisible() == false)
 80090f0:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Gas;
 80090f2:	3050      	adds	r0, #80	; 0x50
	if(list->isVisible() == false)
 80090f4:	bb83      	cbnz	r3, 8009158 <_ZN11Screen1View17functionFilterGasEv+0x74>
		list->moveTo(button_list->getX(), button_list->getY() + button_list->getHeight());
 80090f6:	f24b 263a 	movw	r6, #45626	; 0xb23a
 80090fa:	f24b 2736 	movw	r7, #45622	; 0xb236
 80090fe:	5ba3      	ldrh	r3, [r4, r6]
 8009100:	5be2      	ldrh	r2, [r4, r7]
 8009102:	9001      	str	r0, [sp, #4]
 8009104:	441a      	add	r2, r3
 8009106:	f24b 2334 	movw	r3, #45620	; 0xb234
 800910a:	b212      	sxth	r2, r2
 800910c:	5ee1      	ldrsh	r1, [r4, r3]
 800910e:	f7f8 ff9e 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button_list->getWidth(), button_list->getY() + button_list->getHeight());
 8009112:	5fa3      	ldrsh	r3, [r4, r6]
 8009114:	5fe2      	ldrsh	r2, [r4, r7]
 8009116:	9801      	ldr	r0, [sp, #4]
 8009118:	f24b 2638 	movw	r6, #45624	; 0xb238
 800911c:	441a      	add	r2, r3
 800911e:	5fa1      	ldrsh	r1, [r4, r6]
 8009120:	f7fe fcd1 	bl	8007ac6 <_ZN19ConfigListFilterLog8resizeXYEii>
		list->setWidthHeight(button_list->getWidth(), listLayoutLogTable.getHeight());
 8009124:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 8009128:	5fa1      	ldrsh	r1, [r4, r6]
 800912a:	9801      	ldr	r0, [sp, #4]
 800912c:	f7f9 f85b 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009130:	2301      	movs	r3, #1
 8009132:	5563      	strb	r3, [r4, r5]
 8009134:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 8009136:	f00d fcd9 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(formula_fil){
 800913a:	f504 403d 	add.w	r0, r4, #48384	; 0xbd00
 800913e:	f504 34ac 	add.w	r4, r4, #88064	; 0x15800
 8009142:	3036      	adds	r0, #54	; 0x36
 8009144:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
 8009148:	b173      	cbz	r3, 8009168 <_ZN11Screen1View17functionFilterGasEv+0x84>
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, "+");
 800914a:	4a08      	ldr	r2, [pc, #32]	; (800916c <_ZN11Screen1View17functionFilterGasEv+0x88>)
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, " ");
 800914c:	210a      	movs	r1, #10
}
 800914e:	b003      	add	sp, #12
 8009150:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, " ");
 8009154:	f010 b9ca 	b.w	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 8009158:	2200      	movs	r2, #0
 800915a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800915e:	9001      	str	r0, [sp, #4]
 8009160:	f7f8 ff75 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
 8009164:	2300      	movs	r3, #0
 8009166:	e7e4      	b.n	8009132 <_ZN11Screen1View17functionFilterGasEv+0x4e>
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, " ");
 8009168:	4a01      	ldr	r2, [pc, #4]	; (8009170 <_ZN11Screen1View17functionFilterGasEv+0x8c>)
 800916a:	e7ef      	b.n	800914c <_ZN11Screen1View17functionFilterGasEv+0x68>
 800916c:	08028a86 	.word	0x08028a86
 8009170:	0802baa0 	.word	0x0802baa0

08009174 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View():
 8009174:	b510      	push	{r4, lr}
 8009176:	4604      	mov	r4, r0
CallbackListItemSelected(this, &Screen1View::handleListItemSelected)
 8009178:	f7fc fa88 	bl	800568c <_ZN15Screen1ViewBaseC1Ev>
 800917c:	4b28      	ldr	r3, [pc, #160]	; (8009220 <_ZN11Screen1ViewC1Ev+0xac>)
 800917e:	6023      	str	r3, [r4, #0]
        : pobject(pobject), pmemfun_2(pmemfun_2)
 8009180:	f64b 63c8 	movw	r3, #48840	; 0xbec8
 8009184:	4927      	ldr	r1, [pc, #156]	; (8009224 <_ZN11Screen1ViewC1Ev+0xb0>)
 8009186:	50e1      	str	r1, [r4, r3]
 8009188:	18e2      	adds	r2, r4, r3
 800918a:	f64b 63d0 	movw	r3, #48848	; 0xbed0
 800918e:	6054      	str	r4, [r2, #4]
 8009190:	4a25      	ldr	r2, [pc, #148]	; (8009228 <_ZN11Screen1ViewC1Ev+0xb4>)
 8009192:	50e2      	str	r2, [r4, r3]
 8009194:	f64b 63d4 	movw	r3, #48852	; 0xbed4
 8009198:	2200      	movs	r2, #0
 800919a:	f504 403e 	add.w	r0, r4, #48640	; 0xbe00
 800919e:	50e2      	str	r2, [r4, r3]
 80091a0:	30d8      	adds	r0, #216	; 0xd8
 80091a2:	f7ff fa8f 	bl	80086c4 <_ZN21DateSelectorContainerC1Ev>
 80091a6:	f504 3085 	add.w	r0, r4, #68096	; 0x10a00
 80091aa:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 80091ae:	f7ff fa89 	bl	80086c4 <_ZN21DateSelectorContainerC1Ev>
 80091b2:	f504 33ac 	add.w	r3, r4, #88064	; 0x15800
 80091b6:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 80091ba:	63da      	str	r2, [r3, #60]	; 0x3c
 80091bc:	2201      	movs	r2, #1
 80091be:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 80091c2:	f504 32ab 	add.w	r2, r4, #87552	; 0x15600
 80091c6:	f502 72ec 	add.w	r2, r2, #472	; 0x1d8
 80091ca:	e9c3 2219 	strd	r2, r2, [r3, #100]	; 0x64
 80091ce:	f104 02d0 	add.w	r2, r4, #208	; 0xd0
 80091d2:	66da      	str	r2, [r3, #108]	; 0x6c
 80091d4:	f504 62d4 	add.w	r2, r4, #1696	; 0x6a0
 80091d8:	671a      	str	r2, [r3, #112]	; 0x70
 80091da:	f504 6247 	add.w	r2, r4, #3184	; 0xc70
 80091de:	675a      	str	r2, [r3, #116]	; 0x74
 80091e0:	f504 5292 	add.w	r2, r4, #4672	; 0x1240
 80091e4:	679a      	str	r2, [r3, #120]	; 0x78
 80091e6:	f504 52c0 	add.w	r2, r4, #6144	; 0x1800
 80091ea:	3210      	adds	r2, #16
 80091ec:	67da      	str	r2, [r3, #124]	; 0x7c
 80091ee:	f504 52ef 	add.w	r2, r4, #7648	; 0x1de0
 80091f2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80091f6:	f504 520e 	add.w	r2, r4, #9088	; 0x2380
 80091fa:	3230      	adds	r2, #48	; 0x30
 80091fc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8009200:	f504 5226 	add.w	r2, r4, #10624	; 0x2980
 8009204:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8009208:	f504 523d 	add.w	r2, r4, #12096	; 0x2f40
 800920c:	3210      	adds	r2, #16
 800920e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8009212:	f504 5254 	add.w	r2, r4, #13568	; 0x3500
 8009216:	3220      	adds	r2, #32
 8009218:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
}
 800921c:	4620      	mov	r0, r4
 800921e:	bd10      	pop	{r4, pc}
 8009220:	08028aa8 	.word	0x08028aa8
 8009224:	08028a90 	.word	0x08028a90
 8009228:	08008a35 	.word	0x08008a35

0800922c <_ZN11Screen1View11PageRefreshEv>:
{
 800922c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 8009230:	f500 35ac 	add.w	r5, r0, #88064	; 0x15800
 8009234:	230a      	movs	r3, #10
 8009236:	f500 413c 	add.w	r1, r0, #48128	; 0xbc00
{
 800923a:	4604      	mov	r4, r0
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 800923c:	461a      	mov	r2, r3
 800923e:	8fe8      	ldrh	r0, [r5, #62]	; 0x3e
 8009240:	31a0      	adds	r1, #160	; 0xa0
 8009242:	f00f fdf7 	bl	8018e34 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 1), 	flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, 10);
 8009246:	8fe8      	ldrh	r0, [r5, #62]	; 0x3e
 8009248:	230a      	movs	r3, #10
 800924a:	f504 413c 	add.w	r1, r4, #48128	; 0xbc00
 800924e:	461a      	mov	r2, r3
 8009250:	31b4      	adds	r1, #180	; 0xb4
 8009252:	3001      	adds	r0, #1
 8009254:	f00f fdee 	bl	8018e34 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 2), 	flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, 10);
 8009258:	8fe8      	ldrh	r0, [r5, #62]	; 0x3e
 800925a:	230a      	movs	r3, #10
 800925c:	f504 413c 	add.w	r1, r4, #48128	; 0xbc00
 8009260:	461a      	mov	r2, r3
 8009262:	31c8      	adds	r1, #200	; 0xc8
 8009264:	3002      	adds	r0, #2
 8009266:	f00f fde5 	bl	8018e34 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 3), 	flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, 10);
 800926a:	8fe8      	ldrh	r0, [r5, #62]	; 0x3e
 800926c:	230a      	movs	r3, #10
 800926e:	f504 413c 	add.w	r1, r4, #48128	; 0xbc00
 8009272:	461a      	mov	r2, r3
 8009274:	31dc      	adds	r1, #220	; 0xdc
 8009276:	3003      	adds	r0, #3
 8009278:	f00f fddc 	bl	8018e34 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 4), 	flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, 10);
 800927c:	8fe8      	ldrh	r0, [r5, #62]	; 0x3e
 800927e:	230a      	movs	r3, #10
 8009280:	f504 413c 	add.w	r1, r4, #48128	; 0xbc00
 8009284:	461a      	mov	r2, r3
 8009286:	31f0      	adds	r1, #240	; 0xf0
 8009288:	3004      	adds	r0, #4
 800928a:	f00f fdd3 	bl	8018e34 <_ZN8touchgfx7Unicode4itoaElPtti>
	if(current_page_table == 1){
 800928e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 8009292:	f643 4235 	movw	r2, #15413	; 0x3c35
 8009296:	1e59      	subs	r1, r3, #1
 8009298:	bf18      	it	ne
 800929a:	2101      	movne	r1, #1
 800929c:	54a1      	strb	r1, [r4, r2]
	if((current_page_table*10) > search_count_log){
 800929e:	220a      	movs	r2, #10
 80092a0:	435a      	muls	r2, r3
 80092a2:	f8b5 3042 	ldrh.w	r3, [r5, #66]	; 0x42
 80092a6:	429a      	cmp	r2, r3
 80092a8:	dd49      	ble.n	800933e <_ZN11Screen1View11PageRefreshEv+0x112>
		search_count_log += 10;
 80092aa:	330a      	adds	r3, #10
 80092ac:	b29b      	uxth	r3, r3
		if((current_page_table*10) != search_count_log){
 80092ae:	429a      	cmp	r2, r3
		search_count_log += 10;
 80092b0:	f8a5 3042 	strh.w	r3, [r5, #66]	; 0x42
		if((current_page_table*10) != search_count_log){
 80092b4:	d043      	beq.n	800933e <_ZN11Screen1View11PageRefreshEv+0x112>
 80092b6:	f244 03b5 	movw	r3, #16565	; 0x40b5
 80092ba:	2200      	movs	r2, #0
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092bc:	f504 5b73 	add.w	fp, r4, #15552	; 0x3cc0
 80092c0:	4e4a      	ldr	r6, [pc, #296]	; (80093ec <_ZN11Screen1View11PageRefreshEv+0x1c0>)
 80092c2:	54e2      	strb	r2, [r4, r3]
 80092c4:	f10b 0b10 	add.w	fp, fp, #16
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092c8:	f504 5a76 	add.w	sl, r4, #15744	; 0x3d80
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092cc:	4b48      	ldr	r3, [pc, #288]	; (80093f0 <_ZN11Screen1View11PageRefreshEv+0x1c4>)
 80092ce:	4a49      	ldr	r2, [pc, #292]	; (80093f4 <_ZN11Screen1View11PageRefreshEv+0x1c8>)
 80092d0:	4949      	ldr	r1, [pc, #292]	; (80093f8 <_ZN11Screen1View11PageRefreshEv+0x1cc>)
 80092d2:	9600      	str	r6, [sp, #0]
 80092d4:	4658      	mov	r0, fp
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092d6:	f10a 0a10 	add.w	sl, sl, #16
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092da:	f504 5979 	add.w	r9, r4, #15936	; 0x3e40
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092de:	f7f9 fc25 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092e2:	f109 0910 	add.w	r9, r9, #16
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092e6:	4b42      	ldr	r3, [pc, #264]	; (80093f0 <_ZN11Screen1View11PageRefreshEv+0x1c4>)
 80092e8:	4a42      	ldr	r2, [pc, #264]	; (80093f4 <_ZN11Screen1View11PageRefreshEv+0x1c8>)
 80092ea:	4943      	ldr	r1, [pc, #268]	; (80093f8 <_ZN11Screen1View11PageRefreshEv+0x1cc>)
 80092ec:	9600      	str	r6, [sp, #0]
 80092ee:	4650      	mov	r0, sl
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092f0:	f504 587c 	add.w	r8, r4, #16128	; 0x3f00
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092f4:	f7f9 fc1a 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092f8:	f108 0810 	add.w	r8, r8, #16
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 80092fc:	4b3c      	ldr	r3, [pc, #240]	; (80093f0 <_ZN11Screen1View11PageRefreshEv+0x1c4>)
 80092fe:	4a3d      	ldr	r2, [pc, #244]	; (80093f4 <_ZN11Screen1View11PageRefreshEv+0x1c8>)
 8009300:	493d      	ldr	r1, [pc, #244]	; (80093f8 <_ZN11Screen1View11PageRefreshEv+0x1cc>)
 8009302:	9600      	str	r6, [sp, #0]
 8009304:	4648      	mov	r0, r9
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8009306:	f504 577f 	add.w	r7, r4, #16320	; 0x3fc0
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800930a:	f7f9 fc0f 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800930e:	3710      	adds	r7, #16
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8009310:	4b37      	ldr	r3, [pc, #220]	; (80093f0 <_ZN11Screen1View11PageRefreshEv+0x1c4>)
 8009312:	4a38      	ldr	r2, [pc, #224]	; (80093f4 <_ZN11Screen1View11PageRefreshEv+0x1c8>)
 8009314:	4938      	ldr	r1, [pc, #224]	; (80093f8 <_ZN11Screen1View11PageRefreshEv+0x1cc>)
 8009316:	9600      	str	r6, [sp, #0]
 8009318:	4640      	mov	r0, r8
 800931a:	f7f9 fc07 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800931e:	4b34      	ldr	r3, [pc, #208]	; (80093f0 <_ZN11Screen1View11PageRefreshEv+0x1c4>)
 8009320:	4a34      	ldr	r2, [pc, #208]	; (80093f4 <_ZN11Screen1View11PageRefreshEv+0x1c8>)
 8009322:	4935      	ldr	r1, [pc, #212]	; (80093f8 <_ZN11Screen1View11PageRefreshEv+0x1cc>)
 8009324:	9600      	str	r6, [sp, #0]
 8009326:	4638      	mov	r0, r7
 8009328:	f7f9 fc00 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	switch(current_button_table){
 800932c:	8fab      	ldrh	r3, [r5, #60]	; 0x3c
 800932e:	3b01      	subs	r3, #1
 8009330:	2b04      	cmp	r3, #4
 8009332:	d810      	bhi.n	8009356 <_ZN11Screen1View11PageRefreshEv+0x12a>
 8009334:	e8df f003 	tbb	[pc, r3]
 8009338:	443d3607 	.word	0x443d3607
 800933c:	4b          	.byte	0x4b
 800933d:	00          	.byte	0x00
 800933e:	f244 03b5 	movw	r3, #16565	; 0x40b5
 8009342:	2201      	movs	r2, #1
 8009344:	e7ba      	b.n	80092bc <_ZN11Screen1View11PageRefreshEv+0x90>
    colortype(uint32_t col)
 8009346:	4b2d      	ldr	r3, [pc, #180]	; (80093fc <_ZN11Screen1View11PageRefreshEv+0x1d0>)
		flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8009348:	9300      	str	r3, [sp, #0]
 800934a:	4a2d      	ldr	r2, [pc, #180]	; (8009400 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 800934c:	4b2d      	ldr	r3, [pc, #180]	; (8009404 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 800934e:	492e      	ldr	r1, [pc, #184]	; (8009408 <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8009350:	4658      	mov	r0, fp
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8009352:	f7f9 fbeb 	bl	8002b2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 8009356:	f504 38ab 	add.w	r8, r4, #87552	; 0x15600
 800935a:	f504 37ac 	add.w	r7, r4, #88064	; 0x15800
{
 800935e:	2600      	movs	r6, #0
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 8009360:	f508 78ec 	add.w	r8, r8, #472	; 0x1d8
 8009364:	3744      	adds	r7, #68	; 0x44
				mas_ContainerTableLog[i]->setVisible(false);
 8009366:	f105 096c 	add.w	r9, r5, #108	; 0x6c
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 800936a:	f8b5 1040 	ldrh.w	r1, [r5, #64]	; 0x40
 800936e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8009372:	eb06 0141 	add.w	r1, r6, r1, lsl #1
 8009376:	390a      	subs	r1, #10
 8009378:	b289      	uxth	r1, r1
 800937a:	4640      	mov	r0, r8
 800937c:	f7f8 fb03 	bl	8001986 <parce_found_logs>
			if(type_log_fil == TYPE_LOG_READINGS){
 8009380:	783b      	ldrb	r3, [r7, #0]
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 8009382:	2800      	cmp	r0, #0
 8009384:	d02a      	beq.n	80093dc <_ZN11Screen1View11PageRefreshEv+0x1b0>
			if(type_log_fil == TYPE_LOG_READINGS){
 8009386:	b923      	cbnz	r3, 8009392 <_ZN11Screen1View11PageRefreshEv+0x166>
				mas_ContainerTableLog[i]->UpdateLog_1(Event_log_readings_ptr);
 8009388:	6e69      	ldr	r1, [r5, #100]	; 0x64
 800938a:	f859 0026 	ldr.w	r0, [r9, r6, lsl #2]
 800938e:	f7fe feaf 	bl	80080f0 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef>
	for(uint8_t i = 0; i < 10; i++){
 8009392:	3601      	adds	r6, #1
 8009394:	2e0a      	cmp	r6, #10
 8009396:	d1e8      	bne.n	800936a <_ZN11Screen1View11PageRefreshEv+0x13e>
 8009398:	1d20      	adds	r0, r4, #4
}
 800939a:	b003      	add	sp, #12
 800939c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093a0:	f00d bba4 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 80093a4:	4b15      	ldr	r3, [pc, #84]	; (80093fc <_ZN11Screen1View11PageRefreshEv+0x1d0>)
		flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80093a6:	9300      	str	r3, [sp, #0]
 80093a8:	4a15      	ldr	r2, [pc, #84]	; (8009400 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 80093aa:	4b16      	ldr	r3, [pc, #88]	; (8009404 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 80093ac:	4916      	ldr	r1, [pc, #88]	; (8009408 <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 80093ae:	4650      	mov	r0, sl
 80093b0:	e7cf      	b.n	8009352 <_ZN11Screen1View11PageRefreshEv+0x126>
 80093b2:	4b12      	ldr	r3, [pc, #72]	; (80093fc <_ZN11Screen1View11PageRefreshEv+0x1d0>)
		flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80093b4:	9300      	str	r3, [sp, #0]
 80093b6:	4a12      	ldr	r2, [pc, #72]	; (8009400 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 80093b8:	4b12      	ldr	r3, [pc, #72]	; (8009404 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 80093ba:	4913      	ldr	r1, [pc, #76]	; (8009408 <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 80093bc:	4648      	mov	r0, r9
 80093be:	e7c8      	b.n	8009352 <_ZN11Screen1View11PageRefreshEv+0x126>
 80093c0:	4b0e      	ldr	r3, [pc, #56]	; (80093fc <_ZN11Screen1View11PageRefreshEv+0x1d0>)
		flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80093c2:	9300      	str	r3, [sp, #0]
 80093c4:	4a0e      	ldr	r2, [pc, #56]	; (8009400 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 80093c6:	4b0f      	ldr	r3, [pc, #60]	; (8009404 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 80093c8:	490f      	ldr	r1, [pc, #60]	; (8009408 <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 80093ca:	4640      	mov	r0, r8
 80093cc:	e7c1      	b.n	8009352 <_ZN11Screen1View11PageRefreshEv+0x126>
 80093ce:	4b0b      	ldr	r3, [pc, #44]	; (80093fc <_ZN11Screen1View11PageRefreshEv+0x1d0>)
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 80093d0:	9300      	str	r3, [sp, #0]
 80093d2:	4a0b      	ldr	r2, [pc, #44]	; (8009400 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 80093d4:	4b0b      	ldr	r3, [pc, #44]	; (8009404 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 80093d6:	490c      	ldr	r1, [pc, #48]	; (8009408 <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 80093d8:	4638      	mov	r0, r7
 80093da:	e7ba      	b.n	8009352 <_ZN11Screen1View11PageRefreshEv+0x126>
			if(type_log_fil == TYPE_LOG_READINGS){
 80093dc:	2b00      	cmp	r3, #0
 80093de:	d1d8      	bne.n	8009392 <_ZN11Screen1View11PageRefreshEv+0x166>
 80093e0:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 80093e4:	f882 3025 	strb.w	r3, [r2, #37]	; 0x25
    }
 80093e8:	e7d3      	b.n	8009392 <_ZN11Screen1View11PageRefreshEv+0x166>
 80093ea:	bf00      	nop
 80093ec:	ff336699 	.word	0xff336699
 80093f0:	ff003366 	.word	0xff003366
 80093f4:	ff0099cc 	.word	0xff0099cc
 80093f8:	ff006699 	.word	0xff006699
 80093fc:	ff993535 	.word	0xff993535
 8009400:	ffcc0000 	.word	0xffcc0000
 8009404:	ff660000 	.word	0xff660000
 8009408:	ff990000 	.word	0xff990000

0800940c <_ZN11Screen1View15functionReadLogEv>:
	position = 0;
 800940c:	f500 32ac 	add.w	r2, r0, #88064	; 0x15800
{
 8009410:	b410      	push	{r4}
	time_start_back = time_start_fil;
 8009412:	6cd4      	ldr	r4, [r2, #76]	; 0x4c
 8009414:	6494      	str	r4, [r2, #72]	; 0x48
	current_button_table = 1;
 8009416:	f04f 1401 	mov.w	r4, #65537	; 0x10001
 800941a:	63d4      	str	r4, [r2, #60]	; 0x3c
	current_page_table = 1;
 800941c:	f504 1444 	add.w	r4, r4, #3211264	; 0x310000
 8009420:	6414      	str	r4, [r2, #64]	; 0x40
	position = 0;
 8009422:	2100      	movs	r1, #0
        visible = vis;
 8009424:	f643 4405 	movw	r4, #15365	; 0x3c05
 8009428:	f8a2 1054 	strh.w	r1, [r2, #84]	; 0x54
 800942c:	2201      	movs	r2, #1
 800942e:	5502      	strb	r2, [r0, r4]
 8009430:	f643 4435 	movw	r4, #15413	; 0x3c35
 8009434:	f880 20c5 	strb.w	r2, [r0, #197]	; 0xc5
 8009438:	5501      	strb	r1, [r0, r4]
 800943a:	f244 04b5 	movw	r4, #16565	; 0x40b5
 800943e:	5501      	strb	r1, [r0, r4]
 8009440:	f643 71f5 	movw	r1, #16373	; 0x3ff5
}
 8009444:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009448:	5442      	strb	r2, [r0, r1]
 800944a:	f643 7135 	movw	r1, #16181	; 0x3f35
 800944e:	5442      	strb	r2, [r0, r1]
 8009450:	f643 6175 	movw	r1, #15989	; 0x3e75
 8009454:	5442      	strb	r2, [r0, r1]
 8009456:	f643 51b5 	movw	r1, #15797	; 0x3db5
 800945a:	5442      	strb	r2, [r0, r1]
		PageRefresh();
 800945c:	f7ff bee6 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

08009460 <_ZN11Screen1View16functionPageBackEv>:
	if(current_page_table > 1){
 8009460:	f500 33ac 	add.w	r3, r0, #88064	; 0x15800
 8009464:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
	if(first_page_table > current_page_table){
 8009468:	8fd9      	ldrh	r1, [r3, #62]	; 0x3e
	if(current_page_table > 1){
 800946a:	2a01      	cmp	r2, #1
		current_page_table--;
 800946c:	bf84      	itt	hi
 800946e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8009472:	f8a3 2040 	strhhi.w	r2, [r3, #64]	; 0x40
	if(current_button_table > 1){
 8009476:	8f9a      	ldrh	r2, [r3, #60]	; 0x3c
 8009478:	2a01      	cmp	r2, #1
		current_button_table--;
 800947a:	bf84      	itt	hi
 800947c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8009480:	879a      	strhhi	r2, [r3, #60]	; 0x3c
	if(first_page_table > current_page_table){
 8009482:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
 8009486:	4291      	cmp	r1, r2
		first_page_table = current_page_table;
 8009488:	bf88      	it	hi
 800948a:	87da      	strhhi	r2, [r3, #62]	; 0x3e
	PageRefresh();
 800948c:	f7ff bece 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

08009490 <_ZN11Screen1View19functionPageForwardEv>:
	current_page_table++;
 8009490:	f500 32ac 	add.w	r2, r0, #88064	; 0x15800
	if(current_button_table < 5){
 8009494:	8f91      	ldrh	r1, [r2, #60]	; 0x3c
	current_page_table++;
 8009496:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
	if(current_button_table < 5){
 800949a:	2904      	cmp	r1, #4
		current_button_table++;
 800949c:	bf9c      	itt	ls
 800949e:	3101      	addls	r1, #1
 80094a0:	8791      	strhls	r1, [r2, #60]	; 0x3c
	current_page_table++;
 80094a2:	3301      	adds	r3, #1
	if((current_page_table - first_page_table) >= 5){
 80094a4:	8fd1      	ldrh	r1, [r2, #62]	; 0x3e
	current_page_table++;
 80094a6:	b29b      	uxth	r3, r3
 80094a8:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
	if((current_page_table - first_page_table) >= 5){
 80094ac:	1a5b      	subs	r3, r3, r1
 80094ae:	2b04      	cmp	r3, #4
		first_page_table += 1;
 80094b0:	bfc4      	itt	gt
 80094b2:	3101      	addgt	r1, #1
 80094b4:	87d1      	strhgt	r1, [r2, #62]	; 0x3e
	PageRefresh();
 80094b6:	f7ff beb9 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

080094ba <_ZN11Screen1View14functionPage_1Ev>:
{
 80094ba:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 1;
 80094bc:	f500 35ac 	add.w	r5, r0, #88064	; 0x15800
{
 80094c0:	4604      	mov	r4, r0
	current_button_table = 1;
 80094c2:	2301      	movs	r3, #1
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_1Buffer);
 80094c4:	f500 403c 	add.w	r0, r0, #48128	; 0xbc00
	current_button_table = 1;
 80094c8:	87ab      	strh	r3, [r5, #60]	; 0x3c
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_1Buffer);
 80094ca:	30a0      	adds	r0, #160	; 0xa0
 80094cc:	f00f fce4 	bl	8018e98 <_ZN8touchgfx7Unicode4atoiEPKt>
 80094d0:	f8a5 0040 	strh.w	r0, [r5, #64]	; 0x40
	PageRefresh();
 80094d4:	4620      	mov	r0, r4
}
 80094d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 80094da:	f7ff bea7 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

080094de <_ZN11Screen1View14functionPage_2Ev>:
{
 80094de:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 2;
 80094e0:	f500 35ac 	add.w	r5, r0, #88064	; 0x15800
{
 80094e4:	4604      	mov	r4, r0
	current_button_table = 2;
 80094e6:	2302      	movs	r3, #2
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_2Buffer);
 80094e8:	f500 403c 	add.w	r0, r0, #48128	; 0xbc00
	current_button_table = 2;
 80094ec:	87ab      	strh	r3, [r5, #60]	; 0x3c
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_2Buffer);
 80094ee:	30b4      	adds	r0, #180	; 0xb4
 80094f0:	f00f fcd2 	bl	8018e98 <_ZN8touchgfx7Unicode4atoiEPKt>
 80094f4:	f8a5 0040 	strh.w	r0, [r5, #64]	; 0x40
	PageRefresh();
 80094f8:	4620      	mov	r0, r4
}
 80094fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 80094fe:	f7ff be95 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

08009502 <_ZN11Screen1View14functionPage_3Ev>:
{
 8009502:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 3;
 8009504:	f500 35ac 	add.w	r5, r0, #88064	; 0x15800
{
 8009508:	4604      	mov	r4, r0
	current_button_table = 3;
 800950a:	2303      	movs	r3, #3
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_3Buffer);
 800950c:	f500 403c 	add.w	r0, r0, #48128	; 0xbc00
	current_button_table = 3;
 8009510:	87ab      	strh	r3, [r5, #60]	; 0x3c
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_3Buffer);
 8009512:	30c8      	adds	r0, #200	; 0xc8
 8009514:	f00f fcc0 	bl	8018e98 <_ZN8touchgfx7Unicode4atoiEPKt>
 8009518:	f8a5 0040 	strh.w	r0, [r5, #64]	; 0x40
	PageRefresh();
 800951c:	4620      	mov	r0, r4
}
 800951e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 8009522:	f7ff be83 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

08009526 <_ZN11Screen1View14functionPage_4Ev>:
{
 8009526:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 4;
 8009528:	f500 35ac 	add.w	r5, r0, #88064	; 0x15800
{
 800952c:	4604      	mov	r4, r0
	current_button_table = 4;
 800952e:	2304      	movs	r3, #4
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_4Buffer);
 8009530:	f500 403c 	add.w	r0, r0, #48128	; 0xbc00
	current_button_table = 4;
 8009534:	87ab      	strh	r3, [r5, #60]	; 0x3c
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_4Buffer);
 8009536:	30dc      	adds	r0, #220	; 0xdc
 8009538:	f00f fcae 	bl	8018e98 <_ZN8touchgfx7Unicode4atoiEPKt>
 800953c:	f8a5 0040 	strh.w	r0, [r5, #64]	; 0x40
	PageRefresh();
 8009540:	4620      	mov	r0, r4
}
 8009542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 8009546:	f7ff be71 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>

0800954a <_ZN11Screen1View14functionPage_5Ev>:
{
 800954a:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 5;
 800954c:	f500 35ac 	add.w	r5, r0, #88064	; 0x15800
{
 8009550:	4604      	mov	r4, r0
	current_button_table = 5;
 8009552:	2305      	movs	r3, #5
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_5Buffer);
 8009554:	f500 403c 	add.w	r0, r0, #48128	; 0xbc00
	current_button_table = 5;
 8009558:	87ab      	strh	r3, [r5, #60]	; 0x3c
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_5Buffer);
 800955a:	30f0      	adds	r0, #240	; 0xf0
 800955c:	f00f fc9c 	bl	8018e98 <_ZN8touchgfx7Unicode4atoiEPKt>
 8009560:	f8a5 0040 	strh.w	r0, [r5, #64]	; 0x40
	PageRefresh();
 8009564:	4620      	mov	r0, r4
}
 8009566:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 800956a:	f7ff be5f 	b.w	800922c <_ZN11Screen1View11PageRefreshEv>
	...

08009570 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8009570:	4b09      	ldr	r3, [pc, #36]	; (8009598 <_ZN11Screen1ViewD1Ev+0x28>)
 8009572:	b510      	push	{r4, lr}
 8009574:	4604      	mov	r4, r0
 8009576:	6003      	str	r3, [r0, #0]
 8009578:	f500 3085 	add.w	r0, r0, #68096	; 0x10a00
 800957c:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 8009580:	f7ff f8f6 	bl	8008770 <_ZN21DateSelectorContainerD1Ev>
 8009584:	f504 403e 	add.w	r0, r4, #48640	; 0xbe00
 8009588:	30d8      	adds	r0, #216	; 0xd8
 800958a:	f7ff f8f1 	bl	8008770 <_ZN21DateSelectorContainerD1Ev>
 800958e:	4620      	mov	r0, r4
 8009590:	f7fc f802 	bl	8005598 <_ZN15Screen1ViewBaseD1Ev>
 8009594:	4620      	mov	r0, r4
 8009596:	bd10      	pop	{r4, pc}
 8009598:	08028aa8 	.word	0x08028aa8

0800959c <_ZN11Screen1ViewD0Ev>:
 800959c:	b510      	push	{r4, lr}
 800959e:	4604      	mov	r4, r0
 80095a0:	f7ff ffe6 	bl	8009570 <_ZN11Screen1ViewD1Ev>
 80095a4:	4620      	mov	r0, r4
 80095a6:	4902      	ldr	r1, [pc, #8]	; (80095b0 <_ZN11Screen1ViewD0Ev+0x14>)
 80095a8:	f01c f8dc 	bl	8025764 <_ZdlPvj>
 80095ac:	4620      	mov	r0, r4
 80095ae:	bd10      	pop	{r4, pc}
 80095b0:	00015894 	.word	0x00015894

080095b4 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80095b4:	4770      	bx	lr

080095b6 <_ZThn4_N16Screen2PresenterD1Ev>:
 80095b6:	3804      	subs	r0, #4
 80095b8:	4770      	bx	lr

080095ba <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80095ba:	4770      	bx	lr

080095bc <_ZN16Screen2PresenterD0Ev>:
 80095bc:	b510      	push	{r4, lr}
 80095be:	2110      	movs	r1, #16
 80095c0:	4604      	mov	r4, r0
 80095c2:	f01c f8cf 	bl	8025764 <_ZdlPvj>
 80095c6:	4620      	mov	r0, r4
 80095c8:	bd10      	pop	{r4, pc}

080095ca <_ZThn4_N16Screen2PresenterD0Ev>:
 80095ca:	f1a0 0004 	sub.w	r0, r0, #4
 80095ce:	e7f5      	b.n	80095bc <_ZN16Screen2PresenterD0Ev>

080095d0 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 80095d0:	b510      	push	{r4, lr}
 80095d2:	2200      	movs	r2, #0
 80095d4:	6082      	str	r2, [r0, #8]
    : view(v)
 80095d6:	4a04      	ldr	r2, [pc, #16]	; (80095e8 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 80095d8:	60c1      	str	r1, [r0, #12]
 80095da:	f102 0408 	add.w	r4, r2, #8
 80095de:	3220      	adds	r2, #32
 80095e0:	6004      	str	r4, [r0, #0]
 80095e2:	6042      	str	r2, [r0, #4]
}
 80095e4:	bd10      	pop	{r4, pc}
 80095e6:	bf00      	nop
 80095e8:	08028b18 	.word	0x08028b18

080095ec <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 80095ec:	4770      	bx	lr

080095ee <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 80095ee:	4770      	bx	lr

080095f0 <_ZN11Screen2View20functionSaveSettingsEv>:
 80095f0:	f244 2395 	movw	r3, #17045	; 0x4295
 80095f4:	2201      	movs	r2, #1
 80095f6:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить
void Screen2View::functionSaveSettings()
{
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 80095f8:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 80095fc:	3070      	adds	r0, #112	; 0x70
 80095fe:	f00d ba75 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

08009602 <_ZN11Screen2View23functionSaveModalWindowEv>:
 8009602:	f244 2395 	movw	r3, #17045	; 0x4295
 8009606:	2200      	movs	r2, #0
 8009608:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить (да\нет)
void Screen2View::functionSaveModalWindow()
{
	modalWindow1.setVisible(false);
	modalWindow1.invalidate();
 800960a:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 800960e:	3070      	adds	r0, #112	; 0x70
 8009610:	f00d ba6c 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

08009614 <_ZN11Screen2View11setupScreenEv>:
{
 8009614:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009616:	4604      	mov	r4, r0
 8009618:	2600      	movs	r6, #0
    Screen2ViewBase::setupScreen();
 800961a:	f7fd fbf3 	bl	8006e04 <_ZN15Screen2ViewBase11setupScreenEv>
    customContainerKeyboard_Num1.initialize();
 800961e:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
    customContainerKeyboard1.initialize();
 8009622:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
 8009626:	9001      	str	r0, [sp, #4]
    customContainerKeyboard_Num1.initialize();
 8009628:	3538      	adds	r5, #56	; 0x38
    customContainerKeyboard1.initialize();
 800962a:	f7fe fbb3 	bl	8007d94 <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard1.invalidate();
 800962e:	9801      	ldr	r0, [sp, #4]
 8009630:	f884 60c5 	strb.w	r6, [r4, #197]	; 0xc5
 8009634:	f00d fa5a 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
    customContainerKeyboard_Num1.initialize();
 8009638:	4628      	mov	r0, r5
 800963a:	f7fe fc11 	bl	8007e60 <_ZN27CustomContainerKeyboard_Num10initializeEv>
 800963e:	f243 035d 	movw	r3, #12381	; 0x305d
    customContainerKeyboard_Num1.invalidate();
 8009642:	4628      	mov	r0, r5
 8009644:	54e6      	strb	r6, [r4, r3]
 8009646:	f00d fa51 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 800964a:	f244 2395 	movw	r3, #17045	; 0x4295
    modalWindow1.invalidate();
 800964e:	f504 4084 	add.w	r0, r4, #16896	; 0x4200
 8009652:	3070      	adds	r0, #112	; 0x70
 8009654:	54e6      	strb	r6, [r4, r3]
}
 8009656:	b002      	add	sp, #8
 8009658:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    modalWindow1.invalidate();
 800965c:	f00d ba46 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

08009660 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv>:
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8009660:	4b0a      	ldr	r3, [pc, #40]	; (800968c <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x2c>)
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 8009662:	4a0b      	ldr	r2, [pc, #44]	; (8009690 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x30>)
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8009664:	8819      	ldrh	r1, [r3, #0]
{
 8009666:	b510      	push	{r4, lr}
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 8009668:	f244 5378 	movw	r3, #17784	; 0x4578
{
 800966c:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 800966e:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 8009670:	3101      	adds	r1, #1
 8009672:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 8009676:	b289      	uxth	r1, r1
 8009678:	3054      	adds	r0, #84	; 0x54
 800967a:	f00f ff21 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out.invalidate();
 800967e:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 8009682:	3008      	adds	r0, #8
}
 8009684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out.invalidate();
 8009688:	f00d ba30 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 800968c:	2001699c 	.word	0x2001699c
 8009690:	2001699e 	.word	0x2001699e

08009694 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv>:
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 8009694:	4b0e      	ldr	r3, [pc, #56]	; (80096d0 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x3c>)
 8009696:	490f      	ldr	r1, [pc, #60]	; (80096d4 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
 8009698:	881a      	ldrh	r2, [r3, #0]
 800969a:	3a01      	subs	r2, #1
{
 800969c:	b510      	push	{r4, lr}
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 800969e:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80096a2:	292e      	cmp	r1, #46	; 0x2e
		count_ContainerTextArea -= 1;
 80096a4:	bf08      	it	eq
 80096a6:	801a      	strheq	r2, [r3, #0]
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 80096a8:	8819      	ldrh	r1, [r3, #0]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 80096aa:	4a0a      	ldr	r2, [pc, #40]	; (80096d4 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 80096ac:	f244 537a 	movw	r3, #17786	; 0x457a
{
 80096b0:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 80096b2:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 80096b4:	3101      	adds	r1, #1
 80096b6:	f500 408a 	add.w	r0, r0, #17664	; 0x4500
 80096ba:	b289      	uxth	r1, r1
 80096bc:	3024      	adds	r0, #36	; 0x24
 80096be:	f00f feff 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out_Num.invalidate();
 80096c2:	f504 4081 	add.w	r0, r4, #16512	; 0x4080
 80096c6:	3074      	adds	r0, #116	; 0x74
}
 80096c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out_Num.invalidate();
 80096cc:	f00d ba0e 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 80096d0:	2001699c 	.word	0x2001699c
 80096d4:	2001699e 	.word	0x2001699e

080096d8 <_ZN11Screen2ViewD0Ev>:
 80096d8:	b510      	push	{r4, lr}
 80096da:	f244 517c 	movw	r1, #17788	; 0x457c
 80096de:	4604      	mov	r4, r0
 80096e0:	f01c f840 	bl	8025764 <_ZdlPvj>
 80096e4:	4620      	mov	r0, r4
 80096e6:	bd10      	pop	{r4, pc}

080096e8 <_ZN11Screen2View9function3Ev>:
{
 80096e8:	b570      	push	{r4, r5, r6, lr}
	customContainerKeyboard_Num1.initialize();
 80096ea:	f500 5540 	add.w	r5, r0, #12288	; 0x3000
{
 80096ee:	4604      	mov	r4, r0
	customContainerKeyboard_Num1.initialize();
 80096f0:	3538      	adds	r5, #56	; 0x38
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 80096f2:	f244 567a 	movw	r6, #17786	; 0x457a
	customContainerKeyboard_Num1.initialize();
 80096f6:	4628      	mov	r0, r5
 80096f8:	f7fe fbb2 	bl	8007e60 <_ZN27CustomContainerKeyboard_Num10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 80096fc:	5ba1      	ldrh	r1, [r4, r6]
 80096fe:	4815      	ldr	r0, [pc, #84]	; (8009754 <_ZN11Screen2View9function3Ev+0x6c>)
 8009700:	3101      	adds	r1, #1
 8009702:	f504 428a 	add.w	r2, r4, #17664	; 0x4500
 8009706:	b289      	uxth	r1, r1
 8009708:	3224      	adds	r2, #36	; 0x24
 800970a:	f00f fed9 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard_Num1.count_Container = 5;				// Установка максимальной длины контейнера
 800970e:	f244 03e4 	movw	r3, #16612	; 0x40e4
 8009712:	2205      	movs	r2, #5
 8009714:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer_num; 	// Установка длины буффера обмена элемента экрана
 8009716:	4b10      	ldr	r3, [pc, #64]	; (8009758 <_ZN11Screen2View9function3Ev+0x70>)
 8009718:	5ba2      	ldrh	r2, [r4, r6]
 800971a:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard_Num1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 800971c:	4628      	mov	r0, r5
 800971e:	f7fe fbc3 	bl	8007ea8 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 8009722:	f243 035d 	movw	r3, #12381	; 0x305d
 8009726:	2201      	movs	r2, #1
 8009728:	54e2      	strb	r2, [r4, r3]
        rect.x = x;
 800972a:	f243 033c 	movw	r3, #12348	; 0x303c
 800972e:	4a0b      	ldr	r2, [pc, #44]	; (800975c <_ZN11Screen2View9function3Ev+0x74>)
 8009730:	50e2      	str	r2, [r4, r3]
	customContainerKeyboard_Num1.invalidate();
 8009732:	4628      	mov	r0, r5
 8009734:	f00d f9da 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard1.isVisible()){
 8009738:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800973c:	b143      	cbz	r3, 8009750 <_ZN11Screen2View9function3Ev+0x68>
        visible = vis;
 800973e:	2300      	movs	r3, #0
 8009740:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
		customContainerKeyboard1.invalidate();
 8009744:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
}
 8009748:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard1.invalidate();
 800974c:	f00d b9ce 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8009750:	bd70      	pop	{r4, r5, r6, pc}
 8009752:	bf00      	nop
 8009754:	2001699e 	.word	0x2001699e
 8009758:	2001699c 	.word	0x2001699c
 800975c:	00b40104 	.word	0x00b40104

08009760 <_ZN11Screen2View9function2Ev>:
{
 8009760:	b570      	push	{r4, r5, r6, lr}
 8009762:	4604      	mov	r4, r0
	customContainerKeyboard1.initialize();
 8009764:	f100 05a0 	add.w	r5, r0, #160	; 0xa0
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 8009768:	f244 5678 	movw	r6, #17784	; 0x4578
	customContainerKeyboard1.initialize();
 800976c:	4628      	mov	r0, r5
 800976e:	f7fe fb11 	bl	8007d94 <_ZN23CustomContainerKeyboard10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 8009772:	5ba1      	ldrh	r1, [r4, r6]
 8009774:	4814      	ldr	r0, [pc, #80]	; (80097c8 <_ZN11Screen2View9function2Ev+0x68>)
 8009776:	3101      	adds	r1, #1
 8009778:	f504 4289 	add.w	r2, r4, #17536	; 0x4480
 800977c:	b289      	uxth	r1, r1
 800977e:	3254      	adds	r2, #84	; 0x54
 8009780:	f00f fe9e 	bl	80194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard1.count_Container = 30;				// Установка максимальной длины контейнера
 8009784:	f642 5388 	movw	r3, #11656	; 0x2d88
 8009788:	221e      	movs	r2, #30
 800978a:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer; 	// Установка длины буффера обмена элемента экрана
 800978c:	4b0f      	ldr	r3, [pc, #60]	; (80097cc <_ZN11Screen2View9function2Ev+0x6c>)
 800978e:	5ba2      	ldrh	r2, [r4, r6]
 8009790:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 8009792:	4628      	mov	r0, r5
 8009794:	f7fe fae6 	bl	8007d64 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8009798:	2301      	movs	r3, #1
 800979a:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
        rect.x = x;
 800979e:	f44f 0334 	mov.w	r3, #11796480	; 0xb40000
 80097a2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
	customContainerKeyboard1.invalidate();
 80097a6:	4628      	mov	r0, r5
 80097a8:	f00d f9a0 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard_Num1.isVisible()){
 80097ac:	f243 035d 	movw	r3, #12381	; 0x305d
 80097b0:	5ce2      	ldrb	r2, [r4, r3]
 80097b2:	b142      	cbz	r2, 80097c6 <_ZN11Screen2View9function2Ev+0x66>
		customContainerKeyboard_Num1.invalidate();
 80097b4:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
        visible = vis;
 80097b8:	2200      	movs	r2, #0
 80097ba:	54e2      	strb	r2, [r4, r3]
 80097bc:	3038      	adds	r0, #56	; 0x38
}
 80097be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard_Num1.invalidate();
 80097c2:	f00d b993 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80097c6:	bd70      	pop	{r4, r5, r6, pc}
 80097c8:	2001699e 	.word	0x2001699e
 80097cc:	2001699c 	.word	0x2001699c

080097d0 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 80097d0:	b510      	push	{r4, lr}
 80097d2:	4604      	mov	r4, r0
 80097d4:	f7fd fb82 	bl	8006edc <_ZN15Screen2ViewBaseC1Ev>
 80097d8:	4b03      	ldr	r3, [pc, #12]	; (80097e8 <_ZN11Screen2ViewC1Ev+0x18>)
 80097da:	6023      	str	r3, [r4, #0]
 80097dc:	f244 5378 	movw	r3, #17784	; 0x4578
 80097e0:	2200      	movs	r2, #0
 80097e2:	50e2      	str	r2, [r4, r3]
}
 80097e4:	4620      	mov	r0, r4
 80097e6:	bd10      	pop	{r4, pc}
 80097e8:	08028b48 	.word	0x08028b48

080097ec <_ZNK8touchgfx8TextArea12getSolidRectEv>:
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 80097ec:	2200      	movs	r2, #0
 80097ee:	8002      	strh	r2, [r0, #0]
 80097f0:	8042      	strh	r2, [r0, #2]
 80097f2:	8082      	strh	r2, [r0, #4]
 80097f4:	80c2      	strh	r2, [r0, #6]
    }
 80097f6:	4770      	bx	lr

080097f8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80097f8:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80097fa:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80097fc:	4604      	mov	r4, r0
        setX(x);
 80097fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8009800:	4615      	mov	r5, r2
        setX(x);
 8009802:	4798      	blx	r3
        setBaselineY(baselineY);
 8009804:	6823      	ldr	r3, [r4, #0]
 8009806:	4629      	mov	r1, r5
 8009808:	4620      	mov	r0, r4
 800980a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    }
 800980c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8009810:	4718      	bx	r3

08009812 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009812:	4770      	bx	lr

08009814 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED1Ev>:
 * 'uint8_t getAlpha()' method.
 *
 * @tparam T specifies the type to extend with the FadeAnimator behavior.
 */
template <class T>
class FadeAnimator : public T
 8009814:	4770      	bx	lr

08009816 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 8009816:	4770      	bx	lr

08009818 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7executeES6_>:
    virtual void execute(T1 t1)
 8009818:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800981a:	68c2      	ldr	r2, [r0, #12]
 800981c:	6844      	ldr	r4, [r0, #4]
 800981e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009820:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8009822:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009826:	07d2      	lsls	r2, r2, #31
 8009828:	bf48      	it	mi
 800982a:	5962      	ldrmi	r2, [r4, r5]
 800982c:	689b      	ldr	r3, [r3, #8]
    }
 800982e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8009830:	bf48      	it	mi
 8009832:	58d3      	ldrmi	r3, [r2, r3]
 8009834:	4718      	bx	r3

08009836 <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8009836:	6843      	ldr	r3, [r0, #4]
 8009838:	b12b      	cbz	r3, 8009846 <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x10>
 800983a:	6883      	ldr	r3, [r0, #8]
 800983c:	b92b      	cbnz	r3, 800984a <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x14>
 800983e:	68c0      	ldr	r0, [r0, #12]
 8009840:	f000 0001 	and.w	r0, r0, #1
 8009844:	4770      	bx	lr
 8009846:	4618      	mov	r0, r3
 8009848:	4770      	bx	lr
 800984a:	2001      	movs	r0, #1
    }
 800984c:	4770      	bx	lr

0800984e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21setFadeAnimationDelayEt>:
     *
     * @see getFadeAnimationDelay
     */
    virtual void setFadeAnimationDelay(uint16_t delay)
    {
        fadeAnimationDelay = delay;
 800984e:	f8a0 1044 	strh.w	r1, [r0, #68]	; 0x44
    }
 8009852:	4770      	bx	lr

08009854 <_ZNK8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21getFadeAnimationDelayEv>:
     * @see setFadeAnimationDelay
     */
    virtual uint16_t getFadeAnimationDelay() const
    {
        return fadeAnimationDelay;
    }
 8009854:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 8009858:	4770      	bx	lr

0800985a <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 800985a:	8601      	strh	r1, [r0, #48]	; 0x30
    }
 800985c:	4770      	bx	lr

0800985e <_ZNK8touchgfx12MoveAnimatorINS_9ContainerEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 800985e:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 8009860:	4770      	bx	lr

08009862 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED0Ev>:
class MoveAnimator : public T
 8009862:	b510      	push	{r4, lr}
 8009864:	2148      	movs	r1, #72	; 0x48
 8009866:	4604      	mov	r4, r0
 8009868:	f01b ff7c 	bl	8025764 <_ZdlPvj>
 800986c:	4620      	mov	r0, r4
 800986e:	bd10      	pop	{r4, pc}

08009870 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED0Ev>:
class FadeAnimator : public T
 8009870:	b510      	push	{r4, lr}
 8009872:	2154      	movs	r1, #84	; 0x54
 8009874:	4604      	mov	r4, r0
 8009876:	f01b ff75 	bl	8025764 <_ZdlPvj>
 800987a:	4620      	mov	r0, r4
 800987c:	bd10      	pop	{r4, pc}

0800987e <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800987e:	b510      	push	{r4, lr}
 8009880:	2110      	movs	r1, #16
 8009882:	4604      	mov	r4, r0
 8009884:	f01b ff6e 	bl	8025764 <_ZdlPvj>
 8009888:	4620      	mov	r0, r4
 800988a:	bd10      	pop	{r4, pc}

0800988c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800988c:	6803      	ldr	r3, [r0, #0]
class TypedText
 800988e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 8009890:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8009892:	6b1e      	ldr	r6, [r3, #48]	; 0x30
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009894:	4b11      	ldr	r3, [pc, #68]	; (80098dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8009896:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8009898:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800989a:	b28d      	uxth	r5, r1
 800989c:	b92b      	cbnz	r3, 80098aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800989e:	4b10      	ldr	r3, [pc, #64]	; (80098e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80098a0:	4a10      	ldr	r2, [pc, #64]	; (80098e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80098a2:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80098a4:	4810      	ldr	r0, [pc, #64]	; (80098e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80098a6:	f01b ff8b 	bl	80257c0 <__assert_func>
 80098aa:	4910      	ldr	r1, [pc, #64]	; (80098ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80098ac:	8809      	ldrh	r1, [r1, #0]
 80098ae:	4291      	cmp	r1, r2
 80098b0:	d803      	bhi.n	80098ba <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80098b2:	4b0f      	ldr	r3, [pc, #60]	; (80098f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80098b4:	4a0b      	ldr	r2, [pc, #44]	; (80098e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80098b6:	21af      	movs	r1, #175	; 0xaf
 80098b8:	e7f4      	b.n	80098a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 80098ba:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80098be:	4b0d      	ldr	r3, [pc, #52]	; (80098f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80098c6:	6803      	ldr	r3, [r0, #0]
 80098c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80098ca:	4798      	blx	r3
 80098cc:	1a28      	subs	r0, r5, r0
 80098ce:	b201      	sxth	r1, r0
 80098d0:	4633      	mov	r3, r6
 80098d2:	4620      	mov	r0, r4
    }
 80098d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80098d8:	4718      	bx	r3
 80098da:	bf00      	nop
 80098dc:	20027a00 	.word	0x20027a00
 80098e0:	080273f8 	.word	0x080273f8
 80098e4:	0802743a 	.word	0x0802743a
 80098e8:	08027468 	.word	0x08027468
 80098ec:	20027a04 	.word	0x20027a04
 80098f0:	080274af 	.word	0x080274af
 80098f4:	20027a08 	.word	0x20027a08

080098f8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
    virtual uint16_t getTextWidth() const
 80098f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 80098fa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 80098fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009900:	4299      	cmp	r1, r3
    virtual uint16_t getTextWidth() const
 8009902:	4604      	mov	r4, r0
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8009904:	d02a      	beq.n	800995c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009906:	4b16      	ldr	r3, [pc, #88]	; (8009960 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 8009908:	681b      	ldr	r3, [r3, #0]
 800990a:	b92b      	cbnz	r3, 8009918 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800990c:	4b15      	ldr	r3, [pc, #84]	; (8009964 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800990e:	4a16      	ldr	r2, [pc, #88]	; (8009968 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8009910:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8009912:	4816      	ldr	r0, [pc, #88]	; (800996c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 8009914:	f01b ff54 	bl	80257c0 <__assert_func>
 8009918:	4a15      	ldr	r2, [pc, #84]	; (8009970 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800991a:	8812      	ldrh	r2, [r2, #0]
 800991c:	428a      	cmp	r2, r1
 800991e:	d803      	bhi.n	8009928 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 8009920:	4b14      	ldr	r3, [pc, #80]	; (8009974 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 8009922:	4a11      	ldr	r2, [pc, #68]	; (8009968 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8009924:	21af      	movs	r1, #175	; 0xaf
 8009926:	e7f4      	b.n	8009912 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8009928:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800992c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8009930:	4b11      	ldr	r3, [pc, #68]	; (8009978 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
        return typedTexts[typedTextId].direction;
 8009932:	7855      	ldrb	r5, [r2, #1]
        return fonts[typedTexts[typedTextId].fontIdx];
 8009934:	681b      	ldr	r3, [r3, #0]
 8009936:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800993a:	6833      	ldr	r3, [r6, #0]
 800993c:	69df      	ldr	r7, [r3, #28]
        return texts->getText(typedTextId);
 800993e:	4b0f      	ldr	r3, [pc, #60]	; (800997c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 8009940:	6818      	ldr	r0, [r3, #0]
 8009942:	f7fd ffd5 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
        return typedTexts[typedTextId].direction;
 8009946:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800994a:	2300      	movs	r3, #0
        return texts->getText(typedTextId);
 800994c:	4602      	mov	r2, r0
 800994e:	9300      	str	r3, [sp, #0]
 8009950:	4629      	mov	r1, r5
 8009952:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009954:	4630      	mov	r0, r6
 8009956:	47b8      	blx	r7
    }
 8009958:	b003      	add	sp, #12
 800995a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 800995c:	2000      	movs	r0, #0
 800995e:	e7fb      	b.n	8009958 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 8009960:	20027a00 	.word	0x20027a00
 8009964:	080273f8 	.word	0x080273f8
 8009968:	0802743a 	.word	0x0802743a
 800996c:	08027468 	.word	0x08027468
 8009970:	20027a04 	.word	0x20027a04
 8009974:	080274af 	.word	0x080274af
 8009978:	20027a08 	.word	0x20027a08
 800997c:	20027a0c 	.word	0x20027a0c

08009980 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
        return typedTextId != TYPED_TEXT_INVALID;
 8009980:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 8009982:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009986:	4299      	cmp	r1, r3
    virtual int16_t getTextHeight()
 8009988:	b570      	push	{r4, r5, r6, lr}
 800998a:	4604      	mov	r4, r0
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 800998c:	d01e      	beq.n	80099cc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800998e:	6803      	ldr	r3, [r0, #0]
 8009990:	6edd      	ldr	r5, [r3, #108]	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009992:	4b0f      	ldr	r3, [pc, #60]	; (80099d0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 8009994:	681b      	ldr	r3, [r3, #0]
 8009996:	b92b      	cbnz	r3, 80099a4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 8009998:	4b0e      	ldr	r3, [pc, #56]	; (80099d4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800999a:	4a0f      	ldr	r2, [pc, #60]	; (80099d8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800999c:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800999e:	480f      	ldr	r0, [pc, #60]	; (80099dc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 80099a0:	f01b ff0e 	bl	80257c0 <__assert_func>
 80099a4:	4b0e      	ldr	r3, [pc, #56]	; (80099e0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 80099a6:	881b      	ldrh	r3, [r3, #0]
 80099a8:	428b      	cmp	r3, r1
 80099aa:	d803      	bhi.n	80099b4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 80099ac:	4b0d      	ldr	r3, [pc, #52]	; (80099e4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 80099ae:	4a0a      	ldr	r2, [pc, #40]	; (80099d8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 80099b0:	21af      	movs	r1, #175	; 0xaf
 80099b2:	e7f4      	b.n	800999e <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
        return texts->getText(typedTextId);
 80099b4:	4b0c      	ldr	r3, [pc, #48]	; (80099e8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 80099b6:	6818      	ldr	r0, [r3, #0]
 80099b8:	f7fd ff9a 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80099bc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80099be:	4601      	mov	r1, r0
 80099c0:	46ac      	mov	ip, r5
 80099c2:	4620      	mov	r0, r4
 80099c4:	2300      	movs	r3, #0
    }
 80099c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 80099ca:	4760      	bx	ip
    }
 80099cc:	2000      	movs	r0, #0
 80099ce:	bd70      	pop	{r4, r5, r6, pc}
 80099d0:	20027a00 	.word	0x20027a00
 80099d4:	080273f8 	.word	0x080273f8
 80099d8:	0802743a 	.word	0x0802743a
 80099dc:	08027468 	.word	0x08027468
 80099e0:	20027a04 	.word	0x20027a04
 80099e4:	080274af 	.word	0x080274af
 80099e8:	20027a0c 	.word	0x20027a0c

080099ec <_ZN13WheelSelectorC1Ev>:
#include <touchgfx/events/ClickEvent.hpp>
#include <touchgfx/events/GestureEvent.hpp>
#include <touchgfx/events/DragEvent.hpp>
#include <stdlib.h>

WheelSelector::WheelSelector() :
 80099ec:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80099f0:	4604      	mov	r4, r0
 80099f2:	f7f8 fd79 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
    currentAnimationState(NO_ANIMATION),
    textsIndex(0),
    animationEndedCallback(this, &WheelSelector::animationEndedHandler),
    elementSelectedAction(0)
 80099f6:	4b4f      	ldr	r3, [pc, #316]	; (8009b34 <_ZN13WheelSelectorC1Ev+0x148>)
 80099f8:	6023      	str	r3, [r4, #0]
 80099fa:	2500      	movs	r5, #0
 80099fc:	2303      	movs	r3, #3
 80099fe:	f104 0630 	add.w	r6, r4, #48	; 0x30
        : Widget(), bitmap(bitmap), alpha(255)
 8009a02:	2226      	movs	r2, #38	; 0x26
 8009a04:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8009a08:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8009a0c:	4629      	mov	r1, r5
 8009a0e:	4630      	mov	r0, r6
 8009a10:	62a5      	str	r5, [r4, #40]	; 0x28
 8009a12:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009a16:	f01c f881 	bl	8025b1c <memset>
 8009a1a:	4630      	mov	r0, r6
 8009a1c:	f7f8 fd64 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8009a20:	4b45      	ldr	r3, [pc, #276]	; (8009b38 <_ZN13WheelSelectorC1Ev+0x14c>)
 8009a22:	6323      	str	r3, [r4, #48]	; 0x30
 8009a24:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009a28:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
        Image::setBitmap(bitmap);
 8009a2c:	4630      	mov	r0, r6
        : Widget(), bitmap(bitmap), alpha(255)
 8009a2e:	f884 7058 	strb.w	r7, [r4, #88]	; 0x58
        Image::setBitmap(bitmap);
 8009a32:	a901      	add	r1, sp, #4
 8009a34:	f009 fff6 	bl	8013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009a38:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8009a3c:	f7f8 fd54 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
          fadeAnimationEndedCallback(0)
 8009a40:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8009b4c <_ZN13WheelSelectorC1Ev+0x160>
          moveAnimationEndedCallback(0)
 8009a44:	4f3d      	ldr	r7, [pc, #244]	; (8009b3c <_ZN13WheelSelectorC1Ev+0x150>)
 8009a46:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
 8009a4a:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 8009a4e:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8009a52:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8009a56:	65e7      	str	r7, [r4, #92]	; 0x5c
 8009a58:	f884 5088 	strb.w	r5, [r4, #136]	; 0x88
 8009a5c:	f8a4 508a 	strh.w	r5, [r4, #138]	; 0x8a
 8009a60:	f104 06a4 	add.w	r6, r4, #164	; 0xa4
 8009a64:	f604 3a24 	addw	sl, r4, #2852	; 0xb24
 8009a68:	46c8      	mov	r8, r9
        : TextArea(), wildcard(0)
 8009a6a:	4630      	mov	r0, r6
 8009a6c:	f7f9 f842 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8009a70:	3654      	adds	r6, #84	; 0x54
 8009a72:	f846 5c18 	str.w	r5, [r6, #-24]
 8009a76:	f846 9c54 	str.w	r9, [r6, #-84]
 8009a7a:	f806 5c14 	strb.w	r5, [r6, #-20]
 8009a7e:	f826 5c12 	strh.w	r5, [r6, #-18]
 8009a82:	f826 5c10 	strh.w	r5, [r6, #-16]
 8009a86:	f846 5c04 	str.w	r5, [r6, #-4]
 8009a8a:	4556      	cmp	r6, sl
 8009a8c:	d1ed      	bne.n	8009a6a <_ZN13WheelSelectorC1Ev+0x7e>
 8009a8e:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 8009a92:	f7f8 fd29 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8009a96:	f8c4 7ca4 	str.w	r7, [r4, #3236]	; 0xca4
 8009a9a:	f04f 0300 	mov.w	r3, #0
 8009a9e:	f504 57bb 	add.w	r7, r4, #5984	; 0x1760
 8009aa2:	f8c4 5ccc 	str.w	r5, [r4, #3276]	; 0xccc
 8009aa6:	f8a4 5cd2 	strh.w	r5, [r4, #3282]	; 0xcd2
 8009aaa:	f8c4 5cd4 	str.w	r5, [r4, #3284]	; 0xcd4
 8009aae:	f8c4 5cd8 	str.w	r5, [r4, #3288]	; 0xcd8
 8009ab2:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
 8009ab6:	f8c4 5ce0 	str.w	r5, [r4, #3296]	; 0xce0
 8009aba:	f8c4 5ce4 	str.w	r5, [r4, #3300]	; 0xce4
 8009abe:	f8c4 5ce8 	str.w	r5, [r4, #3304]	; 0xce8
 8009ac2:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
 8009ac6:	f604 45ec 	addw	r5, r4, #3308	; 0xcec
 8009aca:	370c      	adds	r7, #12
 8009acc:	2600      	movs	r6, #0
 8009ace:	4628      	mov	r0, r5
 8009ad0:	f7f9 f810 	bl	8002af4 <_ZN8touchgfx8TextAreaC1Ev>
 8009ad4:	3554      	adds	r5, #84	; 0x54
 8009ad6:	f845 6c18 	str.w	r6, [r5, #-24]
 8009ada:	f845 8c54 	str.w	r8, [r5, #-84]
 8009ade:	f805 6c14 	strb.w	r6, [r5, #-20]
 8009ae2:	f825 6c12 	strh.w	r6, [r5, #-18]
 8009ae6:	f825 6c10 	strh.w	r6, [r5, #-16]
 8009aea:	f845 6c04 	str.w	r6, [r5, #-4]
 8009aee:	42bd      	cmp	r5, r7
 8009af0:	d1ed      	bne.n	8009ace <_ZN13WheelSelectorC1Ev+0xe2>
 8009af2:	f641 07ec 	movw	r7, #6380	; 0x18ec
 8009af6:	19e5      	adds	r5, r4, r7
 8009af8:	4628      	mov	r0, r5
 8009afa:	f7f8 fcf5 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8009afe:	4b10      	ldr	r3, [pc, #64]	; (8009b40 <_ZN13WheelSelectorC1Ev+0x154>)
 8009b00:	51e3      	str	r3, [r4, r7]
 8009b02:	f641 1324 	movw	r3, #6436	; 0x1924
 8009b06:	62ae      	str	r6, [r5, #40]	; 0x28
 8009b08:	50e6      	str	r6, [r4, r3]
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8009b0a:	f641 1334 	movw	r3, #6452	; 0x1934
 8009b0e:	18e2      	adds	r2, r4, r3
 8009b10:	490c      	ldr	r1, [pc, #48]	; (8009b44 <_ZN13WheelSelectorC1Ev+0x158>)
 8009b12:	50e1      	str	r1, [r4, r3]
 8009b14:	f641 133c 	movw	r3, #6460	; 0x193c
 8009b18:	6054      	str	r4, [r2, #4]
 8009b1a:	4a0b      	ldr	r2, [pc, #44]	; (8009b48 <_ZN13WheelSelectorC1Ev+0x15c>)
 8009b1c:	50e2      	str	r2, [r4, r3]
 8009b1e:	f504 53ca 	add.w	r3, r4, #6464	; 0x1940
{
}
 8009b22:	4620      	mov	r0, r4
 8009b24:	601e      	str	r6, [r3, #0]
    elementSelectedAction(0)
 8009b26:	f641 1344 	movw	r3, #6468	; 0x1944
 8009b2a:	50e6      	str	r6, [r4, r3]
}
 8009b2c:	b002      	add	sp, #8
 8009b2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b32:	bf00      	nop
 8009b34:	08028cc0 	.word	0x08028cc0
 8009b38:	0802a264 	.word	0x0802a264
 8009b3c:	08028b94 	.word	0x08028b94
 8009b40:	080294cc 	.word	0x080294cc
 8009b44:	08028ca8 	.word	0x08028ca8
 8009b48:	08009dc3 	.word	0x08009dc3
 8009b4c:	08028c28 	.word	0x08028c28

08009b50 <_ZN13WheelSelector5setupEtiiiiii>:

void WheelSelector::setup(BitmapId overlay_, int width, int height, int textHeight_, int textYOffsetInOffset_, int overlayX, int overlayY)
{
 8009b50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b54:	461f      	mov	r7, r3
        touchable = touch;
 8009b56:	2301      	movs	r3, #1
 8009b58:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
    setTouchable(true);

    textYOffsetInOffset = textYOffsetInOffset_;
 8009b5c:	f641 131c 	movw	r3, #6428	; 0x191c
{
 8009b60:	4616      	mov	r6, r2

    centerOverlay.setBitmap(Bitmap(overlay_));
 8009b62:	f100 0530 	add.w	r5, r0, #48	; 0x30
    textYOffsetInOffset = textYOffsetInOffset_;
 8009b66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009b68:	50c2      	str	r2, [r0, r3]
{
 8009b6a:	4604      	mov	r4, r0
    textsWidth = width;
 8009b6c:	f641 1828 	movw	r8, #6440	; 0x1928
 8009b70:	f8ad 1004 	strh.w	r1, [sp, #4]
    centerOverlay.setBitmap(Bitmap(overlay_));
 8009b74:	4628      	mov	r0, r5
 8009b76:	a901      	add	r1, sp, #4
    textsHeight = textHeight_;
 8009b78:	f641 1a2c 	movw	sl, #6444	; 0x192c
    centerOverlay.setBitmap(Bitmap(overlay_));
 8009b7c:	f009 ff52 	bl	8013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textsHeight = textHeight_;
 8009b80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    textsWidth = width;
 8009b82:	f844 6008 	str.w	r6, [r4, r8]
    centerOverlay.setXY(overlayX, overlayY);
 8009b86:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
    textsHeight = textHeight_;
 8009b8a:	f844 300a 	str.w	r3, [r4, sl]
    centerOverlay.setXY(overlayX, overlayY);
 8009b8e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8009b92:	4628      	mov	r0, r5
 8009b94:	f7f8 fcba 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>

    textContainer.setPosition(0, 0, textsWidth, 0);
 8009b98:	f104 095c 	add.w	r9, r4, #92	; 0x5c
 8009b9c:	f934 b008 	ldrsh.w	fp, [r4, r8]
        setXY(x, y);
 8009ba0:	2200      	movs	r2, #0
 8009ba2:	4611      	mov	r1, r2
 8009ba4:	4648      	mov	r0, r9
 8009ba6:	f7f8 fcb1 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009baa:	2200      	movs	r2, #0
 8009bac:	4659      	mov	r1, fp
 8009bae:	4648      	mov	r0, r9
 8009bb0:	f7f8 fb19 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    textContainer.setMoveAnimationEndedAction(animationEndedCallback);
 8009bb4:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 8009bb8:	3314      	adds	r3, #20
        moveAnimationEndedCallback = &callback;
 8009bba:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
    add(textContainer);
 8009bbe:	6823      	ldr	r3, [r4, #0]
 8009bc0:	4649      	mov	r1, r9
 8009bc2:	4620      	mov	r0, r4
 8009bc4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009bc6:	4798      	blx	r3

    add(centerOverlay);
 8009bc8:	6823      	ldr	r3, [r4, #0]
 8009bca:	4629      	mov	r1, r5
 8009bcc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009bce:	4620      	mov	r0, r4

    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 8009bd0:	f504 55c7 	add.w	r5, r4, #6368	; 0x18e0
    add(centerOverlay);
 8009bd4:	4798      	blx	r3
    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 8009bd6:	350c      	adds	r5, #12
 8009bd8:	f9b4 9038 	ldrsh.w	r9, [r4, #56]	; 0x38
 8009bdc:	f934 a00a 	ldrsh.w	sl, [r4, sl]
        setXY(x, y);
 8009be0:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8009be4:	4628      	mov	r0, r5
 8009be6:	2100      	movs	r1, #0
 8009be8:	f7f8 fc90 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009bec:	4652      	mov	r2, sl
 8009bee:	4649      	mov	r1, r9
 8009bf0:	4628      	mov	r0, r5
 8009bf2:	f7f8 faf8 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    add(centerTextViewPort);
 8009bf6:	6823      	ldr	r3, [r4, #0]
 8009bf8:	4629      	mov	r1, r5
 8009bfa:	4620      	mov	r0, r4
 8009bfc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009bfe:	4798      	blx	r3

    centerTextContainerYOffset = centerTextViewPort.getY();
 8009c00:	f641 03f2 	movw	r3, #6386	; 0x18f2
 8009c04:	f641 1218 	movw	r2, #6424	; 0x1918
 8009c08:	5ee3      	ldrsh	r3, [r4, r3]
 8009c0a:	50a3      	str	r3, [r4, r2]

    centerTextContainer.setXY(textContainer.getX(), textContainer.getY() - centerTextContainerYOffset);
 8009c0c:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 8009c10:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 8009c14:	f604 49a4 	addw	r9, r4, #3236	; 0xca4
 8009c18:	1ad2      	subs	r2, r2, r3
 8009c1a:	b212      	sxth	r2, r2
 8009c1c:	4648      	mov	r0, r9
 8009c1e:	f7f8 fc75 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    centerTextContainer.setWidth(textsWidth);
 8009c22:	f854 3008 	ldr.w	r3, [r4, r8]
 8009c26:	f8a4 3cac 	strh.w	r3, [r4, #3244]	; 0xcac
        rect.height = height;
 8009c2a:	f04f 0800 	mov.w	r8, #0
    centerTextContainer.setHeight(0);
    centerTextViewPort.add(centerTextContainer);
 8009c2e:	4649      	mov	r1, r9
 8009c30:	4628      	mov	r0, r5
 8009c32:	f8a4 8cae 	strh.w	r8, [r4, #3246]	; 0xcae
 8009c36:	f007 fe2b 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    hiddenElements = 0;
 8009c3a:	f641 1330 	movw	r3, #6448	; 0x1930

    setWidth(width);
 8009c3e:	b231      	sxth	r1, r6
    hiddenElements = 0;
 8009c40:	f844 8003 	str.w	r8, [r4, r3]
    setWidth(width);
 8009c44:	6823      	ldr	r3, [r4, #0]
 8009c46:	4620      	mov	r0, r4
 8009c48:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009c4a:	4798      	blx	r3
    setHeight(height);
 8009c4c:	6823      	ldr	r3, [r4, #0]
 8009c4e:	b239      	sxth	r1, r7
 8009c50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009c52:	4620      	mov	r0, r4
 8009c54:	4798      	blx	r3
}
 8009c56:	b003      	add	sp, #12
 8009c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009c5c <_ZN13WheelSelector7addTextEttPKt>:

void WheelSelector::addText(TypedTextId textId, TypedTextId selectedTextId, const Unicode::UnicodeChar* newText)
{
 8009c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 8009c60:	f641 1524 	movw	r5, #6436	; 0x1924
{
 8009c64:	4604      	mov	r4, r0
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 8009c66:	5940      	ldr	r0, [r0, r5]
{
 8009c68:	b085      	sub	sp, #20
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 8009c6a:	270c      	movs	r7, #12
 8009c6c:	fb07 4000 	mla	r0, r7, r0, r4
{
 8009c70:	4688      	mov	r8, r1
 8009c72:	9201      	str	r2, [sp, #4]
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 8009c74:	2106      	movs	r1, #6
 8009c76:	4a49      	ldr	r2, [pc, #292]	; (8009d9c <_ZN13WheelSelector7addTextEttPKt+0x140>)
 8009c78:	f600 3024 	addw	r0, r0, #2852	; 0xb24
 8009c7c:	f00f fc36 	bl	80194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    texts[textsIndex].setTypedText(TypedText(textId));
 8009c80:	5960      	ldr	r0, [r4, r5]
        : typedTextId(id)
 8009c82:	4b47      	ldr	r3, [pc, #284]	; (8009da0 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 8009c84:	9302      	str	r3, [sp, #8]
 8009c86:	2654      	movs	r6, #84	; 0x54
 8009c88:	fb06 4000 	mla	r0, r6, r0, r4
 8009c8c:	a902      	add	r1, sp, #8
 8009c8e:	30a4      	adds	r0, #164	; 0xa4
 8009c90:	f8ad 800c 	strh.w	r8, [sp, #12]
 8009c94:	f009 fb93 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 8009c98:	f854 c005 	ldr.w	ip, [r4, r5]
 8009c9c:	fb06 f10c 	mul.w	r1, r6, ip
 8009ca0:	f101 00a4 	add.w	r0, r1, #164	; 0xa4
 8009ca4:	fb07 420c 	mla	r2, r7, ip, r4
    texts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8009ca8:	f641 182c 	movw	r8, #6444	; 0x192c
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 8009cac:	4420      	add	r0, r4
        this->color = color;
 8009cae:	4421      	add	r1, r4
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8009cb0:	f641 1a1c 	movw	sl, #6428	; 0x191c
 8009cb4:	f04f 3bff 	mov.w	fp, #4294967295
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 8009cb8:	f602 3224 	addw	r2, r2, #2852	; 0xb24
        wildcard = value;
 8009cbc:	63c2      	str	r2, [r0, #60]	; 0x3c
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8009cbe:	f854 2008 	ldr.w	r2, [r4, r8]
 8009cc2:	f8c1 b0d4 	str.w	fp, [r1, #212]	; 0xd4
 8009cc6:	f854 100a 	ldr.w	r1, [r4, sl]
 8009cca:	fb12 120c 	smlabb	r2, r2, ip, r1
 8009cce:	b212      	sxth	r2, r2
 8009cd0:	2100      	movs	r1, #0
 8009cd2:	f7f8 fc1b 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    texts[textsIndex].setWidth(textsWidth);
 8009cd6:	5962      	ldr	r2, [r4, r5]
 8009cd8:	4372      	muls	r2, r6
 8009cda:	f102 00a4 	add.w	r0, r2, #164	; 0xa4
 8009cde:	4422      	add	r2, r4
 8009ce0:	f641 1928 	movw	r9, #6440	; 0x1928
 8009ce4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 8009ce8:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8009cec:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8009cee:	4420      	add	r0, r4
 8009cf0:	4790      	blx	r2
    textContainer.add(texts[textsIndex]);
 8009cf2:	5961      	ldr	r1, [r4, r5]
 8009cf4:	fb06 4101 	mla	r1, r6, r1, r4
 8009cf8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8009cfc:	31a4      	adds	r1, #164	; 0xa4
 8009cfe:	f007 fdc7 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textContainer.setHeight((textsIndex + 1) * textsHeight);
 8009d02:	5960      	ldr	r0, [r4, r5]
 8009d04:	f854 1008 	ldr.w	r1, [r4, r8]
 8009d08:	4b25      	ldr	r3, [pc, #148]	; (8009da0 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 8009d0a:	9302      	str	r3, [sp, #8]
 8009d0c:	1c42      	adds	r2, r0, #1
 8009d0e:	fb12 f201 	smulbb	r2, r2, r1

    centerTexts[textsIndex].setTypedText(TypedText(selectedTextId));
 8009d12:	fb06 4000 	mla	r0, r6, r0, r4
 8009d16:	9b01      	ldr	r3, [sp, #4]
 8009d18:	f8a4 2066 	strh.w	r2, [r4, #102]	; 0x66
 8009d1c:	a902      	add	r1, sp, #8
 8009d1e:	f600 40ec 	addw	r0, r0, #3308	; 0xcec
 8009d22:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009d26:	f009 fb4a 	bl	80133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 8009d2a:	5962      	ldr	r2, [r4, r5]
    centerTexts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8009d2c:	f854 100a 	ldr.w	r1, [r4, sl]
 8009d30:	fb06 f302 	mul.w	r3, r6, r2
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 8009d34:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 8009d38:	4420      	add	r0, r4
 8009d3a:	fb07 4702 	mla	r7, r7, r2, r4
 8009d3e:	4423      	add	r3, r4
 8009d40:	f607 3724 	addw	r7, r7, #2852	; 0xb24
 8009d44:	63c7      	str	r7, [r0, #60]	; 0x3c
 8009d46:	f8c3 bd1c 	str.w	fp, [r3, #3356]	; 0xd1c
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8009d4a:	f854 3008 	ldr.w	r3, [r4, r8]
 8009d4e:	fb13 1202 	smlabb	r2, r3, r2, r1
 8009d52:	b212      	sxth	r2, r2
 8009d54:	2100      	movs	r1, #0
 8009d56:	f7f8 fbd9 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
    centerTexts[textsIndex].setWidth(textsWidth);
 8009d5a:	5963      	ldr	r3, [r4, r5]
 8009d5c:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8009d60:	4373      	muls	r3, r6
 8009d62:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 8009d66:	4423      	add	r3, r4
 8009d68:	4420      	add	r0, r4
 8009d6a:	f8d3 3cec 	ldr.w	r3, [r3, #3308]	; 0xcec
 8009d6e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009d70:	4798      	blx	r3
    centerTextContainer.add(centerTexts[textsIndex]);
 8009d72:	5961      	ldr	r1, [r4, r5]
 8009d74:	fb06 4101 	mla	r1, r6, r1, r4
 8009d78:	f601 41ec 	addw	r1, r1, #3308	; 0xcec
 8009d7c:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 8009d80:	f007 fd86 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    centerTextContainer.setHeight((textsIndex + 1) * textsHeight);
 8009d84:	5963      	ldr	r3, [r4, r5]
 8009d86:	f854 2008 	ldr.w	r2, [r4, r8]
 8009d8a:	3301      	adds	r3, #1
 8009d8c:	fb12 f203 	smulbb	r2, r2, r3
 8009d90:	f8a4 2cae 	strh.w	r2, [r4, #3246]	; 0xcae

    textsIndex++;
 8009d94:	5163      	str	r3, [r4, r5]
}
 8009d96:	b005      	add	sp, #20
 8009d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d9c:	08027501 	.word	0x08027501
 8009da0:	0802750c 	.word	0x0802750c

08009da4 <_ZN13WheelSelector15getSelectedItemEv>:
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
}

int WheelSelector::getSelectedItem()
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8009da4:	f641 132c 	movw	r3, #6444	; 0x192c
 8009da8:	58c2      	ldr	r2, [r0, r3]
 8009daa:	f9b0 3036 	ldrsh.w	r3, [r0, #54]	; 0x36
    int foo = centerTextCenter - textContainer.getY();
 8009dae:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8009db2:	eb02 71d2 	add.w	r1, r2, r2, lsr #31
 8009db6:	eb03 0361 	add.w	r3, r3, r1, asr #1
    int foo = centerTextCenter - textContainer.getY();
 8009dba:	1a18      	subs	r0, r3, r0
    return foo / textsHeight;
}
 8009dbc:	fb90 f0f2 	sdiv	r0, r0, r2
 8009dc0:	4770      	bx	lr

08009dc2 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE>:

    hiddenElements = numberOfElementsToHide;
}

void WheelSelector::animationEndedHandler(const MoveAnimator<Container>& source)
{
 8009dc2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    currentAnimationState = NO_ANIMATION;

    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 8009dc4:	f641 1544 	movw	r5, #6468	; 0x1944
    currentAnimationState = NO_ANIMATION;
 8009dc8:	2303      	movs	r3, #3
{
 8009dca:	4604      	mov	r4, r0
    currentAnimationState = NO_ANIMATION;
 8009dcc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 8009dd0:	5940      	ldr	r0, [r0, r5]
 8009dd2:	b170      	cbz	r0, 8009df2 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
 8009dd4:	6803      	ldr	r3, [r0, #0]
 8009dd6:	68db      	ldr	r3, [r3, #12]
 8009dd8:	4798      	blx	r3
 8009dda:	b150      	cbz	r0, 8009df2 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
    {
        elementSelectedAction->execute(*this, getSelectedItem());
 8009ddc:	5965      	ldr	r5, [r4, r5]
 8009dde:	682b      	ldr	r3, [r5, #0]
 8009de0:	4620      	mov	r0, r4
 8009de2:	689e      	ldr	r6, [r3, #8]
 8009de4:	f7ff ffde 	bl	8009da4 <_ZN13WheelSelector15getSelectedItemEv>
 8009de8:	aa01      	add	r2, sp, #4
 8009dea:	9001      	str	r0, [sp, #4]
 8009dec:	4621      	mov	r1, r4
 8009dee:	4628      	mov	r0, r5
 8009df0:	47b0      	blx	r6
    }
}
 8009df2:	b002      	add	sp, #8
 8009df4:	bd70      	pop	{r4, r5, r6, pc}

08009df6 <_ZN13WheelSelector21calculateSnapPositionEi>:
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
}

int WheelSelector::calculateSnapPosition(int newYPosition)
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8009df6:	f641 132c 	movw	r3, #6444	; 0x192c
{
 8009dfa:	b510      	push	{r4, lr}
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8009dfc:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 8009e00:	58c0      	ldr	r0, [r0, r3]
 8009e02:	eb00 73d0 	add.w	r3, r0, r0, lsr #31
 8009e06:	eb04 0363 	add.w	r3, r4, r3, asr #1
    int index = (centerTextCenter - newYPosition) / textsHeight;
 8009e0a:	1a59      	subs	r1, r3, r1
 8009e0c:	fb91 f1f0 	sdiv	r1, r1, r0
    return centerTextCenter - (textsHeight * index + textsHeight / 2);
}
 8009e10:	fb00 4011 	mls	r0, r0, r1, r4
 8009e14:	bd10      	pop	{r4, pc}

08009e16 <_ZN13WheelSelector29getTextContainerVisibleHeightEv>:
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
}

int WheelSelector::getTextContainerVisibleHeight()
{
    return (textsHeight * (textsIndex - hiddenElements - 1));
 8009e16:	f641 1324 	movw	r3, #6436	; 0x1924
 8009e1a:	f641 1230 	movw	r2, #6448	; 0x1930
 8009e1e:	58c3      	ldr	r3, [r0, r3]
 8009e20:	5882      	ldr	r2, [r0, r2]
 8009e22:	1a9b      	subs	r3, r3, r2
 8009e24:	f641 122c 	movw	r2, #6444	; 0x192c
 8009e28:	3b01      	subs	r3, #1
 8009e2a:	5880      	ldr	r0, [r0, r2]
}
 8009e2c:	4358      	muls	r0, r3
 8009e2e:	4770      	bx	lr

08009e30 <_ZN13WheelSelector19adjustForBoundariesERi>:
    if (newYPosition > centerOverlay.getY() + cutoff)
 8009e30:	680b      	ldr	r3, [r1, #0]
{
 8009e32:	b510      	push	{r4, lr}
    if (newYPosition > centerOverlay.getY() + cutoff)
 8009e34:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 8009e38:	42a3      	cmp	r3, r4
        newYPosition = centerOverlay.getY() + cutoff;
 8009e3a:	bfc8      	it	gt
 8009e3c:	600c      	strgt	r4, [r1, #0]
    if (newYPosition < centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff))
 8009e3e:	f7ff ffea 	bl	8009e16 <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 8009e42:	680b      	ldr	r3, [r1, #0]
 8009e44:	1a20      	subs	r0, r4, r0
 8009e46:	4283      	cmp	r3, r0
        newYPosition = centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff);
 8009e48:	bfb8      	it	lt
 8009e4a:	6008      	strlt	r0, [r1, #0]
}
 8009e4c:	bd10      	pop	{r4, pc}

08009e4e <_ZN13WheelSelector8moveTextEi>:
{
 8009e4e:	b513      	push	{r0, r1, r4, lr}
 8009e50:	4604      	mov	r4, r0
 8009e52:	9101      	str	r1, [sp, #4]
    adjustForBoundaries(newYPosition);
 8009e54:	a901      	add	r1, sp, #4
 8009e56:	f7ff ffeb 	bl	8009e30 <_ZN13WheelSelector19adjustForBoundariesERi>
    textContainer.moveTo(textContainer.getX(), newYPosition);
 8009e5a:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8009e5e:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 8009e62:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8009e66:	f7f8 f8f2 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
    centerTextContainer.moveTo(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset);
 8009e6a:	f641 1318 	movw	r3, #6424	; 0x1918
 8009e6e:	9a01      	ldr	r2, [sp, #4]
 8009e70:	58e3      	ldr	r3, [r4, r3]
 8009e72:	f9b4 1ca8 	ldrsh.w	r1, [r4, #3240]	; 0xca8
 8009e76:	1ad2      	subs	r2, r2, r3
 8009e78:	b212      	sxth	r2, r2
 8009e7a:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 8009e7e:	f7f8 f8e6 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>
}
 8009e82:	b002      	add	sp, #8
 8009e84:	bd10      	pop	{r4, pc}

08009e86 <_ZN13WheelSelector15handleDragEventERKN8touchgfx9DragEventE>:
    currentAnimationState = ANIMATING_DRAG;
 8009e86:	2202      	movs	r2, #2
 8009e88:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragToY - dragFromY;
 8009e8c:	898a      	ldrh	r2, [r1, #12]
 8009e8e:	8909      	ldrh	r1, [r1, #8]
 8009e90:	1a52      	subs	r2, r2, r1
    moveText(textContainer.getY() + evt.getDeltaY());
 8009e92:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
 8009e96:	fa01 f182 	sxtah	r1, r1, r2
 8009e9a:	f7ff bfd8 	b.w	8009e4e <_ZN13WheelSelector8moveTextEi>

08009e9e <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>:
     * Cancel move animation and leave the Drawable in its current position. If the
     * animation is not running, nothing is done.
     */
    void cancelMoveAnimation()
    {
        if (moveAnimationRunning)
 8009e9e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void cancelMoveAnimation()
 8009ea2:	b510      	push	{r4, lr}
 8009ea4:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8009ea6:	b13b      	cbz	r3, 8009eb8 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv+0x1a>
        {
            Application::getInstance()->unregisterTimerWidget(this);
 8009ea8:	f00b fe78 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8009eac:	4621      	mov	r1, r4
 8009eae:	f00b fead 	bl	8015c0c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
            moveAnimationRunning = false;
 8009eb2:	2300      	movs	r3, #0
 8009eb4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        }
    }
 8009eb8:	bd10      	pop	{r4, pc}

08009eba <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>:

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
    {
        if (fadeAnimationRunning)
 8009eba:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void nextFadeAnimationStep()
 8009ebe:	b570      	push	{r4, r5, r6, lr}
 8009ec0:	4604      	mov	r4, r0
        if (fadeAnimationRunning)
 8009ec2:	2b00      	cmp	r3, #0
 8009ec4:	d03e      	beq.n	8009f44 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
        {
            fadeAnimationCounter++;
 8009ec6:	f8b0 0042 	ldrh.w	r0, [r0, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8009eca:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
            fadeAnimationCounter++;
 8009ece:	3001      	adds	r0, #1
 8009ed0:	b280      	uxth	r0, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8009ed2:	4298      	cmp	r0, r3
            fadeAnimationCounter++;
 8009ed4:	f8a4 0042 	strh.w	r0, [r4, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8009ed8:	d334      	bcc.n	8009f44 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;

                int16_t deltaAlpha = (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8009eda:	f8b4 1048 	ldrh.w	r1, [r4, #72]	; 0x48
 8009ede:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 8009ee2:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8009ee4:	1a52      	subs	r2, r2, r1
 8009ee6:	1ac0      	subs	r0, r0, r3
 8009ee8:	b212      	sxth	r2, r2
 8009eea:	2100      	movs	r1, #0
 8009eec:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8009ef0:	b280      	uxth	r0, r0
 8009ef2:	47a8      	blx	r5

                T::setAlpha(fadeAnimationStartAlpha + deltaAlpha);
 8009ef4:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8009ef8:	4418      	add	r0, r3
        alpha = newAlpha;
 8009efa:	f884 0036 	strb.w	r0, [r4, #54]	; 0x36
                T::invalidate();
 8009efe:	4620      	mov	r0, r4
 8009f00:	f00c fdf4 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8009f04:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8009f08:	f8b4 1046 	ldrh.w	r1, [r4, #70]	; 0x46
 8009f0c:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8009f10:	440b      	add	r3, r1
 8009f12:	429a      	cmp	r2, r3
 8009f14:	d316      	bcc.n	8009f44 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 8009f16:	2300      	movs	r3, #0
 8009f18:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
                    fadeAnimationDuration = 0;
 8009f1c:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
                    Application::getInstance()->unregisterTimerWidget(this);
 8009f20:	f00b fe3c 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8009f24:	4621      	mov	r1, r4
 8009f26:	f00b fe71 	bl	8015c0c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8009f2a:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8009f2c:	b150      	cbz	r0, 8009f44 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
 8009f2e:	6803      	ldr	r3, [r0, #0]
 8009f30:	68db      	ldr	r3, [r3, #12]
 8009f32:	4798      	blx	r3
 8009f34:	b130      	cbz	r0, 8009f44 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 8009f36:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8009f38:	6803      	ldr	r3, [r0, #0]
 8009f3a:	4621      	mov	r1, r4
 8009f3c:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8009f3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        fadeAnimationEndedCallback->execute(*this);
 8009f42:	4718      	bx	r3
    }
 8009f44:	bd70      	pop	{r4, r5, r6, pc}

08009f46 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8009f46:	b508      	push	{r3, lr}
        nextFadeAnimationStep();
 8009f48:	f7ff ffb7 	bl	8009eba <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 8009f4c:	bd08      	pop	{r3, pc}

08009f4e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8009f4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f50:	461d      	mov	r5, r3
        if (!fadeAnimationRunning)
 8009f52:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8009f56:	4604      	mov	r4, r0
 8009f58:	460f      	mov	r7, r1
 8009f5a:	4616      	mov	r6, r2
        if (!fadeAnimationRunning)
 8009f5c:	b923      	cbnz	r3, 8009f68 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x1a>
            Application::getInstance()->registerTimerWidget(this);
 8009f5e:	f00b fe1d 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8009f62:	4621      	mov	r1, r4
 8009f64:	f00b fe20 	bl	8015ba8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 8009f68:	2300      	movs	r3, #0
 8009f6a:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
        fadeAnimationStartAlpha = T::getAlpha();
 8009f6e:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8009f72:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
        fadeAnimationDuration = duration;
 8009f76:	f8a4 6046 	strh.w	r6, [r4, #70]	; 0x46
        fadeAnimationRunning = true;
 8009f7a:	2301      	movs	r3, #1
 8009f7c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8009f80:	6c63      	ldr	r3, [r4, #68]	; 0x44
        fadeAnimationEndAlpha = endAlpha;
 8009f82:	f8a4 704a 	strh.w	r7, [r4, #74]	; 0x4a
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8009f86:	64e5      	str	r5, [r4, #76]	; 0x4c
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8009f88:	b913      	cbnz	r3, 8009f90 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x42>
            nextFadeAnimationStep(); // Set end alpha and shut down
 8009f8a:	4620      	mov	r0, r4
 8009f8c:	f7ff ff95 	bl	8009eba <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 8009f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08009f94 <_ZN13WheelSelector18hideBottomElementsEi>:
{
 8009f94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 8009f98:	f500 58c9 	add.w	r8, r0, #6432	; 0x1920
            texts[i].startFadeAnimation(255, 12);
 8009f9c:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800a02c <_ZN13WheelSelector18hideBottomElementsEi+0x98>
{
 8009fa0:	4606      	mov	r6, r0
 8009fa2:	460f      	mov	r7, r1
 8009fa4:	f100 04a4 	add.w	r4, r0, #164	; 0xa4
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 8009fa8:	f04f 0900 	mov.w	r9, #0
 8009fac:	f108 0804 	add.w	r8, r8, #4
 8009fb0:	f8d8 5000 	ldr.w	r5, [r8]
 8009fb4:	1bed      	subs	r5, r5, r7
 8009fb6:	454d      	cmp	r5, r9
 8009fb8:	dc1d      	bgt.n	8009ff6 <_ZN13WheelSelector18hideBottomElementsEi+0x62>
 8009fba:	2454      	movs	r4, #84	; 0x54
            texts[i].startFadeAnimation(0, 12);
 8009fbc:	f8df 906c 	ldr.w	r9, [pc, #108]	; 800a02c <_ZN13WheelSelector18hideBottomElementsEi+0x98>
 8009fc0:	fb04 6405 	mla	r4, r4, r5, r6
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 8009fc4:	f8d8 3000 	ldr.w	r3, [r8]
 8009fc8:	42ab      	cmp	r3, r5
 8009fca:	dd29      	ble.n	800a020 <_ZN13WheelSelector18hideBottomElementsEi+0x8c>
        if (texts[i].getAlpha() == 255)
 8009fcc:	f894 30da 	ldrb.w	r3, [r4, #218]	; 0xda
 8009fd0:	2bff      	cmp	r3, #255	; 0xff
 8009fd2:	f104 00a4 	add.w	r0, r4, #164	; 0xa4
 8009fd6:	d10b      	bne.n	8009ff0 <_ZN13WheelSelector18hideBottomElementsEi+0x5c>
            texts[i].startFadeAnimation(0, 12);
 8009fd8:	464b      	mov	r3, r9
 8009fda:	220c      	movs	r2, #12
 8009fdc:	2100      	movs	r1, #0
 8009fde:	f7ff ffb6 	bl	8009f4e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(0, 12);
 8009fe2:	464b      	mov	r3, r9
 8009fe4:	220c      	movs	r2, #12
 8009fe6:	2100      	movs	r1, #0
 8009fe8:	f604 40ec 	addw	r0, r4, #3308	; 0xcec
 8009fec:	f7ff ffaf 	bl	8009f4e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 8009ff0:	3501      	adds	r5, #1
 8009ff2:	3454      	adds	r4, #84	; 0x54
 8009ff4:	e7e6      	b.n	8009fc4 <_ZN13WheelSelector18hideBottomElementsEi+0x30>
        if (texts[i].getAlpha() != 255)
 8009ff6:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8009ffa:	2bff      	cmp	r3, #255	; 0xff
 8009ffc:	d00c      	beq.n	800a018 <_ZN13WheelSelector18hideBottomElementsEi+0x84>
            texts[i].startFadeAnimation(255, 12);
 8009ffe:	4653      	mov	r3, sl
 800a000:	220c      	movs	r2, #12
 800a002:	21ff      	movs	r1, #255	; 0xff
 800a004:	4620      	mov	r0, r4
 800a006:	f7ff ffa2 	bl	8009f4e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(255, 12);
 800a00a:	4653      	mov	r3, sl
 800a00c:	220c      	movs	r2, #12
 800a00e:	21ff      	movs	r1, #255	; 0xff
 800a010:	f604 4048 	addw	r0, r4, #3144	; 0xc48
 800a014:	f7ff ff9b 	bl	8009f4e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 800a018:	f109 0901 	add.w	r9, r9, #1
 800a01c:	3454      	adds	r4, #84	; 0x54
 800a01e:	e7c7      	b.n	8009fb0 <_ZN13WheelSelector18hideBottomElementsEi+0x1c>
    hiddenElements = numberOfElementsToHide;
 800a020:	f641 1330 	movw	r3, #6448	; 0x1930
 800a024:	50f7      	str	r7, [r6, r3]
}
 800a026:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a02a:	bf00      	nop
 800a02c:	080174b5 	.word	0x080174b5

0800a030 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 800a030:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void nextMoveAnimationStep()
 800a034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a038:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 800a03a:	2b00      	cmp	r3, #0
 800a03c:	d040      	beq.n	800a0c0 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 800a03e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 800a040:	8e05      	ldrh	r5, [r0, #48]	; 0x30
            moveAnimationCounter++;
 800a042:	3301      	adds	r3, #1
 800a044:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 800a046:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 800a048:	85c3      	strh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 800a04a:	d339      	bcc.n	800a0c0 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800a04c:	1b5b      	subs	r3, r3, r5
 800a04e:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800a050:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 800a052:	b29d      	uxth	r5, r3
 800a054:	8e83      	ldrh	r3, [r0, #52]	; 0x34
 800a056:	1ad2      	subs	r2, r2, r3
 800a058:	b212      	sxth	r2, r2
 800a05a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800a05c:	2100      	movs	r1, #0
 800a05e:	4628      	mov	r0, r5
 800a060:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800a062:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a064:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
 800a066:	6c27      	ldr	r7, [r4, #64]	; 0x40
 800a068:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800a06a:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800a06c:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 800a06e:	b212      	sxth	r2, r2
 800a070:	2100      	movs	r1, #0
 800a072:	4628      	mov	r0, r5
 800a074:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 800a076:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a078:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 800a07a:	4402      	add	r2, r0
 800a07c:	4431      	add	r1, r6
 800a07e:	b212      	sxth	r2, r2
 800a080:	b209      	sxth	r1, r1
 800a082:	4620      	mov	r0, r4
 800a084:	f7f7 ffe3 	bl	800204e <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 800a088:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800a08a:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 800a08c:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800a08e:	440b      	add	r3, r1
 800a090:	429a      	cmp	r2, r3
 800a092:	d315      	bcc.n	800a0c0 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 800a094:	2300      	movs	r3, #0
 800a096:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
                    moveAnimationCounter = 0;
 800a09a:	85e3      	strh	r3, [r4, #46]	; 0x2e
                    Application::getInstance()->unregisterTimerWidget(this);
 800a09c:	f00b fd7e 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 800a0a0:	4621      	mov	r1, r4
 800a0a2:	f00b fdb3 	bl	8015c0c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 800a0a6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a0a8:	b150      	cbz	r0, 800a0c0 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
 800a0aa:	6803      	ldr	r3, [r0, #0]
 800a0ac:	68db      	ldr	r3, [r3, #12]
 800a0ae:	4798      	blx	r3
 800a0b0:	b130      	cbz	r0, 800a0c0 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 800a0b2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a0b4:	6803      	ldr	r3, [r0, #0]
 800a0b6:	4621      	mov	r1, r4
 800a0b8:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 800a0ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 800a0be:	4718      	bx	r3
    }
 800a0c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a0c4 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv>:
    virtual void handleTickEvent()
 800a0c4:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 800a0c6:	f7ff ffb3 	bl	800a030 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    }
 800a0ca:	bd08      	pop	{r3, pc}

0800a0cc <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>:
{
 800a0cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a0d0:	461e      	mov	r6, r3
        if (!moveAnimationRunning)
 800a0d2:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 800a0d6:	f9b0 a060 	ldrsh.w	sl, [r0, #96]	; 0x60
{
 800a0da:	4604      	mov	r4, r0
 800a0dc:	460d      	mov	r5, r1
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 800a0de:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 800a0e2:	fa0f f981 	sxth.w	r9, r1
 800a0e6:	b297      	uxth	r7, r2
 800a0e8:	b923      	cbnz	r3, 800a0f4 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x28>
            Application::getInstance()->registerTimerWidget(this);
 800a0ea:	f00b fd57 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 800a0ee:	4641      	mov	r1, r8
 800a0f0:	f00b fd5a 	bl	8015ba8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 800a0f4:	2300      	movs	r3, #0
 800a0f6:	f8a4 308a 	strh.w	r3, [r4, #138]	; 0x8a
        moveAnimationStartX = T::getX();
 800a0fa:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 800a0fe:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        moveAnimationStartY = T::getY();
 800a102:	f8b4 3062 	ldrh.w	r3, [r4, #98]	; 0x62
 800a106:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        moveAnimationDuration = duration;
 800a10a:	f8a4 708e 	strh.w	r7, [r4, #142]	; 0x8e
        moveAnimationRunning = true;
 800a10e:	2301      	movs	r3, #1
 800a110:	f884 3088 	strb.w	r3, [r4, #136]	; 0x88
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800a114:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
        moveAnimationEndX = endX;
 800a118:	f8a4 a094 	strh.w	sl, [r4, #148]	; 0x94
        moveAnimationYEquation = yProgressionEquation;
 800a11c:	e9c4 6626 	strd	r6, r6, [r4, #152]	; 0x98
        moveAnimationEndY = endY;
 800a120:	f8a4 9096 	strh.w	r9, [r4, #150]	; 0x96
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800a124:	b913      	cbnz	r3, 800a12c <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x60>
            nextMoveAnimationStep(); // Set end position and shut down
 800a126:	4640      	mov	r0, r8
 800a128:	f7ff ff82 	bl	800a030 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
 800a12c:	f641 1318 	movw	r3, #6424	; 0x1918
 800a130:	f9b4 9ca8 	ldrsh.w	r9, [r4, #3240]	; 0xca8
 800a134:	58e1      	ldr	r1, [r4, r3]
        if (!moveAnimationRunning)
 800a136:	f894 3cd0 	ldrb.w	r3, [r4, #3280]	; 0xcd0
 800a13a:	1a6d      	subs	r5, r5, r1
 800a13c:	f604 48a4 	addw	r8, r4, #3236	; 0xca4
 800a140:	b22d      	sxth	r5, r5
 800a142:	b923      	cbnz	r3, 800a14e <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x82>
            Application::getInstance()->registerTimerWidget(this);
 800a144:	f00b fd2a 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 800a148:	4641      	mov	r1, r8
 800a14a:	f00b fd2d 	bl	8015ba8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 800a14e:	2300      	movs	r3, #0
 800a150:	f8a4 3cd2 	strh.w	r3, [r4, #3282]	; 0xcd2
        moveAnimationStartX = T::getX();
 800a154:	f8b4 3ca8 	ldrh.w	r3, [r4, #3240]	; 0xca8
 800a158:	f8a4 3cd8 	strh.w	r3, [r4, #3288]	; 0xcd8
        moveAnimationStartY = T::getY();
 800a15c:	f8b4 3caa 	ldrh.w	r3, [r4, #3242]	; 0xcaa
 800a160:	f8a4 3cda 	strh.w	r3, [r4, #3290]	; 0xcda
        moveAnimationDuration = duration;
 800a164:	f8a4 7cd6 	strh.w	r7, [r4, #3286]	; 0xcd6
        moveAnimationRunning = true;
 800a168:	2301      	movs	r3, #1
 800a16a:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800a16e:	f8d4 3cd4 	ldr.w	r3, [r4, #3284]	; 0xcd4
        moveAnimationEndX = endX;
 800a172:	f8a4 9cdc 	strh.w	r9, [r4, #3292]	; 0xcdc
        moveAnimationEndY = endY;
 800a176:	f8a4 5cde 	strh.w	r5, [r4, #3294]	; 0xcde
        moveAnimationXEquation = xProgressionEquation;
 800a17a:	f8c4 6ce0 	str.w	r6, [r4, #3296]	; 0xce0
        moveAnimationYEquation = yProgressionEquation;
 800a17e:	f8c4 6ce4 	str.w	r6, [r4, #3300]	; 0xce4
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800a182:	b913      	cbnz	r3, 800a18a <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0xbe>
            nextMoveAnimationStep(); // Set end position and shut down
 800a184:	4640      	mov	r0, r8
 800a186:	f7ff ff53 	bl	800a030 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
}
 800a18a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800a190 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>:
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800a190:	f641 132c 	movw	r3, #6444	; 0x192c
{
 800a194:	b570      	push	{r4, r5, r6, lr}
    int accumHeight = textsHeight * index + textsHeight / 2;
 800a196:	58c3      	ldr	r3, [r0, r3]
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800a198:	f9b0 5036 	ldrsh.w	r5, [r0, #54]	; 0x36
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 800a19c:	fb03 5111 	mls	r1, r3, r1, r5
{
 800a1a0:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 800a1a2:	f7ff fe28 	bl	8009df6 <_ZN13WheelSelector21calculateSnapPositionEi>
 800a1a6:	4b03      	ldr	r3, [pc, #12]	; (800a1b4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE+0x24>)
 800a1a8:	4601      	mov	r1, r0
 800a1aa:	4620      	mov	r0, r4
}
 800a1ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 800a1b0:	f7ff bf8c 	b.w	800a0cc <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 800a1b4:	0801738d 	.word	0x0801738d

0800a1b8 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE>:
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 800a1b8:	790b      	ldrb	r3, [r1, #4]
 800a1ba:	2b01      	cmp	r3, #1
{
 800a1bc:	b513      	push	{r0, r1, r4, lr}
 800a1be:	4604      	mov	r4, r0
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 800a1c0:	d121      	bne.n	800a206 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x4e>
        currentAnimationState = ANIMATING_GESTURE;
 800a1c2:	2300      	movs	r3, #0
        int newYPosition = textContainer.getY() + delta;
 800a1c4:	f9b0 2062 	ldrsh.w	r2, [r0, #98]	; 0x62
        currentAnimationState = ANIMATING_GESTURE;
 800a1c8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        int newYPosition = textContainer.getY() + delta;
 800a1cc:	88cb      	ldrh	r3, [r1, #6]
 800a1ce:	2105      	movs	r1, #5
 800a1d0:	fb13 2301 	smlabb	r3, r3, r1, r2
        adjustForBoundaries(newYPosition);
 800a1d4:	a901      	add	r1, sp, #4
        int newYPosition = textContainer.getY() + delta;
 800a1d6:	9301      	str	r3, [sp, #4]
        adjustForBoundaries(newYPosition);
 800a1d8:	f7ff fe2a 	bl	8009e30 <_ZN13WheelSelector19adjustForBoundariesERi>
        int distanceToMove = newYPosition - textContainer.getY();
 800a1dc:	9901      	ldr	r1, [sp, #4]
 800a1de:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 800a1e2:	1a8a      	subs	r2, r1, r2
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 800a1e4:	2a00      	cmp	r2, #0
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 800a1e6:	4620      	mov	r0, r4
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 800a1e8:	bfb8      	it	lt
 800a1ea:	4252      	neglt	r2, r2
        int duration = distanceToMoveABS / 10;
 800a1ec:	230a      	movs	r3, #10
 800a1ee:	fbb2 f2f3 	udiv	r2, r2, r3
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 800a1f2:	f7ff fe00 	bl	8009df6 <_ZN13WheelSelector21calculateSnapPositionEi>
 800a1f6:	2a03      	cmp	r2, #3
 800a1f8:	4601      	mov	r1, r0
 800a1fa:	4b04      	ldr	r3, [pc, #16]	; (800a20c <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x54>)
 800a1fc:	bfb8      	it	lt
 800a1fe:	2203      	movlt	r2, #3
 800a200:	4620      	mov	r0, r4
 800a202:	f7ff ff63 	bl	800a0cc <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
}
 800a206:	b002      	add	sp, #8
 800a208:	bd10      	pop	{r4, pc}
 800a20a:	bf00      	nop
 800a20c:	0801738d 	.word	0x0801738d

0800a210 <_ZN13WheelSelector4snapEv>:
{
 800a210:	b510      	push	{r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 800a212:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
{
 800a216:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 800a218:	f7ff fded 	bl	8009df6 <_ZN13WheelSelector21calculateSnapPositionEi>
 800a21c:	4b03      	ldr	r3, [pc, #12]	; (800a22c <_ZN13WheelSelector4snapEv+0x1c>)
 800a21e:	4601      	mov	r1, r0
 800a220:	2218      	movs	r2, #24
 800a222:	4620      	mov	r0, r4
}
 800a224:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 800a228:	f7ff bf50 	b.w	800a0cc <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 800a22c:	08017409 	.word	0x08017409

0800a230 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED)
 800a230:	790b      	ldrb	r3, [r1, #4]
{
 800a232:	b570      	push	{r4, r5, r6, lr}
 800a234:	4604      	mov	r4, r0
 800a236:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED)
 800a238:	b9c3      	cbnz	r3, 800a26c <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3c>
        if (currentAnimationState != NO_ANIMATION)
 800a23a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a23e:	2b03      	cmp	r3, #3
 800a240:	d006      	beq.n	800a250 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x20>
            textContainer.cancelMoveAnimation();
 800a242:	305c      	adds	r0, #92	; 0x5c
 800a244:	f7ff fe2b 	bl	8009e9e <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
            centerTextContainer.cancelMoveAnimation();
 800a248:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 800a24c:	f7ff fe27 	bl	8009e9e <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
        xClick = evt.getX();
 800a250:	f641 1348 	movw	r3, #6472	; 0x1948
 800a254:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800a258:	52e2      	strh	r2, [r4, r3]
        yClick = evt.getY();
 800a25a:	f641 134a 	movw	r3, #6474	; 0x194a
 800a25e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800a262:	52e2      	strh	r2, [r4, r3]
        currentAnimationState = NO_ANIMATION;
 800a264:	2303      	movs	r3, #3
 800a266:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 800a26a:	bd70      	pop	{r4, r5, r6, pc}
    else if (evt.getType() == ClickEvent::RELEASED)
 800a26c:	2b01      	cmp	r3, #1
 800a26e:	d1fc      	bne.n	800a26a <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
        if ((currentAnimationState == NO_ANIMATION) ||
 800a270:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a274:	2b03      	cmp	r3, #3
 800a276:	d017      	beq.n	800a2a8 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x78>
 800a278:	2b02      	cmp	r3, #2
 800a27a:	d1f6      	bne.n	800a26a <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                (currentAnimationState == ANIMATING_DRAG && abs(xClick - evt.getX()) < 10 && abs(yClick - evt.getY()) < 10))
 800a27c:	f641 1348 	movw	r3, #6472	; 0x1948
 800a280:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800a284:	5ec3      	ldrsh	r3, [r0, r3]
 800a286:	1a9b      	subs	r3, r3, r2
 800a288:	2b00      	cmp	r3, #0
 800a28a:	bfb8      	it	lt
 800a28c:	425b      	neglt	r3, r3
 800a28e:	2b09      	cmp	r3, #9
 800a290:	dc2d      	bgt.n	800a2ee <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
 800a292:	f641 134a 	movw	r3, #6474	; 0x194a
 800a296:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
 800a29a:	5ec3      	ldrsh	r3, [r0, r3]
 800a29c:	1a9b      	subs	r3, r3, r2
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	bfb8      	it	lt
 800a2a2:	425b      	neglt	r3, r3
 800a2a4:	2b09      	cmp	r3, #9
 800a2a6:	dc22      	bgt.n	800a2ee <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800a2a8:	f641 132c 	movw	r3, #6444	; 0x192c
 800a2ac:	f9b4 5036 	ldrsh.w	r5, [r4, #54]	; 0x36
 800a2b0:	58e3      	ldr	r3, [r4, r3]
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 800a2b2:	f9b4 1062 	ldrsh.w	r1, [r4, #98]	; 0x62
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800a2b6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800a2ba:	eb05 0563 	add.w	r5, r5, r3, asr #1
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 800a2be:	f641 134a 	movw	r3, #6474	; 0x194a
 800a2c2:	4620      	mov	r0, r4
 800a2c4:	5ee3      	ldrsh	r3, [r4, r3]
 800a2c6:	1b5b      	subs	r3, r3, r5
 800a2c8:	1ac9      	subs	r1, r1, r3
 800a2ca:	f7ff fd94 	bl	8009df6 <_ZN13WheelSelector21calculateSnapPositionEi>
 800a2ce:	4601      	mov	r1, r0
            if (newYPosition + getTextContainerVisibleHeight() < centerTextCenter ||
 800a2d0:	4620      	mov	r0, r4
 800a2d2:	f7ff fda0 	bl	8009e16 <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 800a2d6:	4408      	add	r0, r1
 800a2d8:	4285      	cmp	r5, r0
 800a2da:	dcc6      	bgt.n	800a26a <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
 800a2dc:	428d      	cmp	r5, r1
 800a2de:	dbc4      	blt.n	800a26a <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 800a2e0:	4620      	mov	r0, r4
 800a2e2:	4b05      	ldr	r3, [pc, #20]	; (800a2f8 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xc8>)
}
 800a2e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 800a2e8:	221a      	movs	r2, #26
 800a2ea:	f7ff beef 	b.w	800a0cc <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
            snap();
 800a2ee:	4620      	mov	r0, r4
}
 800a2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            snap();
 800a2f4:	f7ff bf8c 	b.w	800a210 <_ZN13WheelSelector4snapEv>
 800a2f8:	0801738d 	.word	0x0801738d

0800a2fc <gmtime>:
#include "time.h"

extern struct tm __tm_store;

struct tm * gmtime(const time_p * timeptr)
{
 800a2fc:	b510      	push	{r4, lr}
	gmtime_r(timeptr, &__tm_store);
 800a2fe:	4c03      	ldr	r4, [pc, #12]	; (800a30c <gmtime+0x10>)
 800a300:	4621      	mov	r1, r4
 800a302:	f000 f805 	bl	800a310 <gmtime_r>
	return &__tm_store;
}
 800a306:	4620      	mov	r0, r4
 800a308:	bd10      	pop	{r4, pc}
 800a30a:	bf00      	nop
 800a30c:	20027e80 	.word	0x20027e80

0800a310 <gmtime_r>:
    ldiv_t          lresult;
    div_t           result;
    uint16_t        days, n, leapyear, years;

    time_p timer1 = *timer;
    if(timer1 < UNIX_OFFSET){
 800a310:	4b48      	ldr	r3, [pc, #288]	; (800a434 <gmtime_r+0x124>)
    time_p timer1 = *timer;
 800a312:	6802      	ldr	r2, [r0, #0]
{
 800a314:	b530      	push	{r4, r5, lr}
    if(timer1 < UNIX_OFFSET){
 800a316:	429a      	cmp	r2, r3
    	timer1 = UNIX_OFFSET;
    }
    else{
    	timer1 = timer1 - UNIX_OFFSET;
 800a318:	bf8c      	ite	hi
 800a31a:	4b47      	ldrhi	r3, [pc, #284]	; (800a438 <gmtime_r+0x128>)
    	timer1 = UNIX_OFFSET;
 800a31c:	4b47      	ldrls	r3, [pc, #284]	; (800a43c <gmtime_r+0x12c>)
{
 800a31e:	460d      	mov	r5, r1
    }
    /* break down timer into whole and fractional parts of 1 day */
    days = timer1 / 86400UL;
 800a320:	4947      	ldr	r1, [pc, #284]	; (800a440 <gmtime_r+0x130>)
{
 800a322:	b085      	sub	sp, #20
    	timer1 = timer1 - UNIX_OFFSET;
 800a324:	bf88      	it	hi
 800a326:	189b      	addhi	r3, r3, r2
    fract = timer1 % 86400UL;

    /*
            Extract hour, minute, and second from the fractional day
        */
    lresult = ldiv(fract, 60L);
 800a328:	4668      	mov	r0, sp
    days = timer1 / 86400UL;
 800a32a:	fbb3 f4f1 	udiv	r4, r3, r1
    lresult = ldiv(fract, 60L);
 800a32e:	223c      	movs	r2, #60	; 0x3c
 800a330:	fb01 3114 	mls	r1, r1, r4, r3
 800a334:	f01b fbbc 	bl	8025ab0 <ldiv>
    timeptr->tm_sec = lresult.rem;
 800a338:	9b01      	ldr	r3, [sp, #4]
    result = div(lresult.quot, 60);
 800a33a:	9900      	ldr	r1, [sp, #0]
    timeptr->tm_sec = lresult.rem;
 800a33c:	702b      	strb	r3, [r5, #0]
    result = div(lresult.quot, 60);
 800a33e:	223c      	movs	r2, #60	; 0x3c
 800a340:	a802      	add	r0, sp, #8
 800a342:	f01b fa6f 	bl	8025824 <div>
    timeptr->tm_min = result.rem;
 800a346:	9b03      	ldr	r3, [sp, #12]
 800a348:	706b      	strb	r3, [r5, #1]
    timeptr->tm_hour = result.quot;
 800a34a:	9b02      	ldr	r3, [sp, #8]
 800a34c:	70ab      	strb	r3, [r5, #2]

    /* Determine day of week ( the epoch was a Saturday ) */
    n = days + SATURDAY;
 800a34e:	1da3      	adds	r3, r4, #6
 800a350:	b29b      	uxth	r3, r3
    n %= 7;
 800a352:	2207      	movs	r2, #7
 800a354:	fbb3 f2f2 	udiv	r2, r3, r2
 800a358:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 800a35c:	1a9b      	subs	r3, r3, r2
    timeptr->tm_wday = n;
 800a35e:	712b      	strb	r3, [r5, #4]
        * Using this property, we can easily 'map' the time stamp into the leap cycles, quickly
        * deriving the year and day of year, along with the fact of whether it is a leap year.
        */

    /* map into a 100 year cycle */
    lresult = ldiv((long) days, 36525L);
 800a360:	4621      	mov	r1, r4
 800a362:	f648 62ad 	movw	r2, #36525	; 0x8ead
 800a366:	4668      	mov	r0, sp
 800a368:	f01b fba2 	bl	8025ab0 <ldiv>
    years = 100 * lresult.quot;
 800a36c:	9c00      	ldr	r4, [sp, #0]

    /* map into a 4 year cycle */
    lresult = ldiv(lresult.rem, 1461L);
 800a36e:	9901      	ldr	r1, [sp, #4]
    years = 100 * lresult.quot;
 800a370:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800a374:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    lresult = ldiv(lresult.rem, 1461L);
 800a378:	f240 52b5 	movw	r2, #1461	; 0x5b5
 800a37c:	4668      	mov	r0, sp
 800a37e:	f01b fb97 	bl	8025ab0 <ldiv>
    years = 100 * lresult.quot;
 800a382:	00a4      	lsls	r4, r4, #2
    years += 4 * lresult.quot;
 800a384:	9b00      	ldr	r3, [sp, #0]
    days = lresult.rem;
 800a386:	f8bd 1004 	ldrh.w	r1, [sp, #4]
    years = 100 * lresult.quot;
 800a38a:	b2a4      	uxth	r4, r4
    years += 4 * lresult.quot;
 800a38c:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800a390:	b2a4      	uxth	r4, r4
    if (years > 100)
 800a392:	2c64      	cmp	r4, #100	; 0x64
 800a394:	d92b      	bls.n	800a3ee <gmtime_r+0xde>
        days++;
 800a396:	3101      	adds	r1, #1
 800a398:	b289      	uxth	r1, r1

    /*
         * 'years' is now at the first year of a 4 year leap cycle, which will always be a leap year,
         * unless it is 100. 'days' is now an index into that cycle.
         */
    leapyear = 1;
 800a39a:	2301      	movs	r3, #1
    if (years == 100)
        leapyear = 0;

    /* compute length, in days, of first year of this cycle */
    n = 364 + leapyear;
 800a39c:	2b00      	cmp	r3, #0
 800a39e:	f240 126d 	movw	r2, #365	; 0x16d

    /*
     * if the number of days remaining is greater than the length of the
     * first year, we make one more division.
     */
    if (days > n) {
 800a3a2:	bf14      	ite	ne
 800a3a4:	4610      	movne	r0, r2
 800a3a6:	f44f 70b6 	moveq.w	r0, #364	; 0x16c
 800a3aa:	4288      	cmp	r0, r1
 800a3ac:	d20a      	bcs.n	800a3c4 <gmtime_r+0xb4>
        days -= leapyear;
 800a3ae:	1ac9      	subs	r1, r1, r3
        leapyear = 0;
        result = div(days, 365);
 800a3b0:	b289      	uxth	r1, r1
 800a3b2:	a802      	add	r0, sp, #8
 800a3b4:	f01b fa36 	bl	8025824 <div>
        years += result.quot;
 800a3b8:	9b02      	ldr	r3, [sp, #8]
        days = result.rem;
 800a3ba:	f8bd 100c 	ldrh.w	r1, [sp, #12]
        years += result.quot;
 800a3be:	441c      	add	r4, r3
 800a3c0:	b2a4      	uxth	r4, r4
        leapyear = 0;
 800a3c2:	2300      	movs	r3, #0
    /*
            Given the year, day of year, and leap year indicator, we can break down the
            month and day of month. If the day of year is less than 59 (or 60 if a leap year), then
            we handle the Jan/Feb month pair as an exception.
        */
    n = 59 + leapyear;
 800a3c4:	333b      	adds	r3, #59	; 0x3b
    timeptr->tm_year = 100 + years;
 800a3c6:	3464      	adds	r4, #100	; 0x64
    if (days < n) {
 800a3c8:	4299      	cmp	r1, r3
    timeptr->tm_year = 100 + years;
 800a3ca:	80ec      	strh	r4, [r5, #6]
    timeptr->tm_yday = days;
 800a3cc:	8129      	strh	r1, [r5, #8]
    if (days < n) {
 800a3ce:	d212      	bcs.n	800a3f6 <gmtime_r+0xe6>
        /* special case: Jan/Feb month pair */
        result = div(days, 31);
 800a3d0:	221f      	movs	r2, #31
 800a3d2:	a802      	add	r0, sp, #8
 800a3d4:	f01b fa26 	bl	8025824 <div>
        timeptr->tm_mon = result.quot;
 800a3d8:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
        timeptr->tm_mon += result.quot * 2;

        /* map into a month */
        result = div(result.rem, 31);
        timeptr->tm_mon += result.quot;
 800a3da:	716b      	strb	r3, [r5, #5]
        timeptr->tm_mday = result.rem;
 800a3dc:	9b03      	ldr	r3, [sp, #12]
 800a3de:	70eb      	strb	r3, [r5, #3]
    }

    /*
            Cleanup and return
        */
    timeptr->tm_isdst = 0;  /* gmt is never in DST */
 800a3e0:	2300      	movs	r3, #0
 800a3e2:	816b      	strh	r3, [r5, #10]
    timeptr->tm_mday++; /* tm_mday is 1 based */
 800a3e4:	78eb      	ldrb	r3, [r5, #3]
 800a3e6:	3301      	adds	r3, #1
 800a3e8:	70eb      	strb	r3, [r5, #3]

}
 800a3ea:	b005      	add	sp, #20
 800a3ec:	bd30      	pop	{r4, r5, pc}
        leapyear = 0;
 800a3ee:	bf14      	ite	ne
 800a3f0:	2301      	movne	r3, #1
 800a3f2:	2300      	moveq	r3, #0
 800a3f4:	e7d2      	b.n	800a39c <gmtime_r+0x8c>
        days -= n;
 800a3f6:	1ac9      	subs	r1, r1, r3
        result = div(days, 153);
 800a3f8:	2299      	movs	r2, #153	; 0x99
 800a3fa:	b289      	uxth	r1, r1
 800a3fc:	a802      	add	r0, sp, #8
 800a3fe:	f01b fa11 	bl	8025824 <div>
        timeptr->tm_mon = 2 + result.quot * 5;
 800a402:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
 800a404:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon = 2 + result.quot * 5;
 800a406:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a40a:	3302      	adds	r3, #2
 800a40c:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 61);
 800a40e:	223d      	movs	r2, #61	; 0x3d
 800a410:	a802      	add	r0, sp, #8
 800a412:	f01b fa07 	bl	8025824 <div>
        timeptr->tm_mon += result.quot * 2;
 800a416:	796b      	ldrb	r3, [r5, #5]
 800a418:	9a02      	ldr	r2, [sp, #8]
        result = div(result.rem, 31);
 800a41a:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon += result.quot * 2;
 800a41c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800a420:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 31);
 800a422:	221f      	movs	r2, #31
 800a424:	a802      	add	r0, sp, #8
 800a426:	f01b f9fd 	bl	8025824 <div>
        timeptr->tm_mon += result.quot;
 800a42a:	796b      	ldrb	r3, [r5, #5]
 800a42c:	9a02      	ldr	r2, [sp, #8]
 800a42e:	4413      	add	r3, r2
 800a430:	e7d3      	b.n	800a3da <gmtime_r+0xca>
 800a432:	bf00      	nop
 800a434:	386d437f 	.word	0x386d437f
 800a438:	c792bc80 	.word	0xc792bc80
 800a43c:	386d4380 	.word	0x386d4380
 800a440:	00015180 	.word	0x00015180

0800a444 <mk_gmtime>:

#include "time.h"

time_p
mk_gmtime(const struct tm * timeptr)
{
 800a444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    /*
        Determine elapsed whole days since the epoch to the beginning of this year. Since our epoch is
        at a conjunction of the leap cycles, we can do this rather quickly.
        */
    n = timeptr->tm_year - 100;
 800a446:	88c7      	ldrh	r7, [r0, #6]
 800a448:	f1a7 0364 	sub.w	r3, r7, #100	; 0x64
 800a44c:	b21b      	sxth	r3, r3
{
 800a44e:	4605      	mov	r5, r0
    leaps = 0;
    if (n) {
 800a450:	b1cb      	cbz	r3, 800a486 <mk_gmtime+0x42>
        m = n - 1;
 800a452:	f1a7 0465 	sub.w	r4, r7, #101	; 0x65
 800a456:	b224      	sxth	r4, r4
        leaps = m / 4;
 800a458:	2c00      	cmp	r4, #0
 800a45a:	4621      	mov	r1, r4
 800a45c:	bfb8      	it	lt
 800a45e:	1ce1      	addlt	r1, r4, #3
 800a460:	108a      	asrs	r2, r1, #2
        leaps -= m / (100);
        leaps++;
 800a462:	3201      	adds	r2, #1
        leaps -= m / (100);
 800a464:	2664      	movs	r6, #100	; 0x64
 800a466:	fb94 f4f6 	sdiv	r4, r4, r6
        leaps++;
 800a46a:	1b12      	subs	r2, r2, r4
 800a46c:	b212      	sxth	r2, r2
    }
    tmp = 365UL * n + leaps;
 800a46e:	f240 166d 	movw	r6, #365	; 0x16d
 800a472:	fb13 2606 	smlabb	r6, r3, r6, r2
                account for a 'phase change' between July and August (153 days after March 1).
            */
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */

    /* handle Jan/Feb as a special case */
    if (timeptr->tm_mon < 2) {
 800a476:	796b      	ldrb	r3, [r5, #5]
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 800a478:	78ec      	ldrb	r4, [r5, #3]
    if (timeptr->tm_mon < 2) {
 800a47a:	2b01      	cmp	r3, #1
 800a47c:	d818      	bhi.n	800a4b0 <mk_gmtime+0x6c>
        if (timeptr->tm_mon)
 800a47e:	b923      	cbnz	r3, 800a48a <mk_gmtime+0x46>
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 800a480:	1e63      	subs	r3, r4, #1
        /*
         * if n is odd, we are in the second half of the
         * month pair
         */
        if (n & 1)
            d += 31;
 800a482:	b21b      	sxth	r3, r3
 800a484:	e003      	b.n	800a48e <mk_gmtime+0x4a>
    leaps = 0;
 800a486:	461a      	mov	r2, r3
 800a488:	e7f1      	b.n	800a46e <mk_gmtime+0x2a>
            d += 31;
 800a48a:	f104 031e 	add.w	r3, r4, #30

    /* compute 'fractional' day */
    tmp = timeptr->tm_hour;
    tmp *= ONE_HOUR;
    tmp += timeptr->tm_min * 60UL;
    tmp += timeptr->tm_sec;
 800a48e:	782c      	ldrb	r4, [r5, #0]

    ret += tmp;

    return (ret + UNIX_OFFSET);
 800a490:	4a1b      	ldr	r2, [pc, #108]	; (800a500 <mk_gmtime+0xbc>)
    tmp = timeptr->tm_hour;
 800a492:	78a8      	ldrb	r0, [r5, #2]
    return (ret + UNIX_OFFSET);
 800a494:	7869      	ldrb	r1, [r5, #1]
 800a496:	4422      	add	r2, r4
 800a498:	f44f 6461 	mov.w	r4, #3600	; 0xe10
 800a49c:	fb04 2000 	mla	r0, r4, r0, r2
 800a4a0:	223c      	movs	r2, #60	; 0x3c
 800a4a2:	fb12 0201 	smlabb	r2, r2, r1, r0
}
 800a4a6:	4817      	ldr	r0, [pc, #92]	; (800a504 <mk_gmtime+0xc0>)
    tmp += d;
 800a4a8:	4433      	add	r3, r6
}
 800a4aa:	fb00 2003 	mla	r0, r0, r3, r2
 800a4ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        n = 59 + is_leap_year(timeptr->tm_year + 1900);
 800a4b0:	f207 706c 	addw	r0, r7, #1900	; 0x76c
 800a4b4:	b280      	uxth	r0, r0
 800a4b6:	f006 f973 	bl	80107a0 <is_leap_year>
        d += n;
 800a4ba:	f104 033a 	add.w	r3, r4, #58	; 0x3a
 800a4be:	181c      	adds	r4, r3, r0
        n = timeptr->tm_mon - MARCH;
 800a4c0:	796b      	ldrb	r3, [r5, #5]
 800a4c2:	3b02      	subs	r3, #2
        if (n > (JULY - MARCH))
 800a4c4:	2b04      	cmp	r3, #4
        n = timeptr->tm_mon - MARCH;
 800a4c6:	b21a      	sxth	r2, r3
        n %= 5;
 800a4c8:	f04f 0305 	mov.w	r3, #5
 800a4cc:	fb92 f3f3 	sdiv	r3, r2, r3
 800a4d0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a4d4:	eba2 0203 	sub.w	r2, r2, r3
        m = n / 2;
 800a4d8:	eb02 73d2 	add.w	r3, r2, r2, lsr #31
        d += n;
 800a4dc:	b2a4      	uxth	r4, r4
        m = n / 2;
 800a4de:	ea4f 0363 	mov.w	r3, r3, asr #1
            d += 153;
 800a4e2:	bfc8      	it	gt
 800a4e4:	3499      	addgt	r4, #153	; 0x99
        m *= 61;
 800a4e6:	ebc3 1103 	rsb	r1, r3, r3, lsl #4
            d += 153;
 800a4ea:	bfc8      	it	gt
 800a4ec:	b2a4      	uxthgt	r4, r4
        m *= 61;
 800a4ee:	eb03 0381 	add.w	r3, r3, r1, lsl #2
        d += m;
 800a4f2:	4423      	add	r3, r4
 800a4f4:	b29b      	uxth	r3, r3
        if (n & 1)
 800a4f6:	07d2      	lsls	r2, r2, #31
            d += 31;
 800a4f8:	bf48      	it	mi
 800a4fa:	331f      	addmi	r3, #31
 800a4fc:	e7c1      	b.n	800a482 <mk_gmtime+0x3e>
 800a4fe:	bf00      	nop
 800a500:	386d4380 	.word	0x386d4380
 800a504:	00015180 	.word	0x00015180

0800a508 <mktime>:

extern int16_t      (*__dst_ptr) (const time_p *, int32_t *);

time_p
mktime(struct tm * timeptr)
{
 800a508:	b513      	push	{r0, r1, r4, lr}
 800a50a:	4604      	mov	r4, r0
	time_p          ret;

	ret = mk_gmtime(timeptr);
 800a50c:	f7ff ff9a 	bl	800a444 <mk_gmtime>

	if (timeptr->tm_isdst < 0) {
 800a510:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
	ret = mk_gmtime(timeptr);
 800a514:	9001      	str	r0, [sp, #4]
	if (timeptr->tm_isdst < 0) {
 800a516:	2b00      	cmp	r3, #0
 800a518:	da06      	bge.n	800a528 <mktime+0x20>
		if (__dst_ptr)
 800a51a:	4b0a      	ldr	r3, [pc, #40]	; (800a544 <mktime+0x3c>)
 800a51c:	681b      	ldr	r3, [r3, #0]
 800a51e:	b11b      	cbz	r3, 800a528 <mktime+0x20>
			timeptr->tm_isdst = __dst_ptr(&ret, &__utc_offset);
 800a520:	4909      	ldr	r1, [pc, #36]	; (800a548 <mktime+0x40>)
 800a522:	a801      	add	r0, sp, #4
 800a524:	4798      	blx	r3
 800a526:	8160      	strh	r0, [r4, #10]
	}
	if (timeptr->tm_isdst > 0)
 800a528:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a52c:	2a00      	cmp	r2, #0
		ret -= timeptr->tm_isdst;
 800a52e:	bfc2      	ittt	gt
 800a530:	9b01      	ldrgt	r3, [sp, #4]
 800a532:	1a9b      	subgt	r3, r3, r2
 800a534:	9301      	strgt	r3, [sp, #4]

	ret -= __utc_offset;
 800a536:	4b04      	ldr	r3, [pc, #16]	; (800a548 <mktime+0x40>)

	//localtime_r(&ret, timeptr);

	return ret;
}
 800a538:	9801      	ldr	r0, [sp, #4]
	ret -= __utc_offset;
 800a53a:	681b      	ldr	r3, [r3, #0]
}
 800a53c:	1ac0      	subs	r0, r0, r3
 800a53e:	b002      	add	sp, #8
 800a540:	bd10      	pop	{r4, pc}
 800a542:	bf00      	nop
 800a544:	20027e7c 	.word	0x20027e7c
 800a548:	20027e8c 	.word	0x20027e8c

0800a54c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 800a54c:	4770      	bx	lr

0800a54e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800a54e:	2000      	movs	r0, #0
 800a550:	4770      	bx	lr

0800a552 <ft6x06_ReadID>:
{
 800a552:	b510      	push	{r4, lr}
 800a554:	4604      	mov	r4, r0
  TS_IO_Init();
 800a556:	f000 fb7d 	bl	800ac54 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 800a55a:	21a8      	movs	r1, #168	; 0xa8
 800a55c:	b2e0      	uxtb	r0, r4
 800a55e:	f000 fb93 	bl	800ac88 <TS_IO_Read>
}
 800a562:	b280      	uxth	r0, r0
 800a564:	bd10      	pop	{r4, pc}
	...

0800a568 <ft6x06_TS_DetectTouch>:
{
 800a568:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 800a56a:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800a56c:	2102      	movs	r1, #2
 800a56e:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 800a570:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800a574:	f000 fb88 	bl	800ac88 <TS_IO_Read>
 800a578:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 800a57c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a580:	f003 030f 	and.w	r3, r3, #15
 800a584:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 800a588:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a58c:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800a58e:	bf88      	it	hi
 800a590:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800a594:	4b04      	ldr	r3, [pc, #16]	; (800a5a8 <ft6x06_TS_DetectTouch+0x40>)
 800a596:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 800a59a:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800a59e:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 800a5a0:	2200      	movs	r2, #0
 800a5a2:	709a      	strb	r2, [r3, #2]
}
 800a5a4:	b002      	add	sp, #8
 800a5a6:	bd10      	pop	{r4, pc}
 800a5a8:	20016a3a 	.word	0x20016a3a

0800a5ac <ft6x06_TS_GetXY>:
{
 800a5ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800a5ae:	4c15      	ldr	r4, [pc, #84]	; (800a604 <ft6x06_TS_GetXY+0x58>)
{
 800a5b0:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800a5b2:	78a3      	ldrb	r3, [r4, #2]
 800a5b4:	7862      	ldrb	r2, [r4, #1]
 800a5b6:	429a      	cmp	r2, r3
{
 800a5b8:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800a5ba:	d91f      	bls.n	800a5fc <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 800a5bc:	b303      	cbz	r3, 800a600 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800a5be:	2b01      	cmp	r3, #1
 800a5c0:	bf14      	ite	ne
 800a5c2:	2100      	movne	r1, #0
 800a5c4:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 800a5c6:	2304      	movs	r3, #4
 800a5c8:	eb0d 0203 	add.w	r2, sp, r3
 800a5cc:	b2c0      	uxtb	r0, r0
 800a5ce:	f000 fb77 	bl	800acc0 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800a5d2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800a5d6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800a5da:	021b      	lsls	r3, r3, #8
 800a5dc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800a5e0:	4313      	orrs	r3, r2
 800a5e2:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 800a5e4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800a5e8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800a5ec:	021b      	lsls	r3, r3, #8
 800a5ee:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800a5f2:	4313      	orrs	r3, r2
 800a5f4:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 800a5f6:	78a3      	ldrb	r3, [r4, #2]
 800a5f8:	3301      	adds	r3, #1
 800a5fa:	70a3      	strb	r3, [r4, #2]
}
 800a5fc:	b002      	add	sp, #8
 800a5fe:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 800a600:	2103      	movs	r1, #3
 800a602:	e7e0      	b.n	800a5c6 <ft6x06_TS_GetXY+0x1a>
 800a604:	20016a3a 	.word	0x20016a3a

0800a608 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800a608:	2201      	movs	r2, #1
 800a60a:	21a4      	movs	r1, #164	; 0xa4
 800a60c:	b2c0      	uxtb	r0, r0
 800a60e:	f000 bb23 	b.w	800ac58 <TS_IO_Write>

0800a612 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800a612:	2200      	movs	r2, #0
 800a614:	21a4      	movs	r1, #164	; 0xa4
 800a616:	b2c0      	uxtb	r0, r0
 800a618:	f000 bb1e 	b.w	800ac58 <TS_IO_Write>

0800a61c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 800a61c:	f7ff bff9 	b.w	800a612 <ft6x06_TS_DisableIT>

0800a620 <ft6x06_TS_ClearIT>:
 800a620:	4770      	bx	lr
	...

0800a624 <ft6x06_Init>:
{  
 800a624:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 800a626:	4b09      	ldr	r3, [pc, #36]	; (800a64c <ft6x06_Init+0x28>)
 800a628:	781a      	ldrb	r2, [r3, #0]
 800a62a:	4290      	cmp	r0, r2
 800a62c:	d00a      	beq.n	800a644 <ft6x06_Init+0x20>
 800a62e:	7859      	ldrb	r1, [r3, #1]
 800a630:	4288      	cmp	r0, r1
 800a632:	d007      	beq.n	800a644 <ft6x06_Init+0x20>
 800a634:	b10a      	cbz	r2, 800a63a <ft6x06_Init+0x16>
 800a636:	b929      	cbnz	r1, 800a644 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 800a638:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800a63a:	5498      	strb	r0, [r3, r2]
}
 800a63c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 800a640:	f000 bb08 	b.w	800ac54 <TS_IO_Init>
}
 800a644:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a648:	4770      	bx	lr
 800a64a:	bf00      	nop
 800a64c:	20016a38 	.word	0x20016a38

0800a650 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 800a650:	b538      	push	{r3, r4, r5, lr}
 800a652:	4604      	mov	r4, r0
 800a654:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a656:	2000      	movs	r0, #0
 800a658:	49cb      	ldr	r1, [pc, #812]	; (800a988 <OTM8009A_Init+0x338>)
 800a65a:	f7f6 f9f3 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 800a65e:	49cb      	ldr	r1, [pc, #812]	; (800a98c <OTM8009A_Init+0x33c>)
 800a660:	2003      	movs	r0, #3
 800a662:	f7f6 f9ef 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 800a666:	49ca      	ldr	r1, [pc, #808]	; (800a990 <OTM8009A_Init+0x340>)
 800a668:	2000      	movs	r0, #0
 800a66a:	f7f6 f9eb 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 800a66e:	49c9      	ldr	r1, [pc, #804]	; (800a994 <OTM8009A_Init+0x344>)
 800a670:	2002      	movs	r0, #2
 800a672:	f7f6 f9e7 	bl	8000a44 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800a676:	49c6      	ldr	r1, [pc, #792]	; (800a990 <OTM8009A_Init+0x340>)
 800a678:	2000      	movs	r0, #0
 800a67a:	f7f6 f9e3 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800a67e:	49c6      	ldr	r1, [pc, #792]	; (800a998 <OTM8009A_Init+0x348>)
 800a680:	2000      	movs	r0, #0
 800a682:	f7f6 f9df 	bl	8000a44 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 800a686:	200a      	movs	r0, #10
 800a688:	f000 fb30 	bl	800acec <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 800a68c:	49c3      	ldr	r1, [pc, #780]	; (800a99c <OTM8009A_Init+0x34c>)
 800a68e:	2000      	movs	r0, #0
 800a690:	f7f6 f9d8 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 800a694:	49c2      	ldr	r1, [pc, #776]	; (800a9a0 <OTM8009A_Init+0x350>)
 800a696:	2000      	movs	r0, #0
 800a698:	f7f6 f9d4 	bl	8000a44 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 800a69c:	200a      	movs	r0, #10
 800a69e:	f000 fb25 	bl	800acec <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 800a6a2:	49c0      	ldr	r1, [pc, #768]	; (800a9a4 <OTM8009A_Init+0x354>)
 800a6a4:	2000      	movs	r0, #0
 800a6a6:	f7f6 f9cd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 800a6aa:	49bf      	ldr	r1, [pc, #764]	; (800a9a8 <OTM8009A_Init+0x358>)
 800a6ac:	2000      	movs	r0, #0
 800a6ae:	f7f6 f9c9 	bl	8000a44 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 800a6b2:	49be      	ldr	r1, [pc, #760]	; (800a9ac <OTM8009A_Init+0x35c>)
 800a6b4:	2000      	movs	r0, #0
 800a6b6:	f7f6 f9c5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800a6ba:	49bd      	ldr	r1, [pc, #756]	; (800a9b0 <OTM8009A_Init+0x360>)
 800a6bc:	2000      	movs	r0, #0
 800a6be:	f7f6 f9c1 	bl	8000a44 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800a6c2:	49bc      	ldr	r1, [pc, #752]	; (800a9b4 <OTM8009A_Init+0x364>)
 800a6c4:	2000      	movs	r0, #0
 800a6c6:	f7f6 f9bd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 800a6ca:	49bb      	ldr	r1, [pc, #748]	; (800a9b8 <OTM8009A_Init+0x368>)
 800a6cc:	2000      	movs	r0, #0
 800a6ce:	f7f6 f9b9 	bl	8000a44 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a6d2:	49ad      	ldr	r1, [pc, #692]	; (800a988 <OTM8009A_Init+0x338>)
 800a6d4:	2000      	movs	r0, #0
 800a6d6:	f7f6 f9b5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 800a6da:	49b8      	ldr	r1, [pc, #736]	; (800a9bc <OTM8009A_Init+0x36c>)
 800a6dc:	2000      	movs	r0, #0
 800a6de:	f7f6 f9b1 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800a6e2:	49b7      	ldr	r1, [pc, #732]	; (800a9c0 <OTM8009A_Init+0x370>)
 800a6e4:	2000      	movs	r0, #0
 800a6e6:	f7f6 f9ad 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 800a6ea:	49b6      	ldr	r1, [pc, #728]	; (800a9c4 <OTM8009A_Init+0x374>)
 800a6ec:	2000      	movs	r0, #0
 800a6ee:	f7f6 f9a9 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800a6f2:	49b5      	ldr	r1, [pc, #724]	; (800a9c8 <OTM8009A_Init+0x378>)
 800a6f4:	2000      	movs	r0, #0
 800a6f6:	f7f6 f9a5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800a6fa:	49b4      	ldr	r1, [pc, #720]	; (800a9cc <OTM8009A_Init+0x37c>)
 800a6fc:	2000      	movs	r0, #0
 800a6fe:	f7f6 f9a1 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800a702:	49b3      	ldr	r1, [pc, #716]	; (800a9d0 <OTM8009A_Init+0x380>)
 800a704:	2000      	movs	r0, #0
 800a706:	f7f6 f99d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800a70a:	49b2      	ldr	r1, [pc, #712]	; (800a9d4 <OTM8009A_Init+0x384>)
 800a70c:	2000      	movs	r0, #0
 800a70e:	f7f6 f999 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800a712:	49b1      	ldr	r1, [pc, #708]	; (800a9d8 <OTM8009A_Init+0x388>)
 800a714:	2000      	movs	r0, #0
 800a716:	f7f6 f995 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800a71a:	49a5      	ldr	r1, [pc, #660]	; (800a9b0 <OTM8009A_Init+0x360>)
 800a71c:	2000      	movs	r0, #0
 800a71e:	f7f6 f991 	bl	8000a44 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a722:	4999      	ldr	r1, [pc, #612]	; (800a988 <OTM8009A_Init+0x338>)
 800a724:	2000      	movs	r0, #0
 800a726:	f7f6 f98d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800a72a:	49ac      	ldr	r1, [pc, #688]	; (800a9dc <OTM8009A_Init+0x38c>)
 800a72c:	2002      	movs	r0, #2
 800a72e:	f7f6 f989 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 800a732:	49ab      	ldr	r1, [pc, #684]	; (800a9e0 <OTM8009A_Init+0x390>)
 800a734:	2000      	movs	r0, #0
 800a736:	f7f6 f985 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800a73a:	49aa      	ldr	r1, [pc, #680]	; (800a9e4 <OTM8009A_Init+0x394>)
 800a73c:	2000      	movs	r0, #0
 800a73e:	f7f6 f981 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 800a742:	49a9      	ldr	r1, [pc, #676]	; (800a9e8 <OTM8009A_Init+0x398>)
 800a744:	2000      	movs	r0, #0
 800a746:	f7f6 f97d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800a74a:	49a8      	ldr	r1, [pc, #672]	; (800a9ec <OTM8009A_Init+0x39c>)
 800a74c:	2000      	movs	r0, #0
 800a74e:	f7f6 f979 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 800a752:	49a7      	ldr	r1, [pc, #668]	; (800a9f0 <OTM8009A_Init+0x3a0>)
 800a754:	2000      	movs	r0, #0
 800a756:	f7f6 f975 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 800a75a:	49a6      	ldr	r1, [pc, #664]	; (800a9f4 <OTM8009A_Init+0x3a4>)
 800a75c:	2000      	movs	r0, #0
 800a75e:	f7f6 f971 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800a762:	4997      	ldr	r1, [pc, #604]	; (800a9c0 <OTM8009A_Init+0x370>)
 800a764:	2000      	movs	r0, #0
 800a766:	f7f6 f96d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 800a76a:	49a3      	ldr	r1, [pc, #652]	; (800a9f8 <OTM8009A_Init+0x3a8>)
 800a76c:	2000      	movs	r0, #0
 800a76e:	f7f6 f969 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800a772:	4995      	ldr	r1, [pc, #596]	; (800a9c8 <OTM8009A_Init+0x378>)
 800a774:	2000      	movs	r0, #0
 800a776:	f7f6 f965 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 800a77a:	49a0      	ldr	r1, [pc, #640]	; (800a9fc <OTM8009A_Init+0x3ac>)
 800a77c:	2000      	movs	r0, #0
 800a77e:	f7f6 f961 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800a782:	499f      	ldr	r1, [pc, #636]	; (800aa00 <OTM8009A_Init+0x3b0>)
 800a784:	2000      	movs	r0, #0
 800a786:	f7f6 f95d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 800a78a:	499e      	ldr	r1, [pc, #632]	; (800aa04 <OTM8009A_Init+0x3b4>)
 800a78c:	2002      	movs	r0, #2
 800a78e:	f7f6 f959 	bl	8000a44 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800a792:	497f      	ldr	r1, [pc, #508]	; (800a990 <OTM8009A_Init+0x340>)
 800a794:	2000      	movs	r0, #0
 800a796:	f7f6 f955 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 800a79a:	499b      	ldr	r1, [pc, #620]	; (800aa08 <OTM8009A_Init+0x3b8>)
 800a79c:	2006      	movs	r0, #6
 800a79e:	f7f6 f951 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800a7a2:	499a      	ldr	r1, [pc, #616]	; (800aa0c <OTM8009A_Init+0x3bc>)
 800a7a4:	2000      	movs	r0, #0
 800a7a6:	f7f6 f94d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 800a7aa:	4999      	ldr	r1, [pc, #612]	; (800aa10 <OTM8009A_Init+0x3c0>)
 800a7ac:	200e      	movs	r0, #14
 800a7ae:	f7f6 f949 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800a7b2:	4998      	ldr	r1, [pc, #608]	; (800aa14 <OTM8009A_Init+0x3c4>)
 800a7b4:	2000      	movs	r0, #0
 800a7b6:	f7f6 f945 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 800a7ba:	4997      	ldr	r1, [pc, #604]	; (800aa18 <OTM8009A_Init+0x3c8>)
 800a7bc:	200e      	movs	r0, #14
 800a7be:	f7f6 f941 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800a7c2:	4996      	ldr	r1, [pc, #600]	; (800aa1c <OTM8009A_Init+0x3cc>)
 800a7c4:	2000      	movs	r0, #0
 800a7c6:	f7f6 f93d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 800a7ca:	4995      	ldr	r1, [pc, #596]	; (800aa20 <OTM8009A_Init+0x3d0>)
 800a7cc:	200a      	movs	r0, #10
 800a7ce:	f7f6 f939 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800a7d2:	4994      	ldr	r1, [pc, #592]	; (800aa24 <OTM8009A_Init+0x3d4>)
 800a7d4:	2000      	movs	r0, #0
 800a7d6:	f7f6 f935 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800a7da:	4993      	ldr	r1, [pc, #588]	; (800aa28 <OTM8009A_Init+0x3d8>)
 800a7dc:	2000      	movs	r0, #0
 800a7de:	f7f6 f931 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800a7e2:	496b      	ldr	r1, [pc, #428]	; (800a990 <OTM8009A_Init+0x340>)
 800a7e4:	2000      	movs	r0, #0
 800a7e6:	f7f6 f92d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800a7ea:	4990      	ldr	r1, [pc, #576]	; (800aa2c <OTM8009A_Init+0x3dc>)
 800a7ec:	200a      	movs	r0, #10
 800a7ee:	f7f6 f929 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800a7f2:	498f      	ldr	r1, [pc, #572]	; (800aa30 <OTM8009A_Init+0x3e0>)
 800a7f4:	2000      	movs	r0, #0
 800a7f6:	f7f6 f925 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800a7fa:	498e      	ldr	r1, [pc, #568]	; (800aa34 <OTM8009A_Init+0x3e4>)
 800a7fc:	200f      	movs	r0, #15
 800a7fe:	f7f6 f921 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800a802:	4982      	ldr	r1, [pc, #520]	; (800aa0c <OTM8009A_Init+0x3bc>)
 800a804:	2000      	movs	r0, #0
 800a806:	f7f6 f91d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800a80a:	498b      	ldr	r1, [pc, #556]	; (800aa38 <OTM8009A_Init+0x3e8>)
 800a80c:	200f      	movs	r0, #15
 800a80e:	f7f6 f919 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800a812:	4980      	ldr	r1, [pc, #512]	; (800aa14 <OTM8009A_Init+0x3c4>)
 800a814:	2000      	movs	r0, #0
 800a816:	f7f6 f915 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800a81a:	4988      	ldr	r1, [pc, #544]	; (800aa3c <OTM8009A_Init+0x3ec>)
 800a81c:	200a      	movs	r0, #10
 800a81e:	f7f6 f911 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800a822:	497e      	ldr	r1, [pc, #504]	; (800aa1c <OTM8009A_Init+0x3cc>)
 800a824:	2000      	movs	r0, #0
 800a826:	f7f6 f90d 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800a82a:	4985      	ldr	r1, [pc, #532]	; (800aa40 <OTM8009A_Init+0x3f0>)
 800a82c:	200f      	movs	r0, #15
 800a82e:	f7f6 f909 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800a832:	497c      	ldr	r1, [pc, #496]	; (800aa24 <OTM8009A_Init+0x3d4>)
 800a834:	2000      	movs	r0, #0
 800a836:	f7f6 f905 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800a83a:	4982      	ldr	r1, [pc, #520]	; (800aa44 <OTM8009A_Init+0x3f4>)
 800a83c:	200f      	movs	r0, #15
 800a83e:	f7f6 f901 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 800a842:	4981      	ldr	r1, [pc, #516]	; (800aa48 <OTM8009A_Init+0x3f8>)
 800a844:	2000      	movs	r0, #0
 800a846:	f7f6 f8fd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800a84a:	4980      	ldr	r1, [pc, #512]	; (800aa4c <OTM8009A_Init+0x3fc>)
 800a84c:	200a      	movs	r0, #10
 800a84e:	f7f6 f8f9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 800a852:	497f      	ldr	r1, [pc, #508]	; (800aa50 <OTM8009A_Init+0x400>)
 800a854:	2000      	movs	r0, #0
 800a856:	f7f6 f8f5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800a85a:	497e      	ldr	r1, [pc, #504]	; (800aa54 <OTM8009A_Init+0x404>)
 800a85c:	200a      	movs	r0, #10
 800a85e:	f7f6 f8f1 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800a862:	494b      	ldr	r1, [pc, #300]	; (800a990 <OTM8009A_Init+0x340>)
 800a864:	2000      	movs	r0, #0
 800a866:	f7f6 f8ed 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800a86a:	497b      	ldr	r1, [pc, #492]	; (800aa58 <OTM8009A_Init+0x408>)
 800a86c:	200a      	movs	r0, #10
 800a86e:	f7f6 f8e9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800a872:	496f      	ldr	r1, [pc, #444]	; (800aa30 <OTM8009A_Init+0x3e0>)
 800a874:	2000      	movs	r0, #0
 800a876:	f7f6 f8e5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 800a87a:	4978      	ldr	r1, [pc, #480]	; (800aa5c <OTM8009A_Init+0x40c>)
 800a87c:	200f      	movs	r0, #15
 800a87e:	f7f6 f8e1 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800a882:	4962      	ldr	r1, [pc, #392]	; (800aa0c <OTM8009A_Init+0x3bc>)
 800a884:	2000      	movs	r0, #0
 800a886:	f7f6 f8dd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 800a88a:	4975      	ldr	r1, [pc, #468]	; (800aa60 <OTM8009A_Init+0x410>)
 800a88c:	200f      	movs	r0, #15
 800a88e:	f7f6 f8d9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800a892:	4960      	ldr	r1, [pc, #384]	; (800aa14 <OTM8009A_Init+0x3c4>)
 800a894:	2000      	movs	r0, #0
 800a896:	f7f6 f8d5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 800a89a:	4972      	ldr	r1, [pc, #456]	; (800aa64 <OTM8009A_Init+0x414>)
 800a89c:	200a      	movs	r0, #10
 800a89e:	f7f6 f8d1 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800a8a2:	495e      	ldr	r1, [pc, #376]	; (800aa1c <OTM8009A_Init+0x3cc>)
 800a8a4:	2000      	movs	r0, #0
 800a8a6:	f7f6 f8cd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 800a8aa:	496f      	ldr	r1, [pc, #444]	; (800aa68 <OTM8009A_Init+0x418>)
 800a8ac:	200f      	movs	r0, #15
 800a8ae:	f7f6 f8c9 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800a8b2:	495c      	ldr	r1, [pc, #368]	; (800aa24 <OTM8009A_Init+0x3d4>)
 800a8b4:	2000      	movs	r0, #0
 800a8b6:	f7f6 f8c5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800a8ba:	496c      	ldr	r1, [pc, #432]	; (800aa6c <OTM8009A_Init+0x41c>)
 800a8bc:	200f      	movs	r0, #15
 800a8be:	f7f6 f8c1 	bl	8000a44 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800a8c2:	493f      	ldr	r1, [pc, #252]	; (800a9c0 <OTM8009A_Init+0x370>)
 800a8c4:	2000      	movs	r0, #0
 800a8c6:	f7f6 f8bd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800a8ca:	4969      	ldr	r1, [pc, #420]	; (800aa70 <OTM8009A_Init+0x420>)
 800a8cc:	2000      	movs	r0, #0
 800a8ce:	f7f6 f8b9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800a8d2:	4968      	ldr	r1, [pc, #416]	; (800aa74 <OTM8009A_Init+0x424>)
 800a8d4:	2000      	movs	r0, #0
 800a8d6:	f7f6 f8b5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800a8da:	4967      	ldr	r1, [pc, #412]	; (800aa78 <OTM8009A_Init+0x428>)
 800a8dc:	2000      	movs	r0, #0
 800a8de:	f7f6 f8b1 	bl	8000a44 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800a8e2:	4966      	ldr	r1, [pc, #408]	; (800aa7c <OTM8009A_Init+0x42c>)
 800a8e4:	2000      	movs	r0, #0
 800a8e6:	f7f6 f8ad 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800a8ea:	4965      	ldr	r1, [pc, #404]	; (800aa80 <OTM8009A_Init+0x430>)
 800a8ec:	2000      	movs	r0, #0
 800a8ee:	f7f6 f8a9 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a8f2:	4925      	ldr	r1, [pc, #148]	; (800a988 <OTM8009A_Init+0x338>)
 800a8f4:	2000      	movs	r0, #0
 800a8f6:	f7f6 f8a5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800a8fa:	4962      	ldr	r1, [pc, #392]	; (800aa84 <OTM8009A_Init+0x434>)
 800a8fc:	2003      	movs	r0, #3
 800a8fe:	f7f6 f8a1 	bl	8000a44 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a902:	4921      	ldr	r1, [pc, #132]	; (800a988 <OTM8009A_Init+0x338>)
 800a904:	2000      	movs	r0, #0
 800a906:	f7f6 f89d 	bl	8000a44 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a90a:	491f      	ldr	r1, [pc, #124]	; (800a988 <OTM8009A_Init+0x338>)
 800a90c:	2000      	movs	r0, #0
 800a90e:	f7f6 f899 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 800a912:	495d      	ldr	r1, [pc, #372]	; (800aa88 <OTM8009A_Init+0x438>)
 800a914:	2010      	movs	r0, #16
 800a916:	f7f6 f895 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800a91a:	491b      	ldr	r1, [pc, #108]	; (800a988 <OTM8009A_Init+0x338>)
 800a91c:	2000      	movs	r0, #0
 800a91e:	f7f6 f891 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 800a922:	495a      	ldr	r1, [pc, #360]	; (800aa8c <OTM8009A_Init+0x43c>)
 800a924:	2010      	movs	r0, #16
 800a926:	f7f6 f88d 	bl	8000a44 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800a92a:	2000      	movs	r0, #0
 800a92c:	4958      	ldr	r1, [pc, #352]	; (800aa90 <OTM8009A_Init+0x440>)
 800a92e:	f7f6 f889 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 800a932:	2078      	movs	r0, #120	; 0x78
 800a934:	f000 f9da 	bl	800acec <OTM8009A_IO_Delay>

  switch(ColorCoding)
 800a938:	2c00      	cmp	r4, #0
 800a93a:	f000 80c9 	beq.w	800aad0 <OTM8009A_Init+0x480>
 800a93e:	2c02      	cmp	r4, #2
 800a940:	d103      	bne.n	800a94a <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 800a942:	4954      	ldr	r1, [pc, #336]	; (800aa94 <OTM8009A_Init+0x444>)
 800a944:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800a946:	f7f6 f87d 	bl	8000a44 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800a94a:	2d01      	cmp	r5, #1
 800a94c:	d10b      	bne.n	800a966 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800a94e:	4952      	ldr	r1, [pc, #328]	; (800aa98 <OTM8009A_Init+0x448>)
 800a950:	2000      	movs	r0, #0
 800a952:	f7f6 f877 	bl	8000a44 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 800a956:	4951      	ldr	r1, [pc, #324]	; (800aa9c <OTM8009A_Init+0x44c>)
 800a958:	2004      	movs	r0, #4
 800a95a:	f7f6 f873 	bl	8000a44 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800a95e:	4950      	ldr	r1, [pc, #320]	; (800aaa0 <OTM8009A_Init+0x450>)
 800a960:	2004      	movs	r0, #4
 800a962:	f7f6 f86f 	bl	8000a44 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 800a966:	494f      	ldr	r1, [pc, #316]	; (800aaa4 <OTM8009A_Init+0x454>)
 800a968:	2000      	movs	r0, #0
 800a96a:	f7f6 f86b 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800a96e:	494e      	ldr	r1, [pc, #312]	; (800aaa8 <OTM8009A_Init+0x458>)
 800a970:	2000      	movs	r0, #0
 800a972:	f7f6 f867 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 800a976:	494d      	ldr	r1, [pc, #308]	; (800aaac <OTM8009A_Init+0x45c>)
 800a978:	2000      	movs	r0, #0
 800a97a:	f7f6 f863 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 800a97e:	494c      	ldr	r1, [pc, #304]	; (800aab0 <OTM8009A_Init+0x460>)
 800a980:	2000      	movs	r0, #0
 800a982:	f7f6 f85f 	bl	8000a44 <DSI_IO_WriteCmd>
 800a986:	e095      	b.n	800aab4 <OTM8009A_Init+0x464>
 800a988:	08028d44 	.word	0x08028d44
 800a98c:	08028daa 	.word	0x08028daa
 800a990:	08028d5a 	.word	0x08028d5a
 800a994:	08028e30 	.word	0x08028e30
 800a998:	08028d70 	.word	0x08028d70
 800a99c:	08028d86 	.word	0x08028d86
 800a9a0:	08028d9c 	.word	0x08028d9c
 800a9a4:	08028da2 	.word	0x08028da2
 800a9a8:	08028da4 	.word	0x08028da4
 800a9ac:	08028da6 	.word	0x08028da6
 800a9b0:	08028da8 	.word	0x08028da8
 800a9b4:	08028d46 	.word	0x08028d46
 800a9b8:	08028d48 	.word	0x08028d48
 800a9bc:	08028d4a 	.word	0x08028d4a
 800a9c0:	08028d4c 	.word	0x08028d4c
 800a9c4:	08028d4e 	.word	0x08028d4e
 800a9c8:	08028d50 	.word	0x08028d50
 800a9cc:	08028d52 	.word	0x08028d52
 800a9d0:	08028d54 	.word	0x08028d54
 800a9d4:	08028d56 	.word	0x08028d56
 800a9d8:	08028d58 	.word	0x08028d58
 800a9dc:	08028eae 	.word	0x08028eae
 800a9e0:	08028d5c 	.word	0x08028d5c
 800a9e4:	08028d5e 	.word	0x08028d5e
 800a9e8:	08028d60 	.word	0x08028d60
 800a9ec:	08028d62 	.word	0x08028d62
 800a9f0:	08028d64 	.word	0x08028d64
 800a9f4:	08028d66 	.word	0x08028d66
 800a9f8:	08028d68 	.word	0x08028d68
 800a9fc:	08028d6a 	.word	0x08028d6a
 800aa00:	08028d6c 	.word	0x08028d6c
 800aa04:	08028eb1 	.word	0x08028eb1
 800aa08:	08028eb4 	.word	0x08028eb4
 800aa0c:	08028d6e 	.word	0x08028d6e
 800aa10:	08028ebb 	.word	0x08028ebb
 800aa14:	08028d72 	.word	0x08028d72
 800aa18:	08028eca 	.word	0x08028eca
 800aa1c:	08028d74 	.word	0x08028d74
 800aa20:	08028dae 	.word	0x08028dae
 800aa24:	08028d76 	.word	0x08028d76
 800aa28:	08028d94 	.word	0x08028d94
 800aa2c:	08028db9 	.word	0x08028db9
 800aa30:	08028d78 	.word	0x08028d78
 800aa34:	08028dc4 	.word	0x08028dc4
 800aa38:	08028dd4 	.word	0x08028dd4
 800aa3c:	08028de4 	.word	0x08028de4
 800aa40:	08028def 	.word	0x08028def
 800aa44:	08028dff 	.word	0x08028dff
 800aa48:	08028d7a 	.word	0x08028d7a
 800aa4c:	08028e0f 	.word	0x08028e0f
 800aa50:	08028d7c 	.word	0x08028d7c
 800aa54:	08028e1a 	.word	0x08028e1a
 800aa58:	08028e25 	.word	0x08028e25
 800aa5c:	08028e33 	.word	0x08028e33
 800aa60:	08028e43 	.word	0x08028e43
 800aa64:	08028e53 	.word	0x08028e53
 800aa68:	08028e5e 	.word	0x08028e5e
 800aa6c:	08028e6e 	.word	0x08028e6e
 800aa70:	08028d96 	.word	0x08028d96
 800aa74:	08028d98 	.word	0x08028d98
 800aa78:	08028d9a 	.word	0x08028d9a
 800aa7c:	08028d9e 	.word	0x08028d9e
 800aa80:	08028da0 	.word	0x08028da0
 800aa84:	08028e7e 	.word	0x08028e7e
 800aa88:	08028e8c 	.word	0x08028e8c
 800aa8c:	08028e9d 	.word	0x08028e9d
 800aa90:	08028d7e 	.word	0x08028d7e
 800aa94:	08028d80 	.word	0x08028d80
 800aa98:	08028d84 	.word	0x08028d84
 800aa9c:	08028e82 	.word	0x08028e82
 800aaa0:	08028e87 	.word	0x08028e87
 800aaa4:	08028d88 	.word	0x08028d88
 800aaa8:	08028d8a 	.word	0x08028d8a
 800aaac:	08028d8c 	.word	0x08028d8c
 800aab0:	08028d8e 	.word	0x08028d8e

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 800aab4:	4908      	ldr	r1, [pc, #32]	; (800aad8 <OTM8009A_Init+0x488>)
 800aab6:	2000      	movs	r0, #0
 800aab8:	f7f5 ffc4 	bl	8000a44 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800aabc:	4907      	ldr	r1, [pc, #28]	; (800aadc <OTM8009A_Init+0x48c>)
 800aabe:	2000      	movs	r0, #0
 800aac0:	f7f5 ffc0 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 800aac4:	4906      	ldr	r1, [pc, #24]	; (800aae0 <OTM8009A_Init+0x490>)
 800aac6:	2000      	movs	r0, #0
 800aac8:	f7f5 ffbc 	bl	8000a44 <DSI_IO_WriteCmd>

  return 0;
}
 800aacc:	2000      	movs	r0, #0
 800aace:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800aad0:	4904      	ldr	r1, [pc, #16]	; (800aae4 <OTM8009A_Init+0x494>)
 800aad2:	4620      	mov	r0, r4
 800aad4:	e737      	b.n	800a946 <OTM8009A_Init+0x2f6>
 800aad6:	bf00      	nop
 800aad8:	08028d90 	.word	0x08028d90
 800aadc:	08028d44 	.word	0x08028d44
 800aae0:	08028d92 	.word	0x08028d92
 800aae4:	08028d82 	.word	0x08028d82

0800aae8 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 800aae8:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800aaea:	4d2e      	ldr	r5, [pc, #184]	; (800aba4 <I2C1_Init+0xbc>)
{
 800aaec:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800aaee:	4628      	mov	r0, r5
 800aaf0:	f002 f96a 	bl	800cdc8 <HAL_I2C_GetState>
 800aaf4:	4604      	mov	r4, r0
 800aaf6:	2800      	cmp	r0, #0
 800aaf8:	d151      	bne.n	800ab9e <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800aafa:	4a2b      	ldr	r2, [pc, #172]	; (800aba8 <I2C1_Init+0xc0>)
 800aafc:	4b2b      	ldr	r3, [pc, #172]	; (800abac <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800aafe:	4e2c      	ldr	r6, [pc, #176]	; (800abb0 <I2C1_Init+0xc8>)
 800ab00:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800ab02:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 800ab06:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800ab0a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800ab0e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800ab12:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 800ab16:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800ab18:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800ab1a:	f043 0302 	orr.w	r3, r3, #2
 800ab1e:	6333      	str	r3, [r6, #48]	; 0x30
 800ab20:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 800ab22:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800ab24:	f003 0302 	and.w	r3, r3, #2
 800ab28:	9301      	str	r3, [sp, #4]
 800ab2a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800ab2c:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ab30:	2312      	movs	r3, #18
 800ab32:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 800ab36:	2002      	movs	r0, #2
 800ab38:	2304      	movs	r3, #4
 800ab3a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800ab3e:	a903      	add	r1, sp, #12
 800ab40:	481c      	ldr	r0, [pc, #112]	; (800abb4 <I2C1_Init+0xcc>)
 800ab42:	f001 fb6f 	bl	800c224 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800ab46:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800ab4a:	481a      	ldr	r0, [pc, #104]	; (800abb4 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800ab4c:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800ab4e:	a903      	add	r1, sp, #12
 800ab50:	f001 fb68 	bl	800c224 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 800ab54:	9402      	str	r4, [sp, #8]
 800ab56:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800ab58:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800ab5c:	6433      	str	r3, [r6, #64]	; 0x40
 800ab5e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800ab60:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800ab64:	9302      	str	r3, [sp, #8]
 800ab66:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 800ab68:	6a33      	ldr	r3, [r6, #32]
 800ab6a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800ab6e:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 800ab70:	6a33      	ldr	r3, [r6, #32]
 800ab72:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800ab76:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 800ab78:	4622      	mov	r2, r4
 800ab7a:	2105      	movs	r1, #5
 800ab7c:	201f      	movs	r0, #31
 800ab7e:	f000 fd1d 	bl	800b5bc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 800ab82:	201f      	movs	r0, #31
 800ab84:	f000 fd4c 	bl	800b620 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 800ab88:	4622      	mov	r2, r4
 800ab8a:	2105      	movs	r1, #5
 800ab8c:	2020      	movs	r0, #32
 800ab8e:	f000 fd15 	bl	800b5bc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 800ab92:	2020      	movs	r0, #32
 800ab94:	f000 fd44 	bl	800b620 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 800ab98:	4628      	mov	r0, r5
 800ab9a:	f001 febb 	bl	800c914 <HAL_I2C_Init>
  }
}
 800ab9e:	b008      	add	sp, #32
 800aba0:	bd70      	pop	{r4, r5, r6, pc}
 800aba2:	bf00      	nop
 800aba4:	20016a40 	.word	0x20016a40
 800aba8:	40005400 	.word	0x40005400
 800abac:	00061a80 	.word	0x00061a80
 800abb0:	40023800 	.word	0x40023800
 800abb4:	40020400 	.word	0x40020400

0800abb8 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 800abb8:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 800abba:	4803      	ldr	r0, [pc, #12]	; (800abc8 <I2C1_Error.isra.0+0x10>)
 800abbc:	f001 ff52 	bl	800ca64 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 800abc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 800abc4:	f7ff bf90 	b.w	800aae8 <I2C1_Init>
 800abc8:	20016a40 	.word	0x20016a40

0800abcc <BSP_PB_Init>:
{
 800abcc:	b510      	push	{r4, lr}
 800abce:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 800abd0:	4b19      	ldr	r3, [pc, #100]	; (800ac38 <BSP_PB_Init+0x6c>)
 800abd2:	2400      	movs	r4, #0
 800abd4:	9400      	str	r4, [sp, #0]
 800abd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800abd8:	f042 0201 	orr.w	r2, r2, #1
 800abdc:	631a      	str	r2, [r3, #48]	; 0x30
 800abde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800abe0:	f003 0301 	and.w	r3, r3, #1
 800abe4:	9300      	str	r3, [sp, #0]
 800abe6:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 800abe8:	b969      	cbnz	r1, 800ac06 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800abea:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800abec:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800abf0:	2302      	movs	r3, #2
 800abf2:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800abf4:	4b11      	ldr	r3, [pc, #68]	; (800ac3c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 800abf6:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800abf8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800abfc:	a901      	add	r1, sp, #4
 800abfe:	f001 fb11 	bl	800c224 <HAL_GPIO_Init>
}
 800ac02:	b006      	add	sp, #24
 800ac04:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 800ac06:	2901      	cmp	r1, #1
 800ac08:	d1fb      	bne.n	800ac02 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800ac0a:	2302      	movs	r3, #2
 800ac0c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800ac0e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800ac12:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800ac14:	4b09      	ldr	r3, [pc, #36]	; (800ac3c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800ac16:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800ac18:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800ac1c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800ac1e:	a901      	add	r1, sp, #4
 800ac20:	f001 fb00 	bl	800c224 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 800ac24:	4622      	mov	r2, r4
 800ac26:	210f      	movs	r1, #15
 800ac28:	2006      	movs	r0, #6
 800ac2a:	f000 fcc7 	bl	800b5bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800ac2e:	2006      	movs	r0, #6
 800ac30:	f000 fcf6 	bl	800b620 <HAL_NVIC_EnableIRQ>
}
 800ac34:	e7e5      	b.n	800ac02 <BSP_PB_Init+0x36>
 800ac36:	bf00      	nop
 800ac38:	40023800 	.word	0x40023800
 800ac3c:	20000048 	.word	0x20000048

0800ac40 <BSP_PB_GetState>:
{
 800ac40:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800ac42:	4b03      	ldr	r3, [pc, #12]	; (800ac50 <BSP_PB_GetState+0x10>)
 800ac44:	2101      	movs	r1, #1
 800ac46:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800ac4a:	f001 fc73 	bl	800c534 <HAL_GPIO_ReadPin>
}
 800ac4e:	bd08      	pop	{r3, pc}
 800ac50:	20000048 	.word	0x20000048

0800ac54 <TS_IO_Init>:
 800ac54:	f7ff bf48 	b.w	800aae8 <I2C1_Init>

0800ac58 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 800ac58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800ac5a:	2301      	movs	r3, #1
 800ac5c:	f88d 2017 	strb.w	r2, [sp, #23]
 800ac60:	2264      	movs	r2, #100	; 0x64
 800ac62:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ac66:	f10d 0217 	add.w	r2, sp, #23
 800ac6a:	9200      	str	r2, [sp, #0]
 800ac6c:	460a      	mov	r2, r1
 800ac6e:	4601      	mov	r1, r0
 800ac70:	4804      	ldr	r0, [pc, #16]	; (800ac84 <TS_IO_Write+0x2c>)
 800ac72:	f001 ff11 	bl	800ca98 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800ac76:	b108      	cbz	r0, 800ac7c <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 800ac78:	f7ff ff9e 	bl	800abb8 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 800ac7c:	b007      	add	sp, #28
 800ac7e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac82:	bf00      	nop
 800ac84:	20016a40 	.word	0x20016a40

0800ac88 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800ac88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 800ac8a:	2300      	movs	r3, #0
{
 800ac8c:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800ac8e:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800ac92:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ac96:	2301      	movs	r3, #1
 800ac98:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ac9c:	f10d 0117 	add.w	r1, sp, #23
 800aca0:	9100      	str	r1, [sp, #0]
 800aca2:	4601      	mov	r1, r0
 800aca4:	4805      	ldr	r0, [pc, #20]	; (800acbc <TS_IO_Read+0x34>)
 800aca6:	f001 ff87 	bl	800cbb8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800acaa:	b108      	cbz	r0, 800acb0 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 800acac:	f7ff ff84 	bl	800abb8 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 800acb0:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800acb4:	b007      	add	sp, #28
 800acb6:	f85d fb04 	ldr.w	pc, [sp], #4
 800acba:	bf00      	nop
 800acbc:	20016a40 	.word	0x20016a40

0800acc0 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 800acc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800acc2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800acc6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800acca:	9200      	str	r2, [sp, #0]
 800accc:	2301      	movs	r3, #1
 800acce:	460a      	mov	r2, r1
 800acd0:	4601      	mov	r1, r0
 800acd2:	4805      	ldr	r0, [pc, #20]	; (800ace8 <TS_IO_ReadMultiple+0x28>)
 800acd4:	f001 ff70 	bl	800cbb8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800acd8:	4604      	mov	r4, r0
 800acda:	b108      	cbz	r0, 800ace0 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 800acdc:	f7ff ff6c 	bl	800abb8 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 800ace0:	b2a0      	uxth	r0, r4
 800ace2:	b004      	add	sp, #16
 800ace4:	bd10      	pop	{r4, pc}
 800ace6:	bf00      	nop
 800ace8:	20016a40 	.word	0x20016a40

0800acec <OTM8009A_IO_Delay>:
 800acec:	f000 bc40 	b.w	800b570 <HAL_Delay>

0800acf0 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800acf0:	b500      	push	{lr}
 800acf2:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800acf4:	f44f 7280 	mov.w	r2, #256	; 0x100
 800acf8:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800acfa:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800acfe:	2205      	movs	r2, #5
 800ad00:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800ad02:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800ad04:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800ad06:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 800ad08:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800ad0c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800ad10:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 800ad14:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800ad16:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 800ad18:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800ad1a:	2210      	movs	r2, #16
 800ad1c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800ad1e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800ad22:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 800ad24:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800ad26:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800ad28:	a906      	add	r1, sp, #24
 800ad2a:	466a      	mov	r2, sp
 800ad2c:	4804      	ldr	r0, [pc, #16]	; (800ad40 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800ad2e:	f002 fbce 	bl	800d4ce <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800ad32:	3800      	subs	r0, #0
 800ad34:	bf18      	it	ne
 800ad36:	2001      	movne	r0, #1
 800ad38:	b015      	add	sp, #84	; 0x54
 800ad3a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ad3e:	bf00      	nop
 800ad40:	20027e90 	.word	0x20027e90

0800ad44 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800ad44:	b500      	push	{lr}
 800ad46:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800ad48:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ad4c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800ad4e:	2306      	movs	r3, #6
 800ad50:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800ad52:	4817      	ldr	r0, [pc, #92]	; (800adb0 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800ad54:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800ad56:	f241 3288 	movw	r2, #5000	; 0x1388
 800ad5a:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800ad5c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800ad60:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 800ad64:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800ad66:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800ad68:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800ad6a:	f002 fb6c 	bl	800d446 <HAL_QSPI_Command>
 800ad6e:	b9e0      	cbnz	r0, 800adaa <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 800ad70:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800ad72:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800ad76:	2201      	movs	r2, #1
 800ad78:	2310      	movs	r3, #16
 800ad7a:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800ad7e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800ad82:	2305      	movs	r3, #5
 800ad84:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800ad88:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800ad8c:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800ad8e:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800ad90:	4807      	ldr	r0, [pc, #28]	; (800adb0 <QSPI_WriteEnable.constprop.0+0x6c>)
 800ad92:	f241 3388 	movw	r3, #5000	; 0x1388
 800ad96:	466a      	mov	r2, sp
 800ad98:	a906      	add	r1, sp, #24
 800ad9a:	f002 fb98 	bl	800d4ce <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 800ad9e:	3800      	subs	r0, #0
 800ada0:	bf18      	it	ne
 800ada2:	2001      	movne	r0, #1
}
 800ada4:	b015      	add	sp, #84	; 0x54
 800ada6:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800adaa:	2001      	movs	r0, #1
 800adac:	e7fa      	b.n	800ada4 <QSPI_WriteEnable.constprop.0+0x60>
 800adae:	bf00      	nop
 800adb0:	20027e90 	.word	0x20027e90

0800adb4 <BSP_QSPI_EnableMemoryMappedMode>:
{
 800adb4:	b500      	push	{lr}
 800adb6:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800adb8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800adbc:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800adbe:	23eb      	movs	r3, #235	; 0xeb
 800adc0:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800adc2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800adc6:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 800adc8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800adcc:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800adce:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 800add2:	2300      	movs	r3, #0
 800add4:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800add8:	220a      	movs	r2, #10
 800adda:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800addc:	a902      	add	r1, sp, #8
 800adde:	466a      	mov	r2, sp
 800ade0:	4806      	ldr	r0, [pc, #24]	; (800adfc <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800ade2:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800ade4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 800ade8:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800adea:	f002 fbc0 	bl	800d56e <HAL_QSPI_MemoryMapped>
}
 800adee:	3800      	subs	r0, #0
 800adf0:	bf18      	it	ne
 800adf2:	2001      	movne	r0, #1
 800adf4:	b011      	add	sp, #68	; 0x44
 800adf6:	f85d fb04 	ldr.w	pc, [sp], #4
 800adfa:	bf00      	nop
 800adfc:	20027e90 	.word	0x20027e90

0800ae00 <BSP_QSPI_MspInit>:
{
 800ae00:	b570      	push	{r4, r5, r6, lr}
 800ae02:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 800ae04:	4b2c      	ldr	r3, [pc, #176]	; (800aeb8 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800ae06:	482d      	ldr	r0, [pc, #180]	; (800aebc <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 800ae08:	2400      	movs	r4, #0
 800ae0a:	9400      	str	r4, [sp, #0]
 800ae0c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ae0e:	f042 0202 	orr.w	r2, r2, #2
 800ae12:	639a      	str	r2, [r3, #56]	; 0x38
 800ae14:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ae16:	f002 0202 	and.w	r2, r2, #2
 800ae1a:	9200      	str	r2, [sp, #0]
 800ae1c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800ae1e:	699a      	ldr	r2, [r3, #24]
 800ae20:	f042 0202 	orr.w	r2, r2, #2
 800ae24:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800ae26:	699a      	ldr	r2, [r3, #24]
 800ae28:	f022 0202 	bic.w	r2, r2, #2
 800ae2c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800ae2e:	9401      	str	r4, [sp, #4]
 800ae30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ae32:	f042 0202 	orr.w	r2, r2, #2
 800ae36:	631a      	str	r2, [r3, #48]	; 0x30
 800ae38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ae3a:	f002 0202 	and.w	r2, r2, #2
 800ae3e:	9201      	str	r2, [sp, #4]
 800ae40:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800ae42:	9402      	str	r4, [sp, #8]
 800ae44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ae46:	f042 0220 	orr.w	r2, r2, #32
 800ae4a:	631a      	str	r2, [r3, #48]	; 0x30
 800ae4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ae4e:	f003 0320 	and.w	r3, r3, #32
 800ae52:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800ae54:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800ae56:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800ae58:	2302      	movs	r3, #2
 800ae5a:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800ae5e:	2101      	movs	r1, #1
 800ae60:	2303      	movs	r3, #3
 800ae62:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800ae66:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800ae68:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800ae6a:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800ae6c:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800ae6e:	f001 f9d9 	bl	800c224 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800ae72:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800ae76:	a903      	add	r1, sp, #12
 800ae78:	4811      	ldr	r0, [pc, #68]	; (800aec0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800ae7a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800ae7c:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800ae7e:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800ae80:	f001 f9d0 	bl	800c224 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800ae84:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ae88:	a903      	add	r1, sp, #12
 800ae8a:	480d      	ldr	r0, [pc, #52]	; (800aec0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800ae8c:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800ae8e:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ae90:	f001 f9c8 	bl	800c224 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800ae94:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ae96:	a903      	add	r1, sp, #12
 800ae98:	4809      	ldr	r0, [pc, #36]	; (800aec0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800ae9a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800ae9c:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ae9e:	f001 f9c1 	bl	800c224 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 800aea2:	4622      	mov	r2, r4
 800aea4:	210f      	movs	r1, #15
 800aea6:	205b      	movs	r0, #91	; 0x5b
 800aea8:	f000 fb88 	bl	800b5bc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800aeac:	205b      	movs	r0, #91	; 0x5b
 800aeae:	f000 fbb7 	bl	800b620 <HAL_NVIC_EnableIRQ>
}
 800aeb2:	b008      	add	sp, #32
 800aeb4:	bd70      	pop	{r4, r5, r6, pc}
 800aeb6:	bf00      	nop
 800aeb8:	40023800 	.word	0x40023800
 800aebc:	40020400 	.word	0x40020400
 800aec0:	40021400 	.word	0x40021400

0800aec4 <BSP_QSPI_Init>:
{
 800aec4:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 800aec6:	4c48      	ldr	r4, [pc, #288]	; (800afe8 <BSP_QSPI_Init+0x124>)
 800aec8:	4b48      	ldr	r3, [pc, #288]	; (800afec <BSP_QSPI_Init+0x128>)
 800aeca:	6023      	str	r3, [r4, #0]
{
 800aecc:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800aece:	4620      	mov	r0, r4
 800aed0:	f002 faa6 	bl	800d420 <HAL_QSPI_DeInit>
 800aed4:	4605      	mov	r5, r0
 800aed6:	b110      	cbz	r0, 800aede <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 800aed8:	2001      	movs	r0, #1
}
 800aeda:	b011      	add	sp, #68	; 0x44
 800aedc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800aede:	4601      	mov	r1, r0
 800aee0:	4620      	mov	r0, r4
 800aee2:	f7ff ff8d 	bl	800ae00 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800aee6:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800aee8:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800aeea:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800aeee:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800aef0:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 800aef4:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800aef8:	fab3 f383 	clz	r3, r3
 800aefc:	3b01      	subs	r3, #1
 800aefe:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800af00:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800af02:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800af06:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800af0a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800af0e:	f002 fa33 	bl	800d378 <HAL_QSPI_Init>
 800af12:	2800      	cmp	r0, #0
 800af14:	d1e0      	bne.n	800aed8 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800af16:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800af1a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800af1e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800af22:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 800af24:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 800af26:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800af28:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af2a:	f241 3288 	movw	r2, #5000	; 0x1388
 800af2e:	a902      	add	r1, sp, #8
 800af30:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800af32:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 800af34:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af36:	f002 fa86 	bl	800d446 <HAL_QSPI_Command>
 800af3a:	b108      	cbz	r0, 800af40 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800af3c:	2004      	movs	r0, #4
 800af3e:	e7cc      	b.n	800aeda <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 800af40:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af42:	f241 3288 	movw	r2, #5000	; 0x1388
 800af46:	a902      	add	r1, sp, #8
 800af48:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800af4a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af4c:	f002 fa7b 	bl	800d446 <HAL_QSPI_Command>
 800af50:	2800      	cmp	r0, #0
 800af52:	d1f3      	bne.n	800af3c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 800af54:	f241 3088 	movw	r0, #5000	; 0x1388
 800af58:	f7ff feca 	bl	800acf0 <QSPI_AutoPollingMemReady.constprop.0>
 800af5c:	2800      	cmp	r0, #0
 800af5e:	d1ed      	bne.n	800af3c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800af60:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800af64:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800af68:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800af6c:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800af6e:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af70:	f241 3288 	movw	r2, #5000	; 0x1388
 800af74:	a902      	add	r1, sp, #8
 800af76:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800af78:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800af7a:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800af7c:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af7e:	f002 fa62 	bl	800d446 <HAL_QSPI_Command>
 800af82:	2800      	cmp	r0, #0
 800af84:	d1da      	bne.n	800af3c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800af86:	f241 3288 	movw	r2, #5000	; 0x1388
 800af8a:	f10d 0107 	add.w	r1, sp, #7
 800af8e:	4620      	mov	r0, r4
 800af90:	f002 fbcc 	bl	800d72c <HAL_QSPI_Receive>
 800af94:	2800      	cmp	r0, #0
 800af96:	d1d1      	bne.n	800af3c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 800af98:	f7ff fed4 	bl	800ad44 <QSPI_WriteEnable.constprop.0>
 800af9c:	2800      	cmp	r0, #0
 800af9e:	d1cd      	bne.n	800af3c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 800afa0:	2381      	movs	r3, #129	; 0x81
 800afa2:	9302      	str	r3, [sp, #8]
 800afa4:	22f0      	movs	r2, #240	; 0xf0
 800afa6:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800afaa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800afae:	210a      	movs	r1, #10
 800afb0:	fab2 f282 	clz	r2, r2
 800afb4:	fa01 f202 	lsl.w	r2, r1, r2
 800afb8:	f003 030f 	and.w	r3, r3, #15
 800afbc:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800afbe:	a902      	add	r1, sp, #8
 800afc0:	f241 3288 	movw	r2, #5000	; 0x1388
 800afc4:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800afc6:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800afca:	f002 fa3c 	bl	800d446 <HAL_QSPI_Command>
 800afce:	2800      	cmp	r0, #0
 800afd0:	d1b4      	bne.n	800af3c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800afd2:	f241 3288 	movw	r2, #5000	; 0x1388
 800afd6:	f10d 0107 	add.w	r1, sp, #7
 800afda:	4620      	mov	r0, r4
 800afdc:	f002 fb4a 	bl	800d674 <HAL_QSPI_Transmit>
 800afe0:	2800      	cmp	r0, #0
 800afe2:	f43f af7a 	beq.w	800aeda <BSP_QSPI_Init+0x16>
 800afe6:	e7a9      	b.n	800af3c <BSP_QSPI_Init+0x78>
 800afe8:	20027e90 	.word	0x20027e90
 800afec:	a0001000 	.word	0xa0001000

0800aff0 <BSP_QSPI_MspDeInit>:
{
 800aff0:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800aff2:	205b      	movs	r0, #91	; 0x5b
 800aff4:	f000 fb22 	bl	800b63c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800aff8:	4814      	ldr	r0, [pc, #80]	; (800b04c <BSP_QSPI_MspDeInit+0x5c>)
 800affa:	2140      	movs	r1, #64	; 0x40
 800affc:	f001 f9f8 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800b000:	4813      	ldr	r0, [pc, #76]	; (800b050 <BSP_QSPI_MspDeInit+0x60>)
 800b002:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800b006:	f001 f9f3 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800b00a:	4811      	ldr	r0, [pc, #68]	; (800b050 <BSP_QSPI_MspDeInit+0x60>)
 800b00c:	f44f 7180 	mov.w	r1, #256	; 0x100
 800b010:	f001 f9ee 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800b014:	480e      	ldr	r0, [pc, #56]	; (800b050 <BSP_QSPI_MspDeInit+0x60>)
 800b016:	f44f 7100 	mov.w	r1, #512	; 0x200
 800b01a:	f001 f9e9 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800b01e:	480c      	ldr	r0, [pc, #48]	; (800b050 <BSP_QSPI_MspDeInit+0x60>)
 800b020:	2180      	movs	r1, #128	; 0x80
 800b022:	f001 f9e5 	bl	800c3f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800b026:	480a      	ldr	r0, [pc, #40]	; (800b050 <BSP_QSPI_MspDeInit+0x60>)
 800b028:	2140      	movs	r1, #64	; 0x40
 800b02a:	f001 f9e1 	bl	800c3f0 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800b02e:	4b09      	ldr	r3, [pc, #36]	; (800b054 <BSP_QSPI_MspDeInit+0x64>)
 800b030:	699a      	ldr	r2, [r3, #24]
 800b032:	f042 0202 	orr.w	r2, r2, #2
 800b036:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800b038:	699a      	ldr	r2, [r3, #24]
 800b03a:	f022 0202 	bic.w	r2, r2, #2
 800b03e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800b040:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800b042:	f022 0202 	bic.w	r2, r2, #2
 800b046:	639a      	str	r2, [r3, #56]	; 0x38
}
 800b048:	bd08      	pop	{r3, pc}
 800b04a:	bf00      	nop
 800b04c:	40020400 	.word	0x40020400
 800b050:	40021400 	.word	0x40021400
 800b054:	40023800 	.word	0x40023800

0800b058 <BSP_QSPI_DeInit>:
{
 800b058:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800b05a:	4d08      	ldr	r5, [pc, #32]	; (800b07c <BSP_QSPI_DeInit+0x24>)
 800b05c:	4b08      	ldr	r3, [pc, #32]	; (800b080 <BSP_QSPI_DeInit+0x28>)
 800b05e:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800b060:	4628      	mov	r0, r5
 800b062:	f002 f9dd 	bl	800d420 <HAL_QSPI_DeInit>
 800b066:	4604      	mov	r4, r0
 800b068:	b928      	cbnz	r0, 800b076 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800b06a:	4601      	mov	r1, r0
 800b06c:	4628      	mov	r0, r5
 800b06e:	f7ff ffbf 	bl	800aff0 <BSP_QSPI_MspDeInit>
}
 800b072:	4620      	mov	r0, r4
 800b074:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800b076:	2401      	movs	r4, #1
 800b078:	e7fb      	b.n	800b072 <BSP_QSPI_DeInit+0x1a>
 800b07a:	bf00      	nop
 800b07c:	20027e90 	.word	0x20027e90
 800b080:	a0001000 	.word	0xa0001000

0800b084 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 800b084:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800b088:	4c21      	ldr	r4, [pc, #132]	; (800b110 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b08a:	4d22      	ldr	r5, [pc, #136]	; (800b114 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b08c:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800b08e:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b092:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b094:	4621      	mov	r1, r4
{
 800b096:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b098:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b09c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b09e:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800b0a2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800b0a6:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0aa:	f002 ffdf 	bl	800e06c <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800b0ae:	4630      	mov	r0, r6
 800b0b0:	f000 fa5e 	bl	800b570 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800b0b4:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0b6:	4621      	mov	r1, r4
 800b0b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b0bc:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b0be:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800b0c2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0c6:	f002 ffd1 	bl	800e06c <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800b0ca:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b0cc:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0d0:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800b0d2:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b0d8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800b0da:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0de:	f002 ffc5 	bl	800e06c <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800b0e2:	f44f 730c 	mov.w	r3, #560	; 0x230
 800b0e6:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 800b0e8:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b0ea:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0ee:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800b0f0:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800b0f2:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b0f8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800b0fa:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b0fc:	f002 ffb6 	bl	800e06c <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800b100:	4649      	mov	r1, r9
 800b102:	4628      	mov	r0, r5
}
 800b104:	b003      	add	sp, #12
 800b106:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800b10a:	f002 bfc6 	b.w	800e09a <HAL_SDRAM_ProgramRefreshRate>
 800b10e:	bf00      	nop
 800b110:	20016a94 	.word	0x20016a94
 800b114:	20016b80 	.word	0x20016b80

0800b118 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800b118:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800b11a:	4606      	mov	r6, r0
{
 800b11c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800b11e:	2800      	cmp	r0, #0
 800b120:	f000 80bd 	beq.w	800b29e <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800b124:	4b5f      	ldr	r3, [pc, #380]	; (800b2a4 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800b126:	4860      	ldr	r0, [pc, #384]	; (800b2a8 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b128:	4c60      	ldr	r4, [pc, #384]	; (800b2ac <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800b12a:	2500      	movs	r5, #0
 800b12c:	9500      	str	r5, [sp, #0]
 800b12e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800b130:	f042 0201 	orr.w	r2, r2, #1
 800b134:	639a      	str	r2, [r3, #56]	; 0x38
 800b136:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800b138:	f002 0201 	and.w	r2, r2, #1
 800b13c:	9200      	str	r2, [sp, #0]
 800b13e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 800b140:	9501      	str	r5, [sp, #4]
 800b142:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b144:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800b148:	631a      	str	r2, [r3, #48]	; 0x30
 800b14a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b14c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800b150:	9201      	str	r2, [sp, #4]
 800b152:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800b154:	9502      	str	r5, [sp, #8]
 800b156:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b158:	f042 0204 	orr.w	r2, r2, #4
 800b15c:	631a      	str	r2, [r3, #48]	; 0x30
 800b15e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b160:	f002 0204 	and.w	r2, r2, #4
 800b164:	9202      	str	r2, [sp, #8]
 800b166:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800b168:	9503      	str	r5, [sp, #12]
 800b16a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b16c:	f042 0208 	orr.w	r2, r2, #8
 800b170:	631a      	str	r2, [r3, #48]	; 0x30
 800b172:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b174:	f002 0208 	and.w	r2, r2, #8
 800b178:	9203      	str	r2, [sp, #12]
 800b17a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800b17c:	9504      	str	r5, [sp, #16]
 800b17e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b180:	f042 0210 	orr.w	r2, r2, #16
 800b184:	631a      	str	r2, [r3, #48]	; 0x30
 800b186:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b188:	f002 0210 	and.w	r2, r2, #16
 800b18c:	9204      	str	r2, [sp, #16]
 800b18e:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800b190:	9505      	str	r5, [sp, #20]
 800b192:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b194:	f042 0220 	orr.w	r2, r2, #32
 800b198:	631a      	str	r2, [r3, #48]	; 0x30
 800b19a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b19c:	f002 0220 	and.w	r2, r2, #32
 800b1a0:	9205      	str	r2, [sp, #20]
 800b1a2:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800b1a4:	9506      	str	r5, [sp, #24]
 800b1a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b1a8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b1ac:	631a      	str	r2, [r3, #48]	; 0x30
 800b1ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b1b0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800b1b4:	9206      	str	r2, [sp, #24]
 800b1b6:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800b1b8:	9507      	str	r5, [sp, #28]
 800b1ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b1bc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800b1c0:	631a      	str	r2, [r3, #48]	; 0x30
 800b1c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b1c4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800b1c8:	9207      	str	r2, [sp, #28]
 800b1ca:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800b1cc:	9508      	str	r5, [sp, #32]
 800b1ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b1d0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b1d4:	631a      	str	r2, [r3, #48]	; 0x30
 800b1d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b1d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b1dc:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800b1de:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800b1e0:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800b1e2:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800b1e4:	2301      	movs	r3, #1
 800b1e6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800b1ea:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800b1ec:	220c      	movs	r2, #12
 800b1ee:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800b1f0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800b1f2:	f001 f817 	bl	800c224 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800b1f6:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800b1fa:	482d      	ldr	r0, [pc, #180]	; (800b2b0 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800b1fc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800b1fe:	a909      	add	r1, sp, #36	; 0x24
 800b200:	f001 f810 	bl	800c224 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800b204:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800b208:	482a      	ldr	r0, [pc, #168]	; (800b2b4 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800b20a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800b20c:	a909      	add	r1, sp, #36	; 0x24
 800b20e:	f001 f809 	bl	800c224 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800b212:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800b216:	4828      	ldr	r0, [pc, #160]	; (800b2b8 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800b218:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800b21a:	a909      	add	r1, sp, #36	; 0x24
 800b21c:	f001 f802 	bl	800c224 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800b220:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800b224:	4825      	ldr	r0, [pc, #148]	; (800b2bc <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800b226:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800b228:	a909      	add	r1, sp, #36	; 0x24
 800b22a:	f000 fffb 	bl	800c224 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800b22e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800b232:	4823      	ldr	r0, [pc, #140]	; (800b2c0 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800b234:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800b236:	a909      	add	r1, sp, #36	; 0x24
 800b238:	f000 fff4 	bl	800c224 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800b23c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800b240:	4820      	ldr	r0, [pc, #128]	; (800b2c4 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800b242:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800b244:	a909      	add	r1, sp, #36	; 0x24
 800b246:	f000 ffed 	bl	800c224 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 800b24a:	2280      	movs	r2, #128	; 0x80
 800b24c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b250:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800b254:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800b258:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b25c:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800b260:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 800b264:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 800b268:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 800b26c:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800b270:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800b272:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800b276:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800b278:	4b13      	ldr	r3, [pc, #76]	; (800b2c8 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800b27a:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 800b27c:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800b27e:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b280:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800b282:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 800b284:	f000 fa94 	bl	800b7b0 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 800b288:	4620      	mov	r0, r4
 800b28a:	f000 fa11 	bl	800b6b0 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800b28e:	2038      	movs	r0, #56	; 0x38
 800b290:	462a      	mov	r2, r5
 800b292:	2105      	movs	r1, #5
 800b294:	f000 f992 	bl	800b5bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 800b298:	2038      	movs	r0, #56	; 0x38
 800b29a:	f000 f9c1 	bl	800b620 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800b29e:	b00e      	add	sp, #56	; 0x38
 800b2a0:	bd70      	pop	{r4, r5, r6, pc}
 800b2a2:	bf00      	nop
 800b2a4:	40023800 	.word	0x40023800
 800b2a8:	40020800 	.word	0x40020800
 800b2ac:	20016ac0 	.word	0x20016ac0
 800b2b0:	40020c00 	.word	0x40020c00
 800b2b4:	40021000 	.word	0x40021000
 800b2b8:	40021400 	.word	0x40021400
 800b2bc:	40021800 	.word	0x40021800
 800b2c0:	40021c00 	.word	0x40021c00
 800b2c4:	40022000 	.word	0x40022000
 800b2c8:	40026410 	.word	0x40026410

0800b2cc <BSP_SDRAM_Init>:
{
 800b2cc:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800b2ce:	4c19      	ldr	r4, [pc, #100]	; (800b334 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 800b2d0:	4d19      	ldr	r5, [pc, #100]	; (800b338 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800b2d2:	4b1a      	ldr	r3, [pc, #104]	; (800b33c <BSP_SDRAM_Init+0x70>)
 800b2d4:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800b2d6:	2107      	movs	r1, #7
 800b2d8:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800b2da:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 800b2dc:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800b2e0:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 800b2e4:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 800b2e8:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800b2ea:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800b2ec:	2340      	movs	r3, #64	; 0x40
 800b2ee:	2220      	movs	r2, #32
 800b2f0:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800b2f4:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800b2f6:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800b2fa:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800b2fe:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800b302:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800b306:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800b30a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800b30c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800b310:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800b312:	f7ff ff01 	bl	800b118 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800b316:	4629      	mov	r1, r5
 800b318:	4620      	mov	r0, r4
 800b31a:	f002 fe79 	bl	800e010 <HAL_SDRAM_Init>
 800b31e:	4c08      	ldr	r4, [pc, #32]	; (800b340 <BSP_SDRAM_Init+0x74>)
 800b320:	3800      	subs	r0, #0
 800b322:	bf18      	it	ne
 800b324:	2001      	movne	r0, #1
 800b326:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 800b328:	f240 5069 	movw	r0, #1385	; 0x569
 800b32c:	f7ff feaa 	bl	800b084 <BSP_SDRAM_Initialization_sequence>
}
 800b330:	7820      	ldrb	r0, [r4, #0]
 800b332:	bd38      	pop	{r3, r4, r5, pc}
 800b334:	20016b80 	.word	0x20016b80
 800b338:	20016aa4 	.word	0x20016aa4
 800b33c:	a0000140 	.word	0xa0000140
 800b340:	2000004c 	.word	0x2000004c

0800b344 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800b344:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800b346:	b148      	cbz	r0, 800b35c <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 800b348:	2038      	movs	r0, #56	; 0x38
 800b34a:	f000 f977 	bl	800b63c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800b34e:	4804      	ldr	r0, [pc, #16]	; (800b360 <BSP_SDRAM_MspDeInit+0x1c>)
 800b350:	4b04      	ldr	r3, [pc, #16]	; (800b364 <BSP_SDRAM_MspDeInit+0x20>)
 800b352:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800b354:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 800b358:	f000 ba2a 	b.w	800b7b0 <HAL_DMA_DeInit>
}
 800b35c:	bd08      	pop	{r3, pc}
 800b35e:	bf00      	nop
 800b360:	20016b20 	.word	0x20016b20
 800b364:	40026410 	.word	0x40026410

0800b368 <BSP_SDRAM_DeInit>:
{
 800b368:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800b36a:	4c07      	ldr	r4, [pc, #28]	; (800b388 <BSP_SDRAM_DeInit+0x20>)
 800b36c:	4b07      	ldr	r3, [pc, #28]	; (800b38c <BSP_SDRAM_DeInit+0x24>)
 800b36e:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800b370:	4620      	mov	r0, r4
 800b372:	f002 fe6d 	bl	800e050 <HAL_SDRAM_DeInit>
 800b376:	4d06      	ldr	r5, [pc, #24]	; (800b390 <BSP_SDRAM_DeInit+0x28>)
 800b378:	4601      	mov	r1, r0
 800b37a:	b918      	cbnz	r0, 800b384 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 800b37c:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800b37e:	4620      	mov	r0, r4
 800b380:	f7ff ffe0 	bl	800b344 <BSP_SDRAM_MspDeInit>
}
 800b384:	7828      	ldrb	r0, [r5, #0]
 800b386:	bd38      	pop	{r3, r4, r5, pc}
 800b388:	20016b80 	.word	0x20016b80
 800b38c:	a0000140 	.word	0xa0000140
 800b390:	2000004d 	.word	0x2000004d

0800b394 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 800b394:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 800b398:	4d19      	ldr	r5, [pc, #100]	; (800b400 <BSP_TS_Init+0x6c>)
 800b39a:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800b40c <BSP_TS_Init+0x78>
 800b39e:	682b      	ldr	r3, [r5, #0]
{
 800b3a0:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 800b3a2:	f898 0000 	ldrb.w	r0, [r8]
{
 800b3a6:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 800b3a8:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 800b3aa:	686b      	ldr	r3, [r5, #4]
 800b3ac:	2054      	movs	r0, #84	; 0x54
 800b3ae:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 800b3b0:	b2c0      	uxtb	r0, r0
 800b3b2:	2811      	cmp	r0, #17
 800b3b4:	4646      	mov	r6, r8
 800b3b6:	46a9      	mov	r9, r5
 800b3b8:	d00b      	beq.n	800b3d2 <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 800b3ba:	686b      	ldr	r3, [r5, #4]
 800b3bc:	2070      	movs	r0, #112	; 0x70
 800b3be:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800b3c0:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800b3c2:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800b3c4:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800b3c6:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800b3ca:	d005      	beq.n	800b3d8 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800b3cc:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800b3ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800b3d2:	2354      	movs	r3, #84	; 0x54
 800b3d4:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 800b3d8:	4b0a      	ldr	r3, [pc, #40]	; (800b404 <BSP_TS_Init+0x70>)
 800b3da:	4d0b      	ldr	r5, [pc, #44]	; (800b408 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 800b3dc:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800b3de:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800b3e2:	42bc      	cmp	r4, r7
 800b3e4:	bf34      	ite	cc
 800b3e6:	2101      	movcc	r1, #1
 800b3e8:	210c      	movcs	r1, #12
 800b3ea:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 800b3ec:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800b3f0:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800b3f2:	682b      	ldr	r3, [r5, #0]
 800b3f4:	7830      	ldrb	r0, [r6, #0]
 800b3f6:	68db      	ldr	r3, [r3, #12]
 800b3f8:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800b3fa:	2000      	movs	r0, #0
 800b3fc:	e7e7      	b.n	800b3ce <BSP_TS_Init+0x3a>
 800b3fe:	bf00      	nop
 800b400:	20000020 	.word	0x20000020
 800b404:	20016bcc 	.word	0x20016bcc
 800b408:	20016bc8 	.word	0x20016bc8
 800b40c:	20016bb4 	.word	0x20016bb4

0800b410 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800b410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800b414:	4c34      	ldr	r4, [pc, #208]	; (800b4e8 <BSP_TS_GetState+0xd8>)
 800b416:	4d35      	ldr	r5, [pc, #212]	; (800b4ec <BSP_TS_GetState+0xdc>)
 800b418:	6823      	ldr	r3, [r4, #0]
{
 800b41a:	b085      	sub	sp, #20
 800b41c:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800b41e:	691b      	ldr	r3, [r3, #16]
 800b420:	7828      	ldrb	r0, [r5, #0]
 800b422:	4798      	blx	r3
 800b424:	46a1      	mov	r9, r4
 800b426:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800b428:	9501      	str	r5, [sp, #4]
 800b42a:	b158      	cbz	r0, 800b444 <BSP_TS_GetState+0x34>
 800b42c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800b4f8 <BSP_TS_GetState+0xe8>
 800b430:	4f2f      	ldr	r7, [pc, #188]	; (800b4f0 <BSP_TS_GetState+0xe0>)
 800b432:	f106 0b02 	add.w	fp, r6, #2
 800b436:	ad03      	add	r5, sp, #12
 800b438:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800b43a:	f04f 0a00 	mov.w	sl, #0
 800b43e:	7833      	ldrb	r3, [r6, #0]
 800b440:	4553      	cmp	r3, sl
 800b442:	d803      	bhi.n	800b44c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 800b444:	2000      	movs	r0, #0
 800b446:	b005      	add	sp, #20
 800b448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800b44c:	f8d9 3000 	ldr.w	r3, [r9]
 800b450:	9801      	ldr	r0, [sp, #4]
 800b452:	695b      	ldr	r3, [r3, #20]
 800b454:	7800      	ldrb	r0, [r0, #0]
 800b456:	9100      	str	r1, [sp, #0]
 800b458:	462a      	mov	r2, r5
 800b45a:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 800b45c:	4b25      	ldr	r3, [pc, #148]	; (800b4f4 <BSP_TS_GetState+0xe4>)
 800b45e:	9900      	ldr	r1, [sp, #0]
 800b460:	781b      	ldrb	r3, [r3, #0]
 800b462:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 800b466:	bf1f      	itttt	ne
 800b468:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 800b46a:	8828      	ldrhne	r0, [r5, #0]
 800b46c:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800b46e:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800b470:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800b472:	bf41      	itttt	mi
 800b474:	880a      	ldrhmi	r2, [r1, #0]
 800b476:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 800b47a:	3203      	addmi	r2, #3
 800b47c:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800b47e:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800b480:	bf48      	it	mi
 800b482:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800b484:	f8d8 2000 	ldr.w	r2, [r8]
 800b488:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800b48c:	bf42      	ittt	mi
 800b48e:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800b492:	3301      	addmi	r3, #1
 800b494:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800b496:	b293      	uxth	r3, r2
 800b498:	4290      	cmp	r0, r2
 800b49a:	bf8c      	ite	hi
 800b49c:	1ac3      	subhi	r3, r0, r3
 800b49e:	1a1b      	subls	r3, r3, r0
 800b4a0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800b4a2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800b4a6:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800b4a8:	683b      	ldr	r3, [r7, #0]
 800b4aa:	b29c      	uxth	r4, r3
 800b4ac:	429a      	cmp	r2, r3
 800b4ae:	bf88      	it	hi
 800b4b0:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800b4b2:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800b4b4:	bf98      	it	ls
 800b4b6:	1aa4      	subls	r4, r4, r2
 800b4b8:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 800b4ba:	441c      	add	r4, r3
 800b4bc:	46c4      	mov	ip, r8
 800b4be:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800b4c0:	bfc8      	it	gt
 800b4c2:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800b4c6:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800b4ca:	bfc8      	it	gt
 800b4cc:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800b4ce:	46be      	mov	lr, r7
 800b4d0:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 800b4d4:	f8de 3000 	ldr.w	r3, [lr]
 800b4d8:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 800b4dc:	f108 0804 	add.w	r8, r8, #4
 800b4e0:	3704      	adds	r7, #4
 800b4e2:	f10a 0a01 	add.w	sl, sl, #1
 800b4e6:	e7aa      	b.n	800b43e <BSP_TS_GetState+0x2e>
 800b4e8:	20016bc8 	.word	0x20016bc8
 800b4ec:	20016bb4 	.word	0x20016bb4
 800b4f0:	20016bc0 	.word	0x20016bc0
 800b4f4:	20016bcc 	.word	0x20016bcc
 800b4f8:	20016bb8 	.word	0x20016bb8

0800b4fc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b4fc:	4b05      	ldr	r3, [pc, #20]	; (800b514 <SystemInit+0x18>)
 800b4fe:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800b502:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b506:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b50a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800b50e:	609a      	str	r2, [r3, #8]
#endif
}
 800b510:	4770      	bx	lr
 800b512:	bf00      	nop
 800b514:	e000ed00 	.word	0xe000ed00

0800b518 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b518:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b51a:	4b0b      	ldr	r3, [pc, #44]	; (800b548 <HAL_Init+0x30>)
 800b51c:	681a      	ldr	r2, [r3, #0]
 800b51e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b522:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b524:	681a      	ldr	r2, [r3, #0]
 800b526:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b52a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b52c:	681a      	ldr	r2, [r3, #0]
 800b52e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b532:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b534:	2003      	movs	r0, #3
 800b536:	f000 f82f 	bl	800b598 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b53a:	2000      	movs	r0, #0
 800b53c:	f7f6 fc88 	bl	8001e50 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b540:	f7f6 fa28 	bl	8001994 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b544:	2000      	movs	r0, #0
 800b546:	bd08      	pop	{r3, pc}
 800b548:	40023c00 	.word	0x40023c00

0800b54c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b54c:	4a03      	ldr	r2, [pc, #12]	; (800b55c <HAL_IncTick+0x10>)
 800b54e:	4b04      	ldr	r3, [pc, #16]	; (800b560 <HAL_IncTick+0x14>)
 800b550:	6811      	ldr	r1, [r2, #0]
 800b552:	781b      	ldrb	r3, [r3, #0]
 800b554:	440b      	add	r3, r1
 800b556:	6013      	str	r3, [r2, #0]
}
 800b558:	4770      	bx	lr
 800b55a:	bf00      	nop
 800b55c:	20027edc 	.word	0x20027edc
 800b560:	20000054 	.word	0x20000054

0800b564 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b564:	4b01      	ldr	r3, [pc, #4]	; (800b56c <HAL_GetTick+0x8>)
 800b566:	6818      	ldr	r0, [r3, #0]
}
 800b568:	4770      	bx	lr
 800b56a:	bf00      	nop
 800b56c:	20027edc 	.word	0x20027edc

0800b570 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b570:	b538      	push	{r3, r4, r5, lr}
 800b572:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b574:	f7ff fff6 	bl	800b564 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b578:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800b57a:	bf1c      	itt	ne
 800b57c:	4b05      	ldrne	r3, [pc, #20]	; (800b594 <HAL_Delay+0x24>)
 800b57e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800b580:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800b582:	bf18      	it	ne
 800b584:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b586:	f7ff ffed 	bl	800b564 <HAL_GetTick>
 800b58a:	1b43      	subs	r3, r0, r5
 800b58c:	42a3      	cmp	r3, r4
 800b58e:	d3fa      	bcc.n	800b586 <HAL_Delay+0x16>
  {
  }
}
 800b590:	bd38      	pop	{r3, r4, r5, pc}
 800b592:	bf00      	nop
 800b594:	20000054 	.word	0x20000054

0800b598 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b598:	4907      	ldr	r1, [pc, #28]	; (800b5b8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b59a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b59c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5a0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5a2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5a4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5a8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b5aa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b5ac:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b5b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b5b4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b5b6:	4770      	bx	lr
 800b5b8:	e000ed00 	.word	0xe000ed00

0800b5bc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b5bc:	4b16      	ldr	r3, [pc, #88]	; (800b618 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b5be:	b530      	push	{r4, r5, lr}
 800b5c0:	68dc      	ldr	r4, [r3, #12]
 800b5c2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b5c6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b5ca:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b5cc:	2d04      	cmp	r5, #4
 800b5ce:	bf28      	it	cs
 800b5d0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b5d2:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b5d4:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b5d8:	bf8c      	ite	hi
 800b5da:	3c03      	subhi	r4, #3
 800b5dc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b5de:	fa03 f505 	lsl.w	r5, r3, r5
 800b5e2:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b5e6:	40a3      	lsls	r3, r4
 800b5e8:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b5ec:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800b5ee:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b5f0:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b5f4:	bfac      	ite	ge
 800b5f6:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b5fa:	4a08      	ldrlt	r2, [pc, #32]	; (800b61c <HAL_NVIC_SetPriority+0x60>)
 800b5fc:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800b600:	bfb8      	it	lt
 800b602:	f000 000f 	andlt.w	r0, r0, #15
 800b606:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b608:	bfaa      	itet	ge
 800b60a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b60e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b610:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b614:	bd30      	pop	{r4, r5, pc}
 800b616:	bf00      	nop
 800b618:	e000ed00 	.word	0xe000ed00
 800b61c:	e000ed14 	.word	0xe000ed14

0800b620 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b620:	2800      	cmp	r0, #0
 800b622:	db08      	blt.n	800b636 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b624:	0942      	lsrs	r2, r0, #5
 800b626:	2301      	movs	r3, #1
 800b628:	f000 001f 	and.w	r0, r0, #31
 800b62c:	fa03 f000 	lsl.w	r0, r3, r0
 800b630:	4b01      	ldr	r3, [pc, #4]	; (800b638 <HAL_NVIC_EnableIRQ+0x18>)
 800b632:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b636:	4770      	bx	lr
 800b638:	e000e100 	.word	0xe000e100

0800b63c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b63c:	2800      	cmp	r0, #0
 800b63e:	db0d      	blt.n	800b65c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b640:	0943      	lsrs	r3, r0, #5
 800b642:	2201      	movs	r2, #1
 800b644:	f000 001f 	and.w	r0, r0, #31
 800b648:	fa02 f000 	lsl.w	r0, r2, r0
 800b64c:	3320      	adds	r3, #32
 800b64e:	4a04      	ldr	r2, [pc, #16]	; (800b660 <HAL_NVIC_DisableIRQ+0x24>)
 800b650:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800b654:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800b658:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800b65c:	4770      	bx	lr
 800b65e:	bf00      	nop
 800b660:	e000e100 	.word	0xe000e100

0800b664 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800b664:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b666:	4604      	mov	r4, r0
 800b668:	b150      	cbz	r0, 800b680 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b66a:	7943      	ldrb	r3, [r0, #5]
 800b66c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b670:	b913      	cbnz	r3, 800b678 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800b672:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800b674:	f7f6 f9ae 	bl	80019d4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b678:	2301      	movs	r3, #1
 800b67a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b67c:	2000      	movs	r0, #0
}
 800b67e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b680:	2001      	movs	r0, #1
 800b682:	e7fc      	b.n	800b67e <HAL_CRC_Init+0x1a>

0800b684 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800b684:	6803      	ldr	r3, [r0, #0]
{
 800b686:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800b688:	4c08      	ldr	r4, [pc, #32]	; (800b6ac <DMA_CalcBaseAndBitshift+0x28>)
{
 800b68a:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800b68c:	b2d9      	uxtb	r1, r3
 800b68e:	3910      	subs	r1, #16
 800b690:	2018      	movs	r0, #24
 800b692:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800b696:	5c20      	ldrb	r0, [r4, r0]
 800b698:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 800b69a:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800b69e:	f020 0003 	bic.w	r0, r0, #3
 800b6a2:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800b6a4:	bf88      	it	hi
 800b6a6:	3004      	addhi	r0, #4
 800b6a8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 800b6aa:	bd10      	pop	{r4, pc}
 800b6ac:	08028ef1 	.word	0x08028ef1

0800b6b0 <HAL_DMA_Init>:
{
 800b6b0:	b570      	push	{r4, r5, r6, lr}
 800b6b2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b6b4:	f7ff ff56 	bl	800b564 <HAL_GetTick>
 800b6b8:	4605      	mov	r5, r0
  if(hdma == NULL)
 800b6ba:	2c00      	cmp	r4, #0
 800b6bc:	d073      	beq.n	800b7a6 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 800b6be:	2302      	movs	r3, #2
 800b6c0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800b6c4:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 800b6c6:	2300      	movs	r3, #0
 800b6c8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800b6cc:	6813      	ldr	r3, [r2, #0]
 800b6ce:	f023 0301 	bic.w	r3, r3, #1
 800b6d2:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800b6d4:	6821      	ldr	r1, [r4, #0]
 800b6d6:	680b      	ldr	r3, [r1, #0]
 800b6d8:	07d8      	lsls	r0, r3, #31
 800b6da:	d42f      	bmi.n	800b73c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800b6dc:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800b6de:	4d33      	ldr	r5, [pc, #204]	; (800b7ac <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800b6e0:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800b6e2:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800b6e4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800b6e8:	4313      	orrs	r3, r2
 800b6ea:	68e2      	ldr	r2, [r4, #12]
 800b6ec:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800b6ee:	6922      	ldr	r2, [r4, #16]
 800b6f0:	4313      	orrs	r3, r2
 800b6f2:	6962      	ldr	r2, [r4, #20]
 800b6f4:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800b6f6:	69e2      	ldr	r2, [r4, #28]
 800b6f8:	4303      	orrs	r3, r0
 800b6fa:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800b6fc:	6a22      	ldr	r2, [r4, #32]
 800b6fe:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800b700:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b702:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800b704:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800b708:	bf02      	ittt	eq
 800b70a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800b70e:	4335      	orreq	r5, r6
 800b710:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800b712:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800b714:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800b716:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800b718:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800b71c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800b720:	d133      	bne.n	800b78a <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800b722:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800b724:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800b726:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800b728:	b37d      	cbz	r5, 800b78a <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800b72a:	b990      	cbnz	r0, 800b752 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800b72c:	2a01      	cmp	r2, #1
 800b72e:	d021      	beq.n	800b774 <HAL_DMA_Init+0xc4>
 800b730:	f032 0202 	bics.w	r2, r2, #2
 800b734:	d129      	bne.n	800b78a <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800b736:	01ea      	lsls	r2, r5, #7
 800b738:	d527      	bpl.n	800b78a <HAL_DMA_Init+0xda>
 800b73a:	e01e      	b.n	800b77a <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800b73c:	f7ff ff12 	bl	800b564 <HAL_GetTick>
 800b740:	1b40      	subs	r0, r0, r5
 800b742:	2805      	cmp	r0, #5
 800b744:	d9c6      	bls.n	800b6d4 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800b746:	2320      	movs	r3, #32
 800b748:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800b74a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800b74c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800b750:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800b752:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800b756:	d114      	bne.n	800b782 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800b758:	2a03      	cmp	r2, #3
 800b75a:	d816      	bhi.n	800b78a <HAL_DMA_Init+0xda>
 800b75c:	a001      	add	r0, pc, #4	; (adr r0, 800b764 <HAL_DMA_Init+0xb4>)
 800b75e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800b762:	bf00      	nop
 800b764:	0800b77b 	.word	0x0800b77b
 800b768:	0800b737 	.word	0x0800b737
 800b76c:	0800b77b 	.word	0x0800b77b
 800b770:	0800b775 	.word	0x0800b775
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800b774:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800b778:	d107      	bne.n	800b78a <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800b77a:	2340      	movs	r3, #64	; 0x40
 800b77c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800b77e:	2001      	movs	r0, #1
 800b780:	e7e4      	b.n	800b74c <HAL_DMA_Init+0x9c>
    switch (tmp)
 800b782:	2a02      	cmp	r2, #2
 800b784:	d9f9      	bls.n	800b77a <HAL_DMA_Init+0xca>
 800b786:	2a03      	cmp	r2, #3
 800b788:	d0d5      	beq.n	800b736 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800b78a:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800b78c:	4620      	mov	r0, r4
 800b78e:	f7ff ff79 	bl	800b684 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800b792:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800b794:	233f      	movs	r3, #63	; 0x3f
 800b796:	4093      	lsls	r3, r2
 800b798:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800b79a:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800b79c:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800b79e:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800b7a0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800b7a4:	e7d4      	b.n	800b750 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800b7a6:	2001      	movs	r0, #1
 800b7a8:	e7d2      	b.n	800b750 <HAL_DMA_Init+0xa0>
 800b7aa:	bf00      	nop
 800b7ac:	f010803f 	.word	0xf010803f

0800b7b0 <HAL_DMA_DeInit>:
{
 800b7b0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800b7b2:	4605      	mov	r5, r0
 800b7b4:	b320      	cbz	r0, 800b800 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800b7b6:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b7ba:	2b02      	cmp	r3, #2
 800b7bc:	b2dc      	uxtb	r4, r3
 800b7be:	d01d      	beq.n	800b7fc <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800b7c0:	6803      	ldr	r3, [r0, #0]
 800b7c2:	681a      	ldr	r2, [r3, #0]
 800b7c4:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800b7c8:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800b7ca:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 800b7cc:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800b7ce:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800b7d0:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800b7d2:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800b7d4:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800b7d6:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800b7d8:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800b7da:	f7ff ff53 	bl	800b684 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800b7de:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800b7e0:	233f      	movs	r3, #63	; 0x3f
 800b7e2:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800b7e4:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800b7e8:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800b7ec:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800b7f0:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800b7f2:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800b7f4:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800b7f8:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800b7fc:	4620      	mov	r0, r4
 800b7fe:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b800:	2401      	movs	r4, #1
 800b802:	e7fb      	b.n	800b7fc <HAL_DMA_DeInit+0x4c>

0800b804 <HAL_DMA_Abort>:
{
 800b804:	b570      	push	{r4, r5, r6, lr}
 800b806:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800b808:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800b80a:	f7ff feab 	bl	800b564 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b80e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800b812:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 800b814:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b816:	d006      	beq.n	800b826 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b818:	2380      	movs	r3, #128	; 0x80
 800b81a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800b81c:	2300      	movs	r3, #0
 800b81e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800b822:	2001      	movs	r0, #1
}
 800b824:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800b826:	6823      	ldr	r3, [r4, #0]
 800b828:	681a      	ldr	r2, [r3, #0]
 800b82a:	f022 0216 	bic.w	r2, r2, #22
 800b82e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800b830:	695a      	ldr	r2, [r3, #20]
 800b832:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b836:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800b838:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b83a:	b90a      	cbnz	r2, 800b840 <HAL_DMA_Abort+0x3c>
 800b83c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800b83e:	b11a      	cbz	r2, 800b848 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800b840:	681a      	ldr	r2, [r3, #0]
 800b842:	f022 0208 	bic.w	r2, r2, #8
 800b846:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800b848:	681a      	ldr	r2, [r3, #0]
 800b84a:	f022 0201 	bic.w	r2, r2, #1
 800b84e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800b850:	6823      	ldr	r3, [r4, #0]
 800b852:	681b      	ldr	r3, [r3, #0]
 800b854:	f013 0301 	ands.w	r3, r3, #1
 800b858:	d10a      	bne.n	800b870 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800b85a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800b85c:	223f      	movs	r2, #63	; 0x3f
 800b85e:	408a      	lsls	r2, r1
 800b860:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800b862:	2201      	movs	r2, #1
 800b864:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800b868:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800b86c:	4618      	mov	r0, r3
 800b86e:	e7d9      	b.n	800b824 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800b870:	f7ff fe78 	bl	800b564 <HAL_GetTick>
 800b874:	1b40      	subs	r0, r0, r5
 800b876:	2805      	cmp	r0, #5
 800b878:	d9ea      	bls.n	800b850 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800b87a:	2320      	movs	r3, #32
 800b87c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800b87e:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800b880:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800b882:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800b886:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800b88a:	e7cb      	b.n	800b824 <HAL_DMA_Abort+0x20>

0800b88c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800b88c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800b88e:	4604      	mov	r4, r0
 800b890:	b330      	cbz	r0, 800b8e0 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800b892:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800b896:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b89a:	b91b      	cbnz	r3, 800b8a4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800b89c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800b8a0:	f7f6 f8b0 	bl	8001a04 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800b8a4:	6822      	ldr	r2, [r4, #0]
 800b8a6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800b8a8:	2302      	movs	r3, #2
 800b8aa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800b8ae:	6813      	ldr	r3, [r2, #0]
 800b8b0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b8b4:	430b      	orrs	r3, r1
 800b8b6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800b8b8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800b8ba:	68a1      	ldr	r1, [r4, #8]
 800b8bc:	f023 0307 	bic.w	r3, r3, #7
 800b8c0:	430b      	orrs	r3, r1
 800b8c2:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800b8c4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b8c6:	68e1      	ldr	r1, [r4, #12]
 800b8c8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800b8cc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b8d0:	430b      	orrs	r3, r1
 800b8d2:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800b8d4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800b8d6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800b8d8:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800b8da:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800b8de:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b8e0:	2001      	movs	r0, #1
 800b8e2:	e7fc      	b.n	800b8de <HAL_DMA2D_Init+0x52>

0800b8e4 <HAL_DMA2D_LineEventCallback>:
 800b8e4:	4770      	bx	lr

0800b8e6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800b8e6:	4770      	bx	lr

0800b8e8 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800b8e8:	6803      	ldr	r3, [r0, #0]
{
 800b8ea:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800b8ec:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800b8ee:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800b8f0:	07f2      	lsls	r2, r6, #31
{
 800b8f2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800b8f4:	d514      	bpl.n	800b920 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800b8f6:	05e9      	lsls	r1, r5, #23
 800b8f8:	d512      	bpl.n	800b920 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800b8fa:	681a      	ldr	r2, [r3, #0]
 800b8fc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800b900:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800b902:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800b904:	f042 0201 	orr.w	r2, r2, #1
 800b908:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800b90a:	2201      	movs	r2, #1
 800b90c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800b90e:	2304      	movs	r3, #4
 800b910:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800b914:	2300      	movs	r3, #0
 800b916:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800b91a:	6943      	ldr	r3, [r0, #20]
 800b91c:	b103      	cbz	r3, 800b920 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800b91e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800b920:	06b2      	lsls	r2, r6, #26
 800b922:	d516      	bpl.n	800b952 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800b924:	04ab      	lsls	r3, r5, #18
 800b926:	d514      	bpl.n	800b952 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800b928:	6823      	ldr	r3, [r4, #0]
 800b92a:	681a      	ldr	r2, [r3, #0]
 800b92c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b930:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800b932:	2220      	movs	r2, #32
 800b934:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800b936:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b938:	f043 0302 	orr.w	r3, r3, #2
 800b93c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800b93e:	2304      	movs	r3, #4
 800b940:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800b944:	2300      	movs	r3, #0
 800b946:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800b94a:	6963      	ldr	r3, [r4, #20]
 800b94c:	b10b      	cbz	r3, 800b952 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800b94e:	4620      	mov	r0, r4
 800b950:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800b952:	0730      	lsls	r0, r6, #28
 800b954:	d516      	bpl.n	800b984 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800b956:	0529      	lsls	r1, r5, #20
 800b958:	d514      	bpl.n	800b984 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800b95a:	6823      	ldr	r3, [r4, #0]
 800b95c:	681a      	ldr	r2, [r3, #0]
 800b95e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b962:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800b964:	2208      	movs	r2, #8
 800b966:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800b968:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b96a:	f043 0304 	orr.w	r3, r3, #4
 800b96e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800b970:	2304      	movs	r3, #4
 800b972:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800b976:	2300      	movs	r3, #0
 800b978:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800b97c:	6963      	ldr	r3, [r4, #20]
 800b97e:	b10b      	cbz	r3, 800b984 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800b980:	4620      	mov	r0, r4
 800b982:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800b984:	0772      	lsls	r2, r6, #29
 800b986:	d50b      	bpl.n	800b9a0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800b988:	056b      	lsls	r3, r5, #21
 800b98a:	d509      	bpl.n	800b9a0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800b98c:	6823      	ldr	r3, [r4, #0]
 800b98e:	681a      	ldr	r2, [r3, #0]
 800b990:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b994:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800b996:	2204      	movs	r2, #4
 800b998:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800b99a:	4620      	mov	r0, r4
 800b99c:	f7ff ffa2 	bl	800b8e4 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800b9a0:	07b0      	lsls	r0, r6, #30
 800b9a2:	d514      	bpl.n	800b9ce <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800b9a4:	05a9      	lsls	r1, r5, #22
 800b9a6:	d512      	bpl.n	800b9ce <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800b9a8:	6823      	ldr	r3, [r4, #0]
 800b9aa:	681a      	ldr	r2, [r3, #0]
 800b9ac:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800b9b0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800b9b2:	2202      	movs	r2, #2
 800b9b4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800b9b6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b9b8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800b9ba:	2301      	movs	r3, #1
 800b9bc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800b9c0:	2300      	movs	r3, #0
 800b9c2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800b9c6:	6923      	ldr	r3, [r4, #16]
 800b9c8:	b10b      	cbz	r3, 800b9ce <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800b9ca:	4620      	mov	r0, r4
 800b9cc:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800b9ce:	06f2      	lsls	r2, r6, #27
 800b9d0:	d513      	bpl.n	800b9fa <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800b9d2:	04eb      	lsls	r3, r5, #19
 800b9d4:	d511      	bpl.n	800b9fa <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800b9d6:	6823      	ldr	r3, [r4, #0]
 800b9d8:	681a      	ldr	r2, [r3, #0]
 800b9da:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b9de:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800b9e0:	2210      	movs	r2, #16
 800b9e2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800b9e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b9e6:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800b9e8:	2301      	movs	r3, #1
 800b9ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800b9ee:	2300      	movs	r3, #0
 800b9f0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800b9f4:	4620      	mov	r0, r4
 800b9f6:	f7ff ff76 	bl	800b8e6 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800b9fa:	bd70      	pop	{r4, r5, r6, pc}

0800b9fc <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800b9fc:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800b9fe:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800ba02:	2b01      	cmp	r3, #1
 800ba04:	f04f 0302 	mov.w	r3, #2
 800ba08:	d02b      	beq.n	800ba62 <HAL_DMA2D_ConfigLayer+0x66>
 800ba0a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800ba0c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800ba10:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800ba14:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800ba18:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800ba1c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800ba1e:	4f18      	ldr	r7, [pc, #96]	; (800ba80 <HAL_DMA2D_ConfigLayer+0x84>)
 800ba20:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800ba24:	3c09      	subs	r4, #9
 800ba26:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800ba28:	bf9c      	itt	ls
 800ba2a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800ba2e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800ba30:	ea4f 1601 	mov.w	r6, r1, lsl #4
 800ba34:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800ba36:	bf88      	it	hi
 800ba38:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800ba3c:	b999      	cbnz	r1, 800ba66 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800ba3e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800ba40:	4039      	ands	r1, r7
 800ba42:	430a      	orrs	r2, r1
 800ba44:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800ba46:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800ba48:	6982      	ldr	r2, [r0, #24]
 800ba4a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800ba4c:	d803      	bhi.n	800ba56 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800ba4e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800ba50:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800ba54:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800ba56:	2301      	movs	r3, #1
 800ba58:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800ba5c:	2300      	movs	r3, #0
 800ba5e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800ba62:	4618      	mov	r0, r3

  return HAL_OK;
}
 800ba64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800ba66:	69d9      	ldr	r1, [r3, #28]
 800ba68:	4039      	ands	r1, r7
 800ba6a:	430a      	orrs	r2, r1
 800ba6c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800ba6e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800ba70:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800ba72:	6992      	ldr	r2, [r2, #24]
 800ba74:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800ba76:	bf9c      	itt	ls
 800ba78:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800ba7c:	621d      	strls	r5, [r3, #32]
 800ba7e:	e7ea      	b.n	800ba56 <HAL_DMA2D_ConfigLayer+0x5a>
 800ba80:	00fcfff0 	.word	0x00fcfff0

0800ba84 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800ba84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba88:	4607      	mov	r7, r0
 800ba8a:	460d      	mov	r5, r1
 800ba8c:	4614      	mov	r4, r2
 800ba8e:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800ba90:	f7ff fd68 	bl	800b564 <HAL_GetTick>
 800ba94:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800ba96:	683a      	ldr	r2, [r7, #0]
 800ba98:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800ba9a:	07db      	lsls	r3, r3, #31
 800ba9c:	d50a      	bpl.n	800bab4 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800ba9e:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 800baa2:	9c06      	ldr	r4, [sp, #24]
 800baa4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800baa8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800baac:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 800baae:	2000      	movs	r0, #0
}
 800bab0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 800bab4:	f7ff fd56 	bl	800b564 <HAL_GetTick>
 800bab8:	eba0 0008 	sub.w	r0, r0, r8
 800babc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bac0:	d9e9      	bls.n	800ba96 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800bac2:	2003      	movs	r0, #3
 800bac4:	e7f4      	b.n	800bab0 <DSI_ShortWrite+0x2c>

0800bac6 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bac6:	7c03      	ldrb	r3, [r0, #16]
 800bac8:	2b01      	cmp	r3, #1
 800baca:	d05d      	beq.n	800bb88 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800bacc:	6803      	ldr	r3, [r0, #0]
 800bace:	2200      	movs	r2, #0
 800bad0:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800bad4:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800bad8:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800bada:	bf48      	it	mi
 800badc:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800bae0:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800bae2:	bf42      	ittt	mi
 800bae4:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800bae8:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800baec:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800baf0:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800baf2:	bf42      	ittt	mi
 800baf4:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800baf8:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800bafc:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800bb00:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800bb02:	bf42      	ittt	mi
 800bb04:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb08:	f042 0201 	orrmi.w	r2, r2, #1
 800bb0c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800bb10:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800bb12:	bf42      	ittt	mi
 800bb14:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb18:	f042 0202 	orrmi.w	r2, r2, #2
 800bb1c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800bb20:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800bb22:	bf42      	ittt	mi
 800bb24:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb28:	f042 020c 	orrmi.w	r2, r2, #12
 800bb2c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800bb30:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800bb32:	bf42      	ittt	mi
 800bb34:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb38:	f042 0210 	orrmi.w	r2, r2, #16
 800bb3c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800bb40:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800bb42:	bf42      	ittt	mi
 800bb44:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb48:	f042 0220 	orrmi.w	r2, r2, #32
 800bb4c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800bb50:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800bb52:	bf42      	ittt	mi
 800bb54:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb58:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800bb5c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800bb60:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800bb62:	bf42      	ittt	mi
 800bb64:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb68:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800bb6c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800bb70:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800bb72:	bf42      	ittt	mi
 800bb74:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800bb78:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800bb7c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800bb80:	2300      	movs	r3, #0
 800bb82:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800bb84:	4618      	mov	r0, r3
 800bb86:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800bb88:	2002      	movs	r0, #2
}
 800bb8a:	4770      	bx	lr

0800bb8c <HAL_DSI_Init>:
{
 800bb8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb8e:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800bb90:	4604      	mov	r4, r0
 800bb92:	2800      	cmp	r0, #0
 800bb94:	f000 80a7 	beq.w	800bce6 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800bb98:	7c43      	ldrb	r3, [r0, #17]
 800bb9a:	b90b      	cbnz	r3, 800bba0 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800bb9c:	f7f5 ff54 	bl	8001a48 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800bba0:	2303      	movs	r3, #3
 800bba2:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800bba4:	2300      	movs	r3, #0
 800bba6:	9300      	str	r3, [sp, #0]
 800bba8:	6823      	ldr	r3, [r4, #0]
 800bbaa:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800bbae:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800bbb2:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800bbb6:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800bbba:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800bbbe:	9300      	str	r3, [sp, #0]
 800bbc0:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800bbc2:	f7ff fccf 	bl	800b564 <HAL_GetTick>
 800bbc6:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800bbc8:	6822      	ldr	r2, [r4, #0]
 800bbca:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800bbce:	04d9      	lsls	r1, r3, #19
 800bbd0:	d578      	bpl.n	800bcc4 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800bbd2:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800bbd6:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800bbda:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800bbde:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800bbe2:	e9d5 0300 	ldrd	r0, r3, [r5]
 800bbe6:	02db      	lsls	r3, r3, #11
 800bbe8:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 800bbec:	68a8      	ldr	r0, [r5, #8]
 800bbee:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800bbf2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bbf6:	430b      	orrs	r3, r1
 800bbf8:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800bbfc:	2300      	movs	r3, #0
 800bbfe:	9301      	str	r3, [sp, #4]
 800bc00:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800bc04:	f043 0301 	orr.w	r3, r3, #1
 800bc08:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800bc0c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800bc10:	f003 0301 	and.w	r3, r3, #1
 800bc14:	9301      	str	r3, [sp, #4]
 800bc16:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 800bc18:	f7ff fca4 	bl	800b564 <HAL_GetTick>
 800bc1c:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800bc1e:	6823      	ldr	r3, [r4, #0]
 800bc20:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800bc24:	05d2      	lsls	r2, r2, #23
 800bc26:	d557      	bpl.n	800bcd8 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800bc28:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800bc2c:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800bc2e:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800bc30:	f042 0206 	orr.w	r2, r2, #6
 800bc34:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800bc38:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800bc3c:	f022 0203 	bic.w	r2, r2, #3
 800bc40:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800bc44:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800bc48:	430a      	orrs	r2, r1
 800bc4a:	f042 0201 	orr.w	r2, r2, #1
 800bc4e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800bc52:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800bc56:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800bc58:	f022 0203 	bic.w	r2, r2, #3
 800bc5c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800bc60:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800bc64:	430a      	orrs	r2, r1
 800bc66:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800bc6a:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800bc6c:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800bc6e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800bc72:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800bc74:	689a      	ldr	r2, [r3, #8]
 800bc76:	430a      	orrs	r2, r1
 800bc78:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800bc7a:	686a      	ldr	r2, [r5, #4]
 800bc7c:	2a01      	cmp	r2, #1
 800bc7e:	bf38      	it	cc
 800bc80:	2201      	movcc	r2, #1
 800bc82:	4611      	mov	r1, r2
 800bc84:	4a19      	ldr	r2, [pc, #100]	; (800bcec <HAL_DSI_Init+0x160>)
 800bc86:	434a      	muls	r2, r1
 800bc88:	68a9      	ldr	r1, [r5, #8]
 800bc8a:	f001 0103 	and.w	r1, r1, #3
 800bc8e:	408a      	lsls	r2, r1
 800bc90:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800bc94:	4341      	muls	r1, r0
 800bc96:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800bc9a:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800bc9e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800bca2:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800bca6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800bcaa:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800bcac:	430a      	orrs	r2, r1
 800bcae:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800bcb2:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800bcb6:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800bcba:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800bcbc:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800bcbe:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800bcc0:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800bcc2:	e007      	b.n	800bcd4 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800bcc4:	f7ff fc4e 	bl	800b564 <HAL_GetTick>
 800bcc8:	1b80      	subs	r0, r0, r6
 800bcca:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bcce:	f67f af7b 	bls.w	800bbc8 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800bcd2:	2003      	movs	r0, #3
}
 800bcd4:	b002      	add	sp, #8
 800bcd6:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800bcd8:	f7ff fc44 	bl	800b564 <HAL_GetTick>
 800bcdc:	1b80      	subs	r0, r0, r6
 800bcde:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bce2:	d99c      	bls.n	800bc1e <HAL_DSI_Init+0x92>
 800bce4:	e7f5      	b.n	800bcd2 <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 800bce6:	2001      	movs	r0, #1
 800bce8:	e7f4      	b.n	800bcd4 <HAL_DSI_Init+0x148>
 800bcea:	bf00      	nop
 800bcec:	003d0900 	.word	0x003d0900

0800bcf0 <HAL_DSI_ErrorCallback>:
 800bcf0:	4770      	bx	lr

0800bcf2 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800bcf2:	6803      	ldr	r3, [r0, #0]
 800bcf4:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800bcf8:	07d1      	lsls	r1, r2, #31
{
 800bcfa:	b510      	push	{r4, lr}
 800bcfc:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800bcfe:	d508      	bpl.n	800bd12 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800bd00:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800bd04:	07d2      	lsls	r2, r2, #31
 800bd06:	d504      	bpl.n	800bd12 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800bd08:	2201      	movs	r2, #1
 800bd0a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800bd0e:	f7f4 feed 	bl	8000aec <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800bd12:	6823      	ldr	r3, [r4, #0]
 800bd14:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800bd18:	0791      	lsls	r1, r2, #30
 800bd1a:	d509      	bpl.n	800bd30 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800bd1c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800bd20:	0792      	lsls	r2, r2, #30
 800bd22:	d505      	bpl.n	800bd30 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800bd24:	2202      	movs	r2, #2
 800bd26:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800bd2a:	4620      	mov	r0, r4
 800bd2c:	f7f4 ff12 	bl	8000b54 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800bd30:	69a3      	ldr	r3, [r4, #24]
 800bd32:	2b00      	cmp	r3, #0
 800bd34:	d04e      	beq.n	800bdd4 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800bd36:	6821      	ldr	r1, [r4, #0]
 800bd38:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800bd3c:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800bd40:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800bd44:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800bd46:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800bd4a:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800bd4c:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800bd4e:	b119      	cbz	r1, 800bd58 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800bd50:	6961      	ldr	r1, [r4, #20]
 800bd52:	f041 0101 	orr.w	r1, r1, #1
 800bd56:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800bd58:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800bd5c:	bf1e      	ittt	ne
 800bd5e:	6962      	ldrne	r2, [r4, #20]
 800bd60:	f042 0202 	orrne.w	r2, r2, #2
 800bd64:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800bd66:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800bd68:	bf42      	ittt	mi
 800bd6a:	6962      	ldrmi	r2, [r4, #20]
 800bd6c:	f042 0204 	orrmi.w	r2, r2, #4
 800bd70:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800bd72:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800bd74:	bf42      	ittt	mi
 800bd76:	6962      	ldrmi	r2, [r4, #20]
 800bd78:	f042 0208 	orrmi.w	r2, r2, #8
 800bd7c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800bd7e:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800bd82:	bf1e      	ittt	ne
 800bd84:	6962      	ldrne	r2, [r4, #20]
 800bd86:	f042 0210 	orrne.w	r2, r2, #16
 800bd8a:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800bd8c:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800bd8e:	bf42      	ittt	mi
 800bd90:	6962      	ldrmi	r2, [r4, #20]
 800bd92:	f042 0220 	orrmi.w	r2, r2, #32
 800bd96:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800bd98:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800bd9a:	bf42      	ittt	mi
 800bd9c:	6962      	ldrmi	r2, [r4, #20]
 800bd9e:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800bda2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800bda4:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800bda6:	bf42      	ittt	mi
 800bda8:	6962      	ldrmi	r2, [r4, #20]
 800bdaa:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800bdae:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800bdb0:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800bdb2:	bf42      	ittt	mi
 800bdb4:	6962      	ldrmi	r2, [r4, #20]
 800bdb6:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800bdba:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800bdbc:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800bdc0:	bf1e      	ittt	ne
 800bdc2:	6963      	ldrne	r3, [r4, #20]
 800bdc4:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800bdc8:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800bdca:	6963      	ldr	r3, [r4, #20]
 800bdcc:	b113      	cbz	r3, 800bdd4 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800bdce:	4620      	mov	r0, r4
 800bdd0:	f7ff ff8e 	bl	800bcf0 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800bdd4:	bd10      	pop	{r4, pc}

0800bdd6 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bdd6:	7c03      	ldrb	r3, [r0, #16]
 800bdd8:	2b01      	cmp	r3, #1
 800bdda:	d00b      	beq.n	800bdf4 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800bddc:	6803      	ldr	r3, [r0, #0]
 800bdde:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bde0:	f022 0203 	bic.w	r2, r2, #3
 800bde4:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800bde6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800bde8:	4311      	orrs	r1, r2
 800bdea:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800bdec:	2300      	movs	r3, #0
 800bdee:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800bdf0:	4618      	mov	r0, r3
 800bdf2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800bdf4:	2002      	movs	r0, #2
}
 800bdf6:	4770      	bx	lr

0800bdf8 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800bdf8:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bdfa:	7c03      	ldrb	r3, [r0, #16]
 800bdfc:	2b01      	cmp	r3, #1
 800bdfe:	d06a      	beq.n	800bed6 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800be00:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800be02:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800be04:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800be06:	f042 0201 	orr.w	r2, r2, #1
 800be0a:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800be0c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800be10:	f022 0201 	bic.w	r2, r2, #1
 800be14:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800be18:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800be1c:	f042 0201 	orr.w	r2, r2, #1
 800be20:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800be24:	68da      	ldr	r2, [r3, #12]
 800be26:	f022 0203 	bic.w	r2, r2, #3
 800be2a:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800be2c:	68da      	ldr	r2, [r3, #12]
 800be2e:	4322      	orrs	r2, r4
 800be30:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800be32:	695a      	ldr	r2, [r3, #20]
 800be34:	f022 0207 	bic.w	r2, r2, #7
 800be38:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800be3a:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800be3e:	432a      	orrs	r2, r5
 800be40:	694d      	ldr	r5, [r1, #20]
 800be42:	695c      	ldr	r4, [r3, #20]
 800be44:	432a      	orrs	r2, r5
 800be46:	4322      	orrs	r2, r4
 800be48:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800be4a:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800be4c:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800be4e:	f022 020f 	bic.w	r2, r2, #15
 800be52:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800be54:	691c      	ldr	r4, [r3, #16]
 800be56:	432c      	orrs	r4, r5
 800be58:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800be5a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800be5e:	f024 040e 	bic.w	r4, r4, #14
 800be62:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800be66:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800be6a:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800be6c:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800be70:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800be74:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800be76:	0c12      	lsrs	r2, r2, #16
 800be78:	0412      	lsls	r2, r2, #16
 800be7a:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800be7c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800be7e:	4322      	orrs	r2, r4
 800be80:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800be82:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800be86:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800be8a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800be8e:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800be92:	432a      	orrs	r2, r5
 800be94:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800be96:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800be9a:	432a      	orrs	r2, r5
 800be9c:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800be9e:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800bea0:	432a      	orrs	r2, r5
 800bea2:	4322      	orrs	r2, r4
 800bea4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800bea8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800beaa:	f022 0201 	bic.w	r2, r2, #1
 800beae:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800beb0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800beb2:	430a      	orrs	r2, r1
 800beb4:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800beb6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800beba:	f042 0201 	orr.w	r2, r2, #1
 800bebe:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800bec2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800bec6:	f042 0202 	orr.w	r2, r2, #2
 800beca:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800bece:	2300      	movs	r3, #0
 800bed0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800bed2:	4618      	mov	r0, r3
}
 800bed4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800bed6:	2002      	movs	r0, #2
 800bed8:	e7fc      	b.n	800bed4 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800bedc <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800bedc:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bede:	7c03      	ldrb	r3, [r0, #16]
 800bee0:	2b01      	cmp	r3, #1
 800bee2:	d02a      	beq.n	800bf3a <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800bee4:	6802      	ldr	r2, [r0, #0]
 800bee6:	4b16      	ldr	r3, [pc, #88]	; (800bf40 <HAL_DSI_ConfigCommand+0x64>)
 800bee8:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800beea:	4023      	ands	r3, r4
 800beec:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800beee:	e9d1 3500 	ldrd	r3, r5, [r1]
 800bef2:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800bef4:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800bef6:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800bef8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800befa:	68cd      	ldr	r5, [r1, #12]
 800befc:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800befe:	690d      	ldr	r5, [r1, #16]
 800bf00:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800bf02:	694d      	ldr	r5, [r1, #20]
 800bf04:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800bf06:	698d      	ldr	r5, [r1, #24]
 800bf08:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800bf0a:	69cd      	ldr	r5, [r1, #28]
 800bf0c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800bf0e:	6a0d      	ldr	r5, [r1, #32]
 800bf10:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800bf12:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800bf14:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800bf16:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800bf18:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800bf1a:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800bf1c:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800bf1e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800bf20:	4323      	orrs	r3, r4
 800bf22:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800bf24:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800bf26:	f023 0302 	bic.w	r3, r3, #2
 800bf2a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800bf2c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800bf2e:	430b      	orrs	r3, r1
 800bf30:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800bf32:	2300      	movs	r3, #0
 800bf34:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800bf36:	4618      	mov	r0, r3
}
 800bf38:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800bf3a:	2002      	movs	r0, #2
 800bf3c:	e7fc      	b.n	800bf38 <HAL_DSI_ConfigCommand+0x5c>
 800bf3e:	bf00      	nop
 800bf40:	fef080ff 	.word	0xfef080ff

0800bf44 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bf44:	7c03      	ldrb	r3, [r0, #16]
 800bf46:	2b01      	cmp	r3, #1
 800bf48:	d00b      	beq.n	800bf62 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800bf4a:	6803      	ldr	r3, [r0, #0]
 800bf4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bf4e:	f022 021f 	bic.w	r2, r2, #31
 800bf52:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800bf54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bf56:	4311      	orrs	r1, r2
 800bf58:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800bf5a:	2300      	movs	r3, #0
 800bf5c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800bf5e:	4618      	mov	r0, r3
 800bf60:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800bf62:	2002      	movs	r0, #2
}
 800bf64:	4770      	bx	lr

0800bf66 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800bf66:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bf68:	7c03      	ldrb	r3, [r0, #16]
 800bf6a:	2b01      	cmp	r3, #1
 800bf6c:	d035      	beq.n	800bfda <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800bf6e:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800bf72:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800bf74:	4294      	cmp	r4, r2
 800bf76:	bf38      	it	cc
 800bf78:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800bf7a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800bf7e:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800bf82:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800bf86:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800bf8a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800bf8e:	4322      	orrs	r2, r4
 800bf90:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800bf94:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800bf98:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800bf9c:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800bfa0:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800bfa4:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800bfa6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800bfaa:	690d      	ldr	r5, [r1, #16]
 800bfac:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800bfb0:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800bfb2:	432a      	orrs	r2, r5
 800bfb4:	4322      	orrs	r2, r4
 800bfb6:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800bfba:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800bfbe:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800bfc2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800bfc6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800bfca:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800bfce:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800bfd2:	2300      	movs	r3, #0
 800bfd4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800bfd6:	4618      	mov	r0, r3
}
 800bfd8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800bfda:	2002      	movs	r0, #2
 800bfdc:	e7fc      	b.n	800bfd8 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800bfe0 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800bfe0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800bfe2:	7c03      	ldrb	r3, [r0, #16]
 800bfe4:	2b01      	cmp	r3, #1
 800bfe6:	d05c      	beq.n	800c0a2 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800bfe8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800bfea:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800bfec:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800bfee:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800bff0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800bff4:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800bff6:	689a      	ldr	r2, [r3, #8]
 800bff8:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800bffc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800bffe:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800c000:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800c002:	b292      	uxth	r2, r2
 800c004:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800c006:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800c008:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800c00c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800c00e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800c010:	4a25      	ldr	r2, [pc, #148]	; (800c0a8 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800c012:	4014      	ands	r4, r2
 800c014:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800c016:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800c018:	432c      	orrs	r4, r5
 800c01a:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800c01c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800c01e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800c020:	4014      	ands	r4, r2
 800c022:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800c024:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800c026:	432c      	orrs	r4, r5
 800c028:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800c02a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800c02e:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800c030:	4014      	ands	r4, r2
 800c032:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800c036:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800c03a:	432c      	orrs	r4, r5
 800c03c:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800c040:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800c044:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800c046:	4014      	ands	r4, r2
 800c048:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800c04c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800c050:	432c      	orrs	r4, r5
 800c052:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800c056:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800c05a:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800c05e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800c062:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800c066:	698d      	ldr	r5, [r1, #24]
 800c068:	432c      	orrs	r4, r5
 800c06a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800c06e:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800c072:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800c074:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800c076:	4014      	ands	r4, r2
 800c078:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800c07c:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800c080:	432c      	orrs	r4, r5
 800c082:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800c086:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800c08a:	4022      	ands	r2, r4
 800c08c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800c090:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800c094:	430a      	orrs	r2, r1
 800c096:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c09a:	2300      	movs	r3, #0
 800c09c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800c09e:	4618      	mov	r0, r3
}
 800c0a0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800c0a2:	2002      	movs	r0, #2
 800c0a4:	e7fc      	b.n	800c0a0 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800c0a6:	bf00      	nop
 800c0a8:	ffff0000 	.word	0xffff0000

0800c0ac <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c0ac:	7c03      	ldrb	r3, [r0, #16]
 800c0ae:	2b01      	cmp	r3, #1
{
 800c0b0:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800c0b2:	d01c      	beq.n	800c0ee <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800c0b4:	6802      	ldr	r2, [r0, #0]
 800c0b6:	2300      	movs	r3, #0
 800c0b8:	9300      	str	r3, [sp, #0]
 800c0ba:	6851      	ldr	r1, [r2, #4]
 800c0bc:	f041 0101 	orr.w	r1, r1, #1
 800c0c0:	6051      	str	r1, [r2, #4]
 800c0c2:	6851      	ldr	r1, [r2, #4]
 800c0c4:	f001 0101 	and.w	r1, r1, #1
 800c0c8:	9100      	str	r1, [sp, #0]
 800c0ca:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800c0cc:	9301      	str	r3, [sp, #4]
 800c0ce:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800c0d2:	f041 0108 	orr.w	r1, r1, #8
 800c0d6:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800c0da:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c0de:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800c0e0:	f002 0208 	and.w	r2, r2, #8
 800c0e4:	9201      	str	r2, [sp, #4]
 800c0e6:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800c0e8:	4618      	mov	r0, r3
}
 800c0ea:	b002      	add	sp, #8
 800c0ec:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c0ee:	2002      	movs	r0, #2
 800c0f0:	e7fb      	b.n	800c0ea <HAL_DSI_Start+0x3e>

0800c0f2 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c0f2:	7c03      	ldrb	r3, [r0, #16]
 800c0f4:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800c0f6:	bf1f      	itttt	ne
 800c0f8:	6802      	ldrne	r2, [r0, #0]
 800c0fa:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800c0fe:	f043 0304 	orrne.w	r3, r3, #4
 800c102:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c106:	bf1d      	ittte	ne
 800c108:	2300      	movne	r3, #0
 800c10a:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800c10c:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800c10e:	2002      	moveq	r0, #2
}
 800c110:	4770      	bx	lr

0800c112 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800c112:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800c114:	7c05      	ldrb	r5, [r0, #16]
 800c116:	2d01      	cmp	r5, #1
{
 800c118:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800c11a:	d009      	beq.n	800c130 <HAL_DSI_ShortWrite+0x1e>
 800c11c:	2501      	movs	r5, #1
 800c11e:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800c120:	9d06      	ldr	r5, [sp, #24]
 800c122:	9500      	str	r5, [sp, #0]
 800c124:	f7ff fcae 	bl	800ba84 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c128:	2300      	movs	r3, #0
 800c12a:	7423      	strb	r3, [r4, #16]

  return status;
}
 800c12c:	b003      	add	sp, #12
 800c12e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800c130:	2002      	movs	r0, #2
 800c132:	e7fb      	b.n	800c12c <HAL_DSI_ShortWrite+0x1a>

0800c134 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800c134:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c138:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800c13a:	7c03      	ldrb	r3, [r0, #16]
 800c13c:	2b01      	cmp	r3, #1
{
 800c13e:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800c142:	4606      	mov	r6, r0
 800c144:	460f      	mov	r7, r1
 800c146:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800c148:	d053      	beq.n	800c1f2 <HAL_DSI_LongWrite+0xbe>
 800c14a:	2301      	movs	r3, #1
 800c14c:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800c14e:	f7ff fa09 	bl	800b564 <HAL_GetTick>
 800c152:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800c154:	6832      	ldr	r2, [r6, #0]
 800c156:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800c158:	f013 0a01 	ands.w	sl, r3, #1
 800c15c:	d01a      	beq.n	800c194 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800c15e:	2c03      	cmp	r4, #3
 800c160:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 800c162:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800c166:	bf28      	it	cs
 800c168:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 800c16a:	4288      	cmp	r0, r1
 800c16c:	d11e      	bne.n	800c1ac <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800c16e:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 800c170:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 800c174:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800c176:	bb1b      	cbnz	r3, 800c1c0 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800c178:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800c17a:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 800c17e:	0225      	lsls	r5, r4, #8
 800c180:	b2ad      	uxth	r5, r5
 800c182:	0224      	lsls	r4, r4, #8
 800c184:	430d      	orrs	r5, r1
 800c186:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800c18a:	432c      	orrs	r4, r5
 800c18c:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800c18e:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800c190:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800c192:	e009      	b.n	800c1a8 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800c194:	f7ff f9e6 	bl	800b564 <HAL_GetTick>
 800c198:	eba0 000b 	sub.w	r0, r0, fp
 800c19c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800c1a0:	d9d8      	bls.n	800c154 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800c1a2:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800c1a6:	2003      	movs	r0, #3
}
 800c1a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800c1ac:	f818 3000 	ldrb.w	r3, [r8, r0]
 800c1b0:	3001      	adds	r0, #1
 800c1b2:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 800c1b6:	fa03 f30c 	lsl.w	r3, r3, ip
 800c1ba:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800c1be:	e7d4      	b.n	800c16a <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800c1c0:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800c1c2:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800c1c6:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800c1c8:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800c1ca:	bf28      	it	cs
 800c1cc:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800c1d0:	f810 8001 	ldrb.w	r8, [r0, r1]
 800c1d4:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800c1d8:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800c1da:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800c1de:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800c1e0:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800c1e4:	d1f4      	bne.n	800c1d0 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800c1e6:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 800c1ea:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800c1ee:	4470      	add	r0, lr
 800c1f0:	e7c1      	b.n	800c176 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800c1f2:	2002      	movs	r0, #2
 800c1f4:	e7d8      	b.n	800c1a8 <HAL_DSI_LongWrite+0x74>

0800c1f6 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c1f6:	7c03      	ldrb	r3, [r0, #16]
 800c1f8:	2b01      	cmp	r3, #1
 800c1fa:	d010      	beq.n	800c21e <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800c1fc:	6803      	ldr	r3, [r0, #0]
 800c1fe:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800c202:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800c206:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800c20a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800c20e:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800c212:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c216:	2300      	movs	r3, #0
 800c218:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800c21a:	4618      	mov	r0, r3
 800c21c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c21e:	2002      	movs	r0, #2
}
 800c220:	4770      	bx	lr
	...

0800c224 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800c224:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c228:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800c3ec <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800c22c:	4a6d      	ldr	r2, [pc, #436]	; (800c3e4 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c22e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c230:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800c232:	2401      	movs	r4, #1
 800c234:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c236:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800c23a:	43ac      	bics	r4, r5
 800c23c:	f040 80b9 	bne.w	800c3b2 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800c240:	684d      	ldr	r5, [r1, #4]
 800c242:	f005 0403 	and.w	r4, r5, #3
 800c246:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800c24a:	2603      	movs	r6, #3
 800c24c:	1e67      	subs	r7, r4, #1
 800c24e:	fa06 f608 	lsl.w	r6, r6, r8
 800c252:	2f01      	cmp	r7, #1
 800c254:	ea6f 0606 	mvn.w	r6, r6
 800c258:	d834      	bhi.n	800c2c4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800c25a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c25c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800c260:	68cf      	ldr	r7, [r1, #12]
 800c262:	fa07 f708 	lsl.w	r7, r7, r8
 800c266:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800c26a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800c26c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800c26e:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800c272:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800c276:	409f      	lsls	r7, r3
 800c278:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800c27c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800c27e:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800c280:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800c284:	688f      	ldr	r7, [r1, #8]
 800c286:	fa07 f708 	lsl.w	r7, r7, r8
 800c28a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800c28e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800c290:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800c292:	d119      	bne.n	800c2c8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800c294:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800c298:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c29c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800c2a0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c2a4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800c2a8:	f04f 0e0f 	mov.w	lr, #15
 800c2ac:	fa0e fe0b 	lsl.w	lr, lr, fp
 800c2b0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800c2b4:	690f      	ldr	r7, [r1, #16]
 800c2b6:	fa07 f70b 	lsl.w	r7, r7, fp
 800c2ba:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800c2be:	f8ca 7020 	str.w	r7, [sl, #32]
 800c2c2:	e001      	b.n	800c2c8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800c2c4:	2c03      	cmp	r4, #3
 800c2c6:	d1da      	bne.n	800c27e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800c2c8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800c2ca:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800c2ce:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800c2d0:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800c2d2:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800c2d6:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800c2d8:	d06b      	beq.n	800c3b2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c2da:	f04f 0a00 	mov.w	sl, #0
 800c2de:	f8cd a004 	str.w	sl, [sp, #4]
 800c2e2:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c2e6:	4c40      	ldr	r4, [pc, #256]	; (800c3e8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c2e8:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800c2ec:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800c2f0:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800c2f4:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800c2f8:	9601      	str	r6, [sp, #4]
 800c2fa:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800c2fc:	f023 0603 	bic.w	r6, r3, #3
 800c300:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800c304:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c308:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800c30c:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c310:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800c314:	270f      	movs	r7, #15
 800c316:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c31a:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c31c:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c320:	d04e      	beq.n	800c3c0 <HAL_GPIO_Init+0x19c>
 800c322:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c326:	42a0      	cmp	r0, r4
 800c328:	d04c      	beq.n	800c3c4 <HAL_GPIO_Init+0x1a0>
 800c32a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c32e:	42a0      	cmp	r0, r4
 800c330:	d04a      	beq.n	800c3c8 <HAL_GPIO_Init+0x1a4>
 800c332:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c336:	42a0      	cmp	r0, r4
 800c338:	d048      	beq.n	800c3cc <HAL_GPIO_Init+0x1a8>
 800c33a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c33e:	42a0      	cmp	r0, r4
 800c340:	d046      	beq.n	800c3d0 <HAL_GPIO_Init+0x1ac>
 800c342:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c346:	42a0      	cmp	r0, r4
 800c348:	d044      	beq.n	800c3d4 <HAL_GPIO_Init+0x1b0>
 800c34a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c34e:	42a0      	cmp	r0, r4
 800c350:	d042      	beq.n	800c3d8 <HAL_GPIO_Init+0x1b4>
 800c352:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c356:	42a0      	cmp	r0, r4
 800c358:	d040      	beq.n	800c3dc <HAL_GPIO_Init+0x1b8>
 800c35a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c35e:	42a0      	cmp	r0, r4
 800c360:	d03e      	beq.n	800c3e0 <HAL_GPIO_Init+0x1bc>
 800c362:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800c366:	42a0      	cmp	r0, r4
 800c368:	bf0c      	ite	eq
 800c36a:	2409      	moveq	r4, #9
 800c36c:	240a      	movne	r4, #10
 800c36e:	fa04 f40e 	lsl.w	r4, r4, lr
 800c372:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800c374:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 800c376:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800c378:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800c37c:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800c37e:	bf54      	ite	pl
 800c380:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800c382:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800c386:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 800c388:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800c38a:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800c38c:	bf54      	ite	pl
 800c38e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800c390:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800c394:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800c396:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800c398:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800c39a:	bf54      	ite	pl
 800c39c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800c39e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800c3a2:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800c3a4:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800c3a6:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800c3a8:	bf54      	ite	pl
 800c3aa:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800c3ac:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800c3b0:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c3b2:	3301      	adds	r3, #1
 800c3b4:	2b10      	cmp	r3, #16
 800c3b6:	f47f af3b 	bne.w	800c230 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800c3ba:	b003      	add	sp, #12
 800c3bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c3c0:	4654      	mov	r4, sl
 800c3c2:	e7d4      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3c4:	2401      	movs	r4, #1
 800c3c6:	e7d2      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3c8:	2402      	movs	r4, #2
 800c3ca:	e7d0      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3cc:	2403      	movs	r4, #3
 800c3ce:	e7ce      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3d0:	2404      	movs	r4, #4
 800c3d2:	e7cc      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3d4:	2405      	movs	r4, #5
 800c3d6:	e7ca      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3d8:	2406      	movs	r4, #6
 800c3da:	e7c8      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3dc:	2407      	movs	r4, #7
 800c3de:	e7c6      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3e0:	2408      	movs	r4, #8
 800c3e2:	e7c4      	b.n	800c36e <HAL_GPIO_Init+0x14a>
 800c3e4:	40013c00 	.word	0x40013c00
 800c3e8:	40020000 	.word	0x40020000
 800c3ec:	40023800 	.word	0x40023800

0800c3f0 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800c3f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800c3f4:	4c4a      	ldr	r4, [pc, #296]	; (800c520 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800c3f6:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c528 <HAL_GPIO_DeInit+0x138>
 800c3fa:	f8df a130 	ldr.w	sl, [pc, #304]	; 800c52c <HAL_GPIO_DeInit+0x13c>
 800c3fe:	f8df b130 	ldr.w	fp, [pc, #304]	; 800c530 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c402:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800c404:	2301      	movs	r3, #1
 800c406:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800c40a:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800c40e:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800c412:	d16e      	bne.n	800c4f2 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800c414:	f022 0503 	bic.w	r5, r2, #3
 800c418:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800c41c:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800c420:	4b40      	ldr	r3, [pc, #256]	; (800c524 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800c422:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800c426:	f002 0c03 	and.w	ip, r2, #3
 800c42a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800c42e:	260f      	movs	r6, #15
 800c430:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800c434:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800c436:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800c43a:	d05f      	beq.n	800c4fc <HAL_GPIO_DeInit+0x10c>
 800c43c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800c440:	4298      	cmp	r0, r3
 800c442:	d05d      	beq.n	800c500 <HAL_GPIO_DeInit+0x110>
 800c444:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800c448:	4298      	cmp	r0, r3
 800c44a:	d05b      	beq.n	800c504 <HAL_GPIO_DeInit+0x114>
 800c44c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800c450:	4298      	cmp	r0, r3
 800c452:	d059      	beq.n	800c508 <HAL_GPIO_DeInit+0x118>
 800c454:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800c458:	4298      	cmp	r0, r3
 800c45a:	d057      	beq.n	800c50c <HAL_GPIO_DeInit+0x11c>
 800c45c:	4548      	cmp	r0, r9
 800c45e:	d057      	beq.n	800c510 <HAL_GPIO_DeInit+0x120>
 800c460:	4550      	cmp	r0, sl
 800c462:	d057      	beq.n	800c514 <HAL_GPIO_DeInit+0x124>
 800c464:	4558      	cmp	r0, fp
 800c466:	d057      	beq.n	800c518 <HAL_GPIO_DeInit+0x128>
 800c468:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c46c:	4298      	cmp	r0, r3
 800c46e:	d055      	beq.n	800c51c <HAL_GPIO_DeInit+0x12c>
 800c470:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800c474:	4298      	cmp	r0, r3
 800c476:	bf0c      	ite	eq
 800c478:	2309      	moveq	r3, #9
 800c47a:	230a      	movne	r3, #10
 800c47c:	fa03 f30c 	lsl.w	r3, r3, ip
 800c480:	4543      	cmp	r3, r8
 800c482:	d113      	bne.n	800c4ac <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800c484:	6823      	ldr	r3, [r4, #0]
 800c486:	ea23 0307 	bic.w	r3, r3, r7
 800c48a:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800c48c:	6863      	ldr	r3, [r4, #4]
 800c48e:	ea23 0307 	bic.w	r3, r3, r7
 800c492:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800c494:	68a3      	ldr	r3, [r4, #8]
 800c496:	ea23 0307 	bic.w	r3, r3, r7
 800c49a:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800c49c:	68e3      	ldr	r3, [r4, #12]
 800c49e:	ea23 0707 	bic.w	r7, r3, r7
 800c4a2:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800c4a4:	68ab      	ldr	r3, [r5, #8]
 800c4a6:	ea23 0606 	bic.w	r6, r3, r6
 800c4aa:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800c4ac:	6805      	ldr	r5, [r0, #0]
 800c4ae:	2603      	movs	r6, #3
 800c4b0:	0053      	lsls	r3, r2, #1
 800c4b2:	fa06 f303 	lsl.w	r3, r6, r3
 800c4b6:	ea25 0503 	bic.w	r5, r5, r3
 800c4ba:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c4bc:	fa22 f506 	lsr.w	r5, r2, r6
 800c4c0:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800c4c4:	f002 0c07 	and.w	ip, r2, #7
 800c4c8:	6a2e      	ldr	r6, [r5, #32]
 800c4ca:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800c4ce:	270f      	movs	r7, #15
 800c4d0:	fa07 f70c 	lsl.w	r7, r7, ip
 800c4d4:	ea26 0707 	bic.w	r7, r6, r7
 800c4d8:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800c4da:	68c5      	ldr	r5, [r0, #12]
 800c4dc:	ea25 0503 	bic.w	r5, r5, r3
 800c4e0:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800c4e2:	6845      	ldr	r5, [r0, #4]
 800c4e4:	ea25 050e 	bic.w	r5, r5, lr
 800c4e8:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c4ea:	6885      	ldr	r5, [r0, #8]
 800c4ec:	ea25 0303 	bic.w	r3, r5, r3
 800c4f0:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c4f2:	3201      	adds	r2, #1
 800c4f4:	2a10      	cmp	r2, #16
 800c4f6:	d185      	bne.n	800c404 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800c4f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800c4fc:	2300      	movs	r3, #0
 800c4fe:	e7bd      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c500:	2301      	movs	r3, #1
 800c502:	e7bb      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c504:	2302      	movs	r3, #2
 800c506:	e7b9      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c508:	2303      	movs	r3, #3
 800c50a:	e7b7      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c50c:	2304      	movs	r3, #4
 800c50e:	e7b5      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c510:	2305      	movs	r3, #5
 800c512:	e7b3      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c514:	2306      	movs	r3, #6
 800c516:	e7b1      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c518:	2307      	movs	r3, #7
 800c51a:	e7af      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c51c:	2308      	movs	r3, #8
 800c51e:	e7ad      	b.n	800c47c <HAL_GPIO_DeInit+0x8c>
 800c520:	40013c00 	.word	0x40013c00
 800c524:	40020000 	.word	0x40020000
 800c528:	40021400 	.word	0x40021400
 800c52c:	40021800 	.word	0x40021800
 800c530:	40021c00 	.word	0x40021c00

0800c534 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800c534:	6903      	ldr	r3, [r0, #16]
 800c536:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800c538:	bf14      	ite	ne
 800c53a:	2001      	movne	r0, #1
 800c53c:	2000      	moveq	r0, #0
 800c53e:	4770      	bx	lr

0800c540 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800c540:	b10a      	cbz	r2, 800c546 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c542:	6181      	str	r1, [r0, #24]
  }
}
 800c544:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c546:	0409      	lsls	r1, r1, #16
 800c548:	e7fb      	b.n	800c542 <HAL_GPIO_WritePin+0x2>

0800c54a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 800c54a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800c54c:	ea01 0203 	and.w	r2, r1, r3
 800c550:	ea21 0103 	bic.w	r1, r1, r3
 800c554:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800c558:	6181      	str	r1, [r0, #24]
}
 800c55a:	4770      	bx	lr

0800c55c <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c55c:	6801      	ldr	r1, [r0, #0]
 800c55e:	694b      	ldr	r3, [r1, #20]
 800c560:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800c564:	f04f 0200 	mov.w	r2, #0
 800c568:	d010      	beq.n	800c58c <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c56a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800c56e:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800c570:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c572:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c574:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c578:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c57c:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800c57e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c582:	f043 0304 	orr.w	r3, r3, #4
 800c586:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800c588:	2001      	movs	r0, #1
 800c58a:	4770      	bx	lr
  }
  return HAL_OK;
 800c58c:	4618      	mov	r0, r3
}
 800c58e:	4770      	bx	lr

0800c590 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800c590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c594:	4604      	mov	r4, r0
 800c596:	460f      	mov	r7, r1
 800c598:	4616      	mov	r6, r2
 800c59a:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c59c:	6825      	ldr	r5, [r4, #0]
 800c59e:	6968      	ldr	r0, [r5, #20]
 800c5a0:	ea27 0000 	bic.w	r0, r7, r0
 800c5a4:	b280      	uxth	r0, r0
 800c5a6:	b1b8      	cbz	r0, 800c5d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c5a8:	696b      	ldr	r3, [r5, #20]
 800c5aa:	055a      	lsls	r2, r3, #21
 800c5ac:	d516      	bpl.n	800c5dc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c5ae:	682b      	ldr	r3, [r5, #0]
 800c5b0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c5b4:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c5b6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800c5ba:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c5bc:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c5be:	2300      	movs	r3, #0
 800c5c0:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c5c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c5c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c5ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c5cc:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c5d0:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c5d2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800c5d6:	2001      	movs	r0, #1
}
 800c5d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800c5dc:	1c73      	adds	r3, r6, #1
 800c5de:	d0de      	beq.n	800c59e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5e0:	f7fe ffc0 	bl	800b564 <HAL_GetTick>
 800c5e4:	eba0 0008 	sub.w	r0, r0, r8
 800c5e8:	42b0      	cmp	r0, r6
 800c5ea:	d801      	bhi.n	800c5f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800c5ec:	2e00      	cmp	r6, #0
 800c5ee:	d1d5      	bne.n	800c59c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c5f0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c5f2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c5f4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c5f6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c5fa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c5fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c600:	f042 0220 	orr.w	r2, r2, #32
 800c604:	e7e4      	b.n	800c5d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800c606 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800c606:	b570      	push	{r4, r5, r6, lr}
 800c608:	4604      	mov	r4, r0
 800c60a:	460d      	mov	r5, r1
 800c60c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c60e:	6823      	ldr	r3, [r4, #0]
 800c610:	695b      	ldr	r3, [r3, #20]
 800c612:	075b      	lsls	r3, r3, #29
 800c614:	d501      	bpl.n	800c61a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800c616:	2000      	movs	r0, #0
}
 800c618:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800c61a:	4620      	mov	r0, r4
 800c61c:	f7ff ff9e 	bl	800c55c <I2C_IsAcknowledgeFailed>
 800c620:	b9a8      	cbnz	r0, 800c64e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800c622:	1c6a      	adds	r2, r5, #1
 800c624:	d0f3      	beq.n	800c60e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c626:	f7fe ff9d 	bl	800b564 <HAL_GetTick>
 800c62a:	1b80      	subs	r0, r0, r6
 800c62c:	42a8      	cmp	r0, r5
 800c62e:	d801      	bhi.n	800c634 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800c630:	2d00      	cmp	r5, #0
 800c632:	d1ec      	bne.n	800c60e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c634:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c636:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c638:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c63a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c63e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c642:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c644:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c648:	f042 0220 	orr.w	r2, r2, #32
 800c64c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800c64e:	2001      	movs	r0, #1
 800c650:	e7e2      	b.n	800c618 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800c652 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800c652:	b570      	push	{r4, r5, r6, lr}
 800c654:	4604      	mov	r4, r0
 800c656:	460d      	mov	r5, r1
 800c658:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c65a:	6821      	ldr	r1, [r4, #0]
 800c65c:	694b      	ldr	r3, [r1, #20]
 800c65e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800c662:	d001      	beq.n	800c668 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800c664:	2000      	movs	r0, #0
 800c666:	e010      	b.n	800c68a <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c668:	694a      	ldr	r2, [r1, #20]
 800c66a:	06d2      	lsls	r2, r2, #27
 800c66c:	d50e      	bpl.n	800c68c <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c66e:	f06f 0210 	mvn.w	r2, #16
 800c672:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c674:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c676:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c678:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c67c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c680:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c682:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c684:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800c688:	2001      	movs	r0, #1
}
 800c68a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c68c:	f7fe ff6a 	bl	800b564 <HAL_GetTick>
 800c690:	1b80      	subs	r0, r0, r6
 800c692:	42a8      	cmp	r0, r5
 800c694:	d801      	bhi.n	800c69a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800c696:	2d00      	cmp	r5, #0
 800c698:	d1df      	bne.n	800c65a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c69a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c69c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c69e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6a0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c6a4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6a8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c6aa:	f042 0220 	orr.w	r2, r2, #32
 800c6ae:	e7e8      	b.n	800c682 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800c6b0 <I2C_WaitOnFlagUntilTimeout>:
{
 800c6b0:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800c6b4:	4606      	mov	r6, r0
 800c6b6:	460f      	mov	r7, r1
 800c6b8:	4691      	mov	r9, r2
 800c6ba:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6bc:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c6c0:	6833      	ldr	r3, [r6, #0]
 800c6c2:	f1ba 0f01 	cmp.w	sl, #1
 800c6c6:	bf0c      	ite	eq
 800c6c8:	695c      	ldreq	r4, [r3, #20]
 800c6ca:	699c      	ldrne	r4, [r3, #24]
 800c6cc:	ea27 0404 	bic.w	r4, r7, r4
 800c6d0:	b2a4      	uxth	r4, r4
 800c6d2:	fab4 f484 	clz	r4, r4
 800c6d6:	0964      	lsrs	r4, r4, #5
 800c6d8:	45a1      	cmp	r9, r4
 800c6da:	d001      	beq.n	800c6e0 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800c6dc:	2000      	movs	r0, #0
 800c6de:	e017      	b.n	800c710 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800c6e0:	1c6a      	adds	r2, r5, #1
 800c6e2:	d0ee      	beq.n	800c6c2 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c6e4:	f7fe ff3e 	bl	800b564 <HAL_GetTick>
 800c6e8:	9b08      	ldr	r3, [sp, #32]
 800c6ea:	1ac0      	subs	r0, r0, r3
 800c6ec:	42a8      	cmp	r0, r5
 800c6ee:	d801      	bhi.n	800c6f4 <I2C_WaitOnFlagUntilTimeout+0x44>
 800c6f0:	2d00      	cmp	r5, #0
 800c6f2:	d1e5      	bne.n	800c6c0 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6f4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6f6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6f8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6fa:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c6fe:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c702:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c704:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c708:	f042 0220 	orr.w	r2, r2, #32
 800c70c:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c70e:	2001      	movs	r0, #1
}
 800c710:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800c714 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800c714:	b570      	push	{r4, r5, r6, lr}
 800c716:	4604      	mov	r4, r0
 800c718:	460d      	mov	r5, r1
 800c71a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c71c:	6823      	ldr	r3, [r4, #0]
 800c71e:	695b      	ldr	r3, [r3, #20]
 800c720:	061b      	lsls	r3, r3, #24
 800c722:	d501      	bpl.n	800c728 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800c724:	2000      	movs	r0, #0
}
 800c726:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800c728:	4620      	mov	r0, r4
 800c72a:	f7ff ff17 	bl	800c55c <I2C_IsAcknowledgeFailed>
 800c72e:	b9a8      	cbnz	r0, 800c75c <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800c730:	1c6a      	adds	r2, r5, #1
 800c732:	d0f3      	beq.n	800c71c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c734:	f7fe ff16 	bl	800b564 <HAL_GetTick>
 800c738:	1b80      	subs	r0, r0, r6
 800c73a:	42a8      	cmp	r0, r5
 800c73c:	d801      	bhi.n	800c742 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800c73e:	2d00      	cmp	r5, #0
 800c740:	d1ec      	bne.n	800c71c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c742:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c744:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c746:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c748:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c74c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c750:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c752:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c756:	f042 0220 	orr.w	r2, r2, #32
 800c75a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800c75c:	2001      	movs	r0, #1
 800c75e:	e7e2      	b.n	800c726 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800c760 <I2C_RequestMemoryWrite>:
{
 800c760:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c764:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c766:	6802      	ldr	r2, [r0, #0]
{
 800c768:	b085      	sub	sp, #20
 800c76a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800c76e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c770:	6813      	ldr	r3, [r2, #0]
 800c772:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c776:	6013      	str	r3, [r2, #0]
{
 800c778:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c77a:	463b      	mov	r3, r7
 800c77c:	f8cd 8000 	str.w	r8, [sp]
 800c780:	2200      	movs	r2, #0
 800c782:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800c786:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c788:	f7ff ff92 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800c78c:	6823      	ldr	r3, [r4, #0]
 800c78e:	b138      	cbz	r0, 800c7a0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c790:	681b      	ldr	r3, [r3, #0]
 800c792:	05db      	lsls	r3, r3, #23
 800c794:	d502      	bpl.n	800c79c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c796:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c79a:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800c79c:	2003      	movs	r0, #3
 800c79e:	e00a      	b.n	800c7b6 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800c7a0:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800c7a4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800c7a6:	4919      	ldr	r1, [pc, #100]	; (800c80c <I2C_RequestMemoryWrite+0xac>)
 800c7a8:	4643      	mov	r3, r8
 800c7aa:	463a      	mov	r2, r7
 800c7ac:	4620      	mov	r0, r4
 800c7ae:	f7ff feef 	bl	800c590 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800c7b2:	b118      	cbz	r0, 800c7bc <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800c7b4:	2001      	movs	r0, #1
}
 800c7b6:	b005      	add	sp, #20
 800c7b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c7bc:	6823      	ldr	r3, [r4, #0]
 800c7be:	9003      	str	r0, [sp, #12]
 800c7c0:	695a      	ldr	r2, [r3, #20]
 800c7c2:	9203      	str	r2, [sp, #12]
 800c7c4:	699b      	ldr	r3, [r3, #24]
 800c7c6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c7c8:	4642      	mov	r2, r8
 800c7ca:	4639      	mov	r1, r7
 800c7cc:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c7ce:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c7d0:	f7ff ffa0 	bl	800c714 <I2C_WaitOnTXEFlagUntilTimeout>
 800c7d4:	b140      	cbz	r0, 800c7e8 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c7d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c7d8:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7da:	bf01      	itttt	eq
 800c7dc:	6822      	ldreq	r2, [r4, #0]
 800c7de:	6813      	ldreq	r3, [r2, #0]
 800c7e0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800c7e4:	6013      	streq	r3, [r2, #0]
 800c7e6:	e7e5      	b.n	800c7b4 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c7e8:	f1b9 0f01 	cmp.w	r9, #1
 800c7ec:	6823      	ldr	r3, [r4, #0]
 800c7ee:	d102      	bne.n	800c7f6 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c7f0:	b2ed      	uxtb	r5, r5
 800c7f2:	611d      	str	r5, [r3, #16]
 800c7f4:	e7df      	b.n	800c7b6 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c7f6:	0a2a      	lsrs	r2, r5, #8
 800c7f8:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c7fa:	4639      	mov	r1, r7
 800c7fc:	4642      	mov	r2, r8
 800c7fe:	4620      	mov	r0, r4
 800c800:	f7ff ff88 	bl	800c714 <I2C_WaitOnTXEFlagUntilTimeout>
 800c804:	2800      	cmp	r0, #0
 800c806:	d1e6      	bne.n	800c7d6 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c808:	6823      	ldr	r3, [r4, #0]
 800c80a:	e7f1      	b.n	800c7f0 <I2C_RequestMemoryWrite+0x90>
 800c80c:	00010002 	.word	0x00010002

0800c810 <I2C_RequestMemoryRead>:
{
 800c810:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c814:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c816:	6803      	ldr	r3, [r0, #0]
{
 800c818:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c81a:	681a      	ldr	r2, [r3, #0]
 800c81c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800c820:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c822:	681a      	ldr	r2, [r3, #0]
{
 800c824:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c828:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c82c:	601a      	str	r2, [r3, #0]
{
 800c82e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c830:	463b      	mov	r3, r7
 800c832:	f8cd 8000 	str.w	r8, [sp]
 800c836:	2200      	movs	r2, #0
 800c838:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800c83c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c83e:	f7ff ff37 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800c842:	6823      	ldr	r3, [r4, #0]
 800c844:	b148      	cbz	r0, 800c85a <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c846:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c848:	05db      	lsls	r3, r3, #23
 800c84a:	d502      	bpl.n	800c852 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c84c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c850:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800c852:	2003      	movs	r0, #3
}
 800c854:	b004      	add	sp, #16
 800c856:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800c85a:	fa5f f986 	uxtb.w	r9, r6
 800c85e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800c862:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800c864:	492a      	ldr	r1, [pc, #168]	; (800c910 <I2C_RequestMemoryRead+0x100>)
 800c866:	4643      	mov	r3, r8
 800c868:	463a      	mov	r2, r7
 800c86a:	4620      	mov	r0, r4
 800c86c:	f7ff fe90 	bl	800c590 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800c870:	b108      	cbz	r0, 800c876 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800c872:	2001      	movs	r0, #1
 800c874:	e7ee      	b.n	800c854 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c876:	6823      	ldr	r3, [r4, #0]
 800c878:	9003      	str	r0, [sp, #12]
 800c87a:	695a      	ldr	r2, [r3, #20]
 800c87c:	9203      	str	r2, [sp, #12]
 800c87e:	699b      	ldr	r3, [r3, #24]
 800c880:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c882:	4642      	mov	r2, r8
 800c884:	4639      	mov	r1, r7
 800c886:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c888:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c88a:	f7ff ff43 	bl	800c714 <I2C_WaitOnTXEFlagUntilTimeout>
 800c88e:	b140      	cbz	r0, 800c8a2 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c890:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c892:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c894:	bf01      	itttt	eq
 800c896:	6822      	ldreq	r2, [r4, #0]
 800c898:	6813      	ldreq	r3, [r2, #0]
 800c89a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800c89e:	6013      	streq	r3, [r2, #0]
 800c8a0:	e7e7      	b.n	800c872 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c8a2:	f1ba 0f01 	cmp.w	sl, #1
 800c8a6:	6823      	ldr	r3, [r4, #0]
 800c8a8:	d11a      	bne.n	800c8e0 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c8aa:	b2ed      	uxtb	r5, r5
 800c8ac:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c8ae:	4642      	mov	r2, r8
 800c8b0:	4639      	mov	r1, r7
 800c8b2:	4620      	mov	r0, r4
 800c8b4:	f7ff ff2e 	bl	800c714 <I2C_WaitOnTXEFlagUntilTimeout>
 800c8b8:	2800      	cmp	r0, #0
 800c8ba:	d1e9      	bne.n	800c890 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c8bc:	6822      	ldr	r2, [r4, #0]
 800c8be:	6813      	ldr	r3, [r2, #0]
 800c8c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c8c4:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c8c6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800c8ca:	4602      	mov	r2, r0
 800c8cc:	f8cd 8000 	str.w	r8, [sp]
 800c8d0:	463b      	mov	r3, r7
 800c8d2:	4620      	mov	r0, r4
 800c8d4:	f7ff feec 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800c8d8:	6822      	ldr	r2, [r4, #0]
 800c8da:	b160      	cbz	r0, 800c8f6 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c8dc:	6813      	ldr	r3, [r2, #0]
 800c8de:	e7b3      	b.n	800c848 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c8e0:	0a2a      	lsrs	r2, r5, #8
 800c8e2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c8e4:	4639      	mov	r1, r7
 800c8e6:	4642      	mov	r2, r8
 800c8e8:	4620      	mov	r0, r4
 800c8ea:	f7ff ff13 	bl	800c714 <I2C_WaitOnTXEFlagUntilTimeout>
 800c8ee:	2800      	cmp	r0, #0
 800c8f0:	d1ce      	bne.n	800c890 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c8f2:	6823      	ldr	r3, [r4, #0]
 800c8f4:	e7d9      	b.n	800c8aa <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c8f6:	f049 0301 	orr.w	r3, r9, #1
 800c8fa:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800c8fc:	4904      	ldr	r1, [pc, #16]	; (800c910 <I2C_RequestMemoryRead+0x100>)
 800c8fe:	4643      	mov	r3, r8
 800c900:	463a      	mov	r2, r7
 800c902:	4620      	mov	r0, r4
 800c904:	f7ff fe44 	bl	800c590 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800c908:	3800      	subs	r0, #0
 800c90a:	bf18      	it	ne
 800c90c:	2001      	movne	r0, #1
 800c90e:	e7a1      	b.n	800c854 <I2C_RequestMemoryRead+0x44>
 800c910:	00010002 	.word	0x00010002

0800c914 <HAL_I2C_Init>:
{
 800c914:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800c916:	4604      	mov	r4, r0
 800c918:	b908      	cbnz	r0, 800c91e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800c91a:	2001      	movs	r0, #1
}
 800c91c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c91e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c922:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c926:	b91b      	cbnz	r3, 800c930 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800c928:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c92c:	f7f5 f8ca 	bl	8001ac4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c930:	2324      	movs	r3, #36	; 0x24
 800c932:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c936:	6823      	ldr	r3, [r4, #0]
 800c938:	681a      	ldr	r2, [r3, #0]
 800c93a:	f022 0201 	bic.w	r2, r2, #1
 800c93e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c940:	681a      	ldr	r2, [r3, #0]
 800c942:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c946:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c948:	681a      	ldr	r2, [r3, #0]
 800c94a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c94e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c950:	f001 f818 	bl	800d984 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c954:	4a3f      	ldr	r2, [pc, #252]	; (800ca54 <HAL_I2C_Init+0x140>)
 800c956:	6863      	ldr	r3, [r4, #4]
 800c958:	4293      	cmp	r3, r2
 800c95a:	bf94      	ite	ls
 800c95c:	4a3e      	ldrls	r2, [pc, #248]	; (800ca58 <HAL_I2C_Init+0x144>)
 800c95e:	4a3f      	ldrhi	r2, [pc, #252]	; (800ca5c <HAL_I2C_Init+0x148>)
 800c960:	4290      	cmp	r0, r2
 800c962:	bf8c      	ite	hi
 800c964:	2200      	movhi	r2, #0
 800c966:	2201      	movls	r2, #1
 800c968:	2a00      	cmp	r2, #0
 800c96a:	d1d6      	bne.n	800c91a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c96c:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c96e:	4e3c      	ldr	r6, [pc, #240]	; (800ca60 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c970:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c972:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c976:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800c97a:	4332      	orrs	r2, r6
 800c97c:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c97e:	4a35      	ldr	r2, [pc, #212]	; (800ca54 <HAL_I2C_Init+0x140>)
 800c980:	6a0d      	ldr	r5, [r1, #32]
 800c982:	4293      	cmp	r3, r2
 800c984:	bf84      	itt	hi
 800c986:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 800c98a:	4372      	mulhi	r2, r6
 800c98c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800c990:	bf91      	iteee	ls
 800c992:	1c72      	addls	r2, r6, #1
 800c994:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800c998:	fbb2 f2f6 	udivhi	r2, r2, r6
 800c99c:	3201      	addhi	r2, #1
 800c99e:	432a      	orrs	r2, r5
 800c9a0:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c9a2:	69cd      	ldr	r5, [r1, #28]
 800c9a4:	1e42      	subs	r2, r0, #1
 800c9a6:	482b      	ldr	r0, [pc, #172]	; (800ca54 <HAL_I2C_Init+0x140>)
 800c9a8:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 800c9ac:	4283      	cmp	r3, r0
 800c9ae:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800c9b2:	d832      	bhi.n	800ca1a <HAL_I2C_Init+0x106>
 800c9b4:	005b      	lsls	r3, r3, #1
 800c9b6:	fbb2 f3f3 	udiv	r3, r2, r3
 800c9ba:	f640 72fc 	movw	r2, #4092	; 0xffc
 800c9be:	3301      	adds	r3, #1
 800c9c0:	4213      	tst	r3, r2
 800c9c2:	d042      	beq.n	800ca4a <HAL_I2C_Init+0x136>
 800c9c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c9c8:	432b      	orrs	r3, r5
 800c9ca:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c9cc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c9d0:	680a      	ldr	r2, [r1, #0]
 800c9d2:	4303      	orrs	r3, r0
 800c9d4:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800c9d8:	4313      	orrs	r3, r2
 800c9da:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c9dc:	688a      	ldr	r2, [r1, #8]
 800c9de:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c9e2:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 800c9e6:	4303      	orrs	r3, r0
 800c9e8:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800c9ec:	4313      	orrs	r3, r2
 800c9ee:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c9f0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c9f4:	68ca      	ldr	r2, [r1, #12]
 800c9f6:	4303      	orrs	r3, r0
 800c9f8:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800c9fc:	4313      	orrs	r3, r2
 800c9fe:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800ca00:	680b      	ldr	r3, [r1, #0]
 800ca02:	f043 0301 	orr.w	r3, r3, #1
 800ca06:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ca08:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800ca0a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ca0c:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800ca0e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800ca12:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca14:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800ca18:	e780      	b.n	800c91c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800ca1a:	68a0      	ldr	r0, [r4, #8]
 800ca1c:	b950      	cbnz	r0, 800ca34 <HAL_I2C_Init+0x120>
 800ca1e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800ca22:	fbb2 f3f3 	udiv	r3, r2, r3
 800ca26:	3301      	adds	r3, #1
 800ca28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ca2c:	b17b      	cbz	r3, 800ca4e <HAL_I2C_Init+0x13a>
 800ca2e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800ca32:	e7c9      	b.n	800c9c8 <HAL_I2C_Init+0xb4>
 800ca34:	2019      	movs	r0, #25
 800ca36:	4343      	muls	r3, r0
 800ca38:	fbb2 f3f3 	udiv	r3, r2, r3
 800ca3c:	3301      	adds	r3, #1
 800ca3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ca42:	b123      	cbz	r3, 800ca4e <HAL_I2C_Init+0x13a>
 800ca44:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800ca48:	e7be      	b.n	800c9c8 <HAL_I2C_Init+0xb4>
 800ca4a:	2304      	movs	r3, #4
 800ca4c:	e7bc      	b.n	800c9c8 <HAL_I2C_Init+0xb4>
 800ca4e:	2301      	movs	r3, #1
 800ca50:	e7ba      	b.n	800c9c8 <HAL_I2C_Init+0xb4>
 800ca52:	bf00      	nop
 800ca54:	000186a0 	.word	0x000186a0
 800ca58:	001e847f 	.word	0x001e847f
 800ca5c:	003d08ff 	.word	0x003d08ff
 800ca60:	000f4240 	.word	0x000f4240

0800ca64 <HAL_I2C_DeInit>:
{
 800ca64:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800ca66:	4604      	mov	r4, r0
 800ca68:	b198      	cbz	r0, 800ca92 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800ca6a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800ca6c:	2324      	movs	r3, #36	; 0x24
 800ca6e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800ca72:	6813      	ldr	r3, [r2, #0]
 800ca74:	f023 0301 	bic.w	r3, r3, #1
 800ca78:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800ca7a:	f7f5 f867 	bl	8001b4c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800ca7e:	2000      	movs	r0, #0
 800ca80:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800ca82:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800ca86:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800ca8a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ca8c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800ca90:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ca92:	2001      	movs	r0, #1
 800ca94:	e7fc      	b.n	800ca90 <HAL_I2C_DeInit+0x2c>
	...

0800ca98 <HAL_I2C_Mem_Write>:
{
 800ca98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ca9c:	4604      	mov	r4, r0
 800ca9e:	4699      	mov	r9, r3
 800caa0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800caa2:	460f      	mov	r7, r1
 800caa4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800caa6:	f7fe fd5d 	bl	800b564 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800caaa:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800caae:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cab0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cab2:	d003      	beq.n	800cabc <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800cab4:	2002      	movs	r0, #2
}
 800cab6:	b003      	add	sp, #12
 800cab8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800cabc:	9000      	str	r0, [sp, #0]
 800cabe:	493c      	ldr	r1, [pc, #240]	; (800cbb0 <HAL_I2C_Mem_Write+0x118>)
 800cac0:	2319      	movs	r3, #25
 800cac2:	2201      	movs	r2, #1
 800cac4:	4620      	mov	r0, r4
 800cac6:	f7ff fdf3 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800caca:	2800      	cmp	r0, #0
 800cacc:	d1f2      	bne.n	800cab4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800cace:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800cad2:	2b01      	cmp	r3, #1
 800cad4:	d0ee      	beq.n	800cab4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cad6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cad8:	2301      	movs	r3, #1
 800cada:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cade:	6803      	ldr	r3, [r0, #0]
 800cae0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800cae2:	bf5e      	ittt	pl
 800cae4:	6803      	ldrpl	r3, [r0, #0]
 800cae6:	f043 0301 	orrpl.w	r3, r3, #1
 800caea:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800caec:	6803      	ldr	r3, [r0, #0]
 800caee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800caf2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800caf4:	2321      	movs	r3, #33	; 0x21
 800caf6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cafa:	2340      	movs	r3, #64	; 0x40
 800cafc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cb00:	2300      	movs	r3, #0
 800cb02:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800cb04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cb06:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800cb08:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800cb0c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cb0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cb10:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cb12:	4b28      	ldr	r3, [pc, #160]	; (800cbb4 <HAL_I2C_Mem_Write+0x11c>)
 800cb14:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cb16:	e9cd 6500 	strd	r6, r5, [sp]
 800cb1a:	464b      	mov	r3, r9
 800cb1c:	4642      	mov	r2, r8
 800cb1e:	4639      	mov	r1, r7
 800cb20:	4620      	mov	r0, r4
 800cb22:	f7ff fe1d 	bl	800c760 <I2C_RequestMemoryWrite>
 800cb26:	2800      	cmp	r0, #0
 800cb28:	d02a      	beq.n	800cb80 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800cb2a:	2001      	movs	r0, #1
 800cb2c:	e7c3      	b.n	800cab6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cb2e:	f7ff fdf1 	bl	800c714 <I2C_WaitOnTXEFlagUntilTimeout>
 800cb32:	b140      	cbz	r0, 800cb46 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cb34:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cb36:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb38:	bf01      	itttt	eq
 800cb3a:	6822      	ldreq	r2, [r4, #0]
 800cb3c:	6813      	ldreq	r3, [r2, #0]
 800cb3e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800cb42:	6013      	streq	r3, [r2, #0]
 800cb44:	e7f1      	b.n	800cb2a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cb46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb48:	6827      	ldr	r7, [r4, #0]
 800cb4a:	461a      	mov	r2, r3
 800cb4c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cb50:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800cb52:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cb54:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800cb56:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800cb58:	3a01      	subs	r2, #1
 800cb5a:	b292      	uxth	r2, r2
 800cb5c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800cb5e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800cb60:	1e48      	subs	r0, r1, #1
 800cb62:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800cb64:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800cb66:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800cb68:	d50a      	bpl.n	800cb80 <HAL_I2C_Mem_Write+0xe8>
 800cb6a:	b148      	cbz	r0, 800cb80 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cb6c:	785a      	ldrb	r2, [r3, #1]
 800cb6e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800cb70:	3302      	adds	r3, #2
 800cb72:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800cb74:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cb76:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800cb78:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800cb7a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800cb7c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800cb7e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800cb80:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cb82:	462a      	mov	r2, r5
 800cb84:	4631      	mov	r1, r6
 800cb86:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800cb88:	2b00      	cmp	r3, #0
 800cb8a:	d1d0      	bne.n	800cb2e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cb8c:	f7ff fd3b 	bl	800c606 <I2C_WaitOnBTFFlagUntilTimeout>
 800cb90:	2800      	cmp	r0, #0
 800cb92:	d1cf      	bne.n	800cb34 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb94:	6822      	ldr	r2, [r4, #0]
 800cb96:	6813      	ldr	r3, [r2, #0]
 800cb98:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800cb9c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800cb9e:	2320      	movs	r3, #32
 800cba0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800cba4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800cba8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800cbac:	e783      	b.n	800cab6 <HAL_I2C_Mem_Write+0x1e>
 800cbae:	bf00      	nop
 800cbb0:	00100002 	.word	0x00100002
 800cbb4:	ffff0000 	.word	0xffff0000

0800cbb8 <HAL_I2C_Mem_Read>:
{
 800cbb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbbc:	4604      	mov	r4, r0
 800cbbe:	b087      	sub	sp, #28
 800cbc0:	4699      	mov	r9, r3
 800cbc2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800cbc4:	460d      	mov	r5, r1
 800cbc6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800cbc8:	f7fe fccc 	bl	800b564 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cbcc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cbd0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cbd2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cbd4:	d004      	beq.n	800cbe0 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800cbd6:	2502      	movs	r5, #2
}
 800cbd8:	4628      	mov	r0, r5
 800cbda:	b007      	add	sp, #28
 800cbdc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800cbe0:	9000      	str	r0, [sp, #0]
 800cbe2:	4976      	ldr	r1, [pc, #472]	; (800cdbc <HAL_I2C_Mem_Read+0x204>)
 800cbe4:	2319      	movs	r3, #25
 800cbe6:	2201      	movs	r2, #1
 800cbe8:	4620      	mov	r0, r4
 800cbea:	f7ff fd61 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800cbee:	2800      	cmp	r0, #0
 800cbf0:	d1f1      	bne.n	800cbd6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800cbf2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800cbf6:	2b01      	cmp	r3, #1
 800cbf8:	d0ed      	beq.n	800cbd6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cbfa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cbfc:	2301      	movs	r3, #1
 800cbfe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cc02:	6803      	ldr	r3, [r0, #0]
 800cc04:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800cc06:	bf5e      	ittt	pl
 800cc08:	6803      	ldrpl	r3, [r0, #0]
 800cc0a:	f043 0301 	orrpl.w	r3, r3, #1
 800cc0e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cc10:	6803      	ldr	r3, [r0, #0]
 800cc12:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800cc16:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800cc18:	2322      	movs	r3, #34	; 0x22
 800cc1a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cc1e:	2340      	movs	r3, #64	; 0x40
 800cc20:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cc24:	2300      	movs	r3, #0
 800cc26:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800cc28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cc2a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800cc2c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800cc30:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cc32:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cc34:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cc36:	4b62      	ldr	r3, [pc, #392]	; (800cdc0 <HAL_I2C_Mem_Read+0x208>)
 800cc38:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cc3a:	4629      	mov	r1, r5
 800cc3c:	e9cd 7600 	strd	r7, r6, [sp]
 800cc40:	464b      	mov	r3, r9
 800cc42:	4642      	mov	r2, r8
 800cc44:	4620      	mov	r0, r4
 800cc46:	f7ff fde3 	bl	800c810 <I2C_RequestMemoryRead>
 800cc4a:	4605      	mov	r5, r0
 800cc4c:	b108      	cbz	r0, 800cc52 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800cc4e:	2501      	movs	r5, #1
 800cc50:	e7c2      	b.n	800cbd8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800cc52:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800cc54:	6823      	ldr	r3, [r4, #0]
 800cc56:	b9b2      	cbnz	r2, 800cc86 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc58:	9002      	str	r0, [sp, #8]
 800cc5a:	695a      	ldr	r2, [r3, #20]
 800cc5c:	9202      	str	r2, [sp, #8]
 800cc5e:	699a      	ldr	r2, [r3, #24]
 800cc60:	9202      	str	r2, [sp, #8]
 800cc62:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cc64:	681a      	ldr	r2, [r3, #0]
 800cc66:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cc6a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cc6c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800cdc4 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800cc70:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cc72:	2b00      	cmp	r3, #0
 800cc74:	d12c      	bne.n	800ccd0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800cc76:	2220      	movs	r2, #32
 800cc78:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800cc7c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800cc80:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800cc84:	e7a8      	b.n	800cbd8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800cc86:	2a01      	cmp	r2, #1
 800cc88:	d10a      	bne.n	800cca0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc8a:	681a      	ldr	r2, [r3, #0]
 800cc8c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cc90:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc92:	9003      	str	r0, [sp, #12]
 800cc94:	695a      	ldr	r2, [r3, #20]
 800cc96:	9203      	str	r2, [sp, #12]
 800cc98:	699a      	ldr	r2, [r3, #24]
 800cc9a:	9203      	str	r2, [sp, #12]
 800cc9c:	9a03      	ldr	r2, [sp, #12]
 800cc9e:	e7e1      	b.n	800cc64 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800cca0:	2a02      	cmp	r2, #2
 800cca2:	d10e      	bne.n	800ccc2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cca4:	681a      	ldr	r2, [r3, #0]
 800cca6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ccaa:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ccac:	681a      	ldr	r2, [r3, #0]
 800ccae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ccb2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ccb4:	9004      	str	r0, [sp, #16]
 800ccb6:	695a      	ldr	r2, [r3, #20]
 800ccb8:	9204      	str	r2, [sp, #16]
 800ccba:	699b      	ldr	r3, [r3, #24]
 800ccbc:	9304      	str	r3, [sp, #16]
 800ccbe:	9b04      	ldr	r3, [sp, #16]
 800ccc0:	e7d4      	b.n	800cc6c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ccc2:	9005      	str	r0, [sp, #20]
 800ccc4:	695a      	ldr	r2, [r3, #20]
 800ccc6:	9205      	str	r2, [sp, #20]
 800ccc8:	699b      	ldr	r3, [r3, #24]
 800ccca:	9305      	str	r3, [sp, #20]
 800cccc:	9b05      	ldr	r3, [sp, #20]
 800ccce:	e7cd      	b.n	800cc6c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800ccd0:	2b03      	cmp	r3, #3
 800ccd2:	d856      	bhi.n	800cd82 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800ccd4:	2b01      	cmp	r3, #1
 800ccd6:	d115      	bne.n	800cd04 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ccd8:	4632      	mov	r2, r6
 800ccda:	4639      	mov	r1, r7
 800ccdc:	4620      	mov	r0, r4
 800ccde:	f7ff fcb8 	bl	800c652 <I2C_WaitOnRXNEFlagUntilTimeout>
 800cce2:	2800      	cmp	r0, #0
 800cce4:	d1b3      	bne.n	800cc4e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cce6:	6823      	ldr	r3, [r4, #0]
 800cce8:	691a      	ldr	r2, [r3, #16]
 800ccea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ccec:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ccee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ccf0:	3301      	adds	r3, #1
 800ccf2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ccf4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ccf6:	3b01      	subs	r3, #1
 800ccf8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ccfa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ccfc:	3b01      	subs	r3, #1
 800ccfe:	b29b      	uxth	r3, r3
 800cd00:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cd02:	e7b5      	b.n	800cc70 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800cd04:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd06:	9600      	str	r6, [sp, #0]
 800cd08:	463b      	mov	r3, r7
 800cd0a:	f04f 0200 	mov.w	r2, #0
 800cd0e:	4641      	mov	r1, r8
 800cd10:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800cd12:	d119      	bne.n	800cd48 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd14:	f7ff fccc 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800cd18:	2800      	cmp	r0, #0
 800cd1a:	d198      	bne.n	800cc4e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cd1c:	6823      	ldr	r3, [r4, #0]
 800cd1e:	681a      	ldr	r2, [r3, #0]
 800cd20:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cd24:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd26:	691a      	ldr	r2, [r3, #16]
 800cd28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cd2a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800cd2c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd2e:	1c53      	adds	r3, r2, #1
 800cd30:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800cd32:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cd34:	3b01      	subs	r3, #1
 800cd36:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800cd38:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cd3a:	3b01      	subs	r3, #1
 800cd3c:	b29b      	uxth	r3, r3
 800cd3e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd40:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd42:	691b      	ldr	r3, [r3, #16]
 800cd44:	7053      	strb	r3, [r2, #1]
 800cd46:	e7d2      	b.n	800ccee <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd48:	f7ff fcb2 	bl	800c6b0 <I2C_WaitOnFlagUntilTimeout>
 800cd4c:	2800      	cmp	r0, #0
 800cd4e:	f47f af7e 	bne.w	800cc4e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cd52:	6823      	ldr	r3, [r4, #0]
 800cd54:	681a      	ldr	r2, [r3, #0]
 800cd56:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cd5a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd5c:	691a      	ldr	r2, [r3, #16]
 800cd5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cd60:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800cd62:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd64:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800cd66:	3301      	adds	r3, #1
 800cd68:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800cd6a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cd6c:	3b01      	subs	r3, #1
 800cd6e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800cd70:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cd72:	3b01      	subs	r3, #1
 800cd74:	b29b      	uxth	r3, r3
 800cd76:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd78:	4602      	mov	r2, r0
 800cd7a:	463b      	mov	r3, r7
 800cd7c:	4641      	mov	r1, r8
 800cd7e:	4620      	mov	r0, r4
 800cd80:	e7c8      	b.n	800cd14 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cd82:	4632      	mov	r2, r6
 800cd84:	4639      	mov	r1, r7
 800cd86:	4620      	mov	r0, r4
 800cd88:	f7ff fc63 	bl	800c652 <I2C_WaitOnRXNEFlagUntilTimeout>
 800cd8c:	2800      	cmp	r0, #0
 800cd8e:	f47f af5e 	bne.w	800cc4e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd92:	6823      	ldr	r3, [r4, #0]
 800cd94:	691a      	ldr	r2, [r3, #16]
 800cd96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cd98:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800cd9a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd9c:	1c53      	adds	r3, r2, #1
 800cd9e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800cda0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cda2:	3b01      	subs	r3, #1
 800cda4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800cda6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cda8:	3b01      	subs	r3, #1
 800cdaa:	b29b      	uxth	r3, r3
 800cdac:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cdae:	6823      	ldr	r3, [r4, #0]
 800cdb0:	6959      	ldr	r1, [r3, #20]
 800cdb2:	0749      	lsls	r1, r1, #29
 800cdb4:	f57f af5c 	bpl.w	800cc70 <HAL_I2C_Mem_Read+0xb8>
 800cdb8:	e7c3      	b.n	800cd42 <HAL_I2C_Mem_Read+0x18a>
 800cdba:	bf00      	nop
 800cdbc:	00100002 	.word	0x00100002
 800cdc0:	ffff0000 	.word	0xffff0000
 800cdc4:	00010004 	.word	0x00010004

0800cdc8 <HAL_I2C_GetState>:
  return hi2c->State;
 800cdc8:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800cdcc:	4770      	bx	lr

0800cdce <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800cdce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800cdd2:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800cdd4:	6804      	ldr	r4, [r0, #0]
 800cdd6:	684f      	ldr	r7, [r1, #4]
 800cdd8:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800cdda:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800cdde:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800cde2:	3284      	adds	r2, #132	; 0x84
 800cde4:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800cde6:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800cdea:	6858      	ldr	r0, [r3, #4]
 800cdec:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800cdf0:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800cdf2:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800cdf4:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800cdf8:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800cdfc:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800cdfe:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ce00:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ce04:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800ce06:	68e0      	ldr	r0, [r4, #12]
 800ce08:	68cd      	ldr	r5, [r1, #12]
 800ce0a:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800ce0e:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800ce10:	6898      	ldr	r0, [r3, #8]
 800ce12:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800ce16:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800ce18:	68e6      	ldr	r6, [r4, #12]
 800ce1a:	6888      	ldr	r0, [r1, #8]
 800ce1c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800ce20:	3001      	adds	r0, #1
 800ce22:	4430      	add	r0, r6
 800ce24:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ce28:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ce2a:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ce2c:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ce2e:	f020 0007 	bic.w	r0, r0, #7
 800ce32:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ce34:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ce38:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ce3a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800ce3c:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800ce40:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ce44:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800ce48:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800ce4c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800ce50:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800ce54:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800ce58:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800ce5a:	6958      	ldr	r0, [r3, #20]
 800ce5c:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800ce60:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800ce62:	6948      	ldr	r0, [r1, #20]
 800ce64:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800ce66:	69d8      	ldr	r0, [r3, #28]
 800ce68:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800ce6c:	f020 0007 	bic.w	r0, r0, #7
 800ce70:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800ce72:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 800ce76:	4305      	orrs	r5, r0
 800ce78:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ce7a:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ce7c:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ce7e:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ce82:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ce84:	b31e      	cbz	r6, 800cece <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ce86:	2e01      	cmp	r6, #1
 800ce88:	d023      	beq.n	800ced2 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800ce8a:	1eb0      	subs	r0, r6, #2
 800ce8c:	2802      	cmp	r0, #2
 800ce8e:	d922      	bls.n	800ced6 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800ce90:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800ce92:	bf0c      	ite	eq
 800ce94:	2002      	moveq	r0, #2
 800ce96:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ce98:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800ce9a:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800ce9e:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800cea0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800cea2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800cea4:	eba7 070c 	sub.w	r7, r7, ip
 800cea8:	4345      	muls	r5, r0
 800ceaa:	4378      	muls	r0, r7
 800ceac:	3003      	adds	r0, #3
 800ceae:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ceb2:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800ceb4:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800ceb6:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 800ceba:	f020 0007 	bic.w	r0, r0, #7
 800cebe:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800cec0:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800cec2:	58a3      	ldr	r3, [r4, r2]
 800cec4:	f043 0301 	orr.w	r3, r3, #1
 800cec8:	50a3      	str	r3, [r4, r2]
}
 800ceca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800cece:	2004      	movs	r0, #4
 800ced0:	e7e2      	b.n	800ce98 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800ced2:	2003      	movs	r0, #3
 800ced4:	e7e0      	b.n	800ce98 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800ced6:	2002      	movs	r0, #2
 800ced8:	e7de      	b.n	800ce98 <LTDC_SetConfig+0xca>
	...

0800cedc <HAL_LTDC_Init>:
{
 800cedc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800cede:	4604      	mov	r4, r0
 800cee0:	2800      	cmp	r0, #0
 800cee2:	d063      	beq.n	800cfac <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800cee4:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800cee8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ceec:	b91b      	cbnz	r3, 800cef6 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800ceee:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800cef2:	f7f4 fe49 	bl	8001b88 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800cef6:	2302      	movs	r3, #2
 800cef8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800cefc:	6823      	ldr	r3, [r4, #0]
 800cefe:	699a      	ldr	r2, [r3, #24]
 800cf00:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800cf04:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800cf06:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800cf0a:	4302      	orrs	r2, r0
 800cf0c:	68e0      	ldr	r0, [r4, #12]
 800cf0e:	6999      	ldr	r1, [r3, #24]
 800cf10:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800cf12:	6920      	ldr	r0, [r4, #16]
 800cf14:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800cf16:	430a      	orrs	r2, r1
 800cf18:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800cf1a:	689a      	ldr	r2, [r3, #8]
 800cf1c:	4924      	ldr	r1, [pc, #144]	; (800cfb0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800cf1e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800cf20:	400a      	ands	r2, r1
 800cf22:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800cf24:	689a      	ldr	r2, [r3, #8]
 800cf26:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cf2a:	69a0      	ldr	r0, [r4, #24]
 800cf2c:	4302      	orrs	r2, r0
 800cf2e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800cf30:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800cf32:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800cf34:	400a      	ands	r2, r1
 800cf36:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800cf38:	68da      	ldr	r2, [r3, #12]
 800cf3a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cf3e:	6a20      	ldr	r0, [r4, #32]
 800cf40:	4302      	orrs	r2, r0
 800cf42:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800cf44:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800cf46:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800cf48:	400a      	ands	r2, r1
 800cf4a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800cf4c:	691a      	ldr	r2, [r3, #16]
 800cf4e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cf52:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cf54:	4302      	orrs	r2, r0
 800cf56:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800cf58:	695a      	ldr	r2, [r3, #20]
 800cf5a:	4011      	ands	r1, r2
 800cf5c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800cf5e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800cf60:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800cf62:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800cf66:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf68:	430a      	orrs	r2, r1
 800cf6a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800cf6c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800cf6e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800cf72:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800cf76:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800cf7a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800cf7c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800cf7e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800cf82:	430a      	orrs	r2, r1
 800cf84:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800cf88:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cf8c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800cf8e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800cf90:	f042 0206 	orr.w	r2, r2, #6
 800cf94:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800cf96:	699a      	ldr	r2, [r3, #24]
 800cf98:	f042 0201 	orr.w	r2, r2, #1
 800cf9c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800cf9e:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800cfa0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800cfa2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800cfa6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800cfaa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800cfac:	2001      	movs	r0, #1
 800cfae:	e7fc      	b.n	800cfaa <HAL_LTDC_Init+0xce>
 800cfb0:	f000f800 	.word	0xf000f800

0800cfb4 <HAL_LTDC_ErrorCallback>:
 800cfb4:	4770      	bx	lr

0800cfb6 <HAL_LTDC_LineEventCallback>:
 800cfb6:	4770      	bx	lr

0800cfb8 <HAL_LTDC_ReloadEventCallback>:
 800cfb8:	4770      	bx	lr

0800cfba <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800cfba:	6803      	ldr	r3, [r0, #0]
{
 800cfbc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800cfbe:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800cfc0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800cfc2:	0772      	lsls	r2, r6, #29
{
 800cfc4:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800cfc6:	d514      	bpl.n	800cff2 <HAL_LTDC_IRQHandler+0x38>
 800cfc8:	0769      	lsls	r1, r5, #29
 800cfca:	d512      	bpl.n	800cff2 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800cfcc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800cfce:	f022 0204 	bic.w	r2, r2, #4
 800cfd2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800cfd4:	2204      	movs	r2, #4
 800cfd6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800cfd8:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800cfdc:	f043 0301 	orr.w	r3, r3, #1
 800cfe0:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800cfe4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800cfe6:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800cfea:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800cfee:	f7ff ffe1 	bl	800cfb4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800cff2:	07b2      	lsls	r2, r6, #30
 800cff4:	d516      	bpl.n	800d024 <HAL_LTDC_IRQHandler+0x6a>
 800cff6:	07ab      	lsls	r3, r5, #30
 800cff8:	d514      	bpl.n	800d024 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800cffa:	6823      	ldr	r3, [r4, #0]
 800cffc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800cffe:	f022 0202 	bic.w	r2, r2, #2
 800d002:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d004:	2202      	movs	r2, #2
 800d006:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d008:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d00c:	4313      	orrs	r3, r2
 800d00e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d012:	2304      	movs	r3, #4
 800d014:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d018:	2300      	movs	r3, #0
 800d01a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d01e:	4620      	mov	r0, r4
 800d020:	f7ff ffc8 	bl	800cfb4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d024:	07f0      	lsls	r0, r6, #31
 800d026:	d510      	bpl.n	800d04a <HAL_LTDC_IRQHandler+0x90>
 800d028:	07e9      	lsls	r1, r5, #31
 800d02a:	d50e      	bpl.n	800d04a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d02c:	6823      	ldr	r3, [r4, #0]
 800d02e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d030:	f022 0201 	bic.w	r2, r2, #1
 800d034:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d036:	2201      	movs	r2, #1
 800d038:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d03a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d03c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d040:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d044:	4620      	mov	r0, r4
 800d046:	f7ff ffb6 	bl	800cfb6 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d04a:	0732      	lsls	r2, r6, #28
 800d04c:	d511      	bpl.n	800d072 <HAL_LTDC_IRQHandler+0xb8>
 800d04e:	072b      	lsls	r3, r5, #28
 800d050:	d50f      	bpl.n	800d072 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d052:	6823      	ldr	r3, [r4, #0]
 800d054:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d056:	f022 0208 	bic.w	r2, r2, #8
 800d05a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d05c:	2208      	movs	r2, #8
 800d05e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800d060:	2301      	movs	r3, #1
 800d062:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d066:	2300      	movs	r3, #0
 800d068:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d06c:	4620      	mov	r0, r4
 800d06e:	f7ff ffa3 	bl	800cfb8 <HAL_LTDC_ReloadEventCallback>
}
 800d072:	bd70      	pop	{r4, r5, r6, pc}

0800d074 <HAL_LTDC_ConfigLayer>:
{
 800d074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800d078:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d07c:	2b01      	cmp	r3, #1
{
 800d07e:	4606      	mov	r6, r0
 800d080:	460f      	mov	r7, r1
 800d082:	4694      	mov	ip, r2
 800d084:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800d088:	d01f      	beq.n	800d0ca <HAL_LTDC_ConfigLayer+0x56>
 800d08a:	f04f 0801 	mov.w	r8, #1
 800d08e:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d092:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d096:	2434      	movs	r4, #52	; 0x34
 800d098:	460d      	mov	r5, r1
 800d09a:	fb04 6402 	mla	r4, r4, r2, r6
 800d09e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d0a0:	3438      	adds	r4, #56	; 0x38
 800d0a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d0a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d0a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d0a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d0aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d0ac:	682b      	ldr	r3, [r5, #0]
 800d0ae:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800d0b0:	4630      	mov	r0, r6
 800d0b2:	4662      	mov	r2, ip
 800d0b4:	4639      	mov	r1, r7
 800d0b6:	f7ff fe8a 	bl	800cdce <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d0ba:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800d0bc:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d0be:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d0c2:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d0c6:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800d0ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800d0d0 <HAL_LTDC_SetPitch>:
{
 800d0d0:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800d0d2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d0d6:	2b01      	cmp	r3, #1
 800d0d8:	f04f 0302 	mov.w	r3, #2
 800d0dc:	d02c      	beq.n	800d138 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800d0de:	2434      	movs	r4, #52	; 0x34
 800d0e0:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d0e4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800d0e8:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d0ea:	b33c      	cbz	r4, 800d13c <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d0ec:	2c01      	cmp	r4, #1
 800d0ee:	d027      	beq.n	800d140 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800d0f0:	1ea5      	subs	r5, r4, #2
 800d0f2:	429d      	cmp	r5, r3
 800d0f4:	d902      	bls.n	800d0fc <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800d0f6:	2c07      	cmp	r4, #7
 800d0f8:	bf18      	it	ne
 800d0fa:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800d0fc:	6804      	ldr	r4, [r0, #0]
 800d0fe:	01d2      	lsls	r2, r2, #7
 800d100:	3284      	adds	r2, #132	; 0x84
 800d102:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800d104:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800d106:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800d108:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800d10c:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800d110:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800d112:	4c0c      	ldr	r4, [pc, #48]	; (800d144 <HAL_LTDC_SetPitch+0x74>)
 800d114:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800d116:	f045 0501 	orr.w	r5, r5, #1
 800d11a:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800d11c:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800d11e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800d122:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800d124:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d126:	f043 0301 	orr.w	r3, r3, #1
 800d12a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800d12c:	2301      	movs	r3, #1
 800d12e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d132:	2300      	movs	r3, #0
 800d134:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800d138:	4618      	mov	r0, r3
 800d13a:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800d13c:	2304      	movs	r3, #4
 800d13e:	e7dd      	b.n	800d0fc <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800d140:	2303      	movs	r3, #3
 800d142:	e7db      	b.n	800d0fc <HAL_LTDC_SetPitch+0x2c>
 800d144:	40016800 	.word	0x40016800

0800d148 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800d148:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800d14a:	2300      	movs	r3, #0
 800d14c:	9301      	str	r3, [sp, #4]
 800d14e:	4b18      	ldr	r3, [pc, #96]	; (800d1b0 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800d150:	4d18      	ldr	r5, [pc, #96]	; (800d1b4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800d152:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d154:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800d158:	641a      	str	r2, [r3, #64]	; 0x40
 800d15a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d15c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d160:	9301      	str	r3, [sp, #4]
 800d162:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800d164:	4b14      	ldr	r3, [pc, #80]	; (800d1b8 <HAL_PWREx_EnableOverDrive+0x70>)
 800d166:	2201      	movs	r2, #1
 800d168:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800d16a:	f7fe f9fb 	bl	800b564 <HAL_GetTick>
 800d16e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800d170:	686b      	ldr	r3, [r5, #4]
 800d172:	03da      	lsls	r2, r3, #15
 800d174:	d50b      	bpl.n	800d18e <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800d176:	4b11      	ldr	r3, [pc, #68]	; (800d1bc <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800d178:	4d0e      	ldr	r5, [pc, #56]	; (800d1b4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800d17a:	2201      	movs	r2, #1
 800d17c:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800d17e:	f7fe f9f1 	bl	800b564 <HAL_GetTick>
 800d182:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800d184:	686b      	ldr	r3, [r5, #4]
 800d186:	039b      	lsls	r3, r3, #14
 800d188:	d50a      	bpl.n	800d1a0 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800d18a:	2000      	movs	r0, #0
 800d18c:	e006      	b.n	800d19c <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800d18e:	f7fe f9e9 	bl	800b564 <HAL_GetTick>
 800d192:	1b00      	subs	r0, r0, r4
 800d194:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800d198:	d9ea      	bls.n	800d170 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800d19a:	2003      	movs	r0, #3
}
 800d19c:	b003      	add	sp, #12
 800d19e:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800d1a0:	f7fe f9e0 	bl	800b564 <HAL_GetTick>
 800d1a4:	1b00      	subs	r0, r0, r4
 800d1a6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800d1aa:	d9eb      	bls.n	800d184 <HAL_PWREx_EnableOverDrive+0x3c>
 800d1ac:	e7f5      	b.n	800d19a <HAL_PWREx_EnableOverDrive+0x52>
 800d1ae:	bf00      	nop
 800d1b0:	40023800 	.word	0x40023800
 800d1b4:	40007000 	.word	0x40007000
 800d1b8:	420e0040 	.word	0x420e0040
 800d1bc:	420e0044 	.word	0x420e0044

0800d1c0 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800d1c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800d1c4:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800d1c6:	b13e      	cbz	r6, 800d1d8 <QSPI_Config+0x18>
 800d1c8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800d1cc:	bf1f      	itttt	ne
 800d1ce:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800d1d0:	6804      	ldrne	r4, [r0, #0]
 800d1d2:	f103 33ff 	addne.w	r3, r3, #4294967295
 800d1d6:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800d1d8:	f8d1 a018 	ldr.w	sl, [r1, #24]
 800d1dc:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800d1e0:	f1ba 0f00 	cmp.w	sl, #0
 800d1e4:	d04e      	beq.n	800d284 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800d1e6:	694b      	ldr	r3, [r1, #20]
 800d1e8:	6805      	ldr	r5, [r0, #0]
 800d1ea:	f8d1 8000 	ldr.w	r8, [r1]
 800d1ee:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800d1f0:	ea46 0a0a 	orr.w	sl, r6, sl
 800d1f4:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 800d1f8:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 800d1fc:	ea4a 0a02 	orr.w	sl, sl, r2
 800d200:	f1bc 0f00 	cmp.w	ip, #0
 800d204:	d026      	beq.n	800d254 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800d206:	688b      	ldr	r3, [r1, #8]
 800d208:	690e      	ldr	r6, [r1, #16]
 800d20a:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800d20c:	ea4c 0c0a 	orr.w	ip, ip, sl
 800d210:	b1a7      	cbz	r7, 800d23c <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d212:	ea48 0307 	orr.w	r3, r8, r7
 800d216:	4323      	orrs	r3, r4
 800d218:	ea43 0309 	orr.w	r3, r3, r9
 800d21c:	4303      	orrs	r3, r0
 800d21e:	68c8      	ldr	r0, [r1, #12]
 800d220:	4333      	orrs	r3, r6
 800d222:	4303      	orrs	r3, r0
 800d224:	ea43 030e 	orr.w	r3, r3, lr
 800d228:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800d22c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d230:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800d232:	d001      	beq.n	800d238 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800d234:	684b      	ldr	r3, [r1, #4]
 800d236:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800d238:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d23c:	ea48 0304 	orr.w	r3, r8, r4
 800d240:	ea43 0309 	orr.w	r3, r3, r9
 800d244:	4303      	orrs	r3, r0
 800d246:	4333      	orrs	r3, r6
 800d248:	ea43 030e 	orr.w	r3, r3, lr
 800d24c:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d250:	616b      	str	r3, [r5, #20]
 800d252:	e7f1      	b.n	800d238 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800d254:	b167      	cbz	r7, 800d270 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d256:	ea48 0307 	orr.w	r3, r8, r7
 800d25a:	4323      	orrs	r3, r4
 800d25c:	ea43 0309 	orr.w	r3, r3, r9
 800d260:	4303      	orrs	r3, r0
 800d262:	68c8      	ldr	r0, [r1, #12]
 800d264:	4303      	orrs	r3, r0
 800d266:	ea43 030e 	orr.w	r3, r3, lr
 800d26a:	ea43 030a 	orr.w	r3, r3, sl
 800d26e:	e7dd      	b.n	800d22c <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d270:	ea48 0304 	orr.w	r3, r8, r4
 800d274:	ea43 0309 	orr.w	r3, r3, r9
 800d278:	4303      	orrs	r3, r0
 800d27a:	ea43 030e 	orr.w	r3, r3, lr
 800d27e:	ea43 030a 	orr.w	r3, r3, sl
 800d282:	e7e5      	b.n	800d250 <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800d284:	f1bc 0f00 	cmp.w	ip, #0
 800d288:	d028      	beq.n	800d2dc <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800d28a:	6804      	ldr	r4, [r0, #0]
 800d28c:	688b      	ldr	r3, [r1, #8]
 800d28e:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800d290:	ea46 030c 	orr.w	r3, r6, ip
 800d294:	694e      	ldr	r6, [r1, #20]
 800d296:	6908      	ldr	r0, [r1, #16]
 800d298:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800d29c:	ea43 0502 	orr.w	r5, r3, r2
 800d2a0:	04b6      	lsls	r6, r6, #18
 800d2a2:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 800d2a6:	b187      	cbz	r7, 800d2ca <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d2a8:	4338      	orrs	r0, r7
 800d2aa:	ea40 0008 	orr.w	r0, r0, r8
 800d2ae:	4303      	orrs	r3, r0
 800d2b0:	68c8      	ldr	r0, [r1, #12]
 800d2b2:	ea43 030c 	orr.w	r3, r3, ip
 800d2b6:	4303      	orrs	r3, r0
 800d2b8:	4333      	orrs	r3, r6
 800d2ba:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800d2bc:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d2c0:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800d2c2:	d0b9      	beq.n	800d238 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800d2c4:	684b      	ldr	r3, [r1, #4]
 800d2c6:	61a3      	str	r3, [r4, #24]
 800d2c8:	e7b6      	b.n	800d238 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d2ca:	ea40 0008 	orr.w	r0, r0, r8
 800d2ce:	4303      	orrs	r3, r0
 800d2d0:	ea43 030c 	orr.w	r3, r3, ip
 800d2d4:	4333      	orrs	r3, r6
 800d2d6:	432b      	orrs	r3, r5
 800d2d8:	6163      	str	r3, [r4, #20]
 800d2da:	e7ad      	b.n	800d238 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800d2dc:	b1af      	cbz	r7, 800d30a <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d2de:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800d2e0:	6800      	ldr	r0, [r0, #0]
 800d2e2:	ea46 0307 	orr.w	r3, r6, r7
 800d2e6:	4313      	orrs	r3, r2
 800d2e8:	4323      	orrs	r3, r4
 800d2ea:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800d2ec:	4323      	orrs	r3, r4
 800d2ee:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800d2f0:	4323      	orrs	r3, r4
 800d2f2:	68cc      	ldr	r4, [r1, #12]
 800d2f4:	4323      	orrs	r3, r4
 800d2f6:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800d2f8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d2fc:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800d300:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800d302:	d099      	beq.n	800d238 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800d304:	684b      	ldr	r3, [r1, #4]
 800d306:	6183      	str	r3, [r0, #24]
 800d308:	e796      	b.n	800d238 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800d30a:	2e00      	cmp	r6, #0
 800d30c:	d094      	beq.n	800d238 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800d30e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800d310:	6800      	ldr	r0, [r0, #0]
 800d312:	4333      	orrs	r3, r6
 800d314:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800d316:	431a      	orrs	r2, r3
 800d318:	4332      	orrs	r2, r6
 800d31a:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800d31c:	694b      	ldr	r3, [r1, #20]
 800d31e:	4332      	orrs	r2, r6
 800d320:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800d324:	6142      	str	r2, [r0, #20]
}
 800d326:	e787      	b.n	800d238 <QSPI_Config+0x78>

0800d328 <QSPI_WaitFlagStateUntilTimeout>:
{
 800d328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d32c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800d330:	4604      	mov	r4, r0
 800d332:	460e      	mov	r6, r1
 800d334:	4615      	mov	r5, r2
 800d336:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800d338:	6822      	ldr	r2, [r4, #0]
 800d33a:	6893      	ldr	r3, [r2, #8]
 800d33c:	4233      	tst	r3, r6
 800d33e:	bf14      	ite	ne
 800d340:	2301      	movne	r3, #1
 800d342:	2300      	moveq	r3, #0
 800d344:	42ab      	cmp	r3, r5
 800d346:	d101      	bne.n	800d34c <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800d348:	2000      	movs	r0, #0
 800d34a:	e012      	b.n	800d372 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800d34c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d350:	d0f3      	beq.n	800d33a <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d352:	f7fe f907 	bl	800b564 <HAL_GetTick>
 800d356:	1bc0      	subs	r0, r0, r7
 800d358:	4540      	cmp	r0, r8
 800d35a:	d802      	bhi.n	800d362 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800d35c:	f1b8 0f00 	cmp.w	r8, #0
 800d360:	d1ea      	bne.n	800d338 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800d362:	2304      	movs	r3, #4
 800d364:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800d368:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d36a:	f043 0301 	orr.w	r3, r3, #1
 800d36e:	6463      	str	r3, [r4, #68]	; 0x44
 800d370:	2001      	movs	r0, #1
}
 800d372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800d378 <HAL_QSPI_Init>:
{
 800d378:	b530      	push	{r4, r5, lr}
 800d37a:	b085      	sub	sp, #20
 800d37c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800d37e:	f7fe f8f1 	bl	800b564 <HAL_GetTick>
 800d382:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800d384:	2c00      	cmp	r4, #0
 800d386:	d047      	beq.n	800d418 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800d388:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800d38c:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800d390:	b94a      	cbnz	r2, 800d3a6 <HAL_QSPI_Init+0x2e>
 800d392:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800d394:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800d398:	4620      	mov	r0, r4
 800d39a:	f7f4 fc29 	bl	8001bf0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800d39e:	f241 3288 	movw	r2, #5000	; 0x1388
 800d3a2:	9b03      	ldr	r3, [sp, #12]
 800d3a4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800d3a6:	6820      	ldr	r0, [r4, #0]
 800d3a8:	68a1      	ldr	r1, [r4, #8]
 800d3aa:	6802      	ldr	r2, [r0, #0]
 800d3ac:	3901      	subs	r1, #1
 800d3ae:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800d3b2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d3b6:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800d3b8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800d3ba:	9200      	str	r2, [sp, #0]
 800d3bc:	2120      	movs	r1, #32
 800d3be:	2200      	movs	r2, #0
 800d3c0:	4620      	mov	r0, r4
 800d3c2:	f7ff ffb1 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800d3c6:	bb10      	cbnz	r0, 800d40e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800d3c8:	69e5      	ldr	r5, [r4, #28]
 800d3ca:	68e3      	ldr	r3, [r4, #12]
 800d3cc:	6822      	ldr	r2, [r4, #0]
 800d3ce:	432b      	orrs	r3, r5
 800d3d0:	6a25      	ldr	r5, [r4, #32]
 800d3d2:	6811      	ldr	r1, [r2, #0]
 800d3d4:	432b      	orrs	r3, r5
 800d3d6:	6865      	ldr	r5, [r4, #4]
 800d3d8:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800d3dc:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800d3e0:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800d3e4:	430b      	orrs	r3, r1
 800d3e6:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800d3e8:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800d3ec:	430b      	orrs	r3, r1
 800d3ee:	6921      	ldr	r1, [r4, #16]
 800d3f0:	6855      	ldr	r5, [r2, #4]
 800d3f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d3f6:	4909      	ldr	r1, [pc, #36]	; (800d41c <HAL_QSPI_Init+0xa4>)
 800d3f8:	4029      	ands	r1, r5
 800d3fa:	430b      	orrs	r3, r1
 800d3fc:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800d3fe:	6813      	ldr	r3, [r2, #0]
 800d400:	f043 0301 	orr.w	r3, r3, #1
 800d404:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800d406:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d408:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800d40a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800d40e:	2300      	movs	r3, #0
 800d410:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800d414:	b005      	add	sp, #20
 800d416:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800d418:	2001      	movs	r0, #1
 800d41a:	e7fb      	b.n	800d414 <HAL_QSPI_Init+0x9c>
 800d41c:	ffe0f8fe 	.word	0xffe0f8fe

0800d420 <HAL_QSPI_DeInit>:
{
 800d420:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800d422:	4604      	mov	r4, r0
 800d424:	b168      	cbz	r0, 800d442 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800d426:	6802      	ldr	r2, [r0, #0]
 800d428:	6813      	ldr	r3, [r2, #0]
 800d42a:	f023 0301 	bic.w	r3, r3, #1
 800d42e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800d430:	f7f4 fc38 	bl	8001ca4 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d434:	2000      	movs	r0, #0
 800d436:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800d438:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800d43c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800d440:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800d442:	2001      	movs	r0, #1
 800d444:	e7fc      	b.n	800d440 <HAL_QSPI_DeInit+0x20>

0800d446 <HAL_QSPI_Command>:
{
 800d446:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d44a:	4604      	mov	r4, r0
 800d44c:	b085      	sub	sp, #20
 800d44e:	4617      	mov	r7, r2
 800d450:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800d452:	f7fe f887 	bl	800b564 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800d456:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800d45a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800d45c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800d45e:	d034      	beq.n	800d4ca <HAL_QSPI_Command+0x84>
 800d460:	2201      	movs	r2, #1
 800d462:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800d466:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800d46a:	2a01      	cmp	r2, #1
 800d46c:	fa5f f882 	uxtb.w	r8, r2
 800d470:	f04f 0602 	mov.w	r6, #2
 800d474:	d127      	bne.n	800d4c6 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d476:	2200      	movs	r2, #0
 800d478:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800d47a:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800d47c:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800d480:	9700      	str	r7, [sp, #0]
 800d482:	2120      	movs	r1, #32
 800d484:	4620      	mov	r0, r4
 800d486:	f7ff ff4f 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800d48a:	4605      	mov	r5, r0
 800d48c:	b9a0      	cbnz	r0, 800d4b8 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800d48e:	4602      	mov	r2, r0
 800d490:	4649      	mov	r1, r9
 800d492:	4620      	mov	r0, r4
 800d494:	f7ff fe94 	bl	800d1c0 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800d498:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800d49c:	9b03      	ldr	r3, [sp, #12]
 800d49e:	b94a      	cbnz	r2, 800d4b4 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800d4a0:	9700      	str	r7, [sp, #0]
 800d4a2:	4642      	mov	r2, r8
 800d4a4:	4631      	mov	r1, r6
 800d4a6:	4620      	mov	r0, r4
 800d4a8:	f7ff ff3e 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800d4ac:	4605      	mov	r5, r0
 800d4ae:	b918      	cbnz	r0, 800d4b8 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800d4b0:	6823      	ldr	r3, [r4, #0]
 800d4b2:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800d4b4:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800d4b8:	2300      	movs	r3, #0
 800d4ba:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800d4be:	4628      	mov	r0, r5
 800d4c0:	b005      	add	sp, #20
 800d4c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800d4c6:	4635      	mov	r5, r6
 800d4c8:	e7f6      	b.n	800d4b8 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800d4ca:	2502      	movs	r5, #2
 800d4cc:	e7f7      	b.n	800d4be <HAL_QSPI_Command+0x78>

0800d4ce <HAL_QSPI_AutoPolling>:
{
 800d4ce:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d4d2:	4604      	mov	r4, r0
 800d4d4:	4615      	mov	r5, r2
 800d4d6:	461e      	mov	r6, r3
 800d4d8:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800d4da:	f7fe f843 	bl	800b564 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800d4de:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800d4e2:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800d4e4:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800d4e6:	d040      	beq.n	800d56a <HAL_QSPI_AutoPolling+0x9c>
 800d4e8:	2201      	movs	r2, #1
 800d4ea:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800d4ee:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800d4f2:	2a01      	cmp	r2, #1
 800d4f4:	b2d7      	uxtb	r7, r2
 800d4f6:	d136      	bne.n	800d566 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800d4f8:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d4fa:	2200      	movs	r2, #0
 800d4fc:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800d4fe:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800d500:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800d504:	9600      	str	r6, [sp, #0]
 800d506:	2120      	movs	r1, #32
 800d508:	4620      	mov	r0, r4
 800d50a:	f7ff ff0d 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800d50e:	bb20      	cbnz	r0, 800d55a <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800d510:	6821      	ldr	r1, [r4, #0]
 800d512:	682a      	ldr	r2, [r5, #0]
 800d514:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800d516:	686a      	ldr	r2, [r5, #4]
 800d518:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800d51a:	68aa      	ldr	r2, [r5, #8]
 800d51c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800d51e:	680a      	ldr	r2, [r1, #0]
 800d520:	6928      	ldr	r0, [r5, #16]
 800d522:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800d526:	4302      	orrs	r2, r0
 800d528:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800d52c:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800d52e:	68ea      	ldr	r2, [r5, #12]
 800d530:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800d534:	4641      	mov	r1, r8
 800d536:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800d53a:	4620      	mov	r0, r4
 800d53c:	f7ff fe40 	bl	800d1c0 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800d540:	9b03      	ldr	r3, [sp, #12]
 800d542:	9600      	str	r6, [sp, #0]
 800d544:	463a      	mov	r2, r7
 800d546:	2108      	movs	r1, #8
 800d548:	4620      	mov	r0, r4
 800d54a:	f7ff feed 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800d54e:	b920      	cbnz	r0, 800d55a <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800d550:	6823      	ldr	r3, [r4, #0]
 800d552:	2208      	movs	r2, #8
 800d554:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800d556:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800d55a:	2300      	movs	r3, #0
 800d55c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800d560:	b004      	add	sp, #16
 800d562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800d566:	2002      	movs	r0, #2
 800d568:	e7f7      	b.n	800d55a <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800d56a:	2002      	movs	r0, #2
 800d56c:	e7f8      	b.n	800d560 <HAL_QSPI_AutoPolling+0x92>

0800d56e <HAL_QSPI_MemoryMapped>:
{
 800d56e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d570:	4604      	mov	r4, r0
 800d572:	4616      	mov	r6, r2
 800d574:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800d576:	f7fd fff5 	bl	800b564 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800d57a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800d57e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800d580:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800d582:	d032      	beq.n	800d5ea <HAL_QSPI_MemoryMapped+0x7c>
 800d584:	2201      	movs	r2, #1
 800d586:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800d58a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800d58e:	2a01      	cmp	r2, #1
 800d590:	d129      	bne.n	800d5e6 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d592:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800d594:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d596:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800d598:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800d59c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800d59e:	9100      	str	r1, [sp, #0]
 800d5a0:	4620      	mov	r0, r4
 800d5a2:	2120      	movs	r1, #32
 800d5a4:	f7ff fec0 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800d5a8:	4605      	mov	r5, r0
 800d5aa:	b9b0      	cbnz	r0, 800d5da <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800d5ac:	6823      	ldr	r3, [r4, #0]
 800d5ae:	6872      	ldr	r2, [r6, #4]
 800d5b0:	6818      	ldr	r0, [r3, #0]
 800d5b2:	f020 0008 	bic.w	r0, r0, #8
 800d5b6:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800d5b8:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800d5ba:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800d5bc:	d107      	bne.n	800d5ce <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800d5be:	6832      	ldr	r2, [r6, #0]
 800d5c0:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800d5c2:	2210      	movs	r2, #16
 800d5c4:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800d5c6:	681a      	ldr	r2, [r3, #0]
 800d5c8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800d5cc:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800d5ce:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800d5d2:	4639      	mov	r1, r7
 800d5d4:	4620      	mov	r0, r4
 800d5d6:	f7ff fdf3 	bl	800d1c0 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800d5da:	2300      	movs	r3, #0
 800d5dc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800d5e0:	4628      	mov	r0, r5
 800d5e2:	b003      	add	sp, #12
 800d5e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800d5e6:	2502      	movs	r5, #2
 800d5e8:	e7f7      	b.n	800d5da <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800d5ea:	2502      	movs	r5, #2
 800d5ec:	e7f8      	b.n	800d5e0 <HAL_QSPI_MemoryMapped+0x72>

0800d5ee <HAL_QSPI_Abort>:
{
 800d5ee:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d5f0:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800d5f2:	f7fd ffb7 	bl	800b564 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800d5f6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800d5fa:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800d5fc:	f012 0002 	ands.w	r0, r2, #2
 800d600:	d036      	beq.n	800d670 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 800d602:	2200      	movs	r2, #0
 800d604:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800d608:	6822      	ldr	r2, [r4, #0]
 800d60a:	6811      	ldr	r1, [r2, #0]
 800d60c:	0749      	lsls	r1, r1, #29
 800d60e:	d50d      	bpl.n	800d62c <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800d610:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800d612:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800d614:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800d616:	f021 0104 	bic.w	r1, r1, #4
 800d61a:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800d61c:	f7fe f8f2 	bl	800b804 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800d620:	9b03      	ldr	r3, [sp, #12]
 800d622:	b118      	cbz	r0, 800d62c <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800d624:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d626:	f042 0204 	orr.w	r2, r2, #4
 800d62a:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800d62c:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800d62e:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800d630:	680a      	ldr	r2, [r1, #0]
 800d632:	f042 0202 	orr.w	r2, r2, #2
 800d636:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800d638:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800d63a:	9200      	str	r2, [sp, #0]
 800d63c:	2102      	movs	r1, #2
 800d63e:	2201      	movs	r2, #1
 800d640:	4620      	mov	r0, r4
 800d642:	f7ff fe71 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800d646:	9b03      	ldr	r3, [sp, #12]
 800d648:	b990      	cbnz	r0, 800d670 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800d64a:	6822      	ldr	r2, [r4, #0]
 800d64c:	2102      	movs	r1, #2
 800d64e:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800d650:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800d652:	9200      	str	r2, [sp, #0]
 800d654:	2120      	movs	r1, #32
 800d656:	4602      	mov	r2, r0
 800d658:	4620      	mov	r0, r4
 800d65a:	f7ff fe65 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800d65e:	b938      	cbnz	r0, 800d670 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800d660:	6822      	ldr	r2, [r4, #0]
 800d662:	6953      	ldr	r3, [r2, #20]
 800d664:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800d668:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800d66a:	2301      	movs	r3, #1
 800d66c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800d670:	b004      	add	sp, #16
 800d672:	bd10      	pop	{r4, pc}

0800d674 <HAL_QSPI_Transmit>:
{
 800d674:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d676:	4604      	mov	r4, r0
 800d678:	b085      	sub	sp, #20
 800d67a:	4616      	mov	r6, r2
 800d67c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800d67e:	f7fd ff71 	bl	800b564 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800d682:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800d686:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800d688:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800d68a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800d68c:	d04c      	beq.n	800d728 <HAL_QSPI_Transmit+0xb4>
 800d68e:	2201      	movs	r2, #1
 800d690:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800d694:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800d698:	2a01      	cmp	r2, #1
 800d69a:	b2d0      	uxtb	r0, r2
 800d69c:	d142      	bne.n	800d724 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d69e:	2200      	movs	r2, #0
 800d6a0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800d6a2:	2f00      	cmp	r7, #0
 800d6a4:	d039      	beq.n	800d71a <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800d6a6:	2212      	movs	r2, #18
 800d6a8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800d6ac:	692a      	ldr	r2, [r5, #16]
 800d6ae:	3201      	adds	r2, #1
 800d6b0:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800d6b2:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800d6b4:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800d6b6:	3201      	adds	r2, #1
 800d6b8:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800d6ba:	696a      	ldr	r2, [r5, #20]
 800d6bc:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800d6c0:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800d6c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d6c4:	b9a2      	cbnz	r2, 800d6f0 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800d6c6:	9600      	str	r6, [sp, #0]
 800d6c8:	2201      	movs	r2, #1
 800d6ca:	2102      	movs	r1, #2
 800d6cc:	4620      	mov	r0, r4
 800d6ce:	f7ff fe2b 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800d6d2:	b928      	cbnz	r0, 800d6e0 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800d6d4:	6823      	ldr	r3, [r4, #0]
 800d6d6:	2202      	movs	r2, #2
 800d6d8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800d6da:	4620      	mov	r0, r4
 800d6dc:	f7ff ff87 	bl	800d5ee <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800d6e0:	2301      	movs	r3, #1
 800d6e2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800d6e6:	2300      	movs	r3, #0
 800d6e8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800d6ec:	b005      	add	sp, #20
 800d6ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800d6f0:	9600      	str	r6, [sp, #0]
 800d6f2:	2201      	movs	r2, #1
 800d6f4:	2104      	movs	r1, #4
 800d6f6:	4620      	mov	r0, r4
 800d6f8:	9303      	str	r3, [sp, #12]
 800d6fa:	f7ff fe15 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800d6fe:	2800      	cmp	r0, #0
 800d700:	d1ee      	bne.n	800d6e0 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800d702:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800d704:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800d706:	7812      	ldrb	r2, [r2, #0]
 800d708:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800d70c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d70e:	3201      	adds	r2, #1
 800d710:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800d712:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d714:	3a01      	subs	r2, #1
 800d716:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d718:	e7d3      	b.n	800d6c2 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800d71a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d71c:	f043 0308 	orr.w	r3, r3, #8
 800d720:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800d722:	e7e0      	b.n	800d6e6 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800d724:	2002      	movs	r0, #2
 800d726:	e7de      	b.n	800d6e6 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800d728:	2002      	movs	r0, #2
 800d72a:	e7df      	b.n	800d6ec <HAL_QSPI_Transmit+0x78>

0800d72c <HAL_QSPI_Receive>:
{
 800d72c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d72e:	4604      	mov	r4, r0
 800d730:	b085      	sub	sp, #20
 800d732:	4616      	mov	r6, r2
 800d734:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800d736:	f7fd ff15 	bl	800b564 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800d73a:	6825      	ldr	r5, [r4, #0]
 800d73c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800d740:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800d744:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800d746:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800d748:	d050      	beq.n	800d7ec <HAL_QSPI_Receive+0xc0>
 800d74a:	2201      	movs	r2, #1
 800d74c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800d750:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800d754:	2a01      	cmp	r2, #1
 800d756:	b2d0      	uxtb	r0, r2
 800d758:	d146      	bne.n	800d7e8 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800d75a:	2200      	movs	r2, #0
 800d75c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800d75e:	2f00      	cmp	r7, #0
 800d760:	d03d      	beq.n	800d7de <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800d762:	2222      	movs	r2, #34	; 0x22
 800d764:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800d768:	692a      	ldr	r2, [r5, #16]
 800d76a:	3201      	adds	r2, #1
 800d76c:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800d76e:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800d770:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800d772:	3201      	adds	r2, #1
 800d774:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800d776:	6969      	ldr	r1, [r5, #20]
 800d778:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800d77c:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800d780:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800d782:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800d786:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d788:	b9a2      	cbnz	r2, 800d7b4 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800d78a:	9600      	str	r6, [sp, #0]
 800d78c:	2201      	movs	r2, #1
 800d78e:	2102      	movs	r1, #2
 800d790:	4620      	mov	r0, r4
 800d792:	f7ff fdc9 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800d796:	b928      	cbnz	r0, 800d7a4 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800d798:	6823      	ldr	r3, [r4, #0]
 800d79a:	2202      	movs	r2, #2
 800d79c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800d79e:	4620      	mov	r0, r4
 800d7a0:	f7ff ff25 	bl	800d5ee <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800d7a4:	2301      	movs	r3, #1
 800d7a6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800d7aa:	2300      	movs	r3, #0
 800d7ac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800d7b0:	b005      	add	sp, #20
 800d7b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800d7b4:	9600      	str	r6, [sp, #0]
 800d7b6:	2201      	movs	r2, #1
 800d7b8:	2106      	movs	r1, #6
 800d7ba:	4620      	mov	r0, r4
 800d7bc:	9303      	str	r3, [sp, #12]
 800d7be:	f7ff fdb3 	bl	800d328 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800d7c2:	2800      	cmp	r0, #0
 800d7c4:	d1ee      	bne.n	800d7a4 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800d7c6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d7c8:	f895 1020 	ldrb.w	r1, [r5, #32]
 800d7cc:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800d7ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800d7d0:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800d7d2:	3201      	adds	r2, #1
 800d7d4:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800d7d6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d7d8:	3a01      	subs	r2, #1
 800d7da:	63a2      	str	r2, [r4, #56]	; 0x38
 800d7dc:	e7d3      	b.n	800d786 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800d7de:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d7e0:	f043 0308 	orr.w	r3, r3, #8
 800d7e4:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800d7e6:	e7e0      	b.n	800d7aa <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800d7e8:	2002      	movs	r0, #2
 800d7ea:	e7de      	b.n	800d7aa <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800d7ec:	2002      	movs	r0, #2
 800d7ee:	e7df      	b.n	800d7b0 <HAL_QSPI_Receive+0x84>

0800d7f0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d7f0:	4913      	ldr	r1, [pc, #76]	; (800d840 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800d7f2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d7f4:	688b      	ldr	r3, [r1, #8]
 800d7f6:	f003 030c 	and.w	r3, r3, #12
 800d7fa:	2b04      	cmp	r3, #4
 800d7fc:	d01c      	beq.n	800d838 <HAL_RCC_GetSysClockFreq+0x48>
 800d7fe:	2b08      	cmp	r3, #8
 800d800:	d11c      	bne.n	800d83c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d802:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d804:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d806:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d808:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d80c:	bf14      	ite	ne
 800d80e:	480d      	ldrne	r0, [pc, #52]	; (800d844 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d810:	480d      	ldreq	r0, [pc, #52]	; (800d848 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d812:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800d816:	bf18      	it	ne
 800d818:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d81a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d81e:	fba1 0100 	umull	r0, r1, r1, r0
 800d822:	f7f2 fd3d 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800d826:	4b06      	ldr	r3, [pc, #24]	; (800d840 <HAL_RCC_GetSysClockFreq+0x50>)
 800d828:	685b      	ldr	r3, [r3, #4]
 800d82a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800d82e:	3301      	adds	r3, #1
 800d830:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800d832:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800d836:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d838:	4802      	ldr	r0, [pc, #8]	; (800d844 <HAL_RCC_GetSysClockFreq+0x54>)
 800d83a:	e7fc      	b.n	800d836 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800d83c:	4802      	ldr	r0, [pc, #8]	; (800d848 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800d83e:	e7fa      	b.n	800d836 <HAL_RCC_GetSysClockFreq+0x46>
 800d840:	40023800 	.word	0x40023800
 800d844:	007a1200 	.word	0x007a1200
 800d848:	00f42400 	.word	0x00f42400

0800d84c <HAL_RCC_ClockConfig>:
{
 800d84c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d850:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800d852:	4604      	mov	r4, r0
 800d854:	b910      	cbnz	r0, 800d85c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800d856:	2001      	movs	r0, #1
}
 800d858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800d85c:	4b44      	ldr	r3, [pc, #272]	; (800d970 <HAL_RCC_ClockConfig+0x124>)
 800d85e:	681a      	ldr	r2, [r3, #0]
 800d860:	f002 020f 	and.w	r2, r2, #15
 800d864:	428a      	cmp	r2, r1
 800d866:	d328      	bcc.n	800d8ba <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800d868:	6822      	ldr	r2, [r4, #0]
 800d86a:	0797      	lsls	r7, r2, #30
 800d86c:	d42d      	bmi.n	800d8ca <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800d86e:	07d0      	lsls	r0, r2, #31
 800d870:	d441      	bmi.n	800d8f6 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800d872:	4b3f      	ldr	r3, [pc, #252]	; (800d970 <HAL_RCC_ClockConfig+0x124>)
 800d874:	681a      	ldr	r2, [r3, #0]
 800d876:	f002 020f 	and.w	r2, r2, #15
 800d87a:	42aa      	cmp	r2, r5
 800d87c:	d866      	bhi.n	800d94c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d87e:	6822      	ldr	r2, [r4, #0]
 800d880:	0751      	lsls	r1, r2, #29
 800d882:	d46c      	bmi.n	800d95e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d884:	0713      	lsls	r3, r2, #28
 800d886:	d507      	bpl.n	800d898 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800d888:	4a3a      	ldr	r2, [pc, #232]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d88a:	6921      	ldr	r1, [r4, #16]
 800d88c:	6893      	ldr	r3, [r2, #8]
 800d88e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800d892:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d896:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800d898:	f7ff ffaa 	bl	800d7f0 <HAL_RCC_GetSysClockFreq>
 800d89c:	4b35      	ldr	r3, [pc, #212]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d89e:	4a36      	ldr	r2, [pc, #216]	; (800d978 <HAL_RCC_ClockConfig+0x12c>)
 800d8a0:	689b      	ldr	r3, [r3, #8]
 800d8a2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800d8a6:	5cd3      	ldrb	r3, [r2, r3]
 800d8a8:	40d8      	lsrs	r0, r3
 800d8aa:	4b34      	ldr	r3, [pc, #208]	; (800d97c <HAL_RCC_ClockConfig+0x130>)
 800d8ac:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800d8ae:	4b34      	ldr	r3, [pc, #208]	; (800d980 <HAL_RCC_ClockConfig+0x134>)
 800d8b0:	6818      	ldr	r0, [r3, #0]
 800d8b2:	f7f4 facd 	bl	8001e50 <HAL_InitTick>
  return HAL_OK;
 800d8b6:	2000      	movs	r0, #0
 800d8b8:	e7ce      	b.n	800d858 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d8ba:	b2ca      	uxtb	r2, r1
 800d8bc:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800d8be:	681b      	ldr	r3, [r3, #0]
 800d8c0:	f003 030f 	and.w	r3, r3, #15
 800d8c4:	428b      	cmp	r3, r1
 800d8c6:	d1c6      	bne.n	800d856 <HAL_RCC_ClockConfig+0xa>
 800d8c8:	e7ce      	b.n	800d868 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d8ca:	4b2a      	ldr	r3, [pc, #168]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d8cc:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800d8d0:	bf1e      	ittt	ne
 800d8d2:	6899      	ldrne	r1, [r3, #8]
 800d8d4:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800d8d8:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d8da:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800d8dc:	bf42      	ittt	mi
 800d8de:	6899      	ldrmi	r1, [r3, #8]
 800d8e0:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800d8e4:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800d8e6:	4923      	ldr	r1, [pc, #140]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d8e8:	68a0      	ldr	r0, [r4, #8]
 800d8ea:	688b      	ldr	r3, [r1, #8]
 800d8ec:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800d8f0:	4303      	orrs	r3, r0
 800d8f2:	608b      	str	r3, [r1, #8]
 800d8f4:	e7bb      	b.n	800d86e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800d8f6:	6862      	ldr	r2, [r4, #4]
 800d8f8:	4b1e      	ldr	r3, [pc, #120]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d8fa:	2a01      	cmp	r2, #1
 800d8fc:	d11c      	bne.n	800d938 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d8fe:	681b      	ldr	r3, [r3, #0]
 800d900:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d904:	d0a7      	beq.n	800d856 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800d906:	4e1b      	ldr	r6, [pc, #108]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d908:	68b3      	ldr	r3, [r6, #8]
 800d90a:	f023 0303 	bic.w	r3, r3, #3
 800d90e:	4313      	orrs	r3, r2
 800d910:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800d912:	f7fd fe27 	bl	800b564 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d916:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800d91a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800d91c:	68b3      	ldr	r3, [r6, #8]
 800d91e:	6862      	ldr	r2, [r4, #4]
 800d920:	f003 030c 	and.w	r3, r3, #12
 800d924:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800d928:	d0a3      	beq.n	800d872 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d92a:	f7fd fe1b 	bl	800b564 <HAL_GetTick>
 800d92e:	1bc0      	subs	r0, r0, r7
 800d930:	4540      	cmp	r0, r8
 800d932:	d9f3      	bls.n	800d91c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800d934:	2003      	movs	r0, #3
 800d936:	e78f      	b.n	800d858 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d938:	1e91      	subs	r1, r2, #2
 800d93a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d93c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d93e:	d802      	bhi.n	800d946 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d940:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800d944:	e7de      	b.n	800d904 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d946:	f013 0f02 	tst.w	r3, #2
 800d94a:	e7db      	b.n	800d904 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d94c:	b2ea      	uxtb	r2, r5
 800d94e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800d950:	681b      	ldr	r3, [r3, #0]
 800d952:	f003 030f 	and.w	r3, r3, #15
 800d956:	42ab      	cmp	r3, r5
 800d958:	f47f af7d 	bne.w	800d856 <HAL_RCC_ClockConfig+0xa>
 800d95c:	e78f      	b.n	800d87e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800d95e:	4905      	ldr	r1, [pc, #20]	; (800d974 <HAL_RCC_ClockConfig+0x128>)
 800d960:	68e0      	ldr	r0, [r4, #12]
 800d962:	688b      	ldr	r3, [r1, #8]
 800d964:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800d968:	4303      	orrs	r3, r0
 800d96a:	608b      	str	r3, [r1, #8]
 800d96c:	e78a      	b.n	800d884 <HAL_RCC_ClockConfig+0x38>
 800d96e:	bf00      	nop
 800d970:	40023c00 	.word	0x40023c00
 800d974:	40023800 	.word	0x40023800
 800d978:	08028ed9 	.word	0x08028ed9
 800d97c:	20000050 	.word	0x20000050
 800d980:	20000058 	.word	0x20000058

0800d984 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800d984:	4b04      	ldr	r3, [pc, #16]	; (800d998 <HAL_RCC_GetPCLK1Freq+0x14>)
 800d986:	4a05      	ldr	r2, [pc, #20]	; (800d99c <HAL_RCC_GetPCLK1Freq+0x18>)
 800d988:	689b      	ldr	r3, [r3, #8]
 800d98a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800d98e:	5cd3      	ldrb	r3, [r2, r3]
 800d990:	4a03      	ldr	r2, [pc, #12]	; (800d9a0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800d992:	6810      	ldr	r0, [r2, #0]
}
 800d994:	40d8      	lsrs	r0, r3
 800d996:	4770      	bx	lr
 800d998:	40023800 	.word	0x40023800
 800d99c:	08028ee9 	.word	0x08028ee9
 800d9a0:	20000050 	.word	0x20000050

0800d9a4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800d9a4:	230f      	movs	r3, #15
 800d9a6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800d9a8:	4b0b      	ldr	r3, [pc, #44]	; (800d9d8 <HAL_RCC_GetClockConfig+0x34>)
 800d9aa:	689a      	ldr	r2, [r3, #8]
 800d9ac:	f002 0203 	and.w	r2, r2, #3
 800d9b0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800d9b2:	689a      	ldr	r2, [r3, #8]
 800d9b4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800d9b8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800d9ba:	689a      	ldr	r2, [r3, #8]
 800d9bc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800d9c0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d9c2:	689b      	ldr	r3, [r3, #8]
 800d9c4:	08db      	lsrs	r3, r3, #3
 800d9c6:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800d9ca:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d9cc:	4b03      	ldr	r3, [pc, #12]	; (800d9dc <HAL_RCC_GetClockConfig+0x38>)
 800d9ce:	681b      	ldr	r3, [r3, #0]
 800d9d0:	f003 030f 	and.w	r3, r3, #15
 800d9d4:	600b      	str	r3, [r1, #0]
}
 800d9d6:	4770      	bx	lr
 800d9d8:	40023800 	.word	0x40023800
 800d9dc:	40023c00 	.word	0x40023c00

0800d9e0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800d9e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800d9e2:	6802      	ldr	r2, [r0, #0]
{
 800d9e4:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800d9e6:	0610      	lsls	r0, r2, #24
 800d9e8:	d508      	bpl.n	800d9fc <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800d9ea:	49a8      	ldr	r1, [pc, #672]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800d9ec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800d9ee:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800d9f2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800d9f6:	4303      	orrs	r3, r0
 800d9f8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800d9fc:	05d1      	lsls	r1, r2, #23
 800d9fe:	d508      	bpl.n	800da12 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800da00:	49a2      	ldr	r1, [pc, #648]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800da02:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800da04:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800da08:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800da0c:	4303      	orrs	r3, r0
 800da0e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800da12:	f012 0f43 	tst.w	r2, #67	; 0x43
 800da16:	d172      	bne.n	800dafe <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800da18:	6823      	ldr	r3, [r4, #0]
 800da1a:	f013 0f0c 	tst.w	r3, #12
 800da1e:	f000 80bf 	beq.w	800dba0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800da22:	4d9b      	ldr	r5, [pc, #620]	; (800dc90 <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800da24:	4e99      	ldr	r6, [pc, #612]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 800da26:	2300      	movs	r3, #0
 800da28:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800da2a:	f7fd fd9b 	bl	800b564 <HAL_GetTick>
 800da2e:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800da30:	6833      	ldr	r3, [r6, #0]
 800da32:	009a      	lsls	r2, r3, #2
 800da34:	f100 80f9 	bmi.w	800dc2a <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800da38:	6822      	ldr	r2, [r4, #0]
 800da3a:	0753      	lsls	r3, r2, #29
 800da3c:	d51a      	bpl.n	800da74 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800da3e:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800da42:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800da46:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800da4a:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800da4e:	430b      	orrs	r3, r1
 800da50:	6921      	ldr	r1, [r4, #16]
 800da52:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800da56:	69a1      	ldr	r1, [r4, #24]
 800da58:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800da5c:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800da60:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800da64:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800da66:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800da6a:	3901      	subs	r1, #1
 800da6c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800da70:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800da74:	0717      	lsls	r7, r2, #28
 800da76:	d519      	bpl.n	800daac <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800da78:	4984      	ldr	r1, [pc, #528]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800da7a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800da7e:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800da82:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800da86:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800da8a:	4303      	orrs	r3, r0
 800da8c:	6920      	ldr	r0, [r4, #16]
 800da8e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800da92:	69e0      	ldr	r0, [r4, #28]
 800da94:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800da98:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800da9c:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800daa0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800daa2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800daa6:	4303      	orrs	r3, r0
 800daa8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800daac:	0616      	lsls	r6, r2, #24
 800daae:	d517      	bpl.n	800dae0 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800dab0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dab2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800dab6:	d113      	bne.n	800dae0 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800dab8:	4974      	ldr	r1, [pc, #464]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800daba:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800dabe:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800dac2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800dac6:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800daca:	4313      	orrs	r3, r2
 800dacc:	6922      	ldr	r2, [r4, #16]
 800dace:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dad2:	6962      	ldr	r2, [r4, #20]
 800dad4:	0852      	lsrs	r2, r2, #1
 800dad6:	3a01      	subs	r2, #1
 800dad8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800dadc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800dae0:	2301      	movs	r3, #1
 800dae2:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800dae4:	f7fd fd3e 	bl	800b564 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800dae8:	4e68      	ldr	r6, [pc, #416]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800daea:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800daec:	6833      	ldr	r3, [r6, #0]
 800daee:	0098      	lsls	r0, r3, #2
 800daf0:	d458      	bmi.n	800dba4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800daf2:	f7fd fd37 	bl	800b564 <HAL_GetTick>
 800daf6:	1b40      	subs	r0, r0, r5
 800daf8:	2802      	cmp	r0, #2
 800dafa:	d9f7      	bls.n	800daec <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800dafc:	e04d      	b.n	800db9a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800dafe:	4d65      	ldr	r5, [pc, #404]	; (800dc94 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800db00:	4f62      	ldr	r7, [pc, #392]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 800db02:	2300      	movs	r3, #0
 800db04:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800db06:	f7fd fd2d 	bl	800b564 <HAL_GetTick>
 800db0a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800db0c:	683b      	ldr	r3, [r7, #0]
 800db0e:	011b      	lsls	r3, r3, #4
 800db10:	d43e      	bmi.n	800db90 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800db12:	6821      	ldr	r1, [r4, #0]
 800db14:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800db16:	bf41      	itttt	mi
 800db18:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800db1c:	071b      	lslmi	r3, r3, #28
 800db1e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800db22:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800db26:	078a      	lsls	r2, r1, #30
 800db28:	d515      	bpl.n	800db56 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800db2a:	4a58      	ldr	r2, [pc, #352]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800db2c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800db2e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800db32:	6866      	ldr	r6, [r4, #4]
 800db34:	061b      	lsls	r3, r3, #24
 800db36:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800db3a:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800db3e:	4303      	orrs	r3, r0
 800db40:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800db44:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800db48:	6a23      	ldr	r3, [r4, #32]
 800db4a:	f020 001f 	bic.w	r0, r0, #31
 800db4e:	3b01      	subs	r3, #1
 800db50:	4303      	orrs	r3, r0
 800db52:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800db56:	064b      	lsls	r3, r1, #25
 800db58:	d50a      	bpl.n	800db70 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800db5a:	68e3      	ldr	r3, [r4, #12]
 800db5c:	6862      	ldr	r2, [r4, #4]
 800db5e:	061b      	lsls	r3, r3, #24
 800db60:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800db64:	68a2      	ldr	r2, [r4, #8]
 800db66:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800db6a:	4a48      	ldr	r2, [pc, #288]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800db6c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800db70:	2301      	movs	r3, #1
 800db72:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800db74:	f7fd fcf6 	bl	800b564 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800db78:	4e44      	ldr	r6, [pc, #272]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800db7a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800db7c:	6833      	ldr	r3, [r6, #0]
 800db7e:	011f      	lsls	r7, r3, #4
 800db80:	f53f af4a 	bmi.w	800da18 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800db84:	f7fd fcee 	bl	800b564 <HAL_GetTick>
 800db88:	1b40      	subs	r0, r0, r5
 800db8a:	2802      	cmp	r0, #2
 800db8c:	d9f6      	bls.n	800db7c <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800db8e:	e004      	b.n	800db9a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800db90:	f7fd fce8 	bl	800b564 <HAL_GetTick>
 800db94:	1b80      	subs	r0, r0, r6
 800db96:	2802      	cmp	r0, #2
 800db98:	d9b8      	bls.n	800db0c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800db9a:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800db9c:	b003      	add	sp, #12
 800db9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800dba0:	0618      	lsls	r0, r3, #24
 800dba2:	d43d      	bmi.n	800dc20 <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800dba4:	6823      	ldr	r3, [r4, #0]
 800dba6:	0699      	lsls	r1, r3, #26
 800dba8:	d530      	bpl.n	800dc0c <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 800dbaa:	2300      	movs	r3, #0
 800dbac:	9301      	str	r3, [sp, #4]
 800dbae:	4b37      	ldr	r3, [pc, #220]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 800dbb0:	4d39      	ldr	r5, [pc, #228]	; (800dc98 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800dbb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800dbb4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800dbb8:	641a      	str	r2, [r3, #64]	; 0x40
 800dbba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dbbc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dbc0:	9301      	str	r3, [sp, #4]
 800dbc2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800dbc4:	682b      	ldr	r3, [r5, #0]
 800dbc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dbca:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800dbcc:	f7fd fcca 	bl	800b564 <HAL_GetTick>
 800dbd0:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800dbd2:	682b      	ldr	r3, [r5, #0]
 800dbd4:	05d9      	lsls	r1, r3, #23
 800dbd6:	d52f      	bpl.n	800dc38 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800dbd8:	4d2c      	ldr	r5, [pc, #176]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800dbda:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800dbdc:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800dbe0:	d130      	bne.n	800dc44 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800dbe2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800dbe4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800dbe8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800dbec:	4a27      	ldr	r2, [pc, #156]	; (800dc8c <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800dbee:	d148      	bne.n	800dc82 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800dbf0:	6891      	ldr	r1, [r2, #8]
 800dbf2:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800dbf6:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800dbfa:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800dbfe:	4301      	orrs	r1, r0
 800dc00:	6091      	str	r1, [r2, #8]
 800dc02:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800dc04:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800dc08:	430b      	orrs	r3, r1
 800dc0a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800dc0c:	6820      	ldr	r0, [r4, #0]
 800dc0e:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800dc12:	bf1f      	itttt	ne
 800dc14:	4b21      	ldrne	r3, [pc, #132]	; (800dc9c <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800dc16:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800dc1a:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 800dc1c:	2000      	movne	r0, #0
 800dc1e:	e7bd      	b.n	800db9c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800dc20:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dc22:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800dc26:	d1bd      	bne.n	800dba4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 800dc28:	e6fb      	b.n	800da22 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800dc2a:	f7fd fc9b 	bl	800b564 <HAL_GetTick>
 800dc2e:	1bc0      	subs	r0, r0, r7
 800dc30:	2802      	cmp	r0, #2
 800dc32:	f67f aefd 	bls.w	800da30 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800dc36:	e7b0      	b.n	800db9a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800dc38:	f7fd fc94 	bl	800b564 <HAL_GetTick>
 800dc3c:	1b80      	subs	r0, r0, r6
 800dc3e:	2802      	cmp	r0, #2
 800dc40:	d9c7      	bls.n	800dbd2 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 800dc42:	e7aa      	b.n	800db9a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800dc44:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dc46:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800dc4a:	4293      	cmp	r3, r2
 800dc4c:	d0c9      	beq.n	800dbe2 <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800dc4e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800dc50:	4a13      	ldr	r2, [pc, #76]	; (800dca0 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800dc52:	2101      	movs	r1, #1
 800dc54:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800dc56:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800dc5a:	2100      	movs	r1, #0
 800dc5c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800dc5e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800dc60:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800dc62:	07da      	lsls	r2, r3, #31
 800dc64:	d5bd      	bpl.n	800dbe2 <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 800dc66:	f7fd fc7d 	bl	800b564 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc6a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800dc6e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc70:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800dc72:	079b      	lsls	r3, r3, #30
 800dc74:	d4b5      	bmi.n	800dbe2 <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc76:	f7fd fc75 	bl	800b564 <HAL_GetTick>
 800dc7a:	1b80      	subs	r0, r0, r6
 800dc7c:	42b8      	cmp	r0, r7
 800dc7e:	d9f7      	bls.n	800dc70 <HAL_RCCEx_PeriphCLKConfig+0x290>
 800dc80:	e78b      	b.n	800db9a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800dc82:	6891      	ldr	r1, [r2, #8]
 800dc84:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800dc88:	e7ba      	b.n	800dc00 <HAL_RCCEx_PeriphCLKConfig+0x220>
 800dc8a:	bf00      	nop
 800dc8c:	40023800 	.word	0x40023800
 800dc90:	42470070 	.word	0x42470070
 800dc94:	42470068 	.word	0x42470068
 800dc98:	40007000 	.word	0x40007000
 800dc9c:	424711e0 	.word	0x424711e0
 800dca0:	42470e40 	.word	0x42470e40

0800dca4 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800dca4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800dca8:	4604      	mov	r4, r0
 800dcaa:	b340      	cbz	r0, 800dcfe <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800dcac:	6803      	ldr	r3, [r0, #0]
 800dcae:	07dd      	lsls	r5, r3, #31
 800dcb0:	d410      	bmi.n	800dcd4 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800dcb2:	6823      	ldr	r3, [r4, #0]
 800dcb4:	0798      	lsls	r0, r3, #30
 800dcb6:	d45e      	bmi.n	800dd76 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dcb8:	6823      	ldr	r3, [r4, #0]
 800dcba:	071a      	lsls	r2, r3, #28
 800dcbc:	f100 80a0 	bmi.w	800de00 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dcc0:	6823      	ldr	r3, [r4, #0]
 800dcc2:	075b      	lsls	r3, r3, #29
 800dcc4:	f100 80be 	bmi.w	800de44 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800dcc8:	69a0      	ldr	r0, [r4, #24]
 800dcca:	2800      	cmp	r0, #0
 800dccc:	f040 811f 	bne.w	800df0e <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800dcd0:	2000      	movs	r0, #0
 800dcd2:	e02b      	b.n	800dd2c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800dcd4:	4ba7      	ldr	r3, [pc, #668]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800dcd6:	689a      	ldr	r2, [r3, #8]
 800dcd8:	f002 020c 	and.w	r2, r2, #12
 800dcdc:	2a04      	cmp	r2, #4
 800dcde:	d007      	beq.n	800dcf0 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dce0:	689a      	ldr	r2, [r3, #8]
 800dce2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800dce6:	2a08      	cmp	r2, #8
 800dce8:	d10b      	bne.n	800dd02 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dcea:	685a      	ldr	r2, [r3, #4]
 800dcec:	0251      	lsls	r1, r2, #9
 800dcee:	d508      	bpl.n	800dd02 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dcf0:	4ba0      	ldr	r3, [pc, #640]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800dcf2:	681b      	ldr	r3, [r3, #0]
 800dcf4:	039a      	lsls	r2, r3, #14
 800dcf6:	d5dc      	bpl.n	800dcb2 <HAL_RCC_OscConfig+0xe>
 800dcf8:	6863      	ldr	r3, [r4, #4]
 800dcfa:	2b00      	cmp	r3, #0
 800dcfc:	d1d9      	bne.n	800dcb2 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800dcfe:	2001      	movs	r0, #1
 800dd00:	e014      	b.n	800dd2c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd02:	6862      	ldr	r2, [r4, #4]
 800dd04:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800dd08:	d113      	bne.n	800dd32 <HAL_RCC_OscConfig+0x8e>
 800dd0a:	681a      	ldr	r2, [r3, #0]
 800dd0c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800dd10:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800dd12:	f7fd fc27 	bl	800b564 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd16:	4e97      	ldr	r6, [pc, #604]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800dd18:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd1a:	6833      	ldr	r3, [r6, #0]
 800dd1c:	039b      	lsls	r3, r3, #14
 800dd1e:	d4c8      	bmi.n	800dcb2 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dd20:	f7fd fc20 	bl	800b564 <HAL_GetTick>
 800dd24:	1b40      	subs	r0, r0, r5
 800dd26:	2864      	cmp	r0, #100	; 0x64
 800dd28:	d9f7      	bls.n	800dd1a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800dd2a:	2003      	movs	r0, #3
}
 800dd2c:	b002      	add	sp, #8
 800dd2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd32:	4d90      	ldr	r5, [pc, #576]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800dd34:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800dd38:	682b      	ldr	r3, [r5, #0]
 800dd3a:	d107      	bne.n	800dd4c <HAL_RCC_OscConfig+0xa8>
 800dd3c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800dd40:	602b      	str	r3, [r5, #0]
 800dd42:	682b      	ldr	r3, [r5, #0]
 800dd44:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dd48:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dd4a:	e7e2      	b.n	800dd12 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd4c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800dd50:	602b      	str	r3, [r5, #0]
 800dd52:	682b      	ldr	r3, [r5, #0]
 800dd54:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800dd58:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dd5a:	2a00      	cmp	r2, #0
 800dd5c:	d1d9      	bne.n	800dd12 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800dd5e:	f7fd fc01 	bl	800b564 <HAL_GetTick>
 800dd62:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800dd64:	682b      	ldr	r3, [r5, #0]
 800dd66:	039f      	lsls	r7, r3, #14
 800dd68:	d5a3      	bpl.n	800dcb2 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dd6a:	f7fd fbfb 	bl	800b564 <HAL_GetTick>
 800dd6e:	1b80      	subs	r0, r0, r6
 800dd70:	2864      	cmp	r0, #100	; 0x64
 800dd72:	d9f7      	bls.n	800dd64 <HAL_RCC_OscConfig+0xc0>
 800dd74:	e7d9      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800dd76:	4b7f      	ldr	r3, [pc, #508]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800dd78:	689a      	ldr	r2, [r3, #8]
 800dd7a:	f012 0f0c 	tst.w	r2, #12
 800dd7e:	d007      	beq.n	800dd90 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800dd80:	689a      	ldr	r2, [r3, #8]
 800dd82:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800dd86:	2a08      	cmp	r2, #8
 800dd88:	d111      	bne.n	800ddae <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800dd8a:	685b      	ldr	r3, [r3, #4]
 800dd8c:	025e      	lsls	r6, r3, #9
 800dd8e:	d40e      	bmi.n	800ddae <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800dd90:	4b78      	ldr	r3, [pc, #480]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800dd92:	681a      	ldr	r2, [r3, #0]
 800dd94:	0795      	lsls	r5, r2, #30
 800dd96:	d502      	bpl.n	800dd9e <HAL_RCC_OscConfig+0xfa>
 800dd98:	68e2      	ldr	r2, [r4, #12]
 800dd9a:	2a01      	cmp	r2, #1
 800dd9c:	d1af      	bne.n	800dcfe <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dd9e:	681a      	ldr	r2, [r3, #0]
 800dda0:	6921      	ldr	r1, [r4, #16]
 800dda2:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dda6:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800ddaa:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800ddac:	e784      	b.n	800dcb8 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800ddae:	68e2      	ldr	r2, [r4, #12]
 800ddb0:	4b71      	ldr	r3, [pc, #452]	; (800df78 <HAL_RCC_OscConfig+0x2d4>)
 800ddb2:	b1b2      	cbz	r2, 800dde2 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800ddb4:	2201      	movs	r2, #1
 800ddb6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800ddb8:	f7fd fbd4 	bl	800b564 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ddbc:	4d6d      	ldr	r5, [pc, #436]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800ddbe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ddc0:	682b      	ldr	r3, [r5, #0]
 800ddc2:	0798      	lsls	r0, r3, #30
 800ddc4:	d507      	bpl.n	800ddd6 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ddc6:	682b      	ldr	r3, [r5, #0]
 800ddc8:	6922      	ldr	r2, [r4, #16]
 800ddca:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ddce:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ddd2:	602b      	str	r3, [r5, #0]
 800ddd4:	e770      	b.n	800dcb8 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ddd6:	f7fd fbc5 	bl	800b564 <HAL_GetTick>
 800ddda:	1b80      	subs	r0, r0, r6
 800dddc:	2802      	cmp	r0, #2
 800ddde:	d9ef      	bls.n	800ddc0 <HAL_RCC_OscConfig+0x11c>
 800dde0:	e7a3      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800dde2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800dde4:	f7fd fbbe 	bl	800b564 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dde8:	4e62      	ldr	r6, [pc, #392]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800ddea:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ddec:	6833      	ldr	r3, [r6, #0]
 800ddee:	0799      	lsls	r1, r3, #30
 800ddf0:	f57f af62 	bpl.w	800dcb8 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ddf4:	f7fd fbb6 	bl	800b564 <HAL_GetTick>
 800ddf8:	1b40      	subs	r0, r0, r5
 800ddfa:	2802      	cmp	r0, #2
 800ddfc:	d9f6      	bls.n	800ddec <HAL_RCC_OscConfig+0x148>
 800ddfe:	e794      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800de00:	6962      	ldr	r2, [r4, #20]
 800de02:	4b5e      	ldr	r3, [pc, #376]	; (800df7c <HAL_RCC_OscConfig+0x2d8>)
 800de04:	b17a      	cbz	r2, 800de26 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 800de06:	2201      	movs	r2, #1
 800de08:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800de0a:	f7fd fbab 	bl	800b564 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800de0e:	4e59      	ldr	r6, [pc, #356]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800de10:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800de12:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800de14:	079f      	lsls	r7, r3, #30
 800de16:	f53f af53 	bmi.w	800dcc0 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800de1a:	f7fd fba3 	bl	800b564 <HAL_GetTick>
 800de1e:	1b40      	subs	r0, r0, r5
 800de20:	2802      	cmp	r0, #2
 800de22:	d9f6      	bls.n	800de12 <HAL_RCC_OscConfig+0x16e>
 800de24:	e781      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800de26:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800de28:	f7fd fb9c 	bl	800b564 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800de2c:	4e51      	ldr	r6, [pc, #324]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800de2e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800de30:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800de32:	0798      	lsls	r0, r3, #30
 800de34:	f57f af44 	bpl.w	800dcc0 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800de38:	f7fd fb94 	bl	800b564 <HAL_GetTick>
 800de3c:	1b40      	subs	r0, r0, r5
 800de3e:	2802      	cmp	r0, #2
 800de40:	d9f6      	bls.n	800de30 <HAL_RCC_OscConfig+0x18c>
 800de42:	e772      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800de44:	4b4b      	ldr	r3, [pc, #300]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800de46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800de48:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800de4c:	d128      	bne.n	800dea0 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800de4e:	9201      	str	r2, [sp, #4]
 800de50:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800de52:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800de56:	641a      	str	r2, [r3, #64]	; 0x40
 800de58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800de5a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800de5e:	9301      	str	r3, [sp, #4]
 800de60:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800de62:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800de64:	4d46      	ldr	r5, [pc, #280]	; (800df80 <HAL_RCC_OscConfig+0x2dc>)
 800de66:	682b      	ldr	r3, [r5, #0]
 800de68:	05d9      	lsls	r1, r3, #23
 800de6a:	d51b      	bpl.n	800dea4 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800de6c:	68a3      	ldr	r3, [r4, #8]
 800de6e:	4d41      	ldr	r5, [pc, #260]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800de70:	2b01      	cmp	r3, #1
 800de72:	d127      	bne.n	800dec4 <HAL_RCC_OscConfig+0x220>
 800de74:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800de76:	f043 0301 	orr.w	r3, r3, #1
 800de7a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800de7c:	f7fd fb72 	bl	800b564 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800de80:	4e3c      	ldr	r6, [pc, #240]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800de82:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800de84:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800de88:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800de8a:	079b      	lsls	r3, r3, #30
 800de8c:	d539      	bpl.n	800df02 <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 800de8e:	2f00      	cmp	r7, #0
 800de90:	f43f af1a 	beq.w	800dcc8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800de94:	4a37      	ldr	r2, [pc, #220]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800de96:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800de98:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800de9c:	6413      	str	r3, [r2, #64]	; 0x40
 800de9e:	e713      	b.n	800dcc8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800dea0:	2700      	movs	r7, #0
 800dea2:	e7df      	b.n	800de64 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dea4:	682b      	ldr	r3, [r5, #0]
 800dea6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800deaa:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800deac:	f7fd fb5a 	bl	800b564 <HAL_GetTick>
 800deb0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800deb2:	682b      	ldr	r3, [r5, #0]
 800deb4:	05da      	lsls	r2, r3, #23
 800deb6:	d4d9      	bmi.n	800de6c <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800deb8:	f7fd fb54 	bl	800b564 <HAL_GetTick>
 800debc:	1b80      	subs	r0, r0, r6
 800debe:	2802      	cmp	r0, #2
 800dec0:	d9f7      	bls.n	800deb2 <HAL_RCC_OscConfig+0x20e>
 800dec2:	e732      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dec4:	2b05      	cmp	r3, #5
 800dec6:	d104      	bne.n	800ded2 <HAL_RCC_OscConfig+0x22e>
 800dec8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800deca:	f043 0304 	orr.w	r3, r3, #4
 800dece:	672b      	str	r3, [r5, #112]	; 0x70
 800ded0:	e7d0      	b.n	800de74 <HAL_RCC_OscConfig+0x1d0>
 800ded2:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800ded4:	f022 0201 	bic.w	r2, r2, #1
 800ded8:	672a      	str	r2, [r5, #112]	; 0x70
 800deda:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800dedc:	f022 0204 	bic.w	r2, r2, #4
 800dee0:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dee2:	2b00      	cmp	r3, #0
 800dee4:	d1ca      	bne.n	800de7c <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 800dee6:	f7fd fb3d 	bl	800b564 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800deea:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800deee:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800def0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800def2:	0798      	lsls	r0, r3, #30
 800def4:	d5cb      	bpl.n	800de8e <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800def6:	f7fd fb35 	bl	800b564 <HAL_GetTick>
 800defa:	1b80      	subs	r0, r0, r6
 800defc:	4540      	cmp	r0, r8
 800defe:	d9f7      	bls.n	800def0 <HAL_RCC_OscConfig+0x24c>
 800df00:	e713      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800df02:	f7fd fb2f 	bl	800b564 <HAL_GetTick>
 800df06:	1b40      	subs	r0, r0, r5
 800df08:	4540      	cmp	r0, r8
 800df0a:	d9bd      	bls.n	800de88 <HAL_RCC_OscConfig+0x1e4>
 800df0c:	e70d      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800df0e:	4d19      	ldr	r5, [pc, #100]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
 800df10:	68ab      	ldr	r3, [r5, #8]
 800df12:	f003 030c 	and.w	r3, r3, #12
 800df16:	2b08      	cmp	r3, #8
 800df18:	d049      	beq.n	800dfae <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800df1a:	4e1a      	ldr	r6, [pc, #104]	; (800df84 <HAL_RCC_OscConfig+0x2e0>)
 800df1c:	2300      	movs	r3, #0
 800df1e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800df20:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800df22:	d137      	bne.n	800df94 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800df24:	f7fd fb1e 	bl	800b564 <HAL_GetTick>
 800df28:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800df2a:	682b      	ldr	r3, [r5, #0]
 800df2c:	0199      	lsls	r1, r3, #6
 800df2e:	d42b      	bmi.n	800df88 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800df30:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800df34:	4313      	orrs	r3, r2
 800df36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800df38:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800df3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800df3e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800df42:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800df44:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800df48:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800df4a:	0852      	lsrs	r2, r2, #1
 800df4c:	3a01      	subs	r2, #1
 800df4e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800df52:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800df54:	2301      	movs	r3, #1
 800df56:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800df58:	f7fd fb04 	bl	800b564 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df5c:	4d05      	ldr	r5, [pc, #20]	; (800df74 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800df5e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df60:	682b      	ldr	r3, [r5, #0]
 800df62:	019a      	lsls	r2, r3, #6
 800df64:	f53f aeb4 	bmi.w	800dcd0 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800df68:	f7fd fafc 	bl	800b564 <HAL_GetTick>
 800df6c:	1b00      	subs	r0, r0, r4
 800df6e:	2802      	cmp	r0, #2
 800df70:	d9f6      	bls.n	800df60 <HAL_RCC_OscConfig+0x2bc>
 800df72:	e6da      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
 800df74:	40023800 	.word	0x40023800
 800df78:	42470000 	.word	0x42470000
 800df7c:	42470e80 	.word	0x42470e80
 800df80:	40007000 	.word	0x40007000
 800df84:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800df88:	f7fd faec 	bl	800b564 <HAL_GetTick>
 800df8c:	1bc0      	subs	r0, r0, r7
 800df8e:	2802      	cmp	r0, #2
 800df90:	d9cb      	bls.n	800df2a <HAL_RCC_OscConfig+0x286>
 800df92:	e6ca      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800df94:	f7fd fae6 	bl	800b564 <HAL_GetTick>
 800df98:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800df9a:	682b      	ldr	r3, [r5, #0]
 800df9c:	019b      	lsls	r3, r3, #6
 800df9e:	f57f ae97 	bpl.w	800dcd0 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dfa2:	f7fd fadf 	bl	800b564 <HAL_GetTick>
 800dfa6:	1b00      	subs	r0, r0, r4
 800dfa8:	2802      	cmp	r0, #2
 800dfaa:	d9f6      	bls.n	800df9a <HAL_RCC_OscConfig+0x2f6>
 800dfac:	e6bd      	b.n	800dd2a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800dfae:	2801      	cmp	r0, #1
 800dfb0:	f43f aebc 	beq.w	800dd2c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800dfb4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dfb6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dfb8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dfbc:	4291      	cmp	r1, r2
 800dfbe:	f47f ae9e 	bne.w	800dcfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dfc2:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dfc4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dfc8:	428a      	cmp	r2, r1
 800dfca:	f47f ae98 	bne.w	800dcfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dfce:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dfd0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800dfd4:	401a      	ands	r2, r3
 800dfd6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800dfda:	f47f ae90 	bne.w	800dcfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dfde:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dfe0:	0852      	lsrs	r2, r2, #1
 800dfe2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800dfe6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dfe8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800dfec:	f47f ae87 	bne.w	800dcfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800dff0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800dff2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dff6:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800dffa:	f47f ae80 	bne.w	800dcfe <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800dffe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e000:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800e004:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800e008:	f43f ae62 	beq.w	800dcd0 <HAL_RCC_OscConfig+0x2c>
 800e00c:	e677      	b.n	800dcfe <HAL_RCC_OscConfig+0x5a>
 800e00e:	bf00      	nop

0800e010 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800e010:	b538      	push	{r3, r4, r5, lr}
 800e012:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800e014:	4604      	mov	r4, r0
 800e016:	b1c8      	cbz	r0, 800e04c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800e018:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e01c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e020:	b91b      	cbnz	r3, 800e02a <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800e022:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800e026:	f7f3 fe5b 	bl	8001ce0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e02a:	2302      	movs	r3, #2
 800e02c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e030:	1d21      	adds	r1, r4, #4
 800e032:	6820      	ldr	r0, [r4, #0]
 800e034:	f000 f9b8 	bl	800e3a8 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800e038:	6862      	ldr	r2, [r4, #4]
 800e03a:	6820      	ldr	r0, [r4, #0]
 800e03c:	4629      	mov	r1, r5
 800e03e:	f000 f9e9 	bl	800e414 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e042:	2301      	movs	r3, #1
 800e044:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800e048:	2000      	movs	r0, #0
}
 800e04a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800e04c:	2001      	movs	r0, #1
 800e04e:	e7fc      	b.n	800e04a <HAL_SDRAM_Init+0x3a>

0800e050 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800e050:	b510      	push	{r4, lr}
 800e052:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800e054:	f7f3 feba 	bl	8001dcc <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800e058:	e9d4 0100 	ldrd	r0, r1, [r4]
 800e05c:	f000 fa16 	bl	800e48c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800e060:	2000      	movs	r0, #0
 800e062:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800e066:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800e06a:	bd10      	pop	{r4, pc}

0800e06c <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800e06c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e06e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e072:	2b02      	cmp	r3, #2
{
 800e074:	4604      	mov	r4, r0
 800e076:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e078:	b2d8      	uxtb	r0, r3
 800e07a:	d00d      	beq.n	800e098 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e07c:	2302      	movs	r3, #2
 800e07e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e082:	6820      	ldr	r0, [r4, #0]
 800e084:	f000 fa11 	bl	800e4aa <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e088:	682b      	ldr	r3, [r5, #0]
 800e08a:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e08c:	bf0c      	ite	eq
 800e08e:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e090:	2301      	movne	r3, #1
 800e092:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800e096:	2000      	movs	r0, #0
}
 800e098:	bd38      	pop	{r3, r4, r5, pc}

0800e09a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e09a:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e09c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e0a0:	2b02      	cmp	r3, #2
{
 800e0a2:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e0a4:	b2d8      	uxtb	r0, r3
 800e0a6:	d009      	beq.n	800e0bc <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e0a8:	2302      	movs	r3, #2
 800e0aa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800e0ae:	6820      	ldr	r0, [r4, #0]
 800e0b0:	f000 fa22 	bl	800e4f8 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e0b4:	2301      	movs	r3, #1
 800e0b6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800e0ba:	2000      	movs	r0, #0
}
 800e0bc:	bd10      	pop	{r4, pc}

0800e0be <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800e0be:	4770      	bx	lr

0800e0c0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800e0c0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e0c4:	2b01      	cmp	r3, #1
 800e0c6:	d130      	bne.n	800e12a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800e0c8:	2302      	movs	r3, #2
 800e0ca:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800e0ce:	6803      	ldr	r3, [r0, #0]
 800e0d0:	68da      	ldr	r2, [r3, #12]
 800e0d2:	f042 0201 	orr.w	r2, r2, #1
 800e0d6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800e0d8:	4a15      	ldr	r2, [pc, #84]	; (800e130 <HAL_TIM_Base_Start_IT+0x70>)
 800e0da:	4293      	cmp	r3, r2
 800e0dc:	d01a      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e0de:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800e0e2:	d017      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e0e4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e0e8:	4293      	cmp	r3, r2
 800e0ea:	d013      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e0ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e0f0:	4293      	cmp	r3, r2
 800e0f2:	d00f      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e0f4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e0f8:	4293      	cmp	r3, r2
 800e0fa:	d00b      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e0fc:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e100:	4293      	cmp	r3, r2
 800e102:	d007      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e104:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800e108:	4293      	cmp	r3, r2
 800e10a:	d003      	beq.n	800e114 <HAL_TIM_Base_Start_IT+0x54>
 800e10c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800e110:	4293      	cmp	r3, r2
 800e112:	d104      	bne.n	800e11e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e114:	689a      	ldr	r2, [r3, #8]
 800e116:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e11a:	2a06      	cmp	r2, #6
 800e11c:	d003      	beq.n	800e126 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800e11e:	681a      	ldr	r2, [r3, #0]
 800e120:	f042 0201 	orr.w	r2, r2, #1
 800e124:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800e126:	2000      	movs	r0, #0
}
 800e128:	4770      	bx	lr
    return HAL_ERROR;
 800e12a:	2001      	movs	r0, #1
 800e12c:	4770      	bx	lr
 800e12e:	bf00      	nop
 800e130:	40010000 	.word	0x40010000

0800e134 <HAL_TIM_OC_DelayElapsedCallback>:
 800e134:	4770      	bx	lr

0800e136 <HAL_TIM_IC_CaptureCallback>:
 800e136:	4770      	bx	lr

0800e138 <HAL_TIM_PWM_PulseFinishedCallback>:
 800e138:	4770      	bx	lr

0800e13a <HAL_TIM_TriggerCallback>:
 800e13a:	4770      	bx	lr

0800e13c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e13c:	6803      	ldr	r3, [r0, #0]
 800e13e:	691a      	ldr	r2, [r3, #16]
 800e140:	0791      	lsls	r1, r2, #30
{
 800e142:	b510      	push	{r4, lr}
 800e144:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e146:	d50e      	bpl.n	800e166 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800e148:	68da      	ldr	r2, [r3, #12]
 800e14a:	0792      	lsls	r2, r2, #30
 800e14c:	d50b      	bpl.n	800e166 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800e14e:	f06f 0202 	mvn.w	r2, #2
 800e152:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800e154:	2201      	movs	r2, #1
 800e156:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800e158:	699b      	ldr	r3, [r3, #24]
 800e15a:	079b      	lsls	r3, r3, #30
 800e15c:	d077      	beq.n	800e24e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800e15e:	f7ff ffea 	bl	800e136 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e162:	2300      	movs	r3, #0
 800e164:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800e166:	6823      	ldr	r3, [r4, #0]
 800e168:	691a      	ldr	r2, [r3, #16]
 800e16a:	0750      	lsls	r0, r2, #29
 800e16c:	d510      	bpl.n	800e190 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800e16e:	68da      	ldr	r2, [r3, #12]
 800e170:	0751      	lsls	r1, r2, #29
 800e172:	d50d      	bpl.n	800e190 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800e174:	f06f 0204 	mvn.w	r2, #4
 800e178:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800e17a:	2202      	movs	r2, #2
 800e17c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e17e:	699b      	ldr	r3, [r3, #24]
 800e180:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800e184:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e186:	d068      	beq.n	800e25a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800e188:	f7ff ffd5 	bl	800e136 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e18c:	2300      	movs	r3, #0
 800e18e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800e190:	6823      	ldr	r3, [r4, #0]
 800e192:	691a      	ldr	r2, [r3, #16]
 800e194:	0712      	lsls	r2, r2, #28
 800e196:	d50f      	bpl.n	800e1b8 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800e198:	68da      	ldr	r2, [r3, #12]
 800e19a:	0710      	lsls	r0, r2, #28
 800e19c:	d50c      	bpl.n	800e1b8 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800e19e:	f06f 0208 	mvn.w	r2, #8
 800e1a2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800e1a4:	2204      	movs	r2, #4
 800e1a6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e1a8:	69db      	ldr	r3, [r3, #28]
 800e1aa:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800e1ac:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e1ae:	d05a      	beq.n	800e266 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800e1b0:	f7ff ffc1 	bl	800e136 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e1b4:	2300      	movs	r3, #0
 800e1b6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800e1b8:	6823      	ldr	r3, [r4, #0]
 800e1ba:	691a      	ldr	r2, [r3, #16]
 800e1bc:	06d2      	lsls	r2, r2, #27
 800e1be:	d510      	bpl.n	800e1e2 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800e1c0:	68da      	ldr	r2, [r3, #12]
 800e1c2:	06d0      	lsls	r0, r2, #27
 800e1c4:	d50d      	bpl.n	800e1e2 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800e1c6:	f06f 0210 	mvn.w	r2, #16
 800e1ca:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800e1cc:	2208      	movs	r2, #8
 800e1ce:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e1d0:	69db      	ldr	r3, [r3, #28]
 800e1d2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800e1d6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e1d8:	d04b      	beq.n	800e272 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800e1da:	f7ff ffac 	bl	800e136 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e1de:	2300      	movs	r3, #0
 800e1e0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800e1e2:	6823      	ldr	r3, [r4, #0]
 800e1e4:	691a      	ldr	r2, [r3, #16]
 800e1e6:	07d1      	lsls	r1, r2, #31
 800e1e8:	d508      	bpl.n	800e1fc <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800e1ea:	68da      	ldr	r2, [r3, #12]
 800e1ec:	07d2      	lsls	r2, r2, #31
 800e1ee:	d505      	bpl.n	800e1fc <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800e1f0:	f06f 0201 	mvn.w	r2, #1
 800e1f4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800e1f6:	4620      	mov	r0, r4
 800e1f8:	f7f3 fbba 	bl	8001970 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800e1fc:	6823      	ldr	r3, [r4, #0]
 800e1fe:	691a      	ldr	r2, [r3, #16]
 800e200:	0610      	lsls	r0, r2, #24
 800e202:	d508      	bpl.n	800e216 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800e204:	68da      	ldr	r2, [r3, #12]
 800e206:	0611      	lsls	r1, r2, #24
 800e208:	d505      	bpl.n	800e216 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800e20a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800e20e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800e210:	4620      	mov	r0, r4
 800e212:	f000 f8c8 	bl	800e3a6 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800e216:	6823      	ldr	r3, [r4, #0]
 800e218:	691a      	ldr	r2, [r3, #16]
 800e21a:	0652      	lsls	r2, r2, #25
 800e21c:	d508      	bpl.n	800e230 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800e21e:	68da      	ldr	r2, [r3, #12]
 800e220:	0650      	lsls	r0, r2, #25
 800e222:	d505      	bpl.n	800e230 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800e224:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800e228:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800e22a:	4620      	mov	r0, r4
 800e22c:	f7ff ff85 	bl	800e13a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800e230:	6823      	ldr	r3, [r4, #0]
 800e232:	691a      	ldr	r2, [r3, #16]
 800e234:	0691      	lsls	r1, r2, #26
 800e236:	d522      	bpl.n	800e27e <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800e238:	68da      	ldr	r2, [r3, #12]
 800e23a:	0692      	lsls	r2, r2, #26
 800e23c:	d51f      	bpl.n	800e27e <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e23e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800e242:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e244:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800e246:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800e24a:	f000 b8ab 	b.w	800e3a4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800e24e:	f7ff ff71 	bl	800e134 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e252:	4620      	mov	r0, r4
 800e254:	f7ff ff70 	bl	800e138 <HAL_TIM_PWM_PulseFinishedCallback>
 800e258:	e783      	b.n	800e162 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e25a:	f7ff ff6b 	bl	800e134 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e25e:	4620      	mov	r0, r4
 800e260:	f7ff ff6a 	bl	800e138 <HAL_TIM_PWM_PulseFinishedCallback>
 800e264:	e792      	b.n	800e18c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e266:	f7ff ff65 	bl	800e134 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e26a:	4620      	mov	r0, r4
 800e26c:	f7ff ff64 	bl	800e138 <HAL_TIM_PWM_PulseFinishedCallback>
 800e270:	e7a0      	b.n	800e1b4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e272:	f7ff ff5f 	bl	800e134 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e276:	4620      	mov	r0, r4
 800e278:	f7ff ff5e 	bl	800e138 <HAL_TIM_PWM_PulseFinishedCallback>
 800e27c:	e7af      	b.n	800e1de <HAL_TIM_IRQHandler+0xa2>
}
 800e27e:	bd10      	pop	{r4, pc}

0800e280 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e280:	4a30      	ldr	r2, [pc, #192]	; (800e344 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800e282:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e284:	4290      	cmp	r0, r2
 800e286:	d012      	beq.n	800e2ae <TIM_Base_SetConfig+0x2e>
 800e288:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800e28c:	d00f      	beq.n	800e2ae <TIM_Base_SetConfig+0x2e>
 800e28e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e292:	4290      	cmp	r0, r2
 800e294:	d00b      	beq.n	800e2ae <TIM_Base_SetConfig+0x2e>
 800e296:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e29a:	4290      	cmp	r0, r2
 800e29c:	d007      	beq.n	800e2ae <TIM_Base_SetConfig+0x2e>
 800e29e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e2a2:	4290      	cmp	r0, r2
 800e2a4:	d003      	beq.n	800e2ae <TIM_Base_SetConfig+0x2e>
 800e2a6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e2aa:	4290      	cmp	r0, r2
 800e2ac:	d119      	bne.n	800e2e2 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800e2ae:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800e2b0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800e2b4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800e2b6:	4a23      	ldr	r2, [pc, #140]	; (800e344 <TIM_Base_SetConfig+0xc4>)
 800e2b8:	4290      	cmp	r0, r2
 800e2ba:	d029      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2bc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800e2c0:	d026      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2c2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e2c6:	4290      	cmp	r0, r2
 800e2c8:	d022      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2ca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e2ce:	4290      	cmp	r0, r2
 800e2d0:	d01e      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2d2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e2d6:	4290      	cmp	r0, r2
 800e2d8:	d01a      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2da:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e2de:	4290      	cmp	r0, r2
 800e2e0:	d016      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2e2:	4a19      	ldr	r2, [pc, #100]	; (800e348 <TIM_Base_SetConfig+0xc8>)
 800e2e4:	4290      	cmp	r0, r2
 800e2e6:	d013      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2e8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e2ec:	4290      	cmp	r0, r2
 800e2ee:	d00f      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2f0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e2f4:	4290      	cmp	r0, r2
 800e2f6:	d00b      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e2f8:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800e2fc:	4290      	cmp	r0, r2
 800e2fe:	d007      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e300:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e304:	4290      	cmp	r0, r2
 800e306:	d003      	beq.n	800e310 <TIM_Base_SetConfig+0x90>
 800e308:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e30c:	4290      	cmp	r0, r2
 800e30e:	d103      	bne.n	800e318 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e310:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800e312:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e316:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800e318:	694a      	ldr	r2, [r1, #20]
 800e31a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e31e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800e320:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800e322:	688b      	ldr	r3, [r1, #8]
 800e324:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800e326:	680b      	ldr	r3, [r1, #0]
 800e328:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800e32a:	4b06      	ldr	r3, [pc, #24]	; (800e344 <TIM_Base_SetConfig+0xc4>)
 800e32c:	4298      	cmp	r0, r3
 800e32e:	d003      	beq.n	800e338 <TIM_Base_SetConfig+0xb8>
 800e330:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e334:	4298      	cmp	r0, r3
 800e336:	d101      	bne.n	800e33c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800e338:	690b      	ldr	r3, [r1, #16]
 800e33a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800e33c:	2301      	movs	r3, #1
 800e33e:	6143      	str	r3, [r0, #20]
}
 800e340:	4770      	bx	lr
 800e342:	bf00      	nop
 800e344:	40010000 	.word	0x40010000
 800e348:	40014000 	.word	0x40014000

0800e34c <HAL_TIM_Base_Init>:
{
 800e34c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e34e:	4604      	mov	r4, r0
 800e350:	b330      	cbz	r0, 800e3a0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e352:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e356:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e35a:	b91b      	cbnz	r3, 800e364 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e35c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800e360:	f7ff fead 	bl	800e0be <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e364:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e366:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e368:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e36c:	1d21      	adds	r1, r4, #4
 800e36e:	f7ff ff87 	bl	800e280 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800e372:	2301      	movs	r3, #1
 800e374:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800e378:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800e37a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800e37e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800e382:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800e386:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800e38a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800e38e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800e392:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800e396:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800e39a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800e39e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e3a0:	2001      	movs	r0, #1
 800e3a2:	e7fc      	b.n	800e39e <HAL_TIM_Base_Init+0x52>

0800e3a4 <HAL_TIMEx_CommutCallback>:
 800e3a4:	4770      	bx	lr

0800e3a6 <HAL_TIMEx_BreakCallback>:
 800e3a6:	4770      	bx	lr

0800e3a8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800e3a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3ac:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800e3ae:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800e3b2:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800e3b6:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800e3ba:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800e3be:	6809      	ldr	r1, [r1, #0]
 800e3c0:	2901      	cmp	r1, #1
 800e3c2:	ea43 0304 	orr.w	r3, r3, r4
 800e3c6:	4912      	ldr	r1, [pc, #72]	; (800e410 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800e3c8:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800e3ca:	d00f      	beq.n	800e3ec <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800e3cc:	431a      	orrs	r2, r3
 800e3ce:	432a      	orrs	r2, r5
 800e3d0:	ea42 0308 	orr.w	r3, r2, r8
 800e3d4:	ea43 030e 	orr.w	r3, r3, lr
 800e3d8:	ea43 030c 	orr.w	r3, r3, ip
 800e3dc:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800e3de:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800e3e0:	4333      	orrs	r3, r6
 800e3e2:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800e3e4:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800e3e6:	2000      	movs	r0, #0
 800e3e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800e3ec:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800e3ee:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800e3f0:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800e3f2:	ea45 0208 	orr.w	r2, r5, r8
 800e3f6:	ea42 020e 	orr.w	r2, r2, lr
 800e3fa:	ea42 020c 	orr.w	r2, r2, ip
 800e3fe:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800e400:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800e404:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800e406:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800e408:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800e40a:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800e40c:	6042      	str	r2, [r0, #4]
 800e40e:	e7ea      	b.n	800e3e6 <FMC_SDRAM_Init+0x3e>
 800e410:	ffff8000 	.word	0xffff8000

0800e414 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800e414:	68cb      	ldr	r3, [r1, #12]
{
 800e416:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e418:	680c      	ldr	r4, [r1, #0]
 800e41a:	688e      	ldr	r6, [r1, #8]
 800e41c:	690d      	ldr	r5, [r1, #16]
 800e41e:	1e5f      	subs	r7, r3, #1
 800e420:	694b      	ldr	r3, [r1, #20]
 800e422:	f104 3cff 	add.w	ip, r4, #4294967295
 800e426:	684c      	ldr	r4, [r1, #4]
 800e428:	6989      	ldr	r1, [r1, #24]
 800e42a:	3b01      	subs	r3, #1
 800e42c:	051b      	lsls	r3, r3, #20
 800e42e:	3c01      	subs	r4, #1
 800e430:	3e01      	subs	r6, #1
 800e432:	3d01      	subs	r5, #1
 800e434:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800e436:	2a01      	cmp	r2, #1
 800e438:	ea4f 1404 	mov.w	r4, r4, lsl #4
 800e43c:	ea4f 2606 	mov.w	r6, r6, lsl #8
 800e440:	ea4f 4505 	mov.w	r5, r5, lsl #16
 800e444:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800e448:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 800e44c:	d00c      	beq.n	800e468 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800e44e:	ea43 030c 	orr.w	r3, r3, ip
 800e452:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800e454:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800e456:	4333      	orrs	r3, r6
 800e458:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800e45a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800e45e:	430b      	orrs	r3, r1
 800e460:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800e462:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800e464:	2000      	movs	r0, #0
 800e466:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800e468:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800e46a:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800e46e:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800e472:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800e474:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800e476:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800e47a:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800e47c:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800e47e:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800e480:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800e484:	430a      	orrs	r2, r1
 800e486:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800e488:	60c2      	str	r2, [r0, #12]
 800e48a:	e7eb      	b.n	800e464 <FMC_SDRAM_Timing_Init+0x50>

0800e48c <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800e48c:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800e490:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800e494:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 800e498:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800e49c:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800e49e:	2300      	movs	r3, #0
 800e4a0:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800e4a2:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800e4a4:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800e4a6:	4618      	mov	r0, r3
 800e4a8:	4770      	bx	lr

0800e4aa <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800e4aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800e4ac:	2300      	movs	r3, #0
 800e4ae:	9301      	str	r3, [sp, #4]
{
 800e4b0:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800e4b2:	e9d1 3200 	ldrd	r3, r2, [r1]
 800e4b6:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800e4b8:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800e4ba:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800e4be:	688a      	ldr	r2, [r1, #8]
 800e4c0:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800e4c2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800e4c6:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800e4c8:	9b01      	ldr	r3, [sp, #4]
 800e4ca:	6103      	str	r3, [r0, #16]
{
 800e4cc:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800e4ce:	f7fd f849 	bl	800b564 <HAL_GetTick>
 800e4d2:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800e4d4:	69a3      	ldr	r3, [r4, #24]
 800e4d6:	f013 0320 	ands.w	r3, r3, #32
 800e4da:	d101      	bne.n	800e4e0 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800e4dc:	4618      	mov	r0, r3
 800e4de:	e003      	b.n	800e4e8 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800e4e0:	1c6b      	adds	r3, r5, #1
 800e4e2:	d0f7      	beq.n	800e4d4 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800e4e4:	b915      	cbnz	r5, 800e4ec <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800e4e6:	2003      	movs	r0, #3
}
 800e4e8:	b002      	add	sp, #8
 800e4ea:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800e4ec:	f7fd f83a 	bl	800b564 <HAL_GetTick>
 800e4f0:	1b80      	subs	r0, r0, r6
 800e4f2:	42a8      	cmp	r0, r5
 800e4f4:	d9ee      	bls.n	800e4d4 <FMC_SDRAM_SendCommand+0x2a>
 800e4f6:	e7f6      	b.n	800e4e6 <FMC_SDRAM_SendCommand+0x3c>

0800e4f8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800e4f8:	6943      	ldr	r3, [r0, #20]
 800e4fa:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800e4fe:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800e500:	2000      	movs	r0, #0
 800e502:	4770      	bx	lr

0800e504 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800e504:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800e506:	4b05      	ldr	r3, [pc, #20]	; (800e51c <SysTick_Handler+0x18>)
 800e508:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800e50a:	f001 fe6b 	bl	80101e4 <xTaskGetSchedulerState>
 800e50e:	2801      	cmp	r0, #1
 800e510:	d003      	beq.n	800e51a <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800e512:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800e516:	f000 bbdd 	b.w	800ecd4 <xPortSysTickHandler>
}
 800e51a:	bd08      	pop	{r3, pc}
 800e51c:	e000e010 	.word	0xe000e010

0800e520 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800e520:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800e524:	b92b      	cbnz	r3, 800e532 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800e526:	4b06      	ldr	r3, [pc, #24]	; (800e540 <osKernelInitialize+0x20>)
 800e528:	6818      	ldr	r0, [r3, #0]
 800e52a:	b928      	cbnz	r0, 800e538 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800e52c:	2201      	movs	r2, #1
 800e52e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800e530:	4770      	bx	lr
    stat = osErrorISR;
 800e532:	f06f 0005 	mvn.w	r0, #5
 800e536:	4770      	bx	lr
    } else {
      stat = osError;
 800e538:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800e53c:	4770      	bx	lr
 800e53e:	bf00      	nop
 800e540:	20016e90 	.word	0x20016e90

0800e544 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800e544:	b510      	push	{r4, lr}
 800e546:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e54a:	b95c      	cbnz	r4, 800e564 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800e54c:	4b08      	ldr	r3, [pc, #32]	; (800e570 <osKernelStart+0x2c>)
 800e54e:	681a      	ldr	r2, [r3, #0]
 800e550:	2a01      	cmp	r2, #1
 800e552:	d10a      	bne.n	800e56a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800e554:	4a07      	ldr	r2, [pc, #28]	; (800e574 <osKernelStart+0x30>)
 800e556:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800e558:	2202      	movs	r2, #2
 800e55a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800e55c:	f001 fcde 	bl	800ff1c <vTaskStartScheduler>
      stat = osOK;
 800e560:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800e562:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800e564:	f06f 0005 	mvn.w	r0, #5
 800e568:	e7fb      	b.n	800e562 <osKernelStart+0x1e>
      stat = osError;
 800e56a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800e56e:	e7f8      	b.n	800e562 <osKernelStart+0x1e>
 800e570:	20016e90 	.word	0x20016e90
 800e574:	e000ed00 	.word	0xe000ed00

0800e578 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e578:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e57a:	b087      	sub	sp, #28
 800e57c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800e57e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e580:	460b      	mov	r3, r1
  hTask = NULL;
 800e582:	9205      	str	r2, [sp, #20]
 800e584:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800e588:	b9d2      	cbnz	r2, 800e5c0 <osThreadNew+0x48>
 800e58a:	b1c8      	cbz	r0, 800e5c0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800e58c:	2c00      	cmp	r4, #0
 800e58e:	d02f      	beq.n	800e5f0 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800e590:	69a5      	ldr	r5, [r4, #24]
 800e592:	2d00      	cmp	r5, #0
 800e594:	bf08      	it	eq
 800e596:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e598:	1e69      	subs	r1, r5, #1
 800e59a:	2937      	cmp	r1, #55	; 0x37
 800e59c:	46ac      	mov	ip, r5
 800e59e:	d82b      	bhi.n	800e5f8 <osThreadNew+0x80>
 800e5a0:	6861      	ldr	r1, [r4, #4]
 800e5a2:	07c9      	lsls	r1, r1, #31
 800e5a4:	d428      	bmi.n	800e5f8 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800e5a6:	6966      	ldr	r6, [r4, #20]
 800e5a8:	b16e      	cbz	r6, 800e5c6 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800e5aa:	08b2      	lsrs	r2, r6, #2
 800e5ac:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800e5b0:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e5b2:	b157      	cbz	r7, 800e5ca <osThreadNew+0x52>
 800e5b4:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800e5b8:	d902      	bls.n	800e5c0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e5ba:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e5bc:	b104      	cbz	r4, 800e5c0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e5be:	b9ee      	cbnz	r6, 800e5fc <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800e5c0:	9805      	ldr	r0, [sp, #20]
}
 800e5c2:	b007      	add	sp, #28
 800e5c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800e5c6:	2280      	movs	r2, #128	; 0x80
 800e5c8:	e7f0      	b.n	800e5ac <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800e5ca:	f1be 0f00 	cmp.w	lr, #0
 800e5ce:	d1f7      	bne.n	800e5c0 <osThreadNew+0x48>
      if (mem == 0) {
 800e5d0:	6924      	ldr	r4, [r4, #16]
 800e5d2:	2c00      	cmp	r4, #0
 800e5d4:	d1f4      	bne.n	800e5c0 <osThreadNew+0x48>
 800e5d6:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800e5d8:	a905      	add	r1, sp, #20
 800e5da:	e9cd c100 	strd	ip, r1, [sp]
 800e5de:	b292      	uxth	r2, r2
 800e5e0:	4621      	mov	r1, r4
 800e5e2:	f001 fb15 	bl	800fc10 <xTaskCreate>
 800e5e6:	2801      	cmp	r0, #1
            hTask = NULL;
 800e5e8:	bf1c      	itt	ne
 800e5ea:	2300      	movne	r3, #0
 800e5ec:	9305      	strne	r3, [sp, #20]
 800e5ee:	e7e7      	b.n	800e5c0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800e5f0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800e5f4:	2280      	movs	r2, #128	; 0x80
 800e5f6:	e7ef      	b.n	800e5d8 <osThreadNew+0x60>
        return (NULL);
 800e5f8:	4610      	mov	r0, r2
 800e5fa:	e7e2      	b.n	800e5c2 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800e5fc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800e600:	9500      	str	r5, [sp, #0]
 800e602:	f001 facd 	bl	800fba0 <xTaskCreateStatic>
 800e606:	9005      	str	r0, [sp, #20]
 800e608:	e7da      	b.n	800e5c0 <osThreadNew+0x48>

0800e60a <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800e60a:	b510      	push	{r4, lr}
 800e60c:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e610:	b924      	cbnz	r4, 800e61c <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800e612:	b110      	cbz	r0, 800e61a <osDelay+0x10>
      vTaskDelay(ticks);
 800e614:	f001 fc42 	bl	800fe9c <vTaskDelay>
    stat = osOK;
 800e618:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800e61a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800e61c:	f06f 0005 	mvn.w	r0, #5
 800e620:	e7fb      	b.n	800e61a <osDelay+0x10>

0800e622 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800e622:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e624:	4604      	mov	r4, r0
 800e626:	460e      	mov	r6, r1
 800e628:	4615      	mov	r5, r2
 800e62a:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800e62e:	b11a      	cbz	r2, 800e638 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800e630:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800e632:	4620      	mov	r0, r4
 800e634:	b003      	add	sp, #12
 800e636:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800e638:	2800      	cmp	r0, #0
 800e63a:	d0f9      	beq.n	800e630 <osSemaphoreNew+0xe>
 800e63c:	4288      	cmp	r0, r1
 800e63e:	d3f7      	bcc.n	800e630 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800e640:	b1e5      	cbz	r5, 800e67c <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800e642:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800e646:	b1bb      	cbz	r3, 800e678 <osSemaphoreNew+0x56>
 800e648:	2f4f      	cmp	r7, #79	; 0x4f
 800e64a:	d9f1      	bls.n	800e630 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800e64c:	2801      	cmp	r0, #1
 800e64e:	d12a      	bne.n	800e6a6 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800e650:	2103      	movs	r1, #3
 800e652:	9100      	str	r1, [sp, #0]
 800e654:	4611      	mov	r1, r2
 800e656:	f000 fced 	bl	800f034 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800e65a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800e65c:	2800      	cmp	r0, #0
 800e65e:	d0e7      	beq.n	800e630 <osSemaphoreNew+0xe>
 800e660:	b1de      	cbz	r6, 800e69a <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e662:	2300      	movs	r3, #0
 800e664:	461a      	mov	r2, r3
 800e666:	4619      	mov	r1, r3
 800e668:	f000 fd9a 	bl	800f1a0 <xQueueGenericSend>
 800e66c:	2801      	cmp	r0, #1
 800e66e:	d014      	beq.n	800e69a <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800e670:	4620      	mov	r0, r4
 800e672:	f001 f8db 	bl	800f82c <vQueueDelete>
 800e676:	e7db      	b.n	800e630 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800e678:	2f00      	cmp	r7, #0
 800e67a:	d1d9      	bne.n	800e630 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800e67c:	2c01      	cmp	r4, #1
 800e67e:	d105      	bne.n	800e68c <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800e680:	2203      	movs	r2, #3
 800e682:	2100      	movs	r1, #0
 800e684:	4620      	mov	r0, r4
 800e686:	f000 fd23 	bl	800f0d0 <xQueueGenericCreate>
 800e68a:	e7e6      	b.n	800e65a <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800e68c:	4620      	mov	r0, r4
 800e68e:	4631      	mov	r1, r6
 800e690:	f000 fd67 	bl	800f162 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800e694:	4604      	mov	r4, r0
 800e696:	2800      	cmp	r0, #0
 800e698:	d0ca      	beq.n	800e630 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800e69a:	b955      	cbnz	r5, 800e6b2 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800e69c:	4629      	mov	r1, r5
 800e69e:	4620      	mov	r0, r4
 800e6a0:	f001 f89a 	bl	800f7d8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800e6a4:	e7c5      	b.n	800e632 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800e6a6:	461a      	mov	r2, r3
 800e6a8:	f000 fd39 	bl	800f11e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800e6ac:	4604      	mov	r4, r0
 800e6ae:	2800      	cmp	r0, #0
 800e6b0:	d0be      	beq.n	800e630 <osSemaphoreNew+0xe>
          name = attr->name;
 800e6b2:	682d      	ldr	r5, [r5, #0]
 800e6b4:	e7f2      	b.n	800e69c <osSemaphoreNew+0x7a>
	...

0800e6b8 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800e6b8:	b513      	push	{r0, r1, r4, lr}
 800e6ba:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e6bc:	b1f8      	cbz	r0, 800e6fe <osSemaphoreAcquire+0x46>
 800e6be:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e6c2:	b1a3      	cbz	r3, 800e6ee <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 800e6c4:	b9d9      	cbnz	r1, 800e6fe <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e6c6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e6c8:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e6ca:	f001 f835 	bl	800f738 <xQueueReceiveFromISR>
 800e6ce:	2801      	cmp	r0, #1
 800e6d0:	d112      	bne.n	800e6f8 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e6d2:	9b01      	ldr	r3, [sp, #4]
 800e6d4:	b913      	cbnz	r3, 800e6dc <osSemaphoreAcquire+0x24>
  stat = osOK;
 800e6d6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800e6d8:	b002      	add	sp, #8
 800e6da:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800e6dc:	4b0b      	ldr	r3, [pc, #44]	; (800e70c <osSemaphoreAcquire+0x54>)
 800e6de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6e2:	601a      	str	r2, [r3, #0]
 800e6e4:	f3bf 8f4f 	dsb	sy
 800e6e8:	f3bf 8f6f 	isb	sy
 800e6ec:	e7f3      	b.n	800e6d6 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800e6ee:	f000 ff5f 	bl	800f5b0 <xQueueSemaphoreTake>
 800e6f2:	2801      	cmp	r0, #1
 800e6f4:	d0ef      	beq.n	800e6d6 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800e6f6:	b92c      	cbnz	r4, 800e704 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 800e6f8:	f06f 0002 	mvn.w	r0, #2
 800e6fc:	e7ec      	b.n	800e6d8 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800e6fe:	f06f 0003 	mvn.w	r0, #3
 800e702:	e7e9      	b.n	800e6d8 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800e704:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800e708:	e7e6      	b.n	800e6d8 <osSemaphoreAcquire+0x20>
 800e70a:	bf00      	nop
 800e70c:	e000ed04 	.word	0xe000ed04

0800e710 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800e710:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e712:	b300      	cbz	r0, 800e756 <osSemaphoreRelease+0x46>
 800e714:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e718:	b1a3      	cbz	r3, 800e744 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800e71a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e71c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800e71e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e720:	f000 fe52 	bl	800f3c8 <xQueueGiveFromISR>
 800e724:	2801      	cmp	r0, #1
 800e726:	d113      	bne.n	800e750 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800e728:	9b01      	ldr	r3, [sp, #4]
 800e72a:	b913      	cbnz	r3, 800e732 <osSemaphoreRelease+0x22>
  stat = osOK;
 800e72c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800e72e:	b002      	add	sp, #8
 800e730:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800e732:	4b0a      	ldr	r3, [pc, #40]	; (800e75c <osSemaphoreRelease+0x4c>)
 800e734:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e738:	601a      	str	r2, [r3, #0]
 800e73a:	f3bf 8f4f 	dsb	sy
 800e73e:	f3bf 8f6f 	isb	sy
 800e742:	e7f3      	b.n	800e72c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e744:	461a      	mov	r2, r3
 800e746:	4619      	mov	r1, r3
 800e748:	f000 fd2a 	bl	800f1a0 <xQueueGenericSend>
 800e74c:	2801      	cmp	r0, #1
 800e74e:	d0ed      	beq.n	800e72c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800e750:	f06f 0002 	mvn.w	r0, #2
 800e754:	e7eb      	b.n	800e72e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800e756:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e75a:	e7e8      	b.n	800e72e <osSemaphoreRelease+0x1e>
 800e75c:	e000ed04 	.word	0xe000ed04

0800e760 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800e760:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e762:	4606      	mov	r6, r0
 800e764:	460d      	mov	r5, r1
 800e766:	4614      	mov	r4, r2
 800e768:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e76c:	b11f      	cbz	r7, 800e776 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800e76e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800e770:	4628      	mov	r0, r5
 800e772:	b003      	add	sp, #12
 800e774:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e776:	2800      	cmp	r0, #0
 800e778:	d0f9      	beq.n	800e76e <osMessageQueueNew+0xe>
 800e77a:	2900      	cmp	r1, #0
 800e77c:	d0f7      	beq.n	800e76e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800e77e:	b1da      	cbz	r2, 800e7b8 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e780:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800e784:	b183      	cbz	r3, 800e7a8 <osMessageQueueNew+0x48>
 800e786:	2a4f      	cmp	r2, #79	; 0x4f
 800e788:	d9f1      	bls.n	800e76e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e78a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e78c:	2a00      	cmp	r2, #0
 800e78e:	d0ee      	beq.n	800e76e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e790:	6966      	ldr	r6, [r4, #20]
 800e792:	4345      	muls	r5, r0
 800e794:	42ae      	cmp	r6, r5
 800e796:	d3ea      	bcc.n	800e76e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800e798:	9700      	str	r7, [sp, #0]
 800e79a:	f000 fc4b 	bl	800f034 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800e79e:	4605      	mov	r5, r0
 800e7a0:	2800      	cmp	r0, #0
 800e7a2:	d0e4      	beq.n	800e76e <osMessageQueueNew+0xe>
        name = attr->name;
 800e7a4:	6824      	ldr	r4, [r4, #0]
 800e7a6:	e011      	b.n	800e7cc <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800e7a8:	2a00      	cmp	r2, #0
 800e7aa:	d1e0      	bne.n	800e76e <osMessageQueueNew+0xe>
 800e7ac:	6923      	ldr	r3, [r4, #16]
 800e7ae:	2b00      	cmp	r3, #0
 800e7b0:	d1dd      	bne.n	800e76e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800e7b2:	6963      	ldr	r3, [r4, #20]
 800e7b4:	2b00      	cmp	r3, #0
 800e7b6:	d1da      	bne.n	800e76e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800e7b8:	4629      	mov	r1, r5
 800e7ba:	2200      	movs	r2, #0
 800e7bc:	4630      	mov	r0, r6
 800e7be:	f000 fc87 	bl	800f0d0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800e7c2:	4605      	mov	r5, r0
 800e7c4:	2800      	cmp	r0, #0
 800e7c6:	d0d2      	beq.n	800e76e <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800e7c8:	2c00      	cmp	r4, #0
 800e7ca:	d1eb      	bne.n	800e7a4 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800e7cc:	4621      	mov	r1, r4
 800e7ce:	4628      	mov	r0, r5
 800e7d0:	f001 f802 	bl	800f7d8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800e7d4:	e7cc      	b.n	800e770 <osMessageQueueNew+0x10>
	...

0800e7d8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800e7d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e7da:	461c      	mov	r4, r3
 800e7dc:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e7e0:	b1b6      	cbz	r6, 800e810 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e7e2:	b308      	cbz	r0, 800e828 <osMessageQueuePut+0x50>
 800e7e4:	b301      	cbz	r1, 800e828 <osMessageQueuePut+0x50>
 800e7e6:	b9fb      	cbnz	r3, 800e828 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e7e8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e7ea:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e7ec:	f000 fd8a 	bl	800f304 <xQueueGenericSendFromISR>
 800e7f0:	2801      	cmp	r0, #1
 800e7f2:	d116      	bne.n	800e822 <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e7f4:	9b01      	ldr	r3, [sp, #4]
 800e7f6:	b913      	cbnz	r3, 800e7fe <osMessageQueuePut+0x26>
  stat = osOK;
 800e7f8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800e7fa:	b002      	add	sp, #8
 800e7fc:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800e7fe:	4b0d      	ldr	r3, [pc, #52]	; (800e834 <osMessageQueuePut+0x5c>)
 800e800:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e804:	601a      	str	r2, [r3, #0]
 800e806:	f3bf 8f4f 	dsb	sy
 800e80a:	f3bf 8f6f 	isb	sy
 800e80e:	e7f3      	b.n	800e7f8 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e810:	b150      	cbz	r0, 800e828 <osMessageQueuePut+0x50>
 800e812:	b149      	cbz	r1, 800e828 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e814:	4633      	mov	r3, r6
 800e816:	4622      	mov	r2, r4
 800e818:	f000 fcc2 	bl	800f1a0 <xQueueGenericSend>
 800e81c:	2801      	cmp	r0, #1
 800e81e:	d0eb      	beq.n	800e7f8 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800e820:	b92c      	cbnz	r4, 800e82e <osMessageQueuePut+0x56>
          stat = osErrorResource;
 800e822:	f06f 0002 	mvn.w	r0, #2
 800e826:	e7e8      	b.n	800e7fa <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800e828:	f06f 0003 	mvn.w	r0, #3
 800e82c:	e7e5      	b.n	800e7fa <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800e82e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800e832:	e7e2      	b.n	800e7fa <osMessageQueuePut+0x22>
 800e834:	e000ed04 	.word	0xe000ed04

0800e838 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800e838:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e83a:	461c      	mov	r4, r3
 800e83c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e840:	b1b3      	cbz	r3, 800e870 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e842:	b300      	cbz	r0, 800e886 <osMessageQueueGet+0x4e>
 800e844:	b1f9      	cbz	r1, 800e886 <osMessageQueueGet+0x4e>
 800e846:	b9f4      	cbnz	r4, 800e886 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e848:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e84a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e84c:	f000 ff74 	bl	800f738 <xQueueReceiveFromISR>
 800e850:	2801      	cmp	r0, #1
 800e852:	d115      	bne.n	800e880 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e854:	9b01      	ldr	r3, [sp, #4]
 800e856:	b913      	cbnz	r3, 800e85e <osMessageQueueGet+0x26>
  stat = osOK;
 800e858:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800e85a:	b003      	add	sp, #12
 800e85c:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800e85e:	4b0d      	ldr	r3, [pc, #52]	; (800e894 <osMessageQueueGet+0x5c>)
 800e860:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e864:	601a      	str	r2, [r3, #0]
 800e866:	f3bf 8f4f 	dsb	sy
 800e86a:	f3bf 8f6f 	isb	sy
 800e86e:	e7f3      	b.n	800e858 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e870:	b148      	cbz	r0, 800e886 <osMessageQueueGet+0x4e>
 800e872:	b141      	cbz	r1, 800e886 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e874:	4622      	mov	r2, r4
 800e876:	f000 fdfb 	bl	800f470 <xQueueReceive>
 800e87a:	2801      	cmp	r0, #1
 800e87c:	d0ec      	beq.n	800e858 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800e87e:	b92c      	cbnz	r4, 800e88c <osMessageQueueGet+0x54>
          stat = osErrorResource;
 800e880:	f06f 0002 	mvn.w	r0, #2
 800e884:	e7e9      	b.n	800e85a <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800e886:	f06f 0003 	mvn.w	r0, #3
 800e88a:	e7e6      	b.n	800e85a <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800e88c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800e890:	e7e3      	b.n	800e85a <osMessageQueueGet+0x22>
 800e892:	bf00      	nop
 800e894:	e000ed04 	.word	0xe000ed04

0800e898 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800e898:	4b03      	ldr	r3, [pc, #12]	; (800e8a8 <vApplicationGetIdleTaskMemory+0x10>)
 800e89a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800e89c:	4b03      	ldr	r3, [pc, #12]	; (800e8ac <vApplicationGetIdleTaskMemory+0x14>)
 800e89e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800e8a0:	2380      	movs	r3, #128	; 0x80
 800e8a2:	6013      	str	r3, [r2, #0]
}
 800e8a4:	4770      	bx	lr
 800e8a6:	bf00      	nop
 800e8a8:	20016dd0 	.word	0x20016dd0
 800e8ac:	20016bd0 	.word	0x20016bd0

0800e8b0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800e8b0:	4b03      	ldr	r3, [pc, #12]	; (800e8c0 <vApplicationGetTimerTaskMemory+0x10>)
 800e8b2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800e8b4:	4b03      	ldr	r3, [pc, #12]	; (800e8c4 <vApplicationGetTimerTaskMemory+0x14>)
 800e8b6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800e8b8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e8bc:	6013      	str	r3, [r2, #0]
}
 800e8be:	4770      	bx	lr
 800e8c0:	20017294 	.word	0x20017294
 800e8c4:	20016e94 	.word	0x20016e94

0800e8c8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800e8c8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e8ca:	4b0f      	ldr	r3, [pc, #60]	; (800e908 <prvInsertBlockIntoFreeList+0x40>)
 800e8cc:	461a      	mov	r2, r3
 800e8ce:	681b      	ldr	r3, [r3, #0]
 800e8d0:	4283      	cmp	r3, r0
 800e8d2:	d3fb      	bcc.n	800e8cc <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e8d4:	6854      	ldr	r4, [r2, #4]
 800e8d6:	1911      	adds	r1, r2, r4
 800e8d8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e8da:	bf01      	itttt	eq
 800e8dc:	6841      	ldreq	r1, [r0, #4]
 800e8de:	4610      	moveq	r0, r2
 800e8e0:	1909      	addeq	r1, r1, r4
 800e8e2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e8e4:	6844      	ldr	r4, [r0, #4]
 800e8e6:	1901      	adds	r1, r0, r4
 800e8e8:	428b      	cmp	r3, r1
 800e8ea:	d107      	bne.n	800e8fc <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e8ec:	4907      	ldr	r1, [pc, #28]	; (800e90c <prvInsertBlockIntoFreeList+0x44>)
 800e8ee:	6809      	ldr	r1, [r1, #0]
 800e8f0:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e8f2:	bf1f      	itttt	ne
 800e8f4:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e8f6:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e8f8:	1909      	addne	r1, r1, r4
 800e8fa:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800e8fc:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800e8fe:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e900:	bf18      	it	ne
 800e902:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e904:	bd10      	pop	{r4, pc}
 800e906:	bf00      	nop
 800e908:	2002736c 	.word	0x2002736c
 800e90c:	20017354 	.word	0x20017354

0800e910 <pvPortMalloc>:
{
 800e910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e914:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800e916:	f001 f9a9 	bl	800fc6c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800e91a:	4b3e      	ldr	r3, [pc, #248]	; (800ea14 <pvPortMalloc+0x104>)
 800e91c:	483e      	ldr	r0, [pc, #248]	; (800ea18 <pvPortMalloc+0x108>)
 800e91e:	681a      	ldr	r2, [r3, #0]
 800e920:	469c      	mov	ip, r3
 800e922:	b9d2      	cbnz	r2, 800e95a <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 800e924:	4a3d      	ldr	r2, [pc, #244]	; (800ea1c <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e926:	4b3e      	ldr	r3, [pc, #248]	; (800ea20 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e928:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e92a:	bf1c      	itt	ne
 800e92c:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e92e:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800e932:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e934:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800e936:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 800e938:	4b3a      	ldr	r3, [pc, #232]	; (800ea24 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e93a:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800e93e:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e942:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e944:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 800e948:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e94c:	4b36      	ldr	r3, [pc, #216]	; (800ea28 <pvPortMalloc+0x118>)
 800e94e:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e950:	4b36      	ldr	r3, [pc, #216]	; (800ea2c <pvPortMalloc+0x11c>)
 800e952:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e954:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800e958:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800e95a:	6807      	ldr	r7, [r0, #0]
 800e95c:	4227      	tst	r7, r4
 800e95e:	d153      	bne.n	800ea08 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 800e960:	2c00      	cmp	r4, #0
 800e962:	d044      	beq.n	800e9ee <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 800e964:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800e968:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800e96a:	bf1c      	itt	ne
 800e96c:	f023 0307 	bicne.w	r3, r3, #7
 800e970:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800e972:	2b00      	cmp	r3, #0
 800e974:	d048      	beq.n	800ea08 <pvPortMalloc+0xf8>
 800e976:	4a2d      	ldr	r2, [pc, #180]	; (800ea2c <pvPortMalloc+0x11c>)
 800e978:	6816      	ldr	r6, [r2, #0]
 800e97a:	429e      	cmp	r6, r3
 800e97c:	4690      	mov	r8, r2
 800e97e:	d343      	bcc.n	800ea08 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 800e980:	4a27      	ldr	r2, [pc, #156]	; (800ea20 <pvPortMalloc+0x110>)
 800e982:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800e984:	6869      	ldr	r1, [r5, #4]
 800e986:	4299      	cmp	r1, r3
 800e988:	d201      	bcs.n	800e98e <pvPortMalloc+0x7e>
 800e98a:	6828      	ldr	r0, [r5, #0]
 800e98c:	b9a8      	cbnz	r0, 800e9ba <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 800e98e:	f8dc 0000 	ldr.w	r0, [ip]
 800e992:	42a8      	cmp	r0, r5
 800e994:	d038      	beq.n	800ea08 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e996:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e998:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e99a:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e99c:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e99e:	2910      	cmp	r1, #16
 800e9a0:	d912      	bls.n	800e9c8 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800e9a2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800e9a4:	0742      	lsls	r2, r0, #29
 800e9a6:	d00b      	beq.n	800e9c0 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800e9a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9ac:	f383 8811 	msr	BASEPRI, r3
 800e9b0:	f3bf 8f6f 	isb	sy
 800e9b4:	f3bf 8f4f 	dsb	sy
 800e9b8:	e7fe      	b.n	800e9b8 <pvPortMalloc+0xa8>
 800e9ba:	462a      	mov	r2, r5
 800e9bc:	4605      	mov	r5, r0
 800e9be:	e7e1      	b.n	800e984 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800e9c0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800e9c2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800e9c4:	f7ff ff80 	bl	800e8c8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e9c8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e9ca:	4917      	ldr	r1, [pc, #92]	; (800ea28 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 800e9cc:	4a18      	ldr	r2, [pc, #96]	; (800ea30 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e9ce:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e9d0:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e9d2:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800e9d4:	2300      	movs	r3, #0
 800e9d6:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800e9d8:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e9da:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e9de:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800e9e0:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e9e4:	bf38      	it	cc
 800e9e6:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e9e8:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e9ea:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800e9ec:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800e9ee:	f001 f9e1 	bl	800fdb4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e9f2:	0763      	lsls	r3, r4, #29
 800e9f4:	d00a      	beq.n	800ea0c <pvPortMalloc+0xfc>
 800e9f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9fa:	f383 8811 	msr	BASEPRI, r3
 800e9fe:	f3bf 8f6f 	isb	sy
 800ea02:	f3bf 8f4f 	dsb	sy
 800ea06:	e7fe      	b.n	800ea06 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 800ea08:	2400      	movs	r4, #0
 800ea0a:	e7f0      	b.n	800e9ee <pvPortMalloc+0xde>
}
 800ea0c:	4620      	mov	r0, r4
 800ea0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea12:	bf00      	nop
 800ea14:	20017354 	.word	0x20017354
 800ea18:	20027358 	.word	0x20027358
 800ea1c:	20017358 	.word	0x20017358
 800ea20:	2002736c 	.word	0x2002736c
 800ea24:	2002734f 	.word	0x2002734f
 800ea28:	20027360 	.word	0x20027360
 800ea2c:	2002735c 	.word	0x2002735c
 800ea30:	20027364 	.word	0x20027364

0800ea34 <vPortFree>:
{
 800ea34:	b510      	push	{r4, lr}
	if( pv != NULL )
 800ea36:	4604      	mov	r4, r0
 800ea38:	b390      	cbz	r0, 800eaa0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ea3a:	4a1a      	ldr	r2, [pc, #104]	; (800eaa4 <vPortFree+0x70>)
 800ea3c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ea40:	6812      	ldr	r2, [r2, #0]
 800ea42:	4213      	tst	r3, r2
 800ea44:	d108      	bne.n	800ea58 <vPortFree+0x24>
 800ea46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea4a:	f383 8811 	msr	BASEPRI, r3
 800ea4e:	f3bf 8f6f 	isb	sy
 800ea52:	f3bf 8f4f 	dsb	sy
 800ea56:	e7fe      	b.n	800ea56 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ea58:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ea5c:	b141      	cbz	r1, 800ea70 <vPortFree+0x3c>
 800ea5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea62:	f383 8811 	msr	BASEPRI, r3
 800ea66:	f3bf 8f6f 	isb	sy
 800ea6a:	f3bf 8f4f 	dsb	sy
 800ea6e:	e7fe      	b.n	800ea6e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ea70:	ea23 0302 	bic.w	r3, r3, r2
 800ea74:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800ea78:	f001 f8f8 	bl	800fc6c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ea7c:	4a0a      	ldr	r2, [pc, #40]	; (800eaa8 <vPortFree+0x74>)
 800ea7e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ea82:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800ea84:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ea88:	440b      	add	r3, r1
 800ea8a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800ea8c:	f7ff ff1c 	bl	800e8c8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800ea90:	4a06      	ldr	r2, [pc, #24]	; (800eaac <vPortFree+0x78>)
 800ea92:	6813      	ldr	r3, [r2, #0]
}
 800ea94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800ea98:	3301      	adds	r3, #1
 800ea9a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800ea9c:	f001 b98a 	b.w	800fdb4 <xTaskResumeAll>
}
 800eaa0:	bd10      	pop	{r4, pc}
 800eaa2:	bf00      	nop
 800eaa4:	20027358 	.word	0x20027358
 800eaa8:	2002735c 	.word	0x2002735c
 800eaac:	20027368 	.word	0x20027368

0800eab0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eab0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800eab4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eab8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eabc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eabe:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800eac0:	2300      	movs	r3, #0
 800eac2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800eac4:	4770      	bx	lr

0800eac6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800eac6:	2300      	movs	r3, #0
 800eac8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800eaca:	4770      	bx	lr

0800eacc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800eacc:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800eace:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800ead0:	689a      	ldr	r2, [r3, #8]
 800ead2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ead4:	689a      	ldr	r2, [r3, #8]
 800ead6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800ead8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800eada:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800eadc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800eade:	3301      	adds	r3, #1
 800eae0:	6003      	str	r3, [r0, #0]
}
 800eae2:	4770      	bx	lr

0800eae4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800eae4:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800eae6:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800eae8:	1c63      	adds	r3, r4, #1
 800eaea:	d10a      	bne.n	800eb02 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800eaec:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800eaee:	685a      	ldr	r2, [r3, #4]
 800eaf0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800eaf2:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800eaf4:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800eaf6:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800eaf8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800eafa:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800eafc:	3301      	adds	r3, #1
 800eafe:	6003      	str	r3, [r0, #0]
}
 800eb00:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800eb02:	f100 0208 	add.w	r2, r0, #8
 800eb06:	4613      	mov	r3, r2
 800eb08:	6852      	ldr	r2, [r2, #4]
 800eb0a:	6815      	ldr	r5, [r2, #0]
 800eb0c:	42a5      	cmp	r5, r4
 800eb0e:	d9fa      	bls.n	800eb06 <vListInsert+0x22>
 800eb10:	e7ed      	b.n	800eaee <vListInsert+0xa>

0800eb12 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800eb12:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800eb16:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800eb18:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800eb1a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800eb1c:	6859      	ldr	r1, [r3, #4]
 800eb1e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800eb20:	bf08      	it	eq
 800eb22:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800eb24:	2200      	movs	r2, #0
 800eb26:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800eb28:	681a      	ldr	r2, [r3, #0]
 800eb2a:	3a01      	subs	r2, #1
 800eb2c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800eb2e:	6818      	ldr	r0, [r3, #0]
}
 800eb30:	4770      	bx	lr
	...

0800eb34 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800eb34:	4808      	ldr	r0, [pc, #32]	; (800eb58 <prvPortStartFirstTask+0x24>)
 800eb36:	6800      	ldr	r0, [r0, #0]
 800eb38:	6800      	ldr	r0, [r0, #0]
 800eb3a:	f380 8808 	msr	MSP, r0
 800eb3e:	f04f 0000 	mov.w	r0, #0
 800eb42:	f380 8814 	msr	CONTROL, r0
 800eb46:	b662      	cpsie	i
 800eb48:	b661      	cpsie	f
 800eb4a:	f3bf 8f4f 	dsb	sy
 800eb4e:	f3bf 8f6f 	isb	sy
 800eb52:	df00      	svc	0
 800eb54:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800eb56:	0000      	.short	0x0000
 800eb58:	e000ed08 	.word	0xe000ed08

0800eb5c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800eb5c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800eb6c <vPortEnableVFP+0x10>
 800eb60:	6801      	ldr	r1, [r0, #0]
 800eb62:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800eb66:	6001      	str	r1, [r0, #0]
 800eb68:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800eb6a:	0000      	.short	0x0000
 800eb6c:	e000ed88 	.word	0xe000ed88

0800eb70 <prvTaskExitError>:
{
 800eb70:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800eb72:	2300      	movs	r3, #0
 800eb74:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800eb76:	4b0d      	ldr	r3, [pc, #52]	; (800ebac <prvTaskExitError+0x3c>)
 800eb78:	681b      	ldr	r3, [r3, #0]
 800eb7a:	3301      	adds	r3, #1
 800eb7c:	d008      	beq.n	800eb90 <prvTaskExitError+0x20>
 800eb7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb82:	f383 8811 	msr	BASEPRI, r3
 800eb86:	f3bf 8f6f 	isb	sy
 800eb8a:	f3bf 8f4f 	dsb	sy
 800eb8e:	e7fe      	b.n	800eb8e <prvTaskExitError+0x1e>
 800eb90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb94:	f383 8811 	msr	BASEPRI, r3
 800eb98:	f3bf 8f6f 	isb	sy
 800eb9c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800eba0:	9b01      	ldr	r3, [sp, #4]
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	d0fc      	beq.n	800eba0 <prvTaskExitError+0x30>
}
 800eba6:	b002      	add	sp, #8
 800eba8:	4770      	bx	lr
 800ebaa:	bf00      	nop
 800ebac:	2000005c 	.word	0x2000005c

0800ebb0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ebb0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800ebb4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ebb8:	4b07      	ldr	r3, [pc, #28]	; (800ebd8 <pxPortInitialiseStack+0x28>)
 800ebba:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ebbe:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ebc2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ebc6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800ebca:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ebce:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800ebd2:	3844      	subs	r0, #68	; 0x44
 800ebd4:	4770      	bx	lr
 800ebd6:	bf00      	nop
 800ebd8:	0800eb71 	.word	0x0800eb71
 800ebdc:	00000000 	.word	0x00000000

0800ebe0 <SVC_Handler>:
	__asm volatile (
 800ebe0:	4b07      	ldr	r3, [pc, #28]	; (800ec00 <pxCurrentTCBConst2>)
 800ebe2:	6819      	ldr	r1, [r3, #0]
 800ebe4:	6808      	ldr	r0, [r1, #0]
 800ebe6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebea:	f380 8809 	msr	PSP, r0
 800ebee:	f3bf 8f6f 	isb	sy
 800ebf2:	f04f 0000 	mov.w	r0, #0
 800ebf6:	f380 8811 	msr	BASEPRI, r0
 800ebfa:	4770      	bx	lr
 800ebfc:	f3af 8000 	nop.w

0800ec00 <pxCurrentTCBConst2>:
 800ec00:	2002737c 	.word	0x2002737c

0800ec04 <vPortEnterCritical>:
 800ec04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec08:	f383 8811 	msr	BASEPRI, r3
 800ec0c:	f3bf 8f6f 	isb	sy
 800ec10:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800ec14:	4a0a      	ldr	r2, [pc, #40]	; (800ec40 <vPortEnterCritical+0x3c>)
 800ec16:	6813      	ldr	r3, [r2, #0]
 800ec18:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800ec1a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800ec1c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800ec1e:	d10d      	bne.n	800ec3c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800ec20:	4b08      	ldr	r3, [pc, #32]	; (800ec44 <vPortEnterCritical+0x40>)
 800ec22:	681b      	ldr	r3, [r3, #0]
 800ec24:	f013 0fff 	tst.w	r3, #255	; 0xff
 800ec28:	d008      	beq.n	800ec3c <vPortEnterCritical+0x38>
 800ec2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec2e:	f383 8811 	msr	BASEPRI, r3
 800ec32:	f3bf 8f6f 	isb	sy
 800ec36:	f3bf 8f4f 	dsb	sy
 800ec3a:	e7fe      	b.n	800ec3a <vPortEnterCritical+0x36>
}
 800ec3c:	4770      	bx	lr
 800ec3e:	bf00      	nop
 800ec40:	2000005c 	.word	0x2000005c
 800ec44:	e000ed04 	.word	0xe000ed04

0800ec48 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800ec48:	4a08      	ldr	r2, [pc, #32]	; (800ec6c <vPortExitCritical+0x24>)
 800ec4a:	6813      	ldr	r3, [r2, #0]
 800ec4c:	b943      	cbnz	r3, 800ec60 <vPortExitCritical+0x18>
 800ec4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec52:	f383 8811 	msr	BASEPRI, r3
 800ec56:	f3bf 8f6f 	isb	sy
 800ec5a:	f3bf 8f4f 	dsb	sy
 800ec5e:	e7fe      	b.n	800ec5e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800ec60:	3b01      	subs	r3, #1
 800ec62:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800ec64:	b90b      	cbnz	r3, 800ec6a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800ec66:	f383 8811 	msr	BASEPRI, r3
}
 800ec6a:	4770      	bx	lr
 800ec6c:	2000005c 	.word	0x2000005c

0800ec70 <PendSV_Handler>:
	__asm volatile
 800ec70:	f3ef 8009 	mrs	r0, PSP
 800ec74:	f3bf 8f6f 	isb	sy
 800ec78:	4b15      	ldr	r3, [pc, #84]	; (800ecd0 <pxCurrentTCBConst>)
 800ec7a:	681a      	ldr	r2, [r3, #0]
 800ec7c:	f01e 0f10 	tst.w	lr, #16
 800ec80:	bf08      	it	eq
 800ec82:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800ec86:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec8a:	6010      	str	r0, [r2, #0]
 800ec8c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800ec90:	f04f 0050 	mov.w	r0, #80	; 0x50
 800ec94:	f380 8811 	msr	BASEPRI, r0
 800ec98:	f3bf 8f4f 	dsb	sy
 800ec9c:	f3bf 8f6f 	isb	sy
 800eca0:	f001 f98c 	bl	800ffbc <vTaskSwitchContext>
 800eca4:	f04f 0000 	mov.w	r0, #0
 800eca8:	f380 8811 	msr	BASEPRI, r0
 800ecac:	bc09      	pop	{r0, r3}
 800ecae:	6819      	ldr	r1, [r3, #0]
 800ecb0:	6808      	ldr	r0, [r1, #0]
 800ecb2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecb6:	f01e 0f10 	tst.w	lr, #16
 800ecba:	bf08      	it	eq
 800ecbc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ecc0:	f380 8809 	msr	PSP, r0
 800ecc4:	f3bf 8f6f 	isb	sy
 800ecc8:	4770      	bx	lr
 800ecca:	bf00      	nop
 800eccc:	f3af 8000 	nop.w

0800ecd0 <pxCurrentTCBConst>:
 800ecd0:	2002737c 	.word	0x2002737c

0800ecd4 <xPortSysTickHandler>:
{
 800ecd4:	b508      	push	{r3, lr}
	__asm volatile
 800ecd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecda:	f383 8811 	msr	BASEPRI, r3
 800ecde:	f3bf 8f6f 	isb	sy
 800ece2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800ece6:	f000 ffcf 	bl	800fc88 <xTaskIncrementTick>
 800ecea:	b118      	cbz	r0, 800ecf4 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ecec:	4b03      	ldr	r3, [pc, #12]	; (800ecfc <xPortSysTickHandler+0x28>)
 800ecee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ecf2:	601a      	str	r2, [r3, #0]
	__asm volatile
 800ecf4:	2300      	movs	r3, #0
 800ecf6:	f383 8811 	msr	BASEPRI, r3
}
 800ecfa:	bd08      	pop	{r3, pc}
 800ecfc:	e000ed04 	.word	0xe000ed04

0800ed00 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ed00:	4a08      	ldr	r2, [pc, #32]	; (800ed24 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ed02:	4909      	ldr	r1, [pc, #36]	; (800ed28 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ed04:	2300      	movs	r3, #0
 800ed06:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ed08:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ed0a:	4b08      	ldr	r3, [pc, #32]	; (800ed2c <vPortSetupTimerInterrupt+0x2c>)
 800ed0c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ed10:	681b      	ldr	r3, [r3, #0]
 800ed12:	fbb3 f3f1 	udiv	r3, r3, r1
 800ed16:	4906      	ldr	r1, [pc, #24]	; (800ed30 <vPortSetupTimerInterrupt+0x30>)
 800ed18:	3b01      	subs	r3, #1
 800ed1a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ed1c:	2307      	movs	r3, #7
 800ed1e:	6013      	str	r3, [r2, #0]
}
 800ed20:	4770      	bx	lr
 800ed22:	bf00      	nop
 800ed24:	e000e010 	.word	0xe000e010
 800ed28:	e000e018 	.word	0xe000e018
 800ed2c:	20000050 	.word	0x20000050
 800ed30:	e000e014 	.word	0xe000e014

0800ed34 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ed34:	4b38      	ldr	r3, [pc, #224]	; (800ee18 <xPortStartScheduler+0xe4>)
 800ed36:	4a39      	ldr	r2, [pc, #228]	; (800ee1c <xPortStartScheduler+0xe8>)
{
 800ed38:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ed3a:	6819      	ldr	r1, [r3, #0]
 800ed3c:	4291      	cmp	r1, r2
 800ed3e:	d108      	bne.n	800ed52 <xPortStartScheduler+0x1e>
	__asm volatile
 800ed40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed44:	f383 8811 	msr	BASEPRI, r3
 800ed48:	f3bf 8f6f 	isb	sy
 800ed4c:	f3bf 8f4f 	dsb	sy
 800ed50:	e7fe      	b.n	800ed50 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800ed52:	681a      	ldr	r2, [r3, #0]
 800ed54:	4b32      	ldr	r3, [pc, #200]	; (800ee20 <xPortStartScheduler+0xec>)
 800ed56:	429a      	cmp	r2, r3
 800ed58:	d108      	bne.n	800ed6c <xPortStartScheduler+0x38>
 800ed5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed5e:	f383 8811 	msr	BASEPRI, r3
 800ed62:	f3bf 8f6f 	isb	sy
 800ed66:	f3bf 8f4f 	dsb	sy
 800ed6a:	e7fe      	b.n	800ed6a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ed6c:	4b2d      	ldr	r3, [pc, #180]	; (800ee24 <xPortStartScheduler+0xf0>)
 800ed6e:	781a      	ldrb	r2, [r3, #0]
 800ed70:	b2d2      	uxtb	r2, r2
 800ed72:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800ed74:	22ff      	movs	r2, #255	; 0xff
 800ed76:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ed78:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ed7a:	4a2b      	ldr	r2, [pc, #172]	; (800ee28 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ed7c:	b2db      	uxtb	r3, r3
 800ed7e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ed82:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800ed86:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800ed8a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ed8c:	4a27      	ldr	r2, [pc, #156]	; (800ee2c <xPortStartScheduler+0xf8>)
 800ed8e:	2307      	movs	r3, #7
 800ed90:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ed92:	2100      	movs	r1, #0
 800ed94:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800ed98:	0600      	lsls	r0, r0, #24
 800ed9a:	f103 34ff 	add.w	r4, r3, #4294967295
 800ed9e:	d40c      	bmi.n	800edba <xPortStartScheduler+0x86>
 800eda0:	b111      	cbz	r1, 800eda8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800eda2:	2b03      	cmp	r3, #3
 800eda4:	6013      	str	r3, [r2, #0]
 800eda6:	d011      	beq.n	800edcc <xPortStartScheduler+0x98>
 800eda8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edac:	f383 8811 	msr	BASEPRI, r3
 800edb0:	f3bf 8f6f 	isb	sy
 800edb4:	f3bf 8f4f 	dsb	sy
 800edb8:	e7fe      	b.n	800edb8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800edba:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800edbe:	005b      	lsls	r3, r3, #1
 800edc0:	b2db      	uxtb	r3, r3
 800edc2:	f88d 3003 	strb.w	r3, [sp, #3]
 800edc6:	2101      	movs	r1, #1
 800edc8:	4623      	mov	r3, r4
 800edca:	e7e3      	b.n	800ed94 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800edcc:	f44f 7340 	mov.w	r3, #768	; 0x300
 800edd0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800edd2:	9b01      	ldr	r3, [sp, #4]
 800edd4:	4a13      	ldr	r2, [pc, #76]	; (800ee24 <xPortStartScheduler+0xf0>)
 800edd6:	b2db      	uxtb	r3, r3
 800edd8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800edda:	4b15      	ldr	r3, [pc, #84]	; (800ee30 <xPortStartScheduler+0xfc>)
 800eddc:	681a      	ldr	r2, [r3, #0]
 800edde:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800ede2:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800ede4:	681a      	ldr	r2, [r3, #0]
 800ede6:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800edea:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800edec:	f7ff ff88 	bl	800ed00 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800edf0:	4b10      	ldr	r3, [pc, #64]	; (800ee34 <xPortStartScheduler+0x100>)
 800edf2:	2400      	movs	r4, #0
 800edf4:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800edf6:	f7ff feb1 	bl	800eb5c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800edfa:	4a0f      	ldr	r2, [pc, #60]	; (800ee38 <xPortStartScheduler+0x104>)
 800edfc:	6813      	ldr	r3, [r2, #0]
 800edfe:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ee02:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 800ee04:	f7ff fe96 	bl	800eb34 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800ee08:	f001 f8d8 	bl	800ffbc <vTaskSwitchContext>
	prvTaskExitError();
 800ee0c:	f7ff feb0 	bl	800eb70 <prvTaskExitError>
}
 800ee10:	4620      	mov	r0, r4
 800ee12:	b002      	add	sp, #8
 800ee14:	bd10      	pop	{r4, pc}
 800ee16:	bf00      	nop
 800ee18:	e000ed00 	.word	0xe000ed00
 800ee1c:	410fc271 	.word	0x410fc271
 800ee20:	410fc270 	.word	0x410fc270
 800ee24:	e000e400 	.word	0xe000e400
 800ee28:	20027374 	.word	0x20027374
 800ee2c:	20027378 	.word	0x20027378
 800ee30:	e000ed20 	.word	0xe000ed20
 800ee34:	2000005c 	.word	0x2000005c
 800ee38:	e000ef34 	.word	0xe000ef34

0800ee3c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800ee3c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800ee40:	2b0f      	cmp	r3, #15
 800ee42:	d90e      	bls.n	800ee62 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800ee44:	4a10      	ldr	r2, [pc, #64]	; (800ee88 <vPortValidateInterruptPriority+0x4c>)
 800ee46:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800ee48:	4a10      	ldr	r2, [pc, #64]	; (800ee8c <vPortValidateInterruptPriority+0x50>)
 800ee4a:	7812      	ldrb	r2, [r2, #0]
 800ee4c:	429a      	cmp	r2, r3
 800ee4e:	d908      	bls.n	800ee62 <vPortValidateInterruptPriority+0x26>
 800ee50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee54:	f383 8811 	msr	BASEPRI, r3
 800ee58:	f3bf 8f6f 	isb	sy
 800ee5c:	f3bf 8f4f 	dsb	sy
 800ee60:	e7fe      	b.n	800ee60 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800ee62:	4b0b      	ldr	r3, [pc, #44]	; (800ee90 <vPortValidateInterruptPriority+0x54>)
 800ee64:	4a0b      	ldr	r2, [pc, #44]	; (800ee94 <vPortValidateInterruptPriority+0x58>)
 800ee66:	681b      	ldr	r3, [r3, #0]
 800ee68:	6812      	ldr	r2, [r2, #0]
 800ee6a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ee6e:	4293      	cmp	r3, r2
 800ee70:	d908      	bls.n	800ee84 <vPortValidateInterruptPriority+0x48>
 800ee72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee76:	f383 8811 	msr	BASEPRI, r3
 800ee7a:	f3bf 8f6f 	isb	sy
 800ee7e:	f3bf 8f4f 	dsb	sy
 800ee82:	e7fe      	b.n	800ee82 <vPortValidateInterruptPriority+0x46>
	}
 800ee84:	4770      	bx	lr
 800ee86:	bf00      	nop
 800ee88:	e000e3f0 	.word	0xe000e3f0
 800ee8c:	20027374 	.word	0x20027374
 800ee90:	e000ed0c 	.word	0xe000ed0c
 800ee94:	20027378 	.word	0x20027378

0800ee98 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800ee98:	b510      	push	{r4, lr}
 800ee9a:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ee9c:	f7ff feb2 	bl	800ec04 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eea0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800eea2:	f7ff fed1 	bl	800ec48 <vPortExitCritical>

	return xReturn;
}
 800eea6:	fab4 f084 	clz	r0, r4
 800eeaa:	0940      	lsrs	r0, r0, #5
 800eeac:	bd10      	pop	{r4, pc}

0800eeae <prvCopyDataToQueue>:
{
 800eeae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eeb0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800eeb2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eeb4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800eeb6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800eeb8:	b952      	cbnz	r2, 800eed0 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eeba:	6807      	ldr	r7, [r0, #0]
 800eebc:	bb47      	cbnz	r7, 800ef10 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800eebe:	6880      	ldr	r0, [r0, #8]
 800eec0:	f001 f9e2 	bl	8010288 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800eec4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800eec6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800eec8:	3601      	adds	r6, #1
 800eeca:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800eecc:	4628      	mov	r0, r5
 800eece:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800eed0:	b965      	cbnz	r5, 800eeec <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eed2:	6840      	ldr	r0, [r0, #4]
 800eed4:	f016 fe14 	bl	8025b00 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eed8:	6863      	ldr	r3, [r4, #4]
 800eeda:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eedc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eede:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eee0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eee2:	4293      	cmp	r3, r2
 800eee4:	d3f0      	bcc.n	800eec8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800eee6:	6823      	ldr	r3, [r4, #0]
 800eee8:	6063      	str	r3, [r4, #4]
 800eeea:	e7ed      	b.n	800eec8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800eeec:	68c0      	ldr	r0, [r0, #12]
 800eeee:	f016 fe07 	bl	8025b00 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800eef2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eef4:	68e3      	ldr	r3, [r4, #12]
 800eef6:	4251      	negs	r1, r2
 800eef8:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eefa:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800eefc:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eefe:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800ef00:	bf3e      	ittt	cc
 800ef02:	68a3      	ldrcc	r3, [r4, #8]
 800ef04:	185b      	addcc	r3, r3, r1
 800ef06:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800ef08:	2d02      	cmp	r5, #2
 800ef0a:	d101      	bne.n	800ef10 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef0c:	b116      	cbz	r6, 800ef14 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800ef0e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800ef10:	2500      	movs	r5, #0
 800ef12:	e7d9      	b.n	800eec8 <prvCopyDataToQueue+0x1a>
 800ef14:	4635      	mov	r5, r6
 800ef16:	e7d7      	b.n	800eec8 <prvCopyDataToQueue+0x1a>

0800ef18 <prvCopyDataFromQueue>:
{
 800ef18:	4603      	mov	r3, r0
 800ef1a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef1c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800ef1e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef20:	b16a      	cbz	r2, 800ef3e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef22:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef24:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef26:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef28:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ef2a:	bf28      	it	cs
 800ef2c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef2e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ef30:	bf28      	it	cs
 800ef32:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ef34:	68d9      	ldr	r1, [r3, #12]
}
 800ef36:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ef3a:	f016 bde1 	b.w	8025b00 <memcpy>
}
 800ef3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ef42:	4770      	bx	lr

0800ef44 <prvUnlockQueue>:
{
 800ef44:	b570      	push	{r4, r5, r6, lr}
 800ef46:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800ef48:	f7ff fe5c 	bl	800ec04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef4c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef50:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800ef54:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef56:	2d00      	cmp	r5, #0
 800ef58:	dc14      	bgt.n	800ef84 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef5a:	23ff      	movs	r3, #255	; 0xff
 800ef5c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef60:	f7ff fe72 	bl	800ec48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef64:	f7ff fe4e 	bl	800ec04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef68:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef6c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800ef70:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef72:	2d00      	cmp	r5, #0
 800ef74:	dc12      	bgt.n	800ef9c <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef76:	23ff      	movs	r3, #255	; 0xff
 800ef78:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800ef7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ef80:	f7ff be62 	b.w	800ec48 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef84:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ef86:	2b00      	cmp	r3, #0
 800ef88:	d0e7      	beq.n	800ef5a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef8a:	4630      	mov	r0, r6
 800ef8c:	f001 f898 	bl	80100c0 <xTaskRemoveFromEventList>
 800ef90:	b108      	cbz	r0, 800ef96 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800ef92:	f001 f921 	bl	80101d8 <vTaskMissedYield>
			--cTxLock;
 800ef96:	3d01      	subs	r5, #1
 800ef98:	b26d      	sxtb	r5, r5
 800ef9a:	e7dc      	b.n	800ef56 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef9c:	6923      	ldr	r3, [r4, #16]
 800ef9e:	2b00      	cmp	r3, #0
 800efa0:	d0e9      	beq.n	800ef76 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efa2:	4630      	mov	r0, r6
 800efa4:	f001 f88c 	bl	80100c0 <xTaskRemoveFromEventList>
 800efa8:	b108      	cbz	r0, 800efae <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800efaa:	f001 f915 	bl	80101d8 <vTaskMissedYield>
				--cRxLock;
 800efae:	3d01      	subs	r5, #1
 800efb0:	b26d      	sxtb	r5, r5
 800efb2:	e7de      	b.n	800ef72 <prvUnlockQueue+0x2e>

0800efb4 <xQueueGenericReset>:
{
 800efb4:	b538      	push	{r3, r4, r5, lr}
 800efb6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800efb8:	4604      	mov	r4, r0
 800efba:	b940      	cbnz	r0, 800efce <xQueueGenericReset+0x1a>
 800efbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efc0:	f383 8811 	msr	BASEPRI, r3
 800efc4:	f3bf 8f6f 	isb	sy
 800efc8:	f3bf 8f4f 	dsb	sy
 800efcc:	e7fe      	b.n	800efcc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800efce:	f7ff fe19 	bl	800ec04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efd2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800efd6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800efd8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efda:	434b      	muls	r3, r1
 800efdc:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efde:	1a5b      	subs	r3, r3, r1
 800efe0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efe2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efe4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800efe6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800efe8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800efea:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800efec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800eff0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800eff4:	b995      	cbnz	r5, 800f01c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eff6:	6923      	ldr	r3, [r4, #16]
 800eff8:	b163      	cbz	r3, 800f014 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800effa:	f104 0010 	add.w	r0, r4, #16
 800effe:	f001 f85f 	bl	80100c0 <xTaskRemoveFromEventList>
 800f002:	b138      	cbz	r0, 800f014 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 800f004:	4b0a      	ldr	r3, [pc, #40]	; (800f030 <xQueueGenericReset+0x7c>)
 800f006:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f00a:	601a      	str	r2, [r3, #0]
 800f00c:	f3bf 8f4f 	dsb	sy
 800f010:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800f014:	f7ff fe18 	bl	800ec48 <vPortExitCritical>
}
 800f018:	2001      	movs	r0, #1
 800f01a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800f01c:	f104 0010 	add.w	r0, r4, #16
 800f020:	f7ff fd46 	bl	800eab0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800f024:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f028:	f7ff fd42 	bl	800eab0 <vListInitialise>
 800f02c:	e7f2      	b.n	800f014 <xQueueGenericReset+0x60>
 800f02e:	bf00      	nop
 800f030:	e000ed04 	.word	0xe000ed04

0800f034 <xQueueGenericCreateStatic>:
	{
 800f034:	b513      	push	{r0, r1, r4, lr}
 800f036:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800f038:	b940      	cbnz	r0, 800f04c <xQueueGenericCreateStatic+0x18>
 800f03a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f03e:	f383 8811 	msr	BASEPRI, r3
 800f042:	f3bf 8f6f 	isb	sy
 800f046:	f3bf 8f4f 	dsb	sy
 800f04a:	e7fe      	b.n	800f04a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800f04c:	b943      	cbnz	r3, 800f060 <xQueueGenericCreateStatic+0x2c>
 800f04e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f052:	f383 8811 	msr	BASEPRI, r3
 800f056:	f3bf 8f6f 	isb	sy
 800f05a:	f3bf 8f4f 	dsb	sy
 800f05e:	e7fe      	b.n	800f05e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800f060:	b14a      	cbz	r2, 800f076 <xQueueGenericCreateStatic+0x42>
 800f062:	b991      	cbnz	r1, 800f08a <xQueueGenericCreateStatic+0x56>
 800f064:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f068:	f383 8811 	msr	BASEPRI, r3
 800f06c:	f3bf 8f6f 	isb	sy
 800f070:	f3bf 8f4f 	dsb	sy
 800f074:	e7fe      	b.n	800f074 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800f076:	b141      	cbz	r1, 800f08a <xQueueGenericCreateStatic+0x56>
 800f078:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f07c:	f383 8811 	msr	BASEPRI, r3
 800f080:	f3bf 8f6f 	isb	sy
 800f084:	f3bf 8f4f 	dsb	sy
 800f088:	e7fe      	b.n	800f088 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800f08a:	2350      	movs	r3, #80	; 0x50
 800f08c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800f08e:	9b01      	ldr	r3, [sp, #4]
 800f090:	2b50      	cmp	r3, #80	; 0x50
 800f092:	d008      	beq.n	800f0a6 <xQueueGenericCreateStatic+0x72>
 800f094:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f098:	f383 8811 	msr	BASEPRI, r3
 800f09c:	f3bf 8f6f 	isb	sy
 800f0a0:	f3bf 8f4f 	dsb	sy
 800f0a4:	e7fe      	b.n	800f0a4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800f0a6:	2900      	cmp	r1, #0
 800f0a8:	bf08      	it	eq
 800f0aa:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800f0ac:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f0ae:	6022      	str	r2, [r4, #0]
 800f0b0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800f0b2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f0b6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800f0ba:	4619      	mov	r1, r3
 800f0bc:	4620      	mov	r0, r4
 800f0be:	f7ff ff79 	bl	800efb4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800f0c2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f0c6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800f0ca:	4620      	mov	r0, r4
 800f0cc:	b002      	add	sp, #8
 800f0ce:	bd10      	pop	{r4, pc}

0800f0d0 <xQueueGenericCreate>:
	{
 800f0d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f0d2:	460d      	mov	r5, r1
 800f0d4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800f0d6:	4606      	mov	r6, r0
 800f0d8:	b940      	cbnz	r0, 800f0ec <xQueueGenericCreate+0x1c>
 800f0da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0de:	f383 8811 	msr	BASEPRI, r3
 800f0e2:	f3bf 8f6f 	isb	sy
 800f0e6:	f3bf 8f4f 	dsb	sy
 800f0ea:	e7fe      	b.n	800f0ea <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f0ec:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800f0ee:	3050      	adds	r0, #80	; 0x50
 800f0f0:	f7ff fc0e 	bl	800e910 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800f0f4:	4604      	mov	r4, r0
 800f0f6:	b170      	cbz	r0, 800f116 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800f0f8:	2300      	movs	r3, #0
 800f0fa:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800f0fe:	b165      	cbz	r5, 800f11a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f100:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800f104:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800f108:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800f10a:	2101      	movs	r1, #1
 800f10c:	4620      	mov	r0, r4
 800f10e:	f7ff ff51 	bl	800efb4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800f112:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800f116:	4620      	mov	r0, r4
 800f118:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f11a:	4603      	mov	r3, r0
 800f11c:	e7f2      	b.n	800f104 <xQueueGenericCreate+0x34>

0800f11e <xQueueCreateCountingSemaphoreStatic>:
	{
 800f11e:	b513      	push	{r0, r1, r4, lr}
 800f120:	4613      	mov	r3, r2
 800f122:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800f124:	b940      	cbnz	r0, 800f138 <xQueueCreateCountingSemaphoreStatic+0x1a>
 800f126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f12a:	f383 8811 	msr	BASEPRI, r3
 800f12e:	f3bf 8f6f 	isb	sy
 800f132:	f3bf 8f4f 	dsb	sy
 800f136:	e7fe      	b.n	800f136 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800f138:	4288      	cmp	r0, r1
 800f13a:	d208      	bcs.n	800f14e <xQueueCreateCountingSemaphoreStatic+0x30>
 800f13c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f140:	f383 8811 	msr	BASEPRI, r3
 800f144:	f3bf 8f6f 	isb	sy
 800f148:	f3bf 8f4f 	dsb	sy
 800f14c:	e7fe      	b.n	800f14c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800f14e:	2202      	movs	r2, #2
 800f150:	9200      	str	r2, [sp, #0]
 800f152:	2200      	movs	r2, #0
 800f154:	4611      	mov	r1, r2
 800f156:	f7ff ff6d 	bl	800f034 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800f15a:	b100      	cbz	r0, 800f15e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800f15c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800f15e:	b002      	add	sp, #8
 800f160:	bd10      	pop	{r4, pc}

0800f162 <xQueueCreateCountingSemaphore>:
	{
 800f162:	b510      	push	{r4, lr}
 800f164:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800f166:	b940      	cbnz	r0, 800f17a <xQueueCreateCountingSemaphore+0x18>
 800f168:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f16c:	f383 8811 	msr	BASEPRI, r3
 800f170:	f3bf 8f6f 	isb	sy
 800f174:	f3bf 8f4f 	dsb	sy
 800f178:	e7fe      	b.n	800f178 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800f17a:	4288      	cmp	r0, r1
 800f17c:	d208      	bcs.n	800f190 <xQueueCreateCountingSemaphore+0x2e>
 800f17e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f182:	f383 8811 	msr	BASEPRI, r3
 800f186:	f3bf 8f6f 	isb	sy
 800f18a:	f3bf 8f4f 	dsb	sy
 800f18e:	e7fe      	b.n	800f18e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800f190:	2202      	movs	r2, #2
 800f192:	2100      	movs	r1, #0
 800f194:	f7ff ff9c 	bl	800f0d0 <xQueueGenericCreate>
		if( xHandle != NULL )
 800f198:	b100      	cbz	r0, 800f19c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800f19a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800f19c:	bd10      	pop	{r4, pc}
	...

0800f1a0 <xQueueGenericSend>:
{
 800f1a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f1a4:	4688      	mov	r8, r1
 800f1a6:	9201      	str	r2, [sp, #4]
 800f1a8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800f1aa:	4604      	mov	r4, r0
 800f1ac:	b940      	cbnz	r0, 800f1c0 <xQueueGenericSend+0x20>
 800f1ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1b2:	f383 8811 	msr	BASEPRI, r3
 800f1b6:	f3bf 8f6f 	isb	sy
 800f1ba:	f3bf 8f4f 	dsb	sy
 800f1be:	e7fe      	b.n	800f1be <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f1c0:	b951      	cbnz	r1, 800f1d8 <xQueueGenericSend+0x38>
 800f1c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f1c4:	b143      	cbz	r3, 800f1d8 <xQueueGenericSend+0x38>
 800f1c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1ca:	f383 8811 	msr	BASEPRI, r3
 800f1ce:	f3bf 8f6f 	isb	sy
 800f1d2:	f3bf 8f4f 	dsb	sy
 800f1d6:	e7fe      	b.n	800f1d6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800f1d8:	2f02      	cmp	r7, #2
 800f1da:	d10b      	bne.n	800f1f4 <xQueueGenericSend+0x54>
 800f1dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f1de:	2b01      	cmp	r3, #1
 800f1e0:	d008      	beq.n	800f1f4 <xQueueGenericSend+0x54>
 800f1e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1e6:	f383 8811 	msr	BASEPRI, r3
 800f1ea:	f3bf 8f6f 	isb	sy
 800f1ee:	f3bf 8f4f 	dsb	sy
 800f1f2:	e7fe      	b.n	800f1f2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f1f4:	f000 fff6 	bl	80101e4 <xTaskGetSchedulerState>
 800f1f8:	4606      	mov	r6, r0
 800f1fa:	b950      	cbnz	r0, 800f212 <xQueueGenericSend+0x72>
 800f1fc:	9b01      	ldr	r3, [sp, #4]
 800f1fe:	b14b      	cbz	r3, 800f214 <xQueueGenericSend+0x74>
 800f200:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f204:	f383 8811 	msr	BASEPRI, r3
 800f208:	f3bf 8f6f 	isb	sy
 800f20c:	f3bf 8f4f 	dsb	sy
 800f210:	e7fe      	b.n	800f210 <xQueueGenericSend+0x70>
 800f212:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800f214:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800f300 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 800f218:	f04f 0900 	mov.w	r9, #0
 800f21c:	e037      	b.n	800f28e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f21e:	9d01      	ldr	r5, [sp, #4]
 800f220:	b91d      	cbnz	r5, 800f22a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 800f222:	f7ff fd11 	bl	800ec48 <vPortExitCritical>
			return errQUEUE_FULL;
 800f226:	2000      	movs	r0, #0
 800f228:	e050      	b.n	800f2cc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800f22a:	b916      	cbnz	r6, 800f232 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f22c:	a802      	add	r0, sp, #8
 800f22e:	f000 ff8b 	bl	8010148 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f232:	f7ff fd09 	bl	800ec48 <vPortExitCritical>
		vTaskSuspendAll();
 800f236:	f000 fd19 	bl	800fc6c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f23a:	f7ff fce3 	bl	800ec04 <vPortEnterCritical>
 800f23e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f242:	2bff      	cmp	r3, #255	; 0xff
 800f244:	bf08      	it	eq
 800f246:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800f24a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f24e:	2bff      	cmp	r3, #255	; 0xff
 800f250:	bf08      	it	eq
 800f252:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800f256:	f7ff fcf7 	bl	800ec48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f25a:	a901      	add	r1, sp, #4
 800f25c:	a802      	add	r0, sp, #8
 800f25e:	f000 ff7f 	bl	8010160 <xTaskCheckForTimeOut>
 800f262:	2800      	cmp	r0, #0
 800f264:	d146      	bne.n	800f2f4 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800f266:	f7ff fccd 	bl	800ec04 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800f26a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f26c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f26e:	429a      	cmp	r2, r3
 800f270:	d12f      	bne.n	800f2d2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800f272:	f7ff fce9 	bl	800ec48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800f276:	9901      	ldr	r1, [sp, #4]
 800f278:	f104 0010 	add.w	r0, r4, #16
 800f27c:	f000 fee8 	bl	8010050 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f280:	4620      	mov	r0, r4
 800f282:	f7ff fe5f 	bl	800ef44 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f286:	f000 fd95 	bl	800fdb4 <xTaskResumeAll>
 800f28a:	b350      	cbz	r0, 800f2e2 <xQueueGenericSend+0x142>
 800f28c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800f28e:	f7ff fcb9 	bl	800ec04 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f292:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f294:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f296:	429a      	cmp	r2, r3
 800f298:	d301      	bcc.n	800f29e <xQueueGenericSend+0xfe>
 800f29a:	2f02      	cmp	r7, #2
 800f29c:	d1bf      	bne.n	800f21e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f29e:	463a      	mov	r2, r7
 800f2a0:	4641      	mov	r1, r8
 800f2a2:	4620      	mov	r0, r4
 800f2a4:	f7ff fe03 	bl	800eeae <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f2a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f2aa:	b11b      	cbz	r3, 800f2b4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f2ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f2b0:	f000 ff06 	bl	80100c0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800f2b4:	b138      	cbz	r0, 800f2c6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 800f2b6:	4b12      	ldr	r3, [pc, #72]	; (800f300 <xQueueGenericSend+0x160>)
 800f2b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f2bc:	601a      	str	r2, [r3, #0]
 800f2be:	f3bf 8f4f 	dsb	sy
 800f2c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f2c6:	f7ff fcbf 	bl	800ec48 <vPortExitCritical>
				return pdPASS;
 800f2ca:	2001      	movs	r0, #1
}
 800f2cc:	b004      	add	sp, #16
 800f2ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 800f2d2:	f7ff fcb9 	bl	800ec48 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800f2d6:	4620      	mov	r0, r4
 800f2d8:	f7ff fe34 	bl	800ef44 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f2dc:	f000 fd6a 	bl	800fdb4 <xTaskResumeAll>
 800f2e0:	e7d4      	b.n	800f28c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 800f2e2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800f2e6:	f8ca 3000 	str.w	r3, [sl]
 800f2ea:	f3bf 8f4f 	dsb	sy
 800f2ee:	f3bf 8f6f 	isb	sy
 800f2f2:	e7cb      	b.n	800f28c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 800f2f4:	4620      	mov	r0, r4
 800f2f6:	f7ff fe25 	bl	800ef44 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f2fa:	f000 fd5b 	bl	800fdb4 <xTaskResumeAll>
 800f2fe:	e792      	b.n	800f226 <xQueueGenericSend+0x86>
 800f300:	e000ed04 	.word	0xe000ed04

0800f304 <xQueueGenericSendFromISR>:
{
 800f304:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f308:	4689      	mov	r9, r1
 800f30a:	4690      	mov	r8, r2
 800f30c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800f30e:	4604      	mov	r4, r0
 800f310:	b940      	cbnz	r0, 800f324 <xQueueGenericSendFromISR+0x20>
 800f312:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f316:	f383 8811 	msr	BASEPRI, r3
 800f31a:	f3bf 8f6f 	isb	sy
 800f31e:	f3bf 8f4f 	dsb	sy
 800f322:	e7fe      	b.n	800f322 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f324:	b951      	cbnz	r1, 800f33c <xQueueGenericSendFromISR+0x38>
 800f326:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f328:	b143      	cbz	r3, 800f33c <xQueueGenericSendFromISR+0x38>
 800f32a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f32e:	f383 8811 	msr	BASEPRI, r3
 800f332:	f3bf 8f6f 	isb	sy
 800f336:	f3bf 8f4f 	dsb	sy
 800f33a:	e7fe      	b.n	800f33a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800f33c:	2f02      	cmp	r7, #2
 800f33e:	d10b      	bne.n	800f358 <xQueueGenericSendFromISR+0x54>
 800f340:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f342:	2b01      	cmp	r3, #1
 800f344:	d008      	beq.n	800f358 <xQueueGenericSendFromISR+0x54>
 800f346:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f34a:	f383 8811 	msr	BASEPRI, r3
 800f34e:	f3bf 8f6f 	isb	sy
 800f352:	f3bf 8f4f 	dsb	sy
 800f356:	e7fe      	b.n	800f356 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f358:	f7ff fd70 	bl	800ee3c <vPortValidateInterruptPriority>
	__asm volatile
 800f35c:	f3ef 8611 	mrs	r6, BASEPRI
 800f360:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f364:	f383 8811 	msr	BASEPRI, r3
 800f368:	f3bf 8f6f 	isb	sy
 800f36c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f370:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f372:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f374:	429a      	cmp	r2, r3
 800f376:	d301      	bcc.n	800f37c <xQueueGenericSendFromISR+0x78>
 800f378:	2f02      	cmp	r7, #2
 800f37a:	d123      	bne.n	800f3c4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800f37c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f380:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800f382:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f384:	463a      	mov	r2, r7
 800f386:	4649      	mov	r1, r9
 800f388:	4620      	mov	r0, r4
 800f38a:	f7ff fd90 	bl	800eeae <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800f38e:	1c6b      	adds	r3, r5, #1
 800f390:	d113      	bne.n	800f3ba <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f392:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f394:	b90b      	cbnz	r3, 800f39a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800f396:	2001      	movs	r0, #1
 800f398:	e00b      	b.n	800f3b2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f39a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f39e:	f000 fe8f 	bl	80100c0 <xTaskRemoveFromEventList>
 800f3a2:	2800      	cmp	r0, #0
 800f3a4:	d0f7      	beq.n	800f396 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800f3a6:	f1b8 0f00 	cmp.w	r8, #0
 800f3aa:	d0f4      	beq.n	800f396 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800f3ac:	2001      	movs	r0, #1
 800f3ae:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800f3b2:	f386 8811 	msr	BASEPRI, r6
}
 800f3b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800f3ba:	3501      	adds	r5, #1
 800f3bc:	b26d      	sxtb	r5, r5
 800f3be:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800f3c2:	e7e8      	b.n	800f396 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800f3c4:	2000      	movs	r0, #0
 800f3c6:	e7f4      	b.n	800f3b2 <xQueueGenericSendFromISR+0xae>

0800f3c8 <xQueueGiveFromISR>:
{
 800f3c8:	b570      	push	{r4, r5, r6, lr}
 800f3ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800f3cc:	4604      	mov	r4, r0
 800f3ce:	b940      	cbnz	r0, 800f3e2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800f3d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3d4:	f383 8811 	msr	BASEPRI, r3
 800f3d8:	f3bf 8f6f 	isb	sy
 800f3dc:	f3bf 8f4f 	dsb	sy
 800f3e0:	e7fe      	b.n	800f3e0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f3e2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f3e4:	b143      	cbz	r3, 800f3f8 <xQueueGiveFromISR+0x30>
 800f3e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3ea:	f383 8811 	msr	BASEPRI, r3
 800f3ee:	f3bf 8f6f 	isb	sy
 800f3f2:	f3bf 8f4f 	dsb	sy
 800f3f6:	e7fe      	b.n	800f3f6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800f3f8:	6803      	ldr	r3, [r0, #0]
 800f3fa:	b953      	cbnz	r3, 800f412 <xQueueGiveFromISR+0x4a>
 800f3fc:	6883      	ldr	r3, [r0, #8]
 800f3fe:	b143      	cbz	r3, 800f412 <xQueueGiveFromISR+0x4a>
 800f400:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f404:	f383 8811 	msr	BASEPRI, r3
 800f408:	f3bf 8f6f 	isb	sy
 800f40c:	f3bf 8f4f 	dsb	sy
 800f410:	e7fe      	b.n	800f410 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f412:	f7ff fd13 	bl	800ee3c <vPortValidateInterruptPriority>
	__asm volatile
 800f416:	f3ef 8611 	mrs	r6, BASEPRI
 800f41a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f41e:	f383 8811 	msr	BASEPRI, r3
 800f422:	f3bf 8f6f 	isb	sy
 800f426:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f42a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800f42c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f42e:	4293      	cmp	r3, r2
 800f430:	d91c      	bls.n	800f46c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800f432:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f436:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800f438:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800f43a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f43c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800f43e:	d110      	bne.n	800f462 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f440:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f442:	b90b      	cbnz	r3, 800f448 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800f444:	2001      	movs	r0, #1
 800f446:	e009      	b.n	800f45c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f448:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f44c:	f000 fe38 	bl	80100c0 <xTaskRemoveFromEventList>
 800f450:	2800      	cmp	r0, #0
 800f452:	d0f7      	beq.n	800f444 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800f454:	2d00      	cmp	r5, #0
 800f456:	d0f5      	beq.n	800f444 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800f458:	2001      	movs	r0, #1
 800f45a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800f45c:	f386 8811 	msr	BASEPRI, r6
}
 800f460:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800f462:	3301      	adds	r3, #1
 800f464:	b25b      	sxtb	r3, r3
 800f466:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800f46a:	e7eb      	b.n	800f444 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800f46c:	2000      	movs	r0, #0
 800f46e:	e7f5      	b.n	800f45c <xQueueGiveFromISR+0x94>

0800f470 <xQueueReceive>:
{
 800f470:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f474:	b085      	sub	sp, #20
 800f476:	460f      	mov	r7, r1
 800f478:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f47a:	4604      	mov	r4, r0
 800f47c:	b940      	cbnz	r0, 800f490 <xQueueReceive+0x20>
	__asm volatile
 800f47e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f482:	f383 8811 	msr	BASEPRI, r3
 800f486:	f3bf 8f6f 	isb	sy
 800f48a:	f3bf 8f4f 	dsb	sy
 800f48e:	e7fe      	b.n	800f48e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f490:	b951      	cbnz	r1, 800f4a8 <xQueueReceive+0x38>
 800f492:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f494:	b143      	cbz	r3, 800f4a8 <xQueueReceive+0x38>
 800f496:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f49a:	f383 8811 	msr	BASEPRI, r3
 800f49e:	f3bf 8f6f 	isb	sy
 800f4a2:	f3bf 8f4f 	dsb	sy
 800f4a6:	e7fe      	b.n	800f4a6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f4a8:	f000 fe9c 	bl	80101e4 <xTaskGetSchedulerState>
 800f4ac:	4606      	mov	r6, r0
 800f4ae:	b950      	cbnz	r0, 800f4c6 <xQueueReceive+0x56>
 800f4b0:	9b01      	ldr	r3, [sp, #4]
 800f4b2:	b14b      	cbz	r3, 800f4c8 <xQueueReceive+0x58>
 800f4b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4b8:	f383 8811 	msr	BASEPRI, r3
 800f4bc:	f3bf 8f6f 	isb	sy
 800f4c0:	f3bf 8f4f 	dsb	sy
 800f4c4:	e7fe      	b.n	800f4c4 <xQueueReceive+0x54>
 800f4c6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800f4c8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800f5ac <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 800f4cc:	f04f 0800 	mov.w	r8, #0
 800f4d0:	e03b      	b.n	800f54a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f4d2:	9d01      	ldr	r5, [sp, #4]
 800f4d4:	b91d      	cbnz	r5, 800f4de <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 800f4d6:	f7ff fbb7 	bl	800ec48 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800f4da:	2000      	movs	r0, #0
 800f4dc:	e052      	b.n	800f584 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800f4de:	b916      	cbnz	r6, 800f4e6 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f4e0:	a802      	add	r0, sp, #8
 800f4e2:	f000 fe31 	bl	8010148 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f4e6:	f7ff fbaf 	bl	800ec48 <vPortExitCritical>
		vTaskSuspendAll();
 800f4ea:	f000 fbbf 	bl	800fc6c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f4ee:	f7ff fb89 	bl	800ec04 <vPortEnterCritical>
 800f4f2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f4f6:	2bff      	cmp	r3, #255	; 0xff
 800f4f8:	bf08      	it	eq
 800f4fa:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800f4fe:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f502:	2bff      	cmp	r3, #255	; 0xff
 800f504:	bf08      	it	eq
 800f506:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800f50a:	f7ff fb9d 	bl	800ec48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f50e:	a901      	add	r1, sp, #4
 800f510:	a802      	add	r0, sp, #8
 800f512:	f000 fe25 	bl	8010160 <xTaskCheckForTimeOut>
 800f516:	2800      	cmp	r0, #0
 800f518:	d13d      	bne.n	800f596 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f51a:	4620      	mov	r0, r4
 800f51c:	f7ff fcbc 	bl	800ee98 <prvIsQueueEmpty>
 800f520:	b398      	cbz	r0, 800f58a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f522:	9901      	ldr	r1, [sp, #4]
 800f524:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f528:	f000 fd92 	bl	8010050 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f52c:	4620      	mov	r0, r4
 800f52e:	f7ff fd09 	bl	800ef44 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f532:	f000 fc3f 	bl	800fdb4 <xTaskResumeAll>
 800f536:	b938      	cbnz	r0, 800f548 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 800f538:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800f53c:	f8c9 3000 	str.w	r3, [r9]
 800f540:	f3bf 8f4f 	dsb	sy
 800f544:	f3bf 8f6f 	isb	sy
 800f548:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800f54a:	f7ff fb5b 	bl	800ec04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f54e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f550:	2d00      	cmp	r5, #0
 800f552:	d0be      	beq.n	800f4d2 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f554:	4639      	mov	r1, r7
 800f556:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f558:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f55a:	f7ff fcdd 	bl	800ef18 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f55e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f560:	6923      	ldr	r3, [r4, #16]
 800f562:	b163      	cbz	r3, 800f57e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f564:	f104 0010 	add.w	r0, r4, #16
 800f568:	f000 fdaa 	bl	80100c0 <xTaskRemoveFromEventList>
 800f56c:	b138      	cbz	r0, 800f57e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800f56e:	4b0f      	ldr	r3, [pc, #60]	; (800f5ac <xQueueReceive+0x13c>)
 800f570:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f574:	601a      	str	r2, [r3, #0]
 800f576:	f3bf 8f4f 	dsb	sy
 800f57a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f57e:	f7ff fb63 	bl	800ec48 <vPortExitCritical>
				return pdPASS;
 800f582:	2001      	movs	r0, #1
}
 800f584:	b005      	add	sp, #20
 800f586:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800f58a:	4620      	mov	r0, r4
 800f58c:	f7ff fcda 	bl	800ef44 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f590:	f000 fc10 	bl	800fdb4 <xTaskResumeAll>
 800f594:	e7d8      	b.n	800f548 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 800f596:	4620      	mov	r0, r4
 800f598:	f7ff fcd4 	bl	800ef44 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f59c:	f000 fc0a 	bl	800fdb4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f5a0:	4620      	mov	r0, r4
 800f5a2:	f7ff fc79 	bl	800ee98 <prvIsQueueEmpty>
 800f5a6:	2800      	cmp	r0, #0
 800f5a8:	d0ce      	beq.n	800f548 <xQueueReceive+0xd8>
 800f5aa:	e796      	b.n	800f4da <xQueueReceive+0x6a>
 800f5ac:	e000ed04 	.word	0xe000ed04

0800f5b0 <xQueueSemaphoreTake>:
{
 800f5b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 800f5b4:	4604      	mov	r4, r0
{
 800f5b6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f5b8:	b940      	cbnz	r0, 800f5cc <xQueueSemaphoreTake+0x1c>
 800f5ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5be:	f383 8811 	msr	BASEPRI, r3
 800f5c2:	f3bf 8f6f 	isb	sy
 800f5c6:	f3bf 8f4f 	dsb	sy
 800f5ca:	e7fe      	b.n	800f5ca <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f5cc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800f5ce:	b145      	cbz	r5, 800f5e2 <xQueueSemaphoreTake+0x32>
 800f5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5d4:	f383 8811 	msr	BASEPRI, r3
 800f5d8:	f3bf 8f6f 	isb	sy
 800f5dc:	f3bf 8f4f 	dsb	sy
 800f5e0:	e7fe      	b.n	800f5e0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f5e2:	f000 fdff 	bl	80101e4 <xTaskGetSchedulerState>
 800f5e6:	4606      	mov	r6, r0
 800f5e8:	b950      	cbnz	r0, 800f600 <xQueueSemaphoreTake+0x50>
 800f5ea:	9b01      	ldr	r3, [sp, #4]
 800f5ec:	b16b      	cbz	r3, 800f60a <xQueueSemaphoreTake+0x5a>
 800f5ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5f2:	f383 8811 	msr	BASEPRI, r3
 800f5f6:	f3bf 8f6f 	isb	sy
 800f5fa:	f3bf 8f4f 	dsb	sy
 800f5fe:	e7fe      	b.n	800f5fe <xQueueSemaphoreTake+0x4e>
 800f600:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 800f602:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800f734 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 800f606:	2700      	movs	r7, #0
 800f608:	e051      	b.n	800f6ae <xQueueSemaphoreTake+0xfe>
 800f60a:	4605      	mov	r5, r0
 800f60c:	e7f9      	b.n	800f602 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f60e:	9b01      	ldr	r3, [sp, #4]
 800f610:	b963      	cbnz	r3, 800f62c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f612:	b145      	cbz	r5, 800f626 <xQueueSemaphoreTake+0x76>
 800f614:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f618:	f383 8811 	msr	BASEPRI, r3
 800f61c:	f3bf 8f6f 	isb	sy
 800f620:	f3bf 8f4f 	dsb	sy
 800f624:	e7fe      	b.n	800f624 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 800f626:	f7ff fb0f 	bl	800ec48 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f62a:	e05e      	b.n	800f6ea <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800f62c:	b916      	cbnz	r6, 800f634 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f62e:	a802      	add	r0, sp, #8
 800f630:	f000 fd8a 	bl	8010148 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f634:	f7ff fb08 	bl	800ec48 <vPortExitCritical>
		vTaskSuspendAll();
 800f638:	f000 fb18 	bl	800fc6c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f63c:	f7ff fae2 	bl	800ec04 <vPortEnterCritical>
 800f640:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f644:	2bff      	cmp	r3, #255	; 0xff
 800f646:	bf08      	it	eq
 800f648:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800f64c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f650:	2bff      	cmp	r3, #255	; 0xff
 800f652:	bf08      	it	eq
 800f654:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800f658:	f7ff faf6 	bl	800ec48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f65c:	a901      	add	r1, sp, #4
 800f65e:	a802      	add	r0, sp, #8
 800f660:	f000 fd7e 	bl	8010160 <xTaskCheckForTimeOut>
 800f664:	2800      	cmp	r0, #0
 800f666:	d14a      	bne.n	800f6fe <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f668:	4620      	mov	r0, r4
 800f66a:	f7ff fc15 	bl	800ee98 <prvIsQueueEmpty>
 800f66e:	2800      	cmp	r0, #0
 800f670:	d03f      	beq.n	800f6f2 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f672:	6823      	ldr	r3, [r4, #0]
 800f674:	b93b      	cbnz	r3, 800f686 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 800f676:	f7ff fac5 	bl	800ec04 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f67a:	68a0      	ldr	r0, [r4, #8]
 800f67c:	f000 fdc2 	bl	8010204 <xTaskPriorityInherit>
 800f680:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800f682:	f7ff fae1 	bl	800ec48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f686:	9901      	ldr	r1, [sp, #4]
 800f688:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f68c:	f000 fce0 	bl	8010050 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f690:	4620      	mov	r0, r4
 800f692:	f7ff fc57 	bl	800ef44 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f696:	f000 fb8d 	bl	800fdb4 <xTaskResumeAll>
 800f69a:	b938      	cbnz	r0, 800f6ac <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800f69c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800f6a0:	f8c8 3000 	str.w	r3, [r8]
 800f6a4:	f3bf 8f4f 	dsb	sy
 800f6a8:	f3bf 8f6f 	isb	sy
 800f6ac:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800f6ae:	f7ff faa9 	bl	800ec04 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f6b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f6b4:	2b00      	cmp	r3, #0
 800f6b6:	d0aa      	beq.n	800f60e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f6b8:	3b01      	subs	r3, #1
 800f6ba:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f6bc:	6823      	ldr	r3, [r4, #0]
 800f6be:	b913      	cbnz	r3, 800f6c6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f6c0:	f000 fe78 	bl	80103b4 <pvTaskIncrementMutexHeldCount>
 800f6c4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f6c6:	6923      	ldr	r3, [r4, #16]
 800f6c8:	b163      	cbz	r3, 800f6e4 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f6ca:	f104 0010 	add.w	r0, r4, #16
 800f6ce:	f000 fcf7 	bl	80100c0 <xTaskRemoveFromEventList>
 800f6d2:	b138      	cbz	r0, 800f6e4 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 800f6d4:	4b17      	ldr	r3, [pc, #92]	; (800f734 <xQueueSemaphoreTake+0x184>)
 800f6d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f6da:	601a      	str	r2, [r3, #0]
 800f6dc:	f3bf 8f4f 	dsb	sy
 800f6e0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f6e4:	f7ff fab0 	bl	800ec48 <vPortExitCritical>
				return pdPASS;
 800f6e8:	2501      	movs	r5, #1
}
 800f6ea:	4628      	mov	r0, r5
 800f6ec:	b004      	add	sp, #16
 800f6ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800f6f2:	4620      	mov	r0, r4
 800f6f4:	f7ff fc26 	bl	800ef44 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f6f8:	f000 fb5c 	bl	800fdb4 <xTaskResumeAll>
 800f6fc:	e7d6      	b.n	800f6ac <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800f6fe:	4620      	mov	r0, r4
 800f700:	f7ff fc20 	bl	800ef44 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f704:	f000 fb56 	bl	800fdb4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f708:	4620      	mov	r0, r4
 800f70a:	f7ff fbc5 	bl	800ee98 <prvIsQueueEmpty>
 800f70e:	2800      	cmp	r0, #0
 800f710:	d0cc      	beq.n	800f6ac <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800f712:	2d00      	cmp	r5, #0
 800f714:	d0e9      	beq.n	800f6ea <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 800f716:	f7ff fa75 	bl	800ec04 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f71a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f71c:	b119      	cbz	r1, 800f726 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f71e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f720:	6819      	ldr	r1, [r3, #0]
 800f722:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f726:	68a0      	ldr	r0, [r4, #8]
 800f728:	f000 fdf2 	bl	8010310 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f72c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800f72e:	f7ff fa8b 	bl	800ec48 <vPortExitCritical>
 800f732:	e7da      	b.n	800f6ea <xQueueSemaphoreTake+0x13a>
 800f734:	e000ed04 	.word	0xe000ed04

0800f738 <xQueueReceiveFromISR>:
{
 800f738:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f73c:	4689      	mov	r9, r1
 800f73e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800f740:	4605      	mov	r5, r0
 800f742:	b940      	cbnz	r0, 800f756 <xQueueReceiveFromISR+0x1e>
 800f744:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f748:	f383 8811 	msr	BASEPRI, r3
 800f74c:	f3bf 8f6f 	isb	sy
 800f750:	f3bf 8f4f 	dsb	sy
 800f754:	e7fe      	b.n	800f754 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f756:	b951      	cbnz	r1, 800f76e <xQueueReceiveFromISR+0x36>
 800f758:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f75a:	b143      	cbz	r3, 800f76e <xQueueReceiveFromISR+0x36>
 800f75c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f760:	f383 8811 	msr	BASEPRI, r3
 800f764:	f3bf 8f6f 	isb	sy
 800f768:	f3bf 8f4f 	dsb	sy
 800f76c:	e7fe      	b.n	800f76c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f76e:	f7ff fb65 	bl	800ee3c <vPortValidateInterruptPriority>
	__asm volatile
 800f772:	f3ef 8711 	mrs	r7, BASEPRI
 800f776:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f77a:	f383 8811 	msr	BASEPRI, r3
 800f77e:	f3bf 8f6f 	isb	sy
 800f782:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f786:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f788:	b31c      	cbz	r4, 800f7d2 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f78a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f78e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800f790:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f792:	4628      	mov	r0, r5
 800f794:	f7ff fbc0 	bl	800ef18 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f798:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800f79a:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f79c:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f79e:	d113      	bne.n	800f7c8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f7a0:	692b      	ldr	r3, [r5, #16]
 800f7a2:	b90b      	cbnz	r3, 800f7a8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800f7a4:	2001      	movs	r0, #1
 800f7a6:	e00b      	b.n	800f7c0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f7a8:	f105 0010 	add.w	r0, r5, #16
 800f7ac:	f000 fc88 	bl	80100c0 <xTaskRemoveFromEventList>
 800f7b0:	2800      	cmp	r0, #0
 800f7b2:	d0f7      	beq.n	800f7a4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800f7b4:	f1b8 0f00 	cmp.w	r8, #0
 800f7b8:	d0f4      	beq.n	800f7a4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f7ba:	2001      	movs	r0, #1
 800f7bc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800f7c0:	f387 8811 	msr	BASEPRI, r7
}
 800f7c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f7c8:	3601      	adds	r6, #1
 800f7ca:	b276      	sxtb	r6, r6
 800f7cc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800f7d0:	e7e8      	b.n	800f7a4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800f7d2:	4620      	mov	r0, r4
 800f7d4:	e7f4      	b.n	800f7c0 <xQueueReceiveFromISR+0x88>
	...

0800f7d8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800f7d8:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f7da:	4a07      	ldr	r2, [pc, #28]	; (800f7f8 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f7dc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f7de:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800f7e2:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800f7e6:	b91d      	cbnz	r5, 800f7f0 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f7e8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f7ec:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800f7ee:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f7f0:	3301      	adds	r3, #1
 800f7f2:	2b08      	cmp	r3, #8
 800f7f4:	d1f3      	bne.n	800f7de <vQueueAddToRegistry+0x6>
 800f7f6:	e7fa      	b.n	800f7ee <vQueueAddToRegistry+0x16>
 800f7f8:	20027ee0 	.word	0x20027ee0

0800f7fc <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800f7fc:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f7fe:	4909      	ldr	r1, [pc, #36]	; (800f824 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f800:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f802:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 800f806:	4282      	cmp	r2, r0
 800f808:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800f80c:	d106      	bne.n	800f81c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f80e:	4a06      	ldr	r2, [pc, #24]	; (800f828 <vQueueUnregisterQueue+0x2c>)
 800f810:	2100      	movs	r1, #0
 800f812:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800f816:	4422      	add	r2, r4
 800f818:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800f81a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f81c:	3301      	adds	r3, #1
 800f81e:	2b08      	cmp	r3, #8
 800f820:	d1ef      	bne.n	800f802 <vQueueUnregisterQueue+0x6>
 800f822:	e7fa      	b.n	800f81a <vQueueUnregisterQueue+0x1e>
 800f824:	20027ee4 	.word	0x20027ee4
 800f828:	20027ee0 	.word	0x20027ee0

0800f82c <vQueueDelete>:
{
 800f82c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800f82e:	b940      	cbnz	r0, 800f842 <vQueueDelete+0x16>
	__asm volatile
 800f830:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f834:	f383 8811 	msr	BASEPRI, r3
 800f838:	f3bf 8f6f 	isb	sy
 800f83c:	f3bf 8f4f 	dsb	sy
 800f840:	e7fe      	b.n	800f840 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800f842:	f7ff ffdb 	bl	800f7fc <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f846:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f84a:	b91b      	cbnz	r3, 800f854 <vQueueDelete+0x28>
}
 800f84c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800f850:	f7ff b8f0 	b.w	800ea34 <vPortFree>
}
 800f854:	bd10      	pop	{r4, pc}

0800f856 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f856:	b570      	push	{r4, r5, r6, lr}
 800f858:	4604      	mov	r4, r0
 800f85a:	460d      	mov	r5, r1
 800f85c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f85e:	f7ff f9d1 	bl	800ec04 <vPortEnterCritical>
 800f862:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f866:	2bff      	cmp	r3, #255	; 0xff
 800f868:	bf04      	itt	eq
 800f86a:	2300      	moveq	r3, #0
 800f86c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f870:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f874:	2bff      	cmp	r3, #255	; 0xff
 800f876:	bf04      	itt	eq
 800f878:	2300      	moveq	r3, #0
 800f87a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f87e:	f7ff f9e3 	bl	800ec48 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f882:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f884:	b92b      	cbnz	r3, 800f892 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f886:	4632      	mov	r2, r6
 800f888:	4629      	mov	r1, r5
 800f88a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f88e:	f000 fbf9 	bl	8010084 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800f892:	4620      	mov	r0, r4
	}
 800f894:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800f898:	f7ff bb54 	b.w	800ef44 <prvUnlockQueue>

0800f89c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f89c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8a0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f8a2:	f7ff f9af 	bl	800ec04 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f8a6:	4b2f      	ldr	r3, [pc, #188]	; (800f964 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 800f8a8:	4d2f      	ldr	r5, [pc, #188]	; (800f968 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800f8aa:	681a      	ldr	r2, [r3, #0]
 800f8ac:	4f2f      	ldr	r7, [pc, #188]	; (800f96c <prvAddNewTaskToReadyList+0xd0>)
 800f8ae:	3201      	adds	r2, #1
 800f8b0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800f8b2:	682e      	ldr	r6, [r5, #0]
 800f8b4:	2e00      	cmp	r6, #0
 800f8b6:	d149      	bne.n	800f94c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800f8b8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f8ba:	681b      	ldr	r3, [r3, #0]
 800f8bc:	2b01      	cmp	r3, #1
 800f8be:	d11f      	bne.n	800f900 <prvAddNewTaskToReadyList+0x64>
 800f8c0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f8c2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f8c4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f8c6:	f7ff f8f3 	bl	800eab0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f8ca:	2e38      	cmp	r6, #56	; 0x38
 800f8cc:	f108 0814 	add.w	r8, r8, #20
 800f8d0:	d1f7      	bne.n	800f8c2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f8d2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800f998 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800f8d6:	4e26      	ldr	r6, [pc, #152]	; (800f970 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 800f8d8:	4640      	mov	r0, r8
 800f8da:	f7ff f8e9 	bl	800eab0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f8de:	4630      	mov	r0, r6
 800f8e0:	f7ff f8e6 	bl	800eab0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f8e4:	4823      	ldr	r0, [pc, #140]	; (800f974 <prvAddNewTaskToReadyList+0xd8>)
 800f8e6:	f7ff f8e3 	bl	800eab0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f8ea:	4823      	ldr	r0, [pc, #140]	; (800f978 <prvAddNewTaskToReadyList+0xdc>)
 800f8ec:	f7ff f8e0 	bl	800eab0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f8f0:	4822      	ldr	r0, [pc, #136]	; (800f97c <prvAddNewTaskToReadyList+0xe0>)
 800f8f2:	f7ff f8dd 	bl	800eab0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f8f6:	4b22      	ldr	r3, [pc, #136]	; (800f980 <prvAddNewTaskToReadyList+0xe4>)
 800f8f8:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f8fc:	4b21      	ldr	r3, [pc, #132]	; (800f984 <prvAddNewTaskToReadyList+0xe8>)
 800f8fe:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 800f900:	4a21      	ldr	r2, [pc, #132]	; (800f988 <prvAddNewTaskToReadyList+0xec>)
 800f902:	6813      	ldr	r3, [r2, #0]
 800f904:	3301      	adds	r3, #1
 800f906:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800f908:	4a20      	ldr	r2, [pc, #128]	; (800f98c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f90a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f90c:	6811      	ldr	r1, [r2, #0]
 800f90e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f910:	2014      	movs	r0, #20
 800f912:	428b      	cmp	r3, r1
 800f914:	fb00 7003 	mla	r0, r0, r3, r7
 800f918:	f104 0104 	add.w	r1, r4, #4
 800f91c:	bf88      	it	hi
 800f91e:	6013      	strhi	r3, [r2, #0]
 800f920:	f7ff f8d4 	bl	800eacc <vListInsertEnd>
	taskEXIT_CRITICAL();
 800f924:	f7ff f990 	bl	800ec48 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800f928:	4b19      	ldr	r3, [pc, #100]	; (800f990 <prvAddNewTaskToReadyList+0xf4>)
 800f92a:	681b      	ldr	r3, [r3, #0]
 800f92c:	b163      	cbz	r3, 800f948 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f92e:	682b      	ldr	r3, [r5, #0]
 800f930:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f932:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f934:	429a      	cmp	r2, r3
 800f936:	d207      	bcs.n	800f948 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 800f938:	4b16      	ldr	r3, [pc, #88]	; (800f994 <prvAddNewTaskToReadyList+0xf8>)
 800f93a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f93e:	601a      	str	r2, [r3, #0]
 800f940:	f3bf 8f4f 	dsb	sy
 800f944:	f3bf 8f6f 	isb	sy
}
 800f948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800f94c:	4b10      	ldr	r3, [pc, #64]	; (800f990 <prvAddNewTaskToReadyList+0xf4>)
 800f94e:	681b      	ldr	r3, [r3, #0]
 800f950:	2b00      	cmp	r3, #0
 800f952:	d1d5      	bne.n	800f900 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f954:	682b      	ldr	r3, [r5, #0]
 800f956:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f958:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f95a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800f95c:	bf98      	it	ls
 800f95e:	602c      	strls	r4, [r5, #0]
 800f960:	e7ce      	b.n	800f900 <prvAddNewTaskToReadyList+0x64>
 800f962:	bf00      	nop
 800f964:	200277e8 	.word	0x200277e8
 800f968:	2002737c 	.word	0x2002737c
 800f96c:	20027388 	.word	0x20027388
 800f970:	20027810 	.word	0x20027810
 800f974:	20027830 	.word	0x20027830
 800f978:	2002785c 	.word	0x2002785c
 800f97c:	20027848 	.word	0x20027848
 800f980:	20027380 	.word	0x20027380
 800f984:	20027384 	.word	0x20027384
 800f988:	200277f4 	.word	0x200277f4
 800f98c:	200277f8 	.word	0x200277f8
 800f990:	20027844 	.word	0x20027844
 800f994:	e000ed04 	.word	0xe000ed04
 800f998:	200277fc 	.word	0x200277fc

0800f99c <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f99c:	4a06      	ldr	r2, [pc, #24]	; (800f9b8 <prvResetNextTaskUnblockTime+0x1c>)
 800f99e:	6813      	ldr	r3, [r2, #0]
 800f9a0:	6819      	ldr	r1, [r3, #0]
 800f9a2:	4b06      	ldr	r3, [pc, #24]	; (800f9bc <prvResetNextTaskUnblockTime+0x20>)
 800f9a4:	b919      	cbnz	r1, 800f9ae <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9a6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9aa:	601a      	str	r2, [r3, #0]
	}
}
 800f9ac:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9ae:	6812      	ldr	r2, [r2, #0]
 800f9b0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9b2:	68d2      	ldr	r2, [r2, #12]
 800f9b4:	6852      	ldr	r2, [r2, #4]
 800f9b6:	e7f8      	b.n	800f9aa <prvResetNextTaskUnblockTime+0xe>
 800f9b8:	20027380 	.word	0x20027380
 800f9bc:	20027824 	.word	0x20027824

0800f9c0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f9c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f9c4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f9c8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f9cc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f9ce:	4606      	mov	r6, r0
 800f9d0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f9d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f9d4:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f9d6:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f9d8:	f016 f8a0 	bl	8025b1c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f9dc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800f9de:	f1a9 0904 	sub.w	r9, r9, #4
 800f9e2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f9e4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800f9e8:	2d00      	cmp	r5, #0
 800f9ea:	d043      	beq.n	800fa74 <prvInitialiseNewTask.isra.0+0xb4>
 800f9ec:	1e6b      	subs	r3, r5, #1
 800f9ee:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800f9f2:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f9f4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f9f8:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800f9fc:	7819      	ldrb	r1, [r3, #0]
 800f9fe:	b109      	cbz	r1, 800fa04 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800fa00:	42ab      	cmp	r3, r5
 800fa02:	d1f7      	bne.n	800f9f4 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800fa04:	2300      	movs	r3, #0
 800fa06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800fa0a:	9d08      	ldr	r5, [sp, #32]
 800fa0c:	2d37      	cmp	r5, #55	; 0x37
 800fa0e:	bf28      	it	cs
 800fa10:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800fa12:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800fa16:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800fa18:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800fa1a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800fa1c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800fa20:	f7ff f851 	bl	800eac6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa24:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800fa28:	f104 0018 	add.w	r0, r4, #24
 800fa2c:	f7ff f84b 	bl	800eac6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800fa30:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800fa34:	2260      	movs	r2, #96	; 0x60
 800fa36:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800fa38:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa3a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800fa3c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800fa3e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800fa42:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800fa46:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800fa4a:	f016 f867 	bl	8025b1c <memset>
 800fa4e:	4b0b      	ldr	r3, [pc, #44]	; (800fa7c <prvInitialiseNewTask.isra.0+0xbc>)
 800fa50:	65e3      	str	r3, [r4, #92]	; 0x5c
 800fa52:	4b0b      	ldr	r3, [pc, #44]	; (800fa80 <prvInitialiseNewTask.isra.0+0xc0>)
 800fa54:	6623      	str	r3, [r4, #96]	; 0x60
 800fa56:	4b0b      	ldr	r3, [pc, #44]	; (800fa84 <prvInitialiseNewTask.isra.0+0xc4>)
 800fa58:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800fa5a:	463a      	mov	r2, r7
 800fa5c:	4631      	mov	r1, r6
 800fa5e:	4648      	mov	r0, r9
 800fa60:	f7ff f8a6 	bl	800ebb0 <pxPortInitialiseStack>
 800fa64:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800fa66:	f1b8 0f00 	cmp.w	r8, #0
 800fa6a:	d001      	beq.n	800fa70 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800fa6c:	f8c8 4000 	str.w	r4, [r8]
}
 800fa70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800fa74:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800fa78:	e7c7      	b.n	800fa0a <prvInitialiseNewTask.isra.0+0x4a>
 800fa7a:	bf00      	nop
 800fa7c:	0802ba58 	.word	0x0802ba58
 800fa80:	0802ba78 	.word	0x0802ba78
 800fa84:	0802ba38 	.word	0x0802ba38

0800fa88 <prvDeleteTCB>:
	{
 800fa88:	b510      	push	{r4, lr}
 800fa8a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800fa8c:	3058      	adds	r0, #88	; 0x58
 800fa8e:	f016 fbf3 	bl	8026278 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800fa92:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800fa96:	b93b      	cbnz	r3, 800faa8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800fa98:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800fa9a:	f7fe ffcb 	bl	800ea34 <vPortFree>
				vPortFree( pxTCB );
 800fa9e:	4620      	mov	r0, r4
	}
 800faa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800faa4:	f7fe bfc6 	b.w	800ea34 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800faa8:	2b01      	cmp	r3, #1
 800faaa:	d0f8      	beq.n	800fa9e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800faac:	2b02      	cmp	r3, #2
 800faae:	d008      	beq.n	800fac2 <prvDeleteTCB+0x3a>
 800fab0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fab4:	f383 8811 	msr	BASEPRI, r3
 800fab8:	f3bf 8f6f 	isb	sy
 800fabc:	f3bf 8f4f 	dsb	sy
 800fac0:	e7fe      	b.n	800fac0 <prvDeleteTCB+0x38>
	}
 800fac2:	bd10      	pop	{r4, pc}

0800fac4 <prvIdleTask>:
{
 800fac4:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fac6:	4e14      	ldr	r6, [pc, #80]	; (800fb18 <prvIdleTask+0x54>)
				taskYIELD();
 800fac8:	4f14      	ldr	r7, [pc, #80]	; (800fb1c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800faca:	4c15      	ldr	r4, [pc, #84]	; (800fb20 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800facc:	4d15      	ldr	r5, [pc, #84]	; (800fb24 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800face:	6823      	ldr	r3, [r4, #0]
 800fad0:	b96b      	cbnz	r3, 800faee <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800fad2:	4b15      	ldr	r3, [pc, #84]	; (800fb28 <prvIdleTask+0x64>)
 800fad4:	681b      	ldr	r3, [r3, #0]
 800fad6:	2b01      	cmp	r3, #1
 800fad8:	d906      	bls.n	800fae8 <prvIdleTask+0x24>
				taskYIELD();
 800fada:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800fade:	603b      	str	r3, [r7, #0]
 800fae0:	f3bf 8f4f 	dsb	sy
 800fae4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800fae8:	f7f1 fc86 	bl	80013f8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800faec:	e7ed      	b.n	800faca <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800faee:	f7ff f889 	bl	800ec04 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800faf2:	68f3      	ldr	r3, [r6, #12]
 800faf4:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800faf8:	f108 0004 	add.w	r0, r8, #4
 800fafc:	f7ff f809 	bl	800eb12 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800fb00:	682b      	ldr	r3, [r5, #0]
 800fb02:	3b01      	subs	r3, #1
 800fb04:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800fb06:	6823      	ldr	r3, [r4, #0]
 800fb08:	3b01      	subs	r3, #1
 800fb0a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800fb0c:	f7ff f89c 	bl	800ec48 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800fb10:	4640      	mov	r0, r8
 800fb12:	f7ff ffb9 	bl	800fa88 <prvDeleteTCB>
 800fb16:	e7da      	b.n	800face <prvIdleTask+0xa>
 800fb18:	2002785c 	.word	0x2002785c
 800fb1c:	e000ed04 	.word	0xe000ed04
 800fb20:	200277ec 	.word	0x200277ec
 800fb24:	200277e8 	.word	0x200277e8
 800fb28:	20027388 	.word	0x20027388

0800fb2c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800fb2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800fb2e:	4b16      	ldr	r3, [pc, #88]	; (800fb88 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb30:	4e16      	ldr	r6, [pc, #88]	; (800fb8c <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800fb32:	681d      	ldr	r5, [r3, #0]
{
 800fb34:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb36:	6830      	ldr	r0, [r6, #0]
 800fb38:	3004      	adds	r0, #4
{
 800fb3a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb3c:	f7fe ffe9 	bl	800eb12 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fb40:	1c63      	adds	r3, r4, #1
 800fb42:	4633      	mov	r3, r6
 800fb44:	d107      	bne.n	800fb56 <prvAddCurrentTaskToDelayedList+0x2a>
 800fb46:	b137      	cbz	r7, 800fb56 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb48:	6831      	ldr	r1, [r6, #0]
 800fb4a:	4811      	ldr	r0, [pc, #68]	; (800fb90 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800fb4c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb50:	3104      	adds	r1, #4
 800fb52:	f7fe bfbb 	b.w	800eacc <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fb56:	681a      	ldr	r2, [r3, #0]
 800fb58:	192c      	adds	r4, r5, r4
 800fb5a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800fb5c:	d307      	bcc.n	800fb6e <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb5e:	4a0d      	ldr	r2, [pc, #52]	; (800fb94 <prvAddCurrentTaskToDelayedList+0x68>)
 800fb60:	6810      	ldr	r0, [r2, #0]
 800fb62:	6819      	ldr	r1, [r3, #0]
}
 800fb64:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb68:	3104      	adds	r1, #4
 800fb6a:	f7fe bfbb 	b.w	800eae4 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb6e:	4a0a      	ldr	r2, [pc, #40]	; (800fb98 <prvAddCurrentTaskToDelayedList+0x6c>)
 800fb70:	6810      	ldr	r0, [r2, #0]
 800fb72:	6819      	ldr	r1, [r3, #0]
 800fb74:	3104      	adds	r1, #4
 800fb76:	f7fe ffb5 	bl	800eae4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fb7a:	4b08      	ldr	r3, [pc, #32]	; (800fb9c <prvAddCurrentTaskToDelayedList+0x70>)
 800fb7c:	681a      	ldr	r2, [r3, #0]
 800fb7e:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800fb80:	bf88      	it	hi
 800fb82:	601c      	strhi	r4, [r3, #0]
}
 800fb84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb86:	bf00      	nop
 800fb88:	20027870 	.word	0x20027870
 800fb8c:	2002737c 	.word	0x2002737c
 800fb90:	20027848 	.word	0x20027848
 800fb94:	20027384 	.word	0x20027384
 800fb98:	20027380 	.word	0x20027380
 800fb9c:	20027824 	.word	0x20027824

0800fba0 <xTaskCreateStatic>:
	{
 800fba0:	b570      	push	{r4, r5, r6, lr}
 800fba2:	b086      	sub	sp, #24
 800fba4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800fba8:	b945      	cbnz	r5, 800fbbc <xTaskCreateStatic+0x1c>
 800fbaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbae:	f383 8811 	msr	BASEPRI, r3
 800fbb2:	f3bf 8f6f 	isb	sy
 800fbb6:	f3bf 8f4f 	dsb	sy
 800fbba:	e7fe      	b.n	800fbba <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800fbbc:	b944      	cbnz	r4, 800fbd0 <xTaskCreateStatic+0x30>
 800fbbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbc2:	f383 8811 	msr	BASEPRI, r3
 800fbc6:	f3bf 8f6f 	isb	sy
 800fbca:	f3bf 8f4f 	dsb	sy
 800fbce:	e7fe      	b.n	800fbce <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fbd0:	26c0      	movs	r6, #192	; 0xc0
 800fbd2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800fbd4:	9e05      	ldr	r6, [sp, #20]
 800fbd6:	2ec0      	cmp	r6, #192	; 0xc0
 800fbd8:	d008      	beq.n	800fbec <xTaskCreateStatic+0x4c>
 800fbda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbde:	f383 8811 	msr	BASEPRI, r3
 800fbe2:	f3bf 8f6f 	isb	sy
 800fbe6:	f3bf 8f4f 	dsb	sy
 800fbea:	e7fe      	b.n	800fbea <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fbec:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fbee:	2502      	movs	r5, #2
 800fbf0:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fbf4:	ad04      	add	r5, sp, #16
 800fbf6:	9501      	str	r5, [sp, #4]
 800fbf8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800fbfa:	9402      	str	r4, [sp, #8]
 800fbfc:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fbfe:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fc00:	f7ff fede 	bl	800f9c0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fc04:	4620      	mov	r0, r4
 800fc06:	f7ff fe49 	bl	800f89c <prvAddNewTaskToReadyList>
	}
 800fc0a:	9804      	ldr	r0, [sp, #16]
 800fc0c:	b006      	add	sp, #24
 800fc0e:	bd70      	pop	{r4, r5, r6, pc}

0800fc10 <xTaskCreate>:
	{
 800fc10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc14:	4607      	mov	r7, r0
 800fc16:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fc18:	0090      	lsls	r0, r2, #2
	{
 800fc1a:	4688      	mov	r8, r1
 800fc1c:	4616      	mov	r6, r2
 800fc1e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fc20:	f7fe fe76 	bl	800e910 <pvPortMalloc>
			if( pxStack != NULL )
 800fc24:	4605      	mov	r5, r0
 800fc26:	b1e8      	cbz	r0, 800fc64 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800fc28:	20c0      	movs	r0, #192	; 0xc0
 800fc2a:	f7fe fe71 	bl	800e910 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800fc2e:	4604      	mov	r4, r0
 800fc30:	b1a8      	cbz	r0, 800fc5e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800fc32:	2300      	movs	r3, #0
 800fc34:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fc38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800fc3a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fc3c:	9301      	str	r3, [sp, #4]
 800fc3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc40:	9002      	str	r0, [sp, #8]
 800fc42:	9300      	str	r3, [sp, #0]
 800fc44:	4632      	mov	r2, r6
 800fc46:	464b      	mov	r3, r9
 800fc48:	4641      	mov	r1, r8
 800fc4a:	4638      	mov	r0, r7
 800fc4c:	f7ff feb8 	bl	800f9c0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fc50:	4620      	mov	r0, r4
 800fc52:	f7ff fe23 	bl	800f89c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800fc56:	2001      	movs	r0, #1
	}
 800fc58:	b005      	add	sp, #20
 800fc5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800fc5e:	4628      	mov	r0, r5
 800fc60:	f7fe fee8 	bl	800ea34 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc64:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800fc68:	e7f6      	b.n	800fc58 <xTaskCreate+0x48>
	...

0800fc6c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fc6c:	4a02      	ldr	r2, [pc, #8]	; (800fc78 <vTaskSuspendAll+0xc>)
 800fc6e:	6813      	ldr	r3, [r2, #0]
 800fc70:	3301      	adds	r3, #1
 800fc72:	6013      	str	r3, [r2, #0]
}
 800fc74:	4770      	bx	lr
 800fc76:	bf00      	nop
 800fc78:	200277f0 	.word	0x200277f0

0800fc7c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fc7c:	4b01      	ldr	r3, [pc, #4]	; (800fc84 <xTaskGetTickCount+0x8>)
 800fc7e:	6818      	ldr	r0, [r3, #0]
}
 800fc80:	4770      	bx	lr
 800fc82:	bf00      	nop
 800fc84:	20027870 	.word	0x20027870

0800fc88 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc88:	4b3f      	ldr	r3, [pc, #252]	; (800fd88 <xTaskIncrementTick+0x100>)
 800fc8a:	681b      	ldr	r3, [r3, #0]
{
 800fc8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc90:	2b00      	cmp	r3, #0
 800fc92:	d173      	bne.n	800fd7c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800fc94:	4b3d      	ldr	r3, [pc, #244]	; (800fd8c <xTaskIncrementTick+0x104>)
 800fc96:	681d      	ldr	r5, [r3, #0]
 800fc98:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800fc9a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800fc9c:	b9bd      	cbnz	r5, 800fcce <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800fc9e:	4b3c      	ldr	r3, [pc, #240]	; (800fd90 <xTaskIncrementTick+0x108>)
 800fca0:	681a      	ldr	r2, [r3, #0]
 800fca2:	6812      	ldr	r2, [r2, #0]
 800fca4:	b142      	cbz	r2, 800fcb8 <xTaskIncrementTick+0x30>
 800fca6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcaa:	f383 8811 	msr	BASEPRI, r3
 800fcae:	f3bf 8f6f 	isb	sy
 800fcb2:	f3bf 8f4f 	dsb	sy
 800fcb6:	e7fe      	b.n	800fcb6 <xTaskIncrementTick+0x2e>
 800fcb8:	4a36      	ldr	r2, [pc, #216]	; (800fd94 <xTaskIncrementTick+0x10c>)
 800fcba:	6819      	ldr	r1, [r3, #0]
 800fcbc:	6810      	ldr	r0, [r2, #0]
 800fcbe:	6018      	str	r0, [r3, #0]
 800fcc0:	6011      	str	r1, [r2, #0]
 800fcc2:	4a35      	ldr	r2, [pc, #212]	; (800fd98 <xTaskIncrementTick+0x110>)
 800fcc4:	6813      	ldr	r3, [r2, #0]
 800fcc6:	3301      	adds	r3, #1
 800fcc8:	6013      	str	r3, [r2, #0]
 800fcca:	f7ff fe67 	bl	800f99c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800fcce:	4e33      	ldr	r6, [pc, #204]	; (800fd9c <xTaskIncrementTick+0x114>)
 800fcd0:	4f33      	ldr	r7, [pc, #204]	; (800fda0 <xTaskIncrementTick+0x118>)
 800fcd2:	6833      	ldr	r3, [r6, #0]
 800fcd4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800fdac <xTaskIncrementTick+0x124>
 800fcd8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800fcda:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800fcde:	d211      	bcs.n	800fd04 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800fce0:	f8d8 3000 	ldr.w	r3, [r8]
 800fce4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fce6:	2314      	movs	r3, #20
 800fce8:	4353      	muls	r3, r2
 800fcea:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800fcec:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800fcee:	4b2d      	ldr	r3, [pc, #180]	; (800fda4 <xTaskIncrementTick+0x11c>)
 800fcf0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800fcf2:	bf28      	it	cs
 800fcf4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800fcf6:	2b00      	cmp	r3, #0
 800fcf8:	bf18      	it	ne
 800fcfa:	2401      	movne	r4, #1
}
 800fcfc:	4620      	mov	r0, r4
 800fcfe:	b003      	add	sp, #12
 800fd00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fd04:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800fd90 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800fd08:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800fdb0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fd0c:	f8d9 3000 	ldr.w	r3, [r9]
 800fd10:	681b      	ldr	r3, [r3, #0]
 800fd12:	b91b      	cbnz	r3, 800fd1c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd14:	f04f 33ff 	mov.w	r3, #4294967295
 800fd18:	6033      	str	r3, [r6, #0]
					break;
 800fd1a:	e7e1      	b.n	800fce0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fd1c:	f8d9 3000 	ldr.w	r3, [r9]
 800fd20:	68db      	ldr	r3, [r3, #12]
 800fd22:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800fd26:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800fd2a:	4295      	cmp	r5, r2
 800fd2c:	d201      	bcs.n	800fd32 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800fd2e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800fd30:	e7d6      	b.n	800fce0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fd32:	f10b 0104 	add.w	r1, fp, #4
 800fd36:	4608      	mov	r0, r1
 800fd38:	9101      	str	r1, [sp, #4]
 800fd3a:	f7fe feea 	bl	800eb12 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800fd3e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800fd42:	9901      	ldr	r1, [sp, #4]
 800fd44:	b122      	cbz	r2, 800fd50 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fd46:	f10b 0018 	add.w	r0, fp, #24
 800fd4a:	f7fe fee2 	bl	800eb12 <uxListRemove>
 800fd4e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800fd50:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800fd54:	f8da 2000 	ldr.w	r2, [sl]
 800fd58:	2314      	movs	r3, #20
 800fd5a:	4290      	cmp	r0, r2
 800fd5c:	bf88      	it	hi
 800fd5e:	f8ca 0000 	strhi.w	r0, [sl]
 800fd62:	fb03 7000 	mla	r0, r3, r0, r7
 800fd66:	f7fe feb1 	bl	800eacc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fd6a:	f8d8 1000 	ldr.w	r1, [r8]
 800fd6e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800fd72:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800fd74:	429a      	cmp	r2, r3
 800fd76:	bf28      	it	cs
 800fd78:	2401      	movcs	r4, #1
 800fd7a:	e7c7      	b.n	800fd0c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800fd7c:	4a0a      	ldr	r2, [pc, #40]	; (800fda8 <xTaskIncrementTick+0x120>)
 800fd7e:	6813      	ldr	r3, [r2, #0]
 800fd80:	3301      	adds	r3, #1
 800fd82:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800fd84:	2400      	movs	r4, #0
	return xSwitchRequired;
 800fd86:	e7b9      	b.n	800fcfc <xTaskIncrementTick+0x74>
 800fd88:	200277f0 	.word	0x200277f0
 800fd8c:	20027870 	.word	0x20027870
 800fd90:	20027380 	.word	0x20027380
 800fd94:	20027384 	.word	0x20027384
 800fd98:	20027828 	.word	0x20027828
 800fd9c:	20027824 	.word	0x20027824
 800fda0:	20027388 	.word	0x20027388
 800fda4:	20027874 	.word	0x20027874
 800fda8:	2002782c 	.word	0x2002782c
 800fdac:	2002737c 	.word	0x2002737c
 800fdb0:	200277f8 	.word	0x200277f8

0800fdb4 <xTaskResumeAll>:
{
 800fdb4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800fdb6:	4c30      	ldr	r4, [pc, #192]	; (800fe78 <xTaskResumeAll+0xc4>)
 800fdb8:	6823      	ldr	r3, [r4, #0]
 800fdba:	b943      	cbnz	r3, 800fdce <xTaskResumeAll+0x1a>
 800fdbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdc0:	f383 8811 	msr	BASEPRI, r3
 800fdc4:	f3bf 8f6f 	isb	sy
 800fdc8:	f3bf 8f4f 	dsb	sy
 800fdcc:	e7fe      	b.n	800fdcc <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800fdce:	f7fe ff19 	bl	800ec04 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800fdd2:	6823      	ldr	r3, [r4, #0]
 800fdd4:	3b01      	subs	r3, #1
 800fdd6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fdd8:	6824      	ldr	r4, [r4, #0]
 800fdda:	b12c      	cbz	r4, 800fde8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800fddc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800fdde:	f7fe ff33 	bl	800ec48 <vPortExitCritical>
}
 800fde2:	4620      	mov	r0, r4
 800fde4:	b003      	add	sp, #12
 800fde6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800fde8:	4b24      	ldr	r3, [pc, #144]	; (800fe7c <xTaskResumeAll+0xc8>)
 800fdea:	681b      	ldr	r3, [r3, #0]
 800fdec:	2b00      	cmp	r3, #0
 800fdee:	d0f5      	beq.n	800fddc <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fdf0:	4d23      	ldr	r5, [pc, #140]	; (800fe80 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 800fdf2:	4e24      	ldr	r6, [pc, #144]	; (800fe84 <xTaskResumeAll+0xd0>)
 800fdf4:	4f24      	ldr	r7, [pc, #144]	; (800fe88 <xTaskResumeAll+0xd4>)
 800fdf6:	e01e      	b.n	800fe36 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fdf8:	68eb      	ldr	r3, [r5, #12]
 800fdfa:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fdfc:	f104 0018 	add.w	r0, r4, #24
 800fe00:	f7fe fe87 	bl	800eb12 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fe04:	1d21      	adds	r1, r4, #4
 800fe06:	4608      	mov	r0, r1
 800fe08:	9101      	str	r1, [sp, #4]
 800fe0a:	f7fe fe82 	bl	800eb12 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fe0e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fe10:	6832      	ldr	r2, [r6, #0]
 800fe12:	9901      	ldr	r1, [sp, #4]
 800fe14:	2014      	movs	r0, #20
 800fe16:	4293      	cmp	r3, r2
 800fe18:	fb00 7003 	mla	r0, r0, r3, r7
 800fe1c:	bf88      	it	hi
 800fe1e:	6033      	strhi	r3, [r6, #0]
 800fe20:	f7fe fe54 	bl	800eacc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fe24:	4b19      	ldr	r3, [pc, #100]	; (800fe8c <xTaskResumeAll+0xd8>)
 800fe26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fe28:	681b      	ldr	r3, [r3, #0]
 800fe2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe2c:	429a      	cmp	r2, r3
 800fe2e:	d302      	bcc.n	800fe36 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800fe30:	4b17      	ldr	r3, [pc, #92]	; (800fe90 <xTaskResumeAll+0xdc>)
 800fe32:	2201      	movs	r2, #1
 800fe34:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fe36:	682b      	ldr	r3, [r5, #0]
 800fe38:	2b00      	cmp	r3, #0
 800fe3a:	d1dd      	bne.n	800fdf8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800fe3c:	b10c      	cbz	r4, 800fe42 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800fe3e:	f7ff fdad 	bl	800f99c <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800fe42:	4d14      	ldr	r5, [pc, #80]	; (800fe94 <xTaskResumeAll+0xe0>)
 800fe44:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800fe46:	b144      	cbz	r4, 800fe5a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800fe48:	4e11      	ldr	r6, [pc, #68]	; (800fe90 <xTaskResumeAll+0xdc>)
 800fe4a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800fe4c:	f7ff ff1c 	bl	800fc88 <xTaskIncrementTick>
 800fe50:	b100      	cbz	r0, 800fe54 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800fe52:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fe54:	3c01      	subs	r4, #1
 800fe56:	d1f9      	bne.n	800fe4c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800fe58:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800fe5a:	4b0d      	ldr	r3, [pc, #52]	; (800fe90 <xTaskResumeAll+0xdc>)
 800fe5c:	681b      	ldr	r3, [r3, #0]
 800fe5e:	2b00      	cmp	r3, #0
 800fe60:	d0bc      	beq.n	800fddc <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800fe62:	4b0d      	ldr	r3, [pc, #52]	; (800fe98 <xTaskResumeAll+0xe4>)
 800fe64:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fe68:	601a      	str	r2, [r3, #0]
 800fe6a:	f3bf 8f4f 	dsb	sy
 800fe6e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800fe72:	2401      	movs	r4, #1
 800fe74:	e7b3      	b.n	800fdde <xTaskResumeAll+0x2a>
 800fe76:	bf00      	nop
 800fe78:	200277f0 	.word	0x200277f0
 800fe7c:	200277e8 	.word	0x200277e8
 800fe80:	20027830 	.word	0x20027830
 800fe84:	200277f8 	.word	0x200277f8
 800fe88:	20027388 	.word	0x20027388
 800fe8c:	2002737c 	.word	0x2002737c
 800fe90:	20027874 	.word	0x20027874
 800fe94:	2002782c 	.word	0x2002782c
 800fe98:	e000ed04 	.word	0xe000ed04

0800fe9c <vTaskDelay>:
	{
 800fe9c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800fe9e:	b940      	cbnz	r0, 800feb2 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 800fea0:	4b0e      	ldr	r3, [pc, #56]	; (800fedc <vTaskDelay+0x40>)
 800fea2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fea6:	601a      	str	r2, [r3, #0]
 800fea8:	f3bf 8f4f 	dsb	sy
 800feac:	f3bf 8f6f 	isb	sy
	}
 800feb0:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800feb2:	4b0b      	ldr	r3, [pc, #44]	; (800fee0 <vTaskDelay+0x44>)
 800feb4:	6819      	ldr	r1, [r3, #0]
 800feb6:	b141      	cbz	r1, 800feca <vTaskDelay+0x2e>
 800feb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800febc:	f383 8811 	msr	BASEPRI, r3
 800fec0:	f3bf 8f6f 	isb	sy
 800fec4:	f3bf 8f4f 	dsb	sy
 800fec8:	e7fe      	b.n	800fec8 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 800feca:	f7ff fecf 	bl	800fc6c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800fece:	f7ff fe2d 	bl	800fb2c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800fed2:	f7ff ff6f 	bl	800fdb4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800fed6:	2800      	cmp	r0, #0
 800fed8:	d0e2      	beq.n	800fea0 <vTaskDelay+0x4>
 800feda:	e7e9      	b.n	800feb0 <vTaskDelay+0x14>
 800fedc:	e000ed04 	.word	0xe000ed04
 800fee0:	200277f0 	.word	0x200277f0

0800fee4 <vTaskSetApplicationTaskTag>:
	{
 800fee4:	b538      	push	{r3, r4, r5, lr}
 800fee6:	460d      	mov	r5, r1
		if( xTask == NULL )
 800fee8:	4604      	mov	r4, r0
 800feea:	b908      	cbnz	r0, 800fef0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800feec:	4b04      	ldr	r3, [pc, #16]	; (800ff00 <vTaskSetApplicationTaskTag+0x1c>)
 800feee:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800fef0:	f7fe fe88 	bl	800ec04 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800fef4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800fef6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800fefa:	f7fe bea5 	b.w	800ec48 <vPortExitCritical>
 800fefe:	bf00      	nop
 800ff00:	2002737c 	.word	0x2002737c

0800ff04 <xTaskCallApplicationTaskHook>:
	{
 800ff04:	4603      	mov	r3, r0
 800ff06:	4608      	mov	r0, r1
		if( xTask == NULL )
 800ff08:	b90b      	cbnz	r3, 800ff0e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800ff0a:	4b03      	ldr	r3, [pc, #12]	; (800ff18 <xTaskCallApplicationTaskHook+0x14>)
 800ff0c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800ff0e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ff10:	b103      	cbz	r3, 800ff14 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800ff12:	4718      	bx	r3
	}
 800ff14:	4618      	mov	r0, r3
 800ff16:	4770      	bx	lr
 800ff18:	2002737c 	.word	0x2002737c

0800ff1c <vTaskStartScheduler>:
{
 800ff1c:	b510      	push	{r4, lr}
 800ff1e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ff20:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ff22:	aa07      	add	r2, sp, #28
 800ff24:	a906      	add	r1, sp, #24
 800ff26:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ff28:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ff2c:	f7fe fcb4 	bl	800e898 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ff30:	9b05      	ldr	r3, [sp, #20]
 800ff32:	9302      	str	r3, [sp, #8]
 800ff34:	9b06      	ldr	r3, [sp, #24]
 800ff36:	9a07      	ldr	r2, [sp, #28]
 800ff38:	4919      	ldr	r1, [pc, #100]	; (800ffa0 <vTaskStartScheduler+0x84>)
 800ff3a:	481a      	ldr	r0, [pc, #104]	; (800ffa4 <vTaskStartScheduler+0x88>)
 800ff3c:	e9cd 4300 	strd	r4, r3, [sp]
 800ff40:	4623      	mov	r3, r4
 800ff42:	f7ff fe2d 	bl	800fba0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800ff46:	b1f0      	cbz	r0, 800ff86 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 800ff48:	f000 fa92 	bl	8010470 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ff4c:	2801      	cmp	r0, #1
 800ff4e:	d11c      	bne.n	800ff8a <vTaskStartScheduler+0x6e>
 800ff50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff54:	f383 8811 	msr	BASEPRI, r3
 800ff58:	f3bf 8f6f 	isb	sy
 800ff5c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ff60:	4a11      	ldr	r2, [pc, #68]	; (800ffa8 <vTaskStartScheduler+0x8c>)
 800ff62:	4912      	ldr	r1, [pc, #72]	; (800ffac <vTaskStartScheduler+0x90>)
 800ff64:	6813      	ldr	r3, [r2, #0]
 800ff66:	3358      	adds	r3, #88	; 0x58
 800ff68:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ff6a:	4b11      	ldr	r3, [pc, #68]	; (800ffb0 <vTaskStartScheduler+0x94>)
 800ff6c:	f04f 31ff 	mov.w	r1, #4294967295
 800ff70:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800ff72:	4b10      	ldr	r3, [pc, #64]	; (800ffb4 <vTaskStartScheduler+0x98>)
 800ff74:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ff76:	4b10      	ldr	r3, [pc, #64]	; (800ffb8 <vTaskStartScheduler+0x9c>)
 800ff78:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800ff7a:	6810      	ldr	r0, [r2, #0]
 800ff7c:	4621      	mov	r1, r4
 800ff7e:	f7ff ffc1 	bl	800ff04 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800ff82:	f7fe fed7 	bl	800ed34 <xPortStartScheduler>
}
 800ff86:	b008      	add	sp, #32
 800ff88:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ff8a:	3001      	adds	r0, #1
 800ff8c:	d1fb      	bne.n	800ff86 <vTaskStartScheduler+0x6a>
 800ff8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff92:	f383 8811 	msr	BASEPRI, r3
 800ff96:	f3bf 8f6f 	isb	sy
 800ff9a:	f3bf 8f4f 	dsb	sy
 800ff9e:	e7fe      	b.n	800ff9e <vTaskStartScheduler+0x82>
 800ffa0:	08028ef9 	.word	0x08028ef9
 800ffa4:	0800fac5 	.word	0x0800fac5
 800ffa8:	2002737c 	.word	0x2002737c
 800ffac:	200000d8 	.word	0x200000d8
 800ffb0:	20027824 	.word	0x20027824
 800ffb4:	20027844 	.word	0x20027844
 800ffb8:	20027870 	.word	0x20027870

0800ffbc <vTaskSwitchContext>:
{
 800ffbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ffbe:	4b1e      	ldr	r3, [pc, #120]	; (8010038 <vTaskSwitchContext+0x7c>)
 800ffc0:	681a      	ldr	r2, [r3, #0]
 800ffc2:	4b1e      	ldr	r3, [pc, #120]	; (801003c <vTaskSwitchContext+0x80>)
 800ffc4:	b112      	cbz	r2, 800ffcc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800ffc6:	2201      	movs	r2, #1
 800ffc8:	601a      	str	r2, [r3, #0]
}
 800ffca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800ffcc:	4c1c      	ldr	r4, [pc, #112]	; (8010040 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 800ffce:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800ffd0:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffd2:	4e1c      	ldr	r6, [pc, #112]	; (8010044 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 800ffd4:	2101      	movs	r1, #1
 800ffd6:	f7ff ff95 	bl	800ff04 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffda:	4a1b      	ldr	r2, [pc, #108]	; (8010048 <vTaskSwitchContext+0x8c>)
 800ffdc:	6833      	ldr	r3, [r6, #0]
 800ffde:	f04f 0c14 	mov.w	ip, #20
 800ffe2:	4617      	mov	r7, r2
 800ffe4:	fb0c f103 	mul.w	r1, ip, r3
 800ffe8:	1850      	adds	r0, r2, r1
 800ffea:	5855      	ldr	r5, [r2, r1]
 800ffec:	b1c5      	cbz	r5, 8010020 <vTaskSwitchContext+0x64>
 800ffee:	6845      	ldr	r5, [r0, #4]
 800fff0:	3108      	adds	r1, #8
 800fff2:	686d      	ldr	r5, [r5, #4]
 800fff4:	6045      	str	r5, [r0, #4]
 800fff6:	440a      	add	r2, r1
 800fff8:	4295      	cmp	r5, r2
 800fffa:	bf04      	itt	eq
 800fffc:	686a      	ldreq	r2, [r5, #4]
 800fffe:	6042      	streq	r2, [r0, #4]
 8010000:	2214      	movs	r2, #20
 8010002:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 8010006:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010008:	6852      	ldr	r2, [r2, #4]
 801000a:	68d2      	ldr	r2, [r2, #12]
 801000c:	6022      	str	r2, [r4, #0]
 801000e:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 8010010:	6820      	ldr	r0, [r4, #0]
 8010012:	f7ff ff77 	bl	800ff04 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010016:	6823      	ldr	r3, [r4, #0]
 8010018:	4a0c      	ldr	r2, [pc, #48]	; (801004c <vTaskSwitchContext+0x90>)
 801001a:	3358      	adds	r3, #88	; 0x58
 801001c:	6013      	str	r3, [r2, #0]
}
 801001e:	e7d4      	b.n	800ffca <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010020:	b943      	cbnz	r3, 8010034 <vTaskSwitchContext+0x78>
 8010022:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010026:	f383 8811 	msr	BASEPRI, r3
 801002a:	f3bf 8f6f 	isb	sy
 801002e:	f3bf 8f4f 	dsb	sy
 8010032:	e7fe      	b.n	8010032 <vTaskSwitchContext+0x76>
 8010034:	3b01      	subs	r3, #1
 8010036:	e7d5      	b.n	800ffe4 <vTaskSwitchContext+0x28>
 8010038:	200277f0 	.word	0x200277f0
 801003c:	20027874 	.word	0x20027874
 8010040:	2002737c 	.word	0x2002737c
 8010044:	200277f8 	.word	0x200277f8
 8010048:	20027388 	.word	0x20027388
 801004c:	200000d8 	.word	0x200000d8

08010050 <vTaskPlaceOnEventList>:
{
 8010050:	b510      	push	{r4, lr}
 8010052:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8010054:	b940      	cbnz	r0, 8010068 <vTaskPlaceOnEventList+0x18>
 8010056:	f04f 0350 	mov.w	r3, #80	; 0x50
 801005a:	f383 8811 	msr	BASEPRI, r3
 801005e:	f3bf 8f6f 	isb	sy
 8010062:	f3bf 8f4f 	dsb	sy
 8010066:	e7fe      	b.n	8010066 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010068:	4b05      	ldr	r3, [pc, #20]	; (8010080 <vTaskPlaceOnEventList+0x30>)
 801006a:	6819      	ldr	r1, [r3, #0]
 801006c:	3118      	adds	r1, #24
 801006e:	f7fe fd39 	bl	800eae4 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8010072:	4620      	mov	r0, r4
 8010074:	2101      	movs	r1, #1
}
 8010076:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 801007a:	f7ff bd57 	b.w	800fb2c <prvAddCurrentTaskToDelayedList>
 801007e:	bf00      	nop
 8010080:	2002737c 	.word	0x2002737c

08010084 <vTaskPlaceOnEventListRestricted>:
	{
 8010084:	b538      	push	{r3, r4, r5, lr}
 8010086:	460d      	mov	r5, r1
 8010088:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 801008a:	b940      	cbnz	r0, 801009e <vTaskPlaceOnEventListRestricted+0x1a>
 801008c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010090:	f383 8811 	msr	BASEPRI, r3
 8010094:	f3bf 8f6f 	isb	sy
 8010098:	f3bf 8f4f 	dsb	sy
 801009c:	e7fe      	b.n	801009c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 801009e:	4b07      	ldr	r3, [pc, #28]	; (80100bc <vTaskPlaceOnEventListRestricted+0x38>)
 80100a0:	6819      	ldr	r1, [r3, #0]
 80100a2:	3118      	adds	r1, #24
 80100a4:	f7fe fd12 	bl	800eacc <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80100a8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80100aa:	4621      	mov	r1, r4
 80100ac:	bf0c      	ite	eq
 80100ae:	4628      	moveq	r0, r5
 80100b0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80100b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80100b8:	f7ff bd38 	b.w	800fb2c <prvAddCurrentTaskToDelayedList>
 80100bc:	2002737c 	.word	0x2002737c

080100c0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80100c0:	68c3      	ldr	r3, [r0, #12]
{
 80100c2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80100c4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80100c6:	b944      	cbnz	r4, 80100da <xTaskRemoveFromEventList+0x1a>
 80100c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100cc:	f383 8811 	msr	BASEPRI, r3
 80100d0:	f3bf 8f6f 	isb	sy
 80100d4:	f3bf 8f4f 	dsb	sy
 80100d8:	e7fe      	b.n	80100d8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80100da:	f104 0118 	add.w	r1, r4, #24
 80100de:	4608      	mov	r0, r1
 80100e0:	9101      	str	r1, [sp, #4]
 80100e2:	f7fe fd16 	bl	800eb12 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80100e6:	4b12      	ldr	r3, [pc, #72]	; (8010130 <xTaskRemoveFromEventList+0x70>)
 80100e8:	9901      	ldr	r1, [sp, #4]
 80100ea:	681b      	ldr	r3, [r3, #0]
 80100ec:	b9eb      	cbnz	r3, 801012a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80100ee:	1d21      	adds	r1, r4, #4
 80100f0:	4608      	mov	r0, r1
 80100f2:	9101      	str	r1, [sp, #4]
 80100f4:	f7fe fd0d 	bl	800eb12 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80100f8:	4a0e      	ldr	r2, [pc, #56]	; (8010134 <xTaskRemoveFromEventList+0x74>)
 80100fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80100fc:	6810      	ldr	r0, [r2, #0]
 80100fe:	9901      	ldr	r1, [sp, #4]
 8010100:	4283      	cmp	r3, r0
 8010102:	bf88      	it	hi
 8010104:	6013      	strhi	r3, [r2, #0]
 8010106:	4a0c      	ldr	r2, [pc, #48]	; (8010138 <xTaskRemoveFromEventList+0x78>)
 8010108:	2014      	movs	r0, #20
 801010a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 801010e:	f7fe fcdd 	bl	800eacc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010112:	4b0a      	ldr	r3, [pc, #40]	; (801013c <xTaskRemoveFromEventList+0x7c>)
 8010114:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010116:	681b      	ldr	r3, [r3, #0]
 8010118:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801011a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 801011c:	bf85      	ittet	hi
 801011e:	4b08      	ldrhi	r3, [pc, #32]	; (8010140 <xTaskRemoveFromEventList+0x80>)
 8010120:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010122:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010124:	6018      	strhi	r0, [r3, #0]
}
 8010126:	b002      	add	sp, #8
 8010128:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 801012a:	4806      	ldr	r0, [pc, #24]	; (8010144 <xTaskRemoveFromEventList+0x84>)
 801012c:	e7ef      	b.n	801010e <xTaskRemoveFromEventList+0x4e>
 801012e:	bf00      	nop
 8010130:	200277f0 	.word	0x200277f0
 8010134:	200277f8 	.word	0x200277f8
 8010138:	20027388 	.word	0x20027388
 801013c:	2002737c 	.word	0x2002737c
 8010140:	20027874 	.word	0x20027874
 8010144:	20027830 	.word	0x20027830

08010148 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010148:	4b03      	ldr	r3, [pc, #12]	; (8010158 <vTaskInternalSetTimeOutState+0x10>)
 801014a:	681b      	ldr	r3, [r3, #0]
 801014c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 801014e:	4b03      	ldr	r3, [pc, #12]	; (801015c <vTaskInternalSetTimeOutState+0x14>)
 8010150:	681b      	ldr	r3, [r3, #0]
 8010152:	6043      	str	r3, [r0, #4]
}
 8010154:	4770      	bx	lr
 8010156:	bf00      	nop
 8010158:	20027828 	.word	0x20027828
 801015c:	20027870 	.word	0x20027870

08010160 <xTaskCheckForTimeOut>:
{
 8010160:	b570      	push	{r4, r5, r6, lr}
 8010162:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8010164:	4605      	mov	r5, r0
 8010166:	b940      	cbnz	r0, 801017a <xTaskCheckForTimeOut+0x1a>
 8010168:	f04f 0350 	mov.w	r3, #80	; 0x50
 801016c:	f383 8811 	msr	BASEPRI, r3
 8010170:	f3bf 8f6f 	isb	sy
 8010174:	f3bf 8f4f 	dsb	sy
 8010178:	e7fe      	b.n	8010178 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 801017a:	b941      	cbnz	r1, 801018e <xTaskCheckForTimeOut+0x2e>
 801017c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010180:	f383 8811 	msr	BASEPRI, r3
 8010184:	f3bf 8f6f 	isb	sy
 8010188:	f3bf 8f4f 	dsb	sy
 801018c:	e7fe      	b.n	801018c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 801018e:	f7fe fd39 	bl	800ec04 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8010192:	4b0f      	ldr	r3, [pc, #60]	; (80101d0 <xTaskCheckForTimeOut+0x70>)
 8010194:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8010196:	6823      	ldr	r3, [r4, #0]
 8010198:	1c5a      	adds	r2, r3, #1
 801019a:	d010      	beq.n	80101be <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 801019c:	480d      	ldr	r0, [pc, #52]	; (80101d4 <xTaskCheckForTimeOut+0x74>)
 801019e:	682e      	ldr	r6, [r5, #0]
 80101a0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80101a2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80101a4:	4286      	cmp	r6, r0
 80101a6:	d001      	beq.n	80101ac <xTaskCheckForTimeOut+0x4c>
 80101a8:	428a      	cmp	r2, r1
 80101aa:	d90f      	bls.n	80101cc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80101ac:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80101ae:	4283      	cmp	r3, r0
 80101b0:	d90a      	bls.n	80101c8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80101b2:	1a5b      	subs	r3, r3, r1
 80101b4:	4413      	add	r3, r2
 80101b6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80101b8:	4628      	mov	r0, r5
 80101ba:	f7ff ffc5 	bl	8010148 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80101be:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80101c0:	f7fe fd42 	bl	800ec48 <vPortExitCritical>
}
 80101c4:	4620      	mov	r0, r4
 80101c6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80101c8:	2300      	movs	r3, #0
 80101ca:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80101cc:	2401      	movs	r4, #1
 80101ce:	e7f7      	b.n	80101c0 <xTaskCheckForTimeOut+0x60>
 80101d0:	20027870 	.word	0x20027870
 80101d4:	20027828 	.word	0x20027828

080101d8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80101d8:	4b01      	ldr	r3, [pc, #4]	; (80101e0 <vTaskMissedYield+0x8>)
 80101da:	2201      	movs	r2, #1
 80101dc:	601a      	str	r2, [r3, #0]
}
 80101de:	4770      	bx	lr
 80101e0:	20027874 	.word	0x20027874

080101e4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80101e4:	4b05      	ldr	r3, [pc, #20]	; (80101fc <xTaskGetSchedulerState+0x18>)
 80101e6:	681b      	ldr	r3, [r3, #0]
 80101e8:	b133      	cbz	r3, 80101f8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80101ea:	4b05      	ldr	r3, [pc, #20]	; (8010200 <xTaskGetSchedulerState+0x1c>)
 80101ec:	681b      	ldr	r3, [r3, #0]
 80101ee:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 80101f0:	bf0c      	ite	eq
 80101f2:	2002      	moveq	r0, #2
 80101f4:	2000      	movne	r0, #0
 80101f6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80101f8:	2001      	movs	r0, #1
	}
 80101fa:	4770      	bx	lr
 80101fc:	20027844 	.word	0x20027844
 8010200:	200277f0 	.word	0x200277f0

08010204 <xTaskPriorityInherit>:
	{
 8010204:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010206:	4604      	mov	r4, r0
 8010208:	b350      	cbz	r0, 8010260 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 801020a:	4a1c      	ldr	r2, [pc, #112]	; (801027c <xTaskPriorityInherit+0x78>)
 801020c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801020e:	6811      	ldr	r1, [r2, #0]
 8010210:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8010212:	428b      	cmp	r3, r1
 8010214:	4616      	mov	r6, r2
 8010216:	d229      	bcs.n	801026c <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010218:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 801021a:	4d19      	ldr	r5, [pc, #100]	; (8010280 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801021c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801021e:	bfa1      	itttt	ge
 8010220:	6832      	ldrge	r2, [r6, #0]
 8010222:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8010224:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8010228:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 801022a:	2214      	movs	r2, #20
 801022c:	fb02 5303 	mla	r3, r2, r3, r5
 8010230:	6942      	ldr	r2, [r0, #20]
 8010232:	429a      	cmp	r2, r3
 8010234:	d116      	bne.n	8010264 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010236:	1d01      	adds	r1, r0, #4
 8010238:	4608      	mov	r0, r1
 801023a:	9101      	str	r1, [sp, #4]
 801023c:	f7fe fc69 	bl	800eb12 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010240:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010242:	4a10      	ldr	r2, [pc, #64]	; (8010284 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010244:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010246:	6810      	ldr	r0, [r2, #0]
 8010248:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 801024a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801024c:	4283      	cmp	r3, r0
 801024e:	f04f 0014 	mov.w	r0, #20
 8010252:	fb00 5003 	mla	r0, r0, r3, r5
 8010256:	bf88      	it	hi
 8010258:	6013      	strhi	r3, [r2, #0]
 801025a:	f7fe fc37 	bl	800eacc <vListInsertEnd>
				xReturn = pdTRUE;
 801025e:	2001      	movs	r0, #1
	}
 8010260:	b002      	add	sp, #8
 8010262:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010264:	6833      	ldr	r3, [r6, #0]
 8010266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010268:	62c3      	str	r3, [r0, #44]	; 0x2c
 801026a:	e7f8      	b.n	801025e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 801026c:	6813      	ldr	r3, [r2, #0]
 801026e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010270:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8010272:	42a0      	cmp	r0, r4
 8010274:	bf2c      	ite	cs
 8010276:	2000      	movcs	r0, #0
 8010278:	2001      	movcc	r0, #1
 801027a:	e7f1      	b.n	8010260 <xTaskPriorityInherit+0x5c>
 801027c:	2002737c 	.word	0x2002737c
 8010280:	20027388 	.word	0x20027388
 8010284:	200277f8 	.word	0x200277f8

08010288 <xTaskPriorityDisinherit>:
	{
 8010288:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 801028a:	b910      	cbnz	r0, 8010292 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 801028c:	2000      	movs	r0, #0
	}
 801028e:	b002      	add	sp, #8
 8010290:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8010292:	4b1c      	ldr	r3, [pc, #112]	; (8010304 <xTaskPriorityDisinherit+0x7c>)
 8010294:	681c      	ldr	r4, [r3, #0]
 8010296:	4284      	cmp	r4, r0
 8010298:	d008      	beq.n	80102ac <xTaskPriorityDisinherit+0x24>
 801029a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801029e:	f383 8811 	msr	BASEPRI, r3
 80102a2:	f3bf 8f6f 	isb	sy
 80102a6:	f3bf 8f4f 	dsb	sy
 80102aa:	e7fe      	b.n	80102aa <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 80102ac:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80102ae:	b943      	cbnz	r3, 80102c2 <xTaskPriorityDisinherit+0x3a>
 80102b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102b4:	f383 8811 	msr	BASEPRI, r3
 80102b8:	f3bf 8f6f 	isb	sy
 80102bc:	f3bf 8f4f 	dsb	sy
 80102c0:	e7fe      	b.n	80102c0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80102c2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80102c4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80102c6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80102c8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80102ca:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80102cc:	d0de      	beq.n	801028c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80102ce:	2b00      	cmp	r3, #0
 80102d0:	d1dc      	bne.n	801028c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80102d2:	1d21      	adds	r1, r4, #4
 80102d4:	4608      	mov	r0, r1
 80102d6:	9101      	str	r1, [sp, #4]
 80102d8:	f7fe fc1b 	bl	800eb12 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80102dc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 80102de:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80102e0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102e2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80102e6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80102e8:	4a07      	ldr	r2, [pc, #28]	; (8010308 <xTaskPriorityDisinherit+0x80>)
 80102ea:	6810      	ldr	r0, [r2, #0]
 80102ec:	4283      	cmp	r3, r0
 80102ee:	bf88      	it	hi
 80102f0:	6013      	strhi	r3, [r2, #0]
 80102f2:	4a06      	ldr	r2, [pc, #24]	; (801030c <xTaskPriorityDisinherit+0x84>)
 80102f4:	2014      	movs	r0, #20
 80102f6:	fb00 2003 	mla	r0, r0, r3, r2
 80102fa:	f7fe fbe7 	bl	800eacc <vListInsertEnd>
					xReturn = pdTRUE;
 80102fe:	2001      	movs	r0, #1
		return xReturn;
 8010300:	e7c5      	b.n	801028e <xTaskPriorityDisinherit+0x6>
 8010302:	bf00      	nop
 8010304:	2002737c 	.word	0x2002737c
 8010308:	200277f8 	.word	0x200277f8
 801030c:	20027388 	.word	0x20027388

08010310 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8010310:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8010312:	4604      	mov	r4, r0
 8010314:	2800      	cmp	r0, #0
 8010316:	d044      	beq.n	80103a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8010318:	6d02      	ldr	r2, [r0, #80]	; 0x50
 801031a:	b942      	cbnz	r2, 801032e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 801031c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010320:	f383 8811 	msr	BASEPRI, r3
 8010324:	f3bf 8f6f 	isb	sy
 8010328:	f3bf 8f4f 	dsb	sy
 801032c:	e7fe      	b.n	801032c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801032e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010330:	4299      	cmp	r1, r3
 8010332:	bf38      	it	cc
 8010334:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8010336:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010338:	428b      	cmp	r3, r1
 801033a:	d032      	beq.n	80103a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 801033c:	2a01      	cmp	r2, #1
 801033e:	d130      	bne.n	80103a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8010340:	4a19      	ldr	r2, [pc, #100]	; (80103a8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8010342:	6812      	ldr	r2, [r2, #0]
 8010344:	4282      	cmp	r2, r0
 8010346:	d108      	bne.n	801035a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8010348:	f04f 0350 	mov.w	r3, #80	; 0x50
 801034c:	f383 8811 	msr	BASEPRI, r3
 8010350:	f3bf 8f6f 	isb	sy
 8010354:	f3bf 8f4f 	dsb	sy
 8010358:	e7fe      	b.n	8010358 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801035a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801035c:	4d13      	ldr	r5, [pc, #76]	; (80103ac <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 801035e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010360:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010362:	f04f 0214 	mov.w	r2, #20
 8010366:	fb02 5303 	mla	r3, r2, r3, r5
 801036a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801036c:	bfa4      	itt	ge
 801036e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8010372:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010374:	429a      	cmp	r2, r3
 8010376:	d114      	bne.n	80103a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010378:	1d01      	adds	r1, r0, #4
 801037a:	4608      	mov	r0, r1
 801037c:	9101      	str	r1, [sp, #4]
 801037e:	f7fe fbc8 	bl	800eb12 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8010382:	4a0b      	ldr	r2, [pc, #44]	; (80103b0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8010384:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010386:	6810      	ldr	r0, [r2, #0]
 8010388:	9901      	ldr	r1, [sp, #4]
 801038a:	4283      	cmp	r3, r0
 801038c:	f04f 0014 	mov.w	r0, #20
 8010390:	fb00 5003 	mla	r0, r0, r3, r5
 8010394:	bf88      	it	hi
 8010396:	6013      	strhi	r3, [r2, #0]
	}
 8010398:	b003      	add	sp, #12
 801039a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 801039e:	f7fe bb95 	b.w	800eacc <vListInsertEnd>
	}
 80103a2:	b003      	add	sp, #12
 80103a4:	bd30      	pop	{r4, r5, pc}
 80103a6:	bf00      	nop
 80103a8:	2002737c 	.word	0x2002737c
 80103ac:	20027388 	.word	0x20027388
 80103b0:	200277f8 	.word	0x200277f8

080103b4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80103b4:	4b04      	ldr	r3, [pc, #16]	; (80103c8 <pvTaskIncrementMutexHeldCount+0x14>)
 80103b6:	681a      	ldr	r2, [r3, #0]
 80103b8:	b11a      	cbz	r2, 80103c2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80103ba:	6819      	ldr	r1, [r3, #0]
 80103bc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80103be:	3201      	adds	r2, #1
 80103c0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80103c2:	6818      	ldr	r0, [r3, #0]
	}
 80103c4:	4770      	bx	lr
 80103c6:	bf00      	nop
 80103c8:	2002737c 	.word	0x2002737c

080103cc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80103cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80103ce:	4c11      	ldr	r4, [pc, #68]	; (8010414 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80103d0:	f7fe fc18 	bl	800ec04 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80103d4:	6825      	ldr	r5, [r4, #0]
 80103d6:	b9bd      	cbnz	r5, 8010408 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80103d8:	4f0f      	ldr	r7, [pc, #60]	; (8010418 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80103da:	4e10      	ldr	r6, [pc, #64]	; (801041c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80103dc:	4638      	mov	r0, r7
 80103de:	f7fe fb67 	bl	800eab0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80103e2:	4630      	mov	r0, r6
 80103e4:	f7fe fb64 	bl	800eab0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80103e8:	4b0d      	ldr	r3, [pc, #52]	; (8010420 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80103ea:	4a0e      	ldr	r2, [pc, #56]	; (8010424 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80103ec:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80103ee:	4b0e      	ldr	r3, [pc, #56]	; (8010428 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80103f0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80103f2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80103f4:	200a      	movs	r0, #10
 80103f6:	4b0d      	ldr	r3, [pc, #52]	; (801042c <prvCheckForValidListAndQueue+0x60>)
 80103f8:	9500      	str	r5, [sp, #0]
 80103fa:	f7fe fe1b 	bl	800f034 <xQueueGenericCreateStatic>
 80103fe:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8010400:	b110      	cbz	r0, 8010408 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010402:	490b      	ldr	r1, [pc, #44]	; (8010430 <prvCheckForValidListAndQueue+0x64>)
 8010404:	f7ff f9e8 	bl	800f7d8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8010408:	b003      	add	sp, #12
 801040a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 801040e:	f7fe bc1b 	b.w	800ec48 <vPortExitCritical>
 8010412:	bf00      	nop
 8010414:	2002799c 	.word	0x2002799c
 8010418:	20027920 	.word	0x20027920
 801041c:	20027934 	.word	0x20027934
 8010420:	20027878 	.word	0x20027878
 8010424:	20027880 	.word	0x20027880
 8010428:	2002787c 	.word	0x2002787c
 801042c:	2002794c 	.word	0x2002794c
 8010430:	08028efe 	.word	0x08028efe

08010434 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8010434:	4291      	cmp	r1, r2
{
 8010436:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010438:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801043a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 801043c:	d80a      	bhi.n	8010454 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801043e:	1ad2      	subs	r2, r2, r3
 8010440:	6983      	ldr	r3, [r0, #24]
 8010442:	429a      	cmp	r2, r3
 8010444:	d20d      	bcs.n	8010462 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010446:	4b08      	ldr	r3, [pc, #32]	; (8010468 <prvInsertTimerInActiveList+0x34>)
 8010448:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801044a:	6818      	ldr	r0, [r3, #0]
 801044c:	f7fe fb4a 	bl	800eae4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8010450:	2000      	movs	r0, #0
}
 8010452:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010454:	429a      	cmp	r2, r3
 8010456:	d201      	bcs.n	801045c <prvInsertTimerInActiveList+0x28>
 8010458:	4299      	cmp	r1, r3
 801045a:	d202      	bcs.n	8010462 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801045c:	4b03      	ldr	r3, [pc, #12]	; (801046c <prvInsertTimerInActiveList+0x38>)
 801045e:	1d01      	adds	r1, r0, #4
 8010460:	e7f3      	b.n	801044a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8010462:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8010464:	e7f5      	b.n	8010452 <prvInsertTimerInActiveList+0x1e>
 8010466:	bf00      	nop
 8010468:	2002787c 	.word	0x2002787c
 801046c:	20027878 	.word	0x20027878

08010470 <xTimerCreateTimerTask>:
{
 8010470:	b510      	push	{r4, lr}
 8010472:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8010474:	f7ff ffaa 	bl	80103cc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8010478:	4b12      	ldr	r3, [pc, #72]	; (80104c4 <xTimerCreateTimerTask+0x54>)
 801047a:	681b      	ldr	r3, [r3, #0]
 801047c:	b1b3      	cbz	r3, 80104ac <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 801047e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010480:	aa07      	add	r2, sp, #28
 8010482:	a906      	add	r1, sp, #24
 8010484:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8010486:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801048a:	f7fe fa11 	bl	800e8b0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 801048e:	9b05      	ldr	r3, [sp, #20]
 8010490:	9302      	str	r3, [sp, #8]
 8010492:	9b06      	ldr	r3, [sp, #24]
 8010494:	9301      	str	r3, [sp, #4]
 8010496:	2302      	movs	r3, #2
 8010498:	9300      	str	r3, [sp, #0]
 801049a:	9a07      	ldr	r2, [sp, #28]
 801049c:	490a      	ldr	r1, [pc, #40]	; (80104c8 <xTimerCreateTimerTask+0x58>)
 801049e:	480b      	ldr	r0, [pc, #44]	; (80104cc <xTimerCreateTimerTask+0x5c>)
 80104a0:	4623      	mov	r3, r4
 80104a2:	f7ff fb7d 	bl	800fba0 <xTaskCreateStatic>
 80104a6:	4b0a      	ldr	r3, [pc, #40]	; (80104d0 <xTimerCreateTimerTask+0x60>)
 80104a8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80104aa:	b940      	cbnz	r0, 80104be <xTimerCreateTimerTask+0x4e>
 80104ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104b0:	f383 8811 	msr	BASEPRI, r3
 80104b4:	f3bf 8f6f 	isb	sy
 80104b8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80104bc:	e7fe      	b.n	80104bc <xTimerCreateTimerTask+0x4c>
}
 80104be:	2001      	movs	r0, #1
 80104c0:	b008      	add	sp, #32
 80104c2:	bd10      	pop	{r4, pc}
 80104c4:	2002799c 	.word	0x2002799c
 80104c8:	08028f03 	.word	0x08028f03
 80104cc:	080105a9 	.word	0x080105a9
 80104d0:	200279a0 	.word	0x200279a0

080104d4 <xTimerGenericCommand>:
{
 80104d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80104d6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80104d8:	4604      	mov	r4, r0
{
 80104da:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80104dc:	b940      	cbnz	r0, 80104f0 <xTimerGenericCommand+0x1c>
 80104de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104e2:	f383 8811 	msr	BASEPRI, r3
 80104e6:	f3bf 8f6f 	isb	sy
 80104ea:	f3bf 8f4f 	dsb	sy
 80104ee:	e7fe      	b.n	80104ee <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80104f0:	4d0d      	ldr	r5, [pc, #52]	; (8010528 <xTimerGenericCommand+0x54>)
 80104f2:	6828      	ldr	r0, [r5, #0]
 80104f4:	b180      	cbz	r0, 8010518 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80104f6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80104f8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80104fc:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80104fe:	dc0d      	bgt.n	801051c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010500:	f7ff fe70 	bl	80101e4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010504:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010506:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010508:	bf08      	it	eq
 801050a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 801050c:	6828      	ldr	r0, [r5, #0]
 801050e:	bf18      	it	ne
 8010510:	461a      	movne	r2, r3
 8010512:	4669      	mov	r1, sp
 8010514:	f7fe fe44 	bl	800f1a0 <xQueueGenericSend>
}
 8010518:	b004      	add	sp, #16
 801051a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 801051c:	2300      	movs	r3, #0
 801051e:	4669      	mov	r1, sp
 8010520:	f7fe fef0 	bl	800f304 <xQueueGenericSendFromISR>
 8010524:	e7f8      	b.n	8010518 <xTimerGenericCommand+0x44>
 8010526:	bf00      	nop
 8010528:	2002799c 	.word	0x2002799c

0801052c <prvSwitchTimerLists>:
{
 801052c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801052e:	4d1c      	ldr	r5, [pc, #112]	; (80105a0 <prvSwitchTimerLists+0x74>)
{
 8010530:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8010532:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8010534:	682b      	ldr	r3, [r5, #0]
 8010536:	681a      	ldr	r2, [r3, #0]
 8010538:	b92a      	cbnz	r2, 8010546 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 801053a:	4a1a      	ldr	r2, [pc, #104]	; (80105a4 <prvSwitchTimerLists+0x78>)
 801053c:	6811      	ldr	r1, [r2, #0]
 801053e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8010540:	6013      	str	r3, [r2, #0]
}
 8010542:	b005      	add	sp, #20
 8010544:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010546:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010548:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801054a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801054c:	1d21      	adds	r1, r4, #4
 801054e:	4608      	mov	r0, r1
 8010550:	9103      	str	r1, [sp, #12]
 8010552:	f7fe fade 	bl	800eb12 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010556:	6a23      	ldr	r3, [r4, #32]
 8010558:	4620      	mov	r0, r4
 801055a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801055c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8010560:	9903      	ldr	r1, [sp, #12]
 8010562:	f013 0f04 	tst.w	r3, #4
 8010566:	d0e5      	beq.n	8010534 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8010568:	69a3      	ldr	r3, [r4, #24]
 801056a:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 801056c:	429e      	cmp	r6, r3
 801056e:	d205      	bcs.n	801057c <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010570:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8010572:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010574:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010576:	f7fe fab5 	bl	800eae4 <vListInsert>
 801057a:	e7db      	b.n	8010534 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 801057c:	2300      	movs	r3, #0
 801057e:	9700      	str	r7, [sp, #0]
 8010580:	4632      	mov	r2, r6
 8010582:	4619      	mov	r1, r3
 8010584:	4620      	mov	r0, r4
 8010586:	f7ff ffa5 	bl	80104d4 <xTimerGenericCommand>
				configASSERT( xResult );
 801058a:	2800      	cmp	r0, #0
 801058c:	d1d2      	bne.n	8010534 <prvSwitchTimerLists+0x8>
 801058e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010592:	f383 8811 	msr	BASEPRI, r3
 8010596:	f3bf 8f6f 	isb	sy
 801059a:	f3bf 8f4f 	dsb	sy
 801059e:	e7fe      	b.n	801059e <prvSwitchTimerLists+0x72>
 80105a0:	20027878 	.word	0x20027878
 80105a4:	2002787c 	.word	0x2002787c

080105a8 <prvTimerTask>:
{
 80105a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80105ac:	4f77      	ldr	r7, [pc, #476]	; (801078c <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 80105ae:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 801079c <prvTimerTask+0x1f4>
{
 80105b2:	b087      	sub	sp, #28
 80105b4:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80105b6:	683b      	ldr	r3, [r7, #0]
 80105b8:	f8d3 b000 	ldr.w	fp, [r3]
 80105bc:	f1bb 0f00 	cmp.w	fp, #0
 80105c0:	d028      	beq.n	8010614 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80105c2:	68db      	ldr	r3, [r3, #12]
 80105c4:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80105c8:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 80105ca:	4e71      	ldr	r6, [pc, #452]	; (8010790 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 80105cc:	f7ff fb4e 	bl	800fc6c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80105d0:	f7ff fb54 	bl	800fc7c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80105d4:	6833      	ldr	r3, [r6, #0]
 80105d6:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80105d8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80105da:	46b0      	mov	r8, r6
 80105dc:	d31c      	bcc.n	8010618 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 80105de:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80105e0:	b31c      	cbz	r4, 801062a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80105e2:	4b6c      	ldr	r3, [pc, #432]	; (8010794 <prvTimerTask+0x1ec>)
 80105e4:	681b      	ldr	r3, [r3, #0]
 80105e6:	681c      	ldr	r4, [r3, #0]
 80105e8:	fab4 f484 	clz	r4, r4
 80105ec:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80105ee:	4b6a      	ldr	r3, [pc, #424]	; (8010798 <prvTimerTask+0x1f0>)
 80105f0:	4622      	mov	r2, r4
 80105f2:	6818      	ldr	r0, [r3, #0]
 80105f4:	ebab 0105 	sub.w	r1, fp, r5
 80105f8:	f7ff f92d 	bl	800f856 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80105fc:	f7ff fbda 	bl	800fdb4 <xTaskResumeAll>
 8010600:	b978      	cbnz	r0, 8010622 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8010602:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8010606:	f8ca 3000 	str.w	r3, [sl]
 801060a:	f3bf 8f4f 	dsb	sy
 801060e:	f3bf 8f6f 	isb	sy
 8010612:	e006      	b.n	8010622 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8010614:	2401      	movs	r4, #1
 8010616:	e7d8      	b.n	80105ca <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8010618:	f7ff ff88 	bl	801052c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801061c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 801061e:	f7ff fbc9 	bl	800fdb4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010622:	4e5d      	ldr	r6, [pc, #372]	; (8010798 <prvTimerTask+0x1f0>)
 8010624:	f04f 0b00 	mov.w	fp, #0
 8010628:	e035      	b.n	8010696 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801062a:	4583      	cmp	fp, r0
 801062c:	d8df      	bhi.n	80105ee <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 801062e:	f7ff fbc1 	bl	800fdb4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010632:	f8d9 3000 	ldr.w	r3, [r9]
 8010636:	68db      	ldr	r3, [r3, #12]
 8010638:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801063a:	1d30      	adds	r0, r6, #4
 801063c:	f7fe fa69 	bl	800eb12 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010640:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8010644:	0758      	lsls	r0, r3, #29
 8010646:	d518      	bpl.n	801067a <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010648:	69b1      	ldr	r1, [r6, #24]
 801064a:	465b      	mov	r3, fp
 801064c:	462a      	mov	r2, r5
 801064e:	4459      	add	r1, fp
 8010650:	4630      	mov	r0, r6
 8010652:	f7ff feef 	bl	8010434 <prvInsertTimerInActiveList>
 8010656:	b1a0      	cbz	r0, 8010682 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8010658:	9400      	str	r4, [sp, #0]
 801065a:	4623      	mov	r3, r4
 801065c:	465a      	mov	r2, fp
 801065e:	4621      	mov	r1, r4
 8010660:	4630      	mov	r0, r6
 8010662:	f7ff ff37 	bl	80104d4 <xTimerGenericCommand>
			configASSERT( xResult );
 8010666:	b960      	cbnz	r0, 8010682 <prvTimerTask+0xda>
 8010668:	f04f 0350 	mov.w	r3, #80	; 0x50
 801066c:	f383 8811 	msr	BASEPRI, r3
 8010670:	f3bf 8f6f 	isb	sy
 8010674:	f3bf 8f4f 	dsb	sy
 8010678:	e7fe      	b.n	8010678 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801067a:	f023 0301 	bic.w	r3, r3, #1
 801067e:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010682:	6a33      	ldr	r3, [r6, #32]
 8010684:	4630      	mov	r0, r6
 8010686:	4798      	blx	r3
}
 8010688:	e7cb      	b.n	8010622 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 801068a:	9b03      	ldr	r3, [sp, #12]
 801068c:	9905      	ldr	r1, [sp, #20]
 801068e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8010690:	9b02      	ldr	r3, [sp, #8]
 8010692:	2b00      	cmp	r3, #0
 8010694:	da0a      	bge.n	80106ac <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010696:	6830      	ldr	r0, [r6, #0]
 8010698:	2200      	movs	r2, #0
 801069a:	a902      	add	r1, sp, #8
 801069c:	f7fe fee8 	bl	800f470 <xQueueReceive>
 80106a0:	2800      	cmp	r0, #0
 80106a2:	d088      	beq.n	80105b6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80106a4:	9b02      	ldr	r3, [sp, #8]
 80106a6:	9804      	ldr	r0, [sp, #16]
 80106a8:	2b00      	cmp	r3, #0
 80106aa:	dbee      	blt.n	801068a <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80106ac:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80106ae:	6963      	ldr	r3, [r4, #20]
 80106b0:	b9a3      	cbnz	r3, 80106dc <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 80106b2:	f7ff fae3 	bl	800fc7c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80106b6:	f8d8 3000 	ldr.w	r3, [r8]
 80106ba:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80106bc:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80106be:	d201      	bcs.n	80106c4 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 80106c0:	f7ff ff34 	bl	801052c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80106c4:	9b02      	ldr	r3, [sp, #8]
 80106c6:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 80106ca:	2b09      	cmp	r3, #9
 80106cc:	d8e3      	bhi.n	8010696 <prvTimerTask+0xee>
 80106ce:	e8df f003 	tbb	[pc, r3]
 80106d2:	0909      	.short	0x0909
 80106d4:	543b3409 	.word	0x543b3409
 80106d8:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80106dc:	1d20      	adds	r0, r4, #4
 80106de:	f7fe fa18 	bl	800eb12 <uxListRemove>
 80106e2:	e7e6      	b.n	80106b2 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80106e4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80106e8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80106ea:	f043 0301 	orr.w	r3, r3, #1
 80106ee:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80106f2:	9b03      	ldr	r3, [sp, #12]
 80106f4:	462a      	mov	r2, r5
 80106f6:	4419      	add	r1, r3
 80106f8:	4620      	mov	r0, r4
 80106fa:	f7ff fe9b 	bl	8010434 <prvInsertTimerInActiveList>
 80106fe:	2800      	cmp	r0, #0
 8010700:	d0c9      	beq.n	8010696 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010702:	6a23      	ldr	r3, [r4, #32]
 8010704:	4620      	mov	r0, r4
 8010706:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010708:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801070c:	0759      	lsls	r1, r3, #29
 801070e:	d5c2      	bpl.n	8010696 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010710:	69a2      	ldr	r2, [r4, #24]
 8010712:	9903      	ldr	r1, [sp, #12]
 8010714:	f8cd b000 	str.w	fp, [sp]
 8010718:	2300      	movs	r3, #0
 801071a:	440a      	add	r2, r1
 801071c:	4620      	mov	r0, r4
 801071e:	4619      	mov	r1, r3
 8010720:	f7ff fed8 	bl	80104d4 <xTimerGenericCommand>
							configASSERT( xResult );
 8010724:	2800      	cmp	r0, #0
 8010726:	d1b6      	bne.n	8010696 <prvTimerTask+0xee>
 8010728:	f04f 0350 	mov.w	r3, #80	; 0x50
 801072c:	f383 8811 	msr	BASEPRI, r3
 8010730:	f3bf 8f6f 	isb	sy
 8010734:	f3bf 8f4f 	dsb	sy
 8010738:	e7fe      	b.n	8010738 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801073a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801073e:	f023 0301 	bic.w	r3, r3, #1
 8010742:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8010746:	e7a6      	b.n	8010696 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010748:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 801074c:	9903      	ldr	r1, [sp, #12]
 801074e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010750:	f043 0301 	orr.w	r3, r3, #1
 8010754:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010758:	b941      	cbnz	r1, 801076c <prvTimerTask+0x1c4>
 801075a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801075e:	f383 8811 	msr	BASEPRI, r3
 8010762:	f3bf 8f6f 	isb	sy
 8010766:	f3bf 8f4f 	dsb	sy
 801076a:	e7fe      	b.n	801076a <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801076c:	462b      	mov	r3, r5
 801076e:	462a      	mov	r2, r5
 8010770:	4429      	add	r1, r5
 8010772:	4620      	mov	r0, r4
 8010774:	f7ff fe5e 	bl	8010434 <prvInsertTimerInActiveList>
					break;
 8010778:	e78d      	b.n	8010696 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 801077a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801077e:	079a      	lsls	r2, r3, #30
 8010780:	d4dd      	bmi.n	801073e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 8010782:	4620      	mov	r0, r4
 8010784:	f7fe f956 	bl	800ea34 <vPortFree>
 8010788:	e785      	b.n	8010696 <prvTimerTask+0xee>
 801078a:	bf00      	nop
 801078c:	20027878 	.word	0x20027878
 8010790:	20027948 	.word	0x20027948
 8010794:	2002787c 	.word	0x2002787c
 8010798:	2002799c 	.word	0x2002799c
 801079c:	e000ed04 	.word	0xe000ed04

080107a0 <is_leap_year>:
is_leap_year(uint16_t year)
{
    div_t           d;

    /* year must be divisible by 4 to be a leap year */
    if (year & 3)
 80107a0:	0783      	lsls	r3, r0, #30
{
 80107a2:	b507      	push	{r0, r1, r2, lr}
 80107a4:	4601      	mov	r1, r0
    if (year & 3)
 80107a6:	d10e      	bne.n	80107c6 <is_leap_year+0x26>
        return 0;

    /* If there is a remainder after division by 100, year is not divisible by 100 or 400 */
    d = div(year, 100);
 80107a8:	2264      	movs	r2, #100	; 0x64
 80107aa:	4668      	mov	r0, sp
 80107ac:	f015 f83a 	bl	8025824 <div>
    if (d.rem)
 80107b0:	9b01      	ldr	r3, [sp, #4]
 80107b2:	b953      	cbnz	r3, 80107ca <is_leap_year+0x2a>
        return 1;

    /* If the quotient is divisible by 4, then year is divisible by 400 */
    if ((d.quot & 3) == 0)
 80107b4:	9b00      	ldr	r3, [sp, #0]
 80107b6:	f013 0f03 	tst.w	r3, #3
        return 0;
 80107ba:	bf0c      	ite	eq
 80107bc:	2001      	moveq	r0, #1
 80107be:	2000      	movne	r0, #0
        return 1;

    return 0;
}
 80107c0:	b003      	add	sp, #12
 80107c2:	f85d fb04 	ldr.w	pc, [sp], #4
        return 0;
 80107c6:	2000      	movs	r0, #0
 80107c8:	e7fa      	b.n	80107c0 <is_leap_year+0x20>
        return 1;
 80107ca:	2001      	movs	r0, #1
 80107cc:	e7f8      	b.n	80107c0 <is_leap_year+0x20>

080107ce <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80107ce:	8880      	ldrh	r0, [r0, #4]
 80107d0:	4770      	bx	lr

080107d2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80107d2:	2300      	movs	r3, #0
 80107d4:	8083      	strh	r3, [r0, #4]
 80107d6:	4770      	bx	lr

080107d8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80107d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107da:	6803      	ldr	r3, [r0, #0]
 80107dc:	4605      	mov	r5, r0
 80107de:	460e      	mov	r6, r1
 80107e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80107e2:	2100      	movs	r1, #0
 80107e4:	4798      	blx	r3
 80107e6:	682b      	ldr	r3, [r5, #0]
 80107e8:	4604      	mov	r4, r0
 80107ea:	6a1b      	ldr	r3, [r3, #32]
 80107ec:	4628      	mov	r0, r5
 80107ee:	4798      	blx	r3
 80107f0:	88ab      	ldrh	r3, [r5, #4]
 80107f2:	1b34      	subs	r4, r6, r4
 80107f4:	b2a4      	uxth	r4, r4
 80107f6:	fbb4 f4f0 	udiv	r4, r4, r0
 80107fa:	42a3      	cmp	r3, r4
 80107fc:	d805      	bhi.n	801080a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80107fe:	4b0e      	ldr	r3, [pc, #56]	; (8010838 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8010800:	4a0e      	ldr	r2, [pc, #56]	; (801083c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8010802:	211e      	movs	r1, #30
 8010804:	480e      	ldr	r0, [pc, #56]	; (8010840 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8010806:	f014 ffdb 	bl	80257c0 <__assert_func>
 801080a:	682b      	ldr	r3, [r5, #0]
 801080c:	2100      	movs	r1, #0
 801080e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010810:	4628      	mov	r0, r5
 8010812:	4798      	blx	r3
 8010814:	682b      	ldr	r3, [r5, #0]
 8010816:	4607      	mov	r7, r0
 8010818:	6a1b      	ldr	r3, [r3, #32]
 801081a:	4628      	mov	r0, r5
 801081c:	4798      	blx	r3
 801081e:	1bf3      	subs	r3, r6, r7
 8010820:	b29b      	uxth	r3, r3
 8010822:	fbb3 f2f0 	udiv	r2, r3, r0
 8010826:	fb02 3010 	mls	r0, r2, r0, r3
 801082a:	b118      	cbz	r0, 8010834 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 801082c:	4b05      	ldr	r3, [pc, #20]	; (8010844 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 801082e:	4a03      	ldr	r2, [pc, #12]	; (801083c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8010830:	211f      	movs	r1, #31
 8010832:	e7e7      	b.n	8010804 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8010834:	4620      	mov	r0, r4
 8010836:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010838:	08028f0b 	.word	0x08028f0b
 801083c:	08029076 	.word	0x08029076
 8010840:	08028f20 	.word	0x08028f20
 8010844:	08028f4e 	.word	0x08028f4e

08010848 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010848:	b538      	push	{r3, r4, r5, lr}
 801084a:	6803      	ldr	r3, [r0, #0]
 801084c:	6a1b      	ldr	r3, [r3, #32]
 801084e:	460d      	mov	r5, r1
 8010850:	4604      	mov	r4, r0
 8010852:	4798      	blx	r3
 8010854:	4285      	cmp	r5, r0
 8010856:	d905      	bls.n	8010864 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8010858:	4b0c      	ldr	r3, [pc, #48]	; (801088c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 801085a:	4a0d      	ldr	r2, [pc, #52]	; (8010890 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 801085c:	2130      	movs	r1, #48	; 0x30
 801085e:	480d      	ldr	r0, [pc, #52]	; (8010894 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8010860:	f014 ffae 	bl	80257c0 <__assert_func>
 8010864:	6823      	ldr	r3, [r4, #0]
 8010866:	88a5      	ldrh	r5, [r4, #4]
 8010868:	69db      	ldr	r3, [r3, #28]
 801086a:	4620      	mov	r0, r4
 801086c:	4798      	blx	r3
 801086e:	4285      	cmp	r5, r0
 8010870:	d303      	bcc.n	801087a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8010872:	4b09      	ldr	r3, [pc, #36]	; (8010898 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8010874:	4a06      	ldr	r2, [pc, #24]	; (8010890 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8010876:	2131      	movs	r1, #49	; 0x31
 8010878:	e7f1      	b.n	801085e <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 801087a:	6823      	ldr	r3, [r4, #0]
 801087c:	88a1      	ldrh	r1, [r4, #4]
 801087e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010880:	4620      	mov	r0, r4
 8010882:	4798      	blx	r3
 8010884:	88a3      	ldrh	r3, [r4, #4]
 8010886:	3301      	adds	r3, #1
 8010888:	80a3      	strh	r3, [r4, #4]
 801088a:	bd38      	pop	{r3, r4, r5, pc}
 801088c:	08028fc8 	.word	0x08028fc8
 8010890:	080290b9 	.word	0x080290b9
 8010894:	08028f20 	.word	0x08028f20
 8010898:	08028fdf 	.word	0x08028fdf

0801089c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 801089c:	b570      	push	{r4, r5, r6, lr}
 801089e:	6803      	ldr	r3, [r0, #0]
 80108a0:	6a1b      	ldr	r3, [r3, #32]
 80108a2:	4616      	mov	r6, r2
 80108a4:	4604      	mov	r4, r0
 80108a6:	460d      	mov	r5, r1
 80108a8:	4798      	blx	r3
 80108aa:	4286      	cmp	r6, r0
 80108ac:	d905      	bls.n	80108ba <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80108ae:	4b06      	ldr	r3, [pc, #24]	; (80108c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80108b0:	4a06      	ldr	r2, [pc, #24]	; (80108cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80108b2:	4807      	ldr	r0, [pc, #28]	; (80108d0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80108b4:	213a      	movs	r1, #58	; 0x3a
 80108b6:	f014 ff83 	bl	80257c0 <__assert_func>
 80108ba:	6823      	ldr	r3, [r4, #0]
 80108bc:	4629      	mov	r1, r5
 80108be:	4620      	mov	r0, r4
 80108c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80108c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108c6:	4718      	bx	r3
 80108c8:	08028fc8 	.word	0x08028fc8
 80108cc:	0802902c 	.word	0x0802902c
 80108d0:	08028f20 	.word	0x08028f20

080108d4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80108d4:	4770      	bx	lr
	...

080108d8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80108d8:	4a02      	ldr	r2, [pc, #8]	; (80108e4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80108da:	6002      	str	r2, [r0, #0]
 80108dc:	2200      	movs	r2, #0
 80108de:	8082      	strh	r2, [r0, #4]
 80108e0:	4770      	bx	lr
 80108e2:	bf00      	nop
 80108e4:	08029000 	.word	0x08029000

080108e8 <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 80108e8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80108ec:	4770      	bx	lr

080108ee <_ZNK8touchgfx12DrawableList11getCircularEv>:
 80108ee:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80108f2:	4770      	bx	lr

080108f4 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 80108f4:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 80108f8:	4770      	bx	lr

080108fa <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 80108fa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80108fc:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 80108fe:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 8010902:	b200      	sxth	r0, r0
 8010904:	4770      	bx	lr

08010906 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 8010906:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 801090a:	4770      	bx	lr

0801090c <_ZN8touchgfx12DrawableListD1Ev>:
 801090c:	4770      	bx	lr

0801090e <_ZN8touchgfx12DrawableListD0Ev>:
 801090e:	b510      	push	{r4, lr}
 8010910:	214c      	movs	r1, #76	; 0x4c
 8010912:	4604      	mov	r4, r0
 8010914:	f014 ff26 	bl	8025764 <_ZdlPvj>
 8010918:	4620      	mov	r0, r4
 801091a:	bd10      	pop	{r4, pc}

0801091c <_ZN8touchgfx12DrawableListC1Ev>:
 801091c:	2101      	movs	r1, #1
 801091e:	2200      	movs	r2, #0
 8010920:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010924:	4910      	ldr	r1, [pc, #64]	; (8010968 <_ZN8touchgfx12DrawableListC1Ev+0x4c>)
 8010926:	8082      	strh	r2, [r0, #4]
 8010928:	80c2      	strh	r2, [r0, #6]
 801092a:	8102      	strh	r2, [r0, #8]
 801092c:	8142      	strh	r2, [r0, #10]
 801092e:	8182      	strh	r2, [r0, #12]
 8010930:	81c2      	strh	r2, [r0, #14]
 8010932:	8202      	strh	r2, [r0, #16]
 8010934:	8242      	strh	r2, [r0, #18]
 8010936:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801093a:	61c2      	str	r2, [r0, #28]
 801093c:	8402      	strh	r2, [r0, #32]
 801093e:	8442      	strh	r2, [r0, #34]	; 0x22
 8010940:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010944:	6282      	str	r2, [r0, #40]	; 0x28
 8010946:	6001      	str	r1, [r0, #0]
 8010948:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 801094c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 8010950:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8010954:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8010958:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 801095c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8010960:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 8010964:	4770      	bx	lr
 8010966:	bf00      	nop
 8010968:	08029100 	.word	0x08029100

0801096c <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 801096c:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 8010970:	8681      	strh	r1, [r0, #52]	; 0x34
 8010972:	86c2      	strh	r2, [r0, #54]	; 0x36
 8010974:	4770      	bx	lr

08010976 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 8010976:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 801097a:	4770      	bx	lr

0801097c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 801097c:	b538      	push	{r3, r4, r5, lr}
 801097e:	4605      	mov	r5, r0
 8010980:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010982:	b308      	cbz	r0, 80109c8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 8010984:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 8010988:	2a00      	cmp	r2, #0
 801098a:	dd21      	ble.n	80109d0 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 801098c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8010990:	b1db      	cbz	r3, 80109ca <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 8010992:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 8010996:	1e63      	subs	r3, r4, #1
 8010998:	1e54      	subs	r4, r2, #1
 801099a:	441c      	add	r4, r3
 801099c:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 80109a0:	fb94 f4f2 	sdiv	r4, r4, r2
 80109a4:	3401      	adds	r4, #1
 80109a6:	b224      	sxth	r4, r4
 80109a8:	b923      	cbnz	r3, 80109b4 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 80109aa:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 80109ae:	429c      	cmp	r4, r3
 80109b0:	bfa8      	it	ge
 80109b2:	461c      	movge	r4, r3
 80109b4:	6803      	ldr	r3, [r0, #0]
 80109b6:	68db      	ldr	r3, [r3, #12]
 80109b8:	4798      	blx	r3
 80109ba:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 80109be:	1ac0      	subs	r0, r0, r3
 80109c0:	42a0      	cmp	r0, r4
 80109c2:	bfa8      	it	ge
 80109c4:	4620      	movge	r0, r4
 80109c6:	b200      	sxth	r0, r0
 80109c8:	bd38      	pop	{r3, r4, r5, pc}
 80109ca:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 80109ce:	e7e2      	b.n	8010996 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 80109d0:	2000      	movs	r0, #0
 80109d2:	e7f9      	b.n	80109c8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

080109d4 <_ZN8touchgfx12DrawableList9setOffsetEl>:
 80109d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109d8:	4604      	mov	r4, r0
 80109da:	460d      	mov	r5, r1
 80109dc:	6321      	str	r1, [r4, #48]	; 0x30
 80109de:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 80109e2:	2b00      	cmp	r3, #0
 80109e4:	f000 80eb 	beq.w	8010bbe <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80109e8:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 80109ec:	2b00      	cmp	r3, #0
 80109ee:	f000 80e6 	beq.w	8010bbe <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80109f2:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 80109f6:	2b00      	cmp	r3, #0
 80109f8:	f000 80e1 	beq.w	8010bbe <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80109fc:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80109fe:	2800      	cmp	r0, #0
 8010a00:	f000 80dd 	beq.w	8010bbe <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 8010a04:	6803      	ldr	r3, [r0, #0]
 8010a06:	68db      	ldr	r3, [r3, #12]
 8010a08:	4798      	blx	r3
 8010a0a:	2800      	cmp	r0, #0
 8010a0c:	f000 80d7 	beq.w	8010bbe <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 8010a10:	2d00      	cmp	r5, #0
 8010a12:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010a16:	bfc1      	itttt	gt
 8010a18:	fb95 f2f1 	sdivgt	r2, r5, r1
 8010a1c:	3201      	addgt	r2, #1
 8010a1e:	4253      	neggt	r3, r2
 8010a20:	fb01 5512 	mlsgt	r5, r1, r2, r5
 8010a24:	f1c1 0200 	rsb	r2, r1, #0
 8010a28:	bfcc      	ite	gt
 8010a2a:	b21b      	sxthgt	r3, r3
 8010a2c:	2300      	movle	r3, #0
 8010a2e:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 8010a32:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 8010a36:	42aa      	cmp	r2, r5
 8010a38:	bfa1      	itttt	ge
 8010a3a:	fb95 f2f1 	sdivge	r2, r5, r1
 8010a3e:	1a9b      	subge	r3, r3, r2
 8010a40:	b21b      	sxthge	r3, r3
 8010a42:	fb01 5512 	mlsge	r5, r1, r2, r5
 8010a46:	b167      	cbz	r7, 8010a62 <_ZN8touchgfx12DrawableList9setOffsetEl+0x8e>
 8010a48:	f9b4 1038 	ldrsh.w	r1, [r4, #56]	; 0x38
 8010a4c:	fb93 f2f1 	sdiv	r2, r3, r1
 8010a50:	fb01 3312 	mls	r3, r1, r2, r3
 8010a54:	440b      	add	r3, r1
 8010a56:	fb93 f2f1 	sdiv	r2, r3, r1
 8010a5a:	fb01 3312 	mls	r3, r1, r2, r3
 8010a5e:	b21b      	sxth	r3, r3
 8010a60:	e004      	b.n	8010a6c <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 8010a62:	2b00      	cmp	r3, #0
 8010a64:	da64      	bge.n	8010b30 <_ZN8touchgfx12DrawableList9setOffsetEl+0x15c>
 8010a66:	fb01 5513 	mls	r5, r1, r3, r5
 8010a6a:	463b      	mov	r3, r7
 8010a6c:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 8010a70:	b1be      	cbz	r6, 8010aa2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8010a72:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 8010a76:	459e      	cmp	lr, r3
 8010a78:	d068      	beq.n	8010b4c <_ZN8touchgfx12DrawableList9setOffsetEl+0x178>
 8010a7a:	2601      	movs	r6, #1
 8010a7c:	4286      	cmp	r6, r0
 8010a7e:	da67      	bge.n	8010b50 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17c>
 8010a80:	eb0e 0106 	add.w	r1, lr, r6
 8010a84:	199a      	adds	r2, r3, r6
 8010a86:	b14f      	cbz	r7, 8010a9c <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 8010a88:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 8010a8c:	fb91 f8fc 	sdiv	r8, r1, ip
 8010a90:	fb0c 1118 	mls	r1, ip, r8, r1
 8010a94:	fb92 f8fc 	sdiv	r8, r2, ip
 8010a98:	fb0c 2218 	mls	r2, ip, r8, r2
 8010a9c:	428b      	cmp	r3, r1
 8010a9e:	d151      	bne.n	8010b44 <_ZN8touchgfx12DrawableList9setOffsetEl+0x170>
 8010aa0:	4276      	negs	r6, r6
 8010aa2:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 8010aa6:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8010aa8:	1b92      	subs	r2, r2, r6
 8010aaa:	4402      	add	r2, r0
 8010aac:	2700      	movs	r7, #0
 8010aae:	fb92 f1f0 	sdiv	r1, r2, r0
 8010ab2:	fb00 2011 	mls	r0, r0, r1, r2
 8010ab6:	87e0      	strh	r0, [r4, #62]	; 0x3e
 8010ab8:	b2ad      	uxth	r5, r5
 8010aba:	46ba      	mov	sl, r7
 8010abc:	f04f 0b01 	mov.w	fp, #1
 8010ac0:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8010ac4:	42ba      	cmp	r2, r7
 8010ac6:	dd77      	ble.n	8010bb8 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 8010ac8:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 8010acc:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010ace:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 8010ad2:	443b      	add	r3, r7
 8010ad4:	fb93 f8f2 	sdiv	r8, r3, r2
 8010ad8:	fb02 3818 	mls	r8, r2, r8, r3
 8010adc:	fa1f f888 	uxth.w	r8, r8
 8010ae0:	6803      	ldr	r3, [r0, #0]
 8010ae2:	4441      	add	r1, r8
 8010ae4:	689b      	ldr	r3, [r3, #8]
 8010ae6:	b209      	sxth	r1, r1
 8010ae8:	4798      	blx	r3
 8010aea:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 8010aee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8010af0:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 8010af4:	6802      	ldr	r2, [r0, #0]
 8010af6:	4681      	mov	r9, r0
 8010af8:	fa1f fe87 	uxth.w	lr, r7
 8010afc:	b351      	cbz	r1, 8010b54 <_ZN8touchgfx12DrawableList9setOffsetEl+0x180>
 8010afe:	18e9      	adds	r1, r5, r3
 8010b00:	fb1c 110e 	smlabb	r1, ip, lr, r1
 8010b04:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8010b06:	b209      	sxth	r1, r1
 8010b08:	2200      	movs	r2, #0
 8010b0a:	4798      	blx	r3
 8010b0c:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 8010b10:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 8010b14:	443b      	add	r3, r7
 8010b16:	b322      	cbz	r2, 8010b62 <_ZN8touchgfx12DrawableList9setOffsetEl+0x18e>
 8010b18:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8010b1c:	fb93 f1f2 	sdiv	r1, r3, r2
 8010b20:	fb02 3311 	mls	r3, r2, r1, r3
 8010b24:	2b00      	cmp	r3, #0
 8010b26:	da22      	bge.n	8010b6e <_ZN8touchgfx12DrawableList9setOffsetEl+0x19a>
 8010b28:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 8010b2c:	3701      	adds	r7, #1
 8010b2e:	e7c7      	b.n	8010ac0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xec>
 8010b30:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8010b34:	18c6      	adds	r6, r0, r3
 8010b36:	4296      	cmp	r6, r2
 8010b38:	dd98      	ble.n	8010a6c <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 8010b3a:	1b92      	subs	r2, r2, r6
 8010b3c:	fb01 5502 	mla	r5, r1, r2, r5
 8010b40:	4413      	add	r3, r2
 8010b42:	e78c      	b.n	8010a5e <_ZN8touchgfx12DrawableList9setOffsetEl+0x8a>
 8010b44:	4596      	cmp	lr, r2
 8010b46:	d0ac      	beq.n	8010aa2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8010b48:	3601      	adds	r6, #1
 8010b4a:	e797      	b.n	8010a7c <_ZN8touchgfx12DrawableList9setOffsetEl+0xa8>
 8010b4c:	2600      	movs	r6, #0
 8010b4e:	e7a8      	b.n	8010aa2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8010b50:	4606      	mov	r6, r0
 8010b52:	e7a6      	b.n	8010aa2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8010b54:	442b      	add	r3, r5
 8010b56:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 8010b5a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8010b5c:	fa0f f28c 	sxth.w	r2, ip
 8010b60:	e7d3      	b.n	8010b0a <_ZN8touchgfx12DrawableList9setOffsetEl+0x136>
 8010b62:	2b00      	cmp	r3, #0
 8010b64:	dbe0      	blt.n	8010b28 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 8010b66:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8010b6a:	4293      	cmp	r3, r2
 8010b6c:	dadc      	bge.n	8010b28 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 8010b6e:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 8010b72:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8010b76:	b132      	cbz	r2, 8010b86 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 8010b78:	42be      	cmp	r6, r7
 8010b7a:	dc04      	bgt.n	8010b86 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 8010b7c:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8010b80:	4432      	add	r2, r6
 8010b82:	4297      	cmp	r7, r2
 8010b84:	dbd2      	blt.n	8010b2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 8010b86:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010b88:	9301      	str	r3, [sp, #4]
 8010b8a:	6802      	ldr	r2, [r0, #0]
 8010b8c:	68d2      	ldr	r2, [r2, #12]
 8010b8e:	4790      	blx	r2
 8010b90:	2800      	cmp	r0, #0
 8010b92:	d0cb      	beq.n	8010b2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 8010b94:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010b96:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8010b9a:	6801      	ldr	r1, [r0, #0]
 8010b9c:	9b01      	ldr	r3, [sp, #4]
 8010b9e:	4442      	add	r2, r8
 8010ba0:	b21b      	sxth	r3, r3
 8010ba2:	f8d1 8008 	ldr.w	r8, [r1, #8]
 8010ba6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010ba8:	b212      	sxth	r2, r2
 8010baa:	47c0      	blx	r8
 8010bac:	f8d9 3000 	ldr.w	r3, [r9]
 8010bb0:	4648      	mov	r0, r9
 8010bb2:	695b      	ldr	r3, [r3, #20]
 8010bb4:	4798      	blx	r3
 8010bb6:	e7b9      	b.n	8010b2c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 8010bb8:	2301      	movs	r3, #1
 8010bba:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010bbe:	b003      	add	sp, #12
 8010bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010bc4 <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 8010bc4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010bc6:	4770      	bx	lr

08010bc8 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 8010bc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bca:	1c54      	adds	r4, r2, #1
 8010bcc:	db2f      	blt.n	8010c2e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 8010bce:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 8010bd2:	4294      	cmp	r4, r2
 8010bd4:	dd2b      	ble.n	8010c2e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 8010bd6:	b354      	cbz	r4, 8010c2e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 8010bd8:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 8010bdc:	b33e      	cbz	r6, 8010c2e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 8010bde:	1c53      	adds	r3, r2, #1
 8010be0:	d008      	beq.n	8010bf4 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 8010be2:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 8010be6:	1ad2      	subs	r2, r2, r3
 8010be8:	4422      	add	r2, r4
 8010bea:	fb92 f3f4 	sdiv	r3, r2, r4
 8010bee:	fb04 2213 	mls	r2, r4, r3, r2
 8010bf2:	b212      	sxth	r2, r2
 8010bf4:	3201      	adds	r2, #1
 8010bf6:	b212      	sxth	r2, r2
 8010bf8:	4294      	cmp	r4, r2
 8010bfa:	dd18      	ble.n	8010c2e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 8010bfc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8010bfe:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 8010c02:	b295      	uxth	r5, r2
 8010c04:	442b      	add	r3, r5
 8010c06:	b21b      	sxth	r3, r3
 8010c08:	b127      	cbz	r7, 8010c14 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 8010c0a:	fb93 f7f6 	sdiv	r7, r3, r6
 8010c0e:	fb06 3317 	mls	r3, r6, r7, r3
 8010c12:	b21b      	sxth	r3, r3
 8010c14:	428b      	cmp	r3, r1
 8010c16:	d108      	bne.n	8010c2a <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 8010c18:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 8010c1c:	4402      	add	r2, r0
 8010c1e:	fb92 f0f4 	sdiv	r0, r2, r4
 8010c22:	fb04 2010 	mls	r0, r4, r0, r2
 8010c26:	b200      	sxth	r0, r0
 8010c28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c2a:	1c6a      	adds	r2, r5, #1
 8010c2c:	e7e3      	b.n	8010bf6 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 8010c2e:	f04f 30ff 	mov.w	r0, #4294967295
 8010c32:	e7f9      	b.n	8010c28 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

08010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 8010c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c38:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8010c3a:	4604      	mov	r4, r0
 8010c3c:	b913      	cbnz	r3, 8010c44 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x10>
 8010c3e:	8743      	strh	r3, [r0, #58]	; 0x3a
 8010c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c44:	f7ff fe9a 	bl	801097c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 8010c48:	8760      	strh	r0, [r4, #58]	; 0x3a
 8010c4a:	4620      	mov	r0, r4
 8010c4c:	f000 fdba 	bl	80117c4 <_ZN8touchgfx9Container9removeAllEv>
 8010c50:	2700      	movs	r7, #0
 8010c52:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 8010c56:	42bb      	cmp	r3, r7
 8010c58:	dd32      	ble.n	8010cc0 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x8c>
 8010c5a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010c5c:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 8010c60:	6803      	ldr	r3, [r0, #0]
 8010c62:	4439      	add	r1, r7
 8010c64:	689b      	ldr	r3, [r3, #8]
 8010c66:	b209      	sxth	r1, r1
 8010c68:	4798      	blx	r3
 8010c6a:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8010c6e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8010c70:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010c72:	4606      	mov	r6, r0
 8010c74:	b1ca      	cbz	r2, 8010caa <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x76>
 8010c76:	2200      	movs	r2, #0
 8010c78:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
 8010c7c:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 8010c80:	4611      	mov	r1, r2
 8010c82:	b21d      	sxth	r5, r3
 8010c84:	f7f1 fc42 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8010c88:	4642      	mov	r2, r8
 8010c8a:	4629      	mov	r1, r5
 8010c8c:	4630      	mov	r0, r6
 8010c8e:	f7f1 faaa 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010c92:	6970      	ldr	r0, [r6, #20]
 8010c94:	b118      	cbz	r0, 8010c9e <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x6a>
 8010c96:	6803      	ldr	r3, [r0, #0]
 8010c98:	4631      	mov	r1, r6
 8010c9a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010c9c:	4798      	blx	r3
 8010c9e:	4631      	mov	r1, r6
 8010ca0:	4620      	mov	r0, r4
 8010ca2:	f000 fdf5 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010ca6:	3701      	adds	r7, #1
 8010ca8:	e7d3      	b.n	8010c52 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x1e>
 8010caa:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8010cae:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
 8010cb2:	4611      	mov	r1, r2
 8010cb4:	b21d      	sxth	r5, r3
 8010cb6:	f7f1 fc29 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8010cba:	462a      	mov	r2, r5
 8010cbc:	4641      	mov	r1, r8
 8010cbe:	e7e5      	b.n	8010c8c <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x58>
 8010cc0:	2300      	movs	r3, #0
 8010cc2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010cc6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010cc8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010cca:	4620      	mov	r0, r4
 8010ccc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010cd0:	f7ff be80 	b.w	80109d4 <_ZN8touchgfx12DrawableList9setOffsetEl>

08010cd4 <_ZN8touchgfx12DrawableList8setWidthEs>:
 8010cd4:	8101      	strh	r1, [r0, #8]
 8010cd6:	f7ff bfad 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010cda <_ZN8touchgfx12DrawableList9setHeightEs>:
 8010cda:	8141      	strh	r1, [r0, #10]
 8010cdc:	f7ff bfaa 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010ce0 <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 8010ce0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010ce4:	b121      	cbz	r1, 8010cf0 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 8010ce6:	b92b      	cbnz	r3, 8010cf4 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 8010ce8:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8010cec:	f7ff bfa2 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 8010cf0:	2b00      	cmp	r3, #0
 8010cf2:	d1f9      	bne.n	8010ce8 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 8010cf4:	4770      	bx	lr

08010cf6 <_ZN8touchgfx12DrawableList11setCircularEb>:
 8010cf6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8010cfa:	b121      	cbz	r1, 8010d06 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 8010cfc:	b92b      	cbnz	r3, 8010d0a <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 8010cfe:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 8010d02:	f7ff bf97 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 8010d06:	2b00      	cmp	r3, #0
 8010d08:	d1f9      	bne.n	8010cfe <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 8010d0a:	4770      	bx	lr

08010d0c <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 8010d0c:	b410      	push	{r4}
 8010d0e:	6441      	str	r1, [r0, #68]	; 0x44
 8010d10:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8010d14:	6483      	str	r3, [r0, #72]	; 0x48
 8010d16:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010d1a:	f7ff bf8b 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010d1e <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 8010d1e:	8701      	strh	r1, [r0, #56]	; 0x38
 8010d20:	f7ff bf88 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010d24 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 8010d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d26:	4604      	mov	r4, r0
 8010d28:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010d2a:	460e      	mov	r6, r1
 8010d2c:	b1c0      	cbz	r0, 8010d60 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 8010d2e:	6803      	ldr	r3, [r0, #0]
 8010d30:	68db      	ldr	r3, [r3, #12]
 8010d32:	4798      	blx	r3
 8010d34:	b1a0      	cbz	r0, 8010d60 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 8010d36:	f04f 35ff 	mov.w	r5, #4294967295
 8010d3a:	462a      	mov	r2, r5
 8010d3c:	4631      	mov	r1, r6
 8010d3e:	4620      	mov	r0, r4
 8010d40:	f7ff ff42 	bl	8010bc8 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 8010d44:	1c43      	adds	r3, r0, #1
 8010d46:	4605      	mov	r5, r0
 8010d48:	d00a      	beq.n	8010d60 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 8010d4a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010d4c:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8010d50:	6803      	ldr	r3, [r0, #0]
 8010d52:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010d54:	689f      	ldr	r7, [r3, #8]
 8010d56:	442a      	add	r2, r5
 8010d58:	4633      	mov	r3, r6
 8010d5a:	b212      	sxth	r2, r2
 8010d5c:	47b8      	blx	r7
 8010d5e:	e7ec      	b.n	8010d3a <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 8010d60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010d62 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 8010d62:	b570      	push	{r4, r5, r6, lr}
 8010d64:	790b      	ldrb	r3, [r1, #4]
 8010d66:	4604      	mov	r4, r0
 8010d68:	2b00      	cmp	r3, #0
 8010d6a:	d158      	bne.n	8010e1e <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 8010d6c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010d70:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 8010d74:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 8010d78:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 8010d7c:	6803      	ldr	r3, [r0, #0]
 8010d7e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010d82:	4798      	blx	r3
 8010d84:	6823      	ldr	r3, [r4, #0]
 8010d86:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8010d8a:	4601      	mov	r1, r0
 8010d8c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8010d90:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010d94:	4620      	mov	r0, r4
 8010d96:	4798      	blx	r3
 8010d98:	4601      	mov	r1, r0
 8010d9a:	4620      	mov	r0, r4
 8010d9c:	47a8      	blx	r5
 8010d9e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8010da2:	2800      	cmp	r0, #0
 8010da4:	f000 809f 	beq.w	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010da8:	6803      	ldr	r3, [r0, #0]
 8010daa:	68db      	ldr	r3, [r3, #12]
 8010dac:	4798      	blx	r3
 8010dae:	2800      	cmp	r0, #0
 8010db0:	f000 8099 	beq.w	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010db4:	6823      	ldr	r3, [r4, #0]
 8010db6:	4620      	mov	r0, r4
 8010db8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010dbc:	4798      	blx	r3
 8010dbe:	b358      	cbz	r0, 8010e18 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 8010dc0:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 8010dc4:	6823      	ldr	r3, [r4, #0]
 8010dc6:	4620      	mov	r0, r4
 8010dc8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010dcc:	4798      	blx	r3
 8010dce:	6823      	ldr	r3, [r4, #0]
 8010dd0:	1a2d      	subs	r5, r5, r0
 8010dd2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010dd6:	4620      	mov	r0, r4
 8010dd8:	4798      	blx	r3
 8010dda:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 8010dde:	6823      	ldr	r3, [r4, #0]
 8010de0:	fb16 f600 	smulbb	r6, r6, r0
 8010de4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8010de8:	4620      	mov	r0, r4
 8010dea:	4798      	blx	r3
 8010dec:	b120      	cbz	r0, 8010df8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 8010dee:	4435      	add	r5, r6
 8010df0:	fb95 f1f6 	sdiv	r1, r5, r6
 8010df4:	fb06 5511 	mls	r5, r6, r1, r5
 8010df8:	2d00      	cmp	r5, #0
 8010dfa:	db74      	blt.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010dfc:	42b5      	cmp	r5, r6
 8010dfe:	da72      	bge.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010e00:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8010e04:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8010e08:	fb95 f1f1 	sdiv	r1, r5, r1
 8010e0c:	6803      	ldr	r3, [r0, #0]
 8010e0e:	b209      	sxth	r1, r1
 8010e10:	689b      	ldr	r3, [r3, #8]
 8010e12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e16:	4718      	bx	r3
 8010e18:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8010e1c:	e7d2      	b.n	8010dc4 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 8010e1e:	2b01      	cmp	r3, #1
 8010e20:	d161      	bne.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010e22:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8010e26:	2b00      	cmp	r3, #0
 8010e28:	d14a      	bne.n	8010ec0 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 8010e2a:	6803      	ldr	r3, [r0, #0]
 8010e2c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8010e30:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 8010e34:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010e38:	4798      	blx	r3
 8010e3a:	4601      	mov	r1, r0
 8010e3c:	4620      	mov	r0, r4
 8010e3e:	47b0      	blx	r6
 8010e40:	4601      	mov	r1, r0
 8010e42:	4620      	mov	r0, r4
 8010e44:	47a8      	blx	r5
 8010e46:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8010e4a:	2800      	cmp	r0, #0
 8010e4c:	d04b      	beq.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010e4e:	6803      	ldr	r3, [r0, #0]
 8010e50:	68db      	ldr	r3, [r3, #12]
 8010e52:	4798      	blx	r3
 8010e54:	2800      	cmp	r0, #0
 8010e56:	d046      	beq.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010e58:	6823      	ldr	r3, [r4, #0]
 8010e5a:	4620      	mov	r0, r4
 8010e5c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010e60:	4798      	blx	r3
 8010e62:	b330      	cbz	r0, 8010eb2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 8010e64:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 8010e68:	6823      	ldr	r3, [r4, #0]
 8010e6a:	4620      	mov	r0, r4
 8010e6c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010e70:	4798      	blx	r3
 8010e72:	6823      	ldr	r3, [r4, #0]
 8010e74:	1a2d      	subs	r5, r5, r0
 8010e76:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010e7a:	4620      	mov	r0, r4
 8010e7c:	4798      	blx	r3
 8010e7e:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 8010e82:	6823      	ldr	r3, [r4, #0]
 8010e84:	fb16 f600 	smulbb	r6, r6, r0
 8010e88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	4798      	blx	r3
 8010e90:	b190      	cbz	r0, 8010eb8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 8010e92:	19a9      	adds	r1, r5, r6
 8010e94:	fb91 f3f6 	sdiv	r3, r1, r6
 8010e98:	fb06 1113 	mls	r1, r6, r3, r1
 8010e9c:	2900      	cmp	r1, #0
 8010e9e:	db22      	blt.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010ea0:	42b1      	cmp	r1, r6
 8010ea2:	da20      	bge.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010ea4:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 8010ea8:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8010eac:	fb91 f1f3 	sdiv	r1, r1, r3
 8010eb0:	e7ac      	b.n	8010e0c <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 8010eb2:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8010eb6:	e7d7      	b.n	8010e68 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 8010eb8:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 8010ebc:	1a69      	subs	r1, r5, r1
 8010ebe:	e7ed      	b.n	8010e9c <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 8010ec0:	2b02      	cmp	r3, #2
 8010ec2:	d110      	bne.n	8010ee6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010ec4:	6803      	ldr	r3, [r0, #0]
 8010ec6:	e9d3 6530 	ldrd	r6, r5, [r3, #192]	; 0xc0
 8010eca:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010ece:	4798      	blx	r3
 8010ed0:	4601      	mov	r1, r0
 8010ed2:	4620      	mov	r0, r4
 8010ed4:	47b0      	blx	r6
 8010ed6:	462b      	mov	r3, r5
 8010ed8:	4601      	mov	r1, r0
 8010eda:	f04f 32ff 	mov.w	r2, #4294967295
 8010ede:	4620      	mov	r0, r4
 8010ee0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ee4:	4718      	bx	r3
 8010ee6:	bd70      	pop	{r4, r5, r6, pc}

08010ee8 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 8010ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010eec:	6803      	ldr	r3, [r0, #0]
 8010eee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8010ef2:	4605      	mov	r5, r0
 8010ef4:	460e      	mov	r6, r1
 8010ef6:	4617      	mov	r7, r2
 8010ef8:	4798      	blx	r3
 8010efa:	4604      	mov	r4, r0
 8010efc:	b9d8      	cbnz	r0, 8010f36 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 8010efe:	682b      	ldr	r3, [r5, #0]
 8010f00:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 8010f04:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010f08:	42be      	cmp	r6, r7
 8010f0a:	4628      	mov	r0, r5
 8010f0c:	bfa8      	it	ge
 8010f0e:	463e      	movge	r6, r7
 8010f10:	4798      	blx	r3
 8010f12:	4580      	cmp	r8, r0
 8010f14:	da07      	bge.n	8010f26 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 8010f16:	682b      	ldr	r3, [r5, #0]
 8010f18:	4628      	mov	r0, r5
 8010f1a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010f1e:	4798      	blx	r3
 8010f20:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 8010f24:	1b04      	subs	r4, r0, r4
 8010f26:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 8010f2a:	434c      	muls	r4, r1
 8010f2c:	4264      	negs	r4, r4
 8010f2e:	1be1      	subs	r1, r4, r7
 8010f30:	428e      	cmp	r6, r1
 8010f32:	bfb8      	it	lt
 8010f34:	460e      	movlt	r6, r1
 8010f36:	4630      	mov	r0, r6
 8010f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f3c <_ZN8touchgfx10ScrollListD1Ev>:
 8010f3c:	4770      	bx	lr

08010f3e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 8010f3e:	b570      	push	{r4, r5, r6, lr}
 8010f40:	460d      	mov	r5, r1
 8010f42:	4604      	mov	r4, r0
 8010f44:	4616      	mov	r6, r2
 8010f46:	f000 fa22 	bl	801138e <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 8010f4a:	682b      	ldr	r3, [r5, #0]
 8010f4c:	4628      	mov	r0, r5
 8010f4e:	68db      	ldr	r3, [r3, #12]
 8010f50:	4798      	blx	r3
 8010f52:	4633      	mov	r3, r6
 8010f54:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 8010f58:	4629      	mov	r1, r5
 8010f5a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010f5e:	2200      	movs	r2, #0
 8010f60:	f7ff fed4 	bl	8010d0c <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 8010f64:	6823      	ldr	r3, [r4, #0]
 8010f66:	4620      	mov	r0, r4
 8010f68:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010f6c:	2100      	movs	r1, #0
 8010f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f72:	4718      	bx	r3

08010f74 <_ZN8touchgfx10ScrollBase10initializeEv>:
 8010f74:	302c      	adds	r0, #44	; 0x2c
 8010f76:	f7ff be5d 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010f7a <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 8010f7a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010f7e:	6803      	ldr	r3, [r0, #0]
 8010f80:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010f84:	460f      	mov	r7, r1
 8010f86:	4604      	mov	r4, r0
 8010f88:	4798      	blx	r3
 8010f8a:	4601      	mov	r1, r0
 8010f8c:	4620      	mov	r0, r4
 8010f8e:	f000 fa4b 	bl	8011428 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010f92:	2f00      	cmp	r7, #0
 8010f94:	4606      	mov	r6, r0
 8010f96:	db6b      	blt.n	8011070 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8010f98:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 8010f9c:	4648      	mov	r0, r9
 8010f9e:	f7ff fcea 	bl	8010976 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8010fa2:	42b8      	cmp	r0, r7
 8010fa4:	dd64      	ble.n	8011070 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8010fa6:	f9b4 507c 	ldrsh.w	r5, [r4, #124]	; 0x7c
 8010faa:	2d00      	cmp	r5, #0
 8010fac:	d060      	beq.n	8011070 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8010fae:	6823      	ldr	r3, [r4, #0]
 8010fb0:	4278      	negs	r0, r7
 8010fb2:	4345      	muls	r5, r0
 8010fb4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010fb8:	4620      	mov	r0, r4
 8010fba:	4798      	blx	r3
 8010fbc:	2800      	cmp	r0, #0
 8010fbe:	d05a      	beq.n	8011076 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010fc0:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8010fc4:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 8010fc8:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 8010fcc:	4419      	add	r1, r3
 8010fce:	eba8 0801 	sub.w	r8, r8, r1
 8010fd2:	4648      	mov	r0, r9
 8010fd4:	fa0f f888 	sxth.w	r8, r8
 8010fd8:	f7ff fc89 	bl	80108ee <_ZNK8touchgfx12DrawableList11getCircularEv>
 8010fdc:	2800      	cmp	r0, #0
 8010fde:	d051      	beq.n	8011084 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x10a>
 8010fe0:	46b2      	mov	sl, r6
 8010fe2:	4651      	mov	r1, sl
 8010fe4:	4620      	mov	r0, r4
 8010fe6:	f000 fa1f 	bl	8011428 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010fea:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 8010fee:	4240      	negs	r0, r0
 8010ff0:	fb90 f0f3 	sdiv	r0, r0, r3
 8010ff4:	b200      	sxth	r0, r0
 8010ff6:	4287      	cmp	r7, r0
 8010ff8:	d03a      	beq.n	8011070 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8010ffa:	ebaa 0a03 	sub.w	sl, sl, r3
 8010ffe:	eba8 0303 	sub.w	r3, r8, r3
 8011002:	1af3      	subs	r3, r6, r3
 8011004:	4553      	cmp	r3, sl
 8011006:	ddec      	ble.n	8010fe2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 8011008:	4648      	mov	r0, r9
 801100a:	f7ff fcb4 	bl	8010976 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 801100e:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8011012:	fb00 f701 	mul.w	r7, r0, r1
 8011016:	eba8 0101 	sub.w	r1, r8, r1
 801101a:	1a71      	subs	r1, r6, r1
 801101c:	4620      	mov	r0, r4
 801101e:	f000 fa03 	bl	8011428 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8011022:	eb05 0a07 	add.w	sl, r5, r7
 8011026:	eba5 0906 	sub.w	r9, r5, r6
 801102a:	ebaa 0a06 	sub.w	sl, sl, r6
 801102e:	1beb      	subs	r3, r5, r7
 8011030:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 8011034:	ea8a 71ea 	eor.w	r1, sl, sl, asr #31
 8011038:	1ac3      	subs	r3, r0, r3
 801103a:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 801103e:	eba1 71ea 	sub.w	r1, r1, sl, asr #31
 8011042:	4291      	cmp	r1, r2
 8011044:	bfb8      	it	lt
 8011046:	46d1      	movlt	r9, sl
 8011048:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 801104c:	1b45      	subs	r5, r0, r5
 801104e:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8011052:	d52f      	bpl.n	80110b4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x13a>
 8011054:	4269      	negs	r1, r5
 8011056:	4291      	cmp	r1, r2
 8011058:	dd10      	ble.n	801107c <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 801105a:	2b00      	cmp	r3, #0
 801105c:	da10      	bge.n	8011080 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x106>
 801105e:	425d      	negs	r5, r3
 8011060:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 8011064:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 8011068:	4295      	cmp	r5, r2
 801106a:	bfb4      	ite	lt
 801106c:	1af6      	sublt	r6, r6, r3
 801106e:	444e      	addge	r6, r9
 8011070:	4630      	mov	r0, r6
 8011072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011076:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 801107a:	e7a3      	b.n	8010fc4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4a>
 801107c:	462b      	mov	r3, r5
 801107e:	e7ee      	b.n	801105e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe4>
 8011080:	461d      	mov	r5, r3
 8011082:	e7ed      	b.n	8011060 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>
 8011084:	42ae      	cmp	r6, r5
 8011086:	db13      	blt.n	80110b0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x136>
 8011088:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 801108c:	fb98 f3f2 	sdiv	r3, r8, r2
 8011090:	b21b      	sxth	r3, r3
 8011092:	2b00      	cmp	r3, #0
 8011094:	dd05      	ble.n	80110a2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 8011096:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 801109a:	b131      	cbz	r1, 80110aa <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x130>
 801109c:	3b01      	subs	r3, #1
 801109e:	fb02 5503 	mla	r5, r2, r3, r5
 80110a2:	42ae      	cmp	r6, r5
 80110a4:	bfa8      	it	ge
 80110a6:	462e      	movge	r6, r5
 80110a8:	e7e2      	b.n	8011070 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 80110aa:	4445      	add	r5, r8
 80110ac:	1aad      	subs	r5, r5, r2
 80110ae:	e7f8      	b.n	80110a2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 80110b0:	462e      	mov	r6, r5
 80110b2:	e7dd      	b.n	8011070 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 80110b4:	4295      	cmp	r5, r2
 80110b6:	dcd0      	bgt.n	801105a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe0>
 80110b8:	462b      	mov	r3, r5
 80110ba:	e7d1      	b.n	8011060 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>

080110bc <_ZN8touchgfx10ScrollListD0Ev>:
 80110bc:	b510      	push	{r4, lr}
 80110be:	21c4      	movs	r1, #196	; 0xc4
 80110c0:	4604      	mov	r4, r0
 80110c2:	f014 fb4f 	bl	8025764 <_ZdlPvj>
 80110c6:	4620      	mov	r0, r4
 80110c8:	bd10      	pop	{r4, pc}

080110ca <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 80110ca:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 80110ce:	b10a      	cbz	r2, 80110d4 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 80110d0:	f000 b8a2 	b.w	8011218 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 80110d4:	6803      	ldr	r3, [r0, #0]
 80110d6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80110da:	4718      	bx	r3

080110dc <_ZN8touchgfx10ScrollListC1Ev>:
 80110dc:	b510      	push	{r4, lr}
 80110de:	4604      	mov	r4, r0
 80110e0:	f000 fa12 	bl	8011508 <_ZN8touchgfx10ScrollBaseC1Ev>
 80110e4:	4b05      	ldr	r3, [pc, #20]	; (80110fc <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 80110e6:	6023      	str	r3, [r4, #0]
 80110e8:	2300      	movs	r3, #0
 80110ea:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 80110ee:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 80110f2:	2301      	movs	r3, #1
 80110f4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80110f8:	4620      	mov	r0, r4
 80110fa:	bd10      	pop	{r4, pc}
 80110fc:	080291ac 	.word	0x080291ac

08011100 <_ZN8touchgfx10ScrollList10setPaddingEss>:
 8011100:	b570      	push	{r4, r5, r6, lr}
 8011102:	6803      	ldr	r3, [r0, #0]
 8011104:	4604      	mov	r4, r0
 8011106:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801110a:	460e      	mov	r6, r1
 801110c:	4615      	mov	r5, r2
 801110e:	4798      	blx	r3
 8011110:	6823      	ldr	r3, [r4, #0]
 8011112:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 8011116:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 801111a:	4601      	mov	r1, r0
 801111c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011120:	4620      	mov	r0, r4
 8011122:	4798      	blx	r3
 8011124:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8011128:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801112c:	f7ff bd82 	b.w	8010c34 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08011130 <_ZN8touchgfx10ScrollList11setSnappingEb>:
 8011130:	b570      	push	{r4, r5, r6, lr}
 8011132:	4604      	mov	r4, r0
 8011134:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 8011138:	b181      	cbz	r1, 801115c <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 801113a:	6803      	ldr	r3, [r0, #0]
 801113c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8011140:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 8011144:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8011148:	4798      	blx	r3
 801114a:	4601      	mov	r1, r0
 801114c:	4620      	mov	r0, r4
 801114e:	47b0      	blx	r6
 8011150:	462b      	mov	r3, r5
 8011152:	4601      	mov	r1, r0
 8011154:	4620      	mov	r0, r4
 8011156:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801115a:	4718      	bx	r3
 801115c:	bd70      	pop	{r4, r5, r6, pc}

0801115e <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 801115e:	b570      	push	{r4, r5, r6, lr}
 8011160:	6803      	ldr	r3, [r0, #0]
 8011162:	4604      	mov	r4, r0
 8011164:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8011168:	4615      	mov	r5, r2
 801116a:	4798      	blx	r3
 801116c:	6823      	ldr	r3, [r4, #0]
 801116e:	462a      	mov	r2, r5
 8011170:	4601      	mov	r1, r0
 8011172:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011176:	4620      	mov	r0, r4
 8011178:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801117c:	4718      	bx	r3

0801117e <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 801117e:	302c      	adds	r0, #44	; 0x2c
 8011180:	f7ff bbf9 	b.w	8010976 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

08011184 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 8011184:	b209      	sxth	r1, r1
 8011186:	302c      	adds	r0, #44	; 0x2c
 8011188:	f7ff bdcc 	b.w	8010d24 <_ZN8touchgfx12DrawableList11itemChangedEs>

0801118c <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 801118c:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 8011190:	302c      	adds	r0, #44	; 0x2c
 8011192:	4419      	add	r1, r3
 8011194:	f7ff bc1e 	b.w	80109d4 <_ZN8touchgfx12DrawableList9setOffsetEl>

08011198 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 8011198:	b510      	push	{r4, lr}
 801119a:	4604      	mov	r4, r0
 801119c:	302c      	adds	r0, #44	; 0x2c
 801119e:	f7ff fd11 	bl	8010bc4 <_ZNK8touchgfx12DrawableList9getOffsetEv>
 80111a2:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 80111a6:	1ac0      	subs	r0, r0, r3
 80111a8:	bd10      	pop	{r4, pc}

080111aa <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 80111aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111ac:	6803      	ldr	r3, [r0, #0]
 80111ae:	4604      	mov	r4, r0
 80111b0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80111b4:	4615      	mov	r5, r2
 80111b6:	460f      	mov	r7, r1
 80111b8:	4798      	blx	r3
 80111ba:	6823      	ldr	r3, [r4, #0]
 80111bc:	4606      	mov	r6, r0
 80111be:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80111c2:	4639      	mov	r1, r7
 80111c4:	4620      	mov	r0, r4
 80111c6:	4798      	blx	r3
 80111c8:	2d00      	cmp	r5, #0
 80111ca:	eba0 0306 	sub.w	r3, r0, r6
 80111ce:	bfb8      	it	lt
 80111d0:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 80111d4:	2b00      	cmp	r3, #0
 80111d6:	bfb8      	it	lt
 80111d8:	425b      	neglt	r3, r3
 80111da:	429d      	cmp	r5, r3
 80111dc:	bfa8      	it	ge
 80111de:	b21d      	sxthge	r5, r3
 80111e0:	2d00      	cmp	r5, #0
 80111e2:	4601      	mov	r1, r0
 80111e4:	dc08      	bgt.n	80111f8 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 80111e6:	6823      	ldr	r3, [r4, #0]
 80111e8:	4620      	mov	r0, r4
 80111ea:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80111ee:	4798      	blx	r3
 80111f0:	2300      	movs	r3, #0
 80111f2:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80111f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80111f8:	2300      	movs	r3, #0
 80111fa:	e9c4 3528 	strd	r3, r5, [r4, #160]	; 0xa0
 80111fe:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8011202:	2b01      	cmp	r3, #1
 8011204:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 8011208:	d0f5      	beq.n	80111f6 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4c>
 801120a:	f004 fcc7 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 801120e:	4621      	mov	r1, r4
 8011210:	f004 fcca 	bl	8015ba8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8011214:	2301      	movs	r3, #1
 8011216:	e7ec      	b.n	80111f2 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x48>

08011218 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 8011218:	b538      	push	{r3, r4, r5, lr}
 801121a:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 801121e:	4605      	mov	r5, r0
 8011220:	460c      	mov	r4, r1
 8011222:	b193      	cbz	r3, 801124a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 8011224:	6803      	ldr	r3, [r0, #0]
 8011226:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801122a:	4798      	blx	r3
 801122c:	4602      	mov	r2, r0
 801122e:	b170      	cbz	r0, 801124e <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 8011230:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8011234:	2c00      	cmp	r4, #0
 8011236:	f04f 0102 	mov.w	r1, #2
 801123a:	fb93 f1f1 	sdiv	r1, r3, r1
 801123e:	bfb4      	ite	lt
 8011240:	1a64      	sublt	r4, r4, r1
 8011242:	1864      	addge	r4, r4, r1
 8011244:	fb94 f4f3 	sdiv	r4, r4, r3
 8011248:	435c      	muls	r4, r3
 801124a:	4620      	mov	r0, r4
 801124c:	bd38      	pop	{r3, r4, r5, pc}
 801124e:	682b      	ldr	r3, [r5, #0]
 8011250:	4621      	mov	r1, r4
 8011252:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011256:	4628      	mov	r0, r5
 8011258:	4798      	blx	r3
 801125a:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 801125e:	2302      	movs	r3, #2
 8011260:	fb94 f3f3 	sdiv	r3, r4, r3
 8011264:	1ac0      	subs	r0, r0, r3
 8011266:	fb90 f0f4 	sdiv	r0, r0, r4
 801126a:	4344      	muls	r4, r0
 801126c:	e7ed      	b.n	801124a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

0801126e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 801126e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011272:	6803      	ldr	r3, [r0, #0]
 8011274:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011278:	460d      	mov	r5, r1
 801127a:	4604      	mov	r4, r0
 801127c:	4798      	blx	r3
 801127e:	42a8      	cmp	r0, r5
 8011280:	d020      	beq.n	80112c4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 8011282:	4629      	mov	r1, r5
 8011284:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8011288:	f7ff fd49 	bl	8010d1e <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 801128c:	6823      	ldr	r3, [r4, #0]
 801128e:	4620      	mov	r0, r4
 8011290:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8011294:	4798      	blx	r3
 8011296:	4605      	mov	r5, r0
 8011298:	b9a0      	cbnz	r0, 80112c4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 801129a:	6823      	ldr	r3, [r4, #0]
 801129c:	4620      	mov	r0, r4
 801129e:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 80112a2:	f8d3 70bc 	ldr.w	r7, [r3, #188]	; 0xbc
 80112a6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80112aa:	4798      	blx	r3
 80112ac:	462a      	mov	r2, r5
 80112ae:	4601      	mov	r1, r0
 80112b0:	4620      	mov	r0, r4
 80112b2:	47b8      	blx	r7
 80112b4:	4633      	mov	r3, r6
 80112b6:	4601      	mov	r1, r0
 80112b8:	f04f 32ff 	mov.w	r2, #4294967295
 80112bc:	4620      	mov	r0, r4
 80112be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80112c2:	4718      	bx	r3
 80112c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080112c8 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 80112c8:	b570      	push	{r4, r5, r6, lr}
 80112ca:	6803      	ldr	r3, [r0, #0]
 80112cc:	790e      	ldrb	r6, [r1, #4]
 80112ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80112d2:	4605      	mov	r5, r0
 80112d4:	460c      	mov	r4, r1
 80112d6:	4798      	blx	r3
 80112d8:	f080 0001 	eor.w	r0, r0, #1
 80112dc:	b2c0      	uxtb	r0, r0
 80112de:	42b0      	cmp	r0, r6
 80112e0:	d141      	bne.n	8011366 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x9e>
 80112e2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80112e6:	2b00      	cmp	r3, #0
 80112e8:	bfbd      	ittte	lt
 80112ea:	425b      	neglt	r3, r3
 80112ec:	b21b      	sxthlt	r3, r3
 80112ee:	f04f 36ff 	movlt.w	r6, #4294967295
 80112f2:	2601      	movge	r6, #1
 80112f4:	2b04      	cmp	r3, #4
 80112f6:	bfc2      	ittt	gt
 80112f8:	3b04      	subgt	r3, #4
 80112fa:	ebc3 03c3 	rsbgt	r3, r3, r3, lsl #3
 80112fe:	b21c      	sxthgt	r4, r3
 8011300:	682b      	ldr	r3, [r5, #0]
 8011302:	4628      	mov	r0, r5
 8011304:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8011308:	bfd8      	it	le
 801130a:	2407      	movle	r4, #7
 801130c:	4798      	blx	r3
 801130e:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 8011312:	4366      	muls	r6, r4
 8011314:	230a      	movs	r3, #10
 8011316:	4371      	muls	r1, r6
 8011318:	fb91 f1f3 	sdiv	r1, r1, r3
 801131c:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 8011320:	4401      	add	r1, r0
 8011322:	b163      	cbz	r3, 801133e <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x76>
 8011324:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 8011328:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 801132c:	4343      	muls	r3, r0
 801132e:	1898      	adds	r0, r3, r2
 8011330:	4281      	cmp	r1, r0
 8011332:	bfa8      	it	ge
 8011334:	4601      	movge	r1, r0
 8011336:	1ad0      	subs	r0, r2, r3
 8011338:	4281      	cmp	r1, r0
 801133a:	bfb8      	it	lt
 801133c:	4601      	movlt	r1, r0
 801133e:	682b      	ldr	r3, [r5, #0]
 8011340:	2200      	movs	r2, #0
 8011342:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011346:	4628      	mov	r0, r5
 8011348:	4798      	blx	r3
 801134a:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 801134e:	682b      	ldr	r3, [r5, #0]
 8011350:	42a2      	cmp	r2, r4
 8011352:	bfa8      	it	ge
 8011354:	4622      	movge	r2, r4
 8011356:	4601      	mov	r1, r0
 8011358:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801135c:	4628      	mov	r0, r5
 801135e:	b212      	sxth	r2, r2
 8011360:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011364:	4718      	bx	r3
 8011366:	bd70      	pop	{r4, r5, r6, pc}

08011368 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 8011368:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801136c:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8011370:	302c      	adds	r0, #44	; 0x2c
 8011372:	f7ff bafb 	b.w	801096c <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

08011376 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 8011376:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 801137a:	4770      	bx	lr

0801137c <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 801137c:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 8011380:	4770      	bx	lr

08011382 <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 8011382:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 8011386:	4770      	bx	lr

08011388 <_ZN8touchgfx10ScrollBase23setItemSelectedCallbackERNS_15GenericCallbackIsvvEE>:
 8011388:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 801138c:	4770      	bx	lr

0801138e <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 801138e:	b510      	push	{r4, lr}
 8011390:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8011394:	2b01      	cmp	r3, #1
 8011396:	4604      	mov	r4, r0
 8011398:	d10b      	bne.n	80113b2 <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x24>
 801139a:	f004 fbff 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 801139e:	4621      	mov	r1, r4
 80113a0:	f004 fc34 	bl	8015c0c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 80113a4:	6823      	ldr	r3, [r4, #0]
 80113a6:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 80113aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80113ae:	4620      	mov	r0, r4
 80113b0:	4798      	blx	r3
 80113b2:	2300      	movs	r3, #0
 80113b4:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80113b8:	bd10      	pop	{r4, pc}

080113ba <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 80113ba:	b570      	push	{r4, r5, r6, lr}
 80113bc:	4604      	mov	r4, r0
 80113be:	460e      	mov	r6, r1
 80113c0:	f7ff ffe5 	bl	801138e <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 80113c4:	2302      	movs	r3, #2
 80113c6:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80113ca:	6823      	ldr	r3, [r4, #0]
 80113cc:	4620      	mov	r0, r4
 80113ce:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80113d2:	4798      	blx	r3
 80113d4:	6823      	ldr	r3, [r4, #0]
 80113d6:	4605      	mov	r5, r0
 80113d8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80113dc:	4620      	mov	r0, r4
 80113de:	4798      	blx	r3
 80113e0:	b1f8      	cbz	r0, 8011422 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x68>
 80113e2:	8973      	ldrh	r3, [r6, #10]
 80113e4:	88f1      	ldrh	r1, [r6, #6]
 80113e6:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 80113ea:	1a5b      	subs	r3, r3, r1
 80113ec:	f8b4 1080 	ldrh.w	r1, [r4, #128]	; 0x80
 80113f0:	b21b      	sxth	r3, r3
 80113f2:	434b      	muls	r3, r1
 80113f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80113f8:	210a      	movs	r1, #10
 80113fa:	fb93 f3f1 	sdiv	r3, r3, r1
 80113fe:	2104      	movs	r1, #4
 8011400:	fb92 f2f1 	sdiv	r2, r2, r1
 8011404:	6821      	ldr	r1, [r4, #0]
 8011406:	4620      	mov	r0, r4
 8011408:	f8d1 60bc 	ldr.w	r6, [r1, #188]	; 0xbc
 801140c:	b212      	sxth	r2, r2
 801140e:	1959      	adds	r1, r3, r5
 8011410:	47b0      	blx	r6
 8011412:	6823      	ldr	r3, [r4, #0]
 8011414:	4601      	mov	r1, r0
 8011416:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801141a:	4620      	mov	r0, r4
 801141c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011420:	4718      	bx	r3
 8011422:	89b3      	ldrh	r3, [r6, #12]
 8011424:	8931      	ldrh	r1, [r6, #8]
 8011426:	e7de      	b.n	80113e6 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2c>

08011428 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 8011428:	b538      	push	{r3, r4, r5, lr}
 801142a:	6803      	ldr	r3, [r0, #0]
 801142c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011430:	4605      	mov	r5, r0
 8011432:	460c      	mov	r4, r1
 8011434:	4798      	blx	r3
 8011436:	b150      	cbz	r0, 801144e <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8011438:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 801143c:	b13b      	cbz	r3, 801144e <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 801143e:	4358      	muls	r0, r3
 8011440:	fb94 f3f0 	sdiv	r3, r4, r0
 8011444:	fb00 4413 	mls	r4, r0, r3, r4
 8011448:	2c00      	cmp	r4, #0
 801144a:	bfc8      	it	gt
 801144c:	1a24      	subgt	r4, r4, r0
 801144e:	4620      	mov	r0, r4
 8011450:	bd38      	pop	{r3, r4, r5, pc}

08011452 <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 8011452:	b570      	push	{r4, r5, r6, lr}
 8011454:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8011458:	2b01      	cmp	r3, #1
 801145a:	4604      	mov	r4, r0
 801145c:	d149      	bne.n	80114f2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 801145e:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 8011462:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 8011466:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801146a:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 801146e:	3001      	adds	r0, #1
 8011470:	1b92      	subs	r2, r2, r6
 8011472:	b212      	sxth	r2, r2
 8011474:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 8011478:	2100      	movs	r1, #0
 801147a:	b280      	uxth	r0, r0
 801147c:	47a8      	blx	r5
 801147e:	6823      	ldr	r3, [r4, #0]
 8011480:	1981      	adds	r1, r0, r6
 8011482:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011486:	4620      	mov	r0, r4
 8011488:	4798      	blx	r3
 801148a:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 801148e:	429a      	cmp	r2, r3
 8011490:	dd2f      	ble.n	80114f2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 8011492:	2300      	movs	r3, #0
 8011494:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8011498:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 801149c:	f004 fb7e 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 80114a0:	4621      	mov	r1, r4
 80114a2:	f004 fbb3 	bl	8015c0c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 80114a6:	6823      	ldr	r3, [r4, #0]
 80114a8:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 80114ac:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 80114b0:	4620      	mov	r0, r4
 80114b2:	f7ff ffb9 	bl	8011428 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 80114b6:	4601      	mov	r1, r0
 80114b8:	4620      	mov	r0, r4
 80114ba:	47a8      	blx	r5
 80114bc:	6823      	ldr	r3, [r4, #0]
 80114be:	4620      	mov	r0, r4
 80114c0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80114c4:	4798      	blx	r3
 80114c6:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80114ca:	1ac0      	subs	r0, r0, r3
 80114cc:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80114d0:	4403      	add	r3, r0
 80114d2:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80114d6:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 80114da:	b150      	cbz	r0, 80114f2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 80114dc:	6803      	ldr	r3, [r0, #0]
 80114de:	68db      	ldr	r3, [r3, #12]
 80114e0:	4798      	blx	r3
 80114e2:	b130      	cbz	r0, 80114f2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 80114e4:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80114e8:	6803      	ldr	r3, [r0, #0]
 80114ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114ee:	689b      	ldr	r3, [r3, #8]
 80114f0:	4718      	bx	r3
 80114f2:	bd70      	pop	{r4, r5, r6, pc}

080114f4 <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 80114f4:	f081 0301 	eor.w	r3, r1, #1
 80114f8:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 80114fc:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 8011500:	302c      	adds	r0, #44	; 0x2c
 8011502:	f7ff bbed 	b.w	8010ce0 <_ZN8touchgfx12DrawableList13setHorizontalEb>
	...

08011508 <_ZN8touchgfx10ScrollBaseC1Ev>:
 8011508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801150a:	4606      	mov	r6, r0
 801150c:	2500      	movs	r5, #0
 801150e:	2701      	movs	r7, #1
 8011510:	4b22      	ldr	r3, [pc, #136]	; (801159c <_ZN8touchgfx10ScrollBaseC1Ev+0x94>)
 8011512:	8085      	strh	r5, [r0, #4]
 8011514:	80c5      	strh	r5, [r0, #6]
 8011516:	8105      	strh	r5, [r0, #8]
 8011518:	8145      	strh	r5, [r0, #10]
 801151a:	8185      	strh	r5, [r0, #12]
 801151c:	81c5      	strh	r5, [r0, #14]
 801151e:	8205      	strh	r5, [r0, #16]
 8011520:	8245      	strh	r5, [r0, #18]
 8011522:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8011526:	61c5      	str	r5, [r0, #28]
 8011528:	8405      	strh	r5, [r0, #32]
 801152a:	8445      	strh	r5, [r0, #34]	; 0x22
 801152c:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8011530:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 8011534:	6285      	str	r5, [r0, #40]	; 0x28
 8011536:	f846 3b2c 	str.w	r3, [r6], #44
 801153a:	4604      	mov	r4, r0
 801153c:	4630      	mov	r0, r6
 801153e:	f7ff f9ed 	bl	801091c <_ZN8touchgfx12DrawableListC1Ev>
 8011542:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 8011546:	230a      	movs	r3, #10
 8011548:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 801154c:	4b14      	ldr	r3, [pc, #80]	; (80115a0 <_ZN8touchgfx10ScrollBaseC1Ev+0x98>)
 801154e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8011552:	231e      	movs	r3, #30
 8011554:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 8011558:	4631      	mov	r1, r6
 801155a:	4620      	mov	r0, r4
 801155c:	67a5      	str	r5, [r4, #120]	; 0x78
 801155e:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 8011562:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8011566:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 801156a:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 801156e:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 8011572:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 8011576:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 801157a:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 801157e:	f000 f987 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011582:	4629      	mov	r1, r5
 8011584:	4630      	mov	r0, r6
 8011586:	6325      	str	r5, [r4, #48]	; 0x30
 8011588:	f7ff fbaa 	bl	8010ce0 <_ZN8touchgfx12DrawableList13setHorizontalEb>
 801158c:	4630      	mov	r0, r6
 801158e:	4629      	mov	r1, r5
 8011590:	f7ff fbb1 	bl	8010cf6 <_ZN8touchgfx12DrawableList11setCircularEb>
 8011594:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 8011598:	4620      	mov	r0, r4
 801159a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801159c:	08029280 	.word	0x08029280
 80115a0:	0801738d 	.word	0x0801738d

080115a4 <_ZN8touchgfx10ScrollBase11setCircularEb>:
 80115a4:	302c      	adds	r0, #44	; 0x2c
 80115a6:	f7ff bba6 	b.w	8010cf6 <_ZN8touchgfx12DrawableList11setCircularEb>

080115aa <_ZN8touchgfx10ScrollBase8setWidthEs>:
 80115aa:	8101      	strh	r1, [r0, #8]
 80115ac:	302c      	adds	r0, #44	; 0x2c
 80115ae:	f7ff bb91 	b.w	8010cd4 <_ZN8touchgfx12DrawableList8setWidthEs>

080115b2 <_ZN8touchgfx10ScrollBase9setHeightEs>:
 80115b2:	8141      	strh	r1, [r0, #10]
 80115b4:	302c      	adds	r0, #44	; 0x2c
 80115b6:	f7ff bb90 	b.w	8010cda <_ZN8touchgfx12DrawableList9setHeightEs>

080115ba <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 80115ba:	302c      	adds	r0, #44	; 0x2c
 80115bc:	f7ff b994 	b.w	80108e8 <_ZNK8touchgfx12DrawableList13getHorizontalEv>

080115c0 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 80115c0:	302c      	adds	r0, #44	; 0x2c
 80115c2:	f7ff b994 	b.w	80108ee <_ZNK8touchgfx12DrawableList11getCircularEv>

080115c6 <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 80115c6:	302c      	adds	r0, #44	; 0x2c
 80115c8:	f7ff b997 	b.w	80108fa <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

080115cc <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 80115cc:	302c      	adds	r0, #44	; 0x2c
 80115ce:	f7ff b99a 	b.w	8010906 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

080115d2 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 80115d2:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 80115d6:	4770      	bx	lr

080115d8 <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 80115d8:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 80115dc:	4770      	bx	lr

080115de <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 80115de:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 80115e2:	4770      	bx	lr

080115e4 <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 80115e4:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80115e6:	4770      	bx	lr

080115e8 <_ZN8touchgfx11ModalWindow4showEv>:
 80115e8:	2201      	movs	r2, #1
 80115ea:	6803      	ldr	r3, [r0, #0]
 80115ec:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80115f0:	695b      	ldr	r3, [r3, #20]
 80115f2:	4718      	bx	r3

080115f4 <_ZN8touchgfx11ModalWindow4hideEv>:
 80115f4:	2200      	movs	r2, #0
 80115f6:	6803      	ldr	r3, [r0, #0]
 80115f8:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80115fc:	695b      	ldr	r3, [r3, #20]
 80115fe:	4718      	bx	r3

08011600 <_ZN8touchgfx11ModalWindowD1Ev>:
 8011600:	4770      	bx	lr

08011602 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 8011602:	3058      	adds	r0, #88	; 0x58
 8011604:	f000 b944 	b.w	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>

08011608 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 8011608:	6541      	str	r1, [r0, #84]	; 0x54
 801160a:	302c      	adds	r0, #44	; 0x2c
 801160c:	f005 ba6e 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

08011610 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 8011610:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 8011614:	302c      	adds	r0, #44	; 0x2c
 8011616:	f005 ba69 	b.w	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>

0801161a <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 801161a:	3058      	adds	r0, #88	; 0x58
 801161c:	f000 b906 	b.w	801182c <_ZN8touchgfx9Container6removeERNS_8DrawableE>

08011620 <_ZN8touchgfx11ModalWindowD0Ev>:
 8011620:	b510      	push	{r4, lr}
 8011622:	21b0      	movs	r1, #176	; 0xb0
 8011624:	4604      	mov	r4, r0
 8011626:	f014 f89d 	bl	8025764 <_ZdlPvj>
 801162a:	4620      	mov	r0, r4
 801162c:	bd10      	pop	{r4, pc}

0801162e <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 801162e:	b570      	push	{r4, r5, r6, lr}
 8011630:	4604      	mov	r4, r0
 8011632:	461e      	mov	r6, r3
 8011634:	f854 3b58 	ldr.w	r3, [r4], #88
 8011638:	4615      	mov	r5, r2
 801163a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801163e:	4798      	blx	r3
 8011640:	4632      	mov	r2, r6
 8011642:	4629      	mov	r1, r5
 8011644:	4620      	mov	r0, r4
 8011646:	f7f0 ff61 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 801164a:	bd70      	pop	{r4, r5, r6, pc}

0801164c <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 801164c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801164e:	880b      	ldrh	r3, [r1, #0]
 8011650:	a902      	add	r1, sp, #8
 8011652:	f100 0584 	add.w	r5, r0, #132	; 0x84
 8011656:	4604      	mov	r4, r0
 8011658:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801165c:	4628      	mov	r0, r5
 801165e:	f002 f9e1 	bl	8013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011662:	2200      	movs	r2, #0
 8011664:	4611      	mov	r1, r2
 8011666:	4628      	mov	r0, r5
 8011668:	f7f0 ff50 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 801166c:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 8011670:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 8011674:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011678:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801167c:	f104 0558 	add.w	r5, r4, #88	; 0x58
 8011680:	2302      	movs	r3, #2
 8011682:	4628      	mov	r0, r5
 8011684:	1bd2      	subs	r2, r2, r7
 8011686:	1b89      	subs	r1, r1, r6
 8011688:	fb92 f2f3 	sdiv	r2, r2, r3
 801168c:	fb91 f1f3 	sdiv	r1, r1, r3
 8011690:	b212      	sxth	r2, r2
 8011692:	b209      	sxth	r1, r1
 8011694:	f7f0 ff3a 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8011698:	463a      	mov	r2, r7
 801169a:	4631      	mov	r1, r6
 801169c:	4628      	mov	r0, r5
 801169e:	f7f0 fda2 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80116a2:	6823      	ldr	r3, [r4, #0]
 80116a4:	4620      	mov	r0, r4
 80116a6:	695b      	ldr	r3, [r3, #20]
 80116a8:	4798      	blx	r3
 80116aa:	b003      	add	sp, #12
 80116ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080116b0 <_ZN8touchgfx11ModalWindowC1Ev>:
 80116b0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80116b4:	4604      	mov	r4, r0
 80116b6:	4625      	mov	r5, r4
 80116b8:	f7f0 ff16 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80116bc:	2600      	movs	r6, #0
 80116be:	4b36      	ldr	r3, [pc, #216]	; (8011798 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 80116c0:	62a6      	str	r6, [r4, #40]	; 0x28
 80116c2:	f845 3b2c 	str.w	r3, [r5], #44
 80116c6:	f04f 0a26 	mov.w	sl, #38	; 0x26
 80116ca:	4652      	mov	r2, sl
 80116cc:	4631      	mov	r1, r6
 80116ce:	4628      	mov	r0, r5
 80116d0:	f014 fa24 	bl	8025b1c <memset>
 80116d4:	4628      	mov	r0, r5
 80116d6:	f7f0 ff07 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80116da:	f104 0858 	add.w	r8, r4, #88	; 0x58
 80116de:	4b2f      	ldr	r3, [pc, #188]	; (801179c <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 80116e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80116e2:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80116e6:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 80116ea:	6566      	str	r6, [r4, #84]	; 0x54
 80116ec:	4640      	mov	r0, r8
 80116ee:	f7f0 fefb 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 80116f2:	f104 0784 	add.w	r7, r4, #132	; 0x84
 80116f6:	4b2a      	ldr	r3, [pc, #168]	; (80117a0 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 80116f8:	65a3      	str	r3, [r4, #88]	; 0x58
 80116fa:	4652      	mov	r2, sl
 80116fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011700:	4631      	mov	r1, r6
 8011702:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 8011706:	4638      	mov	r0, r7
 8011708:	f8ad 3004 	strh.w	r3, [sp, #4]
 801170c:	f014 fa06 	bl	8025b1c <memset>
 8011710:	4638      	mov	r0, r7
 8011712:	f7f0 fee9 	bl	80024e8 <_ZN8touchgfx8DrawableC1Ev>
 8011716:	a902      	add	r1, sp, #8
 8011718:	4b22      	ldr	r3, [pc, #136]	; (80117a4 <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 801171a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801171e:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8011722:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 8011726:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 801172a:	4638      	mov	r0, r7
 801172c:	f002 f97a 	bl	8013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011730:	4b1d      	ldr	r3, [pc, #116]	; (80117a8 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 8011732:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011736:	4b1d      	ldr	r3, [pc, #116]	; (80117ac <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 8011738:	4620      	mov	r0, r4
 801173a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801173e:	f7f0 fd52 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011742:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011746:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 801174a:	4632      	mov	r2, r6
 801174c:	4631      	mov	r1, r6
 801174e:	4628      	mov	r0, r5
 8011750:	f7f0 fedc 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8011754:	4652      	mov	r2, sl
 8011756:	4649      	mov	r1, r9
 8011758:	4628      	mov	r0, r5
 801175a:	f7f0 fd44 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801175e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8011762:	6563      	str	r3, [r4, #84]	; 0x54
 8011764:	2301      	movs	r3, #1
 8011766:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 801176a:	2360      	movs	r3, #96	; 0x60
 801176c:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 8011770:	4628      	mov	r0, r5
 8011772:	f005 f9bb 	bl	8016aec <_ZNK8touchgfx8Drawable10invalidateEv>
 8011776:	4629      	mov	r1, r5
 8011778:	4620      	mov	r0, r4
 801177a:	f000 f889 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801177e:	4641      	mov	r1, r8
 8011780:	4620      	mov	r0, r4
 8011782:	f000 f885 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011786:	4640      	mov	r0, r8
 8011788:	4639      	mov	r1, r7
 801178a:	f000 f881 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801178e:	4620      	mov	r0, r4
 8011790:	b002      	add	sp, #8
 8011792:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011796:	bf00      	nop
 8011798:	08029350 	.word	0x08029350
 801179c:	08029f74 	.word	0x08029f74
 80117a0:	080294cc 	.word	0x080294cc
 80117a4:	0802a264 	.word	0x0802a264
 80117a8:	200279a6 	.word	0x200279a6
 80117ac:	200279a4 	.word	0x200279a4

080117b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80117b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117b2:	2000      	movs	r0, #0
 80117b4:	b12b      	cbz	r3, 80117c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80117b6:	b920      	cbnz	r0, 80117c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80117b8:	1a5a      	subs	r2, r3, r1
 80117ba:	4250      	negs	r0, r2
 80117bc:	4150      	adcs	r0, r2
 80117be:	699b      	ldr	r3, [r3, #24]
 80117c0:	e7f8      	b.n	80117b4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80117c2:	4770      	bx	lr

080117c4 <_ZN8touchgfx9Container9removeAllEv>:
 80117c4:	2200      	movs	r2, #0
 80117c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117c8:	b123      	cbz	r3, 80117d4 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80117ca:	6999      	ldr	r1, [r3, #24]
 80117cc:	6281      	str	r1, [r0, #40]	; 0x28
 80117ce:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80117d2:	e7f8      	b.n	80117c6 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80117d4:	4770      	bx	lr

080117d6 <_ZN8touchgfx9Container6unlinkEv>:
 80117d6:	2300      	movs	r3, #0
 80117d8:	6283      	str	r3, [r0, #40]	; 0x28
 80117da:	4770      	bx	lr

080117dc <_ZNK8touchgfx9Container12getSolidRectEv>:
 80117dc:	2200      	movs	r2, #0
 80117de:	8002      	strh	r2, [r0, #0]
 80117e0:	8042      	strh	r2, [r0, #2]
 80117e2:	8082      	strh	r2, [r0, #4]
 80117e4:	80c2      	strh	r2, [r0, #6]
 80117e6:	4770      	bx	lr

080117e8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80117e8:	b570      	push	{r4, r5, r6, lr}
 80117ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80117ec:	460d      	mov	r5, r1
 80117ee:	4616      	mov	r6, r2
 80117f0:	b13c      	cbz	r4, 8011802 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80117f2:	6823      	ldr	r3, [r4, #0]
 80117f4:	4620      	mov	r0, r4
 80117f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80117f8:	4632      	mov	r2, r6
 80117fa:	4629      	mov	r1, r5
 80117fc:	4798      	blx	r3
 80117fe:	69a4      	ldr	r4, [r4, #24]
 8011800:	e7f6      	b.n	80117f0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8011802:	bd70      	pop	{r4, r5, r6, pc}

08011804 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8011804:	b538      	push	{r3, r4, r5, lr}
 8011806:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011808:	460d      	mov	r5, r1
 801180a:	b134      	cbz	r4, 801181a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801180c:	682b      	ldr	r3, [r5, #0]
 801180e:	4621      	mov	r1, r4
 8011810:	689b      	ldr	r3, [r3, #8]
 8011812:	4628      	mov	r0, r5
 8011814:	4798      	blx	r3
 8011816:	69a4      	ldr	r4, [r4, #24]
 8011818:	e7f7      	b.n	801180a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 801181a:	bd38      	pop	{r3, r4, r5, pc}

0801181c <_ZN8touchgfx9ContainerD1Ev>:
 801181c:	4770      	bx	lr

0801181e <_ZN8touchgfx9ContainerD0Ev>:
 801181e:	b510      	push	{r4, lr}
 8011820:	212c      	movs	r1, #44	; 0x2c
 8011822:	4604      	mov	r4, r0
 8011824:	f013 ff9e 	bl	8025764 <_ZdlPvj>
 8011828:	4620      	mov	r0, r4
 801182a:	bd10      	pop	{r4, pc}

0801182c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801182c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801182e:	b19b      	cbz	r3, 8011858 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011830:	428b      	cmp	r3, r1
 8011832:	d109      	bne.n	8011848 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8011834:	699a      	ldr	r2, [r3, #24]
 8011836:	2100      	movs	r1, #0
 8011838:	6159      	str	r1, [r3, #20]
 801183a:	6282      	str	r2, [r0, #40]	; 0x28
 801183c:	b902      	cbnz	r2, 8011840 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801183e:	4770      	bx	lr
 8011840:	6199      	str	r1, [r3, #24]
 8011842:	4770      	bx	lr
 8011844:	4613      	mov	r3, r2
 8011846:	b13a      	cbz	r2, 8011858 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011848:	699a      	ldr	r2, [r3, #24]
 801184a:	428a      	cmp	r2, r1
 801184c:	d1fa      	bne.n	8011844 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801184e:	698a      	ldr	r2, [r1, #24]
 8011850:	619a      	str	r2, [r3, #24]
 8011852:	2300      	movs	r3, #0
 8011854:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8011858:	4770      	bx	lr

0801185a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 801185a:	b410      	push	{r4}
 801185c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801185e:	4604      	mov	r4, r0
 8011860:	b92b      	cbnz	r3, 801186e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8011862:	6803      	ldr	r3, [r0, #0]
 8011864:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011868:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801186a:	4611      	mov	r1, r2
 801186c:	4718      	bx	r3
 801186e:	b941      	cbnz	r1, 8011882 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8011870:	6193      	str	r3, [r2, #24]
 8011872:	6282      	str	r2, [r0, #40]	; 0x28
 8011874:	6154      	str	r4, [r2, #20]
 8011876:	f85d 4b04 	ldr.w	r4, [sp], #4
 801187a:	4770      	bx	lr
 801187c:	4603      	mov	r3, r0
 801187e:	2800      	cmp	r0, #0
 8011880:	d0f9      	beq.n	8011876 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8011882:	4299      	cmp	r1, r3
 8011884:	6998      	ldr	r0, [r3, #24]
 8011886:	d1f9      	bne.n	801187c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8011888:	6190      	str	r0, [r2, #24]
 801188a:	618a      	str	r2, [r1, #24]
 801188c:	e7f2      	b.n	8011874 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8011890:	4288      	cmp	r0, r1
 8011892:	b508      	push	{r3, lr}
 8011894:	d105      	bne.n	80118a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8011896:	4b11      	ldr	r3, [pc, #68]	; (80118dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8011898:	4a11      	ldr	r2, [pc, #68]	; (80118e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 801189a:	2123      	movs	r1, #35	; 0x23
 801189c:	4811      	ldr	r0, [pc, #68]	; (80118e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 801189e:	f013 ff8f 	bl	80257c0 <__assert_func>
 80118a2:	694b      	ldr	r3, [r1, #20]
 80118a4:	b11b      	cbz	r3, 80118ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 80118a6:	4b10      	ldr	r3, [pc, #64]	; (80118e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 80118a8:	4a0d      	ldr	r2, [pc, #52]	; (80118e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80118aa:	2124      	movs	r1, #36	; 0x24
 80118ac:	e7f6      	b.n	801189c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80118ae:	e9c1 0305 	strd	r0, r3, [r1, #20]
 80118b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80118b4:	b913      	cbnz	r3, 80118bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 80118b6:	6281      	str	r1, [r0, #40]	; 0x28
 80118b8:	bd08      	pop	{r3, pc}
 80118ba:	4613      	mov	r3, r2
 80118bc:	699a      	ldr	r2, [r3, #24]
 80118be:	b12a      	cbz	r2, 80118cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 80118c0:	428b      	cmp	r3, r1
 80118c2:	d1fa      	bne.n	80118ba <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 80118c4:	4b09      	ldr	r3, [pc, #36]	; (80118ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80118c6:	4a06      	ldr	r2, [pc, #24]	; (80118e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80118c8:	2135      	movs	r1, #53	; 0x35
 80118ca:	e7e7      	b.n	801189c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80118cc:	428b      	cmp	r3, r1
 80118ce:	d103      	bne.n	80118d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80118d0:	4b06      	ldr	r3, [pc, #24]	; (80118ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80118d2:	4a03      	ldr	r2, [pc, #12]	; (80118e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80118d4:	2138      	movs	r1, #56	; 0x38
 80118d6:	e7e1      	b.n	801189c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80118d8:	6199      	str	r1, [r3, #24]
 80118da:	e7ed      	b.n	80118b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80118dc:	080293fc 	.word	0x080293fc
 80118e0:	08029550 	.word	0x08029550
 80118e4:	08029428 	.word	0x08029428
 80118e8:	0802945b 	.word	0x0802945b
 80118ec:	08029491 	.word	0x08029491

080118f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80118f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118f4:	461f      	mov	r7, r3
 80118f6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80118fa:	460d      	mov	r5, r1
 80118fc:	4616      	mov	r6, r2
 80118fe:	b103      	cbz	r3, 8011902 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8011900:	6038      	str	r0, [r7, #0]
 8011902:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011904:	b314      	cbz	r4, 801194c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8011906:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801190a:	b1eb      	cbz	r3, 8011948 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801190c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011910:	428d      	cmp	r5, r1
 8011912:	db19      	blt.n	8011948 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011914:	8923      	ldrh	r3, [r4, #8]
 8011916:	b289      	uxth	r1, r1
 8011918:	440b      	add	r3, r1
 801191a:	b21b      	sxth	r3, r3
 801191c:	429d      	cmp	r5, r3
 801191e:	da13      	bge.n	8011948 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011920:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011924:	4296      	cmp	r6, r2
 8011926:	db0f      	blt.n	8011948 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011928:	8963      	ldrh	r3, [r4, #10]
 801192a:	b292      	uxth	r2, r2
 801192c:	4413      	add	r3, r2
 801192e:	b21b      	sxth	r3, r3
 8011930:	429e      	cmp	r6, r3
 8011932:	da09      	bge.n	8011948 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011934:	6823      	ldr	r3, [r4, #0]
 8011936:	1ab2      	subs	r2, r6, r2
 8011938:	1a69      	subs	r1, r5, r1
 801193a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801193e:	b212      	sxth	r2, r2
 8011940:	463b      	mov	r3, r7
 8011942:	b209      	sxth	r1, r1
 8011944:	4620      	mov	r0, r4
 8011946:	47c0      	blx	r8
 8011948:	69a4      	ldr	r4, [r4, #24]
 801194a:	e7db      	b.n	8011904 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 801194c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011950 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8011950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011954:	4c6e      	ldr	r4, [pc, #440]	; (8011b10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8011956:	b0a1      	sub	sp, #132	; 0x84
 8011958:	6824      	ldr	r4, [r4, #0]
 801195a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801195c:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8011960:	9303      	str	r3, [sp, #12]
 8011962:	2400      	movs	r4, #0
 8011964:	802c      	strh	r4, [r5, #0]
 8011966:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8011968:	802c      	strh	r4, [r5, #0]
 801196a:	601c      	str	r4, [r3, #0]
 801196c:	4606      	mov	r6, r0
 801196e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8011972:	f7ff ffbd 	bl	80118f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011976:	f1b9 0f03 	cmp.w	r9, #3
 801197a:	f340 80c2 	ble.w	8011b02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801197e:	4631      	mov	r1, r6
 8011980:	a80c      	add	r0, sp, #48	; 0x30
 8011982:	f005 f94b 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011986:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801198a:	9306      	str	r3, [sp, #24]
 801198c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011990:	9307      	str	r3, [sp, #28]
 8011992:	9b03      	ldr	r3, [sp, #12]
 8011994:	f8d3 a000 	ldr.w	sl, [r3]
 8011998:	f1ba 0f00 	cmp.w	sl, #0
 801199c:	f000 80b4 	beq.w	8011b08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80119a0:	4651      	mov	r1, sl
 80119a2:	a810      	add	r0, sp, #64	; 0x40
 80119a4:	f005 f93a 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80119a8:	9b01      	ldr	r3, [sp, #4]
 80119aa:	9a06      	ldr	r2, [sp, #24]
 80119ac:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80119b0:	189d      	adds	r5, r3, r2
 80119b2:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80119b6:	9a07      	ldr	r2, [sp, #28]
 80119b8:	2002      	movs	r0, #2
 80119ba:	fb91 f1f0 	sdiv	r1, r1, r0
 80119be:	4419      	add	r1, r3
 80119c0:	1a6d      	subs	r5, r5, r1
 80119c2:	9b02      	ldr	r3, [sp, #8]
 80119c4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80119c8:	4413      	add	r3, r2
 80119ca:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80119ce:	fb92 f2f0 	sdiv	r2, r2, r0
 80119d2:	440a      	add	r2, r1
 80119d4:	1a9b      	subs	r3, r3, r2
 80119d6:	435b      	muls	r3, r3
 80119d8:	fb05 3505 	mla	r5, r5, r5, r3
 80119dc:	4f4d      	ldr	r7, [pc, #308]	; (8011b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80119de:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80119e0:	ac10      	add	r4, sp, #64	; 0x40
 80119e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80119e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80119e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80119e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80119ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80119ec:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80119f0:	f1b9 0f0c 	cmp.w	r9, #12
 80119f4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80119f8:	f04f 0303 	mov.w	r3, #3
 80119fc:	bfc8      	it	gt
 80119fe:	4698      	movgt	r8, r3
 8011a00:	f8cd 9000 	str.w	r9, [sp]
 8011a04:	f04f 0400 	mov.w	r4, #0
 8011a08:	bfdc      	itt	le
 8011a0a:	f109 32ff 	addle.w	r2, r9, #4294967295
 8011a0e:	fb92 f8f3 	sdivle	r8, r2, r3
 8011a12:	1c63      	adds	r3, r4, #1
 8011a14:	aa10      	add	r2, sp, #64	; 0x40
 8011a16:	f004 0401 	and.w	r4, r4, #1
 8011a1a:	9308      	str	r3, [sp, #32]
 8011a1c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8011a20:	9b00      	ldr	r3, [sp, #0]
 8011a22:	fb93 f3f8 	sdiv	r3, r3, r8
 8011a26:	b29b      	uxth	r3, r3
 8011a28:	3404      	adds	r4, #4
 8011a2a:	f04f 0b00 	mov.w	fp, #0
 8011a2e:	9304      	str	r3, [sp, #16]
 8011a30:	9a04      	ldr	r2, [sp, #16]
 8011a32:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8011a36:	fb13 f302 	smulbb	r3, r3, r2
 8011a3a:	9a01      	ldr	r2, [sp, #4]
 8011a3c:	b29b      	uxth	r3, r3
 8011a3e:	1899      	adds	r1, r3, r2
 8011a40:	9305      	str	r3, [sp, #20]
 8011a42:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011a46:	b209      	sxth	r1, r1
 8011a48:	4299      	cmp	r1, r3
 8011a4a:	db4d      	blt.n	8011ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011a4c:	8932      	ldrh	r2, [r6, #8]
 8011a4e:	4413      	add	r3, r2
 8011a50:	b21b      	sxth	r3, r3
 8011a52:	4299      	cmp	r1, r3
 8011a54:	da48      	bge.n	8011ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011a56:	9b04      	ldr	r3, [sp, #16]
 8011a58:	6827      	ldr	r7, [r4, #0]
 8011a5a:	fb17 f703 	smulbb	r7, r7, r3
 8011a5e:	9b02      	ldr	r3, [sp, #8]
 8011a60:	b2bf      	uxth	r7, r7
 8011a62:	18fa      	adds	r2, r7, r3
 8011a64:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011a68:	b212      	sxth	r2, r2
 8011a6a:	429a      	cmp	r2, r3
 8011a6c:	db3c      	blt.n	8011ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011a6e:	8970      	ldrh	r0, [r6, #10]
 8011a70:	4403      	add	r3, r0
 8011a72:	b21b      	sxth	r3, r3
 8011a74:	429a      	cmp	r2, r3
 8011a76:	da37      	bge.n	8011ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011a78:	2300      	movs	r3, #0
 8011a7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8011a7c:	4630      	mov	r0, r6
 8011a7e:	ab0b      	add	r3, sp, #44	; 0x2c
 8011a80:	f7ff ff36 	bl	80118f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011a84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011a86:	b37a      	cbz	r2, 8011ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011a88:	4552      	cmp	r2, sl
 8011a8a:	d02d      	beq.n	8011ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011a8c:	4611      	mov	r1, r2
 8011a8e:	a80e      	add	r0, sp, #56	; 0x38
 8011a90:	9209      	str	r2, [sp, #36]	; 0x24
 8011a92:	f005 f8c3 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a96:	9a06      	ldr	r2, [sp, #24]
 8011a98:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8011a9c:	9b01      	ldr	r3, [sp, #4]
 8011a9e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8011aa2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8011aa6:	4413      	add	r3, r2
 8011aa8:	f04f 0e02 	mov.w	lr, #2
 8011aac:	fb91 f1fe 	sdiv	r1, r1, lr
 8011ab0:	4401      	add	r1, r0
 8011ab2:	1a58      	subs	r0, r3, r1
 8011ab4:	9a07      	ldr	r2, [sp, #28]
 8011ab6:	9b02      	ldr	r3, [sp, #8]
 8011ab8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8011abc:	fb9c fcfe 	sdiv	ip, ip, lr
 8011ac0:	4413      	add	r3, r2
 8011ac2:	448c      	add	ip, r1
 8011ac4:	eba3 030c 	sub.w	r3, r3, ip
 8011ac8:	435b      	muls	r3, r3
 8011aca:	fb00 3300 	mla	r3, r0, r0, r3
 8011ace:	42ab      	cmp	r3, r5
 8011ad0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011ad2:	d208      	bcs.n	8011ae6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8011ad4:	9803      	ldr	r0, [sp, #12]
 8011ad6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011ad8:	6001      	str	r1, [r0, #0]
 8011ada:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8011adc:	9805      	ldr	r0, [sp, #20]
 8011ade:	8008      	strh	r0, [r1, #0]
 8011ae0:	992b      	ldr	r1, [sp, #172]	; 0xac
 8011ae2:	461d      	mov	r5, r3
 8011ae4:	800f      	strh	r7, [r1, #0]
 8011ae6:	4692      	mov	sl, r2
 8011ae8:	f10b 0b01 	add.w	fp, fp, #1
 8011aec:	f1bb 0f04 	cmp.w	fp, #4
 8011af0:	f104 0408 	add.w	r4, r4, #8
 8011af4:	d19c      	bne.n	8011a30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8011af6:	9b00      	ldr	r3, [sp, #0]
 8011af8:	9c08      	ldr	r4, [sp, #32]
 8011afa:	444b      	add	r3, r9
 8011afc:	4544      	cmp	r4, r8
 8011afe:	9300      	str	r3, [sp, #0]
 8011b00:	d187      	bne.n	8011a12 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8011b02:	b021      	add	sp, #132	; 0x84
 8011b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b08:	f04f 35ff 	mov.w	r5, #4294967295
 8011b0c:	e766      	b.n	80119dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8011b0e:	bf00      	nop
 8011b10:	200279b0 	.word	0x200279b0
 8011b14:	080269fc 	.word	0x080269fc

08011b18 <_ZN8touchgfx4RectaNERKS0_>:
 8011b18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b1c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8011b20:	888c      	ldrh	r4, [r1, #4]
 8011b22:	f9b0 9000 	ldrsh.w	r9, [r0]
 8011b26:	443c      	add	r4, r7
 8011b28:	b2a4      	uxth	r4, r4
 8011b2a:	fa0f f884 	sxth.w	r8, r4
 8011b2e:	45c1      	cmp	r9, r8
 8011b30:	da2f      	bge.n	8011b92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011b32:	8882      	ldrh	r2, [r0, #4]
 8011b34:	444a      	add	r2, r9
 8011b36:	b292      	uxth	r2, r2
 8011b38:	fa0f fe82 	sxth.w	lr, r2
 8011b3c:	4577      	cmp	r7, lr
 8011b3e:	da28      	bge.n	8011b92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011b40:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8011b44:	88cb      	ldrh	r3, [r1, #6]
 8011b46:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8011b4a:	442b      	add	r3, r5
 8011b4c:	b21b      	sxth	r3, r3
 8011b4e:	429e      	cmp	r6, r3
 8011b50:	da1f      	bge.n	8011b92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011b52:	88c3      	ldrh	r3, [r0, #6]
 8011b54:	4433      	add	r3, r6
 8011b56:	b29b      	uxth	r3, r3
 8011b58:	fa0f fc83 	sxth.w	ip, r3
 8011b5c:	4565      	cmp	r5, ip
 8011b5e:	da18      	bge.n	8011b92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011b60:	454f      	cmp	r7, r9
 8011b62:	bfb8      	it	lt
 8011b64:	464f      	movlt	r7, r9
 8011b66:	42b5      	cmp	r5, r6
 8011b68:	bfb8      	it	lt
 8011b6a:	4635      	movlt	r5, r6
 8011b6c:	45f0      	cmp	r8, lr
 8011b6e:	bfd8      	it	le
 8011b70:	4622      	movle	r2, r4
 8011b72:	1bd2      	subs	r2, r2, r7
 8011b74:	8082      	strh	r2, [r0, #4]
 8011b76:	884a      	ldrh	r2, [r1, #2]
 8011b78:	88c9      	ldrh	r1, [r1, #6]
 8011b7a:	8007      	strh	r7, [r0, #0]
 8011b7c:	440a      	add	r2, r1
 8011b7e:	b292      	uxth	r2, r2
 8011b80:	b211      	sxth	r1, r2
 8011b82:	458c      	cmp	ip, r1
 8011b84:	bfa8      	it	ge
 8011b86:	4613      	movge	r3, r2
 8011b88:	1b5b      	subs	r3, r3, r5
 8011b8a:	80c3      	strh	r3, [r0, #6]
 8011b8c:	8045      	strh	r5, [r0, #2]
 8011b8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011b92:	2300      	movs	r3, #0
 8011b94:	8003      	strh	r3, [r0, #0]
 8011b96:	8043      	strh	r3, [r0, #2]
 8011b98:	8083      	strh	r3, [r0, #4]
 8011b9a:	80c3      	strh	r3, [r0, #6]
 8011b9c:	e7f7      	b.n	8011b8e <_ZN8touchgfx4RectaNERKS0_+0x76>

08011b9e <_ZNK8touchgfx4Rect7isEmptyEv>:
 8011b9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011ba2:	2b00      	cmp	r3, #0
 8011ba4:	dd06      	ble.n	8011bb4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8011ba6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8011baa:	2800      	cmp	r0, #0
 8011bac:	bfcc      	ite	gt
 8011bae:	2000      	movgt	r0, #0
 8011bb0:	2001      	movle	r0, #1
 8011bb2:	4770      	bx	lr
 8011bb4:	2001      	movs	r0, #1
 8011bb6:	4770      	bx	lr

08011bb8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8011bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bbc:	2300      	movs	r3, #0
 8011bbe:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011bc0:	8003      	strh	r3, [r0, #0]
 8011bc2:	4604      	mov	r4, r0
 8011bc4:	8043      	strh	r3, [r0, #2]
 8011bc6:	8083      	strh	r3, [r0, #4]
 8011bc8:	80c3      	strh	r3, [r0, #6]
 8011bca:	2d00      	cmp	r5, #0
 8011bcc:	d040      	beq.n	8011c50 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8011bce:	1d28      	adds	r0, r5, #4
 8011bd0:	f7ff ffe5 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011bd4:	b988      	cbnz	r0, 8011bfa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011bd6:	4620      	mov	r0, r4
 8011bd8:	f7ff ffe1 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011bdc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011be0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011be4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8011be8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8011bec:	b138      	cbz	r0, 8011bfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8011bee:	8022      	strh	r2, [r4, #0]
 8011bf0:	8063      	strh	r3, [r4, #2]
 8011bf2:	f8a4 e004 	strh.w	lr, [r4, #4]
 8011bf6:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011bfa:	69ad      	ldr	r5, [r5, #24]
 8011bfc:	e7e5      	b.n	8011bca <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8011bfe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011c02:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011c06:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8011c0a:	4290      	cmp	r0, r2
 8011c0c:	4607      	mov	r7, r0
 8011c0e:	bfa8      	it	ge
 8011c10:	4617      	movge	r7, r2
 8011c12:	4472      	add	r2, lr
 8011c14:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8011c18:	8027      	strh	r7, [r4, #0]
 8011c1a:	4299      	cmp	r1, r3
 8011c1c:	460e      	mov	r6, r1
 8011c1e:	4440      	add	r0, r8
 8011c20:	bfa8      	it	ge
 8011c22:	461e      	movge	r6, r3
 8011c24:	4471      	add	r1, lr
 8011c26:	4463      	add	r3, ip
 8011c28:	b200      	sxth	r0, r0
 8011c2a:	b212      	sxth	r2, r2
 8011c2c:	b209      	sxth	r1, r1
 8011c2e:	b21b      	sxth	r3, r3
 8011c30:	4290      	cmp	r0, r2
 8011c32:	bfac      	ite	ge
 8011c34:	ebc7 0200 	rsbge	r2, r7, r0
 8011c38:	ebc7 0202 	rsblt	r2, r7, r2
 8011c3c:	4299      	cmp	r1, r3
 8011c3e:	bfac      	ite	ge
 8011c40:	ebc6 0301 	rsbge	r3, r6, r1
 8011c44:	ebc6 0303 	rsblt	r3, r6, r3
 8011c48:	8066      	strh	r6, [r4, #2]
 8011c4a:	80a2      	strh	r2, [r4, #4]
 8011c4c:	80e3      	strh	r3, [r4, #6]
 8011c4e:	e7d4      	b.n	8011bfa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011c50:	4620      	mov	r0, r4
 8011c52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011c56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8011c56:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011c5a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011c5e:	b383      	cbz	r3, 8011cc2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011c60:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011c62:	b374      	cbz	r4, 8011cc2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011c64:	f9b1 5000 	ldrsh.w	r5, [r1]
 8011c68:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8011c6c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8011c70:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8011c74:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011c78:	b303      	cbz	r3, 8011cbc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011c7a:	4668      	mov	r0, sp
 8011c7c:	1d21      	adds	r1, r4, #4
 8011c7e:	f8ad 5000 	strh.w	r5, [sp]
 8011c82:	f8ad 6002 	strh.w	r6, [sp, #2]
 8011c86:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011c8a:	f8ad 8006 	strh.w	r8, [sp, #6]
 8011c8e:	f7ff ff43 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 8011c92:	4668      	mov	r0, sp
 8011c94:	f7ff ff83 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c98:	b980      	cbnz	r0, 8011cbc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011c9a:	f8bd 3000 	ldrh.w	r3, [sp]
 8011c9e:	88a2      	ldrh	r2, [r4, #4]
 8011ca0:	1a9b      	subs	r3, r3, r2
 8011ca2:	f8ad 3000 	strh.w	r3, [sp]
 8011ca6:	88e2      	ldrh	r2, [r4, #6]
 8011ca8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011cac:	1a9b      	subs	r3, r3, r2
 8011cae:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011cb2:	6823      	ldr	r3, [r4, #0]
 8011cb4:	4669      	mov	r1, sp
 8011cb6:	689b      	ldr	r3, [r3, #8]
 8011cb8:	4620      	mov	r0, r4
 8011cba:	4798      	blx	r3
 8011cbc:	69a4      	ldr	r4, [r4, #24]
 8011cbe:	2c00      	cmp	r4, #0
 8011cc0:	d1d8      	bne.n	8011c74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8011cc2:	b002      	add	sp, #8
 8011cc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011cc8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8011cc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011cca:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011cce:	460d      	mov	r5, r1
 8011cd0:	4616      	mov	r6, r2
 8011cd2:	b323      	cbz	r3, 8011d1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011cd4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011cd6:	b314      	cbz	r4, 8011d1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011cd8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011cdc:	b1eb      	cbz	r3, 8011d1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011cde:	6828      	ldr	r0, [r5, #0]
 8011ce0:	6869      	ldr	r1, [r5, #4]
 8011ce2:	466b      	mov	r3, sp
 8011ce4:	c303      	stmia	r3!, {r0, r1}
 8011ce6:	4668      	mov	r0, sp
 8011ce8:	1d21      	adds	r1, r4, #4
 8011cea:	f7ff ff15 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 8011cee:	4668      	mov	r0, sp
 8011cf0:	f7ff ff55 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cf4:	b988      	cbnz	r0, 8011d1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011cf6:	f8bd 3000 	ldrh.w	r3, [sp]
 8011cfa:	88a2      	ldrh	r2, [r4, #4]
 8011cfc:	1a9b      	subs	r3, r3, r2
 8011cfe:	f8ad 3000 	strh.w	r3, [sp]
 8011d02:	88e2      	ldrh	r2, [r4, #6]
 8011d04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d08:	1a9b      	subs	r3, r3, r2
 8011d0a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011d0e:	6823      	ldr	r3, [r4, #0]
 8011d10:	4632      	mov	r2, r6
 8011d12:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8011d14:	4669      	mov	r1, sp
 8011d16:	4620      	mov	r0, r4
 8011d18:	4798      	blx	r3
 8011d1a:	69a4      	ldr	r4, [r4, #24]
 8011d1c:	e7db      	b.n	8011cd6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8011d1e:	b002      	add	sp, #8
 8011d20:	bd70      	pop	{r4, r5, r6, pc}

08011d22 <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 8011d22:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011d26:	4770      	bx	lr

08011d28 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8011d28:	b538      	push	{r3, r4, r5, lr}
 8011d2a:	7882      	ldrb	r2, [r0, #2]
 8011d2c:	6843      	ldr	r3, [r0, #4]
 8011d2e:	4604      	mov	r4, r0
 8011d30:	460d      	mov	r5, r1
 8011d32:	b98a      	cbnz	r2, 8011d58 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011d34:	4299      	cmp	r1, r3
 8011d36:	d101      	bne.n	8011d3c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011d38:	2301      	movs	r3, #1
 8011d3a:	7083      	strb	r3, [r0, #2]
 8011d3c:	6863      	ldr	r3, [r4, #4]
 8011d3e:	42ab      	cmp	r3, r5
 8011d40:	d009      	beq.n	8011d56 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8011d42:	7a23      	ldrb	r3, [r4, #8]
 8011d44:	2b01      	cmp	r3, #1
 8011d46:	d11b      	bne.n	8011d80 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8011d48:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011d4c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011d50:	429a      	cmp	r2, r3
 8011d52:	bfb8      	it	lt
 8011d54:	8023      	strhlt	r3, [r4, #0]
 8011d56:	bd38      	pop	{r3, r4, r5, pc}
 8011d58:	7a02      	ldrb	r2, [r0, #8]
 8011d5a:	2a01      	cmp	r2, #1
 8011d5c:	d108      	bne.n	8011d70 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 8011d5e:	895b      	ldrh	r3, [r3, #10]
 8011d60:	88c9      	ldrh	r1, [r1, #6]
 8011d62:	1ac9      	subs	r1, r1, r3
 8011d64:	682b      	ldr	r3, [r5, #0]
 8011d66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011d68:	b209      	sxth	r1, r1
 8011d6a:	4628      	mov	r0, r5
 8011d6c:	4798      	blx	r3
 8011d6e:	e7e5      	b.n	8011d3c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011d70:	2a02      	cmp	r2, #2
 8011d72:	d1e3      	bne.n	8011d3c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011d74:	891b      	ldrh	r3, [r3, #8]
 8011d76:	8889      	ldrh	r1, [r1, #4]
 8011d78:	1ac9      	subs	r1, r1, r3
 8011d7a:	682b      	ldr	r3, [r5, #0]
 8011d7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d7e:	e7f3      	b.n	8011d68 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 8011d80:	2b02      	cmp	r3, #2
 8011d82:	d1e8      	bne.n	8011d56 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8011d84:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011d88:	e7e0      	b.n	8011d4c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08011d8a <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8011d8a:	4770      	bx	lr

08011d8c <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8011d8c:	4770      	bx	lr

08011d8e <_ZN8touchgfx10ListLayoutD1Ev>:
 8011d8e:	4770      	bx	lr

08011d90 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 8011d90:	b430      	push	{r4, r5}
 8011d92:	68c5      	ldr	r5, [r0, #12]
 8011d94:	6844      	ldr	r4, [r0, #4]
 8011d96:	106a      	asrs	r2, r5, #1
 8011d98:	4603      	mov	r3, r0
 8011d9a:	07ed      	lsls	r5, r5, #31
 8011d9c:	eb04 0002 	add.w	r0, r4, r2
 8011da0:	689b      	ldr	r3, [r3, #8]
 8011da2:	bf48      	it	mi
 8011da4:	58a2      	ldrmi	r2, [r4, r2]
 8011da6:	bc30      	pop	{r4, r5}
 8011da8:	bf48      	it	mi
 8011daa:	58d3      	ldrmi	r3, [r2, r3]
 8011dac:	4718      	bx	r3

08011dae <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 8011dae:	6843      	ldr	r3, [r0, #4]
 8011db0:	b12b      	cbz	r3, 8011dbe <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 8011db2:	6883      	ldr	r3, [r0, #8]
 8011db4:	b92b      	cbnz	r3, 8011dc2 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8011db6:	68c0      	ldr	r0, [r0, #12]
 8011db8:	f000 0001 	and.w	r0, r0, #1
 8011dbc:	4770      	bx	lr
 8011dbe:	4618      	mov	r0, r3
 8011dc0:	4770      	bx	lr
 8011dc2:	2001      	movs	r0, #1
 8011dc4:	4770      	bx	lr

08011dc6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8011dc6:	b430      	push	{r4, r5}
 8011dc8:	68c5      	ldr	r5, [r0, #12]
 8011dca:	6844      	ldr	r4, [r0, #4]
 8011dcc:	106a      	asrs	r2, r5, #1
 8011dce:	4603      	mov	r3, r0
 8011dd0:	07ed      	lsls	r5, r5, #31
 8011dd2:	eb04 0002 	add.w	r0, r4, r2
 8011dd6:	689b      	ldr	r3, [r3, #8]
 8011dd8:	bf48      	it	mi
 8011dda:	58a2      	ldrmi	r2, [r4, r2]
 8011ddc:	bc30      	pop	{r4, r5}
 8011dde:	bf48      	it	mi
 8011de0:	58d3      	ldrmi	r3, [r2, r3]
 8011de2:	4718      	bx	r3

08011de4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8011de4:	6843      	ldr	r3, [r0, #4]
 8011de6:	b12b      	cbz	r3, 8011df4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8011de8:	6883      	ldr	r3, [r0, #8]
 8011dea:	b92b      	cbnz	r3, 8011df8 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8011dec:	68c0      	ldr	r0, [r0, #12]
 8011dee:	f000 0001 	and.w	r0, r0, #1
 8011df2:	4770      	bx	lr
 8011df4:	4618      	mov	r0, r3
 8011df6:	4770      	bx	lr
 8011df8:	2001      	movs	r0, #1
 8011dfa:	4770      	bx	lr

08011dfc <_ZN8touchgfx10ListLayoutD0Ev>:
 8011dfc:	b510      	push	{r4, lr}
 8011dfe:	2130      	movs	r1, #48	; 0x30
 8011e00:	4604      	mov	r4, r0
 8011e02:	f013 fcaf 	bl	8025764 <_ZdlPvj>
 8011e06:	4620      	mov	r0, r4
 8011e08:	bd10      	pop	{r4, pc}

08011e0a <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8011e0a:	b510      	push	{r4, lr}
 8011e0c:	2110      	movs	r1, #16
 8011e0e:	4604      	mov	r4, r0
 8011e10:	f013 fca8 	bl	8025764 <_ZdlPvj>
 8011e14:	4620      	mov	r0, r4
 8011e16:	bd10      	pop	{r4, pc}

08011e18 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8011e18:	b510      	push	{r4, lr}
 8011e1a:	2110      	movs	r1, #16
 8011e1c:	4604      	mov	r4, r0
 8011e1e:	f013 fca1 	bl	8025764 <_ZdlPvj>
 8011e22:	4620      	mov	r0, r4
 8011e24:	bd10      	pop	{r4, pc}

08011e26 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8011e26:	4603      	mov	r3, r0
 8011e28:	4608      	mov	r0, r1
 8011e2a:	789a      	ldrb	r2, [r3, #2]
 8011e2c:	b992      	cbnz	r2, 8011e54 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 8011e2e:	685a      	ldr	r2, [r3, #4]
 8011e30:	428a      	cmp	r2, r1
 8011e32:	d102      	bne.n	8011e3a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011e34:	2201      	movs	r2, #1
 8011e36:	709a      	strb	r2, [r3, #2]
 8011e38:	4770      	bx	lr
 8011e3a:	7a1a      	ldrb	r2, [r3, #8]
 8011e3c:	2a01      	cmp	r2, #1
 8011e3e:	d104      	bne.n	8011e4a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 8011e40:	88ca      	ldrh	r2, [r1, #6]
 8011e42:	8949      	ldrh	r1, [r1, #10]
 8011e44:	440a      	add	r2, r1
 8011e46:	801a      	strh	r2, [r3, #0]
 8011e48:	4770      	bx	lr
 8011e4a:	2a02      	cmp	r2, #2
 8011e4c:	d116      	bne.n	8011e7c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8011e4e:	888a      	ldrh	r2, [r1, #4]
 8011e50:	8909      	ldrh	r1, [r1, #8]
 8011e52:	e7f7      	b.n	8011e44 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8011e54:	7a1a      	ldrb	r2, [r3, #8]
 8011e56:	2a01      	cmp	r2, #1
 8011e58:	d107      	bne.n	8011e6a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8011e5a:	685b      	ldr	r3, [r3, #4]
 8011e5c:	8959      	ldrh	r1, [r3, #10]
 8011e5e:	88c3      	ldrh	r3, [r0, #6]
 8011e60:	4419      	add	r1, r3
 8011e62:	6803      	ldr	r3, [r0, #0]
 8011e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011e66:	b209      	sxth	r1, r1
 8011e68:	4718      	bx	r3
 8011e6a:	2a02      	cmp	r2, #2
 8011e6c:	d106      	bne.n	8011e7c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8011e6e:	685b      	ldr	r3, [r3, #4]
 8011e70:	8919      	ldrh	r1, [r3, #8]
 8011e72:	8883      	ldrh	r3, [r0, #4]
 8011e74:	4419      	add	r1, r3
 8011e76:	6803      	ldr	r3, [r0, #0]
 8011e78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e7a:	e7f4      	b.n	8011e66 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8011e7c:	4770      	bx	lr

08011e7e <_ZN8touchgfx10ListLayout9removeAllEv>:
 8011e7e:	2200      	movs	r2, #0
 8011e80:	b510      	push	{r4, lr}
 8011e82:	4611      	mov	r1, r2
 8011e84:	4604      	mov	r4, r0
 8011e86:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8011e88:	f7f0 f9ad 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011e8c:	4620      	mov	r0, r4
 8011e8e:	f7ff fc99 	bl	80117c4 <_ZN8touchgfx9Container9removeAllEv>
 8011e92:	6960      	ldr	r0, [r4, #20]
 8011e94:	b120      	cbz	r0, 8011ea0 <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8011e96:	6803      	ldr	r3, [r0, #0]
 8011e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e9c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e9e:	4718      	bx	r3
 8011ea0:	bd10      	pop	{r4, pc}
	...

08011ea4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8011ea4:	b530      	push	{r4, r5, lr}
 8011ea6:	1e4b      	subs	r3, r1, #1
 8011ea8:	2b01      	cmp	r3, #1
 8011eaa:	b085      	sub	sp, #20
 8011eac:	4604      	mov	r4, r0
 8011eae:	d905      	bls.n	8011ebc <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x18>
 8011eb0:	4b11      	ldr	r3, [pc, #68]	; (8011ef8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x54>)
 8011eb2:	4a12      	ldr	r2, [pc, #72]	; (8011efc <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x58>)
 8011eb4:	4812      	ldr	r0, [pc, #72]	; (8011f00 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x5c>)
 8011eb6:	21b3      	movs	r1, #179	; 0xb3
 8011eb8:	f013 fc82 	bl	80257c0 <__assert_func>
 8011ebc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011ec0:	428b      	cmp	r3, r1
 8011ec2:	d017      	beq.n	8011ef4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 8011ec4:	2500      	movs	r5, #0
 8011ec6:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8011eca:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8011ecc:	462a      	mov	r2, r5
 8011ece:	4629      	mov	r1, r5
 8011ed0:	f7f0 f989 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011ed4:	4b0b      	ldr	r3, [pc, #44]	; (8011f04 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x60>)
 8011ed6:	e9cd 3400 	strd	r3, r4, [sp]
 8011eda:	4b0b      	ldr	r3, [pc, #44]	; (8011f08 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x64>)
 8011edc:	e9cd 3502 	strd	r3, r5, [sp, #8]
 8011ee0:	6823      	ldr	r3, [r4, #0]
 8011ee2:	4620      	mov	r0, r4
 8011ee4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011ee6:	4669      	mov	r1, sp
 8011ee8:	4798      	blx	r3
 8011eea:	6960      	ldr	r0, [r4, #20]
 8011eec:	b110      	cbz	r0, 8011ef4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 8011eee:	6803      	ldr	r3, [r0, #0]
 8011ef0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ef2:	4798      	blx	r3
 8011ef4:	b005      	add	sp, #20
 8011ef6:	bd30      	pop	{r4, r5, pc}
 8011ef8:	080295bc 	.word	0x080295bc
 8011efc:	080296c4 	.word	0x080296c4
 8011f00:	080295fa 	.word	0x080295fa
 8011f04:	08029594 	.word	0x08029594
 8011f08:	08011f71 	.word	0x08011f71

08011f0c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 8011f0c:	b538      	push	{r3, r4, r5, lr}
 8011f0e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011f12:	2b01      	cmp	r3, #1
 8011f14:	460d      	mov	r5, r1
 8011f16:	4604      	mov	r4, r0
 8011f18:	4611      	mov	r1, r2
 8011f1a:	d002      	beq.n	8011f22 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 8011f1c:	2b02      	cmp	r3, #2
 8011f1e:	d015      	beq.n	8011f4c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011f20:	bd38      	pop	{r3, r4, r5, pc}
 8011f22:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011f26:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8011f2a:	429a      	cmp	r2, r3
 8011f2c:	bfb8      	it	lt
 8011f2e:	8103      	strhlt	r3, [r0, #8]
 8011f30:	896a      	ldrh	r2, [r5, #10]
 8011f32:	8943      	ldrh	r3, [r0, #10]
 8011f34:	4413      	add	r3, r2
 8011f36:	8143      	strh	r3, [r0, #10]
 8011f38:	460a      	mov	r2, r1
 8011f3a:	4628      	mov	r0, r5
 8011f3c:	2100      	movs	r1, #0
 8011f3e:	f7f0 fae5 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8011f42:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011f44:	896a      	ldrh	r2, [r5, #10]
 8011f46:	4413      	add	r3, r2
 8011f48:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8011f4a:	e7e9      	b.n	8011f20 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 8011f4c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011f50:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011f54:	429a      	cmp	r2, r3
 8011f56:	bfb8      	it	lt
 8011f58:	8143      	strhlt	r3, [r0, #10]
 8011f5a:	892a      	ldrh	r2, [r5, #8]
 8011f5c:	8903      	ldrh	r3, [r0, #8]
 8011f5e:	4413      	add	r3, r2
 8011f60:	8103      	strh	r3, [r0, #8]
 8011f62:	2200      	movs	r2, #0
 8011f64:	4628      	mov	r0, r5
 8011f66:	f7f0 fad1 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8011f6a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011f6c:	892a      	ldrh	r2, [r5, #8]
 8011f6e:	e7ea      	b.n	8011f46 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08011f70 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8011f70:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8011f74:	f7ff bfca 	b.w	8011f0c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08011f78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8011f78:	b570      	push	{r4, r5, r6, lr}
 8011f7a:	4604      	mov	r4, r0
 8011f7c:	460d      	mov	r5, r1
 8011f7e:	f7ff fff7 	bl	8011f70 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8011f82:	4620      	mov	r0, r4
 8011f84:	4629      	mov	r1, r5
 8011f86:	f7ff fc83 	bl	8011890 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011f8a:	6960      	ldr	r0, [r4, #20]
 8011f8c:	b120      	cbz	r0, 8011f98 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 8011f8e:	6803      	ldr	r3, [r0, #0]
 8011f90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f94:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011f96:	4718      	bx	r3
 8011f98:	bd70      	pop	{r4, r5, r6, pc}
	...

08011f9c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 8011f9c:	b530      	push	{r4, r5, lr}
 8011f9e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011fa0:	b089      	sub	sp, #36	; 0x24
 8011fa2:	4604      	mov	r4, r0
 8011fa4:	4615      	mov	r5, r2
 8011fa6:	b92b      	cbnz	r3, 8011fb4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8011fa8:	6803      	ldr	r3, [r0, #0]
 8011faa:	4611      	mov	r1, r2
 8011fac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011fae:	4798      	blx	r3
 8011fb0:	b009      	add	sp, #36	; 0x24
 8011fb2:	bd30      	pop	{r4, r5, pc}
 8011fb4:	f7ff fc51 	bl	801185a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8011fb8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8011fbc:	f88d 200c 	strb.w	r2, [sp, #12]
 8011fc0:	4a0f      	ldr	r2, [pc, #60]	; (8012000 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8011fc2:	9204      	str	r2, [sp, #16]
 8011fc4:	aa01      	add	r2, sp, #4
 8011fc6:	9205      	str	r2, [sp, #20]
 8011fc8:	4a0e      	ldr	r2, [pc, #56]	; (8012004 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 8011fca:	9502      	str	r5, [sp, #8]
 8011fcc:	2300      	movs	r3, #0
 8011fce:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011fd2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011fd6:	f88d 3006 	strb.w	r3, [sp, #6]
 8011fda:	6823      	ldr	r3, [r4, #0]
 8011fdc:	a904      	add	r1, sp, #16
 8011fde:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011fe0:	4620      	mov	r0, r4
 8011fe2:	4798      	blx	r3
 8011fe4:	4620      	mov	r0, r4
 8011fe6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8011fea:	4629      	mov	r1, r5
 8011fec:	f7ff ff8e 	bl	8011f0c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011ff0:	6960      	ldr	r0, [r4, #20]
 8011ff2:	2800      	cmp	r0, #0
 8011ff4:	d0dc      	beq.n	8011fb0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011ff6:	6803      	ldr	r3, [r0, #0]
 8011ff8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ffa:	4798      	blx	r3
 8011ffc:	e7d8      	b.n	8011fb0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011ffe:	bf00      	nop
 8012000:	080295ac 	.word	0x080295ac
 8012004:	08011e27 	.word	0x08011e27

08012008 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8012008:	b538      	push	{r3, r4, r5, lr}
 801200a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801200e:	2b01      	cmp	r3, #1
 8012010:	4604      	mov	r4, r0
 8012012:	460d      	mov	r5, r1
 8012014:	d002      	beq.n	801201c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8012016:	2b02      	cmp	r3, #2
 8012018:	d018      	beq.n	801204c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801201a:	bd38      	pop	{r3, r4, r5, pc}
 801201c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012020:	4293      	cmp	r3, r2
 8012022:	bfc8      	it	gt
 8012024:	8102      	strhgt	r2, [r0, #8]
 8012026:	894a      	ldrh	r2, [r1, #10]
 8012028:	8943      	ldrh	r3, [r0, #10]
 801202a:	1a9b      	subs	r3, r3, r2
 801202c:	8143      	strh	r3, [r0, #10]
 801202e:	680b      	ldr	r3, [r1, #0]
 8012030:	4628      	mov	r0, r5
 8012032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012034:	2100      	movs	r1, #0
 8012036:	4798      	blx	r3
 8012038:	682b      	ldr	r3, [r5, #0]
 801203a:	2100      	movs	r1, #0
 801203c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801203e:	4628      	mov	r0, r5
 8012040:	4798      	blx	r3
 8012042:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012044:	896a      	ldrh	r2, [r5, #10]
 8012046:	1a9b      	subs	r3, r3, r2
 8012048:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801204a:	e7e6      	b.n	801201a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801204c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012050:	4293      	cmp	r3, r2
 8012052:	bfc8      	it	gt
 8012054:	8142      	strhgt	r2, [r0, #10]
 8012056:	890a      	ldrh	r2, [r1, #8]
 8012058:	8903      	ldrh	r3, [r0, #8]
 801205a:	1a9b      	subs	r3, r3, r2
 801205c:	8103      	strh	r3, [r0, #8]
 801205e:	680b      	ldr	r3, [r1, #0]
 8012060:	4628      	mov	r0, r5
 8012062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012064:	2100      	movs	r1, #0
 8012066:	4798      	blx	r3
 8012068:	682b      	ldr	r3, [r5, #0]
 801206a:	2100      	movs	r1, #0
 801206c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801206e:	4628      	mov	r0, r5
 8012070:	4798      	blx	r3
 8012072:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012074:	892a      	ldrh	r2, [r5, #8]
 8012076:	e7e6      	b.n	8012046 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08012078 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8012078:	b530      	push	{r4, r5, lr}
 801207a:	b089      	sub	sp, #36	; 0x24
 801207c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8012080:	f88d 200c 	strb.w	r2, [sp, #12]
 8012084:	4a13      	ldr	r2, [pc, #76]	; (80120d4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8012086:	9204      	str	r2, [sp, #16]
 8012088:	aa01      	add	r2, sp, #4
 801208a:	9205      	str	r2, [sp, #20]
 801208c:	4a12      	ldr	r2, [pc, #72]	; (80120d8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801208e:	9102      	str	r1, [sp, #8]
 8012090:	2300      	movs	r3, #0
 8012092:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012096:	f88d 3006 	strb.w	r3, [sp, #6]
 801209a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801209e:	6803      	ldr	r3, [r0, #0]
 80120a0:	460d      	mov	r5, r1
 80120a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80120a4:	a904      	add	r1, sp, #16
 80120a6:	4604      	mov	r4, r0
 80120a8:	4798      	blx	r3
 80120aa:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80120ae:	b14b      	cbz	r3, 80120c4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80120b0:	4629      	mov	r1, r5
 80120b2:	4620      	mov	r0, r4
 80120b4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80120b8:	f7ff ffa6 	bl	8012008 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80120bc:	4629      	mov	r1, r5
 80120be:	4620      	mov	r0, r4
 80120c0:	f7ff fbb4 	bl	801182c <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80120c4:	6960      	ldr	r0, [r4, #20]
 80120c6:	b110      	cbz	r0, 80120ce <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80120c8:	6803      	ldr	r3, [r0, #0]
 80120ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80120cc:	4798      	blx	r3
 80120ce:	b009      	add	sp, #36	; 0x24
 80120d0:	bd30      	pop	{r4, r5, pc}
 80120d2:	bf00      	nop
 80120d4:	080295ac 	.word	0x080295ac
 80120d8:	08011d29 	.word	0x08011d29

080120dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80120dc:	b513      	push	{r0, r1, r4, lr}
 80120de:	6803      	ldr	r3, [r0, #0]
 80120e0:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 80120e4:	2300      	movs	r3, #0
 80120e6:	e9cd 3300 	strd	r3, r3, [sp]
 80120ea:	466b      	mov	r3, sp
 80120ec:	47a0      	blx	r4
 80120ee:	b002      	add	sp, #8
 80120f0:	bd10      	pop	{r4, pc}

080120f2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80120f2:	2301      	movs	r3, #1
 80120f4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80120f8:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80120fc:	4770      	bx	lr

080120fe <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80120fe:	2301      	movs	r3, #1
 8012100:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012104:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8012108:	4770      	bx	lr

0801210a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801210a:	6843      	ldr	r3, [r0, #4]
 801210c:	2201      	movs	r2, #1
 801210e:	725a      	strb	r2, [r3, #9]
 8012110:	6840      	ldr	r0, [r0, #4]
 8012112:	6803      	ldr	r3, [r0, #0]
 8012114:	691b      	ldr	r3, [r3, #16]
 8012116:	4718      	bx	r3

08012118 <_ZN8touchgfx3HAL8flushDMAEv>:
 8012118:	6840      	ldr	r0, [r0, #4]
 801211a:	6803      	ldr	r3, [r0, #0]
 801211c:	689b      	ldr	r3, [r3, #8]
 801211e:	4718      	bx	r3

08012120 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8012120:	b530      	push	{r4, r5, lr}
 8012122:	b08b      	sub	sp, #44	; 0x2c
 8012124:	6804      	ldr	r4, [r0, #0]
 8012126:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801212a:	9509      	str	r5, [sp, #36]	; 0x24
 801212c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8012130:	9508      	str	r5, [sp, #32]
 8012132:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012136:	9507      	str	r5, [sp, #28]
 8012138:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801213c:	9506      	str	r5, [sp, #24]
 801213e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8012142:	9505      	str	r5, [sp, #20]
 8012144:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8012148:	9504      	str	r5, [sp, #16]
 801214a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801214e:	9503      	str	r5, [sp, #12]
 8012150:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012154:	9502      	str	r5, [sp, #8]
 8012156:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801215a:	e9cd 3500 	strd	r3, r5, [sp]
 801215e:	4613      	mov	r3, r2
 8012160:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8012162:	2200      	movs	r2, #0
 8012164:	47a0      	blx	r4
 8012166:	b00b      	add	sp, #44	; 0x2c
 8012168:	bd30      	pop	{r4, r5, pc}
	...

0801216c <_ZN8touchgfx3HAL10beginFrameEv>:
 801216c:	4b04      	ldr	r3, [pc, #16]	; (8012180 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801216e:	781b      	ldrb	r3, [r3, #0]
 8012170:	b123      	cbz	r3, 801217c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8012172:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8012176:	f080 0001 	eor.w	r0, r0, #1
 801217a:	4770      	bx	lr
 801217c:	2001      	movs	r0, #1
 801217e:	4770      	bx	lr
 8012180:	200279ae 	.word	0x200279ae

08012184 <_ZN8touchgfx3HAL8endFrameEv>:
 8012184:	b510      	push	{r4, lr}
 8012186:	4604      	mov	r4, r0
 8012188:	6840      	ldr	r0, [r0, #4]
 801218a:	6803      	ldr	r3, [r0, #0]
 801218c:	689b      	ldr	r3, [r3, #8]
 801218e:	4798      	blx	r3
 8012190:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8012194:	b113      	cbz	r3, 801219c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8012196:	2301      	movs	r3, #1
 8012198:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 801219c:	bd10      	pop	{r4, pc}

0801219e <_ZN8touchgfx3HAL10initializeEv>:
 801219e:	b510      	push	{r4, lr}
 80121a0:	4604      	mov	r4, r0
 80121a2:	f7ee fd6f 	bl	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv>
 80121a6:	6860      	ldr	r0, [r4, #4]
 80121a8:	6803      	ldr	r3, [r0, #0]
 80121aa:	68db      	ldr	r3, [r3, #12]
 80121ac:	4798      	blx	r3
 80121ae:	68e0      	ldr	r0, [r4, #12]
 80121b0:	6803      	ldr	r3, [r0, #0]
 80121b2:	689b      	ldr	r3, [r3, #8]
 80121b4:	4798      	blx	r3
 80121b6:	6823      	ldr	r3, [r4, #0]
 80121b8:	4620      	mov	r0, r4
 80121ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80121bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121c0:	4718      	bx	r3
	...

080121c4 <_ZN8touchgfx3HAL4tickEv>:
 80121c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80121c6:	6803      	ldr	r3, [r0, #0]
 80121c8:	4d5c      	ldr	r5, [pc, #368]	; (801233c <_ZN8touchgfx3HAL4tickEv+0x178>)
 80121ca:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80121ce:	4604      	mov	r4, r0
 80121d0:	4798      	blx	r3
 80121d2:	2800      	cmp	r0, #0
 80121d4:	f000 8097 	beq.w	8012306 <_ZN8touchgfx3HAL4tickEv+0x142>
 80121d8:	2001      	movs	r0, #1
 80121da:	f7ee fabb 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80121de:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80121e2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80121e6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80121ea:	2600      	movs	r6, #0
 80121ec:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80121f0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80121f4:	b133      	cbz	r3, 8012204 <_ZN8touchgfx3HAL4tickEv+0x40>
 80121f6:	6823      	ldr	r3, [r4, #0]
 80121f8:	4620      	mov	r0, r4
 80121fa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80121fe:	4798      	blx	r3
 8012200:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8012204:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8012208:	6862      	ldr	r2, [r4, #4]
 801220a:	f083 0301 	eor.w	r3, r3, #1
 801220e:	7253      	strb	r3, [r2, #9]
 8012210:	2601      	movs	r6, #1
 8012212:	702e      	strb	r6, [r5, #0]
 8012214:	f003 fcc2 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8012218:	6803      	ldr	r3, [r0, #0]
 801221a:	4631      	mov	r1, r6
 801221c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801221e:	4798      	blx	r3
 8012220:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8012224:	b90b      	cbnz	r3, 801222a <_ZN8touchgfx3HAL4tickEv+0x66>
 8012226:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 801222a:	f003 fcb7 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 801222e:	6803      	ldr	r3, [r0, #0]
 8012230:	695b      	ldr	r3, [r3, #20]
 8012232:	4798      	blx	r3
 8012234:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8012236:	6803      	ldr	r3, [r0, #0]
 8012238:	691b      	ldr	r3, [r3, #16]
 801223a:	4798      	blx	r3
 801223c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8012240:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8012244:	3b01      	subs	r3, #1
 8012246:	b2db      	uxtb	r3, r3
 8012248:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 801224c:	b10a      	cbz	r2, 8012252 <_ZN8touchgfx3HAL4tickEv+0x8e>
 801224e:	2b00      	cmp	r3, #0
 8012250:	d1eb      	bne.n	801222a <_ZN8touchgfx3HAL4tickEv+0x66>
 8012252:	4a3b      	ldr	r2, [pc, #236]	; (8012340 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8012254:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8012258:	7813      	ldrb	r3, [r2, #0]
 801225a:	3301      	adds	r3, #1
 801225c:	b25b      	sxtb	r3, r3
 801225e:	4299      	cmp	r1, r3
 8012260:	7013      	strb	r3, [r2, #0]
 8012262:	dc10      	bgt.n	8012286 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8012264:	68e0      	ldr	r0, [r4, #12]
 8012266:	2300      	movs	r3, #0
 8012268:	7013      	strb	r3, [r2, #0]
 801226a:	6803      	ldr	r3, [r0, #0]
 801226c:	aa03      	add	r2, sp, #12
 801226e:	68db      	ldr	r3, [r3, #12]
 8012270:	a902      	add	r1, sp, #8
 8012272:	4798      	blx	r3
 8012274:	6823      	ldr	r3, [r4, #0]
 8012276:	2800      	cmp	r0, #0
 8012278:	d051      	beq.n	801231e <_ZN8touchgfx3HAL4tickEv+0x15a>
 801227a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801227e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8012282:	4620      	mov	r0, r4
 8012284:	4798      	blx	r3
 8012286:	6960      	ldr	r0, [r4, #20]
 8012288:	2300      	movs	r3, #0
 801228a:	f88d 3007 	strb.w	r3, [sp, #7]
 801228e:	b158      	cbz	r0, 80122a8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8012290:	6803      	ldr	r3, [r0, #0]
 8012292:	f10d 0107 	add.w	r1, sp, #7
 8012296:	68db      	ldr	r3, [r3, #12]
 8012298:	4798      	blx	r3
 801229a:	b128      	cbz	r0, 80122a8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 801229c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801229e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80122a2:	6803      	ldr	r3, [r0, #0]
 80122a4:	68db      	ldr	r3, [r3, #12]
 80122a6:	4798      	blx	r3
 80122a8:	f104 001c 	add.w	r0, r4, #28
 80122ac:	f013 f982 	bl	80255b4 <_ZN8touchgfx8Gestures4tickEv>
 80122b0:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80122b4:	b30b      	cbz	r3, 80122fa <_ZN8touchgfx3HAL4tickEv+0x136>
 80122b6:	6920      	ldr	r0, [r4, #16]
 80122b8:	6803      	ldr	r3, [r0, #0]
 80122ba:	691b      	ldr	r3, [r3, #16]
 80122bc:	4798      	blx	r3
 80122be:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80122c0:	4606      	mov	r6, r0
 80122c2:	b903      	cbnz	r3, 80122c6 <_ZN8touchgfx3HAL4tickEv+0x102>
 80122c4:	6720      	str	r0, [r4, #112]	; 0x70
 80122c6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80122c8:	4a1e      	ldr	r2, [pc, #120]	; (8012344 <_ZN8touchgfx3HAL4tickEv+0x180>)
 80122ca:	1af3      	subs	r3, r6, r3
 80122cc:	4293      	cmp	r3, r2
 80122ce:	d914      	bls.n	80122fa <_ZN8touchgfx3HAL4tickEv+0x136>
 80122d0:	6920      	ldr	r0, [r4, #16]
 80122d2:	6803      	ldr	r3, [r0, #0]
 80122d4:	699b      	ldr	r3, [r3, #24]
 80122d6:	4798      	blx	r3
 80122d8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80122da:	2264      	movs	r2, #100	; 0x64
 80122dc:	1af3      	subs	r3, r6, r3
 80122de:	fbb3 f3f2 	udiv	r3, r3, r2
 80122e2:	fbb0 f0f3 	udiv	r0, r0, r3
 80122e6:	2800      	cmp	r0, #0
 80122e8:	dc1e      	bgt.n	8012328 <_ZN8touchgfx3HAL4tickEv+0x164>
 80122ea:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80122ee:	6920      	ldr	r0, [r4, #16]
 80122f0:	6803      	ldr	r3, [r0, #0]
 80122f2:	2100      	movs	r1, #0
 80122f4:	69db      	ldr	r3, [r3, #28]
 80122f6:	4798      	blx	r3
 80122f8:	6726      	str	r6, [r4, #112]	; 0x70
 80122fa:	f003 fc4f 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 80122fe:	6803      	ldr	r3, [r0, #0]
 8012300:	2100      	movs	r1, #0
 8012302:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012304:	4798      	blx	r3
 8012306:	6823      	ldr	r3, [r4, #0]
 8012308:	4620      	mov	r0, r4
 801230a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801230e:	4798      	blx	r3
 8012310:	2001      	movs	r0, #1
 8012312:	f7ee fa3b 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012316:	2300      	movs	r3, #0
 8012318:	702b      	strb	r3, [r5, #0]
 801231a:	b004      	add	sp, #16
 801231c:	bd70      	pop	{r4, r5, r6, pc}
 801231e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8012322:	4620      	mov	r0, r4
 8012324:	4798      	blx	r3
 8012326:	e7ae      	b.n	8012286 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8012328:	2863      	cmp	r0, #99	; 0x63
 801232a:	bfcb      	itete	gt
 801232c:	2300      	movgt	r3, #0
 801232e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8012332:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8012336:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 801233a:	e7d8      	b.n	80122ee <_ZN8touchgfx3HAL4tickEv+0x12a>
 801233c:	200279b4 	.word	0x200279b4
 8012340:	200279b5 	.word	0x200279b5
 8012344:	05f5e100 	.word	0x05f5e100

08012348 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012348:	f7ee bccc 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801234c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 801234c:	6581      	str	r1, [r0, #88]	; 0x58
 801234e:	301c      	adds	r0, #28
 8012350:	f013 b92e 	b.w	80255b0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012354 <_ZN8touchgfx3HAL5touchEll>:
 8012354:	b530      	push	{r4, r5, lr}
 8012356:	b087      	sub	sp, #28
 8012358:	4604      	mov	r4, r0
 801235a:	a804      	add	r0, sp, #16
 801235c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8012360:	f003 f9d2 	bl	8015708 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8012364:	9b04      	ldr	r3, [sp, #16]
 8012366:	f8ad 300c 	strh.w	r3, [sp, #12]
 801236a:	a906      	add	r1, sp, #24
 801236c:	9b05      	ldr	r3, [sp, #20]
 801236e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8012372:	a803      	add	r0, sp, #12
 8012374:	f003 fa1a 	bl	80157ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8012378:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 801237c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012380:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8012384:	f104 001c 	add.w	r0, r4, #28
 8012388:	b189      	cbz	r1, 80123ae <_ZN8touchgfx3HAL5touchEll+0x5a>
 801238a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 801238e:	9300      	str	r3, [sp, #0]
 8012390:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012394:	4613      	mov	r3, r2
 8012396:	462a      	mov	r2, r5
 8012398:	f013 f91a 	bl	80255d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 801239c:	b128      	cbz	r0, 80123aa <_ZN8touchgfx3HAL5touchEll+0x56>
 801239e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80123a2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80123a4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80123a8:	6623      	str	r3, [r4, #96]	; 0x60
 80123aa:	b007      	add	sp, #28
 80123ac:	bd30      	pop	{r4, r5, pc}
 80123ae:	f013 f953 	bl	8025658 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80123b2:	2301      	movs	r3, #1
 80123b4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80123b8:	e7f1      	b.n	801239e <_ZN8touchgfx3HAL5touchEll+0x4a>

080123ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80123ba:	b510      	push	{r4, lr}
 80123bc:	2b00      	cmp	r3, #0
 80123be:	d046      	beq.n	801244e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80123c0:	ea81 0002 	eor.w	r0, r1, r2
 80123c4:	07c4      	lsls	r4, r0, #31
 80123c6:	d508      	bpl.n	80123da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80123c8:	440b      	add	r3, r1
 80123ca:	3a01      	subs	r2, #1
 80123cc:	428b      	cmp	r3, r1
 80123ce:	d93e      	bls.n	801244e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80123d0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80123d4:	f801 0b01 	strb.w	r0, [r1], #1
 80123d8:	e7f8      	b.n	80123cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80123da:	07d0      	lsls	r0, r2, #31
 80123dc:	bf42      	ittt	mi
 80123de:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80123e2:	f801 0b01 	strbmi.w	r0, [r1], #1
 80123e6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80123ea:	2b01      	cmp	r3, #1
 80123ec:	d911      	bls.n	8012412 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80123ee:	ea81 0402 	eor.w	r4, r1, r2
 80123f2:	07a4      	lsls	r4, r4, #30
 80123f4:	4610      	mov	r0, r2
 80123f6:	d022      	beq.n	801243e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80123f8:	f023 0401 	bic.w	r4, r3, #1
 80123fc:	440c      	add	r4, r1
 80123fe:	428c      	cmp	r4, r1
 8012400:	4602      	mov	r2, r0
 8012402:	d904      	bls.n	801240e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012404:	8812      	ldrh	r2, [r2, #0]
 8012406:	f821 2b02 	strh.w	r2, [r1], #2
 801240a:	3002      	adds	r0, #2
 801240c:	e7f7      	b.n	80123fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801240e:	f003 0301 	and.w	r3, r3, #1
 8012412:	f023 0003 	bic.w	r0, r3, #3
 8012416:	4408      	add	r0, r1
 8012418:	4288      	cmp	r0, r1
 801241a:	4614      	mov	r4, r2
 801241c:	d904      	bls.n	8012428 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801241e:	6824      	ldr	r4, [r4, #0]
 8012420:	f841 4b04 	str.w	r4, [r1], #4
 8012424:	3204      	adds	r2, #4
 8012426:	e7f7      	b.n	8012418 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8012428:	f003 0303 	and.w	r3, r3, #3
 801242c:	440b      	add	r3, r1
 801242e:	3a01      	subs	r2, #1
 8012430:	428b      	cmp	r3, r1
 8012432:	d90c      	bls.n	801244e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012434:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012438:	f801 0b01 	strb.w	r0, [r1], #1
 801243c:	e7f8      	b.n	8012430 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801243e:	0790      	lsls	r0, r2, #30
 8012440:	d0e7      	beq.n	8012412 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012442:	f832 0b02 	ldrh.w	r0, [r2], #2
 8012446:	f821 0b02 	strh.w	r0, [r1], #2
 801244a:	3b02      	subs	r3, #2
 801244c:	e7e1      	b.n	8012412 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801244e:	2001      	movs	r0, #1
 8012450:	bd10      	pop	{r4, pc}

08012452 <_ZN8touchgfx3HAL7noTouchEv>:
 8012452:	b510      	push	{r4, lr}
 8012454:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8012458:	4604      	mov	r4, r0
 801245a:	b153      	cbz	r3, 8012472 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 801245c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8012460:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8012464:	2101      	movs	r1, #1
 8012466:	301c      	adds	r0, #28
 8012468:	f013 f8f6 	bl	8025658 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801246c:	2300      	movs	r3, #0
 801246e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8012472:	bd10      	pop	{r4, pc}

08012474 <_ZN8touchgfx3HAL3lcdEv>:
 8012474:	4b04      	ldr	r3, [pc, #16]	; (8012488 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8012476:	681b      	ldr	r3, [r3, #0]
 8012478:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801247c:	b10a      	cbz	r2, 8012482 <_ZN8touchgfx3HAL3lcdEv+0xe>
 801247e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012480:	b900      	cbnz	r0, 8012484 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8012482:	6898      	ldr	r0, [r3, #8]
 8012484:	4770      	bx	lr
 8012486:	bf00      	nop
 8012488:	200279b0 	.word	0x200279b0

0801248c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 801248c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012490:	4604      	mov	r4, r0
 8012492:	6980      	ldr	r0, [r0, #24]
 8012494:	b085      	sub	sp, #20
 8012496:	460f      	mov	r7, r1
 8012498:	4690      	mov	r8, r2
 801249a:	4699      	mov	r9, r3
 801249c:	b930      	cbnz	r0, 80124ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 801249e:	4b1c      	ldr	r3, [pc, #112]	; (8012510 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80124a0:	4a1c      	ldr	r2, [pc, #112]	; (8012514 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80124a2:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 80124a6:	481c      	ldr	r0, [pc, #112]	; (8012518 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80124a8:	f013 f98a 	bl	80257c0 <__assert_func>
 80124ac:	ad04      	add	r5, sp, #16
 80124ae:	2600      	movs	r6, #0
 80124b0:	f845 6d04 	str.w	r6, [r5, #-4]!
 80124b4:	6806      	ldr	r6, [r0, #0]
 80124b6:	9501      	str	r5, [sp, #4]
 80124b8:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80124bc:	9500      	str	r5, [sp, #0]
 80124be:	6835      	ldr	r5, [r6, #0]
 80124c0:	47a8      	blx	r5
 80124c2:	4d16      	ldr	r5, [pc, #88]	; (801251c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80124c4:	4606      	mov	r6, r0
 80124c6:	f8a5 9000 	strh.w	r9, [r5]
 80124ca:	f7ff ffd3 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 80124ce:	6803      	ldr	r3, [r0, #0]
 80124d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124d2:	4798      	blx	r3
 80124d4:	2801      	cmp	r0, #1
 80124d6:	d012      	beq.n	80124fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80124d8:	d306      	bcc.n	80124e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80124da:	280d      	cmp	r0, #13
 80124dc:	d80b      	bhi.n	80124f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80124de:	4b10      	ldr	r3, [pc, #64]	; (8012520 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80124e0:	4a0c      	ldr	r2, [pc, #48]	; (8012514 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80124e2:	f240 1167 	movw	r1, #359	; 0x167
 80124e6:	e7de      	b.n	80124a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80124e8:	882b      	ldrh	r3, [r5, #0]
 80124ea:	fb08 7203 	mla	r2, r8, r3, r7
 80124ee:	9b03      	ldr	r3, [sp, #12]
 80124f0:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80124f4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80124f6:	4630      	mov	r0, r6
 80124f8:	b005      	add	sp, #20
 80124fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80124fe:	882a      	ldrh	r2, [r5, #0]
 8012500:	9b03      	ldr	r3, [sp, #12]
 8012502:	fb08 7202 	mla	r2, r8, r2, r7
 8012506:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801250a:	1a9a      	subs	r2, r3, r2
 801250c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801250e:	e7f2      	b.n	80124f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8012510:	08029876 	.word	0x08029876
 8012514:	08029b34 	.word	0x08029b34
 8012518:	080298bb 	.word	0x080298bb
 801251c:	200279aa 	.word	0x200279aa
 8012520:	080298e1 	.word	0x080298e1

08012524 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012524:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012526:	b08b      	sub	sp, #44	; 0x2c
 8012528:	4617      	mov	r7, r2
 801252a:	4604      	mov	r4, r0
 801252c:	460e      	mov	r6, r1
 801252e:	461d      	mov	r5, r3
 8012530:	f7ff ffa0 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8012534:	6803      	ldr	r3, [r0, #0]
 8012536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012538:	4798      	blx	r3
 801253a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801253e:	9007      	str	r0, [sp, #28]
 8012540:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012544:	4b0d      	ldr	r3, [pc, #52]	; (801257c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8012546:	6822      	ldr	r2, [r4, #0]
 8012548:	881b      	ldrh	r3, [r3, #0]
 801254a:	9306      	str	r3, [sp, #24]
 801254c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012550:	9305      	str	r3, [sp, #20]
 8012552:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8012556:	9304      	str	r3, [sp, #16]
 8012558:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801255c:	9303      	str	r3, [sp, #12]
 801255e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012562:	9302      	str	r3, [sp, #8]
 8012564:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012568:	e9cd 5300 	strd	r5, r3, [sp]
 801256c:	4631      	mov	r1, r6
 801256e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8012570:	463b      	mov	r3, r7
 8012572:	2200      	movs	r2, #0
 8012574:	4620      	mov	r0, r4
 8012576:	47a8      	blx	r5
 8012578:	b00b      	add	sp, #44	; 0x2c
 801257a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801257c:	200279aa 	.word	0x200279aa

08012580 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8012580:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012584:	4698      	mov	r8, r3
 8012586:	6803      	ldr	r3, [r0, #0]
 8012588:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801258a:	4b15      	ldr	r3, [pc, #84]	; (80125e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801258c:	b08b      	sub	sp, #44	; 0x2c
 801258e:	4617      	mov	r7, r2
 8012590:	f8b3 9000 	ldrh.w	r9, [r3]
 8012594:	460e      	mov	r6, r1
 8012596:	4604      	mov	r4, r0
 8012598:	f7ff ff6c 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 801259c:	6803      	ldr	r3, [r0, #0]
 801259e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80125a0:	4798      	blx	r3
 80125a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80125a6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80125aa:	2302      	movs	r3, #2
 80125ac:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80125b0:	2301      	movs	r3, #1
 80125b2:	9305      	str	r3, [sp, #20]
 80125b4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80125b8:	9304      	str	r3, [sp, #16]
 80125ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80125be:	9303      	str	r3, [sp, #12]
 80125c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80125c4:	9302      	str	r3, [sp, #8]
 80125c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80125ca:	2200      	movs	r2, #0
 80125cc:	e9cd 8300 	strd	r8, r3, [sp]
 80125d0:	4631      	mov	r1, r6
 80125d2:	463b      	mov	r3, r7
 80125d4:	4620      	mov	r0, r4
 80125d6:	47a8      	blx	r5
 80125d8:	b00b      	add	sp, #44	; 0x2c
 80125da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80125de:	bf00      	nop
 80125e0:	200279aa 	.word	0x200279aa

080125e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80125e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80125e8:	4698      	mov	r8, r3
 80125ea:	6803      	ldr	r3, [r0, #0]
 80125ec:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80125ee:	4b11      	ldr	r3, [pc, #68]	; (8012634 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80125f0:	b087      	sub	sp, #28
 80125f2:	f8b3 9000 	ldrh.w	r9, [r3]
 80125f6:	460e      	mov	r6, r1
 80125f8:	4617      	mov	r7, r2
 80125fa:	4604      	mov	r4, r0
 80125fc:	f7ff ff3a 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8012600:	6803      	ldr	r3, [r0, #0]
 8012602:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012604:	4798      	blx	r3
 8012606:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801260a:	f8cd 900c 	str.w	r9, [sp, #12]
 801260e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8012612:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8012616:	9302      	str	r3, [sp, #8]
 8012618:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801261c:	9301      	str	r3, [sp, #4]
 801261e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012622:	9300      	str	r3, [sp, #0]
 8012624:	463a      	mov	r2, r7
 8012626:	4643      	mov	r3, r8
 8012628:	4631      	mov	r1, r6
 801262a:	4620      	mov	r0, r4
 801262c:	47a8      	blx	r5
 801262e:	b007      	add	sp, #28
 8012630:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012634:	200279aa 	.word	0x200279aa

08012638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801263c:	4604      	mov	r4, r0
 801263e:	b08f      	sub	sp, #60	; 0x3c
 8012640:	4610      	mov	r0, r2
 8012642:	460d      	mov	r5, r1
 8012644:	4691      	mov	r9, r2
 8012646:	461e      	mov	r6, r3
 8012648:	f006 ff76 	bl	8019538 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801264c:	2800      	cmp	r0, #0
 801264e:	f000 809c 	beq.w	801278a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8012652:	6823      	ldr	r3, [r4, #0]
 8012654:	f8df b194 	ldr.w	fp, [pc, #404]	; 80127ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8012658:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801265a:	f8df a194 	ldr.w	sl, [pc, #404]	; 80127f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 801265e:	4f60      	ldr	r7, [pc, #384]	; (80127e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8012660:	4620      	mov	r0, r4
 8012662:	4798      	blx	r3
 8012664:	6823      	ldr	r3, [r4, #0]
 8012666:	4620      	mov	r0, r4
 8012668:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801266a:	4798      	blx	r3
 801266c:	f8bb 3000 	ldrh.w	r3, [fp]
 8012670:	9301      	str	r3, [sp, #4]
 8012672:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8012676:	f8ba 3000 	ldrh.w	r3, [sl]
 801267a:	9302      	str	r3, [sp, #8]
 801267c:	883b      	ldrh	r3, [r7, #0]
 801267e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8012682:	9303      	str	r3, [sp, #12]
 8012684:	4b57      	ldr	r3, [pc, #348]	; (80127e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012686:	9305      	str	r3, [sp, #20]
 8012688:	881a      	ldrh	r2, [r3, #0]
 801268a:	9204      	str	r2, [sp, #16]
 801268c:	4640      	mov	r0, r8
 801268e:	f007 f80d 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012692:	8038      	strh	r0, [r7, #0]
 8012694:	4640      	mov	r0, r8
 8012696:	f007 f843 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801269a:	9b05      	ldr	r3, [sp, #20]
 801269c:	8018      	strh	r0, [r3, #0]
 801269e:	4b52      	ldr	r3, [pc, #328]	; (80127e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80126a0:	781b      	ldrb	r3, [r3, #0]
 80126a2:	2b00      	cmp	r3, #0
 80126a4:	d174      	bne.n	8012790 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 80126a6:	883b      	ldrh	r3, [r7, #0]
 80126a8:	f8ab 3000 	strh.w	r3, [fp]
 80126ac:	f8aa 0000 	strh.w	r0, [sl]
 80126b0:	4648      	mov	r0, r9
 80126b2:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80126b6:	f006 ff3f 	bl	8019538 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80126ba:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80126be:	2200      	movs	r2, #0
 80126c0:	4611      	mov	r1, r2
 80126c2:	4628      	mov	r0, r5
 80126c4:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80126c8:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80126cc:	f7ef ff1e 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 80126d0:	2301      	movs	r3, #1
 80126d2:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80126d6:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80126da:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80126de:	2b00      	cmp	r3, #0
 80126e0:	dd5c      	ble.n	801279c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 80126e2:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80126e6:	2b00      	cmp	r3, #0
 80126e8:	dd58      	ble.n	801279c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 80126ea:	462a      	mov	r2, r5
 80126ec:	ab0a      	add	r3, sp, #40	; 0x28
 80126ee:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80126f2:	6851      	ldr	r1, [r2, #4]
 80126f4:	c303      	stmia	r3!, {r0, r1}
 80126f6:	4631      	mov	r1, r6
 80126f8:	a80a      	add	r0, sp, #40	; 0x28
 80126fa:	f7ff fa0d 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 80126fe:	4b38      	ldr	r3, [pc, #224]	; (80127e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8012700:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012704:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012708:	2100      	movs	r1, #0
 801270a:	aa0a      	add	r2, sp, #40	; 0x28
 801270c:	4b35      	ldr	r3, [pc, #212]	; (80127e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801270e:	910c      	str	r1, [sp, #48]	; 0x30
 8012710:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012714:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012718:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801271c:	ab08      	add	r3, sp, #32
 801271e:	e883 0003 	stmia.w	r3, {r0, r1}
 8012722:	4618      	mov	r0, r3
 8012724:	a90c      	add	r1, sp, #48	; 0x30
 8012726:	f7ff f9f7 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801272a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801272c:	2b00      	cmp	r3, #0
 801272e:	d13c      	bne.n	80127aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8012730:	2000      	movs	r0, #0
 8012732:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8012736:	2600      	movs	r6, #0
 8012738:	682a      	ldr	r2, [r5, #0]
 801273a:	696b      	ldr	r3, [r5, #20]
 801273c:	616e      	str	r6, [r5, #20]
 801273e:	9305      	str	r3, [sp, #20]
 8012740:	6892      	ldr	r2, [r2, #8]
 8012742:	a908      	add	r1, sp, #32
 8012744:	4628      	mov	r0, r5
 8012746:	4790      	blx	r2
 8012748:	9b05      	ldr	r3, [sp, #20]
 801274a:	616b      	str	r3, [r5, #20]
 801274c:	4652      	mov	r2, sl
 801274e:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8012752:	4649      	mov	r1, r9
 8012754:	4628      	mov	r0, r5
 8012756:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801275a:	f7ef fed7 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 801275e:	4b23      	ldr	r3, [pc, #140]	; (80127ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8012760:	9a01      	ldr	r2, [sp, #4]
 8012762:	801a      	strh	r2, [r3, #0]
 8012764:	4b22      	ldr	r3, [pc, #136]	; (80127f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8012766:	9a02      	ldr	r2, [sp, #8]
 8012768:	801a      	strh	r2, [r3, #0]
 801276a:	4b1d      	ldr	r3, [pc, #116]	; (80127e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 801276c:	9a03      	ldr	r2, [sp, #12]
 801276e:	801a      	strh	r2, [r3, #0]
 8012770:	4b1c      	ldr	r3, [pc, #112]	; (80127e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012772:	9a04      	ldr	r2, [sp, #16]
 8012774:	801a      	strh	r2, [r3, #0]
 8012776:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801277a:	6823      	ldr	r3, [r4, #0]
 801277c:	4620      	mov	r0, r4
 801277e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012780:	4798      	blx	r3
 8012782:	6823      	ldr	r3, [r4, #0]
 8012784:	4620      	mov	r0, r4
 8012786:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012788:	4798      	blx	r3
 801278a:	b00f      	add	sp, #60	; 0x3c
 801278c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012790:	883b      	ldrh	r3, [r7, #0]
 8012792:	f8ab 0000 	strh.w	r0, [fp]
 8012796:	f8aa 3000 	strh.w	r3, [sl]
 801279a:	e789      	b.n	80126b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 801279c:	462a      	mov	r2, r5
 801279e:	ab0a      	add	r3, sp, #40	; 0x28
 80127a0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80127a4:	6851      	ldr	r1, [r2, #4]
 80127a6:	c303      	stmia	r3!, {r0, r1}
 80127a8:	e7a9      	b.n	80126fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 80127aa:	a807      	add	r0, sp, #28
 80127ac:	f007 f910 	bl	80199d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80127b0:	4606      	mov	r6, r0
 80127b2:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80127b4:	6803      	ldr	r3, [r0, #0]
 80127b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80127b8:	4798      	blx	r3
 80127ba:	4286      	cmp	r6, r0
 80127bc:	d1b8      	bne.n	8012730 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 80127be:	f7ff fe59 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 80127c2:	6803      	ldr	r3, [r0, #0]
 80127c4:	4606      	mov	r6, r0
 80127c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127c8:	9305      	str	r3, [sp, #20]
 80127ca:	a807      	add	r0, sp, #28
 80127cc:	f007 f900 	bl	80199d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80127d0:	9b05      	ldr	r3, [sp, #20]
 80127d2:	4601      	mov	r1, r0
 80127d4:	4630      	mov	r0, r6
 80127d6:	4798      	blx	r3
 80127d8:	f080 0001 	eor.w	r0, r0, #1
 80127dc:	b2c0      	uxtb	r0, r0
 80127de:	e7a8      	b.n	8012732 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80127e0:	200279a4 	.word	0x200279a4
 80127e4:	200279a6 	.word	0x200279a6
 80127e8:	200279a8 	.word	0x200279a8
 80127ec:	200279aa 	.word	0x200279aa
 80127f0:	200279ac 	.word	0x200279ac

080127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80127f4:	b510      	push	{r4, lr}
 80127f6:	4b07      	ldr	r3, [pc, #28]	; (8012814 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80127f8:	781b      	ldrb	r3, [r3, #0]
 80127fa:	4604      	mov	r4, r0
 80127fc:	b13b      	cbz	r3, 801280e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80127fe:	6803      	ldr	r3, [r0, #0]
 8012800:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012802:	4798      	blx	r3
 8012804:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012806:	4283      	cmp	r3, r0
 8012808:	d101      	bne.n	801280e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801280a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 801280c:	bd10      	pop	{r4, pc}
 801280e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012810:	e7fc      	b.n	801280c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012812:	bf00      	nop
 8012814:	200279ae 	.word	0x200279ae

08012818 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801281c:	b088      	sub	sp, #32
 801281e:	461d      	mov	r5, r3
 8012820:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012824:	2400      	movs	r4, #0
 8012826:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 801282a:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 801282e:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8012832:	9403      	str	r4, [sp, #12]
 8012834:	e9cd 3100 	strd	r3, r1, [sp]
 8012838:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801283c:	f8ad 8014 	strh.w	r8, [sp, #20]
 8012840:	4692      	mov	sl, r2
 8012842:	4606      	mov	r6, r0
 8012844:	f8ad 7016 	strh.w	r7, [sp, #22]
 8012848:	f8ad 3018 	strh.w	r3, [sp, #24]
 801284c:	f88d 401c 	strb.w	r4, [sp, #28]
 8012850:	f7ff ffd0 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012854:	fb09 a505 	mla	r5, r9, r5, sl
 8012858:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801285c:	9504      	str	r5, [sp, #16]
 801285e:	f8ad 901a 	strh.w	r9, [sp, #26]
 8012862:	f88d 401e 	strb.w	r4, [sp, #30]
 8012866:	f88d 401d 	strb.w	r4, [sp, #29]
 801286a:	f88d 401f 	strb.w	r4, [sp, #31]
 801286e:	f1b8 0f00 	cmp.w	r8, #0
 8012872:	d000      	beq.n	8012876 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 8012874:	b937      	cbnz	r7, 8012884 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 8012876:	4b0d      	ldr	r3, [pc, #52]	; (80128ac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8012878:	4a0d      	ldr	r2, [pc, #52]	; (80128b0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 801287a:	f240 210b 	movw	r1, #523	; 0x20b
 801287e:	480d      	ldr	r0, [pc, #52]	; (80128b4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8012880:	f012 ff9e 	bl	80257c0 <__assert_func>
 8012884:	6833      	ldr	r3, [r6, #0]
 8012886:	9c00      	ldr	r4, [sp, #0]
 8012888:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801288a:	4630      	mov	r0, r6
 801288c:	4798      	blx	r3
 801288e:	4220      	tst	r0, r4
 8012890:	d104      	bne.n	801289c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 8012892:	4b09      	ldr	r3, [pc, #36]	; (80128b8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8012894:	4a06      	ldr	r2, [pc, #24]	; (80128b0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8012896:	f44f 7103 	mov.w	r1, #524	; 0x20c
 801289a:	e7f0      	b.n	801287e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 801289c:	6870      	ldr	r0, [r6, #4]
 801289e:	6803      	ldr	r3, [r0, #0]
 80128a0:	4669      	mov	r1, sp
 80128a2:	685b      	ldr	r3, [r3, #4]
 80128a4:	4798      	blx	r3
 80128a6:	b008      	add	sp, #32
 80128a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80128ac:	08029709 	.word	0x08029709
 80128b0:	08029969 	.word	0x08029969
 80128b4:	080298bb 	.word	0x080298bb
 80128b8:	08029741 	.word	0x08029741

080128bc <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80128bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128c0:	b089      	sub	sp, #36	; 0x24
 80128c2:	2400      	movs	r4, #0
 80128c4:	461d      	mov	r5, r3
 80128c6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80128ca:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 80128ce:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 80128d2:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80128d6:	9403      	str	r4, [sp, #12]
 80128d8:	468a      	mov	sl, r1
 80128da:	4693      	mov	fp, r2
 80128dc:	4606      	mov	r6, r0
 80128de:	e9cd 3400 	strd	r3, r4, [sp]
 80128e2:	f7ff ff87 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80128e6:	fb09 b505 	mla	r5, r9, r5, fp
 80128ea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80128ee:	9504      	str	r5, [sp, #16]
 80128f0:	f8ad 8014 	strh.w	r8, [sp, #20]
 80128f4:	f8ad 7016 	strh.w	r7, [sp, #22]
 80128f8:	f8ad 4018 	strh.w	r4, [sp, #24]
 80128fc:	f8ad 901a 	strh.w	r9, [sp, #26]
 8012900:	f8cd a00c 	str.w	sl, [sp, #12]
 8012904:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012908:	f88d 401e 	strb.w	r4, [sp, #30]
 801290c:	f88d 401f 	strb.w	r4, [sp, #31]
 8012910:	f1b8 0f00 	cmp.w	r8, #0
 8012914:	d000      	beq.n	8012918 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 8012916:	b937      	cbnz	r7, 8012926 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 8012918:	4b0d      	ldr	r3, [pc, #52]	; (8012950 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 801291a:	4a0e      	ldr	r2, [pc, #56]	; (8012954 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 801291c:	f240 2121 	movw	r1, #545	; 0x221
 8012920:	480d      	ldr	r0, [pc, #52]	; (8012958 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8012922:	f012 ff4d 	bl	80257c0 <__assert_func>
 8012926:	6833      	ldr	r3, [r6, #0]
 8012928:	9c00      	ldr	r4, [sp, #0]
 801292a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801292c:	4630      	mov	r0, r6
 801292e:	4798      	blx	r3
 8012930:	4220      	tst	r0, r4
 8012932:	d104      	bne.n	801293e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 8012934:	4b09      	ldr	r3, [pc, #36]	; (801295c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8012936:	4a07      	ldr	r2, [pc, #28]	; (8012954 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8012938:	f240 2122 	movw	r1, #546	; 0x222
 801293c:	e7f0      	b.n	8012920 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 801293e:	6870      	ldr	r0, [r6, #4]
 8012940:	6803      	ldr	r3, [r0, #0]
 8012942:	4669      	mov	r1, sp
 8012944:	685b      	ldr	r3, [r3, #4]
 8012946:	4798      	blx	r3
 8012948:	b009      	add	sp, #36	; 0x24
 801294a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801294e:	bf00      	nop
 8012950:	08029786 	.word	0x08029786
 8012954:	080299df 	.word	0x080299df
 8012958:	080298bb 	.word	0x080298bb
 801295c:	080297be 	.word	0x080297be

08012960 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012960:	b510      	push	{r4, lr}
 8012962:	4b0b      	ldr	r3, [pc, #44]	; (8012990 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8012964:	781b      	ldrb	r3, [r3, #0]
 8012966:	4604      	mov	r4, r0
 8012968:	b95b      	cbnz	r3, 8012982 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801296a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801296e:	2b02      	cmp	r3, #2
 8012970:	d007      	beq.n	8012982 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012972:	6840      	ldr	r0, [r0, #4]
 8012974:	f000 fb7a 	bl	801306c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8012978:	b118      	cbz	r0, 8012982 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801297a:	6862      	ldr	r2, [r4, #4]
 801297c:	7a53      	ldrb	r3, [r2, #9]
 801297e:	2b00      	cmp	r3, #0
 8012980:	d0fc      	beq.n	801297c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8012982:	f7ee f9a7 	bl	8000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012986:	4620      	mov	r0, r4
 8012988:	f7ff ff34 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801298c:	bd10      	pop	{r4, pc}
 801298e:	bf00      	nop
 8012990:	200279ae 	.word	0x200279ae

08012994 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8012994:	b508      	push	{r3, lr}
 8012996:	290d      	cmp	r1, #13
 8012998:	d817      	bhi.n	80129ca <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 801299a:	e8df f001 	tbb	[pc, r1]
 801299e:	090b      	.short	0x090b
 80129a0:	0d0d0d07 	.word	0x0d0d0d07
 80129a4:	1414140d 	.word	0x1414140d
 80129a8:	0d0d1414 	.word	0x0d0d1414
 80129ac:	2020      	movs	r0, #32
 80129ae:	bd08      	pop	{r3, pc}
 80129b0:	2018      	movs	r0, #24
 80129b2:	e7fc      	b.n	80129ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80129b4:	2010      	movs	r0, #16
 80129b6:	e7fa      	b.n	80129ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80129b8:	4b05      	ldr	r3, [pc, #20]	; (80129d0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 80129ba:	4a06      	ldr	r2, [pc, #24]	; (80129d4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 80129bc:	4806      	ldr	r0, [pc, #24]	; (80129d8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 80129be:	f240 2182 	movw	r1, #642	; 0x282
 80129c2:	f012 fefd 	bl	80257c0 <__assert_func>
 80129c6:	2008      	movs	r0, #8
 80129c8:	e7f1      	b.n	80129ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80129ca:	2000      	movs	r0, #0
 80129cc:	e7ef      	b.n	80129ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80129ce:	bf00      	nop
 80129d0:	08029937 	.word	0x08029937
 80129d4:	08029d0a 	.word	0x08029d0a
 80129d8:	080298bb 	.word	0x080298bb

080129dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 80129dc:	b570      	push	{r4, r5, r6, lr}
 80129de:	460d      	mov	r5, r1
 80129e0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 80129e4:	4616      	mov	r6, r2
 80129e6:	461c      	mov	r4, r3
 80129e8:	f7ff ffd4 	bl	8012994 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 80129ec:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80129f0:	10c0      	asrs	r0, r0, #3
 80129f2:	fb06 5101 	mla	r1, r6, r1, r5
 80129f6:	fb00 4001 	mla	r0, r0, r1, r4
 80129fa:	bd70      	pop	{r4, r5, r6, pc}

080129fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80129fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a00:	b08a      	sub	sp, #40	; 0x28
 8012a02:	f04f 0c00 	mov.w	ip, #0
 8012a06:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8012a0a:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8012a0e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012a12:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8012a16:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 8012a1a:	f8cd c014 	str.w	ip, [sp, #20]
 8012a1e:	2d0b      	cmp	r5, #11
 8012a20:	4604      	mov	r4, r0
 8012a22:	469a      	mov	sl, r3
 8012a24:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8012a28:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012a2c:	d12d      	bne.n	8012a8a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8012a2e:	2080      	movs	r0, #128	; 0x80
 8012a30:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8012a34:	9204      	str	r2, [sp, #16]
 8012a36:	4620      	mov	r0, r4
 8012a38:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8012a3c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012a40:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012a44:	f8ad 701c 	strh.w	r7, [sp, #28]
 8012a48:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012a4c:	f7ff fed2 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012a50:	e9cd 9800 	strd	r9, r8, [sp]
 8012a54:	4603      	mov	r3, r0
 8012a56:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8012a5a:	4651      	mov	r1, sl
 8012a5c:	4620      	mov	r0, r4
 8012a5e:	f7ff ffbd 	bl	80129dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012a62:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8012a66:	9006      	str	r0, [sp, #24]
 8012a68:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 8012a6c:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8012a70:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 8012a74:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 8012a78:	b107      	cbz	r7, 8012a7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 8012a7a:	b9d6      	cbnz	r6, 8012ab2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 8012a7c:	4b17      	ldr	r3, [pc, #92]	; (8012adc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 8012a7e:	4a18      	ldr	r2, [pc, #96]	; (8012ae0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8012a80:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 8012a84:	4817      	ldr	r0, [pc, #92]	; (8012ae4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8012a86:	f012 fe9b 	bl	80257c0 <__assert_func>
 8012a8a:	2d02      	cmp	r5, #2
 8012a8c:	d108      	bne.n	8012aa0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 8012a8e:	2bff      	cmp	r3, #255	; 0xff
 8012a90:	d104      	bne.n	8012a9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 8012a92:	2800      	cmp	r0, #0
 8012a94:	bf14      	ite	ne
 8012a96:	2040      	movne	r0, #64	; 0x40
 8012a98:	2020      	moveq	r0, #32
 8012a9a:	e7c9      	b.n	8012a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012a9c:	2040      	movs	r0, #64	; 0x40
 8012a9e:	e7c7      	b.n	8012a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012aa0:	2bff      	cmp	r3, #255	; 0xff
 8012aa2:	d104      	bne.n	8012aae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 8012aa4:	2800      	cmp	r0, #0
 8012aa6:	bf14      	ite	ne
 8012aa8:	2004      	movne	r0, #4
 8012aaa:	2001      	moveq	r0, #1
 8012aac:	e7c0      	b.n	8012a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012aae:	2004      	movs	r0, #4
 8012ab0:	e7be      	b.n	8012a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012ab2:	6823      	ldr	r3, [r4, #0]
 8012ab4:	9d02      	ldr	r5, [sp, #8]
 8012ab6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ab8:	4620      	mov	r0, r4
 8012aba:	4798      	blx	r3
 8012abc:	4228      	tst	r0, r5
 8012abe:	d104      	bne.n	8012aca <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 8012ac0:	4b09      	ldr	r3, [pc, #36]	; (8012ae8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8012ac2:	4a07      	ldr	r2, [pc, #28]	; (8012ae0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8012ac4:	f240 11d5 	movw	r1, #469	; 0x1d5
 8012ac8:	e7dc      	b.n	8012a84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 8012aca:	6860      	ldr	r0, [r4, #4]
 8012acc:	6803      	ldr	r3, [r0, #0]
 8012ace:	a902      	add	r1, sp, #8
 8012ad0:	685b      	ldr	r3, [r3, #4]
 8012ad2:	4798      	blx	r3
 8012ad4:	b00a      	add	sp, #40	; 0x28
 8012ad6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012ada:	bf00      	nop
 8012adc:	08029709 	.word	0x08029709
 8012ae0:	08029b98 	.word	0x08029b98
 8012ae4:	080298bb 	.word	0x080298bb
 8012ae8:	08029741 	.word	0x08029741

08012aec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012af0:	b08b      	sub	sp, #44	; 0x2c
 8012af2:	469b      	mov	fp, r3
 8012af4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8012af8:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8012afc:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8012b00:	2fff      	cmp	r7, #255	; 0xff
 8012b02:	bf14      	ite	ne
 8012b04:	2308      	movne	r3, #8
 8012b06:	2302      	moveq	r3, #2
 8012b08:	2600      	movs	r6, #0
 8012b0a:	4604      	mov	r4, r0
 8012b0c:	4689      	mov	r9, r1
 8012b0e:	4692      	mov	sl, r2
 8012b10:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8012b14:	9605      	str	r6, [sp, #20]
 8012b16:	f7ff fe6d 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012b1a:	e9cd 8500 	strd	r8, r5, [sp]
 8012b1e:	4603      	mov	r3, r0
 8012b20:	465a      	mov	r2, fp
 8012b22:	4651      	mov	r1, sl
 8012b24:	4620      	mov	r0, r4
 8012b26:	f7ff ff59 	bl	80129dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012b2a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012b2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012b32:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012b36:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012b3a:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8012b3e:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 8012b42:	6823      	ldr	r3, [r4, #0]
 8012b44:	9006      	str	r0, [sp, #24]
 8012b46:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8012b4a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8012b4e:	f8ad 6020 	strh.w	r6, [sp, #32]
 8012b52:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 8012b56:	f8cd 9014 	str.w	r9, [sp, #20]
 8012b5a:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8012b5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b60:	9d02      	ldr	r5, [sp, #8]
 8012b62:	4620      	mov	r0, r4
 8012b64:	4798      	blx	r3
 8012b66:	4228      	tst	r0, r5
 8012b68:	d106      	bne.n	8012b78 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 8012b6a:	4b07      	ldr	r3, [pc, #28]	; (8012b88 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 8012b6c:	4a07      	ldr	r2, [pc, #28]	; (8012b8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8012b6e:	4808      	ldr	r0, [pc, #32]	; (8012b90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8012b70:	f240 2137 	movw	r1, #567	; 0x237
 8012b74:	f012 fe24 	bl	80257c0 <__assert_func>
 8012b78:	6860      	ldr	r0, [r4, #4]
 8012b7a:	6803      	ldr	r3, [r0, #0]
 8012b7c:	a902      	add	r1, sp, #8
 8012b7e:	685b      	ldr	r3, [r3, #4]
 8012b80:	4798      	blx	r3
 8012b82:	b00b      	add	sp, #44	; 0x2c
 8012b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b88:	08029741 	.word	0x08029741
 8012b8c:	08029c6f 	.word	0x08029c6f
 8012b90:	080298bb 	.word	0x080298bb

08012b94 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012b94:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012b98:	461f      	mov	r7, r3
 8012b9a:	4b0b      	ldr	r3, [pc, #44]	; (8012bc8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012b9c:	460d      	mov	r5, r1
 8012b9e:	f8b3 8000 	ldrh.w	r8, [r3]
 8012ba2:	4616      	mov	r6, r2
 8012ba4:	4604      	mov	r4, r0
 8012ba6:	f7ff fc65 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8012baa:	6803      	ldr	r3, [r0, #0]
 8012bac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012bae:	4798      	blx	r3
 8012bb0:	463b      	mov	r3, r7
 8012bb2:	e9cd 8000 	strd	r8, r0, [sp]
 8012bb6:	4632      	mov	r2, r6
 8012bb8:	4629      	mov	r1, r5
 8012bba:	4620      	mov	r0, r4
 8012bbc:	f7ff ff0e 	bl	80129dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012bc0:	b002      	add	sp, #8
 8012bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012bc6:	bf00      	nop
 8012bc8:	200279aa 	.word	0x200279aa

08012bcc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012bcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bd0:	b088      	sub	sp, #32
 8012bd2:	4698      	mov	r8, r3
 8012bd4:	2300      	movs	r3, #0
 8012bd6:	9303      	str	r3, [sp, #12]
 8012bd8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012bdc:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8012be0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012be4:	f8ad 6014 	strh.w	r6, [sp, #20]
 8012be8:	e9cd 3100 	strd	r3, r1, [sp]
 8012bec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012bf0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012bf4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8012bf8:	f88d 301c 	strb.w	r3, [sp, #28]
 8012bfc:	4617      	mov	r7, r2
 8012bfe:	4604      	mov	r4, r0
 8012c00:	f8ad 5016 	strh.w	r5, [sp, #22]
 8012c04:	f7ff fdf6 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012c08:	4642      	mov	r2, r8
 8012c0a:	4603      	mov	r3, r0
 8012c0c:	4639      	mov	r1, r7
 8012c0e:	4620      	mov	r0, r4
 8012c10:	f7ff ffc0 	bl	8012b94 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012c14:	4b18      	ldr	r3, [pc, #96]	; (8012c78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 8012c16:	9004      	str	r0, [sp, #16]
 8012c18:	881b      	ldrh	r3, [r3, #0]
 8012c1a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012c1e:	f7ff fc29 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8012c22:	6803      	ldr	r3, [r0, #0]
 8012c24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012c26:	4798      	blx	r3
 8012c28:	f88d 001e 	strb.w	r0, [sp, #30]
 8012c2c:	f88d 001d 	strb.w	r0, [sp, #29]
 8012c30:	b106      	cbz	r6, 8012c34 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8012c32:	b935      	cbnz	r5, 8012c42 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8012c34:	4b11      	ldr	r3, [pc, #68]	; (8012c7c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 8012c36:	4a12      	ldr	r2, [pc, #72]	; (8012c80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8012c38:	f240 11f1 	movw	r1, #497	; 0x1f1
 8012c3c:	4811      	ldr	r0, [pc, #68]	; (8012c84 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8012c3e:	f012 fdbf 	bl	80257c0 <__assert_func>
 8012c42:	6823      	ldr	r3, [r4, #0]
 8012c44:	9d00      	ldr	r5, [sp, #0]
 8012c46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c48:	4620      	mov	r0, r4
 8012c4a:	4798      	blx	r3
 8012c4c:	4228      	tst	r0, r5
 8012c4e:	d104      	bne.n	8012c5a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8012c50:	4b0d      	ldr	r3, [pc, #52]	; (8012c88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8012c52:	4a0b      	ldr	r2, [pc, #44]	; (8012c80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8012c54:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 8012c58:	e7f0      	b.n	8012c3c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 8012c5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012c5c:	9303      	str	r3, [sp, #12]
 8012c5e:	6860      	ldr	r0, [r4, #4]
 8012c60:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012c64:	f88d 301f 	strb.w	r3, [sp, #31]
 8012c68:	6803      	ldr	r3, [r0, #0]
 8012c6a:	4669      	mov	r1, sp
 8012c6c:	685b      	ldr	r3, [r3, #4]
 8012c6e:	4798      	blx	r3
 8012c70:	b008      	add	sp, #32
 8012c72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c76:	bf00      	nop
 8012c78:	200279aa 	.word	0x200279aa
 8012c7c:	08029709 	.word	0x08029709
 8012c80:	08029a44 	.word	0x08029a44
 8012c84:	080298bb 	.word	0x080298bb
 8012c88:	08029741 	.word	0x08029741

08012c8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8012c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c8e:	b08b      	sub	sp, #44	; 0x2c
 8012c90:	466b      	mov	r3, sp
 8012c92:	e883 0006 	stmia.w	r3, {r1, r2}
 8012c96:	4b21      	ldr	r3, [pc, #132]	; (8012d1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8012c98:	781b      	ldrb	r3, [r3, #0]
 8012c9a:	4604      	mov	r4, r0
 8012c9c:	b933      	cbnz	r3, 8012cac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8012c9e:	4b20      	ldr	r3, [pc, #128]	; (8012d20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8012ca0:	4a20      	ldr	r2, [pc, #128]	; (8012d24 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8012ca2:	4821      	ldr	r0, [pc, #132]	; (8012d28 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8012ca4:	f44f 7112 	mov.w	r1, #584	; 0x248
 8012ca8:	f012 fd8a 	bl	80257c0 <__assert_func>
 8012cac:	2301      	movs	r3, #1
 8012cae:	9302      	str	r3, [sp, #8]
 8012cb0:	6803      	ldr	r3, [r0, #0]
 8012cb2:	f8bd 6000 	ldrh.w	r6, [sp]
 8012cb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012cb8:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012cbc:	2500      	movs	r5, #0
 8012cbe:	9505      	str	r5, [sp, #20]
 8012cc0:	4798      	blx	r3
 8012cc2:	463a      	mov	r2, r7
 8012cc4:	4631      	mov	r1, r6
 8012cc6:	4603      	mov	r3, r0
 8012cc8:	4620      	mov	r0, r4
 8012cca:	f7ff ff63 	bl	8012b94 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012cce:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012cd0:	9306      	str	r3, [sp, #24]
 8012cd2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012cd6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012cda:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012cde:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012ce2:	4b12      	ldr	r3, [pc, #72]	; (8012d2c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8012ce4:	9003      	str	r0, [sp, #12]
 8012ce6:	881b      	ldrh	r3, [r3, #0]
 8012ce8:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012cec:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012cf0:	f7ff fbc0 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8012cf4:	6803      	ldr	r3, [r0, #0]
 8012cf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012cf8:	4798      	blx	r3
 8012cfa:	23ff      	movs	r3, #255	; 0xff
 8012cfc:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8012d00:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8012d04:	6860      	ldr	r0, [r4, #4]
 8012d06:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012d0a:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 8012d0e:	6803      	ldr	r3, [r0, #0]
 8012d10:	a902      	add	r1, sp, #8
 8012d12:	685b      	ldr	r3, [r3, #4]
 8012d14:	4798      	blx	r3
 8012d16:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012d18:	b00b      	add	sp, #44	; 0x2c
 8012d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d1c:	200279af 	.word	0x200279af
 8012d20:	08029808 	.word	0x08029808
 8012d24:	08029aee 	.word	0x08029aee
 8012d28:	080298bb 	.word	0x080298bb
 8012d2c:	200279aa 	.word	0x200279aa

08012d30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d34:	b08a      	sub	sp, #40	; 0x28
 8012d36:	466d      	mov	r5, sp
 8012d38:	e885 0006 	stmia.w	r5, {r1, r2}
 8012d3c:	461d      	mov	r5, r3
 8012d3e:	2301      	movs	r3, #1
 8012d40:	9302      	str	r3, [sp, #8]
 8012d42:	6803      	ldr	r3, [r0, #0]
 8012d44:	f8bd 7000 	ldrh.w	r7, [sp]
 8012d48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d4a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8012d4e:	2600      	movs	r6, #0
 8012d50:	9605      	str	r6, [sp, #20]
 8012d52:	4604      	mov	r4, r0
 8012d54:	4798      	blx	r3
 8012d56:	4642      	mov	r2, r8
 8012d58:	4639      	mov	r1, r7
 8012d5a:	4603      	mov	r3, r0
 8012d5c:	4620      	mov	r0, r4
 8012d5e:	f7ff ff19 	bl	8012b94 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012d62:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012d66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012d6a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012d6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012d72:	4b10      	ldr	r3, [pc, #64]	; (8012db4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 8012d74:	9003      	str	r0, [sp, #12]
 8012d76:	881b      	ldrh	r3, [r3, #0]
 8012d78:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012d7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d7e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012d82:	9506      	str	r5, [sp, #24]
 8012d84:	f7ff fb76 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8012d88:	6803      	ldr	r3, [r0, #0]
 8012d8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d8c:	4798      	blx	r3
 8012d8e:	23ff      	movs	r3, #255	; 0xff
 8012d90:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8012d94:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8012d98:	6860      	ldr	r0, [r4, #4]
 8012d9a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012d9e:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 8012da2:	6803      	ldr	r3, [r0, #0]
 8012da4:	a902      	add	r1, sp, #8
 8012da6:	685b      	ldr	r3, [r3, #4]
 8012da8:	4798      	blx	r3
 8012daa:	4628      	mov	r0, r5
 8012dac:	b00a      	add	sp, #40	; 0x28
 8012dae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012db2:	bf00      	nop
 8012db4:	200279aa 	.word	0x200279aa

08012db8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8012db8:	b570      	push	{r4, r5, r6, lr}
 8012dba:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8012dbe:	4604      	mov	r4, r0
 8012dc0:	b19b      	cbz	r3, 8012dea <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012dc2:	2002      	movs	r0, #2
 8012dc4:	f7ed fcfe 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8012dc8:	2300      	movs	r3, #0
 8012dca:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8012dce:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8012dd2:	6823      	ldr	r3, [r4, #0]
 8012dd4:	4620      	mov	r0, r4
 8012dd6:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8012dda:	f7ff fd0b 	bl	80127f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012dde:	462b      	mov	r3, r5
 8012de0:	4601      	mov	r1, r0
 8012de2:	4620      	mov	r0, r4
 8012de4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012de8:	4718      	bx	r3
 8012dea:	bd70      	pop	{r4, r5, r6, pc}

08012dec <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8012dec:	b570      	push	{r4, r5, r6, lr}
 8012dee:	4605      	mov	r5, r0
 8012df0:	460c      	mov	r4, r1
 8012df2:	2003      	movs	r0, #3
 8012df4:	b149      	cbz	r1, 8012e0a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8012df6:	f7ed fcad 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012dfa:	6928      	ldr	r0, [r5, #16]
 8012dfc:	b168      	cbz	r0, 8012e1a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8012dfe:	6803      	ldr	r3, [r0, #0]
 8012e00:	695b      	ldr	r3, [r3, #20]
 8012e02:	2101      	movs	r1, #1
 8012e04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012e08:	4718      	bx	r3
 8012e0a:	f7ed fcbf 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012e0e:	6928      	ldr	r0, [r5, #16]
 8012e10:	b118      	cbz	r0, 8012e1a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8012e12:	6803      	ldr	r3, [r0, #0]
 8012e14:	4621      	mov	r1, r4
 8012e16:	695b      	ldr	r3, [r3, #20]
 8012e18:	e7f4      	b.n	8012e04 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8012e1a:	bd70      	pop	{r4, r5, r6, pc}

08012e1c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012e1c:	4770      	bx	lr

08012e1e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012e1e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012e22:	1a13      	subs	r3, r2, r0
 8012e24:	4258      	negs	r0, r3
 8012e26:	4158      	adcs	r0, r3
 8012e28:	4770      	bx	lr

08012e2a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012e2a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012e2e:	1a9b      	subs	r3, r3, r2
 8012e30:	2b00      	cmp	r3, #0
 8012e32:	bfdc      	itt	le
 8012e34:	6882      	ldrle	r2, [r0, #8]
 8012e36:	189b      	addle	r3, r3, r2
 8012e38:	2b01      	cmp	r3, #1
 8012e3a:	bfcc      	ite	gt
 8012e3c:	2000      	movgt	r0, #0
 8012e3e:	2001      	movle	r0, #1
 8012e40:	4770      	bx	lr

08012e42 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012e42:	6902      	ldr	r2, [r0, #16]
 8012e44:	6840      	ldr	r0, [r0, #4]
 8012e46:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8012e4a:	4770      	bx	lr

08012e4c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012e4c:	6803      	ldr	r3, [r0, #0]
 8012e4e:	691b      	ldr	r3, [r3, #16]
 8012e50:	4718      	bx	r3

08012e52 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8012e52:	4770      	bx	lr

08012e54 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8012e54:	4770      	bx	lr

08012e56 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8012e56:	4770      	bx	lr

08012e58 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8012e58:	b570      	push	{r4, r5, r6, lr}
 8012e5a:	2301      	movs	r3, #1
 8012e5c:	7203      	strb	r3, [r0, #8]
 8012e5e:	4604      	mov	r4, r0
 8012e60:	6840      	ldr	r0, [r0, #4]
 8012e62:	6803      	ldr	r3, [r0, #0]
 8012e64:	699b      	ldr	r3, [r3, #24]
 8012e66:	4798      	blx	r3
 8012e68:	6803      	ldr	r3, [r0, #0]
 8012e6a:	2b40      	cmp	r3, #64	; 0x40
 8012e6c:	4605      	mov	r5, r0
 8012e6e:	d039      	beq.n	8012ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8012e70:	d815      	bhi.n	8012e9e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8012e72:	2b04      	cmp	r3, #4
 8012e74:	d022      	beq.n	8012ebc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012e76:	d808      	bhi.n	8012e8a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012e78:	2b01      	cmp	r3, #1
 8012e7a:	d033      	beq.n	8012ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8012e7c:	2b02      	cmp	r3, #2
 8012e7e:	d108      	bne.n	8012e92 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8012e80:	6823      	ldr	r3, [r4, #0]
 8012e82:	4620      	mov	r0, r4
 8012e84:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012e86:	4798      	blx	r3
 8012e88:	e025      	b.n	8012ed6 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 8012e8a:	2b08      	cmp	r3, #8
 8012e8c:	d01e      	beq.n	8012ecc <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8012e8e:	2b20      	cmp	r3, #32
 8012e90:	d028      	beq.n	8012ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8012e92:	4b17      	ldr	r3, [pc, #92]	; (8012ef0 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8012e94:	4a17      	ldr	r2, [pc, #92]	; (8012ef4 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 8012e96:	4818      	ldr	r0, [pc, #96]	; (8012ef8 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 8012e98:	218b      	movs	r1, #139	; 0x8b
 8012e9a:	f012 fc91 	bl	80257c0 <__assert_func>
 8012e9e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8012ea2:	d01f      	beq.n	8012ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8012ea4:	d804      	bhi.n	8012eb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 8012ea6:	2b80      	cmp	r3, #128	; 0x80
 8012ea8:	d01c      	beq.n	8012ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8012eaa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012eae:	e7ef      	b.n	8012e90 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8012eb0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8012eb4:	d016      	beq.n	8012ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8012eb6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012eba:	e7e0      	b.n	8012e7e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012ebc:	6823      	ldr	r3, [r4, #0]
 8012ebe:	7f01      	ldrb	r1, [r0, #28]
 8012ec0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ec2:	4620      	mov	r0, r4
 8012ec4:	4798      	blx	r3
 8012ec6:	6823      	ldr	r3, [r4, #0]
 8012ec8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012eca:	e006      	b.n	8012eda <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012ecc:	6823      	ldr	r3, [r4, #0]
 8012ece:	7f01      	ldrb	r1, [r0, #28]
 8012ed0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ed2:	4620      	mov	r0, r4
 8012ed4:	4798      	blx	r3
 8012ed6:	6823      	ldr	r3, [r4, #0]
 8012ed8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012eda:	4629      	mov	r1, r5
 8012edc:	4620      	mov	r0, r4
 8012ede:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ee2:	4718      	bx	r3
 8012ee4:	6823      	ldr	r3, [r4, #0]
 8012ee6:	4620      	mov	r0, r4
 8012ee8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012eea:	4798      	blx	r3
 8012eec:	e7eb      	b.n	8012ec6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8012eee:	bf00      	nop
 8012ef0:	08029d53 	.word	0x08029d53
 8012ef4:	08029e14 	.word	0x08029e14
 8012ef8:	08029d78 	.word	0x08029d78

08012efc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012efc:	b570      	push	{r4, r5, r6, lr}
 8012efe:	4604      	mov	r4, r0
 8012f00:	460e      	mov	r6, r1
 8012f02:	6860      	ldr	r0, [r4, #4]
 8012f04:	6803      	ldr	r3, [r0, #0]
 8012f06:	685b      	ldr	r3, [r3, #4]
 8012f08:	4798      	blx	r3
 8012f0a:	2800      	cmp	r0, #0
 8012f0c:	d1f9      	bne.n	8012f02 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012f0e:	4d0d      	ldr	r5, [pc, #52]	; (8012f44 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012f10:	6828      	ldr	r0, [r5, #0]
 8012f12:	6803      	ldr	r3, [r0, #0]
 8012f14:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012f16:	4798      	blx	r3
 8012f18:	f7ed feea 	bl	8000cf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012f1c:	6828      	ldr	r0, [r5, #0]
 8012f1e:	2101      	movs	r1, #1
 8012f20:	f7ff ff7c 	bl	8012e1c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012f24:	6860      	ldr	r0, [r4, #4]
 8012f26:	6803      	ldr	r3, [r0, #0]
 8012f28:	4631      	mov	r1, r6
 8012f2a:	689b      	ldr	r3, [r3, #8]
 8012f2c:	4798      	blx	r3
 8012f2e:	6823      	ldr	r3, [r4, #0]
 8012f30:	4620      	mov	r0, r4
 8012f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f34:	4798      	blx	r3
 8012f36:	6828      	ldr	r0, [r5, #0]
 8012f38:	6803      	ldr	r3, [r0, #0]
 8012f3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f3e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012f40:	4718      	bx	r3
 8012f42:	bf00      	nop
 8012f44:	200279b0 	.word	0x200279b0

08012f48 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012f48:	b508      	push	{r3, lr}
 8012f4a:	f7ed fec3 	bl	8000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012f4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012f52:	f7ed bec7 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08012f56 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8012f56:	b510      	push	{r4, lr}
 8012f58:	2114      	movs	r1, #20
 8012f5a:	4604      	mov	r4, r0
 8012f5c:	f012 fc02 	bl	8025764 <_ZdlPvj>
 8012f60:	4620      	mov	r0, r4
 8012f62:	bd10      	pop	{r4, pc}

08012f64 <_ZN8touchgfx13DMA_Interface5startEv>:
 8012f64:	b510      	push	{r4, lr}
 8012f66:	4604      	mov	r4, r0
 8012f68:	6840      	ldr	r0, [r0, #4]
 8012f6a:	6803      	ldr	r3, [r0, #0]
 8012f6c:	681b      	ldr	r3, [r3, #0]
 8012f6e:	4798      	blx	r3
 8012f70:	b948      	cbnz	r0, 8012f86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012f72:	7a63      	ldrb	r3, [r4, #9]
 8012f74:	b13b      	cbz	r3, 8012f86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012f76:	7a23      	ldrb	r3, [r4, #8]
 8012f78:	b92b      	cbnz	r3, 8012f86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012f7a:	6823      	ldr	r3, [r4, #0]
 8012f7c:	4620      	mov	r0, r4
 8012f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012f80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f84:	4718      	bx	r3
 8012f86:	bd10      	pop	{r4, pc}

08012f88 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8012f88:	b570      	push	{r4, r5, r6, lr}
 8012f8a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012f8e:	1a9b      	subs	r3, r3, r2
 8012f90:	2b00      	cmp	r3, #0
 8012f92:	4606      	mov	r6, r0
 8012f94:	bfdc      	itt	le
 8012f96:	6880      	ldrle	r0, [r0, #8]
 8012f98:	181b      	addle	r3, r3, r0
 8012f9a:	2b01      	cmp	r3, #1
 8012f9c:	dd13      	ble.n	8012fc6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 8012f9e:	6874      	ldr	r4, [r6, #4]
 8012fa0:	460d      	mov	r5, r1
 8012fa2:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 8012fa6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012fa8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012faa:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8012fae:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012fb2:	68f3      	ldr	r3, [r6, #12]
 8012fb4:	68b2      	ldr	r2, [r6, #8]
 8012fb6:	f3bf 8f5b 	dmb	ish
 8012fba:	3301      	adds	r3, #1
 8012fbc:	429a      	cmp	r2, r3
 8012fbe:	bfd8      	it	le
 8012fc0:	1a9b      	suble	r3, r3, r2
 8012fc2:	60f3      	str	r3, [r6, #12]
 8012fc4:	bd70      	pop	{r4, r5, r6, pc}
 8012fc6:	4b03      	ldr	r3, [pc, #12]	; (8012fd4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 8012fc8:	4a03      	ldr	r2, [pc, #12]	; (8012fd8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 8012fca:	4804      	ldr	r0, [pc, #16]	; (8012fdc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8012fcc:	2139      	movs	r1, #57	; 0x39
 8012fce:	f012 fbf7 	bl	80257c0 <__assert_func>
 8012fd2:	bf00      	nop
 8012fd4:	08029d9e 	.word	0x08029d9e
 8012fd8:	08029e44 	.word	0x08029e44
 8012fdc:	08029d78 	.word	0x08029d78

08012fe0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012fe0:	b510      	push	{r4, lr}
 8012fe2:	6803      	ldr	r3, [r0, #0]
 8012fe4:	681b      	ldr	r3, [r3, #0]
 8012fe6:	4604      	mov	r4, r0
 8012fe8:	4798      	blx	r3
 8012fea:	b128      	cbz	r0, 8012ff8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8012fec:	4b07      	ldr	r3, [pc, #28]	; (801300c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8012fee:	4a08      	ldr	r2, [pc, #32]	; (8013010 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8012ff0:	4808      	ldr	r0, [pc, #32]	; (8013014 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8012ff2:	213f      	movs	r1, #63	; 0x3f
 8012ff4:	f012 fbe4 	bl	80257c0 <__assert_func>
 8012ff8:	6923      	ldr	r3, [r4, #16]
 8012ffa:	68a2      	ldr	r2, [r4, #8]
 8012ffc:	f3bf 8f5b 	dmb	ish
 8013000:	3301      	adds	r3, #1
 8013002:	429a      	cmp	r2, r3
 8013004:	bfd8      	it	le
 8013006:	1a9b      	suble	r3, r3, r2
 8013008:	6123      	str	r3, [r4, #16]
 801300a:	bd10      	pop	{r4, pc}
 801300c:	08029dc1 	.word	0x08029dc1
 8013010:	08029e92 	.word	0x08029e92
 8013014:	08029d78 	.word	0x08029d78

08013018 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013018:	b570      	push	{r4, r5, r6, lr}
 801301a:	4604      	mov	r4, r0
 801301c:	6840      	ldr	r0, [r0, #4]
 801301e:	6803      	ldr	r3, [r0, #0]
 8013020:	681b      	ldr	r3, [r3, #0]
 8013022:	4798      	blx	r3
 8013024:	4605      	mov	r5, r0
 8013026:	b930      	cbnz	r0, 8013036 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013028:	7a23      	ldrb	r3, [r4, #8]
 801302a:	b123      	cbz	r3, 8013036 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801302c:	6860      	ldr	r0, [r4, #4]
 801302e:	6803      	ldr	r3, [r0, #0]
 8013030:	695b      	ldr	r3, [r3, #20]
 8013032:	4798      	blx	r3
 8013034:	7225      	strb	r5, [r4, #8]
 8013036:	6860      	ldr	r0, [r4, #4]
 8013038:	6803      	ldr	r3, [r0, #0]
 801303a:	681b      	ldr	r3, [r3, #0]
 801303c:	4798      	blx	r3
 801303e:	b928      	cbnz	r0, 801304c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8013040:	6823      	ldr	r3, [r4, #0]
 8013042:	4620      	mov	r0, r4
 8013044:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013046:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801304a:	4718      	bx	r3
 801304c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013050:	f7ed be56 	b.w	8000d00 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08013054 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8013054:	b510      	push	{r4, lr}
 8013056:	4c04      	ldr	r4, [pc, #16]	; (8013068 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013058:	6082      	str	r2, [r0, #8]
 801305a:	2200      	movs	r2, #0
 801305c:	e9c0 4100 	strd	r4, r1, [r0]
 8013060:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013064:	bd10      	pop	{r4, pc}
 8013066:	bf00      	nop
 8013068:	08029df8 	.word	0x08029df8

0801306c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801306c:	6840      	ldr	r0, [r0, #4]
 801306e:	6803      	ldr	r3, [r0, #0]
 8013070:	681b      	ldr	r3, [r3, #0]
 8013072:	4718      	bx	r3

08013074 <_ZN8touchgfx8TextAreaD1Ev>:
 8013074:	4770      	bx	lr
	...

08013078 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8013078:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801307a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801307c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013080:	4299      	cmp	r1, r3
 8013082:	d029      	beq.n	80130d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8013084:	4b15      	ldr	r3, [pc, #84]	; (80130dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8013086:	681b      	ldr	r3, [r3, #0]
 8013088:	b92b      	cbnz	r3, 8013096 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 801308a:	4b15      	ldr	r3, [pc, #84]	; (80130e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801308c:	4a15      	ldr	r2, [pc, #84]	; (80130e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801308e:	21ae      	movs	r1, #174	; 0xae
 8013090:	4815      	ldr	r0, [pc, #84]	; (80130e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013092:	f012 fb95 	bl	80257c0 <__assert_func>
 8013096:	4a15      	ldr	r2, [pc, #84]	; (80130ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8013098:	8812      	ldrh	r2, [r2, #0]
 801309a:	428a      	cmp	r2, r1
 801309c:	d803      	bhi.n	80130a6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 801309e:	4b14      	ldr	r3, [pc, #80]	; (80130f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 80130a0:	4a10      	ldr	r2, [pc, #64]	; (80130e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80130a2:	21af      	movs	r1, #175	; 0xaf
 80130a4:	e7f4      	b.n	8013090 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 80130a6:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80130aa:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80130ae:	4b11      	ldr	r3, [pc, #68]	; (80130f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 80130b0:	7854      	ldrb	r4, [r2, #1]
 80130b2:	681b      	ldr	r3, [r3, #0]
 80130b4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 80130b8:	682b      	ldr	r3, [r5, #0]
 80130ba:	69de      	ldr	r6, [r3, #28]
 80130bc:	4b0e      	ldr	r3, [pc, #56]	; (80130f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 80130be:	6818      	ldr	r0, [r3, #0]
 80130c0:	f7f4 fc16 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80130c4:	f3c4 0481 	ubfx	r4, r4, #2, #2
 80130c8:	2300      	movs	r3, #0
 80130ca:	4602      	mov	r2, r0
 80130cc:	9300      	str	r3, [sp, #0]
 80130ce:	4621      	mov	r1, r4
 80130d0:	4628      	mov	r0, r5
 80130d2:	47b0      	blx	r6
 80130d4:	b002      	add	sp, #8
 80130d6:	bd70      	pop	{r4, r5, r6, pc}
 80130d8:	2000      	movs	r0, #0
 80130da:	e7fb      	b.n	80130d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 80130dc:	20027a00 	.word	0x20027a00
 80130e0:	080273f8 	.word	0x080273f8
 80130e4:	08029f3c 	.word	0x08029f3c
 80130e8:	08027486 	.word	0x08027486
 80130ec:	20027a04 	.word	0x20027a04
 80130f0:	080274af 	.word	0x080274af
 80130f4:	20027a08 	.word	0x20027a08
 80130f8:	20027a0c 	.word	0x20027a0c

080130fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80130fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013100:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013102:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013106:	4293      	cmp	r3, r2
 8013108:	b08c      	sub	sp, #48	; 0x30
 801310a:	4604      	mov	r4, r0
 801310c:	4688      	mov	r8, r1
 801310e:	d05f      	beq.n	80131d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8013110:	4e31      	ldr	r6, [pc, #196]	; (80131d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 8013112:	6832      	ldr	r2, [r6, #0]
 8013114:	b92a      	cbnz	r2, 8013122 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 8013116:	4b31      	ldr	r3, [pc, #196]	; (80131dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 8013118:	4a31      	ldr	r2, [pc, #196]	; (80131e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 801311a:	21ae      	movs	r1, #174	; 0xae
 801311c:	4831      	ldr	r0, [pc, #196]	; (80131e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 801311e:	f012 fb4f 	bl	80257c0 <__assert_func>
 8013122:	4d31      	ldr	r5, [pc, #196]	; (80131e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 8013124:	8829      	ldrh	r1, [r5, #0]
 8013126:	4299      	cmp	r1, r3
 8013128:	d803      	bhi.n	8013132 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 801312a:	4b30      	ldr	r3, [pc, #192]	; (80131ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 801312c:	4a2c      	ldr	r2, [pc, #176]	; (80131e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 801312e:	21af      	movs	r1, #175	; 0xaf
 8013130:	e7f4      	b.n	801311c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 8013132:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013136:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801313a:	4b2d      	ldr	r3, [pc, #180]	; (80131f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 801313c:	681b      	ldr	r3, [r3, #0]
 801313e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8013142:	2a00      	cmp	r2, #0
 8013144:	d044      	beq.n	80131d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8013146:	784b      	ldrb	r3, [r1, #1]
 8013148:	9207      	str	r2, [sp, #28]
 801314a:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 801314e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013152:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013156:	4b27      	ldr	r3, [pc, #156]	; (80131f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8013158:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 801315c:	681b      	ldr	r3, [r3, #0]
 801315e:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8013162:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013166:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 801316a:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 801316e:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8013172:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013174:	f88d a020 	strb.w	sl, [sp, #32]
 8013178:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 801317c:	9009      	str	r0, [sp, #36]	; 0x24
 801317e:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8013182:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8013186:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 801318a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 801318e:	b10a      	cbz	r2, 8013194 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8013190:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8013192:	b907      	cbnz	r7, 8013196 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8013194:	689f      	ldr	r7, [r3, #8]
 8013196:	f10d 0914 	add.w	r9, sp, #20
 801319a:	4621      	mov	r1, r4
 801319c:	4648      	mov	r0, r9
 801319e:	f003 fd3d 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80131a2:	6833      	ldr	r3, [r6, #0]
 80131a4:	2b00      	cmp	r3, #0
 80131a6:	d0b6      	beq.n	8013116 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 80131a8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80131aa:	882b      	ldrh	r3, [r5, #0]
 80131ac:	428b      	cmp	r3, r1
 80131ae:	d9bc      	bls.n	801312a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 80131b0:	4b11      	ldr	r3, [pc, #68]	; (80131f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 80131b2:	6818      	ldr	r0, [r3, #0]
 80131b4:	f7f4 fb9c 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80131b8:	2300      	movs	r3, #0
 80131ba:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80131be:	ab07      	add	r3, sp, #28
 80131c0:	9001      	str	r0, [sp, #4]
 80131c2:	9300      	str	r3, [sp, #0]
 80131c4:	e899 0006 	ldmia.w	r9, {r1, r2}
 80131c8:	4643      	mov	r3, r8
 80131ca:	4638      	mov	r0, r7
 80131cc:	f7f4 fb43 	bl	8007856 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80131d0:	b00c      	add	sp, #48	; 0x30
 80131d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80131d6:	bf00      	nop
 80131d8:	20027a00 	.word	0x20027a00
 80131dc:	080273f8 	.word	0x080273f8
 80131e0:	08029f3c 	.word	0x08029f3c
 80131e4:	08027486 	.word	0x08027486
 80131e8:	20027a04 	.word	0x20027a04
 80131ec:	080274af 	.word	0x080274af
 80131f0:	20027a08 	.word	0x20027a08
 80131f4:	200279b0 	.word	0x200279b0
 80131f8:	20027a0c 	.word	0x20027a0c

080131fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80131fc:	b40e      	push	{r1, r2, r3}
 80131fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013202:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013204:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013208:	4293      	cmp	r3, r2
 801320a:	b09c      	sub	sp, #112	; 0x70
 801320c:	4604      	mov	r4, r0
 801320e:	d06b      	beq.n	80132e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 8013210:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 80132fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 8013214:	aa26      	add	r2, sp, #152	; 0x98
 8013216:	9202      	str	r2, [sp, #8]
 8013218:	f8da 2000 	ldr.w	r2, [sl]
 801321c:	b92a      	cbnz	r2, 801322a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 801321e:	4b33      	ldr	r3, [pc, #204]	; (80132ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 8013220:	4a33      	ldr	r2, [pc, #204]	; (80132f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8013222:	21ae      	movs	r1, #174	; 0xae
 8013224:	4833      	ldr	r0, [pc, #204]	; (80132f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 8013226:	f012 facb 	bl	80257c0 <__assert_func>
 801322a:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8013300 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 801322e:	f8b8 1000 	ldrh.w	r1, [r8]
 8013232:	4299      	cmp	r1, r3
 8013234:	d803      	bhi.n	801323e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 8013236:	4b30      	ldr	r3, [pc, #192]	; (80132f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 8013238:	4a2d      	ldr	r2, [pc, #180]	; (80132f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 801323a:	21af      	movs	r1, #175	; 0xaf
 801323c:	e7f2      	b.n	8013224 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 801323e:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 8013304 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 8013242:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013246:	f8d9 3000 	ldr.w	r3, [r9]
 801324a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801324e:	682b      	ldr	r3, [r5, #0]
 8013250:	4628      	mov	r0, r5
 8013252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013254:	4798      	blx	r3
 8013256:	4606      	mov	r6, r0
 8013258:	b207      	sxth	r7, r0
 801325a:	a803      	add	r0, sp, #12
 801325c:	f004 f957 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 8013260:	682b      	ldr	r3, [r5, #0]
 8013262:	4628      	mov	r0, r5
 8013264:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013266:	4798      	blx	r3
 8013268:	682b      	ldr	r3, [r5, #0]
 801326a:	4683      	mov	fp, r0
 801326c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801326e:	4628      	mov	r0, r5
 8013270:	4798      	blx	r3
 8013272:	465b      	mov	r3, fp
 8013274:	9000      	str	r0, [sp, #0]
 8013276:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013278:	9a02      	ldr	r2, [sp, #8]
 801327a:	a803      	add	r0, sp, #12
 801327c:	f004 f9b2 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013280:	f8da 3000 	ldr.w	r3, [sl]
 8013284:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8013288:	2b00      	cmp	r3, #0
 801328a:	d0c8      	beq.n	801321e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 801328c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801328e:	f8b8 0000 	ldrh.w	r0, [r8]
 8013292:	4290      	cmp	r0, r2
 8013294:	d9cf      	bls.n	8013236 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 8013296:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 801329a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801329e:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80132a2:	786a      	ldrb	r2, [r5, #1]
 80132a4:	8925      	ldrh	r5, [r4, #8]
 80132a6:	f8d9 3000 	ldr.w	r3, [r9]
 80132aa:	eba5 050c 	sub.w	r5, r5, ip
 80132ae:	b22d      	sxth	r5, r5
 80132b0:	9500      	str	r5, [sp, #0]
 80132b2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80132b6:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80132ba:	a803      	add	r0, sp, #12
 80132bc:	f001 ff9b 	bl	80151f6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80132c0:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80132c4:	18b9      	adds	r1, r7, r2
 80132c6:	2900      	cmp	r1, #0
 80132c8:	b203      	sxth	r3, r0
 80132ca:	dd0b      	ble.n	80132e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 80132cc:	3b01      	subs	r3, #1
 80132ce:	fb13 f302 	smulbb	r3, r3, r2
 80132d2:	fb16 3300 	smlabb	r3, r6, r0, r3
 80132d6:	b21f      	sxth	r7, r3
 80132d8:	4638      	mov	r0, r7
 80132da:	b01c      	add	sp, #112	; 0x70
 80132dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132e0:	b003      	add	sp, #12
 80132e2:	4770      	bx	lr
 80132e4:	2b00      	cmp	r3, #0
 80132e6:	dcf7      	bgt.n	80132d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 80132e8:	2700      	movs	r7, #0
 80132ea:	e7f5      	b.n	80132d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 80132ec:	080273f8 	.word	0x080273f8
 80132f0:	08029f3c 	.word	0x08029f3c
 80132f4:	08027486 	.word	0x08027486
 80132f8:	080274af 	.word	0x080274af
 80132fc:	20027a00 	.word	0x20027a00
 8013300:	20027a04 	.word	0x20027a04
 8013304:	20027a08 	.word	0x20027a08

08013308 <_ZN8touchgfx8TextAreaD0Ev>:
 8013308:	b510      	push	{r4, lr}
 801330a:	213c      	movs	r1, #60	; 0x3c
 801330c:	4604      	mov	r4, r0
 801330e:	f012 fa29 	bl	8025764 <_ZdlPvj>
 8013312:	4620      	mov	r0, r4
 8013314:	bd10      	pop	{r4, pc}
	...

08013318 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 8013318:	b570      	push	{r4, r5, r6, lr}
 801331a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801331c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013320:	4299      	cmp	r1, r3
 8013322:	4604      	mov	r4, r0
 8013324:	d01e      	beq.n	8013364 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 8013326:	6803      	ldr	r3, [r0, #0]
 8013328:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 801332a:	4b0f      	ldr	r3, [pc, #60]	; (8013368 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 801332c:	681b      	ldr	r3, [r3, #0]
 801332e:	b92b      	cbnz	r3, 801333c <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 8013330:	4b0e      	ldr	r3, [pc, #56]	; (801336c <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 8013332:	4a0f      	ldr	r2, [pc, #60]	; (8013370 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8013334:	21ae      	movs	r1, #174	; 0xae
 8013336:	480f      	ldr	r0, [pc, #60]	; (8013374 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8013338:	f012 fa42 	bl	80257c0 <__assert_func>
 801333c:	4b0e      	ldr	r3, [pc, #56]	; (8013378 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 801333e:	881b      	ldrh	r3, [r3, #0]
 8013340:	428b      	cmp	r3, r1
 8013342:	d803      	bhi.n	801334c <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 8013344:	4b0d      	ldr	r3, [pc, #52]	; (801337c <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 8013346:	4a0a      	ldr	r2, [pc, #40]	; (8013370 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8013348:	21af      	movs	r1, #175	; 0xaf
 801334a:	e7f4      	b.n	8013336 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 801334c:	4b0c      	ldr	r3, [pc, #48]	; (8013380 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 801334e:	6818      	ldr	r0, [r3, #0]
 8013350:	f7f4 face 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8013354:	2300      	movs	r3, #0
 8013356:	4601      	mov	r1, r0
 8013358:	46ac      	mov	ip, r5
 801335a:	4620      	mov	r0, r4
 801335c:	461a      	mov	r2, r3
 801335e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013362:	4760      	bx	ip
 8013364:	2000      	movs	r0, #0
 8013366:	bd70      	pop	{r4, r5, r6, pc}
 8013368:	20027a00 	.word	0x20027a00
 801336c:	080273f8 	.word	0x080273f8
 8013370:	08029f3c 	.word	0x08029f3c
 8013374:	08027486 	.word	0x08027486
 8013378:	20027a04 	.word	0x20027a04
 801337c:	080274af 	.word	0x080274af
 8013380:	20027a0c 	.word	0x20027a0c

08013384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013384:	b538      	push	{r3, r4, r5, lr}
 8013386:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013388:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801338c:	429a      	cmp	r2, r3
 801338e:	4604      	mov	r4, r0
 8013390:	d014      	beq.n	80133bc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8013392:	6803      	ldr	r3, [r0, #0]
 8013394:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8013396:	4798      	blx	r3
 8013398:	6823      	ldr	r3, [r4, #0]
 801339a:	4605      	mov	r5, r0
 801339c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801339e:	4620      	mov	r0, r4
 80133a0:	4798      	blx	r3
 80133a2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80133a6:	b22d      	sxth	r5, r5
 80133a8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80133ac:	4601      	mov	r1, r0
 80133ae:	bf06      	itte	eq
 80133b0:	4602      	moveq	r2, r0
 80133b2:	4629      	moveq	r1, r5
 80133b4:	462a      	movne	r2, r5
 80133b6:	4620      	mov	r0, r4
 80133b8:	f7ee ff15 	bl	80021e6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133bc:	bd38      	pop	{r3, r4, r5, pc}

080133be <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80133be:	888a      	ldrh	r2, [r1, #4]
 80133c0:	8582      	strh	r2, [r0, #44]	; 0x2c
 80133c2:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80133c6:	b922      	cbnz	r2, 80133d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 80133c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80133cc:	b90b      	cbnz	r3, 80133d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 80133ce:	f7ff bfd9 	b.w	8013384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80133d2:	4770      	bx	lr

080133d4 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80133d4:	2300      	movs	r3, #0
 80133d6:	8083      	strh	r3, [r0, #4]
 80133d8:	80c3      	strh	r3, [r0, #6]
 80133da:	8003      	strh	r3, [r0, #0]
 80133dc:	8043      	strh	r3, [r0, #2]
 80133de:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80133e2:	2bff      	cmp	r3, #255	; 0xff
 80133e4:	bf01      	itttt	eq
 80133e6:	890b      	ldrheq	r3, [r1, #8]
 80133e8:	8083      	strheq	r3, [r0, #4]
 80133ea:	894b      	ldrheq	r3, [r1, #10]
 80133ec:	80c3      	strheq	r3, [r0, #6]
 80133ee:	4770      	bx	lr

080133f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80133f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80133f2:	4604      	mov	r4, r0
 80133f4:	6808      	ldr	r0, [r1, #0]
 80133f6:	6849      	ldr	r1, [r1, #4]
 80133f8:	466b      	mov	r3, sp
 80133fa:	c303      	stmia	r3!, {r0, r1}
 80133fc:	6823      	ldr	r3, [r4, #0]
 80133fe:	4669      	mov	r1, sp
 8013400:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013402:	4620      	mov	r0, r4
 8013404:	4798      	blx	r3
 8013406:	4b08      	ldr	r3, [pc, #32]	; (8013428 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013408:	681b      	ldr	r3, [r3, #0]
 801340a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801340e:	b10a      	cbz	r2, 8013414 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013410:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013412:	b900      	cbnz	r0, 8013416 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013414:	6898      	ldr	r0, [r3, #8]
 8013416:	6803      	ldr	r3, [r0, #0]
 8013418:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801341a:	699d      	ldr	r5, [r3, #24]
 801341c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8013420:	4669      	mov	r1, sp
 8013422:	47a8      	blx	r5
 8013424:	b003      	add	sp, #12
 8013426:	bd30      	pop	{r4, r5, pc}
 8013428:	200279b0 	.word	0x200279b0

0801342c <_ZN8touchgfx3BoxD1Ev>:
 801342c:	4770      	bx	lr

0801342e <_ZN8touchgfx3BoxD0Ev>:
 801342e:	b510      	push	{r4, lr}
 8013430:	212c      	movs	r1, #44	; 0x2c
 8013432:	4604      	mov	r4, r0
 8013434:	f012 f996 	bl	8025764 <_ZdlPvj>
 8013438:	4620      	mov	r0, r4
 801343a:	bd10      	pop	{r4, pc}

0801343c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801343c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013440:	4770      	bx	lr

08013442 <_ZN8touchgfx6ButtonD1Ev>:
 8013442:	4770      	bx	lr

08013444 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013444:	b570      	push	{r4, r5, r6, lr}
 8013446:	880b      	ldrh	r3, [r1, #0]
 8013448:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801344a:	4605      	mov	r5, r0
 801344c:	8813      	ldrh	r3, [r2, #0]
 801344e:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013452:	4604      	mov	r4, r0
 8013454:	4628      	mov	r0, r5
 8013456:	f006 f929 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 801345a:	4606      	mov	r6, r0
 801345c:	4628      	mov	r0, r5
 801345e:	f006 f95f 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013462:	6823      	ldr	r3, [r4, #0]
 8013464:	4605      	mov	r5, r0
 8013466:	b231      	sxth	r1, r6
 8013468:	4620      	mov	r0, r4
 801346a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801346c:	4798      	blx	r3
 801346e:	6823      	ldr	r3, [r4, #0]
 8013470:	b229      	sxth	r1, r5
 8013472:	4620      	mov	r0, r4
 8013474:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013476:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801347a:	4718      	bx	r3

0801347c <_ZN8touchgfx6ButtonD0Ev>:
 801347c:	b510      	push	{r4, lr}
 801347e:	2134      	movs	r1, #52	; 0x34
 8013480:	4604      	mov	r4, r0
 8013482:	f012 f96f 	bl	8025764 <_ZdlPvj>
 8013486:	4620      	mov	r0, r4
 8013488:	bd10      	pop	{r4, pc}

0801348a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801348a:	b510      	push	{r4, lr}
 801348c:	4604      	mov	r4, r0
 801348e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013490:	b150      	cbz	r0, 80134a8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013492:	6803      	ldr	r3, [r0, #0]
 8013494:	68db      	ldr	r3, [r3, #12]
 8013496:	4798      	blx	r3
 8013498:	b130      	cbz	r0, 80134a8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801349a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801349c:	6803      	ldr	r3, [r0, #0]
 801349e:	4621      	mov	r1, r4
 80134a0:	689b      	ldr	r3, [r3, #8]
 80134a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134a6:	4718      	bx	r3
 80134a8:	bd10      	pop	{r4, pc}

080134aa <_ZNK8touchgfx6Button12getSolidRectEv>:
 80134aa:	b510      	push	{r4, lr}
 80134ac:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80134b0:	2bff      	cmp	r3, #255	; 0xff
 80134b2:	4604      	mov	r4, r0
 80134b4:	d006      	beq.n	80134c4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80134b6:	2300      	movs	r3, #0
 80134b8:	8003      	strh	r3, [r0, #0]
 80134ba:	8043      	strh	r3, [r0, #2]
 80134bc:	8083      	strh	r3, [r0, #4]
 80134be:	80c3      	strh	r3, [r0, #6]
 80134c0:	4620      	mov	r0, r4
 80134c2:	bd10      	pop	{r4, pc}
 80134c4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80134c8:	b11b      	cbz	r3, 80134d2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80134ca:	3130      	adds	r1, #48	; 0x30
 80134cc:	f006 f962 	bl	8019794 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80134d0:	e7f6      	b.n	80134c0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80134d2:	312e      	adds	r1, #46	; 0x2e
 80134d4:	e7fa      	b.n	80134cc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080134d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80134d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134dc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80134e0:	b08a      	sub	sp, #40	; 0x28
 80134e2:	4604      	mov	r4, r0
 80134e4:	4688      	mov	r8, r1
 80134e6:	2b00      	cmp	r3, #0
 80134e8:	d044      	beq.n	8013574 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 80134ea:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80134ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 80134f0:	a805      	add	r0, sp, #20
 80134f2:	f006 f8db 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 80134f6:	4605      	mov	r5, r0
 80134f8:	b206      	sxth	r6, r0
 80134fa:	a805      	add	r0, sp, #20
 80134fc:	f006 f910 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013500:	f9b8 2000 	ldrsh.w	r2, [r8]
 8013504:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 8013508:	4417      	add	r7, r2
 801350a:	b2bf      	uxth	r7, r7
 801350c:	2300      	movs	r3, #0
 801350e:	fa0f fe87 	sxth.w	lr, r7
 8013512:	459e      	cmp	lr, r3
 8013514:	fa0f fc80 	sxth.w	ip, r0
 8013518:	9306      	str	r3, [sp, #24]
 801351a:	dd2d      	ble.n	8013578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801351c:	4296      	cmp	r6, r2
 801351e:	dd2b      	ble.n	8013578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8013520:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8013524:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 8013528:	4419      	add	r1, r3
 801352a:	b289      	uxth	r1, r1
 801352c:	fa0f f881 	sxth.w	r8, r1
 8013530:	f1b8 0f00 	cmp.w	r8, #0
 8013534:	dd20      	ble.n	8013578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8013536:	459c      	cmp	ip, r3
 8013538:	dd1e      	ble.n	8013578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801353a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801353e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013542:	4576      	cmp	r6, lr
 8013544:	bfa8      	it	ge
 8013546:	463d      	movge	r5, r7
 8013548:	45c4      	cmp	ip, r8
 801354a:	bfa8      	it	ge
 801354c:	4608      	movge	r0, r1
 801354e:	1aad      	subs	r5, r5, r2
 8013550:	1ac0      	subs	r0, r0, r3
 8013552:	f8ad 501c 	strh.w	r5, [sp, #28]
 8013556:	f8ad 001e 	strh.w	r0, [sp, #30]
 801355a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801355e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013562:	4b1f      	ldr	r3, [pc, #124]	; (80135e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 8013564:	681b      	ldr	r3, [r3, #0]
 8013566:	b953      	cbnz	r3, 801357e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 8013568:	4b1e      	ldr	r3, [pc, #120]	; (80135e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 801356a:	4a1f      	ldr	r2, [pc, #124]	; (80135e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 801356c:	481f      	ldr	r0, [pc, #124]	; (80135ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 801356e:	2187      	movs	r1, #135	; 0x87
 8013570:	f012 f926 	bl	80257c0 <__assert_func>
 8013574:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013576:	e7b9      	b.n	80134ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013578:	2300      	movs	r3, #0
 801357a:	9307      	str	r3, [sp, #28]
 801357c:	e7f1      	b.n	8013562 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 801357e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013582:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013586:	429a      	cmp	r2, r3
 8013588:	d026      	beq.n	80135d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 801358a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801358e:	2b00      	cmp	r3, #0
 8013590:	dd22      	ble.n	80135d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8013592:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013596:	2b00      	cmp	r3, #0
 8013598:	dd1e      	ble.n	80135d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 801359a:	2300      	movs	r3, #0
 801359c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80135a0:	6823      	ldr	r3, [r4, #0]
 80135a2:	a908      	add	r1, sp, #32
 80135a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80135a6:	4620      	mov	r0, r4
 80135a8:	4798      	blx	r3
 80135aa:	4b11      	ldr	r3, [pc, #68]	; (80135f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 80135ac:	681b      	ldr	r3, [r3, #0]
 80135ae:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80135b2:	b10a      	cbz	r2, 80135b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80135b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80135b6:	b900      	cbnz	r0, 80135ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 80135b8:	6898      	ldr	r0, [r3, #8]
 80135ba:	6801      	ldr	r1, [r0, #0]
 80135bc:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80135c0:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80135c4:	2501      	movs	r5, #1
 80135c6:	9502      	str	r5, [sp, #8]
 80135c8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80135cc:	9401      	str	r4, [sp, #4]
 80135ce:	ac06      	add	r4, sp, #24
 80135d0:	9400      	str	r4, [sp, #0]
 80135d2:	688c      	ldr	r4, [r1, #8]
 80135d4:	a905      	add	r1, sp, #20
 80135d6:	47a0      	blx	r4
 80135d8:	b00a      	add	sp, #40	; 0x28
 80135da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135de:	bf00      	nop
 80135e0:	20027a38 	.word	0x20027a38
 80135e4:	08029fd0 	.word	0x08029fd0
 80135e8:	0802a0a4 	.word	0x0802a0a4
 80135ec:	0802a00c 	.word	0x0802a00c
 80135f0:	200279b0 	.word	0x200279b0

080135f4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
 80135f4:	4770      	bx	lr

080135f6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 80135f6:	4770      	bx	lr

080135f8 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv>:
 80135f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80135fa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80135fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013600:	4299      	cmp	r1, r3
 8013602:	4605      	mov	r5, r0
 8013604:	d02a      	beq.n	801365c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x64>
 8013606:	4b16      	ldr	r3, [pc, #88]	; (8013660 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x68>)
 8013608:	681b      	ldr	r3, [r3, #0]
 801360a:	b92b      	cbnz	r3, 8013618 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x20>
 801360c:	4b15      	ldr	r3, [pc, #84]	; (8013664 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x6c>)
 801360e:	4a16      	ldr	r2, [pc, #88]	; (8013668 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 8013610:	21ae      	movs	r1, #174	; 0xae
 8013612:	4816      	ldr	r0, [pc, #88]	; (801366c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x74>)
 8013614:	f012 f8d4 	bl	80257c0 <__assert_func>
 8013618:	4a15      	ldr	r2, [pc, #84]	; (8013670 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x78>)
 801361a:	8812      	ldrh	r2, [r2, #0]
 801361c:	428a      	cmp	r2, r1
 801361e:	d803      	bhi.n	8013628 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x30>
 8013620:	4b14      	ldr	r3, [pc, #80]	; (8013674 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x7c>)
 8013622:	4a11      	ldr	r2, [pc, #68]	; (8013668 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 8013624:	21af      	movs	r1, #175	; 0xaf
 8013626:	e7f4      	b.n	8013612 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x1a>
 8013628:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 801362c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013630:	4b11      	ldr	r3, [pc, #68]	; (8013678 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x80>)
 8013632:	7854      	ldrb	r4, [r2, #1]
 8013634:	681b      	ldr	r3, [r3, #0]
 8013636:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801363a:	6833      	ldr	r3, [r6, #0]
 801363c:	69df      	ldr	r7, [r3, #28]
 801363e:	4b0f      	ldr	r3, [pc, #60]	; (801367c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x84>)
 8013640:	6818      	ldr	r0, [r3, #0]
 8013642:	f7f4 f955 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 8013646:	f3c4 0481 	ubfx	r4, r4, #2, #2
 801364a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 801364c:	9300      	str	r3, [sp, #0]
 801364e:	4602      	mov	r2, r0
 8013650:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8013652:	4621      	mov	r1, r4
 8013654:	4630      	mov	r0, r6
 8013656:	47b8      	blx	r7
 8013658:	b003      	add	sp, #12
 801365a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801365c:	2000      	movs	r0, #0
 801365e:	e7fb      	b.n	8013658 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x60>
 8013660:	20027a00 	.word	0x20027a00
 8013664:	080273f8 	.word	0x080273f8
 8013668:	0802a1c8 	.word	0x0802a1c8
 801366c:	08027486 	.word	0x08027486
 8013670:	20027a04 	.word	0x20027a04
 8013674:	080274af 	.word	0x080274af
 8013678:	20027a08 	.word	0x20027a08
 801367c:	20027a0c 	.word	0x20027a0c

08013680 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv>:
 8013680:	b570      	push	{r4, r5, r6, lr}
 8013682:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013684:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013688:	4299      	cmp	r1, r3
 801368a:	4604      	mov	r4, r0
 801368c:	d01e      	beq.n	80136cc <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x4c>
 801368e:	6803      	ldr	r3, [r0, #0]
 8013690:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8013692:	4b0f      	ldr	r3, [pc, #60]	; (80136d0 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x50>)
 8013694:	681b      	ldr	r3, [r3, #0]
 8013696:	b92b      	cbnz	r3, 80136a4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x24>
 8013698:	4b0e      	ldr	r3, [pc, #56]	; (80136d4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x54>)
 801369a:	4a0f      	ldr	r2, [pc, #60]	; (80136d8 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 801369c:	21ae      	movs	r1, #174	; 0xae
 801369e:	480f      	ldr	r0, [pc, #60]	; (80136dc <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x5c>)
 80136a0:	f012 f88e 	bl	80257c0 <__assert_func>
 80136a4:	4b0e      	ldr	r3, [pc, #56]	; (80136e0 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x60>)
 80136a6:	881b      	ldrh	r3, [r3, #0]
 80136a8:	428b      	cmp	r3, r1
 80136aa:	d803      	bhi.n	80136b4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x34>
 80136ac:	4b0d      	ldr	r3, [pc, #52]	; (80136e4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x64>)
 80136ae:	4a0a      	ldr	r2, [pc, #40]	; (80136d8 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 80136b0:	21af      	movs	r1, #175	; 0xaf
 80136b2:	e7f4      	b.n	801369e <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x1e>
 80136b4:	4b0c      	ldr	r3, [pc, #48]	; (80136e8 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x68>)
 80136b6:	6818      	ldr	r0, [r3, #0]
 80136b8:	f7f4 f91a 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80136bc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 80136c0:	4601      	mov	r1, r0
 80136c2:	46ac      	mov	ip, r5
 80136c4:	4620      	mov	r0, r4
 80136c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80136ca:	4760      	bx	ip
 80136cc:	2000      	movs	r0, #0
 80136ce:	bd70      	pop	{r4, r5, r6, pc}
 80136d0:	20027a00 	.word	0x20027a00
 80136d4:	080273f8 	.word	0x080273f8
 80136d8:	0802a1c8 	.word	0x0802a1c8
 80136dc:	08027486 	.word	0x08027486
 80136e0:	20027a04 	.word	0x20027a04
 80136e4:	080274af 	.word	0x080274af
 80136e8:	20027a0c 	.word	0x20027a0c

080136ec <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 80136ec:	b510      	push	{r4, lr}
 80136ee:	2144      	movs	r1, #68	; 0x44
 80136f0:	4604      	mov	r4, r0
 80136f2:	f012 f837 	bl	8025764 <_ZdlPvj>
 80136f6:	4620      	mov	r0, r4
 80136f8:	bd10      	pop	{r4, pc}

080136fa <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80136fa:	b510      	push	{r4, lr}
 80136fc:	2140      	movs	r1, #64	; 0x40
 80136fe:	4604      	mov	r4, r0
 8013700:	f012 f830 	bl	8025764 <_ZdlPvj>
 8013704:	4620      	mov	r0, r4
 8013706:	bd10      	pop	{r4, pc}

08013708 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 8013708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801370c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801370e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013712:	4293      	cmp	r3, r2
 8013714:	b08c      	sub	sp, #48	; 0x30
 8013716:	4604      	mov	r4, r0
 8013718:	460e      	mov	r6, r1
 801371a:	d05d      	beq.n	80137d8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 801371c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 80137fc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 8013720:	f8d8 2000 	ldr.w	r2, [r8]
 8013724:	b92a      	cbnz	r2, 8013732 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 8013726:	4b2e      	ldr	r3, [pc, #184]	; (80137e0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 8013728:	4a2e      	ldr	r2, [pc, #184]	; (80137e4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 801372a:	21ae      	movs	r1, #174	; 0xae
 801372c:	482e      	ldr	r0, [pc, #184]	; (80137e8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 801372e:	f012 f847 	bl	80257c0 <__assert_func>
 8013732:	4f2e      	ldr	r7, [pc, #184]	; (80137ec <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 8013734:	8839      	ldrh	r1, [r7, #0]
 8013736:	4299      	cmp	r1, r3
 8013738:	d803      	bhi.n	8013742 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 801373a:	4b2d      	ldr	r3, [pc, #180]	; (80137f0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 801373c:	4a29      	ldr	r2, [pc, #164]	; (80137e4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 801373e:	21af      	movs	r1, #175	; 0xaf
 8013740:	e7f4      	b.n	801372c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 8013742:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013746:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801374a:	4b2a      	ldr	r3, [pc, #168]	; (80137f4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 801374c:	681b      	ldr	r3, [r3, #0]
 801374e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8013752:	2a00      	cmp	r2, #0
 8013754:	d040      	beq.n	80137d8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 8013756:	784b      	ldrb	r3, [r1, #1]
 8013758:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 801375c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8013760:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8013764:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8013768:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 801376c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801376e:	9207      	str	r2, [sp, #28]
 8013770:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8013774:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013778:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801377c:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8013780:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8013784:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8013788:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801378c:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8013790:	f88d a020 	strb.w	sl, [sp, #32]
 8013794:	9009      	str	r0, [sp, #36]	; 0x24
 8013796:	f7fe fe6d 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 801379a:	ad05      	add	r5, sp, #20
 801379c:	4681      	mov	r9, r0
 801379e:	4621      	mov	r1, r4
 80137a0:	4628      	mov	r0, r5
 80137a2:	f003 fa3b 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80137a6:	f8d8 3000 	ldr.w	r3, [r8]
 80137aa:	2b00      	cmp	r3, #0
 80137ac:	d0bb      	beq.n	8013726 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 80137ae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80137b0:	883b      	ldrh	r3, [r7, #0]
 80137b2:	428b      	cmp	r3, r1
 80137b4:	d9c1      	bls.n	801373a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 80137b6:	4b10      	ldr	r3, [pc, #64]	; (80137f8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 80137b8:	6818      	ldr	r0, [r3, #0]
 80137ba:	f7f4 f899 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80137be:	2300      	movs	r3, #0
 80137c0:	9303      	str	r3, [sp, #12]
 80137c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80137c4:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80137c8:	ab07      	add	r3, sp, #28
 80137ca:	9300      	str	r3, [sp, #0]
 80137cc:	e895 0006 	ldmia.w	r5, {r1, r2}
 80137d0:	4633      	mov	r3, r6
 80137d2:	4648      	mov	r0, r9
 80137d4:	f7f4 f83f 	bl	8007856 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80137d8:	b00c      	add	sp, #48	; 0x30
 80137da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80137de:	bf00      	nop
 80137e0:	080273f8 	.word	0x080273f8
 80137e4:	0802a1c8 	.word	0x0802a1c8
 80137e8:	08027486 	.word	0x08027486
 80137ec:	20027a04 	.word	0x20027a04
 80137f0:	080274af 	.word	0x080274af
 80137f4:	20027a08 	.word	0x20027a08
 80137f8:	20027a0c 	.word	0x20027a0c
 80137fc:	20027a00 	.word	0x20027a00

08013800 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE>:
 8013800:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013804:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013806:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801380a:	4293      	cmp	r3, r2
 801380c:	b08c      	sub	sp, #48	; 0x30
 801380e:	4604      	mov	r4, r0
 8013810:	460e      	mov	r6, r1
 8013812:	d05d      	beq.n	80138d0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 8013814:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 80138f4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf4>
 8013818:	f8d8 2000 	ldr.w	r2, [r8]
 801381c:	b92a      	cbnz	r2, 801382a <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x2a>
 801381e:	4b2e      	ldr	r3, [pc, #184]	; (80138d8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd8>)
 8013820:	4a2e      	ldr	r2, [pc, #184]	; (80138dc <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 8013822:	21ae      	movs	r1, #174	; 0xae
 8013824:	482e      	ldr	r0, [pc, #184]	; (80138e0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe0>)
 8013826:	f011 ffcb 	bl	80257c0 <__assert_func>
 801382a:	4f2e      	ldr	r7, [pc, #184]	; (80138e4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe4>)
 801382c:	8839      	ldrh	r1, [r7, #0]
 801382e:	4299      	cmp	r1, r3
 8013830:	d803      	bhi.n	801383a <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x3a>
 8013832:	4b2d      	ldr	r3, [pc, #180]	; (80138e8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe8>)
 8013834:	4a29      	ldr	r2, [pc, #164]	; (80138dc <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 8013836:	21af      	movs	r1, #175	; 0xaf
 8013838:	e7f4      	b.n	8013824 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x24>
 801383a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801383e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013842:	4b2a      	ldr	r3, [pc, #168]	; (80138ec <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xec>)
 8013844:	681b      	ldr	r3, [r3, #0]
 8013846:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801384a:	2a00      	cmp	r2, #0
 801384c:	d040      	beq.n	80138d0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 801384e:	784b      	ldrb	r3, [r1, #1]
 8013850:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8013854:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8013858:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 801385c:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8013860:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 8013864:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013866:	9207      	str	r2, [sp, #28]
 8013868:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 801386c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013870:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013874:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8013878:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 801387c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8013880:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013884:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8013888:	f88d a020 	strb.w	sl, [sp, #32]
 801388c:	9009      	str	r0, [sp, #36]	; 0x24
 801388e:	f7fe fdf1 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8013892:	ad05      	add	r5, sp, #20
 8013894:	4681      	mov	r9, r0
 8013896:	4621      	mov	r1, r4
 8013898:	4628      	mov	r0, r5
 801389a:	f003 f9bf 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801389e:	f8d8 3000 	ldr.w	r3, [r8]
 80138a2:	2b00      	cmp	r3, #0
 80138a4:	d0bb      	beq.n	801381e <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x1e>
 80138a6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80138a8:	883b      	ldrh	r3, [r7, #0]
 80138aa:	428b      	cmp	r3, r1
 80138ac:	d9c1      	bls.n	8013832 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x32>
 80138ae:	4b10      	ldr	r3, [pc, #64]	; (80138f0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf0>)
 80138b0:	6818      	ldr	r0, [r3, #0]
 80138b2:	f7f4 f81d 	bl	80078f0 <_ZNK8touchgfx5Texts7getTextEt>
 80138b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80138b8:	9303      	str	r3, [sp, #12]
 80138ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80138bc:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80138c0:	ab07      	add	r3, sp, #28
 80138c2:	9300      	str	r3, [sp, #0]
 80138c4:	e895 0006 	ldmia.w	r5, {r1, r2}
 80138c8:	4633      	mov	r3, r6
 80138ca:	4648      	mov	r0, r9
 80138cc:	f7f3 ffc3 	bl	8007856 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80138d0:	b00c      	add	sp, #48	; 0x30
 80138d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80138d6:	bf00      	nop
 80138d8:	080273f8 	.word	0x080273f8
 80138dc:	0802a1c8 	.word	0x0802a1c8
 80138e0:	08027486 	.word	0x08027486
 80138e4:	20027a04 	.word	0x20027a04
 80138e8:	080274af 	.word	0x080274af
 80138ec:	20027a08 	.word	0x20027a08
 80138f0:	20027a0c 	.word	0x20027a0c
 80138f4:	20027a00 	.word	0x20027a00

080138f8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 80138f8:	4770      	bx	lr

080138fa <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80138fa:	b510      	push	{r4, lr}
 80138fc:	2134      	movs	r1, #52	; 0x34
 80138fe:	4604      	mov	r4, r0
 8013900:	f011 ff30 	bl	8025764 <_ZdlPvj>
 8013904:	4620      	mov	r0, r4
 8013906:	bd10      	pop	{r4, pc}

08013908 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8013908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801390c:	4604      	mov	r4, r0
 801390e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013910:	8962      	ldrh	r2, [r4, #10]
 8013912:	b218      	sxth	r0, r3
 8013914:	460e      	mov	r6, r1
 8013916:	005b      	lsls	r3, r3, #1
 8013918:	8921      	ldrh	r1, [r4, #8]
 801391a:	b29b      	uxth	r3, r3
 801391c:	1ac9      	subs	r1, r1, r3
 801391e:	b08e      	sub	sp, #56	; 0x38
 8013920:	b209      	sxth	r1, r1
 8013922:	1ad3      	subs	r3, r2, r3
 8013924:	b21b      	sxth	r3, r3
 8013926:	2900      	cmp	r1, #0
 8013928:	f8ad 0000 	strh.w	r0, [sp]
 801392c:	f8ad 0002 	strh.w	r0, [sp, #2]
 8013930:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013934:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013938:	dd5e      	ble.n	80139f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801393a:	2b00      	cmp	r3, #0
 801393c:	dd5c      	ble.n	80139f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801393e:	6830      	ldr	r0, [r6, #0]
 8013940:	6871      	ldr	r1, [r6, #4]
 8013942:	ab02      	add	r3, sp, #8
 8013944:	c303      	stmia	r3!, {r0, r1}
 8013946:	4669      	mov	r1, sp
 8013948:	a802      	add	r0, sp, #8
 801394a:	f7fe f8e5 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801394e:	4620      	mov	r0, r4
 8013950:	a902      	add	r1, sp, #8
 8013952:	f7ff fd4d 	bl	80133f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8013956:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8013958:	2800      	cmp	r0, #0
 801395a:	d05f      	beq.n	8013a1c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801395c:	8963      	ldrh	r3, [r4, #10]
 801395e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013962:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013966:	1a1f      	subs	r7, r3, r0
 8013968:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801396c:	b202      	sxth	r2, r0
 801396e:	2500      	movs	r5, #0
 8013970:	b21b      	sxth	r3, r3
 8013972:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8013976:	1a09      	subs	r1, r1, r0
 8013978:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801397c:	9506      	str	r5, [sp, #24]
 801397e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8013982:	f8ad 5020 	strh.w	r5, [sp, #32]
 8013986:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801398a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 801398e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8013992:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8013996:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801399a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 801399e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80139a2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80139a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80139aa:	af04      	add	r7, sp, #16
 80139ac:	ab06      	add	r3, sp, #24
 80139ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80139b2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80139b6:	e887 0003 	stmia.w	r7, {r0, r1}
 80139ba:	4631      	mov	r1, r6
 80139bc:	4638      	mov	r0, r7
 80139be:	f7fe f8ab 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 80139c2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80139c6:	2b00      	cmp	r3, #0
 80139c8:	dd12      	ble.n	80139f0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80139ca:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80139ce:	2b00      	cmp	r3, #0
 80139d0:	dd0e      	ble.n	80139f0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80139d2:	6823      	ldr	r3, [r4, #0]
 80139d4:	4639      	mov	r1, r7
 80139d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80139d8:	4620      	mov	r0, r4
 80139da:	4798      	blx	r3
 80139dc:	f7fe fd4a 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 80139e0:	6803      	ldr	r3, [r0, #0]
 80139e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80139e4:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80139e8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80139ec:	4639      	mov	r1, r7
 80139ee:	47c0      	blx	r8
 80139f0:	3501      	adds	r5, #1
 80139f2:	2d04      	cmp	r5, #4
 80139f4:	d1da      	bne.n	80139ac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80139f6:	e011      	b.n	8013a1c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80139f8:	6830      	ldr	r0, [r6, #0]
 80139fa:	6871      	ldr	r1, [r6, #4]
 80139fc:	ab06      	add	r3, sp, #24
 80139fe:	c303      	stmia	r3!, {r0, r1}
 8013a00:	6823      	ldr	r3, [r4, #0]
 8013a02:	a906      	add	r1, sp, #24
 8013a04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013a06:	4620      	mov	r0, r4
 8013a08:	4798      	blx	r3
 8013a0a:	f7fe fd33 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8013a0e:	6803      	ldr	r3, [r0, #0]
 8013a10:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013a12:	699d      	ldr	r5, [r3, #24]
 8013a14:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8013a18:	a906      	add	r1, sp, #24
 8013a1a:	47a8      	blx	r5
 8013a1c:	b00e      	add	sp, #56	; 0x38
 8013a1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013a22 <_ZN8touchgfx5ImageD1Ev>:
 8013a22:	4770      	bx	lr

08013a24 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013a24:	b570      	push	{r4, r5, r6, lr}
 8013a26:	880b      	ldrh	r3, [r1, #0]
 8013a28:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013a2a:	4604      	mov	r4, r0
 8013a2c:	4608      	mov	r0, r1
 8013a2e:	460d      	mov	r5, r1
 8013a30:	f005 fe3c 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a34:	4606      	mov	r6, r0
 8013a36:	4628      	mov	r0, r5
 8013a38:	f005 fe72 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a3c:	6823      	ldr	r3, [r4, #0]
 8013a3e:	4605      	mov	r5, r0
 8013a40:	b231      	sxth	r1, r6
 8013a42:	4620      	mov	r0, r4
 8013a44:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013a46:	4798      	blx	r3
 8013a48:	6823      	ldr	r3, [r4, #0]
 8013a4a:	b229      	sxth	r1, r5
 8013a4c:	4620      	mov	r0, r4
 8013a4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013a50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a54:	4718      	bx	r3

08013a56 <_ZN8touchgfx5ImageD0Ev>:
 8013a56:	b510      	push	{r4, lr}
 8013a58:	212c      	movs	r1, #44	; 0x2c
 8013a5a:	4604      	mov	r4, r0
 8013a5c:	f011 fe82 	bl	8025764 <_ZdlPvj>
 8013a60:	4620      	mov	r0, r4
 8013a62:	bd10      	pop	{r4, pc}

08013a64 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013a64:	b510      	push	{r4, lr}
 8013a66:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013a6a:	2bff      	cmp	r3, #255	; 0xff
 8013a6c:	4604      	mov	r4, r0
 8013a6e:	d006      	beq.n	8013a7e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013a70:	2300      	movs	r3, #0
 8013a72:	8003      	strh	r3, [r0, #0]
 8013a74:	8043      	strh	r3, [r0, #2]
 8013a76:	8083      	strh	r3, [r0, #4]
 8013a78:	80c3      	strh	r3, [r0, #6]
 8013a7a:	4620      	mov	r0, r4
 8013a7c:	bd10      	pop	{r4, pc}
 8013a7e:	3126      	adds	r1, #38	; 0x26
 8013a80:	f005 fe88 	bl	8019794 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a84:	e7f9      	b.n	8013a7a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08013a88 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a8c:	4604      	mov	r4, r0
 8013a8e:	b088      	sub	sp, #32
 8013a90:	f854 3b26 	ldr.w	r3, [r4], #38
 8013a94:	2500      	movs	r5, #0
 8013a96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013a98:	460f      	mov	r7, r1
 8013a9a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013a9e:	a904      	add	r1, sp, #16
 8013aa0:	4606      	mov	r6, r0
 8013aa2:	4798      	blx	r3
 8013aa4:	4620      	mov	r0, r4
 8013aa6:	f005 fe01 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013aaa:	4680      	mov	r8, r0
 8013aac:	4620      	mov	r0, r4
 8013aae:	f005 fe37 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ab2:	9506      	str	r5, [sp, #24]
 8013ab4:	ad06      	add	r5, sp, #24
 8013ab6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013aba:	4639      	mov	r1, r7
 8013abc:	4628      	mov	r0, r5
 8013abe:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013ac2:	f7fe f829 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 8013ac6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013aca:	2b00      	cmp	r3, #0
 8013acc:	dd19      	ble.n	8013b02 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013ace:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013ad2:	2b00      	cmp	r3, #0
 8013ad4:	dd15      	ble.n	8013b02 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013ad6:	4b0c      	ldr	r3, [pc, #48]	; (8013b08 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013ad8:	681b      	ldr	r3, [r3, #0]
 8013ada:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013ade:	b10a      	cbz	r2, 8013ae4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013ae0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013ae2:	b900      	cbnz	r0, 8013ae6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013ae4:	6898      	ldr	r0, [r3, #8]
 8013ae6:	6801      	ldr	r1, [r0, #0]
 8013ae8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013aec:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013af0:	2701      	movs	r7, #1
 8013af2:	9702      	str	r7, [sp, #8]
 8013af4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013af8:	e9cd 5600 	strd	r5, r6, [sp]
 8013afc:	688d      	ldr	r5, [r1, #8]
 8013afe:	4621      	mov	r1, r4
 8013b00:	47a8      	blx	r5
 8013b02:	b008      	add	sp, #32
 8013b04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b08:	200279b0 	.word	0x200279b0

08013b0c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013b0c:	b510      	push	{r4, lr}
 8013b0e:	6803      	ldr	r3, [r0, #0]
 8013b10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013b12:	460c      	mov	r4, r1
 8013b14:	4798      	blx	r3
 8013b16:	1b03      	subs	r3, r0, r4
 8013b18:	4258      	negs	r0, r3
 8013b1a:	4158      	adcs	r0, r3
 8013b1c:	bd10      	pop	{r4, pc}
	...

08013b20 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8013b20:	4b01      	ldr	r3, [pc, #4]	; (8013b28 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8013b22:	6019      	str	r1, [r3, #0]
 8013b24:	4770      	bx	lr
 8013b26:	bf00      	nop
 8013b28:	200279b8 	.word	0x200279b8

08013b2c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b30:	4696      	mov	lr, r2
 8013b32:	4605      	mov	r5, r0
 8013b34:	4614      	mov	r4, r2
 8013b36:	460e      	mov	r6, r1
 8013b38:	461f      	mov	r7, r3
 8013b3a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b3e:	b097      	sub	sp, #92	; 0x5c
 8013b40:	f10d 0c1c 	add.w	ip, sp, #28
 8013b44:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b48:	f8de 3000 	ldr.w	r3, [lr]
 8013b4c:	f8cc 3000 	str.w	r3, [ip]
 8013b50:	f104 0e14 	add.w	lr, r4, #20
 8013b54:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b58:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013b5c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b60:	f8de 3000 	ldr.w	r3, [lr]
 8013b64:	f8cc 3000 	str.w	r3, [ip]
 8013b68:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013b6c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b70:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013b74:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b78:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013b7c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013b80:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013b84:	f8de 3000 	ldr.w	r3, [lr]
 8013b88:	f8cc 3000 	str.w	r3, [ip]
 8013b8c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013b8e:	682b      	ldr	r3, [r5, #0]
 8013b90:	9201      	str	r2, [sp, #4]
 8013b92:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013b96:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013b98:	9200      	str	r2, [sp, #0]
 8013b9a:	f8cd 8008 	str.w	r8, [sp, #8]
 8013b9e:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 8013ba2:	aa07      	add	r2, sp, #28
 8013ba4:	463b      	mov	r3, r7
 8013ba6:	4631      	mov	r1, r6
 8013ba8:	4628      	mov	r0, r5
 8013baa:	47d8      	blx	fp
 8013bac:	46a6      	mov	lr, r4
 8013bae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013bb2:	f10d 0c1c 	add.w	ip, sp, #28
 8013bb6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013bba:	f8de 3000 	ldr.w	r3, [lr]
 8013bbe:	f8cc 3000 	str.w	r3, [ip]
 8013bc2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013bc6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013bca:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013bce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013bd2:	343c      	adds	r4, #60	; 0x3c
 8013bd4:	f8de 3000 	ldr.w	r3, [lr]
 8013bd8:	f8cc 3000 	str.w	r3, [ip]
 8013bdc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013bde:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013be2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013be6:	6823      	ldr	r3, [r4, #0]
 8013be8:	f8cc 3000 	str.w	r3, [ip]
 8013bec:	682b      	ldr	r3, [r5, #0]
 8013bee:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013bf2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013bf4:	9201      	str	r2, [sp, #4]
 8013bf6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013bf8:	9200      	str	r2, [sp, #0]
 8013bfa:	f8cd 8008 	str.w	r8, [sp, #8]
 8013bfe:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 8013c00:	aa07      	add	r2, sp, #28
 8013c02:	463b      	mov	r3, r7
 8013c04:	4631      	mov	r1, r6
 8013c06:	4628      	mov	r0, r5
 8013c08:	47a0      	blx	r4
 8013c0a:	b017      	add	sp, #92	; 0x5c
 8013c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c10 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c14:	b08d      	sub	sp, #52	; 0x34
 8013c16:	4688      	mov	r8, r1
 8013c18:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013c1a:	f8d3 c000 	ldr.w	ip, [r3]
 8013c1e:	680f      	ldr	r7, [r1, #0]
 8013c20:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013c24:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013c28:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013c2c:	edd3 6a07 	vldr	s13, [r3, #28]
 8013c30:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013c32:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013c36:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013c3a:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013c3e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013c42:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013c46:	eba7 070c 	sub.w	r7, r7, ip
 8013c4a:	42bc      	cmp	r4, r7
 8013c4c:	bfa8      	it	ge
 8013c4e:	463c      	movge	r4, r7
 8013c50:	ee07 4a90 	vmov	s15, r4
 8013c54:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013c58:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013c5c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013c60:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013c64:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013c68:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013c6c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013c70:	eb09 0e0c 	add.w	lr, r9, ip
 8013c74:	4571      	cmp	r1, lr
 8013c76:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013c7a:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013c7e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013c82:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013c86:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013c8a:	f340 808d 	ble.w	8013da8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013c8e:	eba1 060e 	sub.w	r6, r1, lr
 8013c92:	fb96 f5f4 	sdiv	r5, r6, r4
 8013c96:	ee07 5a10 	vmov	s14, r5
 8013c9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c9e:	2d00      	cmp	r5, #0
 8013ca0:	fb04 6615 	mls	r6, r4, r5, r6
 8013ca4:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013ca8:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013cac:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013cb0:	dd13      	ble.n	8013cda <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013cb2:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013cb6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013cba:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013cbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013cc2:	bf18      	it	ne
 8013cc4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013cc8:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013ccc:	bf08      	it	eq
 8013cce:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013cd2:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013cd6:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013cda:	fb05 f204 	mul.w	r2, r5, r4
 8013cde:	1abf      	subs	r7, r7, r2
 8013ce0:	4494      	add	ip, r2
 8013ce2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013ce6:	4411      	add	r1, r2
 8013ce8:	eb09 020c 	add.w	r2, r9, ip
 8013cec:	443a      	add	r2, r7
 8013cee:	b209      	sxth	r1, r1
 8013cf0:	428a      	cmp	r2, r1
 8013cf2:	bfc4      	itt	gt
 8013cf4:	eba1 0209 	subgt.w	r2, r1, r9
 8013cf8:	eba2 070c 	subgt.w	r7, r2, ip
 8013cfc:	2f00      	cmp	r7, #0
 8013cfe:	dd50      	ble.n	8013da2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8013d00:	fb97 f1f4 	sdiv	r1, r7, r4
 8013d04:	fb04 7211 	mls	r2, r4, r1, r7
 8013d08:	b90a      	cbnz	r2, 8013d0e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013d0a:	3901      	subs	r1, #1
 8013d0c:	4622      	mov	r2, r4
 8013d0e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013d12:	6840      	ldr	r0, [r0, #4]
 8013d14:	900b      	str	r0, [sp, #44]	; 0x2c
 8013d16:	f8d0 a000 	ldr.w	sl, [r0]
 8013d1a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013d1c:	9008      	str	r0, [sp, #32]
 8013d1e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013d22:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013d24:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013d28:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013d2c:	695b      	ldr	r3, [r3, #20]
 8013d2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013d30:	445b      	add	r3, fp
 8013d32:	eef0 6a42 	vmov.f32	s13, s4
 8013d36:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013d3a:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013d3e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013d42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d46:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013d4a:	9307      	str	r3, [sp, #28]
 8013d4c:	ee17 7a90 	vmov	r7, s15
 8013d50:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013d54:	eeb0 7a61 	vmov.f32	s14, s3
 8013d58:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013d5c:	ee16 3a90 	vmov	r3, s13
 8013d60:	fb97 f7f4 	sdiv	r7, r7, r4
 8013d64:	ee17 ca90 	vmov	ip, s15
 8013d68:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013d6c:	fb9c fcf4 	sdiv	ip, ip, r4
 8013d70:	fb0c 3306 	mla	r3, ip, r6, r3
 8013d74:	9302      	str	r3, [sp, #8]
 8013d76:	ee17 3a10 	vmov	r3, s14
 8013d7a:	44b6      	add	lr, r6
 8013d7c:	fb04 e505 	mla	r5, r4, r5, lr
 8013d80:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013d84:	fb07 3706 	mla	r7, r7, r6, r3
 8013d88:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013d8c:	e9cd 4700 	strd	r4, r7, [sp]
 8013d90:	2900      	cmp	r1, #0
 8013d92:	bfcc      	ite	gt
 8013d94:	46a1      	movgt	r9, r4
 8013d96:	4691      	movle	r9, r2
 8013d98:	eba9 0306 	sub.w	r3, r9, r6
 8013d9c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013da0:	47a0      	blx	r4
 8013da2:	b00d      	add	sp, #52	; 0x34
 8013da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013da8:	2500      	movs	r5, #0
 8013daa:	462e      	mov	r6, r5
 8013dac:	e799      	b.n	8013ce2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013db4:	b0db      	sub	sp, #364	; 0x16c
 8013db6:	461d      	mov	r5, r3
 8013db8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013dbc:	930a      	str	r3, [sp, #40]	; 0x28
 8013dbe:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013dc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013dc4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013dc8:	9310      	str	r3, [sp, #64]	; 0x40
 8013dca:	6803      	ldr	r3, [r0, #0]
 8013dcc:	910f      	str	r1, [sp, #60]	; 0x3c
 8013dce:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 8013dd0:	9009      	str	r0, [sp, #36]	; 0x24
 8013dd2:	4614      	mov	r4, r2
 8013dd4:	4629      	mov	r1, r5
 8013dd6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013dda:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013dde:	47b8      	blx	r7
 8013de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013de2:	6058      	str	r0, [r3, #4]
 8013de4:	2800      	cmp	r0, #0
 8013de6:	f000 83a1 	beq.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dea:	682b      	ldr	r3, [r5, #0]
 8013dec:	9314      	str	r3, [sp, #80]	; 0x50
 8013dee:	686b      	ldr	r3, [r5, #4]
 8013df0:	9315      	str	r3, [sp, #84]	; 0x54
 8013df2:	4bc4      	ldr	r3, [pc, #784]	; (8014104 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013df4:	ed94 7a02 	vldr	s14, [r4, #8]
 8013df8:	7819      	ldrb	r1, [r3, #0]
 8013dfa:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013dfe:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013e02:	2900      	cmp	r1, #0
 8013e04:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013e08:	bf16      	itet	ne
 8013e0a:	4619      	movne	r1, r3
 8013e0c:	4611      	moveq	r1, r2
 8013e0e:	4613      	movne	r3, r2
 8013e10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e14:	9116      	str	r1, [sp, #88]	; 0x58
 8013e16:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013e1a:	f240 8387 	bls.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e1e:	ed94 7a07 	vldr	s14, [r4, #28]
 8013e22:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013e26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e2a:	f240 837f 	bls.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e2e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013e32:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013e36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e3a:	f240 8377 	bls.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e3e:	6822      	ldr	r2, [r4, #0]
 8013e40:	4bb1      	ldr	r3, [pc, #708]	; (8014108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013e42:	429a      	cmp	r2, r3
 8013e44:	f2c0 8372 	blt.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e48:	49b0      	ldr	r1, [pc, #704]	; (801410c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013e4a:	6963      	ldr	r3, [r4, #20]
 8013e4c:	428a      	cmp	r2, r1
 8013e4e:	f300 836d 	bgt.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e52:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013e56:	48ae      	ldr	r0, [pc, #696]	; (8014110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013e58:	33ff      	adds	r3, #255	; 0xff
 8013e5a:	4283      	cmp	r3, r0
 8013e5c:	f200 8366 	bhi.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e60:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013e62:	4dac      	ldr	r5, [pc, #688]	; (8014114 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013e64:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013e68:	33ff      	adds	r3, #255	; 0xff
 8013e6a:	42ab      	cmp	r3, r5
 8013e6c:	f200 835e 	bhi.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e70:	6862      	ldr	r2, [r4, #4]
 8013e72:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013e76:	33ff      	adds	r3, #255	; 0xff
 8013e78:	4283      	cmp	r3, r0
 8013e7a:	f200 8357 	bhi.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e7e:	69a1      	ldr	r1, [r4, #24]
 8013e80:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013e84:	33ff      	adds	r3, #255	; 0xff
 8013e86:	4283      	cmp	r3, r0
 8013e88:	f200 8350 	bhi.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013e8e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013e92:	30ff      	adds	r0, #255	; 0xff
 8013e94:	42a8      	cmp	r0, r5
 8013e96:	f200 8349 	bhi.w	801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e9a:	428a      	cmp	r2, r1
 8013e9c:	f280 8110 	bge.w	80140c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013ea0:	429a      	cmp	r2, r3
 8013ea2:	f300 8119 	bgt.w	80140d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013ea6:	4299      	cmp	r1, r3
 8013ea8:	f280 811d 	bge.w	80140e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013eac:	2502      	movs	r5, #2
 8013eae:	2701      	movs	r7, #1
 8013eb0:	46a9      	mov	r9, r5
 8013eb2:	46b8      	mov	r8, r7
 8013eb4:	f04f 0a00 	mov.w	sl, #0
 8013eb8:	4621      	mov	r1, r4
 8013eba:	a849      	add	r0, sp, #292	; 0x124
 8013ebc:	f004 fd9e 	bl	80189fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013ec0:	4622      	mov	r2, r4
 8013ec2:	4653      	mov	r3, sl
 8013ec4:	a949      	add	r1, sp, #292	; 0x124
 8013ec6:	f8cd 9000 	str.w	r9, [sp]
 8013eca:	a819      	add	r0, sp, #100	; 0x64
 8013ecc:	f004 fec6 	bl	8018c5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013ed0:	4622      	mov	r2, r4
 8013ed2:	4653      	mov	r3, sl
 8013ed4:	a949      	add	r1, sp, #292	; 0x124
 8013ed6:	f8cd 8000 	str.w	r8, [sp]
 8013eda:	a829      	add	r0, sp, #164	; 0xa4
 8013edc:	f004 febe 	bl	8018c5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013ee0:	4643      	mov	r3, r8
 8013ee2:	4622      	mov	r2, r4
 8013ee4:	a949      	add	r1, sp, #292	; 0x124
 8013ee6:	f8cd 9000 	str.w	r9, [sp]
 8013eea:	a839      	add	r0, sp, #228	; 0xe4
 8013eec:	f004 feb6 	bl	8018c5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013ef0:	42af      	cmp	r7, r5
 8013ef2:	bfb5      	itete	lt
 8013ef4:	2300      	movlt	r3, #0
 8013ef6:	2301      	movge	r3, #1
 8013ef8:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013efa:	930e      	strge	r3, [sp, #56]	; 0x38
 8013efc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013efe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013f02:	af12      	add	r7, sp, #72	; 0x48
 8013f04:	bfb9      	ittee	lt
 8013f06:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013f08:	ac19      	addlt	r4, sp, #100	; 0x64
 8013f0a:	ad19      	addge	r5, sp, #100	; 0x64
 8013f0c:	ac29      	addge	r4, sp, #164	; 0xa4
 8013f0e:	e887 0003 	stmia.w	r7, {r0, r1}
 8013f12:	b928      	cbnz	r0, 8013f20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013f14:	4b80      	ldr	r3, [pc, #512]	; (8014118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013f16:	6818      	ldr	r0, [r3, #0]
 8013f18:	6803      	ldr	r3, [r0, #0]
 8013f1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013f1c:	4798      	blx	r3
 8013f1e:	6038      	str	r0, [r7, #0]
 8013f20:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013f26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013f2a:	930c      	str	r3, [sp, #48]	; 0x30
 8013f2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f2e:	6963      	ldr	r3, [r4, #20]
 8013f30:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013f32:	440b      	add	r3, r1
 8013f34:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013f38:	4408      	add	r0, r1
 8013f3a:	b200      	sxth	r0, r0
 8013f3c:	4283      	cmp	r3, r0
 8013f3e:	900d      	str	r0, [sp, #52]	; 0x34
 8013f40:	f280 80dd 	bge.w	80140fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013f44:	428b      	cmp	r3, r1
 8013f46:	da08      	bge.n	8013f5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013f48:	2a00      	cmp	r2, #0
 8013f4a:	dd06      	ble.n	8013f5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013f4c:	1acb      	subs	r3, r1, r3
 8013f4e:	429a      	cmp	r2, r3
 8013f50:	f2c0 80e4 	blt.w	801411c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013f54:	2b00      	cmp	r3, #0
 8013f56:	f300 80e2 	bgt.w	801411e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013f5a:	6967      	ldr	r7, [r4, #20]
 8013f5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f5e:	443b      	add	r3, r7
 8013f60:	461f      	mov	r7, r3
 8013f62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f64:	1bdf      	subs	r7, r3, r7
 8013f66:	4297      	cmp	r7, r2
 8013f68:	bfa8      	it	ge
 8013f6a:	4617      	movge	r7, r2
 8013f6c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013f70:	2f00      	cmp	r7, #0
 8013f72:	f340 8166 	ble.w	8014242 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013f76:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f78:	6829      	ldr	r1, [r5, #0]
 8013f7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f7e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013f82:	6820      	ldr	r0, [r4, #0]
 8013f84:	4411      	add	r1, r2
 8013f86:	4299      	cmp	r1, r3
 8013f88:	dd1a      	ble.n	8013fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013f8a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013f8e:	440b      	add	r3, r1
 8013f90:	4402      	add	r2, r0
 8013f92:	b21b      	sxth	r3, r3
 8013f94:	429a      	cmp	r2, r3
 8013f96:	dc13      	bgt.n	8013fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013f98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f9c:	681b      	ldr	r3, [r3, #0]
 8013f9e:	9206      	str	r2, [sp, #24]
 8013fa0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013fa2:	9205      	str	r2, [sp, #20]
 8013fa4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013fa6:	9500      	str	r5, [sp, #0]
 8013fa8:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013fac:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013fae:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013fb0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013fb4:	a912      	add	r1, sp, #72	; 0x48
 8013fb6:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8013fba:	aa49      	add	r2, sp, #292	; 0x124
 8013fbc:	4623      	mov	r3, r4
 8013fbe:	47c8      	blx	r9
 8013fc0:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013fc4:	441a      	add	r2, r3
 8013fc6:	6963      	ldr	r3, [r4, #20]
 8013fc8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013fcc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013fd0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013fd4:	68a1      	ldr	r1, [r4, #8]
 8013fd6:	ed94 6a08 	vldr	s12, [r4, #32]
 8013fda:	6022      	str	r2, [r4, #0]
 8013fdc:	3301      	adds	r3, #1
 8013fde:	6163      	str	r3, [r4, #20]
 8013fe0:	69a3      	ldr	r3, [r4, #24]
 8013fe2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013fe6:	3b01      	subs	r3, #1
 8013fe8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013fec:	61a3      	str	r3, [r4, #24]
 8013fee:	6923      	ldr	r3, [r4, #16]
 8013ff0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013ff4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ff8:	edd4 6a07 	vldr	s13, [r4, #28]
 8013ffc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014000:	440b      	add	r3, r1
 8014002:	68e1      	ldr	r1, [r4, #12]
 8014004:	6123      	str	r3, [r4, #16]
 8014006:	ee76 6a86 	vadd.f32	s13, s13, s12
 801400a:	428b      	cmp	r3, r1
 801400c:	edc4 6a07 	vstr	s13, [r4, #28]
 8014010:	db15      	blt.n	801403e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8014012:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014016:	ee76 6a26 	vadd.f32	s13, s12, s13
 801401a:	3201      	adds	r2, #1
 801401c:	edc4 6a07 	vstr	s13, [r4, #28]
 8014020:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014024:	6022      	str	r2, [r4, #0]
 8014026:	ee36 7a87 	vadd.f32	s14, s13, s14
 801402a:	1a5b      	subs	r3, r3, r1
 801402c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014030:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014034:	6123      	str	r3, [r4, #16]
 8014036:	ee77 7a27 	vadd.f32	s15, s14, s15
 801403a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801403e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014042:	441a      	add	r2, r3
 8014044:	696b      	ldr	r3, [r5, #20]
 8014046:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801404a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801404e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014052:	68a9      	ldr	r1, [r5, #8]
 8014054:	ed95 6a08 	vldr	s12, [r5, #32]
 8014058:	602a      	str	r2, [r5, #0]
 801405a:	3301      	adds	r3, #1
 801405c:	616b      	str	r3, [r5, #20]
 801405e:	69ab      	ldr	r3, [r5, #24]
 8014060:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014064:	3b01      	subs	r3, #1
 8014066:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801406a:	61ab      	str	r3, [r5, #24]
 801406c:	692b      	ldr	r3, [r5, #16]
 801406e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014072:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014076:	edd5 6a07 	vldr	s13, [r5, #28]
 801407a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801407e:	440b      	add	r3, r1
 8014080:	68e9      	ldr	r1, [r5, #12]
 8014082:	612b      	str	r3, [r5, #16]
 8014084:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014088:	428b      	cmp	r3, r1
 801408a:	edc5 6a07 	vstr	s13, [r5, #28]
 801408e:	db15      	blt.n	80140bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8014090:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014094:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014098:	3201      	adds	r2, #1
 801409a:	edc5 6a07 	vstr	s13, [r5, #28]
 801409e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80140a2:	602a      	str	r2, [r5, #0]
 80140a4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80140a8:	1a5b      	subs	r3, r3, r1
 80140aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80140ae:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80140b2:	612b      	str	r3, [r5, #16]
 80140b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80140b8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80140bc:	3f01      	subs	r7, #1
 80140be:	e757      	b.n	8013f70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80140c0:	4299      	cmp	r1, r3
 80140c2:	dc13      	bgt.n	80140ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80140c4:	429a      	cmp	r2, r3
 80140c6:	da14      	bge.n	80140f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80140c8:	2502      	movs	r5, #2
 80140ca:	2703      	movs	r7, #3
 80140cc:	46a9      	mov	r9, r5
 80140ce:	f04f 0800 	mov.w	r8, #0
 80140d2:	f04f 0a01 	mov.w	sl, #1
 80140d6:	e6ef      	b.n	8013eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80140d8:	2501      	movs	r5, #1
 80140da:	2700      	movs	r7, #0
 80140dc:	46a9      	mov	r9, r5
 80140de:	46b8      	mov	r8, r7
 80140e0:	f04f 0a02 	mov.w	sl, #2
 80140e4:	e6e8      	b.n	8013eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80140e6:	2501      	movs	r5, #1
 80140e8:	2702      	movs	r7, #2
 80140ea:	e6e1      	b.n	8013eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80140ec:	2500      	movs	r5, #0
 80140ee:	2701      	movs	r7, #1
 80140f0:	e7f4      	b.n	80140dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80140f2:	2702      	movs	r7, #2
 80140f4:	2503      	movs	r5, #3
 80140f6:	f04f 0900 	mov.w	r9, #0
 80140fa:	46b8      	mov	r8, r7
 80140fc:	e7e9      	b.n	80140d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80140fe:	4613      	mov	r3, r2
 8014100:	e728      	b.n	8013f54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8014102:	bf00      	nop
 8014104:	200279a8 	.word	0x200279a8
 8014108:	fffd8f01 	.word	0xfffd8f01
 801410c:	00027100 	.word	0x00027100
 8014110:	0004e1ff 	.word	0x0004e1ff
 8014114:	0004e1fe 	.word	0x0004e1fe
 8014118:	200279b0 	.word	0x200279b0
 801411c:	4613      	mov	r3, r2
 801411e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8014120:	9111      	str	r1, [sp, #68]	; 0x44
 8014122:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014126:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801412a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801412c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8014130:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014134:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014138:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 801413c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8014140:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014144:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014148:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 801414c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8014150:	469e      	mov	lr, r3
 8014152:	469c      	mov	ip, r3
 8014154:	f04f 0900 	mov.w	r9, #0
 8014158:	f1bc 0f00 	cmp.w	ip, #0
 801415c:	d147      	bne.n	80141ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801415e:	eb03 0c07 	add.w	ip, r3, r7
 8014162:	1ad7      	subs	r7, r2, r3
 8014164:	f1b9 0f00 	cmp.w	r9, #0
 8014168:	d009      	beq.n	801417e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801416a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801416e:	9029      	str	r0, [sp, #164]	; 0xa4
 8014170:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014174:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014178:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801417c:	912d      	str	r1, [sp, #180]	; 0xb4
 801417e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014180:	9111      	str	r1, [sp, #68]	; 0x44
 8014182:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014186:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801418a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801418e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014192:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014196:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801419a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801419e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80141a2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80141a6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80141aa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80141ae:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80141b2:	f04f 0800 	mov.w	r8, #0
 80141b6:	f1be 0f00 	cmp.w	lr, #0
 80141ba:	d031      	beq.n	8014220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80141bc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80141be:	4431      	add	r1, r6
 80141c0:	4549      	cmp	r1, r9
 80141c2:	4450      	add	r0, sl
 80141c4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80141c8:	ee37 7a04 	vadd.f32	s14, s14, s8
 80141cc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80141d0:	db08      	blt.n	80141e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80141d2:	ee77 7a85 	vadd.f32	s15, s15, s10
 80141d6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80141da:	ee37 7a06 	vadd.f32	s14, s14, s12
 80141de:	3001      	adds	r0, #1
 80141e0:	eba1 0109 	sub.w	r1, r1, r9
 80141e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80141e8:	f04f 0801 	mov.w	r8, #1
 80141ec:	e7e3      	b.n	80141b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80141ee:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80141f0:	4431      	add	r1, r6
 80141f2:	4541      	cmp	r1, r8
 80141f4:	4450      	add	r0, sl
 80141f6:	ee37 7a24 	vadd.f32	s14, s14, s9
 80141fa:	ee77 7a84 	vadd.f32	s15, s15, s8
 80141fe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014202:	db08      	blt.n	8014216 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014204:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014208:	ee37 7a25 	vadd.f32	s14, s14, s11
 801420c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014210:	3001      	adds	r0, #1
 8014212:	eba1 0108 	sub.w	r1, r1, r8
 8014216:	f10c 3cff 	add.w	ip, ip, #4294967295
 801421a:	f04f 0901 	mov.w	r9, #1
 801421e:	e79b      	b.n	8014158 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014220:	449c      	add	ip, r3
 8014222:	1aff      	subs	r7, r7, r3
 8014224:	f1b8 0f00 	cmp.w	r8, #0
 8014228:	d009      	beq.n	801423e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801422a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801422e:	9019      	str	r0, [sp, #100]	; 0x64
 8014230:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014234:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014238:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801423c:	911d      	str	r1, [sp, #116]	; 0x74
 801423e:	1ad2      	subs	r2, r2, r3
 8014240:	e68b      	b.n	8013f5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014242:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014244:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014246:	2b00      	cmp	r3, #0
 8014248:	f000 80d1 	beq.w	80143ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801424c:	ad19      	add	r5, sp, #100	; 0x64
 801424e:	ac39      	add	r4, sp, #228	; 0xe4
 8014250:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014252:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014256:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801425a:	930c      	str	r3, [sp, #48]	; 0x30
 801425c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801425e:	6963      	ldr	r3, [r4, #20]
 8014260:	440b      	add	r3, r1
 8014262:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014266:	4408      	add	r0, r1
 8014268:	b200      	sxth	r0, r0
 801426a:	4283      	cmp	r3, r0
 801426c:	900d      	str	r0, [sp, #52]	; 0x34
 801426e:	f280 80c1 	bge.w	80143f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014272:	428b      	cmp	r3, r1
 8014274:	da08      	bge.n	8014288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014276:	2a00      	cmp	r2, #0
 8014278:	dd06      	ble.n	8014288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801427a:	1acb      	subs	r3, r1, r3
 801427c:	429a      	cmp	r2, r3
 801427e:	f2c0 80bb 	blt.w	80143f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014282:	2b00      	cmp	r3, #0
 8014284:	f300 80b9 	bgt.w	80143fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014288:	6967      	ldr	r7, [r4, #20]
 801428a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801428c:	443b      	add	r3, r7
 801428e:	461f      	mov	r7, r3
 8014290:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014292:	1bdf      	subs	r7, r3, r7
 8014294:	4297      	cmp	r7, r2
 8014296:	bfa8      	it	ge
 8014298:	4617      	movge	r7, r2
 801429a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801429e:	2f00      	cmp	r7, #0
 80142a0:	f340 813c 	ble.w	801451c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80142a4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80142a6:	6829      	ldr	r1, [r5, #0]
 80142a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80142ac:	f9bb 3000 	ldrsh.w	r3, [fp]
 80142b0:	6820      	ldr	r0, [r4, #0]
 80142b2:	4411      	add	r1, r2
 80142b4:	4299      	cmp	r1, r3
 80142b6:	dd1a      	ble.n	80142ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80142b8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80142bc:	440b      	add	r3, r1
 80142be:	4402      	add	r2, r0
 80142c0:	b21b      	sxth	r3, r3
 80142c2:	429a      	cmp	r2, r3
 80142c4:	dc13      	bgt.n	80142ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80142c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80142ca:	681b      	ldr	r3, [r3, #0]
 80142cc:	9206      	str	r2, [sp, #24]
 80142ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80142d0:	9205      	str	r2, [sp, #20]
 80142d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80142d4:	9500      	str	r5, [sp, #0]
 80142d6:	e9cd b203 	strd	fp, r2, [sp, #12]
 80142da:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80142dc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80142de:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80142e2:	a912      	add	r1, sp, #72	; 0x48
 80142e4:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 80142e8:	aa49      	add	r2, sp, #292	; 0x124
 80142ea:	4623      	mov	r3, r4
 80142ec:	47c8      	blx	r9
 80142ee:	e9d4 2300 	ldrd	r2, r3, [r4]
 80142f2:	441a      	add	r2, r3
 80142f4:	6963      	ldr	r3, [r4, #20]
 80142f6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80142fa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80142fe:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014302:	68a1      	ldr	r1, [r4, #8]
 8014304:	ed94 6a08 	vldr	s12, [r4, #32]
 8014308:	6022      	str	r2, [r4, #0]
 801430a:	3301      	adds	r3, #1
 801430c:	6163      	str	r3, [r4, #20]
 801430e:	69a3      	ldr	r3, [r4, #24]
 8014310:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014314:	3b01      	subs	r3, #1
 8014316:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801431a:	61a3      	str	r3, [r4, #24]
 801431c:	6923      	ldr	r3, [r4, #16]
 801431e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014322:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014326:	edd4 6a07 	vldr	s13, [r4, #28]
 801432a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801432e:	440b      	add	r3, r1
 8014330:	68e1      	ldr	r1, [r4, #12]
 8014332:	6123      	str	r3, [r4, #16]
 8014334:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014338:	428b      	cmp	r3, r1
 801433a:	edc4 6a07 	vstr	s13, [r4, #28]
 801433e:	db15      	blt.n	801436c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014340:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014344:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014348:	3201      	adds	r2, #1
 801434a:	edc4 6a07 	vstr	s13, [r4, #28]
 801434e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014352:	6022      	str	r2, [r4, #0]
 8014354:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014358:	1a5b      	subs	r3, r3, r1
 801435a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801435e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014362:	6123      	str	r3, [r4, #16]
 8014364:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014368:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801436c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014370:	441a      	add	r2, r3
 8014372:	696b      	ldr	r3, [r5, #20]
 8014374:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014378:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801437c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014380:	68a9      	ldr	r1, [r5, #8]
 8014382:	ed95 6a08 	vldr	s12, [r5, #32]
 8014386:	602a      	str	r2, [r5, #0]
 8014388:	3301      	adds	r3, #1
 801438a:	616b      	str	r3, [r5, #20]
 801438c:	69ab      	ldr	r3, [r5, #24]
 801438e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014392:	3b01      	subs	r3, #1
 8014394:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014398:	61ab      	str	r3, [r5, #24]
 801439a:	692b      	ldr	r3, [r5, #16]
 801439c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80143a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80143a4:	edd5 6a07 	vldr	s13, [r5, #28]
 80143a8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80143ac:	440b      	add	r3, r1
 80143ae:	68e9      	ldr	r1, [r5, #12]
 80143b0:	612b      	str	r3, [r5, #16]
 80143b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80143b6:	428b      	cmp	r3, r1
 80143b8:	edc5 6a07 	vstr	s13, [r5, #28]
 80143bc:	db15      	blt.n	80143ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80143be:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80143c2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80143c6:	3201      	adds	r2, #1
 80143c8:	edc5 6a07 	vstr	s13, [r5, #28]
 80143cc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80143d0:	602a      	str	r2, [r5, #0]
 80143d2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80143d6:	1a5b      	subs	r3, r3, r1
 80143d8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80143dc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80143e0:	612b      	str	r3, [r5, #16]
 80143e2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80143e6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80143ea:	3f01      	subs	r7, #1
 80143ec:	e757      	b.n	801429e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80143ee:	ad39      	add	r5, sp, #228	; 0xe4
 80143f0:	ac19      	add	r4, sp, #100	; 0x64
 80143f2:	e72d      	b.n	8014250 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80143f4:	4613      	mov	r3, r2
 80143f6:	e744      	b.n	8014282 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80143f8:	4613      	mov	r3, r2
 80143fa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80143fe:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014400:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014404:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014408:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801440c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014410:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014414:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014418:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801441c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801441e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014422:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014426:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801442a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801442e:	960e      	str	r6, [sp, #56]	; 0x38
 8014430:	469e      	mov	lr, r3
 8014432:	461f      	mov	r7, r3
 8014434:	f04f 0900 	mov.w	r9, #0
 8014438:	2f00      	cmp	r7, #0
 801443a:	d146      	bne.n	80144ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801443c:	449c      	add	ip, r3
 801443e:	1ad7      	subs	r7, r2, r3
 8014440:	f1b9 0f00 	cmp.w	r9, #0
 8014444:	d009      	beq.n	801445a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014446:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801444a:	9039      	str	r0, [sp, #228]	; 0xe4
 801444c:	913d      	str	r1, [sp, #244]	; 0xf4
 801444e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014452:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014456:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801445a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801445c:	910e      	str	r1, [sp, #56]	; 0x38
 801445e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014462:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014466:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801446a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801446e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014472:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014476:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801447a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801447e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014482:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014486:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801448a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801448e:	f04f 0800 	mov.w	r8, #0
 8014492:	f1be 0f00 	cmp.w	lr, #0
 8014496:	d030      	beq.n	80144fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014498:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801449a:	4431      	add	r1, r6
 801449c:	4549      	cmp	r1, r9
 801449e:	4450      	add	r0, sl
 80144a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80144a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80144a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80144ac:	db08      	blt.n	80144c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80144ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80144b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80144b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80144ba:	3001      	adds	r0, #1
 80144bc:	eba1 0109 	sub.w	r1, r1, r9
 80144c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80144c4:	f04f 0801 	mov.w	r8, #1
 80144c8:	e7e3      	b.n	8014492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80144ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80144cc:	4431      	add	r1, r6
 80144ce:	4541      	cmp	r1, r8
 80144d0:	4450      	add	r0, sl
 80144d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80144d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80144da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80144de:	db08      	blt.n	80144f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80144e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80144e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80144e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80144ec:	3001      	adds	r0, #1
 80144ee:	eba1 0108 	sub.w	r1, r1, r8
 80144f2:	3f01      	subs	r7, #1
 80144f4:	f04f 0901 	mov.w	r9, #1
 80144f8:	e79e      	b.n	8014438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80144fa:	449c      	add	ip, r3
 80144fc:	1aff      	subs	r7, r7, r3
 80144fe:	f1b8 0f00 	cmp.w	r8, #0
 8014502:	d009      	beq.n	8014518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014504:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014508:	9019      	str	r0, [sp, #100]	; 0x64
 801450a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801450e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014512:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014516:	911d      	str	r1, [sp, #116]	; 0x74
 8014518:	1ad2      	subs	r2, r2, r3
 801451a:	e6b5      	b.n	8014288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801451c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801451e:	681b      	ldr	r3, [r3, #0]
 8014520:	b923      	cbnz	r3, 801452c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014522:	4b04      	ldr	r3, [pc, #16]	; (8014534 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014524:	6818      	ldr	r0, [r3, #0]
 8014526:	6803      	ldr	r3, [r0, #0]
 8014528:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801452a:	4798      	blx	r3
 801452c:	b05b      	add	sp, #364	; 0x16c
 801452e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014532:	bf00      	nop
 8014534:	200279b0 	.word	0x200279b0

08014538 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8014538:	b570      	push	{r4, r5, r6, lr}
 801453a:	4604      	mov	r4, r0
 801453c:	2500      	movs	r5, #0
 801453e:	7223      	strb	r3, [r4, #8]
 8014540:	9804      	ldr	r0, [sp, #16]
 8014542:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014546:	8025      	strh	r5, [r4, #0]
 8014548:	6061      	str	r1, [r4, #4]
 801454a:	7263      	strb	r3, [r4, #9]
 801454c:	60e0      	str	r0, [r4, #12]
 801454e:	8222      	strh	r2, [r4, #16]
 8014550:	8265      	strh	r5, [r4, #18]
 8014552:	82a5      	strh	r5, [r4, #20]
 8014554:	82e5      	strh	r5, [r4, #22]
 8014556:	8325      	strh	r5, [r4, #24]
 8014558:	8365      	strh	r5, [r4, #26]
 801455a:	83a5      	strh	r5, [r4, #28]
 801455c:	77a5      	strb	r5, [r4, #30]
 801455e:	6803      	ldr	r3, [r0, #0]
 8014560:	695b      	ldr	r3, [r3, #20]
 8014562:	4798      	blx	r3
 8014564:	4606      	mov	r6, r0
 8014566:	b1f8      	cbz	r0, 80145a8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 8014568:	68e0      	ldr	r0, [r4, #12]
 801456a:	6803      	ldr	r3, [r0, #0]
 801456c:	4631      	mov	r1, r6
 801456e:	68db      	ldr	r3, [r3, #12]
 8014570:	4798      	blx	r3
 8014572:	7b43      	ldrb	r3, [r0, #13]
 8014574:	7a82      	ldrb	r2, [r0, #10]
 8014576:	005b      	lsls	r3, r3, #1
 8014578:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801457c:	4313      	orrs	r3, r2
 801457e:	83a3      	strh	r3, [r4, #28]
 8014580:	7a63      	ldrb	r3, [r4, #9]
 8014582:	2b04      	cmp	r3, #4
 8014584:	4605      	mov	r5, r0
 8014586:	d10f      	bne.n	80145a8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 8014588:	68e0      	ldr	r0, [r4, #12]
 801458a:	6803      	ldr	r3, [r0, #0]
 801458c:	462a      	mov	r2, r5
 801458e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014590:	4631      	mov	r1, r6
 8014592:	4798      	blx	r3
 8014594:	7b6b      	ldrb	r3, [r5, #13]
 8014596:	005b      	lsls	r3, r3, #1
 8014598:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801459c:	7aab      	ldrb	r3, [r5, #10]
 801459e:	4313      	orrs	r3, r2
 80145a0:	4418      	add	r0, r3
 80145a2:	8ba3      	ldrh	r3, [r4, #28]
 80145a4:	4418      	add	r0, r3
 80145a6:	83a0      	strh	r0, [r4, #28]
 80145a8:	4620      	mov	r0, r4
 80145aa:	bd70      	pop	{r4, r5, r6, pc}

080145ac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80145ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145b0:	2400      	movs	r4, #0
 80145b2:	b085      	sub	sp, #20
 80145b4:	4681      	mov	r9, r0
 80145b6:	4688      	mov	r8, r1
 80145b8:	4692      	mov	sl, r2
 80145ba:	469b      	mov	fp, r3
 80145bc:	4627      	mov	r7, r4
 80145be:	4625      	mov	r5, r4
 80145c0:	4626      	mov	r6, r4
 80145c2:	4554      	cmp	r4, sl
 80145c4:	da2a      	bge.n	801461c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80145c6:	2300      	movs	r3, #0
 80145c8:	9303      	str	r3, [sp, #12]
 80145ca:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80145ce:	429d      	cmp	r5, r3
 80145d0:	d004      	beq.n	80145dc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80145d2:	f242 030b 	movw	r3, #8203	; 0x200b
 80145d6:	429d      	cmp	r5, r3
 80145d8:	bf18      	it	ne
 80145da:	462f      	movne	r7, r5
 80145dc:	ab03      	add	r3, sp, #12
 80145de:	4642      	mov	r2, r8
 80145e0:	4659      	mov	r1, fp
 80145e2:	4648      	mov	r0, r9
 80145e4:	f003 ff8e 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80145e8:	4605      	mov	r5, r0
 80145ea:	b1b8      	cbz	r0, 801461c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80145ec:	280a      	cmp	r0, #10
 80145ee:	d015      	beq.n	801461c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80145f0:	9a03      	ldr	r2, [sp, #12]
 80145f2:	b18a      	cbz	r2, 8014618 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80145f4:	7b50      	ldrb	r0, [r2, #13]
 80145f6:	7a93      	ldrb	r3, [r2, #10]
 80145f8:	8895      	ldrh	r5, [r2, #4]
 80145fa:	0040      	lsls	r0, r0, #1
 80145fc:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014600:	4303      	orrs	r3, r0
 8014602:	9301      	str	r3, [sp, #4]
 8014604:	f8d8 3000 	ldr.w	r3, [r8]
 8014608:	4639      	mov	r1, r7
 801460a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801460c:	4640      	mov	r0, r8
 801460e:	4798      	blx	r3
 8014610:	9b01      	ldr	r3, [sp, #4]
 8014612:	4418      	add	r0, r3
 8014614:	4406      	add	r6, r0
 8014616:	b2b6      	uxth	r6, r6
 8014618:	3401      	adds	r4, #1
 801461a:	e7d2      	b.n	80145c2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801461c:	4630      	mov	r0, r6
 801461e:	b005      	add	sp, #20
 8014620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014624 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014624:	2a02      	cmp	r2, #2
 8014626:	b530      	push	{r4, r5, lr}
 8014628:	d011      	beq.n	801464e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801462a:	2a03      	cmp	r2, #3
 801462c:	d01c      	beq.n	8014668 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801462e:	2a01      	cmp	r2, #1
 8014630:	d10c      	bne.n	801464c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014632:	888b      	ldrh	r3, [r1, #4]
 8014634:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014638:	8801      	ldrh	r1, [r0, #0]
 801463a:	8844      	ldrh	r4, [r0, #2]
 801463c:	8004      	strh	r4, [r0, #0]
 801463e:	1a9b      	subs	r3, r3, r2
 8014640:	1a5b      	subs	r3, r3, r1
 8014642:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014646:	8043      	strh	r3, [r0, #2]
 8014648:	8081      	strh	r1, [r0, #4]
 801464a:	80c2      	strh	r2, [r0, #6]
 801464c:	bd30      	pop	{r4, r5, pc}
 801464e:	88cb      	ldrh	r3, [r1, #6]
 8014650:	88c2      	ldrh	r2, [r0, #6]
 8014652:	1a9b      	subs	r3, r3, r2
 8014654:	8842      	ldrh	r2, [r0, #2]
 8014656:	1a9b      	subs	r3, r3, r2
 8014658:	888a      	ldrh	r2, [r1, #4]
 801465a:	8881      	ldrh	r1, [r0, #4]
 801465c:	8043      	strh	r3, [r0, #2]
 801465e:	1a52      	subs	r2, r2, r1
 8014660:	8801      	ldrh	r1, [r0, #0]
 8014662:	1a52      	subs	r2, r2, r1
 8014664:	8002      	strh	r2, [r0, #0]
 8014666:	e7f1      	b.n	801464c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014668:	88cb      	ldrh	r3, [r1, #6]
 801466a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801466e:	8841      	ldrh	r1, [r0, #2]
 8014670:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014674:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014678:	8045      	strh	r5, [r0, #2]
 801467a:	1a9b      	subs	r3, r3, r2
 801467c:	1a5b      	subs	r3, r3, r1
 801467e:	8003      	strh	r3, [r0, #0]
 8014680:	8082      	strh	r2, [r0, #4]
 8014682:	80c4      	strh	r4, [r0, #6]
 8014684:	e7e2      	b.n	801464c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014686 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014686:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801468a:	b09f      	sub	sp, #124	; 0x7c
 801468c:	9116      	str	r1, [sp, #88]	; 0x58
 801468e:	9317      	str	r3, [sp, #92]	; 0x5c
 8014690:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014692:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014694:	8809      	ldrh	r1, [r1, #0]
 8014696:	889b      	ldrh	r3, [r3, #4]
 8014698:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801469c:	9212      	str	r2, [sp, #72]	; 0x48
 801469e:	440b      	add	r3, r1
 80146a0:	b21b      	sxth	r3, r3
 80146a2:	9310      	str	r3, [sp, #64]	; 0x40
 80146a4:	f8d8 3000 	ldr.w	r3, [r8]
 80146a8:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80146ac:	7a59      	ldrb	r1, [r3, #9]
 80146ae:	7a1b      	ldrb	r3, [r3, #8]
 80146b0:	9315      	str	r3, [sp, #84]	; 0x54
 80146b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80146b4:	9011      	str	r0, [sp, #68]	; 0x44
 80146b6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80146ba:	9114      	str	r1, [sp, #80]	; 0x50
 80146bc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80146c0:	2a00      	cmp	r2, #0
 80146c2:	d067      	beq.n	8014794 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 80146c4:	f898 3010 	ldrb.w	r3, [r8, #16]
 80146c8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80146ca:	2b04      	cmp	r3, #4
 80146cc:	bf14      	ite	ne
 80146ce:	2301      	movne	r3, #1
 80146d0:	2302      	moveq	r3, #2
 80146d2:	4413      	add	r3, r2
 80146d4:	f04f 0900 	mov.w	r9, #0
 80146d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80146da:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80146de:	464c      	mov	r4, r9
 80146e0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80146e4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80146e8:	4293      	cmp	r3, r2
 80146ea:	f280 808c 	bge.w	8014806 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80146ee:	2300      	movs	r3, #0
 80146f0:	931c      	str	r3, [sp, #112]	; 0x70
 80146f2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80146f6:	429c      	cmp	r4, r3
 80146f8:	d006      	beq.n	8014708 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 80146fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146fc:	f242 020b 	movw	r2, #8203	; 0x200b
 8014700:	4294      	cmp	r4, r2
 8014702:	bf18      	it	ne
 8014704:	4623      	movne	r3, r4
 8014706:	930d      	str	r3, [sp, #52]	; 0x34
 8014708:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801470a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801470c:	f8d8 2000 	ldr.w	r2, [r8]
 8014710:	428b      	cmp	r3, r1
 8014712:	db41      	blt.n	8014798 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014714:	6813      	ldr	r3, [r2, #0]
 8014716:	4610      	mov	r0, r2
 8014718:	695b      	ldr	r3, [r3, #20]
 801471a:	4798      	blx	r3
 801471c:	4604      	mov	r4, r0
 801471e:	f8d8 0000 	ldr.w	r0, [r8]
 8014722:	6803      	ldr	r3, [r0, #0]
 8014724:	aa1d      	add	r2, sp, #116	; 0x74
 8014726:	689e      	ldr	r6, [r3, #8]
 8014728:	4621      	mov	r1, r4
 801472a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801472e:	47b0      	blx	r6
 8014730:	901c      	str	r0, [sp, #112]	; 0x70
 8014732:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014736:	429c      	cmp	r4, r3
 8014738:	f000 80e9 	beq.w	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801473c:	f242 030b 	movw	r3, #8203	; 0x200b
 8014740:	429c      	cmp	r4, r3
 8014742:	f000 80e4 	beq.w	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8014746:	2c00      	cmp	r4, #0
 8014748:	f000 80f6 	beq.w	8014938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 801474c:	2c0a      	cmp	r4, #10
 801474e:	d060      	beq.n	8014812 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8014750:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014752:	b36a      	cbz	r2, 80147b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 8014754:	8894      	ldrh	r4, [r2, #4]
 8014756:	f1bb 0f00 	cmp.w	fp, #0
 801475a:	d03b      	beq.n	80147d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 801475c:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014760:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014764:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014768:	f892 900a 	ldrb.w	r9, [r2, #10]
 801476c:	f1bb 0f01 	cmp.w	fp, #1
 8014770:	ea49 0903 	orr.w	r9, r9, r3
 8014774:	d134      	bne.n	80147e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 8014776:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014778:	eba5 0509 	sub.w	r5, r5, r9
 801477c:	2b00      	cmp	r3, #0
 801477e:	d14f      	bne.n	8014820 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8014780:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014782:	eb09 0305 	add.w	r3, r9, r5
 8014786:	4413      	add	r3, r2
 8014788:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801478a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801478e:	4293      	cmp	r3, r2
 8014790:	da51      	bge.n	8014836 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8014792:	e038      	b.n	8014806 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8014794:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014796:	e79d      	b.n	80146d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 8014798:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801479c:	9301      	str	r3, [sp, #4]
 801479e:	ab1d      	add	r3, sp, #116	; 0x74
 80147a0:	9300      	str	r3, [sp, #0]
 80147a2:	4659      	mov	r1, fp
 80147a4:	ab1c      	add	r3, sp, #112	; 0x70
 80147a6:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80147a8:	f003 ff04 	bl	80185b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80147ac:	4604      	mov	r4, r0
 80147ae:	e7c0      	b.n	8014732 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 80147b0:	f8d8 0000 	ldr.w	r0, [r8]
 80147b4:	6803      	ldr	r3, [r0, #0]
 80147b6:	691b      	ldr	r3, [r3, #16]
 80147b8:	4798      	blx	r3
 80147ba:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80147be:	4298      	cmp	r0, r3
 80147c0:	f000 80a5 	beq.w	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80147c4:	f242 030b 	movw	r3, #8203	; 0x200b
 80147c8:	4298      	cmp	r0, r3
 80147ca:	f000 80a0 	beq.w	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80147ce:	f1bb 0f00 	cmp.w	fp, #0
 80147d2:	d100      	bne.n	80147d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 80147d4:	444d      	add	r5, r9
 80147d6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80147d8:	2a00      	cmp	r2, #0
 80147da:	d1bf      	bne.n	801475c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 80147dc:	4691      	mov	r9, r2
 80147de:	e096      	b.n	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80147e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147e2:	2b00      	cmp	r3, #0
 80147e4:	f000 80aa 	beq.w	801493c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80147e8:	f1bb 0f00 	cmp.w	fp, #0
 80147ec:	d118      	bne.n	8014820 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80147ee:	f8d8 0000 	ldr.w	r0, [r8]
 80147f2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80147f4:	6803      	ldr	r3, [r0, #0]
 80147f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80147f8:	4798      	blx	r3
 80147fa:	4405      	add	r5, r0
 80147fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80147fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014800:	1aeb      	subs	r3, r5, r3
 8014802:	4293      	cmp	r3, r2
 8014804:	dd17      	ble.n	8014836 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8014806:	2c00      	cmp	r4, #0
 8014808:	f000 8096 	beq.w	8014938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 801480c:	2c0a      	cmp	r4, #10
 801480e:	f040 8084 	bne.w	801491a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8014812:	240a      	movs	r4, #10
 8014814:	fab4 f084 	clz	r0, r4
 8014818:	0940      	lsrs	r0, r0, #5
 801481a:	b01f      	add	sp, #124	; 0x7c
 801481c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014820:	f8d8 0000 	ldr.w	r0, [r8]
 8014824:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014826:	6803      	ldr	r3, [r0, #0]
 8014828:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801482a:	4798      	blx	r3
 801482c:	f1bb 0f01 	cmp.w	fp, #1
 8014830:	eba5 0500 	sub.w	r5, r5, r0
 8014834:	d0a4      	beq.n	8014780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 8014836:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014838:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801483a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801483e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014842:	7b43      	ldrb	r3, [r0, #13]
 8014844:	015b      	lsls	r3, r3, #5
 8014846:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801484a:	7983      	ldrb	r3, [r0, #6]
 801484c:	4429      	add	r1, r5
 801484e:	4313      	orrs	r3, r2
 8014850:	440b      	add	r3, r1
 8014852:	42b3      	cmp	r3, r6
 8014854:	db5b      	blt.n	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8014856:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014858:	4299      	cmp	r1, r3
 801485a:	da58      	bge.n	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801485c:	f8d8 0000 	ldr.w	r0, [r8]
 8014860:	6803      	ldr	r3, [r0, #0]
 8014862:	42ae      	cmp	r6, r5
 8014864:	bfc8      	it	gt
 8014866:	1b76      	subgt	r6, r6, r5
 8014868:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801486a:	bfcc      	ite	gt
 801486c:	b2b6      	uxthgt	r6, r6
 801486e:	2600      	movle	r6, #0
 8014870:	4798      	blx	r3
 8014872:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014874:	7b5a      	ldrb	r2, [r3, #13]
 8014876:	00d1      	lsls	r1, r2, #3
 8014878:	f401 7780 	and.w	r7, r1, #256	; 0x100
 801487c:	7a19      	ldrb	r1, [r3, #8]
 801487e:	4339      	orrs	r1, r7
 8014880:	0657      	lsls	r7, r2, #25
 8014882:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8014884:	bf44      	itt	mi
 8014886:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801488a:	b209      	sxthmi	r1, r1
 801488c:	19c7      	adds	r7, r0, r7
 801488e:	1a7f      	subs	r7, r7, r1
 8014890:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014892:	b2bf      	uxth	r7, r7
 8014894:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014898:	fa0f fa87 	sxth.w	sl, r7
 801489c:	4551      	cmp	r1, sl
 801489e:	dd3a      	ble.n	8014916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80148a0:	0112      	lsls	r2, r2, #4
 80148a2:	79d8      	ldrb	r0, [r3, #7]
 80148a4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80148a8:	4302      	orrs	r2, r0
 80148aa:	4492      	add	sl, r2
 80148ac:	4551      	cmp	r1, sl
 80148ae:	dc2e      	bgt.n	801490e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80148b0:	1bcf      	subs	r7, r1, r7
 80148b2:	b2bf      	uxth	r7, r7
 80148b4:	468a      	mov	sl, r1
 80148b6:	9319      	str	r3, [sp, #100]	; 0x64
 80148b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80148ba:	f8d8 0000 	ldr.w	r0, [r8]
 80148be:	681a      	ldr	r2, [r3, #0]
 80148c0:	6801      	ldr	r1, [r0, #0]
 80148c2:	6c53      	ldr	r3, [r2, #68]	; 0x44
 80148c4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80148c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80148c8:	9218      	str	r2, [sp, #96]	; 0x60
 80148ca:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80148cc:	4788      	blx	r1
 80148ce:	f898 1006 	ldrb.w	r1, [r8, #6]
 80148d2:	910b      	str	r1, [sp, #44]	; 0x2c
 80148d4:	f898 100e 	ldrb.w	r1, [r8, #14]
 80148d8:	910a      	str	r1, [sp, #40]	; 0x28
 80148da:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80148de:	9109      	str	r1, [sp, #36]	; 0x24
 80148e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80148e2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80148e6:	9305      	str	r3, [sp, #20]
 80148e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80148ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80148ec:	9206      	str	r2, [sp, #24]
 80148ee:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80148f2:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80148f6:	e9cd a601 	strd	sl, r6, [sp, #4]
 80148fa:	442e      	add	r6, r5
 80148fc:	b236      	sxth	r6, r6
 80148fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014900:	9600      	str	r6, [sp, #0]
 8014902:	681a      	ldr	r2, [r3, #0]
 8014904:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014906:	685b      	ldr	r3, [r3, #4]
 8014908:	9811      	ldr	r0, [sp, #68]	; 0x44
 801490a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801490c:	47b0      	blx	r6
 801490e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014910:	3301      	adds	r3, #1
 8014912:	930e      	str	r3, [sp, #56]	; 0x38
 8014914:	e6e6      	b.n	80146e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 8014916:	2700      	movs	r7, #0
 8014918:	e7cd      	b.n	80148b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 801491a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801491c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801491e:	3501      	adds	r5, #1
 8014920:	429d      	cmp	r5, r3
 8014922:	f6bf af77 	bge.w	8014814 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8014926:	4659      	mov	r1, fp
 8014928:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801492a:	f7f2 ff45 	bl	80077b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801492e:	4604      	mov	r4, r0
 8014930:	b110      	cbz	r0, 8014938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8014932:	280a      	cmp	r0, #10
 8014934:	d1f2      	bne.n	801491c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8014936:	e76c      	b.n	8014812 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8014938:	2400      	movs	r4, #0
 801493a:	e76b      	b.n	8014814 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801493c:	f1bb 0f00 	cmp.w	fp, #0
 8014940:	f43f af5c 	beq.w	80147fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8014944:	e777      	b.n	8014836 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

08014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>:
 8014946:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801494a:	b089      	sub	sp, #36	; 0x24
 801494c:	4699      	mov	r9, r3
 801494e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014950:	f8bd 4050 	ldrh.w	r4, [sp, #80]	; 0x50
 8014954:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8014956:	4683      	mov	fp, r0
 8014958:	460d      	mov	r5, r1
 801495a:	4690      	mov	r8, r2
 801495c:	bb0b      	cbnz	r3, 80149a2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 801495e:	6813      	ldr	r3, [r2, #0]
 8014960:	4610      	mov	r0, r2
 8014962:	695b      	ldr	r3, [r3, #20]
 8014964:	4798      	blx	r3
 8014966:	4682      	mov	sl, r0
 8014968:	b1d8      	cbz	r0, 80149a2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 801496a:	f8d8 3000 	ldr.w	r3, [r8]
 801496e:	4601      	mov	r1, r0
 8014970:	68db      	ldr	r3, [r3, #12]
 8014972:	4640      	mov	r0, r8
 8014974:	4798      	blx	r3
 8014976:	7b47      	ldrb	r7, [r0, #13]
 8014978:	007f      	lsls	r7, r7, #1
 801497a:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801497e:	7a87      	ldrb	r7, [r0, #10]
 8014980:	431f      	orrs	r7, r3
 8014982:	6933      	ldr	r3, [r6, #16]
 8014984:	7c1b      	ldrb	r3, [r3, #16]
 8014986:	443c      	add	r4, r7
 8014988:	2b04      	cmp	r3, #4
 801498a:	4602      	mov	r2, r0
 801498c:	b2a4      	uxth	r4, r4
 801498e:	d108      	bne.n	80149a2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 8014990:	f8d8 3000 	ldr.w	r3, [r8]
 8014994:	4651      	mov	r1, sl
 8014996:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014998:	4640      	mov	r0, r8
 801499a:	4798      	blx	r3
 801499c:	4438      	add	r0, r7
 801499e:	4404      	add	r4, r0
 80149a0:	b2a4      	uxth	r4, r4
 80149a2:	6933      	ldr	r3, [r6, #16]
 80149a4:	795b      	ldrb	r3, [r3, #5]
 80149a6:	bb3b      	cbnz	r3, 80149f8 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb2>
 80149a8:	f1b9 0f01 	cmp.w	r9, #1
 80149ac:	d102      	bne.n	80149b4 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80149ae:	882b      	ldrh	r3, [r5, #0]
 80149b0:	4423      	add	r3, r4
 80149b2:	802b      	strh	r3, [r5, #0]
 80149b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80149b6:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
 80149ba:	fab2 f282 	clz	r2, r2
 80149be:	0952      	lsrs	r2, r2, #5
 80149c0:	9206      	str	r2, [sp, #24]
 80149c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80149c4:	9205      	str	r2, [sp, #20]
 80149c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80149c8:	e9cd 9203 	strd	r9, r2, [sp, #12]
 80149cc:	6932      	ldr	r2, [r6, #16]
 80149ce:	9202      	str	r2, [sp, #8]
 80149d0:	68f2      	ldr	r2, [r6, #12]
 80149d2:	e9cd 5200 	strd	r5, r2, [sp]
 80149d6:	4658      	mov	r0, fp
 80149d8:	e9d6 1200 	ldrd	r1, r2, [r6]
 80149dc:	f7ff fe53 	bl	8014686 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80149e0:	6933      	ldr	r3, [r6, #16]
 80149e2:	795b      	ldrb	r3, [r3, #5]
 80149e4:	b983      	cbnz	r3, 8014a08 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xc2>
 80149e6:	f1b9 0f00 	cmp.w	r9, #0
 80149ea:	d102      	bne.n	80149f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80149ec:	8828      	ldrh	r0, [r5, #0]
 80149ee:	4404      	add	r4, r0
 80149f0:	802c      	strh	r4, [r5, #0]
 80149f2:	b009      	add	sp, #36	; 0x24
 80149f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149f8:	2b01      	cmp	r3, #1
 80149fa:	d1db      	bne.n	80149b4 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80149fc:	f1b9 0f00 	cmp.w	r9, #0
 8014a00:	d1d8      	bne.n	80149b4 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 8014a02:	882b      	ldrh	r3, [r5, #0]
 8014a04:	1b1b      	subs	r3, r3, r4
 8014a06:	e7d4      	b.n	80149b2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6c>
 8014a08:	2b01      	cmp	r3, #1
 8014a0a:	d1f2      	bne.n	80149f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 8014a0c:	f1b9 0f01 	cmp.w	r9, #1
 8014a10:	d1ef      	bne.n	80149f2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 8014a12:	8828      	ldrh	r0, [r5, #0]
 8014a14:	1b04      	subs	r4, r0, r4
 8014a16:	e7eb      	b.n	80149f0 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xaa>

08014a18 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>:
 8014a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a1c:	b0a7      	sub	sp, #156	; 0x9c
 8014a1e:	4689      	mov	r9, r1
 8014a20:	9004      	str	r0, [sp, #16]
 8014a22:	9309      	str	r3, [sp, #36]	; 0x24
 8014a24:	4690      	mov	r8, r2
 8014a26:	f89d 30c8 	ldrb.w	r3, [sp, #200]	; 0xc8
 8014a2a:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8014a2c:	930b      	str	r3, [sp, #44]	; 0x2c
 8014a2e:	2264      	movs	r2, #100	; 0x64
 8014a30:	a80d      	add	r0, sp, #52	; 0x34
 8014a32:	f011 f865 	bl	8025b00 <memcpy>
 8014a36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014a38:	2300      	movs	r3, #0
 8014a3a:	930c      	str	r3, [sp, #48]	; 0x30
 8014a3c:	2a00      	cmp	r2, #0
 8014a3e:	f040 8149 	bne.w	8014cd4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2bc>
 8014a42:	4693      	mov	fp, r2
 8014a44:	9208      	str	r2, [sp, #32]
 8014a46:	9206      	str	r2, [sp, #24]
 8014a48:	4616      	mov	r6, r2
 8014a4a:	4617      	mov	r7, r2
 8014a4c:	9205      	str	r2, [sp, #20]
 8014a4e:	4614      	mov	r4, r2
 8014a50:	9207      	str	r2, [sp, #28]
 8014a52:	4692      	mov	sl, r2
 8014a54:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014a56:	459b      	cmp	fp, r3
 8014a58:	f280 80f0 	bge.w	8014c3c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 8014a5c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014a60:	459a      	cmp	sl, r3
 8014a62:	d006      	beq.n	8014a72 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5a>
 8014a64:	9b07      	ldr	r3, [sp, #28]
 8014a66:	f242 020b 	movw	r2, #8203	; 0x200b
 8014a6a:	4592      	cmp	sl, r2
 8014a6c:	bf18      	it	ne
 8014a6e:	4653      	movne	r3, sl
 8014a70:	9307      	str	r3, [sp, #28]
 8014a72:	4642      	mov	r2, r8
 8014a74:	ab0c      	add	r3, sp, #48	; 0x30
 8014a76:	2100      	movs	r1, #0
 8014a78:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8014a7a:	f003 fd43 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014a7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014a80:	4682      	mov	sl, r0
 8014a82:	2a00      	cmp	r2, #0
 8014a84:	d064      	beq.n	8014b50 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x138>
 8014a86:	7b55      	ldrb	r5, [r2, #13]
 8014a88:	f8d8 3000 	ldr.w	r3, [r8]
 8014a8c:	9907      	ldr	r1, [sp, #28]
 8014a8e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014a90:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 8014a94:	006d      	lsls	r5, r5, #1
 8014a96:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8014a9a:	7a95      	ldrb	r5, [r2, #10]
 8014a9c:	4305      	orrs	r5, r0
 8014a9e:	4640      	mov	r0, r8
 8014aa0:	4798      	blx	r3
 8014aa2:	4405      	add	r5, r0
 8014aa4:	b2ad      	uxth	r5, r5
 8014aa6:	f1ba 0f00 	cmp.w	sl, #0
 8014aaa:	f000 80c7 	beq.w	8014c3c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 8014aae:	f1ba 0f0a 	cmp.w	sl, #10
 8014ab2:	f000 80c3 	beq.w	8014c3c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 8014ab6:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 8014aba:	b29b      	uxth	r3, r3
 8014abc:	f02a 0120 	bic.w	r1, sl, #32
 8014ac0:	2b01      	cmp	r3, #1
 8014ac2:	b289      	uxth	r1, r1
 8014ac4:	d946      	bls.n	8014b54 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 8014ac6:	295b      	cmp	r1, #91	; 0x5b
 8014ac8:	d044      	beq.n	8014b54 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 8014aca:	295d      	cmp	r1, #93	; 0x5d
 8014acc:	d042      	beq.n	8014b54 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 8014ace:	f02a 0202 	bic.w	r2, sl, #2
 8014ad2:	b292      	uxth	r2, r2
 8014ad4:	f1a2 033c 	sub.w	r3, r2, #60	; 0x3c
 8014ad8:	425a      	negs	r2, r3
 8014ada:	415a      	adcs	r2, r3
 8014adc:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 8014ae0:	b29b      	uxth	r3, r3
 8014ae2:	2b09      	cmp	r3, #9
 8014ae4:	d938      	bls.n	8014b58 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x140>
 8014ae6:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 8014aea:	b29b      	uxth	r3, r3
 8014aec:	2b09      	cmp	r3, #9
 8014aee:	bf8c      	ite	hi
 8014af0:	2300      	movhi	r3, #0
 8014af2:	2301      	movls	r3, #1
 8014af4:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 8014af8:	b280      	uxth	r0, r0
 8014afa:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 8014afe:	d305      	bcc.n	8014b0c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf4>
 8014b00:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 8014b04:	b280      	uxth	r0, r0
 8014b06:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 8014b0a:	d227      	bcs.n	8014b5c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x144>
 8014b0c:	f083 0001 	eor.w	r0, r3, #1
 8014b10:	f64f 6cff 	movw	ip, #65279	; 0xfeff
 8014b14:	45e2      	cmp	sl, ip
 8014b16:	d023      	beq.n	8014b60 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x148>
 8014b18:	f242 0c0b 	movw	ip, #8203	; 0x200b
 8014b1c:	45e2      	cmp	sl, ip
 8014b1e:	bf14      	ite	ne
 8014b20:	f04f 0c00 	movne.w	ip, #0
 8014b24:	f04f 0c01 	moveq.w	ip, #1
 8014b28:	3941      	subs	r1, #65	; 0x41
 8014b2a:	2919      	cmp	r1, #25
 8014b2c:	d90a      	bls.n	8014b44 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 8014b2e:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 8014b32:	f240 8256 	bls.w	8014fe2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 8014b36:	2800      	cmp	r0, #0
 8014b38:	f040 8253 	bne.w	8014fe2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 8014b3c:	f1bc 0f00 	cmp.w	ip, #0
 8014b40:	f040 824f 	bne.w	8014fe2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 8014b44:	2f03      	cmp	r7, #3
 8014b46:	d844      	bhi.n	8014bd2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8014b48:	e8df f007 	tbb	[pc, r7]
 8014b4c:	4c2d1813 	.word	0x4c2d1813
 8014b50:	4615      	mov	r5, r2
 8014b52:	e7a8      	b.n	8014aa6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x8e>
 8014b54:	2201      	movs	r2, #1
 8014b56:	e7c1      	b.n	8014adc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xc4>
 8014b58:	2301      	movs	r3, #1
 8014b5a:	e7cb      	b.n	8014af4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xdc>
 8014b5c:	2000      	movs	r0, #0
 8014b5e:	e7d7      	b.n	8014b10 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf8>
 8014b60:	f04f 0c01 	mov.w	ip, #1
 8014b64:	e7e0      	b.n	8014b28 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x110>
 8014b66:	2f03      	cmp	r7, #3
 8014b68:	d833      	bhi.n	8014bd2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8014b6a:	e8df f007 	tbb	[pc, r7]
 8014b6e:	0702      	.short	0x0702
 8014b70:	3c1c      	.short	0x3c1c
 8014b72:	462c      	mov	r4, r5
 8014b74:	2601      	movs	r6, #1
 8014b76:	b1a0      	cbz	r0, 8014ba2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 8014b78:	2702      	movs	r7, #2
 8014b7a:	e02a      	b.n	8014bd2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8014b7c:	b170      	cbz	r0, 8014b9c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x184>
 8014b7e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014b80:	9601      	str	r6, [sp, #4]
 8014b82:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014b86:	ab0d      	add	r3, sp, #52	; 0x34
 8014b88:	9300      	str	r3, [sp, #0]
 8014b8a:	4642      	mov	r2, r8
 8014b8c:	2300      	movs	r3, #0
 8014b8e:	4649      	mov	r1, r9
 8014b90:	9804      	ldr	r0, [sp, #16]
 8014b92:	f7ff fed8 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014b96:	462c      	mov	r4, r5
 8014b98:	2601      	movs	r6, #1
 8014b9a:	e7ed      	b.n	8014b78 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 8014b9c:	442c      	add	r4, r5
 8014b9e:	3601      	adds	r6, #1
 8014ba0:	b2a4      	uxth	r4, r4
 8014ba2:	2701      	movs	r7, #1
 8014ba4:	e015      	b.n	8014bd2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8014ba6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014ba8:	9601      	str	r6, [sp, #4]
 8014baa:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014bae:	ab0d      	add	r3, sp, #52	; 0x34
 8014bb0:	9300      	str	r3, [sp, #0]
 8014bb2:	4642      	mov	r2, r8
 8014bb4:	2301      	movs	r3, #1
 8014bb6:	4649      	mov	r1, r9
 8014bb8:	9804      	ldr	r0, [sp, #16]
 8014bba:	f7ff fec4 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014bbe:	462c      	mov	r4, r5
 8014bc0:	2601      	movs	r6, #1
 8014bc2:	e7ee      	b.n	8014ba2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 8014bc4:	b910      	cbnz	r0, 8014bcc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1b4>
 8014bc6:	f1bc 0f00 	cmp.w	ip, #0
 8014bca:	d033      	beq.n	8014c34 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x21c>
 8014bcc:	442c      	add	r4, r5
 8014bce:	3601      	adds	r6, #1
 8014bd0:	b2a4      	uxth	r4, r4
 8014bd2:	9b08      	ldr	r3, [sp, #32]
 8014bd4:	2f01      	cmp	r7, #1
 8014bd6:	bf08      	it	eq
 8014bd8:	f043 0301 	orreq.w	r3, r3, #1
 8014bdc:	9308      	str	r3, [sp, #32]
 8014bde:	f10b 0b01 	add.w	fp, fp, #1
 8014be2:	e737      	b.n	8014a54 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c>
 8014be4:	2301      	movs	r3, #1
 8014be6:	9a06      	ldr	r2, [sp, #24]
 8014be8:	1c57      	adds	r7, r2, #1
 8014bea:	b140      	cbz	r0, 8014bfe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e6>
 8014bec:	9b05      	ldr	r3, [sp, #20]
 8014bee:	441c      	add	r4, r3
 8014bf0:	fa15 f484 	uxtah	r4, r5, r4
 8014bf4:	443e      	add	r6, r7
 8014bf6:	b2a4      	uxth	r4, r4
 8014bf8:	e7be      	b.n	8014b78 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 8014bfa:	2300      	movs	r3, #0
 8014bfc:	e7f3      	b.n	8014be6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ce>
 8014bfe:	b193      	cbz	r3, 8014c26 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x20e>
 8014c00:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014c02:	9601      	str	r6, [sp, #4]
 8014c04:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014c08:	ab0d      	add	r3, sp, #52	; 0x34
 8014c0a:	9300      	str	r3, [sp, #0]
 8014c0c:	4642      	mov	r2, r8
 8014c0e:	2301      	movs	r3, #1
 8014c10:	4649      	mov	r1, r9
 8014c12:	9804      	ldr	r0, [sp, #16]
 8014c14:	f7ff fe97 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014c18:	9b05      	ldr	r3, [sp, #20]
 8014c1a:	441c      	add	r4, r3
 8014c1c:	fa15 f484 	uxtah	r4, r5, r4
 8014c20:	b2a4      	uxth	r4, r4
 8014c22:	463e      	mov	r6, r7
 8014c24:	e7bd      	b.n	8014ba2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 8014c26:	9b05      	ldr	r3, [sp, #20]
 8014c28:	442b      	add	r3, r5
 8014c2a:	b29b      	uxth	r3, r3
 8014c2c:	e9cd 3705 	strd	r3, r7, [sp, #20]
 8014c30:	2703      	movs	r7, #3
 8014c32:	e7ce      	b.n	8014bd2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8014c34:	2301      	movs	r3, #1
 8014c36:	9505      	str	r5, [sp, #20]
 8014c38:	9306      	str	r3, [sp, #24]
 8014c3a:	e7f9      	b.n	8014c30 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x218>
 8014c3c:	2f01      	cmp	r7, #1
 8014c3e:	d106      	bne.n	8014c4e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x236>
 8014c40:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014c42:	9601      	str	r6, [sp, #4]
 8014c44:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014c48:	ab0d      	add	r3, sp, #52	; 0x34
 8014c4a:	9300      	str	r3, [sp, #0]
 8014c4c:	e01f      	b.n	8014c8e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x276>
 8014c4e:	2f02      	cmp	r7, #2
 8014c50:	d106      	bne.n	8014c60 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x248>
 8014c52:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014c54:	9601      	str	r6, [sp, #4]
 8014c56:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014c5a:	ab0d      	add	r3, sp, #52	; 0x34
 8014c5c:	9300      	str	r3, [sp, #0]
 8014c5e:	e037      	b.n	8014cd0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8014c60:	2f03      	cmp	r7, #3
 8014c62:	d11a      	bne.n	8014c9a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 8014c64:	9b08      	ldr	r3, [sp, #32]
 8014c66:	af0d      	add	r7, sp, #52	; 0x34
 8014c68:	b343      	cbz	r3, 8014cbc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2a4>
 8014c6a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014c6c:	9804      	ldr	r0, [sp, #16]
 8014c6e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014c72:	e9cd 7600 	strd	r7, r6, [sp]
 8014c76:	2301      	movs	r3, #1
 8014c78:	4642      	mov	r2, r8
 8014c7a:	4649      	mov	r1, r9
 8014c7c:	f7ff fe63 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014c80:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014c82:	9303      	str	r3, [sp, #12]
 8014c84:	9b05      	ldr	r3, [sp, #20]
 8014c86:	9302      	str	r3, [sp, #8]
 8014c88:	9b06      	ldr	r3, [sp, #24]
 8014c8a:	e9cd 7300 	strd	r7, r3, [sp]
 8014c8e:	2300      	movs	r3, #0
 8014c90:	4642      	mov	r2, r8
 8014c92:	4649      	mov	r1, r9
 8014c94:	9804      	ldr	r0, [sp, #16]
 8014c96:	f7ff fe56 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014c9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c9c:	b15b      	cbz	r3, 8014cb6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x29e>
 8014c9e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014ca0:	9303      	str	r3, [sp, #12]
 8014ca2:	aa0d      	add	r2, sp, #52	; 0x34
 8014ca4:	2300      	movs	r3, #0
 8014ca6:	9200      	str	r2, [sp, #0]
 8014ca8:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8014cac:	4642      	mov	r2, r8
 8014cae:	4649      	mov	r1, r9
 8014cb0:	9804      	ldr	r0, [sp, #16]
 8014cb2:	f7ff fe48 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014cb6:	b027      	add	sp, #156	; 0x9c
 8014cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cbc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014cbe:	9303      	str	r3, [sp, #12]
 8014cc0:	9b05      	ldr	r3, [sp, #20]
 8014cc2:	441c      	add	r4, r3
 8014cc4:	9b06      	ldr	r3, [sp, #24]
 8014cc6:	441e      	add	r6, r3
 8014cc8:	e9cd 7600 	strd	r7, r6, [sp]
 8014ccc:	b2a4      	uxth	r4, r4
 8014cce:	9402      	str	r4, [sp, #8]
 8014cd0:	2301      	movs	r3, #1
 8014cd2:	e7dd      	b.n	8014c90 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 8014cd4:	e9cd 3306 	strd	r3, r3, [sp, #24]
 8014cd8:	9305      	str	r3, [sp, #20]
 8014cda:	461e      	mov	r6, r3
 8014cdc:	461f      	mov	r7, r3
 8014cde:	469b      	mov	fp, r3
 8014ce0:	461c      	mov	r4, r3
 8014ce2:	9308      	str	r3, [sp, #32]
 8014ce4:	469a      	mov	sl, r3
 8014ce6:	9b06      	ldr	r3, [sp, #24]
 8014ce8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014cea:	4293      	cmp	r3, r2
 8014cec:	f280 814e 	bge.w	8014f8c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8014cf0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014cf4:	459a      	cmp	sl, r3
 8014cf6:	d006      	beq.n	8014d06 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ee>
 8014cf8:	9b08      	ldr	r3, [sp, #32]
 8014cfa:	f242 020b 	movw	r2, #8203	; 0x200b
 8014cfe:	4592      	cmp	sl, r2
 8014d00:	bf18      	it	ne
 8014d02:	4653      	movne	r3, sl
 8014d04:	9308      	str	r3, [sp, #32]
 8014d06:	4642      	mov	r2, r8
 8014d08:	ab0c      	add	r3, sp, #48	; 0x30
 8014d0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014d0c:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8014d0e:	f003 fbf9 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014d12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014d14:	4682      	mov	sl, r0
 8014d16:	2a00      	cmp	r2, #0
 8014d18:	d067      	beq.n	8014dea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d2>
 8014d1a:	7b53      	ldrb	r3, [r2, #13]
 8014d1c:	9908      	ldr	r1, [sp, #32]
 8014d1e:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 8014d22:	005b      	lsls	r3, r3, #1
 8014d24:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014d28:	7a93      	ldrb	r3, [r2, #10]
 8014d2a:	ea43 0500 	orr.w	r5, r3, r0
 8014d2e:	f8d8 3000 	ldr.w	r3, [r8]
 8014d32:	4640      	mov	r0, r8
 8014d34:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014d36:	4798      	blx	r3
 8014d38:	4428      	add	r0, r5
 8014d3a:	b285      	uxth	r5, r0
 8014d3c:	f1ba 0f00 	cmp.w	sl, #0
 8014d40:	f000 8124 	beq.w	8014f8c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8014d44:	f1ba 0f0a 	cmp.w	sl, #10
 8014d48:	f000 8120 	beq.w	8014f8c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8014d4c:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 8014d50:	b29b      	uxth	r3, r3
 8014d52:	f02a 0220 	bic.w	r2, sl, #32
 8014d56:	2b01      	cmp	r3, #1
 8014d58:	b292      	uxth	r2, r2
 8014d5a:	d948      	bls.n	8014dee <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8014d5c:	2a5b      	cmp	r2, #91	; 0x5b
 8014d5e:	d046      	beq.n	8014dee <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8014d60:	2a5d      	cmp	r2, #93	; 0x5d
 8014d62:	d044      	beq.n	8014dee <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8014d64:	f02a 0102 	bic.w	r1, sl, #2
 8014d68:	b289      	uxth	r1, r1
 8014d6a:	f1a1 033c 	sub.w	r3, r1, #60	; 0x3c
 8014d6e:	4259      	negs	r1, r3
 8014d70:	4159      	adcs	r1, r3
 8014d72:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 8014d76:	b29b      	uxth	r3, r3
 8014d78:	2b09      	cmp	r3, #9
 8014d7a:	d93a      	bls.n	8014df2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3da>
 8014d7c:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 8014d80:	b29b      	uxth	r3, r3
 8014d82:	2b09      	cmp	r3, #9
 8014d84:	bf8c      	ite	hi
 8014d86:	2300      	movhi	r3, #0
 8014d88:	2301      	movls	r3, #1
 8014d8a:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 8014d8e:	b280      	uxth	r0, r0
 8014d90:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 8014d94:	d306      	bcc.n	8014da4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 8014d96:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 8014d9a:	b280      	uxth	r0, r0
 8014d9c:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 8014da0:	d300      	bcc.n	8014da4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 8014da2:	b109      	cbz	r1, 8014da8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x390>
 8014da4:	f083 0101 	eor.w	r1, r3, #1
 8014da8:	f64f 60ff 	movw	r0, #65279	; 0xfeff
 8014dac:	4582      	cmp	sl, r0
 8014dae:	d022      	beq.n	8014df6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3de>
 8014db0:	f242 000b 	movw	r0, #8203	; 0x200b
 8014db4:	ebaa 0c00 	sub.w	ip, sl, r0
 8014db8:	f1dc 0000 	rsbs	r0, ip, #0
 8014dbc:	eb40 000c 	adc.w	r0, r0, ip
 8014dc0:	3a41      	subs	r2, #65	; 0x41
 8014dc2:	2a19      	cmp	r2, #25
 8014dc4:	d909      	bls.n	8014dda <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c2>
 8014dc6:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 8014dca:	f240 811f 	bls.w	801500c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8014dce:	2900      	cmp	r1, #0
 8014dd0:	f040 811c 	bne.w	801500c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8014dd4:	2800      	cmp	r0, #0
 8014dd6:	f040 8119 	bne.w	801500c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8014dda:	2f07      	cmp	r7, #7
 8014ddc:	d815      	bhi.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014dde:	e8df f007 	tbb	[pc, r7]
 8014de2:	141e      	.short	0x141e
 8014de4:	7c501432 	.word	0x7c501432
 8014de8:	ac60      	.short	0xac60
 8014dea:	4615      	mov	r5, r2
 8014dec:	e7a6      	b.n	8014d3c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x324>
 8014dee:	2101      	movs	r1, #1
 8014df0:	e7bf      	b.n	8014d72 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x35a>
 8014df2:	2301      	movs	r3, #1
 8014df4:	e7c9      	b.n	8014d8a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x372>
 8014df6:	2001      	movs	r0, #1
 8014df8:	e7e2      	b.n	8014dc0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3a8>
 8014dfa:	2200      	movs	r2, #0
 8014dfc:	462c      	mov	r4, r5
 8014dfe:	2601      	movs	r6, #1
 8014e00:	b9fb      	cbnz	r3, 8014e42 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 8014e02:	2a00      	cmp	r2, #0
 8014e04:	bf0c      	ite	eq
 8014e06:	2702      	moveq	r7, #2
 8014e08:	2706      	movne	r7, #6
 8014e0a:	9b07      	ldr	r3, [sp, #28]
 8014e0c:	2f02      	cmp	r7, #2
 8014e0e:	bf08      	it	eq
 8014e10:	f043 0301 	orreq.w	r3, r3, #1
 8014e14:	9307      	str	r3, [sp, #28]
 8014e16:	9b06      	ldr	r3, [sp, #24]
 8014e18:	3301      	adds	r3, #1
 8014e1a:	9306      	str	r3, [sp, #24]
 8014e1c:	e763      	b.n	8014ce6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ce>
 8014e1e:	2201      	movs	r2, #1
 8014e20:	e7ec      	b.n	8014dfc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3e4>
 8014e22:	2200      	movs	r2, #0
 8014e24:	b18b      	cbz	r3, 8014e4a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x432>
 8014e26:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014e28:	9601      	str	r6, [sp, #4]
 8014e2a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014e2e:	ab0d      	add	r3, sp, #52	; 0x34
 8014e30:	9300      	str	r3, [sp, #0]
 8014e32:	4642      	mov	r2, r8
 8014e34:	2301      	movs	r3, #1
 8014e36:	4649      	mov	r1, r9
 8014e38:	9804      	ldr	r0, [sp, #16]
 8014e3a:	f7ff fd84 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014e3e:	462c      	mov	r4, r5
 8014e40:	2601      	movs	r6, #1
 8014e42:	2704      	movs	r7, #4
 8014e44:	e7e1      	b.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014e46:	2201      	movs	r2, #1
 8014e48:	e7ec      	b.n	8014e24 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x40c>
 8014e4a:	b17a      	cbz	r2, 8014e6c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x454>
 8014e4c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014e4e:	9601      	str	r6, [sp, #4]
 8014e50:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014e54:	ab0d      	add	r3, sp, #52	; 0x34
 8014e56:	9300      	str	r3, [sp, #0]
 8014e58:	2301      	movs	r3, #1
 8014e5a:	4642      	mov	r2, r8
 8014e5c:	4649      	mov	r1, r9
 8014e5e:	9804      	ldr	r0, [sp, #16]
 8014e60:	f7ff fd71 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014e64:	462c      	mov	r4, r5
 8014e66:	2601      	movs	r6, #1
 8014e68:	2706      	movs	r7, #6
 8014e6a:	e7ce      	b.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014e6c:	3601      	adds	r6, #1
 8014e6e:	442c      	add	r4, r5
 8014e70:	b2a4      	uxth	r4, r4
 8014e72:	2702      	movs	r7, #2
 8014e74:	e7c9      	b.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014e76:	2200      	movs	r2, #0
 8014e78:	b12b      	cbz	r3, 8014e86 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x46e>
 8014e7a:	3601      	adds	r6, #1
 8014e7c:	442c      	add	r4, r5
 8014e7e:	b2a4      	uxth	r4, r4
 8014e80:	e7df      	b.n	8014e42 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 8014e82:	2201      	movs	r2, #1
 8014e84:	e7f8      	b.n	8014e78 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x460>
 8014e86:	f02a 0302 	bic.w	r3, sl, #2
 8014e8a:	b29b      	uxth	r3, r3
 8014e8c:	2b2c      	cmp	r3, #44	; 0x2c
 8014e8e:	d06f      	beq.n	8014f70 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8014e90:	f1ba 0f3a 	cmp.w	sl, #58	; 0x3a
 8014e94:	d06c      	beq.n	8014f70 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8014e96:	f2aa 636b 	subw	r3, sl, #1643	; 0x66b
 8014e9a:	b29b      	uxth	r3, r3
 8014e9c:	2b01      	cmp	r3, #1
 8014e9e:	d967      	bls.n	8014f70 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8014ea0:	b11a      	cbz	r2, 8014eaa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x492>
 8014ea2:	3601      	adds	r6, #1
 8014ea4:	442c      	add	r4, r5
 8014ea6:	b2a4      	uxth	r4, r4
 8014ea8:	e7de      	b.n	8014e68 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x450>
 8014eaa:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014eac:	9601      	str	r6, [sp, #4]
 8014eae:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014eb2:	ab0d      	add	r3, sp, #52	; 0x34
 8014eb4:	9300      	str	r3, [sp, #0]
 8014eb6:	4613      	mov	r3, r2
 8014eb8:	4642      	mov	r2, r8
 8014eba:	4649      	mov	r1, r9
 8014ebc:	9804      	ldr	r0, [sp, #16]
 8014ebe:	f7ff fd42 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014ec2:	462c      	mov	r4, r5
 8014ec4:	2601      	movs	r6, #1
 8014ec6:	e7d4      	b.n	8014e72 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8014ec8:	2200      	movs	r2, #0
 8014eca:	b143      	cbz	r3, 8014ede <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4c6>
 8014ecc:	9b05      	ldr	r3, [sp, #20]
 8014ece:	445c      	add	r4, fp
 8014ed0:	3301      	adds	r3, #1
 8014ed2:	441e      	add	r6, r3
 8014ed4:	fa15 f484 	uxtah	r4, r5, r4
 8014ed8:	e7d1      	b.n	8014e7e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x466>
 8014eda:	2201      	movs	r2, #1
 8014edc:	e7f5      	b.n	8014eca <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4b2>
 8014ede:	af0d      	add	r7, sp, #52	; 0x34
 8014ee0:	b182      	cbz	r2, 8014f04 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4ec>
 8014ee2:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8014ee4:	9804      	ldr	r0, [sp, #16]
 8014ee6:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8014eea:	e9cd 7600 	strd	r7, r6, [sp]
 8014eee:	4642      	mov	r2, r8
 8014ef0:	4649      	mov	r1, r9
 8014ef2:	f7ff fd28 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014ef6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014ef8:	e9cd b302 	strd	fp, r3, [sp, #8]
 8014efc:	9b05      	ldr	r3, [sp, #20]
 8014efe:	e9cd 7300 	strd	r7, r3, [sp]
 8014f02:	e7a9      	b.n	8014e58 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x440>
 8014f04:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014f06:	9804      	ldr	r0, [sp, #16]
 8014f08:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014f0c:	e9cd 7600 	strd	r7, r6, [sp]
 8014f10:	4613      	mov	r3, r2
 8014f12:	4649      	mov	r1, r9
 8014f14:	4642      	mov	r2, r8
 8014f16:	f7ff fd16 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014f1a:	9b05      	ldr	r3, [sp, #20]
 8014f1c:	eb0b 0405 	add.w	r4, fp, r5
 8014f20:	1c5e      	adds	r6, r3, #1
 8014f22:	e7a5      	b.n	8014e70 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x458>
 8014f24:	2b00      	cmp	r3, #0
 8014f26:	d1bc      	bne.n	8014ea2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48a>
 8014f28:	b339      	cbz	r1, 8014f7a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x562>
 8014f2a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8014f2c:	9601      	str	r6, [sp, #4]
 8014f2e:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8014f32:	aa0d      	add	r2, sp, #52	; 0x34
 8014f34:	9200      	str	r2, [sp, #0]
 8014f36:	e7bf      	b.n	8014eb8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a0>
 8014f38:	b133      	cbz	r3, 8014f48 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x530>
 8014f3a:	9b05      	ldr	r3, [sp, #20]
 8014f3c:	445c      	add	r4, fp
 8014f3e:	3301      	adds	r3, #1
 8014f40:	441e      	add	r6, r3
 8014f42:	fa15 f484 	uxtah	r4, r5, r4
 8014f46:	e7ae      	b.n	8014ea6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48e>
 8014f48:	9a05      	ldr	r2, [sp, #20]
 8014f4a:	445d      	add	r5, fp
 8014f4c:	3201      	adds	r2, #1
 8014f4e:	920a      	str	r2, [sp, #40]	; 0x28
 8014f50:	b2ad      	uxth	r5, r5
 8014f52:	b1b9      	cbz	r1, 8014f84 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x56c>
 8014f54:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8014f56:	9601      	str	r6, [sp, #4]
 8014f58:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8014f5c:	aa0d      	add	r2, sp, #52	; 0x34
 8014f5e:	9200      	str	r2, [sp, #0]
 8014f60:	4649      	mov	r1, r9
 8014f62:	4642      	mov	r2, r8
 8014f64:	9804      	ldr	r0, [sp, #16]
 8014f66:	f7ff fcee 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014f6a:	462c      	mov	r4, r5
 8014f6c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014f6e:	e780      	b.n	8014e72 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8014f70:	2301      	movs	r3, #1
 8014f72:	46ab      	mov	fp, r5
 8014f74:	9305      	str	r3, [sp, #20]
 8014f76:	2705      	movs	r7, #5
 8014f78:	e747      	b.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014f7a:	2301      	movs	r3, #1
 8014f7c:	46ab      	mov	fp, r5
 8014f7e:	9305      	str	r3, [sp, #20]
 8014f80:	2707      	movs	r7, #7
 8014f82:	e742      	b.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014f84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f86:	9305      	str	r3, [sp, #20]
 8014f88:	46ab      	mov	fp, r5
 8014f8a:	e73e      	b.n	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8014f8c:	2f02      	cmp	r7, #2
 8014f8e:	f43f ae60 	beq.w	8014c52 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x23a>
 8014f92:	f007 0705 	and.w	r7, r7, #5
 8014f96:	2f04      	cmp	r7, #4
 8014f98:	f43f ae52 	beq.w	8014c40 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x228>
 8014f9c:	2f05      	cmp	r7, #5
 8014f9e:	f47f ae7c 	bne.w	8014c9a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 8014fa2:	9b07      	ldr	r3, [sp, #28]
 8014fa4:	ad0d      	add	r5, sp, #52	; 0x34
 8014fa6:	b18b      	cbz	r3, 8014fcc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5b4>
 8014fa8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014faa:	9804      	ldr	r0, [sp, #16]
 8014fac:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8014fb0:	e9cd 5600 	strd	r5, r6, [sp]
 8014fb4:	2300      	movs	r3, #0
 8014fb6:	4642      	mov	r2, r8
 8014fb8:	4649      	mov	r1, r9
 8014fba:	f7ff fcc4 	bl	8014946 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8014fbe:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014fc0:	e9cd b302 	strd	fp, r3, [sp, #8]
 8014fc4:	9b05      	ldr	r3, [sp, #20]
 8014fc6:	e9cd 5300 	strd	r5, r3, [sp]
 8014fca:	e681      	b.n	8014cd0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8014fcc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014fce:	9303      	str	r3, [sp, #12]
 8014fd0:	9b05      	ldr	r3, [sp, #20]
 8014fd2:	445c      	add	r4, fp
 8014fd4:	441e      	add	r6, r3
 8014fd6:	b2a4      	uxth	r4, r4
 8014fd8:	9402      	str	r4, [sp, #8]
 8014fda:	e9cd 5600 	strd	r5, r6, [sp]
 8014fde:	9b07      	ldr	r3, [sp, #28]
 8014fe0:	e656      	b.n	8014c90 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 8014fe2:	2b00      	cmp	r3, #0
 8014fe4:	f47f adbf 	bne.w	8014b66 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14e>
 8014fe8:	2a00      	cmp	r2, #0
 8014fea:	f47f adab 	bne.w	8014b44 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 8014fee:	2f03      	cmp	r7, #3
 8014ff0:	f63f adef 	bhi.w	8014bd2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8014ff4:	a301      	add	r3, pc, #4	; (adr r3, 8014ffc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5e4>)
 8014ff6:	f853 f027 	ldr.w	pc, [r3, r7, lsl #2]
 8014ffa:	bf00      	nop
 8014ffc:	08014b73 	.word	0x08014b73
 8015000:	08014b7d 	.word	0x08014b7d
 8015004:	08014bc5 	.word	0x08014bc5
 8015008:	08014bfb 	.word	0x08014bfb
 801500c:	2f07      	cmp	r7, #7
 801500e:	f63f aefc 	bhi.w	8014e0a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8015012:	a201      	add	r2, pc, #4	; (adr r2, 8015018 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x600>)
 8015014:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 8015018:	08014dfb 	.word	0x08014dfb
 801501c:	08014e0b 	.word	0x08014e0b
 8015020:	08014e23 	.word	0x08014e23
 8015024:	08014e0b 	.word	0x08014e0b
 8015028:	08014e77 	.word	0x08014e77
 801502c:	08014ec9 	.word	0x08014ec9
 8015030:	08014f25 	.word	0x08014f25
 8015034:	08014f39 	.word	0x08014f39

08015038 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015038:	b530      	push	{r4, r5, lr}
 801503a:	8a44      	ldrh	r4, [r0, #18]
 801503c:	8ac5      	ldrh	r5, [r0, #22]
 801503e:	82c3      	strh	r3, [r0, #22]
 8015040:	442c      	add	r4, r5
 8015042:	1ae4      	subs	r4, r4, r3
 8015044:	8244      	strh	r4, [r0, #18]
 8015046:	8b03      	ldrh	r3, [r0, #24]
 8015048:	8a84      	ldrh	r4, [r0, #20]
 801504a:	4422      	add	r2, r4
 801504c:	440c      	add	r4, r1
 801504e:	1a59      	subs	r1, r3, r1
 8015050:	8342      	strh	r2, [r0, #26]
 8015052:	8284      	strh	r4, [r0, #20]
 8015054:	8301      	strh	r1, [r0, #24]
 8015056:	bd30      	pop	{r4, r5, pc}

08015058 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8015058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801505c:	7a43      	ldrb	r3, [r0, #9]
 801505e:	1eda      	subs	r2, r3, #3
 8015060:	b087      	sub	sp, #28
 8015062:	4604      	mov	r4, r0
 8015064:	b2d2      	uxtb	r2, r2
 8015066:	460f      	mov	r7, r1
 8015068:	2900      	cmp	r1, #0
 801506a:	d036      	beq.n	80150da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801506c:	2a01      	cmp	r2, #1
 801506e:	d932      	bls.n	80150d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8015070:	1e58      	subs	r0, r3, #1
 8015072:	f1d0 0b00 	rsbs	fp, r0, #0
 8015076:	eb4b 0b00 	adc.w	fp, fp, r0
 801507a:	1e99      	subs	r1, r3, #2
 801507c:	424b      	negs	r3, r1
 801507e:	414b      	adcs	r3, r1
 8015080:	9303      	str	r3, [sp, #12]
 8015082:	2300      	movs	r3, #0
 8015084:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8015088:	2500      	movs	r5, #0
 801508a:	8265      	strh	r5, [r4, #18]
 801508c:	82a5      	strh	r5, [r4, #20]
 801508e:	46a9      	mov	r9, r5
 8015090:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8015094:	2300      	movs	r3, #0
 8015096:	9305      	str	r3, [sp, #20]
 8015098:	8823      	ldrh	r3, [r4, #0]
 801509a:	2b20      	cmp	r3, #32
 801509c:	d02b      	beq.n	80150f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 801509e:	eba3 020a 	sub.w	r2, r3, sl
 80150a2:	4256      	negs	r6, r2
 80150a4:	4156      	adcs	r6, r2
 80150a6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80150aa:	4293      	cmp	r3, r2
 80150ac:	d004      	beq.n	80150b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80150ae:	4553      	cmp	r3, sl
 80150b0:	bf16      	itet	ne
 80150b2:	4699      	movne	r9, r3
 80150b4:	2601      	moveq	r6, #1
 80150b6:	2600      	movne	r6, #0
 80150b8:	ab05      	add	r3, sp, #20
 80150ba:	68e2      	ldr	r2, [r4, #12]
 80150bc:	7a21      	ldrb	r1, [r4, #8]
 80150be:	6860      	ldr	r0, [r4, #4]
 80150c0:	f003 fa20 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80150c4:	8020      	strh	r0, [r4, #0]
 80150c6:	b9c8      	cbnz	r0, 80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80150c8:	8b22      	ldrh	r2, [r4, #24]
 80150ca:	2300      	movs	r3, #0
 80150cc:	4611      	mov	r1, r2
 80150ce:	4620      	mov	r0, r4
 80150d0:	f7ff ffb2 	bl	8015038 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80150d4:	e066      	b.n	80151a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80150d6:	468b      	mov	fp, r1
 80150d8:	e7cf      	b.n	801507a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 80150da:	3b01      	subs	r3, #1
 80150dc:	2a01      	cmp	r2, #1
 80150de:	bf8c      	ite	hi
 80150e0:	2200      	movhi	r2, #0
 80150e2:	2201      	movls	r2, #1
 80150e4:	2b01      	cmp	r3, #1
 80150e6:	bf8c      	ite	hi
 80150e8:	2300      	movhi	r3, #0
 80150ea:	2301      	movls	r3, #1
 80150ec:	9202      	str	r2, [sp, #8]
 80150ee:	9301      	str	r3, [sp, #4]
 80150f0:	9103      	str	r1, [sp, #12]
 80150f2:	468b      	mov	fp, r1
 80150f4:	e7c8      	b.n	8015088 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 80150f6:	4699      	mov	r9, r3
 80150f8:	2601      	movs	r6, #1
 80150fa:	e7dd      	b.n	80150b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80150fc:	8ae3      	ldrh	r3, [r4, #22]
 80150fe:	280a      	cmp	r0, #10
 8015100:	f103 0301 	add.w	r3, r3, #1
 8015104:	82e3      	strh	r3, [r4, #22]
 8015106:	d0df      	beq.n	80150c8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8015108:	9a05      	ldr	r2, [sp, #20]
 801510a:	bb42      	cbnz	r2, 801515e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 801510c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015110:	4298      	cmp	r0, r3
 8015112:	d001      	beq.n	8015118 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8015114:	4550      	cmp	r0, sl
 8015116:	d1bd      	bne.n	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015118:	8823      	ldrh	r3, [r4, #0]
 801511a:	8b21      	ldrh	r1, [r4, #24]
 801511c:	2b20      	cmp	r3, #32
 801511e:	d001      	beq.n	8015124 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8015120:	4553      	cmp	r3, sl
 8015122:	d131      	bne.n	8015188 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8015124:	2e00      	cmp	r6, #0
 8015126:	bf0a      	itet	eq
 8015128:	460d      	moveq	r5, r1
 801512a:	4630      	movne	r0, r6
 801512c:	2001      	moveq	r0, #1
 801512e:	440a      	add	r2, r1
 8015130:	8aa3      	ldrh	r3, [r4, #20]
 8015132:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015136:	b292      	uxth	r2, r2
 8015138:	8322      	strh	r2, [r4, #24]
 801513a:	4413      	add	r3, r2
 801513c:	2f00      	cmp	r7, #0
 801513e:	d03a      	beq.n	80151b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8015140:	f1bb 0f00 	cmp.w	fp, #0
 8015144:	d102      	bne.n	801514c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8015146:	9903      	ldr	r1, [sp, #12]
 8015148:	b301      	cbz	r1, 801518c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801514a:	b1f8      	cbz	r0, 801518c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801514c:	8ba1      	ldrh	r1, [r4, #28]
 801514e:	4419      	add	r1, r3
 8015150:	458c      	cmp	ip, r1
 8015152:	da2a      	bge.n	80151aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8015154:	8a61      	ldrh	r1, [r4, #18]
 8015156:	b341      	cbz	r1, 80151aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8015158:	4563      	cmp	r3, ip
 801515a:	dd9b      	ble.n	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801515c:	e01c      	b.n	8015198 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 801515e:	8893      	ldrh	r3, [r2, #4]
 8015160:	8023      	strh	r3, [r4, #0]
 8015162:	f892 800d 	ldrb.w	r8, [r2, #13]
 8015166:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801516a:	f408 7080 	and.w	r0, r8, #256	; 0x100
 801516e:	f892 800a 	ldrb.w	r8, [r2, #10]
 8015172:	ea48 0800 	orr.w	r8, r8, r0
 8015176:	68e0      	ldr	r0, [r4, #12]
 8015178:	6803      	ldr	r3, [r0, #0]
 801517a:	4649      	mov	r1, r9
 801517c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801517e:	4798      	blx	r3
 8015180:	eb08 0200 	add.w	r2, r8, r0
 8015184:	b292      	uxth	r2, r2
 8015186:	e7c7      	b.n	8015118 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8015188:	2000      	movs	r0, #0
 801518a:	e7d0      	b.n	801512e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 801518c:	4563      	cmp	r3, ip
 801518e:	dd81      	ble.n	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015190:	8a63      	ldrh	r3, [r4, #18]
 8015192:	2b00      	cmp	r3, #0
 8015194:	f43f af7e 	beq.w	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015198:	2301      	movs	r3, #1
 801519a:	77a3      	strb	r3, [r4, #30]
 801519c:	8ba2      	ldrh	r2, [r4, #28]
 801519e:	8b63      	ldrh	r3, [r4, #26]
 80151a0:	4413      	add	r3, r2
 80151a2:	8363      	strh	r3, [r4, #26]
 80151a4:	b007      	add	sp, #28
 80151a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151aa:	2300      	movs	r3, #0
 80151ac:	4611      	mov	r1, r2
 80151ae:	4620      	mov	r0, r4
 80151b0:	f7ff ff42 	bl	8015038 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80151b4:	e76e      	b.n	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80151b6:	4563      	cmp	r3, ip
 80151b8:	dd14      	ble.n	80151e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80151ba:	9b02      	ldr	r3, [sp, #8]
 80151bc:	b113      	cbz	r3, 80151c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80151be:	2301      	movs	r3, #1
 80151c0:	460a      	mov	r2, r1
 80151c2:	e783      	b.n	80150cc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80151c4:	9b01      	ldr	r3, [sp, #4]
 80151c6:	2b00      	cmp	r3, #0
 80151c8:	f43f af64 	beq.w	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80151cc:	2800      	cmp	r0, #0
 80151ce:	f47f af61 	bne.w	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80151d2:	b116      	cbz	r6, 80151da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80151d4:	2301      	movs	r3, #1
 80151d6:	462a      	mov	r2, r5
 80151d8:	e779      	b.n	80150ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 80151da:	8a63      	ldrh	r3, [r4, #18]
 80151dc:	2b00      	cmp	r3, #0
 80151de:	f43f af59 	beq.w	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80151e2:	e7df      	b.n	80151a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80151e4:	2800      	cmp	r0, #0
 80151e6:	f47f af55 	bne.w	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80151ea:	2e00      	cmp	r6, #0
 80151ec:	f43f af52 	beq.w	8015094 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80151f0:	2301      	movs	r3, #1
 80151f2:	462a      	mov	r2, r5
 80151f4:	e7db      	b.n	80151ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

080151f6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80151f6:	b530      	push	{r4, r5, lr}
 80151f8:	4605      	mov	r5, r0
 80151fa:	b08b      	sub	sp, #44	; 0x2c
 80151fc:	b191      	cbz	r1, 8015224 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 80151fe:	e9cd 3100 	strd	r3, r1, [sp]
 8015202:	4613      	mov	r3, r2
 8015204:	4601      	mov	r1, r0
 8015206:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 801520a:	a802      	add	r0, sp, #8
 801520c:	f7ff f994 	bl	8014538 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8015210:	2401      	movs	r4, #1
 8015212:	2100      	movs	r1, #0
 8015214:	a802      	add	r0, sp, #8
 8015216:	f7ff ff1f 	bl	8015058 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801521a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801521e:	b163      	cbz	r3, 801523a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015220:	3401      	adds	r4, #1
 8015222:	e7f6      	b.n	8015212 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8015224:	f003 fa68 	bl	80186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015228:	2401      	movs	r4, #1
 801522a:	280a      	cmp	r0, #10
 801522c:	4628      	mov	r0, r5
 801522e:	bf08      	it	eq
 8015230:	3401      	addeq	r4, #1
 8015232:	f003 fa61 	bl	80186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015236:	2800      	cmp	r0, #0
 8015238:	d1f7      	bne.n	801522a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801523a:	b2a0      	uxth	r0, r4
 801523c:	b00b      	add	sp, #44	; 0x2c
 801523e:	bd30      	pop	{r4, r5, pc}

08015240 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015244:	b0e9      	sub	sp, #420	; 0x1a4
 8015246:	468b      	mov	fp, r1
 8015248:	f8dd a1c8 	ldr.w	sl, [sp, #456]	; 0x1c8
 801524c:	9007      	str	r0, [sp, #28]
 801524e:	461c      	mov	r4, r3
 8015250:	f1ba 0f00 	cmp.w	sl, #0
 8015254:	f000 80cd 	beq.w	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8015258:	681b      	ldr	r3, [r3, #0]
 801525a:	2b00      	cmp	r3, #0
 801525c:	f000 80c9 	beq.w	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8015260:	7ba3      	ldrb	r3, [r4, #14]
 8015262:	2b00      	cmp	r3, #0
 8015264:	f000 80c5 	beq.w	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8015268:	6810      	ldr	r0, [r2, #0]
 801526a:	6851      	ldr	r1, [r2, #4]
 801526c:	f9bb 2004 	ldrsh.w	r2, [fp, #4]
 8015270:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8015274:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8015278:	464b      	mov	r3, r9
 801527a:	c303      	stmia	r3!, {r0, r1}
 801527c:	79a2      	ldrb	r2, [r4, #6]
 801527e:	f9bb 3006 	ldrsh.w	r3, [fp, #6]
 8015282:	7967      	ldrb	r7, [r4, #5]
 8015284:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015288:	a90e      	add	r1, sp, #56	; 0x38
 801528a:	4648      	mov	r0, r9
 801528c:	2500      	movs	r5, #0
 801528e:	950e      	str	r5, [sp, #56]	; 0x38
 8015290:	f7ff f9c8 	bl	8014624 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015294:	a90e      	add	r1, sp, #56	; 0x38
 8015296:	79a2      	ldrb	r2, [r4, #6]
 8015298:	4608      	mov	r0, r1
 801529a:	f7ff f9c3 	bl	8014624 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801529e:	2f00      	cmp	r7, #0
 80152a0:	d16a      	bne.n	8015378 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80152a2:	f894 8004 	ldrb.w	r8, [r4, #4]
 80152a6:	ebb8 0805 	subs.w	r8, r8, r5
 80152aa:	bf18      	it	ne
 80152ac:	f04f 0801 	movne.w	r8, #1
 80152b0:	f8cd 8014 	str.w	r8, [sp, #20]
 80152b4:	a81d      	add	r0, sp, #116	; 0x74
 80152b6:	f002 f92a 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 80152ba:	6820      	ldr	r0, [r4, #0]
 80152bc:	6803      	ldr	r3, [r0, #0]
 80152be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80152c0:	4798      	blx	r3
 80152c2:	4605      	mov	r5, r0
 80152c4:	6820      	ldr	r0, [r4, #0]
 80152c6:	6803      	ldr	r3, [r0, #0]
 80152c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80152ca:	4798      	blx	r3
 80152cc:	462b      	mov	r3, r5
 80152ce:	9000      	str	r0, [sp, #0]
 80152d0:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 80152d2:	4651      	mov	r1, sl
 80152d4:	a81d      	add	r0, sp, #116	; 0x74
 80152d6:	f002 f985 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80152da:	6820      	ldr	r0, [r4, #0]
 80152dc:	6803      	ldr	r3, [r0, #0]
 80152de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80152e0:	4798      	blx	r3
 80152e2:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80152e6:	182e      	adds	r6, r5, r0
 80152e8:	2e00      	cmp	r6, #0
 80152ea:	dd51      	ble.n	8015390 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 80152ec:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 80152f0:	4283      	cmp	r3, r0
 80152f2:	db4d      	blt.n	8015390 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 80152f4:	441d      	add	r5, r3
 80152f6:	fb95 f5f6 	sdiv	r5, r5, r6
 80152fa:	a836      	add	r0, sp, #216	; 0xd8
 80152fc:	f002 f907 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 8015300:	7c23      	ldrb	r3, [r4, #16]
 8015302:	b17b      	cbz	r3, 8015324 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xe4>
 8015304:	6820      	ldr	r0, [r4, #0]
 8015306:	6803      	ldr	r3, [r0, #0]
 8015308:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801530a:	4798      	blx	r3
 801530c:	9006      	str	r0, [sp, #24]
 801530e:	6820      	ldr	r0, [r4, #0]
 8015310:	6802      	ldr	r2, [r0, #0]
 8015312:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8015314:	4790      	blx	r2
 8015316:	9b06      	ldr	r3, [sp, #24]
 8015318:	9000      	str	r0, [sp, #0]
 801531a:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 801531c:	4651      	mov	r1, sl
 801531e:	a836      	add	r0, sp, #216	; 0xd8
 8015320:	f002 f960 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015324:	7be1      	ldrb	r1, [r4, #15]
 8015326:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801532a:	7963      	ldrb	r3, [r4, #5]
 801532c:	1a52      	subs	r2, r2, r1
 801532e:	7c21      	ldrb	r1, [r4, #16]
 8015330:	9101      	str	r1, [sp, #4]
 8015332:	f10d 0a54 	add.w	sl, sp, #84	; 0x54
 8015336:	6821      	ldr	r1, [r4, #0]
 8015338:	9100      	str	r1, [sp, #0]
 801533a:	b292      	uxth	r2, r2
 801533c:	a936      	add	r1, sp, #216	; 0xd8
 801533e:	4650      	mov	r0, sl
 8015340:	f7ff f8fa 	bl	8014538 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8015344:	7c23      	ldrb	r3, [r4, #16]
 8015346:	bb2b      	cbnz	r3, 8015394 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x154>
 8015348:	fa1f fa86 	uxth.w	sl, r6
 801534c:	2d00      	cmp	r5, #0
 801534e:	dd53      	ble.n	80153f8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8015350:	a81d      	add	r0, sp, #116	; 0x74
 8015352:	f003 f9d1 	bl	80186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015356:	2800      	cmp	r0, #0
 8015358:	d04b      	beq.n	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 801535a:	280a      	cmp	r0, #10
 801535c:	d1f6      	bne.n	801534c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 801535e:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8015362:	4453      	add	r3, sl
 8015364:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8015368:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801536c:	eba3 030a 	sub.w	r3, r3, sl
 8015370:	3d01      	subs	r5, #1
 8015372:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015376:	e7e9      	b.n	801534c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 8015378:	2f01      	cmp	r7, #1
 801537a:	d107      	bne.n	801538c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14c>
 801537c:	7923      	ldrb	r3, [r4, #4]
 801537e:	3b02      	subs	r3, #2
 8015380:	bf18      	it	ne
 8015382:	2301      	movne	r3, #1
 8015384:	9305      	str	r3, [sp, #20]
 8015386:	f04f 0801 	mov.w	r8, #1
 801538a:	e793      	b.n	80152b4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x74>
 801538c:	9505      	str	r5, [sp, #20]
 801538e:	e7fa      	b.n	8015386 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x146>
 8015390:	2500      	movs	r5, #0
 8015392:	e7b2      	b.n	80152fa <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 8015394:	0073      	lsls	r3, r6, #1
 8015396:	9306      	str	r3, [sp, #24]
 8015398:	2d00      	cmp	r5, #0
 801539a:	dd2d      	ble.n	80153f8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 801539c:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 80153a0:	9b06      	ldr	r3, [sp, #24]
 80153a2:	428b      	cmp	r3, r1
 80153a4:	bfd4      	ite	le
 80153a6:	2100      	movle	r1, #0
 80153a8:	2101      	movgt	r1, #1
 80153aa:	4650      	mov	r0, sl
 80153ac:	f7ff fe54 	bl	8015058 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80153b0:	f8ba 3012 	ldrh.w	r3, [sl, #18]
 80153b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80153b8:	3b01      	subs	r3, #1
 80153ba:	b29b      	uxth	r3, r3
 80153bc:	4293      	cmp	r3, r2
 80153be:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80153c2:	d006      	beq.n	80153d2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x192>
 80153c4:	4639      	mov	r1, r7
 80153c6:	a81d      	add	r0, sp, #116	; 0x74
 80153c8:	f7f2 f9f6 	bl	80077b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80153cc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80153d0:	e7f2      	b.n	80153b8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x178>
 80153d2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80153d6:	b2b3      	uxth	r3, r6
 80153d8:	441a      	add	r2, r3
 80153da:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 80153de:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 80153e2:	1ad3      	subs	r3, r2, r3
 80153e4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80153e8:	f8ba 3000 	ldrh.w	r3, [sl]
 80153ec:	3d01      	subs	r5, #1
 80153ee:	2b00      	cmp	r3, #0
 80153f0:	d1d2      	bne.n	8015398 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x158>
 80153f2:	b069      	add	sp, #420	; 0x1a4
 80153f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153f8:	2500      	movs	r5, #0
 80153fa:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80153fe:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8015402:	e9cd 5b10 	strd	r5, fp, [sp, #64]	; 0x40
 8015406:	e9cd 9413 	strd	r9, r4, [sp, #76]	; 0x4c
 801540a:	0073      	lsls	r3, r6, #1
 801540c:	9306      	str	r3, [sp, #24]
 801540e:	f10d 0a74 	add.w	sl, sp, #116	; 0x74
 8015412:	7c23      	ldrb	r3, [r4, #16]
 8015414:	f8ad 502e 	strh.w	r5, [sp, #46]	; 0x2e
 8015418:	b14b      	cbz	r3, 801542e <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 801541a:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 801541e:	9b06      	ldr	r3, [sp, #24]
 8015420:	428b      	cmp	r3, r1
 8015422:	bfd4      	ite	le
 8015424:	2100      	movle	r1, #0
 8015426:	2101      	movgt	r1, #1
 8015428:	a815      	add	r0, sp, #84	; 0x54
 801542a:	f7ff fe15 	bl	8015058 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801542e:	f1b8 0f00 	cmp.w	r8, #0
 8015432:	d069      	beq.n	8015508 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2c8>
 8015434:	9b05      	ldr	r3, [sp, #20]
 8015436:	2b00      	cmp	r3, #0
 8015438:	d061      	beq.n	80154fe <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2be>
 801543a:	7c23      	ldrb	r3, [r4, #16]
 801543c:	b9c3      	cbnz	r3, 8015470 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 801543e:	2264      	movs	r2, #100	; 0x64
 8015440:	4651      	mov	r1, sl
 8015442:	a84f      	add	r0, sp, #316	; 0x13c
 8015444:	f010 fb5c 	bl	8025b00 <memcpy>
 8015448:	463b      	mov	r3, r7
 801544a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801544e:	6821      	ldr	r1, [r4, #0]
 8015450:	a84f      	add	r0, sp, #316	; 0x13c
 8015452:	f7ff f8ab 	bl	80145ac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015456:	b200      	sxth	r0, r0
 8015458:	7922      	ldrb	r2, [r4, #4]
 801545a:	2f00      	cmp	r7, #0
 801545c:	d144      	bne.n	80154e8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2a8>
 801545e:	2a01      	cmp	r2, #1
 8015460:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8015464:	d107      	bne.n	8015476 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 8015466:	1a1b      	subs	r3, r3, r0
 8015468:	2002      	movs	r0, #2
 801546a:	fb93 f3f0 	sdiv	r3, r3, r0
 801546e:	e005      	b.n	801547c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8015470:	f9bd 006e 	ldrsh.w	r0, [sp, #110]	; 0x6e
 8015474:	e7f0      	b.n	8015458 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8015476:	7be2      	ldrb	r2, [r4, #15]
 8015478:	1a9b      	subs	r3, r3, r2
 801547a:	1a1b      	subs	r3, r3, r0
 801547c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015480:	7c23      	ldrb	r3, [r4, #16]
 8015482:	2b00      	cmp	r3, #0
 8015484:	d042      	beq.n	801550c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2cc>
 8015486:	f8bd 2066 	ldrh.w	r2, [sp, #102]	; 0x66
 801548a:	f89d 3072 	ldrb.w	r3, [sp, #114]	; 0x72
 801548e:	9807      	ldr	r0, [sp, #28]
 8015490:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
 8015494:	e9cd 3b02 	strd	r3, fp, [sp, #8]
 8015498:	e9cd a200 	strd	sl, r2, [sp]
 801549c:	463b      	mov	r3, r7
 801549e:	6822      	ldr	r2, [r4, #0]
 80154a0:	f10d 012e 	add.w	r1, sp, #46	; 0x2e
 80154a4:	f7ff fab8 	bl	8014a18 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>
 80154a8:	f8bb 3008 	ldrh.w	r3, [fp, #8]
 80154ac:	b2b2      	uxth	r2, r6
 80154ae:	4611      	mov	r1, r2
 80154b0:	4413      	add	r3, r2
 80154b2:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 80154b6:	1a52      	subs	r2, r2, r1
 80154b8:	7c21      	ldrb	r1, [r4, #16]
 80154ba:	b21b      	sxth	r3, r3
 80154bc:	b212      	sxth	r2, r2
 80154be:	f8ab 3008 	strh.w	r3, [fp, #8]
 80154c2:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 80154c6:	b109      	cbz	r1, 80154cc <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x28c>
 80154c8:	42b2      	cmp	r2, r6
 80154ca:	db92      	blt.n	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80154cc:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 80154d0:	f8b9 1002 	ldrh.w	r1, [r9, #2]
 80154d4:	440a      	add	r2, r1
 80154d6:	b212      	sxth	r2, r2
 80154d8:	4293      	cmp	r3, r2
 80154da:	dc8a      	bgt.n	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80154dc:	4650      	mov	r0, sl
 80154de:	f002 f83d 	bl	801755c <_ZN8touchgfx12TextProvider11endOfStringEv>
 80154e2:	2800      	cmp	r0, #0
 80154e4:	d095      	beq.n	8015412 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 80154e6:	e784      	b.n	80153f2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80154e8:	2a01      	cmp	r2, #1
 80154ea:	d103      	bne.n	80154f4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2b4>
 80154ec:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80154f0:	4403      	add	r3, r0
 80154f2:	e7b9      	b.n	8015468 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x228>
 80154f4:	2a00      	cmp	r2, #0
 80154f6:	d1c3      	bne.n	8015480 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x240>
 80154f8:	7be3      	ldrb	r3, [r4, #15]
 80154fa:	4403      	add	r3, r0
 80154fc:	e7be      	b.n	801547c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80154fe:	7be2      	ldrb	r2, [r4, #15]
 8015500:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8015504:	1a9b      	subs	r3, r3, r2
 8015506:	e7b9      	b.n	801547c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8015508:	7be3      	ldrb	r3, [r4, #15]
 801550a:	e7b7      	b.n	801547c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 801550c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015510:	e7bd      	b.n	801548e <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>

08015512 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015512:	b510      	push	{r4, lr}
 8015514:	2b02      	cmp	r3, #2
 8015516:	f9b0 4000 	ldrsh.w	r4, [r0]
 801551a:	d00b      	beq.n	8015534 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 801551c:	2b03      	cmp	r3, #3
 801551e:	d00e      	beq.n	801553e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8015520:	2b01      	cmp	r3, #1
 8015522:	d001      	beq.n	8015528 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8015524:	1860      	adds	r0, r4, r1
 8015526:	bd10      	pop	{r4, pc}
 8015528:	8880      	ldrh	r0, [r0, #4]
 801552a:	4420      	add	r0, r4
 801552c:	b200      	sxth	r0, r0
 801552e:	1a80      	subs	r0, r0, r2
 8015530:	3801      	subs	r0, #1
 8015532:	e7f8      	b.n	8015526 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8015534:	8880      	ldrh	r0, [r0, #4]
 8015536:	4420      	add	r0, r4
 8015538:	b200      	sxth	r0, r0
 801553a:	1a40      	subs	r0, r0, r1
 801553c:	e7f8      	b.n	8015530 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801553e:	18a0      	adds	r0, r4, r2
 8015540:	e7f1      	b.n	8015526 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08015542 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015542:	b510      	push	{r4, lr}
 8015544:	2b02      	cmp	r3, #2
 8015546:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 801554a:	d006      	beq.n	801555a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 801554c:	2b03      	cmp	r3, #3
 801554e:	d00a      	beq.n	8015566 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015550:	2b01      	cmp	r3, #1
 8015552:	bf14      	ite	ne
 8015554:	18a0      	addne	r0, r4, r2
 8015556:	1860      	addeq	r0, r4, r1
 8015558:	bd10      	pop	{r4, pc}
 801555a:	88c0      	ldrh	r0, [r0, #6]
 801555c:	4420      	add	r0, r4
 801555e:	b200      	sxth	r0, r0
 8015560:	1a80      	subs	r0, r0, r2
 8015562:	3801      	subs	r0, #1
 8015564:	e7f8      	b.n	8015558 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8015566:	88c0      	ldrh	r0, [r0, #6]
 8015568:	4420      	add	r0, r4
 801556a:	b200      	sxth	r0, r0
 801556c:	1a40      	subs	r0, r0, r1
 801556e:	e7f8      	b.n	8015562 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08015570 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015570:	4b01      	ldr	r3, [pc, #4]	; (8015578 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015572:	2200      	movs	r2, #0
 8015574:	601a      	str	r2, [r3, #0]
 8015576:	4770      	bx	lr
 8015578:	200279b8 	.word	0x200279b8

0801557c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801557c:	4603      	mov	r3, r0
 801557e:	b1c8      	cbz	r0, 80155b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015580:	0c02      	lsrs	r2, r0, #16
 8015582:	0412      	lsls	r2, r2, #16
 8015584:	b9a2      	cbnz	r2, 80155b0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015586:	0403      	lsls	r3, r0, #16
 8015588:	2010      	movs	r0, #16
 801558a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801558e:	bf04      	itt	eq
 8015590:	021b      	lsleq	r3, r3, #8
 8015592:	3008      	addeq	r0, #8
 8015594:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015598:	bf04      	itt	eq
 801559a:	011b      	lsleq	r3, r3, #4
 801559c:	3004      	addeq	r0, #4
 801559e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80155a2:	bf04      	itt	eq
 80155a4:	009b      	lsleq	r3, r3, #2
 80155a6:	3002      	addeq	r0, #2
 80155a8:	2b00      	cmp	r3, #0
 80155aa:	db04      	blt.n	80155b6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80155ac:	3001      	adds	r0, #1
 80155ae:	4770      	bx	lr
 80155b0:	2000      	movs	r0, #0
 80155b2:	e7ea      	b.n	801558a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80155b4:	2020      	movs	r0, #32
 80155b6:	4770      	bx	lr

080155b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80155b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155bc:	b087      	sub	sp, #28
 80155be:	4681      	mov	r9, r0
 80155c0:	4698      	mov	r8, r3
 80155c2:	4610      	mov	r0, r2
 80155c4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80155c8:	460d      	mov	r5, r1
 80155ca:	b981      	cbnz	r1, 80155ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 80155cc:	b14b      	cbz	r3, 80155e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 80155ce:	460b      	mov	r3, r1
 80155d0:	e9cd 4700 	strd	r4, r7, [sp]
 80155d4:	464a      	mov	r2, r9
 80155d6:	4641      	mov	r1, r8
 80155d8:	f7ff ffee 	bl	80155b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80155dc:	b007      	add	sp, #28
 80155de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155e2:	f04f 33ff 	mov.w	r3, #4294967295
 80155e6:	603b      	str	r3, [r7, #0]
 80155e8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80155ec:	e7f6      	b.n	80155dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80155ee:	fa32 fa01 	lsrs.w	sl, r2, r1
 80155f2:	d107      	bne.n	8015604 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80155f4:	fb09 f602 	mul.w	r6, r9, r2
 80155f8:	fbb6 f0f4 	udiv	r0, r6, r4
 80155fc:	fb04 6610 	mls	r6, r4, r0, r6
 8015600:	603e      	str	r6, [r7, #0]
 8015602:	e7eb      	b.n	80155dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8015604:	2601      	movs	r6, #1
 8015606:	408e      	lsls	r6, r1
 8015608:	3e01      	subs	r6, #1
 801560a:	4016      	ands	r6, r2
 801560c:	fa09 fb01 	lsl.w	fp, r9, r1
 8015610:	4630      	mov	r0, r6
 8015612:	fbbb f3f4 	udiv	r3, fp, r4
 8015616:	9302      	str	r3, [sp, #8]
 8015618:	fb0a f303 	mul.w	r3, sl, r3
 801561c:	9303      	str	r3, [sp, #12]
 801561e:	f7ff ffad 	bl	801557c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015622:	464a      	mov	r2, r9
 8015624:	460b      	mov	r3, r1
 8015626:	e9cd 4700 	strd	r4, r7, [sp]
 801562a:	4601      	mov	r1, r0
 801562c:	4630      	mov	r0, r6
 801562e:	f7ff ffc3 	bl	80155b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015632:	9b02      	ldr	r3, [sp, #8]
 8015634:	fb04 bb13 	mls	fp, r4, r3, fp
 8015638:	4606      	mov	r6, r0
 801563a:	4658      	mov	r0, fp
 801563c:	eb05 0108 	add.w	r1, r5, r8
 8015640:	f7ff ff9c 	bl	801557c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015644:	ab05      	add	r3, sp, #20
 8015646:	e9cd 4300 	strd	r4, r3, [sp]
 801564a:	465a      	mov	r2, fp
 801564c:	4603      	mov	r3, r0
 801564e:	4650      	mov	r0, sl
 8015650:	f7ff ffb2 	bl	80155b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015654:	6839      	ldr	r1, [r7, #0]
 8015656:	9a05      	ldr	r2, [sp, #20]
 8015658:	9b03      	ldr	r3, [sp, #12]
 801565a:	4411      	add	r1, r2
 801565c:	fbb1 f2f4 	udiv	r2, r1, r4
 8015660:	18d3      	adds	r3, r2, r3
 8015662:	441e      	add	r6, r3
 8015664:	fb04 1412 	mls	r4, r4, r2, r1
 8015668:	4430      	add	r0, r6
 801566a:	603c      	str	r4, [r7, #0]
 801566c:	e7b6      	b.n	80155dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801566e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801566e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015672:	b085      	sub	sp, #20
 8015674:	f1b0 0900 	subs.w	r9, r0, #0
 8015678:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801567a:	461d      	mov	r5, r3
 801567c:	bfbf      	itttt	lt
 801567e:	6823      	ldrlt	r3, [r4, #0]
 8015680:	425b      	neglt	r3, r3
 8015682:	f1c9 0900 	rsblt	r9, r9, #0
 8015686:	6023      	strlt	r3, [r4, #0]
 8015688:	bfb4      	ite	lt
 801568a:	f04f 36ff 	movlt.w	r6, #4294967295
 801568e:	2601      	movge	r6, #1
 8015690:	2a00      	cmp	r2, #0
 8015692:	4617      	mov	r7, r2
 8015694:	da04      	bge.n	80156a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015696:	6823      	ldr	r3, [r4, #0]
 8015698:	425b      	negs	r3, r3
 801569a:	4257      	negs	r7, r2
 801569c:	4276      	negs	r6, r6
 801569e:	6023      	str	r3, [r4, #0]
 80156a0:	2d00      	cmp	r5, #0
 80156a2:	4638      	mov	r0, r7
 80156a4:	bfba      	itte	lt
 80156a6:	426d      	neglt	r5, r5
 80156a8:	f04f 38ff 	movlt.w	r8, #4294967295
 80156ac:	f04f 0801 	movge.w	r8, #1
 80156b0:	f7ff ff64 	bl	801557c <_ZN8touchgfx16TouchCalibration4clzuEm>
 80156b4:	ab03      	add	r3, sp, #12
 80156b6:	e9cd 5300 	strd	r5, r3, [sp]
 80156ba:	463a      	mov	r2, r7
 80156bc:	4603      	mov	r3, r0
 80156be:	4648      	mov	r0, r9
 80156c0:	f7ff ff7a 	bl	80155b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80156c4:	6823      	ldr	r3, [r4, #0]
 80156c6:	9a03      	ldr	r2, [sp, #12]
 80156c8:	4546      	cmp	r6, r8
 80156ca:	441a      	add	r2, r3
 80156cc:	fb92 f3f5 	sdiv	r3, r2, r5
 80156d0:	4418      	add	r0, r3
 80156d2:	bf18      	it	ne
 80156d4:	4240      	negne	r0, r0
 80156d6:	fb05 2313 	mls	r3, r5, r3, r2
 80156da:	1c72      	adds	r2, r6, #1
 80156dc:	6023      	str	r3, [r4, #0]
 80156de:	d105      	bne.n	80156ec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80156e0:	2b00      	cmp	r3, #0
 80156e2:	f1c3 0200 	rsb	r2, r3, #0
 80156e6:	db0b      	blt.n	8015700 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80156e8:	6022      	str	r2, [r4, #0]
 80156ea:	e006      	b.n	80156fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80156ec:	2e01      	cmp	r6, #1
 80156ee:	d104      	bne.n	80156fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80156f0:	2b00      	cmp	r3, #0
 80156f2:	da02      	bge.n	80156fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80156f4:	442b      	add	r3, r5
 80156f6:	3801      	subs	r0, #1
 80156f8:	6023      	str	r3, [r4, #0]
 80156fa:	b005      	add	sp, #20
 80156fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015700:	3801      	subs	r0, #1
 8015702:	1b52      	subs	r2, r2, r5
 8015704:	e7f0      	b.n	80156e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08015708 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015708:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801570c:	4c1c      	ldr	r4, [pc, #112]	; (8015780 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801570e:	6807      	ldr	r7, [r0, #0]
 8015710:	69a3      	ldr	r3, [r4, #24]
 8015712:	4605      	mov	r5, r0
 8015714:	b92b      	cbnz	r3, 8015722 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015716:	6840      	ldr	r0, [r0, #4]
 8015718:	e9c5 7000 	strd	r7, r0, [r5]
 801571c:	b004      	add	sp, #16
 801571e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015722:	68a2      	ldr	r2, [r4, #8]
 8015724:	6820      	ldr	r0, [r4, #0]
 8015726:	ae04      	add	r6, sp, #16
 8015728:	f04f 0802 	mov.w	r8, #2
 801572c:	fb93 f1f8 	sdiv	r1, r3, r8
 8015730:	440a      	add	r2, r1
 8015732:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015736:	69e1      	ldr	r1, [r4, #28]
 8015738:	9600      	str	r6, [sp, #0]
 801573a:	463a      	mov	r2, r7
 801573c:	f7ff ff97 	bl	801566e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015740:	69a3      	ldr	r3, [r4, #24]
 8015742:	686a      	ldr	r2, [r5, #4]
 8015744:	6a21      	ldr	r1, [r4, #32]
 8015746:	9600      	str	r6, [sp, #0]
 8015748:	4607      	mov	r7, r0
 801574a:	6860      	ldr	r0, [r4, #4]
 801574c:	f7ff ff8f 	bl	801566e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015750:	6962      	ldr	r2, [r4, #20]
 8015752:	69a3      	ldr	r3, [r4, #24]
 8015754:	fb93 f8f8 	sdiv	r8, r3, r8
 8015758:	4442      	add	r2, r8
 801575a:	9203      	str	r2, [sp, #12]
 801575c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801575e:	682a      	ldr	r2, [r5, #0]
 8015760:	9600      	str	r6, [sp, #0]
 8015762:	4407      	add	r7, r0
 8015764:	68e0      	ldr	r0, [r4, #12]
 8015766:	f7ff ff82 	bl	801566e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801576a:	9600      	str	r6, [sp, #0]
 801576c:	4680      	mov	r8, r0
 801576e:	69a3      	ldr	r3, [r4, #24]
 8015770:	686a      	ldr	r2, [r5, #4]
 8015772:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015774:	6920      	ldr	r0, [r4, #16]
 8015776:	f7ff ff7a 	bl	801566e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801577a:	4440      	add	r0, r8
 801577c:	e7cc      	b.n	8015718 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801577e:	bf00      	nop
 8015780:	200279bc 	.word	0x200279bc

08015784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015784:	4b07      	ldr	r3, [pc, #28]	; (80157a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015786:	781b      	ldrb	r3, [r3, #0]
 8015788:	2b01      	cmp	r3, #1
 801578a:	d109      	bne.n	80157a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801578c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015790:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015794:	8003      	strh	r3, [r0, #0]
 8015796:	4b04      	ldr	r3, [pc, #16]	; (80157a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015798:	881b      	ldrh	r3, [r3, #0]
 801579a:	3b01      	subs	r3, #1
 801579c:	1a9b      	subs	r3, r3, r2
 801579e:	800b      	strh	r3, [r1, #0]
 80157a0:	4770      	bx	lr
 80157a2:	bf00      	nop
 80157a4:	200279a8 	.word	0x200279a8
 80157a8:	200279ac 	.word	0x200279ac

080157ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80157ac:	b510      	push	{r4, lr}
 80157ae:	4b07      	ldr	r3, [pc, #28]	; (80157cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80157b0:	781b      	ldrb	r3, [r3, #0]
 80157b2:	2b01      	cmp	r3, #1
 80157b4:	d108      	bne.n	80157c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80157b6:	4b06      	ldr	r3, [pc, #24]	; (80157d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80157b8:	880c      	ldrh	r4, [r1, #0]
 80157ba:	881b      	ldrh	r3, [r3, #0]
 80157bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80157c0:	3b01      	subs	r3, #1
 80157c2:	1b1b      	subs	r3, r3, r4
 80157c4:	8003      	strh	r3, [r0, #0]
 80157c6:	800a      	strh	r2, [r1, #0]
 80157c8:	bd10      	pop	{r4, pc}
 80157ca:	bf00      	nop
 80157cc:	200279a8 	.word	0x200279a8
 80157d0:	200279ac 	.word	0x200279ac

080157d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80157d4:	b510      	push	{r4, lr}
 80157d6:	4b0a      	ldr	r3, [pc, #40]	; (8015800 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80157d8:	781b      	ldrb	r3, [r3, #0]
 80157da:	2b01      	cmp	r3, #1
 80157dc:	d10e      	bne.n	80157fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80157de:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80157e2:	8843      	ldrh	r3, [r0, #2]
 80157e4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80157e8:	8044      	strh	r4, [r0, #2]
 80157ea:	18ca      	adds	r2, r1, r3
 80157ec:	4b05      	ldr	r3, [pc, #20]	; (8015804 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80157ee:	881b      	ldrh	r3, [r3, #0]
 80157f0:	1a9b      	subs	r3, r3, r2
 80157f2:	8003      	strh	r3, [r0, #0]
 80157f4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80157f8:	80c3      	strh	r3, [r0, #6]
 80157fa:	8081      	strh	r1, [r0, #4]
 80157fc:	bd10      	pop	{r4, pc}
 80157fe:	bf00      	nop
 8015800:	200279a8 	.word	0x200279a8
 8015804:	200279ac 	.word	0x200279ac

08015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015808:	4b08      	ldr	r3, [pc, #32]	; (801582c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801580a:	781b      	ldrb	r3, [r3, #0]
 801580c:	2b01      	cmp	r3, #1
 801580e:	d10c      	bne.n	801582a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015810:	8803      	ldrh	r3, [r0, #0]
 8015812:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015816:	8842      	ldrh	r2, [r0, #2]
 8015818:	8002      	strh	r2, [r0, #0]
 801581a:	185a      	adds	r2, r3, r1
 801581c:	4b04      	ldr	r3, [pc, #16]	; (8015830 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801581e:	881b      	ldrh	r3, [r3, #0]
 8015820:	1a9b      	subs	r3, r3, r2
 8015822:	8043      	strh	r3, [r0, #2]
 8015824:	88c3      	ldrh	r3, [r0, #6]
 8015826:	8083      	strh	r3, [r0, #4]
 8015828:	80c1      	strh	r1, [r0, #6]
 801582a:	4770      	bx	lr
 801582c:	200279a8 	.word	0x200279a8
 8015830:	200279ac 	.word	0x200279ac

08015834 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015834:	b510      	push	{r4, lr}
 8015836:	4b07      	ldr	r3, [pc, #28]	; (8015854 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015838:	781b      	ldrb	r3, [r3, #0]
 801583a:	2b01      	cmp	r3, #1
 801583c:	d108      	bne.n	8015850 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801583e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015842:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015846:	8003      	strh	r3, [r0, #0]
 8015848:	8893      	ldrh	r3, [r2, #4]
 801584a:	3b01      	subs	r3, #1
 801584c:	1b1b      	subs	r3, r3, r4
 801584e:	800b      	strh	r3, [r1, #0]
 8015850:	bd10      	pop	{r4, pc}
 8015852:	bf00      	nop
 8015854:	200279a8 	.word	0x200279a8

08015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015858:	b510      	push	{r4, lr}
 801585a:	4b0a      	ldr	r3, [pc, #40]	; (8015884 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801585c:	781b      	ldrb	r3, [r3, #0]
 801585e:	2b01      	cmp	r3, #1
 8015860:	460a      	mov	r2, r1
 8015862:	d10d      	bne.n	8015880 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015864:	8881      	ldrh	r1, [r0, #4]
 8015866:	8803      	ldrh	r3, [r0, #0]
 8015868:	440b      	add	r3, r1
 801586a:	4601      	mov	r1, r0
 801586c:	3b01      	subs	r3, #1
 801586e:	f821 3b02 	strh.w	r3, [r1], #2
 8015872:	f7ff ffdf 	bl	8015834 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015876:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801587a:	88c2      	ldrh	r2, [r0, #6]
 801587c:	8082      	strh	r2, [r0, #4]
 801587e:	80c3      	strh	r3, [r0, #6]
 8015880:	bd10      	pop	{r4, pc}
 8015882:	bf00      	nop
 8015884:	200279a8 	.word	0x200279a8

08015888 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015888:	4b06      	ldr	r3, [pc, #24]	; (80158a4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801588a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801588e:	4b06      	ldr	r3, [pc, #24]	; (80158a8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015890:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8015894:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015898:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 801589c:	2100      	movs	r1, #0
 801589e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80158a2:	4770      	bx	lr
 80158a4:	200279a4 	.word	0x200279a4
 80158a8:	200279a6 	.word	0x200279a6

080158ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80158ac:	4b03      	ldr	r3, [pc, #12]	; (80158bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80158ae:	6818      	ldr	r0, [r3, #0]
 80158b0:	b110      	cbz	r0, 80158b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80158b2:	6803      	ldr	r3, [r0, #0]
 80158b4:	699b      	ldr	r3, [r3, #24]
 80158b6:	4718      	bx	r3
 80158b8:	4770      	bx	lr
 80158ba:	bf00      	nop
 80158bc:	200279ec 	.word	0x200279ec

080158c0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80158c0:	4770      	bx	lr
	...

080158c4 <_ZN8touchgfx11Application4drawEv>:
 80158c4:	b507      	push	{r0, r1, r2, lr}
 80158c6:	4b09      	ldr	r3, [pc, #36]	; (80158ec <_ZN8touchgfx11Application4drawEv+0x28>)
 80158c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158cc:	4b08      	ldr	r3, [pc, #32]	; (80158f0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80158ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80158d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80158d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80158da:	6803      	ldr	r3, [r0, #0]
 80158dc:	2100      	movs	r1, #0
 80158de:	9100      	str	r1, [sp, #0]
 80158e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80158e2:	4669      	mov	r1, sp
 80158e4:	4798      	blx	r3
 80158e6:	b003      	add	sp, #12
 80158e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80158ec:	200279a4 	.word	0x200279a4
 80158f0:	200279a6 	.word	0x200279a6

080158f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80158f4:	4b03      	ldr	r3, [pc, #12]	; (8015904 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80158f6:	6818      	ldr	r0, [r3, #0]
 80158f8:	b110      	cbz	r0, 8015900 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80158fa:	6803      	ldr	r3, [r0, #0]
 80158fc:	69db      	ldr	r3, [r3, #28]
 80158fe:	4718      	bx	r3
 8015900:	4770      	bx	lr
 8015902:	bf00      	nop
 8015904:	200279ec 	.word	0x200279ec

08015908 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015908:	4b03      	ldr	r3, [pc, #12]	; (8015918 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801590a:	6818      	ldr	r0, [r3, #0]
 801590c:	b110      	cbz	r0, 8015914 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801590e:	6803      	ldr	r3, [r0, #0]
 8015910:	6a1b      	ldr	r3, [r3, #32]
 8015912:	4718      	bx	r3
 8015914:	4770      	bx	lr
 8015916:	bf00      	nop
 8015918:	200279ec 	.word	0x200279ec

0801591c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801591c:	4b03      	ldr	r3, [pc, #12]	; (801592c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801591e:	6818      	ldr	r0, [r3, #0]
 8015920:	b110      	cbz	r0, 8015928 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015922:	6803      	ldr	r3, [r0, #0]
 8015924:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015926:	4718      	bx	r3
 8015928:	4770      	bx	lr
 801592a:	bf00      	nop
 801592c:	200279ec 	.word	0x200279ec

08015930 <_ZN8touchgfx11ApplicationD1Ev>:
 8015930:	4770      	bx	lr

08015932 <_ZN8touchgfx11ApplicationD0Ev>:
 8015932:	b510      	push	{r4, lr}
 8015934:	f44f 719c 	mov.w	r1, #312	; 0x138
 8015938:	4604      	mov	r4, r0
 801593a:	f00f ff13 	bl	8025764 <_ZdlPvj>
 801593e:	4620      	mov	r0, r4
 8015940:	bd10      	pop	{r4, pc}
	...

08015944 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015944:	b570      	push	{r4, r5, r6, lr}
 8015946:	4d38      	ldr	r5, [pc, #224]	; (8015a28 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 8015948:	4604      	mov	r4, r0
 801594a:	6828      	ldr	r0, [r5, #0]
 801594c:	b140      	cbz	r0, 8015960 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801594e:	7a03      	ldrb	r3, [r0, #8]
 8015950:	b933      	cbnz	r3, 8015960 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015952:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8015956:	6803      	ldr	r3, [r0, #0]
 8015958:	689b      	ldr	r3, [r3, #8]
 801595a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801595e:	4718      	bx	r3
 8015960:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 8015964:	b97b      	cbnz	r3, 8015986 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015966:	b170      	cbz	r0, 8015986 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015968:	7a03      	ldrb	r3, [r0, #8]
 801596a:	b163      	cbz	r3, 8015986 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801596c:	4b2f      	ldr	r3, [pc, #188]	; (8015a2c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 801596e:	6818      	ldr	r0, [r3, #0]
 8015970:	b110      	cbz	r0, 8015978 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015972:	6803      	ldr	r3, [r0, #0]
 8015974:	691b      	ldr	r3, [r3, #16]
 8015976:	4798      	blx	r3
 8015978:	6828      	ldr	r0, [r5, #0]
 801597a:	6803      	ldr	r3, [r0, #0]
 801597c:	68db      	ldr	r3, [r3, #12]
 801597e:	4798      	blx	r3
 8015980:	2301      	movs	r3, #1
 8015982:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8015986:	2500      	movs	r5, #0
 8015988:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 801598c:	42a8      	cmp	r0, r5
 801598e:	dd0c      	ble.n	80159aa <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8015990:	1963      	adds	r3, r4, r5
 8015992:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8015996:	b132      	cbz	r2, 80159a6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8015998:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 801599c:	4413      	add	r3, r2
 801599e:	6858      	ldr	r0, [r3, #4]
 80159a0:	6803      	ldr	r3, [r0, #0]
 80159a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80159a4:	4798      	blx	r3
 80159a6:	3501      	adds	r5, #1
 80159a8:	e7ee      	b.n	8015988 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80159aa:	2300      	movs	r3, #0
 80159ac:	461a      	mov	r2, r3
 80159ae:	4298      	cmp	r0, r3
 80159b0:	d10f      	bne.n	80159d2 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 80159b2:	1d25      	adds	r5, r4, #4
 80159b4:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 80159b8:	4291      	cmp	r1, r2
 80159ba:	dd2d      	ble.n	8015a18 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 80159bc:	1e48      	subs	r0, r1, #1
 80159be:	b280      	uxth	r0, r0
 80159c0:	4288      	cmp	r0, r1
 80159c2:	d31a      	bcc.n	80159fa <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 80159c4:	4b1a      	ldr	r3, [pc, #104]	; (8015a30 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 80159c6:	4a1b      	ldr	r2, [pc, #108]	; (8015a34 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 80159c8:	481b      	ldr	r0, [pc, #108]	; (8015a38 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 80159ca:	f240 11a9 	movw	r1, #425	; 0x1a9
 80159ce:	f00f fef7 	bl	80257c0 <__assert_func>
 80159d2:	18e1      	adds	r1, r4, r3
 80159d4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80159d8:	b16d      	cbz	r5, 80159f6 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 80159da:	429a      	cmp	r2, r3
 80159dc:	d00a      	beq.n	80159f4 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 80159de:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80159e2:	4431      	add	r1, r6
 80159e4:	684e      	ldr	r6, [r1, #4]
 80159e6:	b291      	uxth	r1, r2
 80159e8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80159ec:	604e      	str	r6, [r1, #4]
 80159ee:	18a1      	adds	r1, r4, r2
 80159f0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 80159f4:	3201      	adds	r2, #1
 80159f6:	3301      	adds	r3, #1
 80159f8:	e7d9      	b.n	80159ae <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 80159fa:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 80159fe:	3304      	adds	r3, #4
 8015a00:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8015a04:	428b      	cmp	r3, r1
 8015a06:	d004      	beq.n	8015a12 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 8015a08:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8015a0c:	f843 6c04 	str.w	r6, [r3, #-4]
 8015a10:	e7f8      	b.n	8015a04 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 8015a12:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 8015a16:	e7cd      	b.n	80159b4 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 8015a18:	4b04      	ldr	r3, [pc, #16]	; (8015a2c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8015a1a:	6818      	ldr	r0, [r3, #0]
 8015a1c:	b110      	cbz	r0, 8015a24 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 8015a1e:	6803      	ldr	r3, [r0, #0]
 8015a20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015a22:	e79a      	b.n	801595a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015a24:	bd70      	pop	{r4, r5, r6, pc}
 8015a26:	bf00      	nop
 8015a28:	200279f0 	.word	0x200279f0
 8015a2c:	200279ec 	.word	0x200279ec
 8015a30:	0802a2f8 	.word	0x0802a2f8
 8015a34:	0802a551 	.word	0x0802a551
 8015a38:	0802a306 	.word	0x0802a306

08015a3c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015a3c:	b570      	push	{r4, r5, r6, lr}
 8015a3e:	4606      	mov	r6, r0
 8015a40:	460c      	mov	r4, r1
 8015a42:	b929      	cbnz	r1, 8015a50 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8015a44:	4b0c      	ldr	r3, [pc, #48]	; (8015a78 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 8015a46:	4a0d      	ldr	r2, [pc, #52]	; (8015a7c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 8015a48:	480d      	ldr	r0, [pc, #52]	; (8015a80 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 8015a4a:	2167      	movs	r1, #103	; 0x67
 8015a4c:	f00f feb8 	bl	80257c0 <__assert_func>
 8015a50:	4d0c      	ldr	r5, [pc, #48]	; (8015a84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8015a52:	2300      	movs	r3, #0
 8015a54:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8015a58:	6828      	ldr	r0, [r5, #0]
 8015a5a:	b110      	cbz	r0, 8015a62 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 8015a5c:	6803      	ldr	r3, [r0, #0]
 8015a5e:	695b      	ldr	r3, [r3, #20]
 8015a60:	4798      	blx	r3
 8015a62:	602c      	str	r4, [r5, #0]
 8015a64:	6823      	ldr	r3, [r4, #0]
 8015a66:	4620      	mov	r0, r4
 8015a68:	68db      	ldr	r3, [r3, #12]
 8015a6a:	4798      	blx	r3
 8015a6c:	6833      	ldr	r3, [r6, #0]
 8015a6e:	4630      	mov	r0, r6
 8015a70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015a72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a76:	4718      	bx	r3
 8015a78:	0802a2c4 	.word	0x0802a2c4
 8015a7c:	0802a3cc 	.word	0x0802a3cc
 8015a80:	0802a2ce 	.word	0x0802a2ce
 8015a84:	200279ec 	.word	0x200279ec

08015a88 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015a88:	b510      	push	{r4, lr}
 8015a8a:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015a8e:	888a      	ldrh	r2, [r1, #4]
 8015a90:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015a94:	4422      	add	r2, r4
 8015a96:	b212      	sxth	r2, r2
 8015a98:	4293      	cmp	r3, r2
 8015a9a:	da15      	bge.n	8015ac8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015a9c:	8882      	ldrh	r2, [r0, #4]
 8015a9e:	4413      	add	r3, r2
 8015aa0:	b21b      	sxth	r3, r3
 8015aa2:	429c      	cmp	r4, r3
 8015aa4:	da10      	bge.n	8015ac8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015aa6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015aaa:	88c9      	ldrh	r1, [r1, #6]
 8015aac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015ab0:	4419      	add	r1, r3
 8015ab2:	b209      	sxth	r1, r1
 8015ab4:	428a      	cmp	r2, r1
 8015ab6:	da07      	bge.n	8015ac8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015ab8:	88c0      	ldrh	r0, [r0, #6]
 8015aba:	4410      	add	r0, r2
 8015abc:	b200      	sxth	r0, r0
 8015abe:	4283      	cmp	r3, r0
 8015ac0:	bfac      	ite	ge
 8015ac2:	2000      	movge	r0, #0
 8015ac4:	2001      	movlt	r0, #1
 8015ac6:	bd10      	pop	{r4, pc}
 8015ac8:	2000      	movs	r0, #0
 8015aca:	e7fc      	b.n	8015ac6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015acc <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015acc:	b570      	push	{r4, r5, r6, lr}
 8015ace:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015ad2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015ad6:	42ac      	cmp	r4, r5
 8015ad8:	db18      	blt.n	8015b0c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 8015ada:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8015ade:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015ae2:	429a      	cmp	r2, r3
 8015ae4:	db12      	blt.n	8015b0c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 8015ae6:	8886      	ldrh	r6, [r0, #4]
 8015ae8:	4435      	add	r5, r6
 8015aea:	888e      	ldrh	r6, [r1, #4]
 8015aec:	4434      	add	r4, r6
 8015aee:	b22d      	sxth	r5, r5
 8015af0:	b224      	sxth	r4, r4
 8015af2:	42a5      	cmp	r5, r4
 8015af4:	db0a      	blt.n	8015b0c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 8015af6:	88c0      	ldrh	r0, [r0, #6]
 8015af8:	4418      	add	r0, r3
 8015afa:	88cb      	ldrh	r3, [r1, #6]
 8015afc:	441a      	add	r2, r3
 8015afe:	b200      	sxth	r0, r0
 8015b00:	b212      	sxth	r2, r2
 8015b02:	4290      	cmp	r0, r2
 8015b04:	bfb4      	ite	lt
 8015b06:	2000      	movlt	r0, #0
 8015b08:	2001      	movge	r0, #1
 8015b0a:	bd70      	pop	{r4, r5, r6, pc}
 8015b0c:	2000      	movs	r0, #0
 8015b0e:	e7fc      	b.n	8015b0a <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

08015b10 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b12:	4604      	mov	r4, r0
 8015b14:	4608      	mov	r0, r1
 8015b16:	460d      	mov	r5, r1
 8015b18:	f7fc f841 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b1c:	b978      	cbnz	r0, 8015b3e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015b1e:	4620      	mov	r0, r4
 8015b20:	f7fc f83d 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b24:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015b28:	b150      	cbz	r0, 8015b40 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015b2a:	8026      	strh	r6, [r4, #0]
 8015b2c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015b30:	8063      	strh	r3, [r4, #2]
 8015b32:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015b36:	80a3      	strh	r3, [r4, #4]
 8015b38:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015b3c:	80e3      	strh	r3, [r4, #6]
 8015b3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015b40:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015b44:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015b48:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015b4c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015b50:	88ed      	ldrh	r5, [r5, #6]
 8015b52:	42b1      	cmp	r1, r6
 8015b54:	460f      	mov	r7, r1
 8015b56:	bfa8      	it	ge
 8015b58:	4637      	movge	r7, r6
 8015b5a:	4293      	cmp	r3, r2
 8015b5c:	4618      	mov	r0, r3
 8015b5e:	4466      	add	r6, ip
 8015b60:	bfa8      	it	ge
 8015b62:	4610      	movge	r0, r2
 8015b64:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015b68:	8027      	strh	r7, [r4, #0]
 8015b6a:	442a      	add	r2, r5
 8015b6c:	88e5      	ldrh	r5, [r4, #6]
 8015b6e:	8060      	strh	r0, [r4, #2]
 8015b70:	4461      	add	r1, ip
 8015b72:	442b      	add	r3, r5
 8015b74:	b236      	sxth	r6, r6
 8015b76:	b209      	sxth	r1, r1
 8015b78:	b212      	sxth	r2, r2
 8015b7a:	b21b      	sxth	r3, r3
 8015b7c:	428e      	cmp	r6, r1
 8015b7e:	bfac      	ite	ge
 8015b80:	ebc7 0106 	rsbge	r1, r7, r6
 8015b84:	ebc7 0101 	rsblt	r1, r7, r1
 8015b88:	429a      	cmp	r2, r3
 8015b8a:	bfac      	ite	ge
 8015b8c:	ebc0 0202 	rsbge	r2, r0, r2
 8015b90:	ebc0 0203 	rsblt	r2, r0, r3
 8015b94:	80a1      	strh	r1, [r4, #4]
 8015b96:	80e2      	strh	r2, [r4, #6]
 8015b98:	e7d1      	b.n	8015b3e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015b9c <_ZN8touchgfx11Application11getInstanceEv>:
 8015b9c:	4b01      	ldr	r3, [pc, #4]	; (8015ba4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015b9e:	6818      	ldr	r0, [r3, #0]
 8015ba0:	4770      	bx	lr
 8015ba2:	bf00      	nop
 8015ba4:	200279fc 	.word	0x200279fc

08015ba8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8015ba8:	b570      	push	{r4, r5, r6, lr}
 8015baa:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 8015bae:	1d04      	adds	r4, r0, #4
 8015bb0:	2200      	movs	r2, #0
 8015bb2:	b295      	uxth	r5, r2
 8015bb4:	42ab      	cmp	r3, r5
 8015bb6:	d90f      	bls.n	8015bd8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8015bb8:	f854 6b04 	ldr.w	r6, [r4], #4
 8015bbc:	428e      	cmp	r6, r1
 8015bbe:	4615      	mov	r5, r2
 8015bc0:	f102 0201 	add.w	r2, r2, #1
 8015bc4:	d1f5      	bne.n	8015bb2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 8015bc6:	4428      	add	r0, r5
 8015bc8:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8015bcc:	2bff      	cmp	r3, #255	; 0xff
 8015bce:	d002      	beq.n	8015bd6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8015bd0:	3301      	adds	r3, #1
 8015bd2:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 8015bd6:	bd70      	pop	{r4, r5, r6, pc}
 8015bd8:	2b20      	cmp	r3, #32
 8015bda:	d106      	bne.n	8015bea <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 8015bdc:	4b08      	ldr	r3, [pc, #32]	; (8015c00 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 8015bde:	4a09      	ldr	r2, [pc, #36]	; (8015c04 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 8015be0:	4809      	ldr	r0, [pc, #36]	; (8015c08 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 8015be2:	f240 215f 	movw	r1, #607	; 0x25f
 8015be6:	f00f fdeb 	bl	80257c0 <__assert_func>
 8015bea:	18c2      	adds	r2, r0, r3
 8015bec:	2401      	movs	r4, #1
 8015bee:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 8015bf2:	191a      	adds	r2, r3, r4
 8015bf4:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 8015bf8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8015bfc:	6041      	str	r1, [r0, #4]
 8015bfe:	e7ea      	b.n	8015bd6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8015c00:	0802a32f 	.word	0x0802a32f
 8015c04:	0802a410 	.word	0x0802a410
 8015c08:	0802a2ce 	.word	0x0802a2ce

08015c0c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 8015c0c:	b570      	push	{r4, r5, r6, lr}
 8015c0e:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 8015c12:	1d04      	adds	r4, r0, #4
 8015c14:	2300      	movs	r3, #0
 8015c16:	b29a      	uxth	r2, r3
 8015c18:	4296      	cmp	r6, r2
 8015c1a:	d90a      	bls.n	8015c32 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 8015c1c:	f854 2b04 	ldr.w	r2, [r4], #4
 8015c20:	428a      	cmp	r2, r1
 8015c22:	d107      	bne.n	8015c34 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8015c24:	18c5      	adds	r5, r0, r3
 8015c26:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 8015c2a:	b11a      	cbz	r2, 8015c34 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8015c2c:	3a01      	subs	r2, #1
 8015c2e:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 8015c32:	bd70      	pop	{r4, r5, r6, pc}
 8015c34:	3301      	adds	r3, #1
 8015c36:	e7ee      	b.n	8015c16 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08015c38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8015c38:	2300      	movs	r3, #0
 8015c3a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8015c3e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8015c42:	30a8      	adds	r0, #168	; 0xa8
 8015c44:	f802 3b01 	strb.w	r3, [r2], #1
 8015c48:	4282      	cmp	r2, r0
 8015c4a:	d1fb      	bne.n	8015c44 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8015c4c:	4770      	bx	lr

08015c4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015c4e:	4603      	mov	r3, r0
 8015c50:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015c54:	2200      	movs	r2, #0
 8015c56:	801a      	strh	r2, [r3, #0]
 8015c58:	805a      	strh	r2, [r3, #2]
 8015c5a:	809a      	strh	r2, [r3, #4]
 8015c5c:	80da      	strh	r2, [r3, #6]
 8015c5e:	3308      	adds	r3, #8
 8015c60:	428b      	cmp	r3, r1
 8015c62:	d1f8      	bne.n	8015c56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015c64:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015c68:	4770      	bx	lr
	...

08015c6c <_ZN8touchgfx11ApplicationC1Ev>:
 8015c6c:	b570      	push	{r4, r5, r6, lr}
 8015c6e:	4b1a      	ldr	r3, [pc, #104]	; (8015cd8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8015c70:	6003      	str	r3, [r0, #0]
 8015c72:	2500      	movs	r5, #0
 8015c74:	4604      	mov	r4, r0
 8015c76:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8015c7a:	30a8      	adds	r0, #168	; 0xa8
 8015c7c:	f7ff ffe7 	bl	8015c4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015c80:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8015c84:	f7ff ffe3 	bl	8015c4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015c88:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8015c8c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8015c90:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015c94:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015c98:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8015c9c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 8015ca0:	490e      	ldr	r1, [pc, #56]	; (8015cdc <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8015ca2:	480f      	ldr	r0, [pc, #60]	; (8015ce0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8015ca4:	4e0f      	ldr	r6, [pc, #60]	; (8015ce4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015ca6:	f00f fc31 	bl	802550c <CRC_Lock>
 8015caa:	4b0f      	ldr	r3, [pc, #60]	; (8015ce8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015cac:	b158      	cbz	r0, 8015cc6 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 8015cae:	801d      	strh	r5, [r3, #0]
 8015cb0:	4a0e      	ldr	r2, [pc, #56]	; (8015cec <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015cb2:	2300      	movs	r3, #0
 8015cb4:	6013      	str	r3, [r2, #0]
 8015cb6:	4a0e      	ldr	r2, [pc, #56]	; (8015cf0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015cb8:	6033      	str	r3, [r6, #0]
 8015cba:	4620      	mov	r0, r4
 8015cbc:	6013      	str	r3, [r2, #0]
 8015cbe:	f7ff ffbb 	bl	8015c38 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8015cc2:	4620      	mov	r0, r4
 8015cc4:	bd70      	pop	{r4, r5, r6, pc}
 8015cc6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015cca:	2002      	movs	r0, #2
 8015ccc:	801a      	strh	r2, [r3, #0]
 8015cce:	6030      	str	r0, [r6, #0]
 8015cd0:	f001 f9e2 	bl	8017098 <_ZN8touchgfx6Screen4drawEv>
 8015cd4:	e7ec      	b.n	8015cb0 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 8015cd6:	bf00      	nop
 8015cd8:	0802a390 	.word	0x0802a390
 8015cdc:	b5e8b5cd 	.word	0xb5e8b5cd
 8015ce0:	f407a5c2 	.word	0xf407a5c2
 8015ce4:	200279ec 	.word	0x200279ec
 8015ce8:	20000060 	.word	0x20000060
 8015cec:	200279fc 	.word	0x200279fc
 8015cf0:	200279f0 	.word	0x200279f0

08015cf4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015cf4:	b510      	push	{r4, lr}
 8015cf6:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015cfa:	428b      	cmp	r3, r1
 8015cfc:	d806      	bhi.n	8015d0c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8015cfe:	4b0b      	ldr	r3, [pc, #44]	; (8015d2c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8015d00:	4a0b      	ldr	r2, [pc, #44]	; (8015d30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 8015d02:	480c      	ldr	r0, [pc, #48]	; (8015d34 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 8015d04:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 8015d08:	f00f fd5a 	bl	80257c0 <__assert_func>
 8015d0c:	3b01      	subs	r3, #1
 8015d0e:	b29b      	uxth	r3, r3
 8015d10:	428b      	cmp	r3, r1
 8015d12:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015d16:	d908      	bls.n	8015d2a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 8015d18:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015d1c:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015d20:	681a      	ldr	r2, [r3, #0]
 8015d22:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015d26:	685a      	ldr	r2, [r3, #4]
 8015d28:	6062      	str	r2, [r4, #4]
 8015d2a:	bd10      	pop	{r4, pc}
 8015d2c:	0802a2f8 	.word	0x0802a2f8
 8015d30:	0802a455 	.word	0x0802a455
 8015d34:	0802a306 	.word	0x0802a306

08015d38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8015d38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015d3a:	466b      	mov	r3, sp
 8015d3c:	e883 0006 	stmia.w	r3, {r1, r2}
 8015d40:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8015d44:	2a07      	cmp	r2, #7
 8015d46:	4604      	mov	r4, r0
 8015d48:	d906      	bls.n	8015d58 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 8015d4a:	4b09      	ldr	r3, [pc, #36]	; (8015d70 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8015d4c:	4a09      	ldr	r2, [pc, #36]	; (8015d74 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8015d4e:	480a      	ldr	r0, [pc, #40]	; (8015d78 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8015d50:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8015d54:	f00f fd34 	bl	80257c0 <__assert_func>
 8015d58:	1c51      	adds	r1, r2, #1
 8015d5a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8015d5e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8015d62:	cb03      	ldmia	r3!, {r0, r1}
 8015d64:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 8015d68:	6069      	str	r1, [r5, #4]
 8015d6a:	b003      	add	sp, #12
 8015d6c:	bd30      	pop	{r4, r5, pc}
 8015d6e:	bf00      	nop
 8015d70:	0802a357 	.word	0x0802a357
 8015d74:	0802a4eb 	.word	0x0802a4eb
 8015d78:	0802a306 	.word	0x0802a306

08015d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d80:	b08d      	sub	sp, #52	; 0x34
 8015d82:	ac08      	add	r4, sp, #32
 8015d84:	4683      	mov	fp, r0
 8015d86:	4620      	mov	r0, r4
 8015d88:	e884 0006 	stmia.w	r4, {r1, r2}
 8015d8c:	f7fb ff07 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d90:	2800      	cmp	r0, #0
 8015d92:	d16a      	bne.n	8015e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8015d94:	9402      	str	r4, [sp, #8]
 8015d96:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8015d9a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8015d9e:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8015da2:	2400      	movs	r4, #0
 8015da4:	9301      	str	r3, [sp, #4]
 8015da6:	36a0      	adds	r6, #160	; 0xa0
 8015da8:	42a5      	cmp	r5, r4
 8015daa:	d00d      	beq.n	8015dc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 8015dac:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8015db0:	9802      	ldr	r0, [sp, #8]
 8015db2:	f7ff fe8b 	bl	8015acc <_ZNK8touchgfx4Rect8includesERKS0_>
 8015db6:	b128      	cbz	r0, 8015dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8015db8:	1e69      	subs	r1, r5, #1
 8015dba:	1b09      	subs	r1, r1, r4
 8015dbc:	b289      	uxth	r1, r1
 8015dbe:	9801      	ldr	r0, [sp, #4]
 8015dc0:	f7ff ff98 	bl	8015cf4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015dc4:	3401      	adds	r4, #1
 8015dc6:	e7ef      	b.n	8015da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015dc8:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8015dcc:	9703      	str	r7, [sp, #12]
 8015dce:	1e7b      	subs	r3, r7, #1
 8015dd0:	9300      	str	r3, [sp, #0]
 8015dd2:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8015dd6:	2400      	movs	r4, #0
 8015dd8:	4655      	mov	r5, sl
 8015dda:	9704      	str	r7, [sp, #16]
 8015ddc:	4626      	mov	r6, r4
 8015dde:	9b04      	ldr	r3, [sp, #16]
 8015de0:	2b00      	cmp	r3, #0
 8015de2:	d078      	beq.n	8015ed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 8015de4:	9902      	ldr	r1, [sp, #8]
 8015de6:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8015dea:	f7ff fe4d 	bl	8015a88 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015dee:	b360      	cbz	r0, 8015e4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8015df0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8015df4:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8015df8:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8015dfc:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8015e00:	45e6      	cmp	lr, ip
 8015e02:	db35      	blt.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 8015e04:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8015e08:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8015e0c:	4472      	add	r2, lr
 8015e0e:	4463      	add	r3, ip
 8015e10:	b212      	sxth	r2, r2
 8015e12:	b21b      	sxth	r3, r3
 8015e14:	429a      	cmp	r2, r3
 8015e16:	dc2b      	bgt.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 8015e18:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8015e1c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8015e20:	fa1f f288 	uxth.w	r2, r8
 8015e24:	4413      	add	r3, r2
 8015e26:	b29b      	uxth	r3, r3
 8015e28:	45c1      	cmp	r9, r8
 8015e2a:	fa0f fe83 	sxth.w	lr, r3
 8015e2e:	fa1f fc89 	uxth.w	ip, r9
 8015e32:	db0f      	blt.n	8015e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 8015e34:	eba3 030c 	sub.w	r3, r3, ip
 8015e38:	1ac9      	subs	r1, r1, r3
 8015e3a:	b209      	sxth	r1, r1
 8015e3c:	2900      	cmp	r1, #0
 8015e3e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8015e42:	dd12      	ble.n	8015e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8015e44:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8015e48:	4604      	mov	r4, r0
 8015e4a:	9b04      	ldr	r3, [sp, #16]
 8015e4c:	3b01      	subs	r3, #1
 8015e4e:	9304      	str	r3, [sp, #16]
 8015e50:	3d08      	subs	r5, #8
 8015e52:	e7c4      	b.n	8015dde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8015e54:	4461      	add	r1, ip
 8015e56:	b209      	sxth	r1, r1
 8015e58:	4571      	cmp	r1, lr
 8015e5a:	dc3a      	bgt.n	8015ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8015e5c:	eba2 020c 	sub.w	r2, r2, ip
 8015e60:	b212      	sxth	r2, r2
 8015e62:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8015e66:	2a00      	cmp	r2, #0
 8015e68:	dcee      	bgt.n	8015e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8015e6a:	b00d      	add	sp, #52	; 0x34
 8015e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e70:	45c1      	cmp	r9, r8
 8015e72:	db2e      	blt.n	8015ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8015e74:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8015e78:	4499      	add	r9, r3
 8015e7a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8015e7e:	4498      	add	r8, r3
 8015e80:	fa0f f989 	sxth.w	r9, r9
 8015e84:	fa0f f888 	sxth.w	r8, r8
 8015e88:	45c1      	cmp	r9, r8
 8015e8a:	dc22      	bgt.n	8015ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8015e8c:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8015e90:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8015e94:	fa1f f28c 	uxth.w	r2, ip
 8015e98:	4413      	add	r3, r2
 8015e9a:	b29b      	uxth	r3, r3
 8015e9c:	45e6      	cmp	lr, ip
 8015e9e:	fa1f f88e 	uxth.w	r8, lr
 8015ea2:	fa0f f983 	sxth.w	r9, r3
 8015ea6:	db0a      	blt.n	8015ebe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 8015ea8:	eba3 0308 	sub.w	r3, r3, r8
 8015eac:	1ac9      	subs	r1, r1, r3
 8015eae:	b209      	sxth	r1, r1
 8015eb0:	2900      	cmp	r1, #0
 8015eb2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8015eb6:	ddd8      	ble.n	8015e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8015eb8:	f8ad 9020 	strh.w	r9, [sp, #32]
 8015ebc:	e7c4      	b.n	8015e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8015ebe:	4441      	add	r1, r8
 8015ec0:	b209      	sxth	r1, r1
 8015ec2:	4549      	cmp	r1, r9
 8015ec4:	dc05      	bgt.n	8015ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8015ec6:	eba2 0208 	sub.w	r2, r2, r8
 8015eca:	b212      	sxth	r2, r2
 8015ecc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8015ed0:	e7c9      	b.n	8015e66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015ed2:	4606      	mov	r6, r0
 8015ed4:	e7b9      	b.n	8015e4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8015ed6:	2c00      	cmp	r4, #0
 8015ed8:	f47f af7d 	bne.w	8015dd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8015edc:	2e00      	cmp	r6, #0
 8015ede:	f000 81dd 	beq.w	801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8015ee2:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8015ee6:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8015eea:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8015eee:	b2b9      	uxth	r1, r7
 8015ef0:	9104      	str	r1, [sp, #16]
 8015ef2:	9804      	ldr	r0, [sp, #16]
 8015ef4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8015ef8:	4401      	add	r1, r0
 8015efa:	b2b3      	uxth	r3, r6
 8015efc:	b289      	uxth	r1, r1
 8015efe:	441a      	add	r2, r3
 8015f00:	9105      	str	r1, [sp, #20]
 8015f02:	b292      	uxth	r2, r2
 8015f04:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8015f08:	fa0f f882 	sxth.w	r8, r2
 8015f0c:	4655      	mov	r5, sl
 8015f0e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8015f12:	9b03      	ldr	r3, [sp, #12]
 8015f14:	2b00      	cmp	r3, #0
 8015f16:	d054      	beq.n	8015fc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8015f18:	9902      	ldr	r1, [sp, #8]
 8015f1a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8015f1e:	f7ff fdb3 	bl	8015a88 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f22:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015f26:	b1d8      	cbz	r0, 8015f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8015f28:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8015f2c:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8015f30:	4576      	cmp	r6, lr
 8015f32:	dc26      	bgt.n	8015f82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015f34:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8015f38:	44f4      	add	ip, lr
 8015f3a:	fa0f fc8c 	sxth.w	ip, ip
 8015f3e:	45e0      	cmp	r8, ip
 8015f40:	db1f      	blt.n	8015f82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015f42:	428f      	cmp	r7, r1
 8015f44:	fa1f fc81 	uxth.w	ip, r1
 8015f48:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8015f4c:	dc0f      	bgt.n	8015f6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8015f4e:	9805      	ldr	r0, [sp, #20]
 8015f50:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8015f54:	eba0 0c0c 	sub.w	ip, r0, ip
 8015f58:	eba1 010c 	sub.w	r1, r1, ip
 8015f5c:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8015f60:	4620      	mov	r0, r4
 8015f62:	9903      	ldr	r1, [sp, #12]
 8015f64:	3901      	subs	r1, #1
 8015f66:	9103      	str	r1, [sp, #12]
 8015f68:	3d08      	subs	r5, #8
 8015f6a:	4604      	mov	r4, r0
 8015f6c:	e7cf      	b.n	8015f0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 8015f6e:	4461      	add	r1, ip
 8015f70:	b209      	sxth	r1, r1
 8015f72:	4549      	cmp	r1, r9
 8015f74:	dcf5      	bgt.n	8015f62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015f76:	9904      	ldr	r1, [sp, #16]
 8015f78:	eba1 0c0c 	sub.w	ip, r1, ip
 8015f7c:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8015f80:	e7ee      	b.n	8015f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8015f82:	428f      	cmp	r7, r1
 8015f84:	dced      	bgt.n	8015f62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015f86:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8015f8a:	4461      	add	r1, ip
 8015f8c:	b209      	sxth	r1, r1
 8015f8e:	4589      	cmp	r9, r1
 8015f90:	dbe7      	blt.n	8015f62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015f92:	4576      	cmp	r6, lr
 8015f94:	fa1f fc8e 	uxth.w	ip, lr
 8015f98:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8015f9c:	dc08      	bgt.n	8015fb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 8015f9e:	eba2 0c0c 	sub.w	ip, r2, ip
 8015fa2:	eba1 010c 	sub.w	r1, r1, ip
 8015fa6:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8015faa:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8015fae:	e7d7      	b.n	8015f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8015fb0:	4461      	add	r1, ip
 8015fb2:	b209      	sxth	r1, r1
 8015fb4:	4588      	cmp	r8, r1
 8015fb6:	dbd4      	blt.n	8015f62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015fb8:	eba3 0c0c 	sub.w	ip, r3, ip
 8015fbc:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8015fc0:	e7ce      	b.n	8015f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8015fc2:	2c00      	cmp	r4, #0
 8015fc4:	f000 816a 	beq.w	801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8015fc8:	9b00      	ldr	r3, [sp, #0]
 8015fca:	3301      	adds	r3, #1
 8015fcc:	f000 8166 	beq.w	801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8015fd0:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8015fd4:	4621      	mov	r1, r4
 8015fd6:	9802      	ldr	r0, [sp, #8]
 8015fd8:	f7ff fd78 	bl	8015acc <_ZNK8touchgfx4Rect8includesERKS0_>
 8015fdc:	b120      	cbz	r0, 8015fe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8015fde:	f8bd 1000 	ldrh.w	r1, [sp]
 8015fe2:	9801      	ldr	r0, [sp, #4]
 8015fe4:	f7ff fe86 	bl	8015cf4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015fe8:	9902      	ldr	r1, [sp, #8]
 8015fea:	4620      	mov	r0, r4
 8015fec:	f7ff fd4c 	bl	8015a88 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015ff0:	2800      	cmp	r0, #0
 8015ff2:	f000 809b 	beq.w	801612c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 8015ff6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8015ffa:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8015ffe:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8016002:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8016006:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801600a:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 801600e:	fa1f f288 	uxth.w	r2, r8
 8016012:	19d5      	adds	r5, r2, r7
 8016014:	fa1f f985 	uxth.w	r9, r5
 8016018:	fa0f f589 	sxth.w	r5, r9
 801601c:	b2a1      	uxth	r1, r4
 801601e:	440b      	add	r3, r1
 8016020:	9503      	str	r5, [sp, #12]
 8016022:	45a0      	cmp	r8, r4
 8016024:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8016028:	9507      	str	r5, [sp, #28]
 801602a:	b29b      	uxth	r3, r3
 801602c:	f340 809d 	ble.w	801616a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016030:	1a52      	subs	r2, r2, r1
 8016032:	b292      	uxth	r2, r2
 8016034:	4584      	cmp	ip, r0
 8016036:	fa0f fe83 	sxth.w	lr, r3
 801603a:	b215      	sxth	r5, r2
 801603c:	dd2f      	ble.n	801609e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801603e:	9e00      	ldr	r6, [sp, #0]
 8016040:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8016044:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8016048:	9e03      	ldr	r6, [sp, #12]
 801604a:	eba6 060e 	sub.w	r6, r6, lr
 801604e:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8016052:	fa1f fc8c 	uxth.w	ip, ip
 8016056:	b280      	uxth	r0, r0
 8016058:	ebac 0300 	sub.w	r3, ip, r0
 801605c:	448c      	add	ip, r1
 801605e:	4470      	add	r0, lr
 8016060:	b29b      	uxth	r3, r3
 8016062:	fa0f fc8c 	sxth.w	ip, ip
 8016066:	b200      	sxth	r0, r0
 8016068:	b21c      	sxth	r4, r3
 801606a:	ebac 0000 	sub.w	r0, ip, r0
 801606e:	4366      	muls	r6, r4
 8016070:	4368      	muls	r0, r5
 8016072:	4286      	cmp	r6, r0
 8016074:	db09      	blt.n	801608a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 8016076:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 801607a:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801607e:	4417      	add	r7, r2
 8016080:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016084:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8016088:	e685      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801608a:	440b      	add	r3, r1
 801608c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8016090:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8016094:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8016098:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801609c:	e67b      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801609e:	9e03      	ldr	r6, [sp, #12]
 80160a0:	45b6      	cmp	lr, r6
 80160a2:	da28      	bge.n	80160f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 80160a4:	9b00      	ldr	r3, [sp, #0]
 80160a6:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80160aa:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 80160ae:	eb04 030c 	add.w	r3, r4, ip
 80160b2:	fa1f f883 	uxth.w	r8, r3
 80160b6:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 80160ba:	4403      	add	r3, r0
 80160bc:	eba3 0308 	sub.w	r3, r3, r8
 80160c0:	b29b      	uxth	r3, r3
 80160c2:	fa0f f988 	sxth.w	r9, r8
 80160c6:	eba0 000c 	sub.w	r0, r0, ip
 80160ca:	fa0f f883 	sxth.w	r8, r3
 80160ce:	eba6 060e 	sub.w	r6, r6, lr
 80160d2:	4368      	muls	r0, r5
 80160d4:	fb08 f606 	mul.w	r6, r8, r6
 80160d8:	42b0      	cmp	r0, r6
 80160da:	dc06      	bgt.n	80160ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 80160dc:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 80160e0:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 80160e4:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 80160e8:	e7c9      	b.n	801607e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 80160ea:	4423      	add	r3, r4
 80160ec:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 80160f0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80160f4:	e64f      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80160f6:	9807      	ldr	r0, [sp, #28]
 80160f8:	eba3 0309 	sub.w	r3, r3, r9
 80160fc:	b29b      	uxth	r3, r3
 80160fe:	2806      	cmp	r0, #6
 8016100:	fa0f fc83 	sxth.w	ip, r3
 8016104:	d818      	bhi.n	8016138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 8016106:	4652      	mov	r2, sl
 8016108:	ab0a      	add	r3, sp, #40	; 0x28
 801610a:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 801610e:	6851      	ldr	r1, [r2, #4]
 8016110:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8016114:	c303      	stmia	r3!, {r0, r1}
 8016116:	9b03      	ldr	r3, [sp, #12]
 8016118:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801611c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8016120:	ab0a      	add	r3, sp, #40	; 0x28
 8016122:	e893 0006 	ldmia.w	r3, {r1, r2}
 8016126:	9801      	ldr	r0, [sp, #4]
 8016128:	f7ff fe06 	bl	8015d38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801612c:	9b00      	ldr	r3, [sp, #0]
 801612e:	3b01      	subs	r3, #1
 8016130:	9300      	str	r3, [sp, #0]
 8016132:	f1aa 0a08 	sub.w	sl, sl, #8
 8016136:	e747      	b.n	8015fc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016138:	9800      	ldr	r0, [sp, #0]
 801613a:	45ac      	cmp	ip, r5
 801613c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8016140:	db0c      	blt.n	801615c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 8016142:	4417      	add	r7, r2
 8016144:	b2bf      	uxth	r7, r7
 8016146:	4458      	add	r0, fp
 8016148:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801614c:	440f      	add	r7, r1
 801614e:	f8ad 4020 	strh.w	r4, [sp, #32]
 8016152:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8016156:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 801615a:	e61c      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801615c:	4458      	add	r0, fp
 801615e:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8016162:	443b      	add	r3, r7
 8016164:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8016168:	e615      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801616a:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 801616e:	fa1f f18c 	uxth.w	r1, ip
 8016172:	eb01 0e05 	add.w	lr, r1, r5
 8016176:	b282      	uxth	r2, r0
 8016178:	fa1f fe8e 	uxth.w	lr, lr
 801617c:	9204      	str	r2, [sp, #16]
 801617e:	fa0f f28e 	sxth.w	r2, lr
 8016182:	9205      	str	r2, [sp, #20]
 8016184:	9e04      	ldr	r6, [sp, #16]
 8016186:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 801618a:	4432      	add	r2, r6
 801618c:	b292      	uxth	r2, r2
 801618e:	4584      	cmp	ip, r0
 8016190:	9206      	str	r2, [sp, #24]
 8016192:	da26      	bge.n	80161e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 8016194:	eba3 0309 	sub.w	r3, r3, r9
 8016198:	eba2 020e 	sub.w	r2, r2, lr
 801619c:	b29b      	uxth	r3, r3
 801619e:	b292      	uxth	r2, r2
 80161a0:	fa0f fa83 	sxth.w	sl, r3
 80161a4:	b211      	sxth	r1, r2
 80161a6:	eba0 000c 	sub.w	r0, r0, ip
 80161aa:	eba4 0408 	sub.w	r4, r4, r8
 80161ae:	fb0a f000 	mul.w	r0, sl, r0
 80161b2:	434c      	muls	r4, r1
 80161b4:	42a0      	cmp	r0, r4
 80161b6:	9800      	ldr	r0, [sp, #0]
 80161b8:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80161bc:	dc06      	bgt.n	80161cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 80161be:	4458      	add	r0, fp
 80161c0:	9a05      	ldr	r2, [sp, #20]
 80161c2:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 80161c6:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 80161ca:	e7ca      	b.n	8016162 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 80161cc:	eb0b 0300 	add.w	r3, fp, r0
 80161d0:	9903      	ldr	r1, [sp, #12]
 80161d2:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 80161d6:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 80161da:	442a      	add	r2, r5
 80161dc:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80161e0:	e5d9      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80161e2:	9e04      	ldr	r6, [sp, #16]
 80161e4:	9a03      	ldr	r2, [sp, #12]
 80161e6:	1b89      	subs	r1, r1, r6
 80161e8:	b21e      	sxth	r6, r3
 80161ea:	b289      	uxth	r1, r1
 80161ec:	4296      	cmp	r6, r2
 80161ee:	fa0f fc81 	sxth.w	ip, r1
 80161f2:	dd26      	ble.n	8016242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 80161f4:	eba3 0309 	sub.w	r3, r3, r9
 80161f8:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80161fc:	9e05      	ldr	r6, [sp, #20]
 80161fe:	b29b      	uxth	r3, r3
 8016200:	eba6 0902 	sub.w	r9, r6, r2
 8016204:	b218      	sxth	r0, r3
 8016206:	eba4 0408 	sub.w	r4, r4, r8
 801620a:	fb0c f404 	mul.w	r4, ip, r4
 801620e:	fb00 f909 	mul.w	r9, r0, r9
 8016212:	9a00      	ldr	r2, [sp, #0]
 8016214:	454c      	cmp	r4, r9
 8016216:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801621a:	db03      	blt.n	8016224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 801621c:	445a      	add	r2, fp
 801621e:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8016222:	e79e      	b.n	8016162 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8016224:	eb0b 0302 	add.w	r3, fp, r2
 8016228:	9a03      	ldr	r2, [sp, #12]
 801622a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 801622e:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8016232:	4429      	add	r1, r5
 8016234:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8016238:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801623c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8016240:	e5a9      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8016242:	9b06      	ldr	r3, [sp, #24]
 8016244:	9c07      	ldr	r4, [sp, #28]
 8016246:	eba3 020e 	sub.w	r2, r3, lr
 801624a:	b292      	uxth	r2, r2
 801624c:	2c06      	cmp	r4, #6
 801624e:	b213      	sxth	r3, r2
 8016250:	d80d      	bhi.n	801626e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 8016252:	4651      	mov	r1, sl
 8016254:	aa0a      	add	r2, sp, #40	; 0x28
 8016256:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 801625a:	6849      	ldr	r1, [r1, #4]
 801625c:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8016260:	9b05      	ldr	r3, [sp, #20]
 8016262:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8016266:	c203      	stmia	r2!, {r0, r1}
 8016268:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 801626c:	e758      	b.n	8016120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 801626e:	9c00      	ldr	r4, [sp, #0]
 8016270:	4563      	cmp	r3, ip
 8016272:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016276:	db0d      	blt.n	8016294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 8016278:	4429      	add	r1, r5
 801627a:	9a04      	ldr	r2, [sp, #16]
 801627c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016280:	b289      	uxth	r1, r1
 8016282:	445c      	add	r4, fp
 8016284:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8016288:	4411      	add	r1, r2
 801628a:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 801628e:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8016292:	e580      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8016294:	445c      	add	r4, fp
 8016296:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 801629a:	e79e      	b.n	80161da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 801629c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80162a0:	2f07      	cmp	r7, #7
 80162a2:	d806      	bhi.n	80162b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 80162a4:	ab08      	add	r3, sp, #32
 80162a6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80162aa:	9801      	ldr	r0, [sp, #4]
 80162ac:	f7ff fd44 	bl	8015d38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80162b0:	e5db      	b.n	8015e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 80162b2:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80162b6:	f107 39ff 	add.w	r9, r7, #4294967295
 80162ba:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80162be:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 80162c2:	f04f 35ff 	mov.w	r5, #4294967295
 80162c6:	2400      	movs	r4, #0
 80162c8:	9304      	str	r3, [sp, #16]
 80162ca:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 80162ce:	9300      	str	r3, [sp, #0]
 80162d0:	f109 32ff 	add.w	r2, r9, #4294967295
 80162d4:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 80162d8:	9303      	str	r3, [sp, #12]
 80162da:	4690      	mov	r8, r2
 80162dc:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80162e0:	f1b8 3fff 	cmp.w	r8, #4294967295
 80162e4:	bf14      	ite	ne
 80162e6:	9904      	ldrne	r1, [sp, #16]
 80162e8:	f8dd e008 	ldreq.w	lr, [sp, #8]
 80162ec:	6818      	ldr	r0, [r3, #0]
 80162ee:	9206      	str	r2, [sp, #24]
 80162f0:	bf18      	it	ne
 80162f2:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 80162f6:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80162fa:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80162fe:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8016302:	9305      	str	r3, [sp, #20]
 8016304:	fb16 f601 	smulbb	r6, r6, r1
 8016308:	6859      	ldr	r1, [r3, #4]
 801630a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801630e:	4671      	mov	r1, lr
 8016310:	a80a      	add	r0, sp, #40	; 0x28
 8016312:	f7ff fbfd 	bl	8015b10 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016316:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801631a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801631e:	9b03      	ldr	r3, [sp, #12]
 8016320:	9a00      	ldr	r2, [sp, #0]
 8016322:	fb11 f100 	smulbb	r1, r1, r0
 8016326:	fb02 6603 	mla	r6, r2, r3, r6
 801632a:	1b8e      	subs	r6, r1, r6
 801632c:	2008      	movs	r0, #8
 801632e:	fb91 f1f0 	sdiv	r1, r1, r0
 8016332:	42b1      	cmp	r1, r6
 8016334:	dc21      	bgt.n	801637a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8016336:	4556      	cmp	r6, sl
 8016338:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 801633c:	da03      	bge.n	8016346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 801633e:	b1e6      	cbz	r6, 801637a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8016340:	46b2      	mov	sl, r6
 8016342:	4645      	mov	r5, r8
 8016344:	464c      	mov	r4, r9
 8016346:	f108 38ff 	add.w	r8, r8, #4294967295
 801634a:	f118 0f02 	cmn.w	r8, #2
 801634e:	d1c7      	bne.n	80162e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 8016350:	f1b2 3fff 	cmp.w	r2, #4294967295
 8016354:	f1a7 0708 	sub.w	r7, r7, #8
 8016358:	4691      	mov	r9, r2
 801635a:	d1b6      	bne.n	80162ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 801635c:	9b01      	ldr	r3, [sp, #4]
 801635e:	b2a6      	uxth	r6, r4
 8016360:	00e4      	lsls	r4, r4, #3
 8016362:	1918      	adds	r0, r3, r4
 8016364:	1c6b      	adds	r3, r5, #1
 8016366:	d10b      	bne.n	8016380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 8016368:	4601      	mov	r1, r0
 801636a:	9802      	ldr	r0, [sp, #8]
 801636c:	f7ff fbd0 	bl	8015b10 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016370:	4631      	mov	r1, r6
 8016372:	9801      	ldr	r0, [sp, #4]
 8016374:	f7ff fcbe 	bl	8015cf4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016378:	e50d      	b.n	8015d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801637a:	4645      	mov	r5, r8
 801637c:	464c      	mov	r4, r9
 801637e:	e7ed      	b.n	801635c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8016380:	9b01      	ldr	r3, [sp, #4]
 8016382:	00ed      	lsls	r5, r5, #3
 8016384:	1959      	adds	r1, r3, r5
 8016386:	f7ff fbc3 	bl	8015b10 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801638a:	9b02      	ldr	r3, [sp, #8]
 801638c:	cb03      	ldmia	r3!, {r0, r1}
 801638e:	445d      	add	r5, fp
 8016390:	445c      	add	r4, fp
 8016392:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8016396:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 801639a:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 801639e:	9b02      	ldr	r3, [sp, #8]
 80163a0:	6861      	ldr	r1, [r4, #4]
 80163a2:	c303      	stmia	r3!, {r0, r1}
 80163a4:	e7e4      	b.n	8016370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

080163a8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80163a8:	b530      	push	{r4, r5, lr}
 80163aa:	4b1d      	ldr	r3, [pc, #116]	; (8016420 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 80163ac:	b085      	sub	sp, #20
 80163ae:	460c      	mov	r4, r1
 80163b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80163b4:	4b1b      	ldr	r3, [pc, #108]	; (8016424 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 80163b6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80163ba:	2100      	movs	r1, #0
 80163bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80163c0:	9100      	str	r1, [sp, #0]
 80163c2:	4605      	mov	r5, r0
 80163c4:	6861      	ldr	r1, [r4, #4]
 80163c6:	6820      	ldr	r0, [r4, #0]
 80163c8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80163cc:	ab02      	add	r3, sp, #8
 80163ce:	c303      	stmia	r3!, {r0, r1}
 80163d0:	4669      	mov	r1, sp
 80163d2:	a802      	add	r0, sp, #8
 80163d4:	f7fb fba0 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 80163d8:	ab02      	add	r3, sp, #8
 80163da:	cb03      	ldmia	r3!, {r0, r1}
 80163dc:	4b12      	ldr	r3, [pc, #72]	; (8016428 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 80163de:	6020      	str	r0, [r4, #0]
 80163e0:	6818      	ldr	r0, [r3, #0]
 80163e2:	6061      	str	r1, [r4, #4]
 80163e4:	b138      	cbz	r0, 80163f6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 80163e6:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 80163ea:	b133      	cbz	r3, 80163fa <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 80163ec:	6821      	ldr	r1, [r4, #0]
 80163ee:	6862      	ldr	r2, [r4, #4]
 80163f0:	4628      	mov	r0, r5
 80163f2:	f7ff fcc3 	bl	8015d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80163f6:	b005      	add	sp, #20
 80163f8:	bd30      	pop	{r4, r5, pc}
 80163fa:	6803      	ldr	r3, [r0, #0]
 80163fc:	4621      	mov	r1, r4
 80163fe:	689b      	ldr	r3, [r3, #8]
 8016400:	4798      	blx	r3
 8016402:	4b0a      	ldr	r3, [pc, #40]	; (801642c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 8016404:	6818      	ldr	r0, [r3, #0]
 8016406:	b118      	cbz	r0, 8016410 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 8016408:	6803      	ldr	r3, [r0, #0]
 801640a:	4621      	mov	r1, r4
 801640c:	689b      	ldr	r3, [r3, #8]
 801640e:	4798      	blx	r3
 8016410:	4b07      	ldr	r3, [pc, #28]	; (8016430 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 8016412:	6818      	ldr	r0, [r3, #0]
 8016414:	6803      	ldr	r3, [r0, #0]
 8016416:	4621      	mov	r1, r4
 8016418:	69db      	ldr	r3, [r3, #28]
 801641a:	4798      	blx	r3
 801641c:	e7eb      	b.n	80163f6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 801641e:	bf00      	nop
 8016420:	200279a4 	.word	0x200279a4
 8016424:	200279a6 	.word	0x200279a6
 8016428:	200279ec 	.word	0x200279ec
 801642c:	200279e8 	.word	0x200279e8
 8016430:	200279b0 	.word	0x200279b0

08016434 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 8016434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016438:	4604      	mov	r4, r0
 801643a:	b09b      	sub	sp, #108	; 0x6c
 801643c:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 8016440:	b129      	cbz	r1, 801644e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 8016442:	2300      	movs	r3, #0
 8016444:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8016448:	b01b      	add	sp, #108	; 0x6c
 801644a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801644e:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8016452:	4630      	mov	r0, r6
 8016454:	f7fb fba3 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016458:	4605      	mov	r5, r0
 801645a:	b940      	cbnz	r0, 801646e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 801645c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016460:	4620      	mov	r0, r4
 8016462:	f7ff fc8b 	bl	8015d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016466:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801646a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801646e:	4ba7      	ldr	r3, [pc, #668]	; (801670c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 8016470:	681b      	ldr	r3, [r3, #0]
 8016472:	b33b      	cbz	r3, 80164c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8016474:	4da6      	ldr	r5, [pc, #664]	; (8016710 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 8016476:	4628      	mov	r0, r5
 8016478:	f7fb fb91 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801647c:	4606      	mov	r6, r0
 801647e:	bb08      	cbnz	r0, 80164c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8016480:	4628      	mov	r0, r5
 8016482:	f7ff f9a7 	bl	80157d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016486:	6829      	ldr	r1, [r5, #0]
 8016488:	686a      	ldr	r2, [r5, #4]
 801648a:	4620      	mov	r0, r4
 801648c:	f7ff fc76 	bl	8015d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016490:	802e      	strh	r6, [r5, #0]
 8016492:	806e      	strh	r6, [r5, #2]
 8016494:	80ae      	strh	r6, [r5, #4]
 8016496:	80ee      	strh	r6, [r5, #6]
 8016498:	4f9e      	ldr	r7, [pc, #632]	; (8016714 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 801649a:	a809      	add	r0, sp, #36	; 0x24
 801649c:	f7ff fbd7 	bl	8015c4e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80164a0:	883d      	ldrh	r5, [r7, #0]
 80164a2:	462e      	mov	r6, r5
 80164a4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80164a8:	42b3      	cmp	r3, r6
 80164aa:	d910      	bls.n	80164ce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 80164ac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80164b0:	a809      	add	r0, sp, #36	; 0x24
 80164b2:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 80164b6:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 80164ba:	3601      	adds	r6, #1
 80164bc:	f7ff fc3c 	bl	8015d38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80164c0:	b2b6      	uxth	r6, r6
 80164c2:	e7ef      	b.n	80164a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 80164c4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80164c8:	2b00      	cmp	r3, #0
 80164ca:	d1e5      	bne.n	8016498 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 80164cc:	e7bc      	b.n	8016448 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80164ce:	462e      	mov	r6, r5
 80164d0:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80164d4:	42b3      	cmp	r3, r6
 80164d6:	d90b      	bls.n	80164f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 80164d8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80164dc:	4620      	mov	r0, r4
 80164de:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80164e2:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80164e6:	3601      	adds	r6, #1
 80164e8:	f7ff fc48 	bl	8015d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80164ec:	b2b6      	uxth	r6, r6
 80164ee:	e7ef      	b.n	80164d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 80164f0:	4a89      	ldr	r2, [pc, #548]	; (8016718 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 80164f2:	6813      	ldr	r3, [r2, #0]
 80164f4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80164f8:	2b01      	cmp	r3, #1
 80164fa:	4690      	mov	r8, r2
 80164fc:	f040 8094 	bne.w	8016628 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 8016500:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8016504:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 8016508:	33aa      	adds	r3, #170	; 0xaa
 801650a:	f04f 0900 	mov.w	r9, #0
 801650e:	42a8      	cmp	r0, r5
 8016510:	f103 0308 	add.w	r3, r3, #8
 8016514:	dd0a      	ble.n	801652c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 8016516:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 801651a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 801651e:	440a      	add	r2, r1
 8016520:	b212      	sxth	r2, r2
 8016522:	4591      	cmp	r9, r2
 8016524:	bfb8      	it	lt
 8016526:	4691      	movlt	r9, r2
 8016528:	3501      	adds	r5, #1
 801652a:	e7f0      	b.n	801650e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 801652c:	4b7b      	ldr	r3, [pc, #492]	; (801671c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 801652e:	4e7c      	ldr	r6, [pc, #496]	; (8016720 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 8016530:	881d      	ldrh	r5, [r3, #0]
 8016532:	2300      	movs	r3, #0
 8016534:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016538:	2d0f      	cmp	r5, #15
 801653a:	bf8c      	ite	hi
 801653c:	08ed      	lsrhi	r5, r5, #3
 801653e:	2501      	movls	r5, #1
 8016540:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016544:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8016548:	f8d8 0000 	ldr.w	r0, [r8]
 801654c:	440b      	add	r3, r1
 801654e:	b21b      	sxth	r3, r3
 8016550:	4599      	cmp	r9, r3
 8016552:	6802      	ldr	r2, [r0, #0]
 8016554:	dd4b      	ble.n	80165ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 8016556:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 801655a:	4798      	blx	r3
 801655c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016560:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016564:	4413      	add	r3, r2
 8016566:	b21b      	sxth	r3, r3
 8016568:	195a      	adds	r2, r3, r5
 801656a:	4290      	cmp	r0, r2
 801656c:	da07      	bge.n	801657e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 801656e:	4581      	cmp	r9, r0
 8016570:	dd05      	ble.n	801657e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8016572:	4298      	cmp	r0, r3
 8016574:	da33      	bge.n	80165de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8016576:	2b00      	cmp	r3, #0
 8016578:	dd31      	ble.n	80165de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801657a:	4648      	mov	r0, r9
 801657c:	e004      	b.n	8016588 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 801657e:	4298      	cmp	r0, r3
 8016580:	dbfb      	blt.n	801657a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8016582:	4548      	cmp	r0, r9
 8016584:	bfa8      	it	ge
 8016586:	4648      	movge	r0, r9
 8016588:	f9b6 2000 	ldrsh.w	r2, [r6]
 801658c:	f8b7 a000 	ldrh.w	sl, [r7]
 8016590:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016594:	2100      	movs	r1, #0
 8016596:	1ac0      	subs	r0, r0, r3
 8016598:	f8ad 1014 	strh.w	r1, [sp, #20]
 801659c:	f8ad 2018 	strh.w	r2, [sp, #24]
 80165a0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80165a4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80165a8:	4553      	cmp	r3, sl
 80165aa:	d9c9      	bls.n	8016540 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 80165ac:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80165b0:	ab07      	add	r3, sp, #28
 80165b2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80165b6:	6851      	ldr	r1, [r2, #4]
 80165b8:	c303      	stmia	r3!, {r0, r1}
 80165ba:	a807      	add	r0, sp, #28
 80165bc:	a905      	add	r1, sp, #20
 80165be:	f7fb faab 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 80165c2:	a807      	add	r0, sp, #28
 80165c4:	f7fb faeb 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80165c8:	b920      	cbnz	r0, 80165d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 80165ca:	6823      	ldr	r3, [r4, #0]
 80165cc:	a907      	add	r1, sp, #28
 80165ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80165d0:	4620      	mov	r0, r4
 80165d2:	4798      	blx	r3
 80165d4:	f10a 0a01 	add.w	sl, sl, #1
 80165d8:	fa1f fa8a 	uxth.w	sl, sl
 80165dc:	e7e2      	b.n	80165a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 80165de:	f8d8 0000 	ldr.w	r0, [r8]
 80165e2:	6803      	ldr	r3, [r0, #0]
 80165e4:	2101      	movs	r1, #1
 80165e6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80165ea:	4798      	blx	r3
 80165ec:	e7a8      	b.n	8016540 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 80165ee:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80165f0:	4798      	blx	r3
 80165f2:	4b4c      	ldr	r3, [pc, #304]	; (8016724 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 80165f4:	781b      	ldrb	r3, [r3, #0]
 80165f6:	2b00      	cmp	r3, #0
 80165f8:	f43f af26 	beq.w	8016448 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80165fc:	2300      	movs	r3, #0
 80165fe:	883d      	ldrh	r5, [r7, #0]
 8016600:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8016604:	34ea      	adds	r4, #234	; 0xea
 8016606:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801660a:	42ab      	cmp	r3, r5
 801660c:	f67f af1c 	bls.w	8016448 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8016610:	ab1a      	add	r3, sp, #104	; 0x68
 8016612:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016616:	3b44      	subs	r3, #68	; 0x44
 8016618:	e893 0006 	ldmia.w	r3, {r1, r2}
 801661c:	4620      	mov	r0, r4
 801661e:	3501      	adds	r5, #1
 8016620:	f7ff fb8a 	bl	8015d38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8016624:	b2ad      	uxth	r5, r5
 8016626:	e7ee      	b.n	8016606 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 8016628:	2b02      	cmp	r3, #2
 801662a:	f040 813e 	bne.w	80168aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 801662e:	4b3e      	ldr	r3, [pc, #248]	; (8016728 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 8016630:	781b      	ldrb	r3, [r3, #0]
 8016632:	2b01      	cmp	r3, #1
 8016634:	d02c      	beq.n	8016690 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 8016636:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 801663a:	883a      	ldrh	r2, [r7, #0]
 801663c:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8016640:	3201      	adds	r2, #1
 8016642:	b292      	uxth	r2, r2
 8016644:	2900      	cmp	r1, #0
 8016646:	d0d4      	beq.n	80165f2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8016648:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801664c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8016650:	441d      	add	r5, r3
 8016652:	b22d      	sxth	r5, r5
 8016654:	4610      	mov	r0, r2
 8016656:	f04f 0a00 	mov.w	sl, #0
 801665a:	b283      	uxth	r3, r0
 801665c:	4299      	cmp	r1, r3
 801665e:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 8016662:	f240 80c5 	bls.w	80167f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 8016666:	4426      	add	r6, r4
 8016668:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 801666c:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 8016670:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 8016674:	4573      	cmp	r3, lr
 8016676:	4684      	mov	ip, r0
 8016678:	f340 80a7 	ble.w	80167ca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 801667c:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 8016680:	4475      	add	r5, lr
 8016682:	b22d      	sxth	r5, r5
 8016684:	429d      	cmp	r5, r3
 8016686:	bfa8      	it	ge
 8016688:	461d      	movge	r5, r3
 801668a:	3001      	adds	r0, #1
 801668c:	46e2      	mov	sl, ip
 801668e:	e7e4      	b.n	801665a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 8016690:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8016694:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8016698:	f1bb 0f00 	cmp.w	fp, #0
 801669c:	d0a9      	beq.n	80165f2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 801669e:	883b      	ldrh	r3, [r7, #0]
 80166a0:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80166a4:	3301      	adds	r3, #1
 80166a6:	b29b      	uxth	r3, r3
 80166a8:	2600      	movs	r6, #0
 80166aa:	b299      	uxth	r1, r3
 80166ac:	458b      	cmp	fp, r1
 80166ae:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 80166b2:	d93b      	bls.n	801672c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 80166b4:	4425      	add	r5, r4
 80166b6:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80166ba:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 80166be:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 80166c2:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80166c6:	4408      	add	r0, r1
 80166c8:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80166cc:	4471      	add	r1, lr
 80166ce:	b200      	sxth	r0, r0
 80166d0:	b209      	sxth	r1, r1
 80166d2:	4288      	cmp	r0, r1
 80166d4:	469c      	mov	ip, r3
 80166d6:	da06      	bge.n	80166e6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 80166d8:	4586      	cmp	lr, r0
 80166da:	4672      	mov	r2, lr
 80166dc:	bfb8      	it	lt
 80166de:	4602      	movlt	r2, r0
 80166e0:	3301      	adds	r3, #1
 80166e2:	4666      	mov	r6, ip
 80166e4:	e7e1      	b.n	80166aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 80166e6:	d10b      	bne.n	8016700 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 80166e8:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80166ec:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80166f0:	458c      	cmp	ip, r1
 80166f2:	bfb4      	ite	lt
 80166f4:	469c      	movlt	ip, r3
 80166f6:	46b4      	movge	ip, r6
 80166f8:	4572      	cmp	r2, lr
 80166fa:	bfb8      	it	lt
 80166fc:	4672      	movlt	r2, lr
 80166fe:	e7ef      	b.n	80166e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 8016700:	428a      	cmp	r2, r1
 8016702:	bfb8      	it	lt
 8016704:	460a      	movlt	r2, r1
 8016706:	46b4      	mov	ip, r6
 8016708:	e7ea      	b.n	80166e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 801670a:	bf00      	nop
 801670c:	200279e8 	.word	0x200279e8
 8016710:	200279f4 	.word	0x200279f4
 8016714:	20000060 	.word	0x20000060
 8016718:	200279b0 	.word	0x200279b0
 801671c:	200279a6 	.word	0x200279a6
 8016720:	200279a4 	.word	0x200279a4
 8016724:	200279ae 	.word	0x200279ae
 8016728:	200279a8 	.word	0x200279a8
 801672c:	1961      	adds	r1, r4, r5
 801672e:	ab07      	add	r3, sp, #28
 8016730:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8016734:	6849      	ldr	r1, [r1, #4]
 8016736:	c303      	stmia	r3!, {r0, r1}
 8016738:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801673c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016740:	2b13      	cmp	r3, #19
 8016742:	bfd8      	it	le
 8016744:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016748:	f8ad 201c 	strh.w	r2, [sp, #28]
 801674c:	440b      	add	r3, r1
 801674e:	1a9b      	subs	r3, r3, r2
 8016750:	a807      	add	r0, sp, #28
 8016752:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016756:	f7ff f857 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801675a:	a807      	add	r0, sp, #28
 801675c:	f7fb fa1f 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016760:	2800      	cmp	r0, #0
 8016762:	d197      	bne.n	8016694 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8016764:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016768:	f8d8 0000 	ldr.w	r0, [r8]
 801676c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016770:	f8d0 e000 	ldr.w	lr, [r0]
 8016774:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016778:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801677c:	f1bc 0f14 	cmp.w	ip, #20
 8016780:	bfa8      	it	ge
 8016782:	f04f 0c14 	movge.w	ip, #20
 8016786:	fa1f fc8c 	uxth.w	ip, ip
 801678a:	f8cd c000 	str.w	ip, [sp]
 801678e:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 8016792:	47d0      	blx	sl
 8016794:	4682      	mov	sl, r0
 8016796:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801679a:	a807      	add	r0, sp, #28
 801679c:	f7ff f81a 	bl	80157d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80167a0:	6823      	ldr	r3, [r4, #0]
 80167a2:	4425      	add	r5, r4
 80167a4:	4620      	mov	r0, r4
 80167a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80167a8:	a907      	add	r1, sp, #28
 80167aa:	4798      	blx	r3
 80167ac:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80167b0:	eba0 000a 	sub.w	r0, r0, sl
 80167b4:	b200      	sxth	r0, r0
 80167b6:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80167ba:	2800      	cmp	r0, #0
 80167bc:	f47f af6a 	bne.w	8016694 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 80167c0:	b2b1      	uxth	r1, r6
 80167c2:	4648      	mov	r0, r9
 80167c4:	f7ff fa96 	bl	8015cf4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80167c8:	e764      	b.n	8016694 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 80167ca:	d10c      	bne.n	80167e6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 80167cc:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 80167d0:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 80167d4:	45b4      	cmp	ip, r6
 80167d6:	bfb4      	ite	lt
 80167d8:	4684      	movlt	ip, r0
 80167da:	46d4      	movge	ip, sl
 80167dc:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 80167e0:	4433      	add	r3, r6
 80167e2:	b21b      	sxth	r3, r3
 80167e4:	e74e      	b.n	8016684 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 80167e6:	4575      	cmp	r5, lr
 80167e8:	bfa8      	it	ge
 80167ea:	4675      	movge	r5, lr
 80167ec:	46d4      	mov	ip, sl
 80167ee:	e74c      	b.n	801668a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 80167f0:	eb0b 0006 	add.w	r0, fp, r6
 80167f4:	4426      	add	r6, r4
 80167f6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80167fa:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 80167fe:	f1b9 0f13 	cmp.w	r9, #19
 8016802:	bfde      	ittt	le
 8016804:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 8016808:	444d      	addle	r5, r9
 801680a:	b22d      	sxthle	r5, r5
 801680c:	f7fb f9c7 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016810:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8016814:	2800      	cmp	r0, #0
 8016816:	f47f af15 	bne.w	8016644 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 801681a:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 801681e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016822:	eba5 050c 	sub.w	r5, r5, ip
 8016826:	fa1f f28c 	uxth.w	r2, ip
 801682a:	fa1f f989 	uxth.w	r9, r9
 801682e:	eb02 0009 	add.w	r0, r2, r9
 8016832:	2d14      	cmp	r5, #20
 8016834:	bfa8      	it	ge
 8016836:	2514      	movge	r5, #20
 8016838:	b200      	sxth	r0, r0
 801683a:	fa1f fe85 	uxth.w	lr, r5
 801683e:	eba0 000c 	sub.w	r0, r0, ip
 8016842:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 8016846:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 801684a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801684e:	4586      	cmp	lr, r0
 8016850:	f8d8 0000 	ldr.w	r0, [r8]
 8016854:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016858:	f8ad 3020 	strh.w	r3, [sp, #32]
 801685c:	bfb8      	it	lt
 801685e:	46f1      	movlt	r9, lr
 8016860:	6805      	ldr	r5, [r0, #0]
 8016862:	f8cd 9000 	str.w	r9, [sp]
 8016866:	b29b      	uxth	r3, r3
 8016868:	b289      	uxth	r1, r1
 801686a:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 801686e:	47a8      	blx	r5
 8016870:	6823      	ldr	r3, [r4, #0]
 8016872:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016876:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016878:	a907      	add	r1, sp, #28
 801687a:	4620      	mov	r0, r4
 801687c:	4798      	blx	r3
 801687e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016882:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 8016886:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 801688a:	1a5b      	subs	r3, r3, r1
 801688c:	440a      	add	r2, r1
 801688e:	b21b      	sxth	r3, r3
 8016890:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8016894:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 8016898:	2b00      	cmp	r3, #0
 801689a:	f47f aece 	bne.w	801663a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 801689e:	fa1f f18a 	uxth.w	r1, sl
 80168a2:	4658      	mov	r0, fp
 80168a4:	f7ff fa26 	bl	8015cf4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80168a8:	e6c7      	b.n	801663a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 80168aa:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80168ae:	42ab      	cmp	r3, r5
 80168b0:	f67f ae9f 	bls.w	80165f2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 80168b4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80168b8:	ab07      	add	r3, sp, #28
 80168ba:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80168be:	6851      	ldr	r1, [r2, #4]
 80168c0:	c303      	stmia	r3!, {r0, r1}
 80168c2:	a807      	add	r0, sp, #28
 80168c4:	f7fb f96b 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80168c8:	b920      	cbnz	r0, 80168d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 80168ca:	6823      	ldr	r3, [r4, #0]
 80168cc:	a907      	add	r1, sp, #28
 80168ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80168d0:	4620      	mov	r0, r4
 80168d2:	4798      	blx	r3
 80168d4:	3501      	adds	r5, #1
 80168d6:	b2ad      	uxth	r5, r5
 80168d8:	e7e7      	b.n	80168aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 80168da:	bf00      	nop

080168dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80168dc:	4b03      	ldr	r3, [pc, #12]	; (80168ec <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80168de:	2200      	movs	r2, #0
 80168e0:	801a      	strh	r2, [r3, #0]
 80168e2:	805a      	strh	r2, [r3, #2]
 80168e4:	809a      	strh	r2, [r3, #4]
 80168e6:	80da      	strh	r2, [r3, #6]
 80168e8:	4770      	bx	lr
 80168ea:	bf00      	nop
 80168ec:	200279f4 	.word	0x200279f4

080168f0 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>:
 80168f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80168f4:	4604      	mov	r4, r0
 80168f6:	b09c      	sub	sp, #112	; 0x70
 80168f8:	a803      	add	r0, sp, #12
 80168fa:	4615      	mov	r5, r2
 80168fc:	460e      	mov	r6, r1
 80168fe:	461f      	mov	r7, r3
 8016900:	f000 fe05 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 8016904:	6823      	ldr	r3, [r4, #0]
 8016906:	4620      	mov	r0, r4
 8016908:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801690a:	4798      	blx	r3
 801690c:	6823      	ldr	r3, [r4, #0]
 801690e:	4680      	mov	r8, r0
 8016910:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016912:	4620      	mov	r0, r4
 8016914:	4798      	blx	r3
 8016916:	4629      	mov	r1, r5
 8016918:	9000      	str	r0, [sp, #0]
 801691a:	4643      	mov	r3, r8
 801691c:	463a      	mov	r2, r7
 801691e:	a803      	add	r0, sp, #12
 8016920:	f000 fe60 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016924:	2500      	movs	r5, #0
 8016926:	a803      	add	r0, sp, #12
 8016928:	f000 fe18 	bl	801755c <_ZN8touchgfx12TextProvider11endOfStringEv>
 801692c:	b958      	cbnz	r0, 8016946 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x56>
 801692e:	4633      	mov	r3, r6
 8016930:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016934:	4621      	mov	r1, r4
 8016936:	a803      	add	r0, sp, #12
 8016938:	f7fd fe38 	bl	80145ac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801693c:	b203      	sxth	r3, r0
 801693e:	42ab      	cmp	r3, r5
 8016940:	bfc8      	it	gt
 8016942:	4605      	movgt	r5, r0
 8016944:	e7ef      	b.n	8016926 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x36>
 8016946:	4628      	mov	r0, r5
 8016948:	b01c      	add	sp, #112	; 0x70
 801694a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801694e <_ZNK8touchgfx4Font12getCharWidthEt>:
 801694e:	b508      	push	{r3, lr}
 8016950:	6803      	ldr	r3, [r0, #0]
 8016952:	68db      	ldr	r3, [r3, #12]
 8016954:	4798      	blx	r3
 8016956:	b128      	cbz	r0, 8016964 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016958:	7b43      	ldrb	r3, [r0, #13]
 801695a:	7a80      	ldrb	r0, [r0, #10]
 801695c:	005b      	lsls	r3, r3, #1
 801695e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016962:	4318      	orrs	r0, r3
 8016964:	bd08      	pop	{r3, pc}

08016966 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016966:	b40e      	push	{r1, r2, r3}
 8016968:	b5f0      	push	{r4, r5, r6, r7, lr}
 801696a:	b09e      	sub	sp, #120	; 0x78
 801696c:	ab23      	add	r3, sp, #140	; 0x8c
 801696e:	4605      	mov	r5, r0
 8016970:	f853 4b04 	ldr.w	r4, [r3], #4
 8016974:	9303      	str	r3, [sp, #12]
 8016976:	a805      	add	r0, sp, #20
 8016978:	f000 fdc9 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 801697c:	682b      	ldr	r3, [r5, #0]
 801697e:	4628      	mov	r0, r5
 8016980:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016982:	4798      	blx	r3
 8016984:	682b      	ldr	r3, [r5, #0]
 8016986:	4606      	mov	r6, r0
 8016988:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801698a:	4628      	mov	r0, r5
 801698c:	4798      	blx	r3
 801698e:	4633      	mov	r3, r6
 8016990:	ae1e      	add	r6, sp, #120	; 0x78
 8016992:	4621      	mov	r1, r4
 8016994:	9000      	str	r0, [sp, #0]
 8016996:	9a03      	ldr	r2, [sp, #12]
 8016998:	2400      	movs	r4, #0
 801699a:	a805      	add	r0, sp, #20
 801699c:	f000 fe22 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80169a0:	f846 4d68 	str.w	r4, [r6, #-104]!
 80169a4:	462a      	mov	r2, r5
 80169a6:	4633      	mov	r3, r6
 80169a8:	4621      	mov	r1, r4
 80169aa:	a805      	add	r0, sp, #20
 80169ac:	f001 fdaa 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80169b0:	b1f0      	cbz	r0, 80169f0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80169b2:	280a      	cmp	r0, #10
 80169b4:	d018      	beq.n	80169e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80169b6:	9f04      	ldr	r7, [sp, #16]
 80169b8:	b1b7      	cbz	r7, 80169e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80169ba:	7b78      	ldrb	r0, [r7, #13]
 80169bc:	7a3b      	ldrb	r3, [r7, #8]
 80169be:	88aa      	ldrh	r2, [r5, #4]
 80169c0:	00c1      	lsls	r1, r0, #3
 80169c2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80169c6:	4319      	orrs	r1, r3
 80169c8:	0643      	lsls	r3, r0, #25
 80169ca:	bf44      	itt	mi
 80169cc:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80169d0:	b219      	sxthmi	r1, r3
 80169d2:	0100      	lsls	r0, r0, #4
 80169d4:	79fb      	ldrb	r3, [r7, #7]
 80169d6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80169da:	4303      	orrs	r3, r0
 80169dc:	4413      	add	r3, r2
 80169de:	1a5b      	subs	r3, r3, r1
 80169e0:	b29b      	uxth	r3, r3
 80169e2:	42a3      	cmp	r3, r4
 80169e4:	bfc8      	it	gt
 80169e6:	b21c      	sxthgt	r4, r3
 80169e8:	4633      	mov	r3, r6
 80169ea:	462a      	mov	r2, r5
 80169ec:	2100      	movs	r1, #0
 80169ee:	e7dc      	b.n	80169aa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80169f0:	b2a0      	uxth	r0, r4
 80169f2:	b01e      	add	sp, #120	; 0x78
 80169f4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80169f8:	b003      	add	sp, #12
 80169fa:	4770      	bx	lr

080169fc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80169fc:	b40e      	push	{r1, r2, r3}
 80169fe:	b570      	push	{r4, r5, r6, lr}
 8016a00:	b09d      	sub	sp, #116	; 0x74
 8016a02:	ab21      	add	r3, sp, #132	; 0x84
 8016a04:	4604      	mov	r4, r0
 8016a06:	f853 5b04 	ldr.w	r5, [r3], #4
 8016a0a:	9302      	str	r3, [sp, #8]
 8016a0c:	a803      	add	r0, sp, #12
 8016a0e:	f000 fd7e 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 8016a12:	6823      	ldr	r3, [r4, #0]
 8016a14:	4620      	mov	r0, r4
 8016a16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a18:	4798      	blx	r3
 8016a1a:	6823      	ldr	r3, [r4, #0]
 8016a1c:	4606      	mov	r6, r0
 8016a1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a20:	4620      	mov	r0, r4
 8016a22:	4798      	blx	r3
 8016a24:	4633      	mov	r3, r6
 8016a26:	9000      	str	r0, [sp, #0]
 8016a28:	9a02      	ldr	r2, [sp, #8]
 8016a2a:	4629      	mov	r1, r5
 8016a2c:	a803      	add	r0, sp, #12
 8016a2e:	f000 fdd9 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016a32:	a803      	add	r0, sp, #12
 8016a34:	f001 fe60 	bl	80186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016a38:	2401      	movs	r4, #1
 8016a3a:	b2a3      	uxth	r3, r4
 8016a3c:	b140      	cbz	r0, 8016a50 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016a3e:	280a      	cmp	r0, #10
 8016a40:	bf08      	it	eq
 8016a42:	3301      	addeq	r3, #1
 8016a44:	a803      	add	r0, sp, #12
 8016a46:	bf08      	it	eq
 8016a48:	b21c      	sxtheq	r4, r3
 8016a4a:	f001 fe55 	bl	80186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016a4e:	e7f4      	b.n	8016a3a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016a50:	4618      	mov	r0, r3
 8016a52:	b01d      	add	sp, #116	; 0x74
 8016a54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016a58:	b003      	add	sp, #12
 8016a5a:	4770      	bx	lr

08016a5c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016a5c:	b40e      	push	{r1, r2, r3}
 8016a5e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a60:	b09e      	sub	sp, #120	; 0x78
 8016a62:	ab23      	add	r3, sp, #140	; 0x8c
 8016a64:	4604      	mov	r4, r0
 8016a66:	f853 5b04 	ldr.w	r5, [r3], #4
 8016a6a:	9303      	str	r3, [sp, #12]
 8016a6c:	a805      	add	r0, sp, #20
 8016a6e:	f000 fd4e 	bl	801750e <_ZN8touchgfx12TextProviderC1Ev>
 8016a72:	6823      	ldr	r3, [r4, #0]
 8016a74:	4620      	mov	r0, r4
 8016a76:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a78:	4798      	blx	r3
 8016a7a:	6823      	ldr	r3, [r4, #0]
 8016a7c:	4606      	mov	r6, r0
 8016a7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a80:	4620      	mov	r0, r4
 8016a82:	4798      	blx	r3
 8016a84:	4633      	mov	r3, r6
 8016a86:	4629      	mov	r1, r5
 8016a88:	9000      	str	r0, [sp, #0]
 8016a8a:	9a03      	ldr	r2, [sp, #12]
 8016a8c:	a805      	add	r0, sp, #20
 8016a8e:	ad1e      	add	r5, sp, #120	; 0x78
 8016a90:	f000 fda8 	bl	80175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016a94:	2100      	movs	r1, #0
 8016a96:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016a9a:	4622      	mov	r2, r4
 8016a9c:	462b      	mov	r3, r5
 8016a9e:	a805      	add	r0, sp, #20
 8016aa0:	f001 fd30 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016aa4:	26ff      	movs	r6, #255	; 0xff
 8016aa6:	b1d8      	cbz	r0, 8016ae0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8016aa8:	280a      	cmp	r0, #10
 8016aaa:	d012      	beq.n	8016ad2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8016aac:	9804      	ldr	r0, [sp, #16]
 8016aae:	b180      	cbz	r0, 8016ad2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8016ab0:	7b47      	ldrb	r7, [r0, #13]
 8016ab2:	7922      	ldrb	r2, [r4, #4]
 8016ab4:	00fb      	lsls	r3, r7, #3
 8016ab6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016aba:	7a03      	ldrb	r3, [r0, #8]
 8016abc:	430b      	orrs	r3, r1
 8016abe:	0679      	lsls	r1, r7, #25
 8016ac0:	bf44      	itt	mi
 8016ac2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016ac6:	b21b      	sxthmi	r3, r3
 8016ac8:	1ad3      	subs	r3, r2, r3
 8016aca:	b2db      	uxtb	r3, r3
 8016acc:	429e      	cmp	r6, r3
 8016ace:	bf28      	it	cs
 8016ad0:	461e      	movcs	r6, r3
 8016ad2:	462b      	mov	r3, r5
 8016ad4:	4622      	mov	r2, r4
 8016ad6:	2100      	movs	r1, #0
 8016ad8:	a805      	add	r0, sp, #20
 8016ada:	f001 fd13 	bl	8018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ade:	e7e2      	b.n	8016aa6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8016ae0:	4630      	mov	r0, r6
 8016ae2:	b01e      	add	sp, #120	; 0x78
 8016ae4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016ae8:	b003      	add	sp, #12
 8016aea:	4770      	bx	lr

08016aec <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016aec:	b513      	push	{r0, r1, r4, lr}
 8016aee:	6803      	ldr	r3, [r0, #0]
 8016af0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016af4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016af8:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016afc:	2400      	movs	r4, #0
 8016afe:	9400      	str	r4, [sp, #0]
 8016b00:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016b04:	691b      	ldr	r3, [r3, #16]
 8016b06:	4669      	mov	r1, sp
 8016b08:	4798      	blx	r3
 8016b0a:	b002      	add	sp, #8
 8016b0c:	bd10      	pop	{r4, pc}

08016b0e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016b0e:	b538      	push	{r3, r4, r5, lr}
 8016b10:	680b      	ldr	r3, [r1, #0]
 8016b12:	460c      	mov	r4, r1
 8016b14:	68db      	ldr	r3, [r3, #12]
 8016b16:	4605      	mov	r5, r0
 8016b18:	4798      	blx	r3
 8016b1a:	6823      	ldr	r3, [r4, #0]
 8016b1c:	4620      	mov	r0, r4
 8016b1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b20:	4629      	mov	r1, r5
 8016b22:	4798      	blx	r3
 8016b24:	4628      	mov	r0, r5
 8016b26:	bd38      	pop	{r3, r4, r5, pc}

08016b28 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016b28:	b410      	push	{r4}
 8016b2a:	880a      	ldrh	r2, [r1, #0]
 8016b2c:	8884      	ldrh	r4, [r0, #4]
 8016b2e:	4422      	add	r2, r4
 8016b30:	800a      	strh	r2, [r1, #0]
 8016b32:	88c4      	ldrh	r4, [r0, #6]
 8016b34:	884a      	ldrh	r2, [r1, #2]
 8016b36:	4422      	add	r2, r4
 8016b38:	804a      	strh	r2, [r1, #2]
 8016b3a:	6940      	ldr	r0, [r0, #20]
 8016b3c:	b120      	cbz	r0, 8016b48 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016b3e:	6803      	ldr	r3, [r0, #0]
 8016b40:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016b44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b46:	4718      	bx	r3
 8016b48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016b4c:	4770      	bx	lr

08016b4e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016b4e:	b570      	push	{r4, r5, r6, lr}
 8016b50:	8882      	ldrh	r2, [r0, #4]
 8016b52:	880b      	ldrh	r3, [r1, #0]
 8016b54:	4413      	add	r3, r2
 8016b56:	800b      	strh	r3, [r1, #0]
 8016b58:	88c2      	ldrh	r2, [r0, #6]
 8016b5a:	884b      	ldrh	r3, [r1, #2]
 8016b5c:	460c      	mov	r4, r1
 8016b5e:	4413      	add	r3, r2
 8016b60:	804b      	strh	r3, [r1, #2]
 8016b62:	4605      	mov	r5, r0
 8016b64:	1d01      	adds	r1, r0, #4
 8016b66:	4620      	mov	r0, r4
 8016b68:	f7fa ffd6 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 8016b6c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016b70:	2b00      	cmp	r3, #0
 8016b72:	dd0b      	ble.n	8016b8c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016b74:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016b78:	2b00      	cmp	r3, #0
 8016b7a:	dd07      	ble.n	8016b8c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016b7c:	6968      	ldr	r0, [r5, #20]
 8016b7e:	b128      	cbz	r0, 8016b8c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016b80:	6803      	ldr	r3, [r0, #0]
 8016b82:	4621      	mov	r1, r4
 8016b84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016b86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016b8a:	4718      	bx	r3
 8016b8c:	bd70      	pop	{r4, r5, r6, pc}
	...

08016b90 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016b90:	b570      	push	{r4, r5, r6, lr}
 8016b92:	8882      	ldrh	r2, [r0, #4]
 8016b94:	880b      	ldrh	r3, [r1, #0]
 8016b96:	4413      	add	r3, r2
 8016b98:	800b      	strh	r3, [r1, #0]
 8016b9a:	88c2      	ldrh	r2, [r0, #6]
 8016b9c:	884b      	ldrh	r3, [r1, #2]
 8016b9e:	460c      	mov	r4, r1
 8016ba0:	4413      	add	r3, r2
 8016ba2:	804b      	strh	r3, [r1, #2]
 8016ba4:	4605      	mov	r5, r0
 8016ba6:	1d01      	adds	r1, r0, #4
 8016ba8:	4620      	mov	r0, r4
 8016baa:	f7fa ffb5 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 8016bae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016bb2:	2b00      	cmp	r3, #0
 8016bb4:	dd15      	ble.n	8016be2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8016bb6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016bba:	2b00      	cmp	r3, #0
 8016bbc:	dd11      	ble.n	8016be2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8016bbe:	6968      	ldr	r0, [r5, #20]
 8016bc0:	b128      	cbz	r0, 8016bce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016bc2:	6803      	ldr	r3, [r0, #0]
 8016bc4:	691b      	ldr	r3, [r3, #16]
 8016bc6:	4621      	mov	r1, r4
 8016bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016bcc:	4718      	bx	r3
 8016bce:	4b05      	ldr	r3, [pc, #20]	; (8016be4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 8016bd0:	681b      	ldr	r3, [r3, #0]
 8016bd2:	3304      	adds	r3, #4
 8016bd4:	429d      	cmp	r5, r3
 8016bd6:	d104      	bne.n	8016be2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8016bd8:	f7fe ffe0 	bl	8015b9c <_ZN8touchgfx11Application11getInstanceEv>
 8016bdc:	6803      	ldr	r3, [r0, #0]
 8016bde:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016be0:	e7f1      	b.n	8016bc6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 8016be2:	bd70      	pop	{r4, r5, r6, pc}
 8016be4:	200279ec 	.word	0x200279ec

08016be8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016be8:	b570      	push	{r4, r5, r6, lr}
 8016bea:	4604      	mov	r4, r0
 8016bec:	4616      	mov	r6, r2
 8016bee:	460d      	mov	r5, r1
 8016bf0:	b901      	cbnz	r1, 8016bf4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016bf2:	b192      	cbz	r2, 8016c1a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016bf4:	6823      	ldr	r3, [r4, #0]
 8016bf6:	4620      	mov	r0, r4
 8016bf8:	695b      	ldr	r3, [r3, #20]
 8016bfa:	4798      	blx	r3
 8016bfc:	88e2      	ldrh	r2, [r4, #6]
 8016bfe:	88a1      	ldrh	r1, [r4, #4]
 8016c00:	4432      	add	r2, r6
 8016c02:	4429      	add	r1, r5
 8016c04:	4620      	mov	r0, r4
 8016c06:	b212      	sxth	r2, r2
 8016c08:	b209      	sxth	r1, r1
 8016c0a:	f7eb fc7f 	bl	800250c <_ZN8touchgfx8Drawable5setXYEss>
 8016c0e:	6823      	ldr	r3, [r4, #0]
 8016c10:	4620      	mov	r0, r4
 8016c12:	695b      	ldr	r3, [r3, #20]
 8016c14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016c18:	4718      	bx	r3
 8016c1a:	bd70      	pop	{r4, r5, r6, pc}

08016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016c1c:	b510      	push	{r4, lr}
 8016c1e:	4604      	mov	r4, r0
 8016c20:	4608      	mov	r0, r1
 8016c22:	2300      	movs	r3, #0
 8016c24:	8023      	strh	r3, [r4, #0]
 8016c26:	8063      	strh	r3, [r4, #2]
 8016c28:	6803      	ldr	r3, [r0, #0]
 8016c2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016c2e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016c32:	80a1      	strh	r1, [r4, #4]
 8016c34:	80e2      	strh	r2, [r4, #6]
 8016c36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c38:	4621      	mov	r1, r4
 8016c3a:	4798      	blx	r3
 8016c3c:	4620      	mov	r0, r4
 8016c3e:	bd10      	pop	{r4, pc}

08016c40 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8016c40:	b530      	push	{r4, r5, lr}
 8016c42:	8083      	strh	r3, [r0, #4]
 8016c44:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8016c48:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8016c4c:	7183      	strb	r3, [r0, #6]
 8016c4e:	79c3      	ldrb	r3, [r0, #7]
 8016c50:	6101      	str	r1, [r0, #16]
 8016c52:	f365 0306 	bfi	r3, r5, #0, #7
 8016c56:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8016c5a:	8282      	strh	r2, [r0, #20]
 8016c5c:	f365 13c7 	bfi	r3, r5, #7, #1
 8016c60:	71c3      	strb	r3, [r0, #7]
 8016c62:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8016c66:	7203      	strb	r3, [r0, #8]
 8016c68:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8016c6c:	7243      	strb	r3, [r0, #9]
 8016c6e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016c72:	8143      	strh	r3, [r0, #10]
 8016c74:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016c78:	8183      	strh	r3, [r0, #12]
 8016c7a:	4b01      	ldr	r3, [pc, #4]	; (8016c80 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8016c7c:	6003      	str	r3, [r0, #0]
 8016c7e:	bd30      	pop	{r4, r5, pc}
 8016c80:	0802a654 	.word	0x0802a654

08016c84 <_ZNK8touchgfx9ConstFont4findEt>:
 8016c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016c86:	6904      	ldr	r4, [r0, #16]
 8016c88:	b3bc      	cbz	r4, 8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016c8a:	88a3      	ldrh	r3, [r4, #4]
 8016c8c:	8a82      	ldrh	r2, [r0, #20]
 8016c8e:	1acb      	subs	r3, r1, r3
 8016c90:	f102 32ff 	add.w	r2, r2, #4294967295
 8016c94:	d431      	bmi.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016c96:	4293      	cmp	r3, r2
 8016c98:	dd0c      	ble.n	8016cb4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016c9a:	230e      	movs	r3, #14
 8016c9c:	fb03 4302 	mla	r3, r3, r2, r4
 8016ca0:	889b      	ldrh	r3, [r3, #4]
 8016ca2:	1a5b      	subs	r3, r3, r1
 8016ca4:	1ad3      	subs	r3, r2, r3
 8016ca6:	429a      	cmp	r2, r3
 8016ca8:	db27      	blt.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016caa:	2b00      	cmp	r3, #0
 8016cac:	bfbc      	itt	lt
 8016cae:	2302      	movlt	r3, #2
 8016cb0:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016cb4:	2500      	movs	r5, #0
 8016cb6:	260e      	movs	r6, #14
 8016cb8:	4295      	cmp	r5, r2
 8016cba:	dc1e      	bgt.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016cbc:	fb06 4003 	mla	r0, r6, r3, r4
 8016cc0:	8887      	ldrh	r7, [r0, #4]
 8016cc2:	42b9      	cmp	r1, r7
 8016cc4:	d01a      	beq.n	8016cfc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016cc6:	d20d      	bcs.n	8016ce4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016cc8:	1e5a      	subs	r2, r3, #1
 8016cca:	4295      	cmp	r5, r2
 8016ccc:	dc15      	bgt.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016cce:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016cd2:	1a5b      	subs	r3, r3, r1
 8016cd4:	1ad3      	subs	r3, r2, r3
 8016cd6:	429a      	cmp	r2, r3
 8016cd8:	db0f      	blt.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016cda:	429d      	cmp	r5, r3
 8016cdc:	ddec      	ble.n	8016cb8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016cde:	1953      	adds	r3, r2, r5
 8016ce0:	105b      	asrs	r3, r3, #1
 8016ce2:	e7e9      	b.n	8016cb8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016ce4:	1c5d      	adds	r5, r3, #1
 8016ce6:	42aa      	cmp	r2, r5
 8016ce8:	db07      	blt.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016cea:	8a43      	ldrh	r3, [r0, #18]
 8016cec:	1acb      	subs	r3, r1, r3
 8016cee:	442b      	add	r3, r5
 8016cf0:	429d      	cmp	r5, r3
 8016cf2:	dc02      	bgt.n	8016cfa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016cf4:	429a      	cmp	r2, r3
 8016cf6:	dadf      	bge.n	8016cb8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016cf8:	e7f1      	b.n	8016cde <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016cfa:	2000      	movs	r0, #0
 8016cfc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016cfe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016cfe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016d00:	4604      	mov	r4, r0
 8016d02:	4617      	mov	r7, r2
 8016d04:	461e      	mov	r6, r3
 8016d06:	b911      	cbnz	r1, 8016d0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016d08:	2500      	movs	r5, #0
 8016d0a:	4628      	mov	r0, r5
 8016d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016d0e:	290a      	cmp	r1, #10
 8016d10:	d0fa      	beq.n	8016d08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016d12:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016d16:	4291      	cmp	r1, r2
 8016d18:	d0f6      	beq.n	8016d08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016d1a:	f242 020b 	movw	r2, #8203	; 0x200b
 8016d1e:	4291      	cmp	r1, r2
 8016d20:	d0f2      	beq.n	8016d08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016d22:	f7ff ffaf 	bl	8016c84 <_ZNK8touchgfx9ConstFont4findEt>
 8016d26:	4605      	mov	r5, r0
 8016d28:	b950      	cbnz	r0, 8016d40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016d2a:	6823      	ldr	r3, [r4, #0]
 8016d2c:	4620      	mov	r0, r4
 8016d2e:	691b      	ldr	r3, [r3, #16]
 8016d30:	4798      	blx	r3
 8016d32:	4601      	mov	r1, r0
 8016d34:	4620      	mov	r0, r4
 8016d36:	f7ff ffa5 	bl	8016c84 <_ZNK8touchgfx9ConstFont4findEt>
 8016d3a:	4605      	mov	r5, r0
 8016d3c:	2800      	cmp	r0, #0
 8016d3e:	d0e3      	beq.n	8016d08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016d40:	6823      	ldr	r3, [r4, #0]
 8016d42:	4629      	mov	r1, r5
 8016d44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d46:	4620      	mov	r0, r4
 8016d48:	4798      	blx	r3
 8016d4a:	6038      	str	r0, [r7, #0]
 8016d4c:	6823      	ldr	r3, [r4, #0]
 8016d4e:	4620      	mov	r0, r4
 8016d50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016d52:	4798      	blx	r3
 8016d54:	7030      	strb	r0, [r6, #0]
 8016d56:	e7d8      	b.n	8016d0a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016d58 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 8016d58:	2000      	movs	r0, #0
 8016d5a:	4770      	bx	lr

08016d5c <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 8016d5c:	2001      	movs	r0, #1
 8016d5e:	4770      	bx	lr

08016d60 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 8016d60:	2002      	movs	r0, #2
 8016d62:	4770      	bx	lr

08016d64 <_ZN8touchgfx6ScreenD1Ev>:
 8016d64:	4770      	bx	lr

08016d66 <_ZN8touchgfx12GestureEventD1Ev>:
 8016d66:	4770      	bx	lr

08016d68 <_ZN8touchgfx9DragEventD1Ev>:
 8016d68:	4770      	bx	lr

08016d6a <_ZN8touchgfx10ClickEventD1Ev>:
 8016d6a:	4770      	bx	lr

08016d6c <_ZN8touchgfx10ClickEventD0Ev>:
 8016d6c:	b510      	push	{r4, lr}
 8016d6e:	210c      	movs	r1, #12
 8016d70:	4604      	mov	r4, r0
 8016d72:	f00e fcf7 	bl	8025764 <_ZdlPvj>
 8016d76:	4620      	mov	r0, r4
 8016d78:	bd10      	pop	{r4, pc}

08016d7a <_ZN8touchgfx9DragEventD0Ev>:
 8016d7a:	b510      	push	{r4, lr}
 8016d7c:	2110      	movs	r1, #16
 8016d7e:	4604      	mov	r4, r0
 8016d80:	f00e fcf0 	bl	8025764 <_ZdlPvj>
 8016d84:	4620      	mov	r0, r4
 8016d86:	bd10      	pop	{r4, pc}

08016d88 <_ZN8touchgfx12GestureEventD0Ev>:
 8016d88:	b510      	push	{r4, lr}
 8016d8a:	210c      	movs	r1, #12
 8016d8c:	4604      	mov	r4, r0
 8016d8e:	f00e fce9 	bl	8025764 <_ZdlPvj>
 8016d92:	4620      	mov	r0, r4
 8016d94:	bd10      	pop	{r4, pc}

08016d96 <_ZN8touchgfx6ScreenD0Ev>:
 8016d96:	b510      	push	{r4, lr}
 8016d98:	213c      	movs	r1, #60	; 0x3c
 8016d9a:	4604      	mov	r4, r0
 8016d9c:	f00e fce2 	bl	8025764 <_ZdlPvj>
 8016da0:	4620      	mov	r0, r4
 8016da2:	bd10      	pop	{r4, pc}

08016da4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016da4:	b530      	push	{r4, r5, lr}
 8016da6:	460d      	mov	r5, r1
 8016da8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016daa:	b087      	sub	sp, #28
 8016dac:	4604      	mov	r4, r0
 8016dae:	b301      	cbz	r1, 8016df2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016db0:	a801      	add	r0, sp, #4
 8016db2:	f7ff ff33 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016db6:	892a      	ldrh	r2, [r5, #8]
 8016db8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016dbc:	7928      	ldrb	r0, [r5, #4]
 8016dbe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016dc2:	f88d 0010 	strb.w	r0, [sp, #16]
 8016dc6:	1ad2      	subs	r2, r2, r3
 8016dc8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016dca:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016dcc:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016dd0:	441a      	add	r2, r3
 8016dd2:	896b      	ldrh	r3, [r5, #10]
 8016dd4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016dd8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016ddc:	1b5b      	subs	r3, r3, r5
 8016dde:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016de0:	442b      	add	r3, r5
 8016de2:	4d05      	ldr	r5, [pc, #20]	; (8016df8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016de4:	9503      	str	r5, [sp, #12]
 8016de6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016dea:	6803      	ldr	r3, [r0, #0]
 8016dec:	a903      	add	r1, sp, #12
 8016dee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016df0:	4798      	blx	r3
 8016df2:	b007      	add	sp, #28
 8016df4:	bd30      	pop	{r4, r5, pc}
 8016df6:	bf00      	nop
 8016df8:	0802a6d4 	.word	0x0802a6d4

08016dfc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016e00:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016e02:	b08a      	sub	sp, #40	; 0x28
 8016e04:	4604      	mov	r4, r0
 8016e06:	460d      	mov	r5, r1
 8016e08:	b113      	cbz	r3, 8016e10 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016e0a:	790b      	ldrb	r3, [r1, #4]
 8016e0c:	2b00      	cmp	r3, #0
 8016e0e:	d044      	beq.n	8016e9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016e10:	f104 0804 	add.w	r8, r4, #4
 8016e14:	4641      	mov	r1, r8
 8016e16:	a803      	add	r0, sp, #12
 8016e18:	f7ff ff00 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016e1c:	792b      	ldrb	r3, [r5, #4]
 8016e1e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016e22:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016e26:	b983      	cbnz	r3, 8016e4a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016e28:	892a      	ldrh	r2, [r5, #8]
 8016e2a:	88e9      	ldrh	r1, [r5, #6]
 8016e2c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016e30:	1b92      	subs	r2, r2, r6
 8016e32:	1bc9      	subs	r1, r1, r7
 8016e34:	9301      	str	r3, [sp, #4]
 8016e36:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016e3a:	9300      	str	r3, [sp, #0]
 8016e3c:	b212      	sxth	r2, r2
 8016e3e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8016e42:	b209      	sxth	r1, r1
 8016e44:	4640      	mov	r0, r8
 8016e46:	f7fa fd83 	bl	8011950 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016e4a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016e4c:	b329      	cbz	r1, 8016e9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016e4e:	a805      	add	r0, sp, #20
 8016e50:	f7ff fee4 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016e54:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016e58:	792b      	ldrb	r3, [r5, #4]
 8016e5a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016e5c:	f88d 3020 	strb.w	r3, [sp, #32]
 8016e60:	1abf      	subs	r7, r7, r2
 8016e62:	88ea      	ldrh	r2, [r5, #6]
 8016e64:	4417      	add	r7, r2
 8016e66:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016e68:	4417      	add	r7, r2
 8016e6a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016e6e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8016e72:	1ab6      	subs	r6, r6, r2
 8016e74:	892a      	ldrh	r2, [r5, #8]
 8016e76:	4416      	add	r6, r2
 8016e78:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016e7a:	4416      	add	r6, r2
 8016e7c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016e80:	4a07      	ldr	r2, [pc, #28]	; (8016ea0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016e82:	9207      	str	r2, [sp, #28]
 8016e84:	2600      	movs	r6, #0
 8016e86:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016e8a:	6803      	ldr	r3, [r0, #0]
 8016e8c:	a907      	add	r1, sp, #28
 8016e8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016e90:	4798      	blx	r3
 8016e92:	792b      	ldrb	r3, [r5, #4]
 8016e94:	b10b      	cbz	r3, 8016e9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016e96:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016e9a:	b00a      	add	sp, #40	; 0x28
 8016e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ea0:	0802a6ac 	.word	0x0802a6ac

08016ea4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016ea4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016ea8:	460c      	mov	r4, r1
 8016eaa:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016eac:	b088      	sub	sp, #32
 8016eae:	4605      	mov	r5, r0
 8016eb0:	2900      	cmp	r1, #0
 8016eb2:	d06d      	beq.n	8016f90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016eb4:	4668      	mov	r0, sp
 8016eb6:	f7ff feb1 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016eba:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016ebc:	88e3      	ldrh	r3, [r4, #6]
 8016ebe:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016ec2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016ec6:	440b      	add	r3, r1
 8016ec8:	b21b      	sxth	r3, r3
 8016eca:	4543      	cmp	r3, r8
 8016ecc:	db31      	blt.n	8016f32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ece:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016ed2:	44c4      	add	ip, r8
 8016ed4:	fa0f fc8c 	sxth.w	ip, ip
 8016ed8:	4563      	cmp	r3, ip
 8016eda:	da2a      	bge.n	8016f32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016edc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016ede:	8926      	ldrh	r6, [r4, #8]
 8016ee0:	4416      	add	r6, r2
 8016ee2:	b236      	sxth	r6, r6
 8016ee4:	42be      	cmp	r6, r7
 8016ee6:	db24      	blt.n	8016f32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ee8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016eec:	4438      	add	r0, r7
 8016eee:	b200      	sxth	r0, r0
 8016ef0:	4286      	cmp	r6, r0
 8016ef2:	da1e      	bge.n	8016f32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ef4:	8963      	ldrh	r3, [r4, #10]
 8016ef6:	4419      	add	r1, r3
 8016ef8:	b209      	sxth	r1, r1
 8016efa:	4541      	cmp	r1, r8
 8016efc:	db08      	blt.n	8016f10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016efe:	4561      	cmp	r1, ip
 8016f00:	da06      	bge.n	8016f10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016f02:	89a3      	ldrh	r3, [r4, #12]
 8016f04:	441a      	add	r2, r3
 8016f06:	b212      	sxth	r2, r2
 8016f08:	42ba      	cmp	r2, r7
 8016f0a:	db01      	blt.n	8016f10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016f0c:	4282      	cmp	r2, r0
 8016f0e:	db10      	blt.n	8016f32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016f10:	4b21      	ldr	r3, [pc, #132]	; (8016f98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016f12:	9304      	str	r3, [sp, #16]
 8016f14:	2302      	movs	r3, #2
 8016f16:	f88d 3014 	strb.w	r3, [sp, #20]
 8016f1a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016f1c:	2300      	movs	r3, #0
 8016f1e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016f22:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016f26:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016f2a:	6803      	ldr	r3, [r0, #0]
 8016f2c:	a904      	add	r1, sp, #16
 8016f2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016f30:	4798      	blx	r3
 8016f32:	1d29      	adds	r1, r5, #4
 8016f34:	a802      	add	r0, sp, #8
 8016f36:	f7ff fe71 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016f3a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016f3e:	88e0      	ldrh	r0, [r4, #6]
 8016f40:	7921      	ldrb	r1, [r4, #4]
 8016f42:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016f46:	8922      	ldrh	r2, [r4, #8]
 8016f48:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016f4a:	f88d 1014 	strb.w	r1, [sp, #20]
 8016f4e:	eba3 0808 	sub.w	r8, r3, r8
 8016f52:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016f56:	1bdf      	subs	r7, r3, r7
 8016f58:	b2bb      	uxth	r3, r7
 8016f5a:	fa1f f888 	uxth.w	r8, r8
 8016f5e:	8967      	ldrh	r7, [r4, #10]
 8016f60:	89a4      	ldrh	r4, [r4, #12]
 8016f62:	4440      	add	r0, r8
 8016f64:	4460      	add	r0, ip
 8016f66:	441a      	add	r2, r3
 8016f68:	44b8      	add	r8, r7
 8016f6a:	4423      	add	r3, r4
 8016f6c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016f70:	4433      	add	r3, r6
 8016f72:	4432      	add	r2, r6
 8016f74:	44e0      	add	r8, ip
 8016f76:	4c09      	ldr	r4, [pc, #36]	; (8016f9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016f78:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016f7a:	9404      	str	r4, [sp, #16]
 8016f7c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016f80:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016f84:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016f88:	6803      	ldr	r3, [r0, #0]
 8016f8a:	a904      	add	r1, sp, #16
 8016f8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016f8e:	4798      	blx	r3
 8016f90:	b008      	add	sp, #32
 8016f92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016f96:	bf00      	nop
 8016f98:	0802a6ac 	.word	0x0802a6ac
 8016f9c:	0802a6c0 	.word	0x0802a6c0

08016fa0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016fa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016fa2:	4604      	mov	r4, r0
 8016fa4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016fa8:	3201      	adds	r2, #1
 8016faa:	d112      	bne.n	8016fd2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016fac:	6803      	ldr	r3, [r0, #0]
 8016fae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016fb2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016fb6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016fba:	2500      	movs	r5, #0
 8016fbc:	9500      	str	r5, [sp, #0]
 8016fbe:	466d      	mov	r5, sp
 8016fc0:	4629      	mov	r1, r5
 8016fc2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016fc8:	4798      	blx	r3
 8016fca:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016fce:	e884 0003 	stmia.w	r4, {r0, r1}
 8016fd2:	4620      	mov	r0, r4
 8016fd4:	b003      	add	sp, #12
 8016fd6:	bd30      	pop	{r4, r5, pc}

08016fd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016fd8:	b513      	push	{r0, r1, r4, lr}
 8016fda:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016fde:	3301      	adds	r3, #1
 8016fe0:	4604      	mov	r4, r0
 8016fe2:	d109      	bne.n	8016ff8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016fe4:	4601      	mov	r1, r0
 8016fe6:	4668      	mov	r0, sp
 8016fe8:	f7ff fe18 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016fec:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ff0:	8423      	strh	r3, [r4, #32]
 8016ff2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016ff6:	8463      	strh	r3, [r4, #34]	; 0x22
 8016ff8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016ffc:	b002      	add	sp, #8
 8016ffe:	bd10      	pop	{r4, pc}

08017000 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017000:	b513      	push	{r0, r1, r4, lr}
 8017002:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017006:	3301      	adds	r3, #1
 8017008:	4604      	mov	r4, r0
 801700a:	d109      	bne.n	8017020 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801700c:	4601      	mov	r1, r0
 801700e:	4668      	mov	r0, sp
 8017010:	f7ff fe04 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017014:	f8bd 3000 	ldrh.w	r3, [sp]
 8017018:	8423      	strh	r3, [r4, #32]
 801701a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801701e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017020:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017024:	b002      	add	sp, #8
 8017026:	bd10      	pop	{r4, pc}

08017028 <_ZN8touchgfx6ScreenC1Ev>:
 8017028:	b570      	push	{r4, r5, r6, lr}
 801702a:	4605      	mov	r5, r0
 801702c:	4b16      	ldr	r3, [pc, #88]	; (8017088 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801702e:	f845 3b04 	str.w	r3, [r5], #4
 8017032:	2300      	movs	r3, #0
 8017034:	8103      	strh	r3, [r0, #8]
 8017036:	8143      	strh	r3, [r0, #10]
 8017038:	8183      	strh	r3, [r0, #12]
 801703a:	81c3      	strh	r3, [r0, #14]
 801703c:	8203      	strh	r3, [r0, #16]
 801703e:	8243      	strh	r3, [r0, #18]
 8017040:	8283      	strh	r3, [r0, #20]
 8017042:	82c3      	strh	r3, [r0, #22]
 8017044:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017048:	6203      	str	r3, [r0, #32]
 801704a:	8483      	strh	r3, [r0, #36]	; 0x24
 801704c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801704e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017052:	4a0e      	ldr	r2, [pc, #56]	; (801708c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017054:	6343      	str	r3, [r0, #52]	; 0x34
 8017056:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801705a:	4b0d      	ldr	r3, [pc, #52]	; (8017090 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801705c:	6042      	str	r2, [r0, #4]
 801705e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017062:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8017064:	4a0b      	ldr	r2, [pc, #44]	; (8017094 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017066:	4604      	mov	r4, r0
 8017068:	2101      	movs	r1, #1
 801706a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801706e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017072:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017076:	4628      	mov	r0, r5
 8017078:	4798      	blx	r3
 801707a:	6863      	ldr	r3, [r4, #4]
 801707c:	4628      	mov	r0, r5
 801707e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017080:	4631      	mov	r1, r6
 8017082:	4798      	blx	r3
 8017084:	4620      	mov	r0, r4
 8017086:	bd70      	pop	{r4, r5, r6, pc}
 8017088:	0802a6e8 	.word	0x0802a6e8
 801708c:	080294cc 	.word	0x080294cc
 8017090:	200279a6 	.word	0x200279a6
 8017094:	200279a4 	.word	0x200279a4

08017098 <_ZN8touchgfx6Screen4drawEv>:
 8017098:	b507      	push	{r0, r1, r2, lr}
 801709a:	4b09      	ldr	r3, [pc, #36]	; (80170c0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801709c:	f9b3 2000 	ldrsh.w	r2, [r3]
 80170a0:	4b08      	ldr	r3, [pc, #32]	; (80170c4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80170a2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80170a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80170aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80170ae:	6803      	ldr	r3, [r0, #0]
 80170b0:	2100      	movs	r1, #0
 80170b2:	9100      	str	r1, [sp, #0]
 80170b4:	689b      	ldr	r3, [r3, #8]
 80170b6:	4669      	mov	r1, sp
 80170b8:	4798      	blx	r3
 80170ba:	b003      	add	sp, #12
 80170bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80170c0:	200279a4 	.word	0x200279a4
 80170c4:	200279a6 	.word	0x200279a6

080170c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80170c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170cc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80170d0:	2b00      	cmp	r3, #0
 80170d2:	b089      	sub	sp, #36	; 0x24
 80170d4:	4680      	mov	r8, r0
 80170d6:	460c      	mov	r4, r1
 80170d8:	4615      	mov	r5, r2
 80170da:	dd0e      	ble.n	80170fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80170dc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80170e0:	2b00      	cmp	r3, #0
 80170e2:	dd0a      	ble.n	80170fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80170e4:	4628      	mov	r0, r5
 80170e6:	f7ff ff5b 	bl	8016fa0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80170ea:	4621      	mov	r1, r4
 80170ec:	f7fe fccc 	bl	8015a88 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80170f0:	69eb      	ldr	r3, [r5, #28]
 80170f2:	b928      	cbnz	r0, 8017100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80170f4:	461d      	mov	r5, r3
 80170f6:	2b00      	cmp	r3, #0
 80170f8:	d1f4      	bne.n	80170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80170fa:	b009      	add	sp, #36	; 0x24
 80170fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017100:	ae04      	add	r6, sp, #16
 8017102:	2b00      	cmp	r3, #0
 8017104:	f000 80b5 	beq.w	8017272 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017108:	682b      	ldr	r3, [r5, #0]
 801710a:	4629      	mov	r1, r5
 801710c:	68db      	ldr	r3, [r3, #12]
 801710e:	a802      	add	r0, sp, #8
 8017110:	4798      	blx	r3
 8017112:	4628      	mov	r0, r5
 8017114:	f7ff ff60 	bl	8016fd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017118:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801711c:	4407      	add	r7, r0
 801711e:	4628      	mov	r0, r5
 8017120:	f7ff ff6e 	bl	8017000 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017124:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017128:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801712c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017130:	4418      	add	r0, r3
 8017132:	4621      	mov	r1, r4
 8017134:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017138:	f8ad 0012 	strh.w	r0, [sp, #18]
 801713c:	b23f      	sxth	r7, r7
 801713e:	4630      	mov	r0, r6
 8017140:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017144:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017148:	f7fa fce6 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801714c:	4628      	mov	r0, r5
 801714e:	f7ff ff27 	bl	8016fa0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017152:	4602      	mov	r2, r0
 8017154:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017158:	ab06      	add	r3, sp, #24
 801715a:	e883 0003 	stmia.w	r3, {r0, r1}
 801715e:	4611      	mov	r1, r2
 8017160:	4618      	mov	r0, r3
 8017162:	f7fa fcd9 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 8017166:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801716a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801716e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017172:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017176:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801717a:	4299      	cmp	r1, r3
 801717c:	d10b      	bne.n	8017196 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801717e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017182:	4552      	cmp	r2, sl
 8017184:	d107      	bne.n	8017196 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017186:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801718a:	455a      	cmp	r2, fp
 801718c:	d103      	bne.n	8017196 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801718e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017192:	454a      	cmp	r2, r9
 8017194:	d06d      	beq.n	8017272 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017196:	f1bb 0f00 	cmp.w	fp, #0
 801719a:	dd65      	ble.n	8017268 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801719c:	f1b9 0f00 	cmp.w	r9, #0
 80171a0:	dd62      	ble.n	8017268 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80171a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80171a6:	fa1f f08a 	uxth.w	r0, sl
 80171aa:	4552      	cmp	r2, sl
 80171ac:	9000      	str	r0, [sp, #0]
 80171ae:	da12      	bge.n	80171d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80171b0:	9301      	str	r3, [sp, #4]
 80171b2:	9b00      	ldr	r3, [sp, #0]
 80171b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80171b8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80171bc:	1a9a      	subs	r2, r3, r2
 80171be:	f8ad 1010 	strh.w	r1, [sp, #16]
 80171c2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80171c6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80171ca:	69ea      	ldr	r2, [r5, #28]
 80171cc:	4631      	mov	r1, r6
 80171ce:	4640      	mov	r0, r8
 80171d0:	f7ff ff7a 	bl	80170c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80171d4:	9b01      	ldr	r3, [sp, #4]
 80171d6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80171da:	429a      	cmp	r2, r3
 80171dc:	b29f      	uxth	r7, r3
 80171de:	da0d      	bge.n	80171fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80171e0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80171e4:	1aba      	subs	r2, r7, r2
 80171e6:	f8ad a012 	strh.w	sl, [sp, #18]
 80171ea:	f8ad 2014 	strh.w	r2, [sp, #20]
 80171ee:	f8ad 9016 	strh.w	r9, [sp, #22]
 80171f2:	69ea      	ldr	r2, [r5, #28]
 80171f4:	4631      	mov	r1, r6
 80171f6:	4640      	mov	r0, r8
 80171f8:	f7ff ff66 	bl	80170c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80171fc:	8822      	ldrh	r2, [r4, #0]
 80171fe:	88a3      	ldrh	r3, [r4, #4]
 8017200:	445f      	add	r7, fp
 8017202:	4413      	add	r3, r2
 8017204:	b29b      	uxth	r3, r3
 8017206:	b2bf      	uxth	r7, r7
 8017208:	b23a      	sxth	r2, r7
 801720a:	b219      	sxth	r1, r3
 801720c:	4291      	cmp	r1, r2
 801720e:	dd0d      	ble.n	801722c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017210:	1bdb      	subs	r3, r3, r7
 8017212:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017216:	f8ad a012 	strh.w	sl, [sp, #18]
 801721a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801721e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017222:	69ea      	ldr	r2, [r5, #28]
 8017224:	4631      	mov	r1, r6
 8017226:	4640      	mov	r0, r8
 8017228:	f7ff ff4e 	bl	80170c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801722c:	88e2      	ldrh	r2, [r4, #6]
 801722e:	8863      	ldrh	r3, [r4, #2]
 8017230:	4413      	add	r3, r2
 8017232:	9a00      	ldr	r2, [sp, #0]
 8017234:	444a      	add	r2, r9
 8017236:	b29b      	uxth	r3, r3
 8017238:	fa1f f982 	uxth.w	r9, r2
 801723c:	fa0f f289 	sxth.w	r2, r9
 8017240:	b219      	sxth	r1, r3
 8017242:	428a      	cmp	r2, r1
 8017244:	da15      	bge.n	8017272 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017246:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801724a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801724e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017252:	eba3 0309 	sub.w	r3, r3, r9
 8017256:	f8ad 0010 	strh.w	r0, [sp, #16]
 801725a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801725e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017262:	69ea      	ldr	r2, [r5, #28]
 8017264:	4631      	mov	r1, r6
 8017266:	e001      	b.n	801726c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017268:	69ea      	ldr	r2, [r5, #28]
 801726a:	4621      	mov	r1, r4
 801726c:	4640      	mov	r0, r8
 801726e:	f7ff ff2b 	bl	80170c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017272:	4628      	mov	r0, r5
 8017274:	f7ff fe94 	bl	8016fa0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017278:	6861      	ldr	r1, [r4, #4]
 801727a:	4602      	mov	r2, r0
 801727c:	6820      	ldr	r0, [r4, #0]
 801727e:	4633      	mov	r3, r6
 8017280:	c303      	stmia	r3!, {r0, r1}
 8017282:	4611      	mov	r1, r2
 8017284:	4630      	mov	r0, r6
 8017286:	f7fa fc47 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801728a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801728e:	2b00      	cmp	r3, #0
 8017290:	f77f af33 	ble.w	80170fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017294:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017298:	2b00      	cmp	r3, #0
 801729a:	f77f af2e 	ble.w	80170fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801729e:	4628      	mov	r0, r5
 80172a0:	f7ff fe9a 	bl	8016fd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80172a4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80172a8:	1a18      	subs	r0, r3, r0
 80172aa:	f8ad 0010 	strh.w	r0, [sp, #16]
 80172ae:	4628      	mov	r0, r5
 80172b0:	f7ff fea6 	bl	8017000 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80172b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80172b8:	1a18      	subs	r0, r3, r0
 80172ba:	f8ad 0012 	strh.w	r0, [sp, #18]
 80172be:	682b      	ldr	r3, [r5, #0]
 80172c0:	4631      	mov	r1, r6
 80172c2:	689b      	ldr	r3, [r3, #8]
 80172c4:	4628      	mov	r0, r5
 80172c6:	4798      	blx	r3
 80172c8:	e717      	b.n	80170fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080172ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80172ca:	b570      	push	{r4, r5, r6, lr}
 80172cc:	460c      	mov	r4, r1
 80172ce:	b086      	sub	sp, #24
 80172d0:	1d06      	adds	r6, r0, #4
 80172d2:	2300      	movs	r3, #0
 80172d4:	4631      	mov	r1, r6
 80172d6:	4605      	mov	r5, r0
 80172d8:	a802      	add	r0, sp, #8
 80172da:	9301      	str	r3, [sp, #4]
 80172dc:	f7ff fc9e 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80172e0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80172e4:	8822      	ldrh	r2, [r4, #0]
 80172e6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80172ea:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80172ee:	f8ad 0014 	strh.w	r0, [sp, #20]
 80172f2:	1ad2      	subs	r2, r2, r3
 80172f4:	8863      	ldrh	r3, [r4, #2]
 80172f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80172fa:	1a5b      	subs	r3, r3, r1
 80172fc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017300:	f8ad 1016 	strh.w	r1, [sp, #22]
 8017304:	aa01      	add	r2, sp, #4
 8017306:	a904      	add	r1, sp, #16
 8017308:	4630      	mov	r0, r6
 801730a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801730e:	f7fa fcdb 	bl	8011cc8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8017312:	9a01      	ldr	r2, [sp, #4]
 8017314:	b11a      	cbz	r2, 801731e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8017316:	4621      	mov	r1, r4
 8017318:	4628      	mov	r0, r5
 801731a:	f7ff fed5 	bl	80170c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801731e:	b006      	add	sp, #24
 8017320:	bd70      	pop	{r4, r5, r6, pc}

08017322 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8017322:	b530      	push	{r4, r5, lr}
 8017324:	4602      	mov	r2, r0
 8017326:	4604      	mov	r4, r0
 8017328:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801732c:	b085      	sub	sp, #20
 801732e:	460d      	mov	r5, r1
 8017330:	6851      	ldr	r1, [r2, #4]
 8017332:	466b      	mov	r3, sp
 8017334:	c303      	stmia	r3!, {r0, r1}
 8017336:	4629      	mov	r1, r5
 8017338:	4668      	mov	r0, sp
 801733a:	f7fa fbed 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801733e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8017342:	b12b      	cbz	r3, 8017350 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8017344:	4669      	mov	r1, sp
 8017346:	4620      	mov	r0, r4
 8017348:	f7ff ffbf 	bl	80172ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801734c:	b005      	add	sp, #20
 801734e:	bd30      	pop	{r4, r5, pc}
 8017350:	3404      	adds	r4, #4
 8017352:	4621      	mov	r1, r4
 8017354:	a802      	add	r0, sp, #8
 8017356:	f7ff fc61 	bl	8016c1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801735a:	f8bd 3000 	ldrh.w	r3, [sp]
 801735e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8017362:	1a9b      	subs	r3, r3, r2
 8017364:	f8ad 3000 	strh.w	r3, [sp]
 8017368:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801736c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017370:	4669      	mov	r1, sp
 8017372:	1a9b      	subs	r3, r3, r2
 8017374:	4620      	mov	r0, r4
 8017376:	f8ad 3002 	strh.w	r3, [sp, #2]
 801737a:	f7fa fc6c 	bl	8011c56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801737e:	e7e5      	b.n	801734c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017380 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017380:	680a      	ldr	r2, [r1, #0]
 8017382:	460b      	mov	r3, r1
 8017384:	6992      	ldr	r2, [r2, #24]
 8017386:	1d01      	adds	r1, r0, #4
 8017388:	4618      	mov	r0, r3
 801738a:	4710      	bx	r2

0801738c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801738c:	4298      	cmp	r0, r3
 801738e:	d200      	bcs.n	8017392 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8017390:	b913      	cbnz	r3, 8017398 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8017392:	440a      	add	r2, r1
 8017394:	b210      	sxth	r0, r2
 8017396:	4770      	bx	lr
 8017398:	ee07 0a90 	vmov	s15, r0
 801739c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80173a0:	ee07 3a90 	vmov	s15, r3
 80173a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80173a8:	eddf 4a15 	vldr	s9, [pc, #84]	; 8017400 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 80173ac:	eddf 5a15 	vldr	s11, [pc, #84]	; 8017404 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 80173b0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80173b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80173b8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80173bc:	ee07 2a90 	vmov	s15, r2
 80173c0:	eee7 5a24 	vfma.f32	s11, s14, s9
 80173c4:	ee27 5a07 	vmul.f32	s10, s14, s14
 80173c8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80173cc:	eee5 6a25 	vfma.f32	s13, s10, s11
 80173d0:	ee07 1a90 	vmov	s15, r1
 80173d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80173d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80173dc:	eee6 7a26 	vfma.f32	s15, s12, s13
 80173e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80173e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173e8:	bfcc      	ite	gt
 80173ea:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80173ee:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80173f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80173f6:	ee17 3a90 	vmov	r3, s15
 80173fa:	b218      	sxth	r0, r3
 80173fc:	4770      	bx	lr
 80173fe:	bf00      	nop
 8017400:	402ce6b0 	.word	0x402ce6b0
 8017404:	3fd9cd60 	.word	0x3fd9cd60

08017408 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst>:
 8017408:	4298      	cmp	r0, r3
 801740a:	d200      	bcs.n	801740e <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x6>
 801740c:	b913      	cbnz	r3, 8017414 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xc>
 801740e:	1888      	adds	r0, r1, r2
 8017410:	b200      	sxth	r0, r0
 8017412:	4770      	bx	lr
 8017414:	ee07 0a90 	vmov	s15, r0
 8017418:	ee07 3a10 	vmov	s14, r3
 801741c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017420:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017424:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8017428:	2002      	movs	r0, #2
 801742a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801742e:	fb92 f0f0 	sdiv	r0, r2, r0
 8017432:	ee07 0a90 	vmov	s15, r0
 8017436:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 801743a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801743e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8017442:	ee07 1a90 	vmov	s15, r1
 8017446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801744a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801744e:	eddf 4a16 	vldr	s9, [pc, #88]	; 80174a8 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa0>
 8017452:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8017456:	d518      	bpl.n	801748a <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x82>
 8017458:	ed9f 5a14 	vldr	s10, [pc, #80]	; 80174ac <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa4>
 801745c:	eea7 5a24 	vfma.f32	s10, s14, s9
 8017460:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017464:	ee25 7a85 	vmul.f32	s14, s11, s10
 8017468:	eee7 7a26 	vfma.f32	s15, s14, s13
 801746c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017474:	bfcc      	ite	gt
 8017476:	ee77 7a86 	vaddgt.f32	s15, s15, s12
 801747a:	ee77 7ac6 	vsuble.f32	s15, s15, s12
 801747e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017482:	ee17 3a90 	vmov	r3, s15
 8017486:	b218      	sxth	r0, r3
 8017488:	4770      	bx	lr
 801748a:	eef0 5a00 	vmov.f32	s11, #0	; 0x40000000  2.0
 801748e:	ee37 7a65 	vsub.f32	s14, s14, s11
 8017492:	ed9f 5a07 	vldr	s10, [pc, #28]	; 80174b0 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa8>
 8017496:	eea7 5a24 	vfma.f32	s10, s14, s9
 801749a:	ee27 4a07 	vmul.f32	s8, s14, s14
 801749e:	eee4 5a05 	vfma.f32	s11, s8, s10
 80174a2:	eee5 7aa6 	vfma.f32	s15, s11, s13
 80174a6:	e7e1      	b.n	801746c <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x64>
 80174a8:	406612ff 	.word	0x406612ff
 80174ac:	c02612ff 	.word	0xc02612ff
 80174b0:	402612ff 	.word	0x402612ff

080174b4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80174b4:	4298      	cmp	r0, r3
 80174b6:	d200      	bcs.n	80174ba <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80174b8:	b913      	cbnz	r3, 80174c0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80174ba:	440a      	add	r2, r1
 80174bc:	b210      	sxth	r0, r2
 80174be:	4770      	bx	lr
 80174c0:	ee07 2a90 	vmov	s15, r2
 80174c4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80174c8:	ee07 0a90 	vmov	s15, r0
 80174cc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80174d0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80174d4:	ee07 3a10 	vmov	s14, r3
 80174d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80174dc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80174e0:	ee07 1a90 	vmov	s15, r1
 80174e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80174e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80174ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80174f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80174f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174f8:	bfcc      	ite	gt
 80174fa:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80174fe:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017502:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017506:	ee17 3a90 	vmov	r3, s15
 801750a:	b218      	sxth	r0, r3
 801750c:	4770      	bx	lr

0801750e <_ZN8touchgfx12TextProviderC1Ev>:
 801750e:	b538      	push	{r3, r4, r5, lr}
 8017510:	2500      	movs	r5, #0
 8017512:	2302      	movs	r3, #2
 8017514:	4604      	mov	r4, r0
 8017516:	e9c0 5500 	strd	r5, r5, [r0]
 801751a:	7403      	strb	r3, [r0, #16]
 801751c:	6145      	str	r5, [r0, #20]
 801751e:	7605      	strb	r5, [r0, #24]
 8017520:	83c5      	strh	r5, [r0, #30]
 8017522:	8405      	strh	r5, [r0, #32]
 8017524:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017526:	8705      	strh	r5, [r0, #56]	; 0x38
 8017528:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801752a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801752e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017532:	220e      	movs	r2, #14
 8017534:	4629      	mov	r1, r5
 8017536:	304c      	adds	r0, #76	; 0x4c
 8017538:	f00e faf0 	bl	8025b1c <memset>
 801753c:	2301      	movs	r3, #1
 801753e:	4620      	mov	r0, r4
 8017540:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017544:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017548:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801754c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017550:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017554:	f7f0 f976 	bl	8007844 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017558:	4620      	mov	r0, r4
 801755a:	bd38      	pop	{r3, r4, r5, pc}

0801755c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801755c:	b508      	push	{r3, lr}
 801755e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8017560:	b92b      	cbnz	r3, 801756e <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 8017562:	4b07      	ldr	r3, [pc, #28]	; (8017580 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 8017564:	4a07      	ldr	r2, [pc, #28]	; (8017584 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 8017566:	4808      	ldr	r0, [pc, #32]	; (8017588 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 8017568:	21c0      	movs	r1, #192	; 0xc0
 801756a:	f00e f929 	bl	80257c0 <__assert_func>
 801756e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017570:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017574:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017576:	fab0 f080 	clz	r0, r0
 801757a:	0940      	lsrs	r0, r0, #5
 801757c:	bd08      	pop	{r3, pc}
 801757e:	bf00      	nop
 8017580:	08028278 	.word	0x08028278
 8017584:	0802a943 	.word	0x0802a943
 8017588:	0802834a 	.word	0x0802834a

0801758c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801758c:	b530      	push	{r4, r5, lr}
 801758e:	2500      	movs	r5, #0
 8017590:	2401      	movs	r4, #1
 8017592:	6843      	ldr	r3, [r0, #4]
 8017594:	b913      	cbnz	r3, 801759c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017596:	6803      	ldr	r3, [r0, #0]
 8017598:	b313      	cbz	r3, 80175e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801759a:	6043      	str	r3, [r0, #4]
 801759c:	7e03      	ldrb	r3, [r0, #24]
 801759e:	b143      	cbz	r3, 80175b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80175a0:	6943      	ldr	r3, [r0, #20]
 80175a2:	b12b      	cbz	r3, 80175b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80175a4:	881a      	ldrh	r2, [r3, #0]
 80175a6:	b11a      	cbz	r2, 80175b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80175a8:	1c9a      	adds	r2, r3, #2
 80175aa:	6142      	str	r2, [r0, #20]
 80175ac:	8818      	ldrh	r0, [r3, #0]
 80175ae:	bd30      	pop	{r4, r5, pc}
 80175b0:	7605      	strb	r5, [r0, #24]
 80175b2:	6843      	ldr	r3, [r0, #4]
 80175b4:	8819      	ldrh	r1, [r3, #0]
 80175b6:	b199      	cbz	r1, 80175e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80175b8:	1c9a      	adds	r2, r3, #2
 80175ba:	2902      	cmp	r1, #2
 80175bc:	6042      	str	r2, [r0, #4]
 80175be:	d1f5      	bne.n	80175ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80175c0:	7c03      	ldrb	r3, [r0, #16]
 80175c2:	2b01      	cmp	r3, #1
 80175c4:	d8e5      	bhi.n	8017592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80175c6:	1c5a      	adds	r2, r3, #1
 80175c8:	3302      	adds	r3, #2
 80175ca:	7402      	strb	r2, [r0, #16]
 80175cc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80175d0:	6143      	str	r3, [r0, #20]
 80175d2:	2b00      	cmp	r3, #0
 80175d4:	d0dd      	beq.n	8017592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80175d6:	881b      	ldrh	r3, [r3, #0]
 80175d8:	2b00      	cmp	r3, #0
 80175da:	d0da      	beq.n	8017592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80175dc:	7604      	strb	r4, [r0, #24]
 80175de:	e7d8      	b.n	8017592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80175e0:	2000      	movs	r0, #0
 80175e2:	e7e4      	b.n	80175ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080175e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80175e4:	b430      	push	{r4, r5}
 80175e6:	6815      	ldr	r5, [r2, #0]
 80175e8:	6085      	str	r5, [r0, #8]
 80175ea:	6852      	ldr	r2, [r2, #4]
 80175ec:	60c2      	str	r2, [r0, #12]
 80175ee:	6443      	str	r3, [r0, #68]	; 0x44
 80175f0:	2200      	movs	r2, #0
 80175f2:	9b02      	ldr	r3, [sp, #8]
 80175f4:	7402      	strb	r2, [r0, #16]
 80175f6:	6001      	str	r1, [r0, #0]
 80175f8:	6483      	str	r3, [r0, #72]	; 0x48
 80175fa:	6042      	str	r2, [r0, #4]
 80175fc:	6142      	str	r2, [r0, #20]
 80175fe:	7602      	strb	r2, [r0, #24]
 8017600:	8702      	strh	r2, [r0, #56]	; 0x38
 8017602:	8402      	strh	r2, [r0, #32]
 8017604:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8017608:	bc30      	pop	{r4, r5}
 801760a:	f7f0 b91b 	b.w	8007844 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801760e <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>:
 801760e:	2301      	movs	r3, #1
 8017610:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8017614:	4770      	bx	lr
	...

08017618 <_ZN8touchgfx12TextProvider16unicodeConverterEh>:
 8017618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801761c:	b089      	sub	sp, #36	; 0x24
 801761e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8017620:	9302      	str	r3, [sp, #8]
 8017622:	b92b      	cbnz	r3, 8017630 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x18>
 8017624:	4bb4      	ldr	r3, [pc, #720]	; (80178f8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e0>)
 8017626:	4ab5      	ldr	r2, [pc, #724]	; (80178fc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e4>)
 8017628:	21c0      	movs	r1, #192	; 0xc0
 801762a:	48b5      	ldr	r0, [pc, #724]	; (8017900 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e8>)
 801762c:	f00e f8c8 	bl	80257c0 <__assert_func>
 8017630:	f8b0 b036 	ldrh.w	fp, [r0, #54]	; 0x36
 8017634:	eb00 064b 	add.w	r6, r0, fp, lsl #1
 8017638:	8c73      	ldrh	r3, [r6, #34]	; 0x22
 801763a:	2b00      	cmp	r3, #0
 801763c:	f000 8158 	beq.w	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017640:	2b7f      	cmp	r3, #127	; 0x7f
 8017642:	d819      	bhi.n	8017678 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 8017644:	2901      	cmp	r1, #1
 8017646:	d117      	bne.n	8017678 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 8017648:	2b3c      	cmp	r3, #60	; 0x3c
 801764a:	f000 83fd 	beq.w	8017e48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x830>
 801764e:	2b3e      	cmp	r3, #62	; 0x3e
 8017650:	f000 83fc 	beq.w	8017e4c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x834>
 8017654:	2b28      	cmp	r3, #40	; 0x28
 8017656:	f000 83fb 	beq.w	8017e50 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x838>
 801765a:	2b29      	cmp	r3, #41	; 0x29
 801765c:	f000 83fa 	beq.w	8017e54 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x83c>
 8017660:	2b5b      	cmp	r3, #91	; 0x5b
 8017662:	f000 83f9 	beq.w	8017e58 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 8017666:	2b5d      	cmp	r3, #93	; 0x5d
 8017668:	f000 83f8 	beq.w	8017e5c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x844>
 801766c:	2b7b      	cmp	r3, #123	; 0x7b
 801766e:	f000 83f7 	beq.w	8017e60 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x848>
 8017672:	2b7d      	cmp	r3, #125	; 0x7d
 8017674:	f000 83f6 	beq.w	8017e64 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84c>
 8017678:	9a02      	ldr	r2, [sp, #8]
 801767a:	2a01      	cmp	r2, #1
 801767c:	d803      	bhi.n	8017686 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e>
 801767e:	4ba1      	ldr	r3, [pc, #644]	; (8017904 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ec>)
 8017680:	4aa1      	ldr	r2, [pc, #644]	; (8017908 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f0>)
 8017682:	21c5      	movs	r1, #197	; 0xc5
 8017684:	e7d1      	b.n	801762a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x12>
 8017686:	f10b 0201 	add.w	r2, fp, #1
 801768a:	b292      	uxth	r2, r2
 801768c:	2a09      	cmp	r2, #9
 801768e:	4611      	mov	r1, r2
 8017690:	bf88      	it	hi
 8017692:	f1a2 010a 	subhi.w	r1, r2, #10
 8017696:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801769a:	9104      	str	r1, [sp, #16]
 801769c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 801769e:	9101      	str	r1, [sp, #4]
 80176a0:	9902      	ldr	r1, [sp, #8]
 80176a2:	2902      	cmp	r1, #2
 80176a4:	d0eb      	beq.n	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80176a6:	f10b 0102 	add.w	r1, fp, #2
 80176aa:	b289      	uxth	r1, r1
 80176ac:	2909      	cmp	r1, #9
 80176ae:	bf88      	it	hi
 80176b0:	390a      	subhi	r1, #10
 80176b2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80176b6:	9c01      	ldr	r4, [sp, #4]
 80176b8:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 80176ba:	f240 6151 	movw	r1, #1617	; 0x651
 80176be:	428c      	cmp	r4, r1
 80176c0:	d125      	bne.n	801770e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 80176c2:	f2a3 614b 	subw	r1, r3, #1611	; 0x64b
 80176c6:	b289      	uxth	r1, r1
 80176c8:	2914      	cmp	r1, #20
 80176ca:	d914      	bls.n	80176f6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80176cc:	f023 0104 	bic.w	r1, r3, #4
 80176d0:	b289      	uxth	r1, r1
 80176d2:	f5b1 6fce 	cmp.w	r1, #1648	; 0x670
 80176d6:	d00e      	beq.n	80176f6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80176d8:	f2a3 61d6 	subw	r1, r3, #1750	; 0x6d6
 80176dc:	b289      	uxth	r1, r1
 80176de:	2917      	cmp	r1, #23
 80176e0:	d804      	bhi.n	80176ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xd4>
 80176e2:	4f8a      	ldr	r7, [pc, #552]	; (801790c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 80176e4:	fa27 f101 	lsr.w	r1, r7, r1
 80176e8:	07c9      	lsls	r1, r1, #31
 80176ea:	d404      	bmi.n	80176f6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80176ec:	f6a3 01e4 	subw	r1, r3, #2276	; 0x8e4
 80176f0:	b289      	uxth	r1, r1
 80176f2:	291a      	cmp	r1, #26
 80176f4:	d80b      	bhi.n	801770e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 80176f6:	2a0a      	cmp	r2, #10
 80176f8:	bf28      	it	cs
 80176fa:	2200      	movcs	r2, #0
 80176fc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017700:	f240 6151 	movw	r1, #1617	; 0x651
 8017704:	8471      	strh	r1, [r6, #34]	; 0x22
 8017706:	8453      	strh	r3, [r2, #34]	; 0x22
 8017708:	461a      	mov	r2, r3
 801770a:	9b01      	ldr	r3, [sp, #4]
 801770c:	9201      	str	r2, [sp, #4]
 801770e:	f2a3 6222 	subw	r2, r3, #1570	; 0x622
 8017712:	b292      	uxth	r2, r2
 8017714:	2a18      	cmp	r2, #24
 8017716:	d90e      	bls.n	8017736 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8017718:	f5a3 62c8 	sub.w	r2, r3, #1600	; 0x640
 801771c:	b292      	uxth	r2, r2
 801771e:	2a0a      	cmp	r2, #10
 8017720:	d909      	bls.n	8017736 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8017722:	f46f 69ce 	mvn.w	r9, #1648	; 0x670
 8017726:	eb03 0209 	add.w	r2, r3, r9
 801772a:	b292      	uxth	r2, r2
 801772c:	2a62      	cmp	r2, #98	; 0x62
 801772e:	d902      	bls.n	8017736 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8017730:	2b20      	cmp	r3, #32
 8017732:	f040 80dd 	bne.w	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017736:	9a02      	ldr	r2, [sp, #8]
 8017738:	2a03      	cmp	r2, #3
 801773a:	d0a0      	beq.n	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 801773c:	f10b 0103 	add.w	r1, fp, #3
 8017740:	b289      	uxth	r1, r1
 8017742:	2909      	cmp	r1, #9
 8017744:	460a      	mov	r2, r1
 8017746:	bf88      	it	hi
 8017748:	f1a1 020a 	subhi.w	r2, r1, #10
 801774c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017750:	f8b2 c022 	ldrh.w	ip, [r2, #34]	; 0x22
 8017754:	9a02      	ldr	r2, [sp, #8]
 8017756:	2a04      	cmp	r2, #4
 8017758:	d091      	beq.n	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 801775a:	f10b 0204 	add.w	r2, fp, #4
 801775e:	b292      	uxth	r2, r2
 8017760:	2a09      	cmp	r2, #9
 8017762:	bf88      	it	hi
 8017764:	3a0a      	subhi	r2, #10
 8017766:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801776a:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801776c:	f2a2 6622 	subw	r6, r2, #1570	; 0x622
 8017770:	2e18      	cmp	r6, #24
 8017772:	f240 80cd 	bls.w	8017910 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8017776:	f5a2 66c8 	sub.w	r6, r2, #1600	; 0x640
 801777a:	2e0a      	cmp	r6, #10
 801777c:	f240 80c8 	bls.w	8017910 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8017780:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8017784:	4442      	add	r2, r8
 8017786:	2a62      	cmp	r2, #98	; 0x62
 8017788:	f240 80c2 	bls.w	8017910 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 801778c:	f2a3 6227 	subw	r2, r3, #1575	; 0x627
 8017790:	b292      	uxth	r2, r2
 8017792:	2a21      	cmp	r2, #33	; 0x21
 8017794:	f200 80bc 	bhi.w	8017910 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8017798:	f2a5 6227 	subw	r2, r5, #1575	; 0x627
 801779c:	b292      	uxth	r2, r2
 801779e:	2a23      	cmp	r2, #35	; 0x23
 80177a0:	d82d      	bhi.n	80177fe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80177a2:	f2ac 622f 	subw	r2, ip, #1583	; 0x62f
 80177a6:	b292      	uxth	r2, r2
 80177a8:	2a18      	cmp	r2, #24
 80177aa:	d828      	bhi.n	80177fe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80177ac:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 80177b0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80177b4:	f5a2 4282 	sub.w	r2, r2, #16640	; 0x4100
 80177b8:	ebc3 1603 	rsb	r6, r3, r3, lsl #4
 80177bc:	3a1a      	subs	r2, #26
 80177be:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
 80177c2:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 80177c6:	6c87      	ldr	r7, [r0, #72]	; 0x48
 80177c8:	4462      	add	r2, ip
 80177ca:	b292      	uxth	r2, r2
 80177cc:	b1bf      	cbz	r7, 80177fe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80177ce:	8b3e      	ldrh	r6, [r7, #24]
 80177d0:	b1ae      	cbz	r6, 80177fe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80177d2:	f8d7 9000 	ldr.w	r9, [r7]
 80177d6:	f04f 0e00 	mov.w	lr, #0
 80177da:	eb06 070e 	add.w	r7, r6, lr
 80177de:	107f      	asrs	r7, r7, #1
 80177e0:	240a      	movs	r4, #10
 80177e2:	fb04 fa07 	mul.w	sl, r4, r7
 80177e6:	eb09 080a 	add.w	r8, r9, sl
 80177ea:	f839 a00a 	ldrh.w	sl, [r9, sl]
 80177ee:	4552      	cmp	r2, sl
 80177f0:	d968      	bls.n	80178c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ac>
 80177f2:	f107 0e01 	add.w	lr, r7, #1
 80177f6:	e000      	b.n	80177fa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e2>
 80177f8:	463e      	mov	r6, r7
 80177fa:	4576      	cmp	r6, lr
 80177fc:	dced      	bgt.n	80177da <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1c2>
 80177fe:	f5a3 62c5 	sub.w	r2, r3, #1576	; 0x628
 8017802:	b292      	uxth	r2, r2
 8017804:	2a22      	cmp	r2, #34	; 0x22
 8017806:	f240 8086 	bls.w	8017916 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2fe>
 801780a:	9a01      	ldr	r2, [sp, #4]
 801780c:	f2a2 624b 	subw	r2, r2, #1611	; 0x64b
 8017810:	b292      	uxth	r2, r2
 8017812:	2a14      	cmp	r2, #20
 8017814:	d91c      	bls.n	8017850 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8017816:	9a01      	ldr	r2, [sp, #4]
 8017818:	f5b2 6fce 	cmp.w	r2, #1648	; 0x670
 801781c:	d018      	beq.n	8017850 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 801781e:	9901      	ldr	r1, [sp, #4]
 8017820:	f240 6274 	movw	r2, #1652	; 0x674
 8017824:	4291      	cmp	r1, r2
 8017826:	d013      	beq.n	8017850 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8017828:	f2a1 62d6 	subw	r2, r1, #1750	; 0x6d6
 801782c:	b292      	uxth	r2, r2
 801782e:	2a17      	cmp	r2, #23
 8017830:	d804      	bhi.n	801783c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x224>
 8017832:	4936      	ldr	r1, [pc, #216]	; (801790c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 8017834:	fa21 f202 	lsr.w	r2, r1, r2
 8017838:	07d7      	lsls	r7, r2, #31
 801783a:	d409      	bmi.n	8017850 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 801783c:	9a01      	ldr	r2, [sp, #4]
 801783e:	f6a2 02e4 	subw	r2, r2, #2276	; 0x8e4
 8017842:	b292      	uxth	r2, r2
 8017844:	2a1a      	cmp	r2, #26
 8017846:	d903      	bls.n	8017850 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8017848:	2200      	movs	r2, #0
 801784a:	46ac      	mov	ip, r5
 801784c:	9d01      	ldr	r5, [sp, #4]
 801784e:	9201      	str	r2, [sp, #4]
 8017850:	2b20      	cmp	r3, #32
 8017852:	d005      	beq.n	8017860 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x248>
 8017854:	f2a3 6226 	subw	r2, r3, #1574	; 0x626
 8017858:	b292      	uxth	r2, r2
 801785a:	2a24      	cmp	r2, #36	; 0x24
 801785c:	f200 814e 	bhi.w	8017afc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8017860:	f2a5 6222 	subw	r2, r5, #1570	; 0x622
 8017864:	b292      	uxth	r2, r2
 8017866:	2ab3      	cmp	r2, #179	; 0xb3
 8017868:	f200 8148 	bhi.w	8017afc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801786c:	f240 6244 	movw	r2, #1604	; 0x644
 8017870:	4295      	cmp	r5, r2
 8017872:	d104      	bne.n	801787e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x266>
 8017874:	f240 6227 	movw	r2, #1575	; 0x627
 8017878:	4594      	cmp	ip, r2
 801787a:	f000 813f 	beq.w	8017afc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801787e:	9901      	ldr	r1, [sp, #4]
 8017880:	f240 624f 	movw	r2, #1615	; 0x64f
 8017884:	4291      	cmp	r1, r2
 8017886:	f000 8139 	beq.w	8017afc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801788a:	6c81      	ldr	r1, [r0, #72]	; 0x48
 801788c:	2900      	cmp	r1, #0
 801788e:	f000 8135 	beq.w	8017afc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8017892:	8b8a      	ldrh	r2, [r1, #28]
 8017894:	2a00      	cmp	r2, #0
 8017896:	f000 8132 	beq.w	8017afe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e6>
 801789a:	b2ed      	uxtb	r5, r5
 801789c:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
 80178a0:	6889      	ldr	r1, [r1, #8]
 80178a2:	b2ad      	uxth	r5, r5
 80178a4:	2700      	movs	r7, #0
 80178a6:	f04f 080a 	mov.w	r8, #10
 80178aa:	19d6      	adds	r6, r2, r7
 80178ac:	1076      	asrs	r6, r6, #1
 80178ae:	fb08 fc06 	mul.w	ip, r8, r6
 80178b2:	eb01 0e0c 	add.w	lr, r1, ip
 80178b6:	f831 c00c 	ldrh.w	ip, [r1, ip]
 80178ba:	4565      	cmp	r5, ip
 80178bc:	f240 8121 	bls.w	8017b02 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4ea>
 80178c0:	1c77      	adds	r7, r6, #1
 80178c2:	e118      	b.n	8017af6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4de>
 80178c4:	d398      	bcc.n	80177f8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e0>
 80178c6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80178ca:	9c01      	ldr	r4, [sp, #4]
 80178cc:	42a2      	cmp	r2, r4
 80178ce:	d196      	bne.n	80177fe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80178d0:	9b02      	ldr	r3, [sp, #8]
 80178d2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80178d4:	3b03      	subs	r3, #3
 80178d6:	2909      	cmp	r1, #9
 80178d8:	8703      	strh	r3, [r0, #56]	; 0x38
 80178da:	bf88      	it	hi
 80178dc:	f1ab 0207 	subhi.w	r2, fp, #7
 80178e0:	f04f 0301 	mov.w	r3, #1
 80178e4:	bf88      	it	hi
 80178e6:	86c2      	strhhi	r2, [r0, #54]	; 0x36
 80178e8:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 80178ec:	f8b8 3002 	ldrh.w	r3, [r8, #2]
 80178f0:	4618      	mov	r0, r3
 80178f2:	b009      	add	sp, #36	; 0x24
 80178f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178f8:	08028278 	.word	0x08028278
 80178fc:	0802a943 	.word	0x0802a943
 8017900:	0802834a 	.word	0x0802834a
 8017904:	08028376 	.word	0x08028376
 8017908:	0802a871 	.word	0x0802a871
 801790c:	00f67e7f 	.word	0x00f67e7f
 8017910:	2b20      	cmp	r3, #32
 8017912:	f47f af74 	bne.w	80177fe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8017916:	9a01      	ldr	r2, [sp, #4]
 8017918:	f2a2 622c 	subw	r2, r2, #1580	; 0x62c
 801791c:	b292      	uxth	r2, r2
 801791e:	2a25      	cmp	r2, #37	; 0x25
 8017920:	f63f af73 	bhi.w	801780a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8017924:	f2a5 612c 	subw	r1, r5, #1580	; 0x62c
 8017928:	b289      	uxth	r1, r1
 801792a:	2925      	cmp	r1, #37	; 0x25
 801792c:	d915      	bls.n	801795a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x342>
 801792e:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 8017932:	f000 82ee 	beq.w	8017f12 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8fa>
 8017936:	f240 62d2 	movw	r2, #1746	; 0x6d2
 801793a:	4295      	cmp	r5, r2
 801793c:	f47f af65 	bne.w	801780a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8017940:	9a01      	ldr	r2, [sp, #4]
 8017942:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017946:	00d2      	lsls	r2, r2, #3
 8017948:	2b20      	cmp	r3, #32
 801794a:	b292      	uxth	r2, r2
 801794c:	d107      	bne.n	801795e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 801794e:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 8017952:	3a30      	subs	r2, #48	; 0x30
 8017954:	b292      	uxth	r2, r2
 8017956:	2127      	movs	r1, #39	; 0x27
 8017958:	e018      	b.n	801798c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>
 801795a:	2b20      	cmp	r3, #32
 801795c:	d035      	beq.n	80179ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b2>
 801795e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8017962:	ebc3 1242 	rsb	r2, r3, r2, lsl #5
 8017966:	0112      	lsls	r2, r2, #4
 8017968:	f502 42e5 	add.w	r2, r2, #29312	; 0x7280
 801796c:	b292      	uxth	r2, r2
 801796e:	9c01      	ldr	r4, [sp, #4]
 8017970:	eb04 0684 	add.w	r6, r4, r4, lsl #2
 8017974:	eb02 02c6 	add.w	r2, r2, r6, lsl #3
 8017978:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 801797c:	b292      	uxth	r2, r2
 801797e:	f000 82d4 	beq.w	8017f2a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x912>
 8017982:	f240 66d2 	movw	r6, #1746	; 0x6d2
 8017986:	42b5      	cmp	r5, r6
 8017988:	bf08      	it	eq
 801798a:	2127      	moveq	r1, #39	; 0x27
 801798c:	6c87      	ldr	r7, [r0, #72]	; 0x48
 801798e:	2f00      	cmp	r7, #0
 8017990:	f43f af3b 	beq.w	801780a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8017994:	8b7e      	ldrh	r6, [r7, #26]
 8017996:	2e00      	cmp	r6, #0
 8017998:	f43f af37 	beq.w	801780a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 801799c:	440a      	add	r2, r1
 801799e:	f502 6212 	add.w	r2, r2, #2336	; 0x920
 80179a2:	6879      	ldr	r1, [r7, #4]
 80179a4:	b292      	uxth	r2, r2
 80179a6:	f04f 0e00 	mov.w	lr, #0
 80179aa:	f04f 0a0a 	mov.w	sl, #10
 80179ae:	eb06 070e 	add.w	r7, r6, lr
 80179b2:	107f      	asrs	r7, r7, #1
 80179b4:	fb0a f807 	mul.w	r8, sl, r7
 80179b8:	eb01 0908 	add.w	r9, r1, r8
 80179bc:	f831 8008 	ldrh.w	r8, [r1, r8]
 80179c0:	4542      	cmp	r2, r8
 80179c2:	d909      	bls.n	80179d8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3c0>
 80179c4:	f107 0e01 	add.w	lr, r7, #1
 80179c8:	e003      	b.n	80179d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3ba>
 80179ca:	f64c 72d0 	movw	r2, #53200	; 0xcfd0
 80179ce:	e7ce      	b.n	801796e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x356>
 80179d0:	463e      	mov	r6, r7
 80179d2:	4576      	cmp	r6, lr
 80179d4:	dceb      	bgt.n	80179ae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x396>
 80179d6:	e718      	b.n	801780a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 80179d8:	d3fa      	bcc.n	80179d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b8>
 80179da:	2200      	movs	r2, #0
 80179dc:	9201      	str	r2, [sp, #4]
 80179de:	f109 0102 	add.w	r1, r9, #2
 80179e2:	2202      	movs	r2, #2
 80179e4:	9c01      	ldr	r4, [sp, #4]
 80179e6:	4fbe      	ldr	r7, [pc, #760]	; (8017ce0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>)
 80179e8:	2c00      	cmp	r4, #0
 80179ea:	bf0c      	ite	eq
 80179ec:	4616      	moveq	r6, r2
 80179ee:	1c56      	addne	r6, r2, #1
 80179f0:	3601      	adds	r6, #1
 80179f2:	9c02      	ldr	r4, [sp, #8]
 80179f4:	b2b5      	uxth	r5, r6
 80179f6:	42ac      	cmp	r4, r5
 80179f8:	f67f ae41 	bls.w	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80179fc:	445d      	add	r5, fp
 80179fe:	b2ad      	uxth	r5, r5
 8017a00:	2d09      	cmp	r5, #9
 8017a02:	bf88      	it	hi
 8017a04:	3d0a      	subhi	r5, #10
 8017a06:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017a0a:	8c6d      	ldrh	r5, [r5, #34]	; 0x22
 8017a0c:	f2a5 6c4b 	subw	ip, r5, #1611	; 0x64b
 8017a10:	f1bc 0f14 	cmp.w	ip, #20
 8017a14:	d97a      	bls.n	8017b0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8017a16:	f025 0c04 	bic.w	ip, r5, #4
 8017a1a:	f5bc 6fce 	cmp.w	ip, #1648	; 0x670
 8017a1e:	d075      	beq.n	8017b0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8017a20:	f2a5 6cd6 	subw	ip, r5, #1750	; 0x6d6
 8017a24:	fa1f fc8c 	uxth.w	ip, ip
 8017a28:	f1bc 0f17 	cmp.w	ip, #23
 8017a2c:	d804      	bhi.n	8017a38 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x420>
 8017a2e:	fa27 fc0c 	lsr.w	ip, r7, ip
 8017a32:	f01c 0f01 	tst.w	ip, #1
 8017a36:	d169      	bne.n	8017b0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8017a38:	f6a5 0ce4 	subw	ip, r5, #2276	; 0x8e4
 8017a3c:	f1bc 0f1a 	cmp.w	ip, #26
 8017a40:	d964      	bls.n	8017b0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8017a42:	f2a5 6622 	subw	r6, r5, #1570	; 0x622
 8017a46:	2e18      	cmp	r6, #24
 8017a48:	d962      	bls.n	8017b10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 8017a4a:	f5a5 66c8 	sub.w	r6, r5, #1600	; 0x640
 8017a4e:	2e0a      	cmp	r6, #10
 8017a50:	d95e      	bls.n	8017b10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 8017a52:	f46f 66ce 	mvn.w	r6, #1648	; 0x670
 8017a56:	4435      	add	r5, r6
 8017a58:	2d62      	cmp	r5, #98	; 0x62
 8017a5a:	bf94      	ite	ls
 8017a5c:	2400      	movls	r4, #0
 8017a5e:	2401      	movhi	r4, #1
 8017a60:	f890 5060 	ldrb.w	r5, [r0, #96]	; 0x60
 8017a64:	9403      	str	r4, [sp, #12]
 8017a66:	f085 0401 	eor.w	r4, r5, #1
 8017a6a:	9406      	str	r4, [sp, #24]
 8017a6c:	9c03      	ldr	r4, [sp, #12]
 8017a6e:	2c00      	cmp	r4, #0
 8017a70:	9c06      	ldr	r4, [sp, #24]
 8017a72:	bf0c      	ite	eq
 8017a74:	2502      	moveq	r5, #2
 8017a76:	2500      	movne	r5, #0
 8017a78:	eb05 0904 	add.w	r9, r5, r4
 8017a7c:	2900      	cmp	r1, #0
 8017a7e:	f000 817f 	beq.w	8017d80 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x768>
 8017a82:	f831 5019 	ldrh.w	r5, [r1, r9, lsl #1]
 8017a86:	2d00      	cmp	r5, #0
 8017a88:	f040 821a 	bne.w	8017ec0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8017a8c:	2a00      	cmp	r2, #0
 8017a8e:	f000 8217 	beq.w	8017ec0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8017a92:	eb0b 0502 	add.w	r5, fp, r2
 8017a96:	b2ad      	uxth	r5, r5
 8017a98:	2d09      	cmp	r5, #9
 8017a9a:	bf88      	it	hi
 8017a9c:	3d0a      	subhi	r5, #10
 8017a9e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017aa2:	f8df c23c 	ldr.w	ip, [pc, #572]	; 8017ce0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 8017aa6:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 8017aa8:	1c56      	adds	r6, r2, #1
 8017aaa:	f2a7 654b 	subw	r5, r7, #1611	; 0x64b
 8017aae:	2d14      	cmp	r5, #20
 8017ab0:	d911      	bls.n	8017ad6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8017ab2:	f027 0504 	bic.w	r5, r7, #4
 8017ab6:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 8017aba:	d00c      	beq.n	8017ad6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8017abc:	f2a7 65d6 	subw	r5, r7, #1750	; 0x6d6
 8017ac0:	b2ad      	uxth	r5, r5
 8017ac2:	2d17      	cmp	r5, #23
 8017ac4:	d803      	bhi.n	8017ace <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b6>
 8017ac6:	fa2c f505 	lsr.w	r5, ip, r5
 8017aca:	07ed      	lsls	r5, r5, #31
 8017acc:	d403      	bmi.n	8017ad6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8017ace:	f6a7 05e4 	subw	r5, r7, #2276	; 0x8e4
 8017ad2:	2d1a      	cmp	r5, #26
 8017ad4:	d81e      	bhi.n	8017b14 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4fc>
 8017ad6:	9c02      	ldr	r4, [sp, #8]
 8017ad8:	b2b5      	uxth	r5, r6
 8017ada:	42ac      	cmp	r4, r5
 8017adc:	f67f adcf 	bls.w	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8017ae0:	445d      	add	r5, fp
 8017ae2:	b2ad      	uxth	r5, r5
 8017ae4:	2d09      	cmp	r5, #9
 8017ae6:	bf88      	it	hi
 8017ae8:	3d0a      	subhi	r5, #10
 8017aea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017aee:	3601      	adds	r6, #1
 8017af0:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 8017af2:	e7da      	b.n	8017aaa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x492>
 8017af4:	4632      	mov	r2, r6
 8017af6:	4297      	cmp	r7, r2
 8017af8:	f6ff aed7 	blt.w	80178aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 8017afc:	2200      	movs	r2, #0
 8017afe:	4611      	mov	r1, r2
 8017b00:	e770      	b.n	80179e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 8017b02:	d3f7      	bcc.n	8017af4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4dc>
 8017b04:	f10e 0102 	add.w	r1, lr, #2
 8017b08:	2201      	movs	r2, #1
 8017b0a:	e76b      	b.n	80179e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 8017b0c:	3601      	adds	r6, #1
 8017b0e:	e770      	b.n	80179f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3da>
 8017b10:	2400      	movs	r4, #0
 8017b12:	e7a5      	b.n	8017a60 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x448>
 8017b14:	f8d0 c048 	ldr.w	ip, [r0, #72]	; 0x48
 8017b18:	f1bc 0f00 	cmp.w	ip, #0
 8017b1c:	d076      	beq.n	8017c0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 8017b1e:	f46f 64c4 	mvn.w	r4, #1568	; 0x620
 8017b22:	193d      	adds	r5, r7, r4
 8017b24:	2d19      	cmp	r5, #25
 8017b26:	d840      	bhi.n	8017baa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x592>
 8017b28:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8017b2c:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 8017b30:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8017b34:	4457      	add	r7, sl
 8017b36:	eb05 05c7 	add.w	r5, r5, r7, lsl #3
 8017b3a:	9c02      	ldr	r4, [sp, #8]
 8017b3c:	f106 0e01 	add.w	lr, r6, #1
 8017b40:	b2b6      	uxth	r6, r6
 8017b42:	42a6      	cmp	r6, r4
 8017b44:	f4bf ad9b 	bcs.w	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8017b48:	445e      	add	r6, fp
 8017b4a:	b2b6      	uxth	r6, r6
 8017b4c:	2e09      	cmp	r6, #9
 8017b4e:	bf88      	it	hi
 8017b50:	3e0a      	subhi	r6, #10
 8017b52:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017b56:	f8df 8188 	ldr.w	r8, [pc, #392]	; 8017ce0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 8017b5a:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 8017b5c:	f2a7 664b 	subw	r6, r7, #1611	; 0x64b
 8017b60:	2e14      	cmp	r6, #20
 8017b62:	d911      	bls.n	8017b88 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8017b64:	f027 0604 	bic.w	r6, r7, #4
 8017b68:	f5b6 6fce 	cmp.w	r6, #1648	; 0x670
 8017b6c:	d00c      	beq.n	8017b88 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8017b6e:	f2a7 66d6 	subw	r6, r7, #1750	; 0x6d6
 8017b72:	b2b6      	uxth	r6, r6
 8017b74:	2e17      	cmp	r6, #23
 8017b76:	d803      	bhi.n	8017b80 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x568>
 8017b78:	fa28 f606 	lsr.w	r6, r8, r6
 8017b7c:	07f4      	lsls	r4, r6, #31
 8017b7e:	d403      	bmi.n	8017b88 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8017b80:	f6a7 06e4 	subw	r6, r7, #2276	; 0x8e4
 8017b84:	2e1a      	cmp	r6, #26
 8017b86:	d847      	bhi.n	8017c18 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x600>
 8017b88:	9c02      	ldr	r4, [sp, #8]
 8017b8a:	fa1f f68e 	uxth.w	r6, lr
 8017b8e:	42b4      	cmp	r4, r6
 8017b90:	f67f ad75 	bls.w	801767e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8017b94:	445e      	add	r6, fp
 8017b96:	b2b6      	uxth	r6, r6
 8017b98:	2e09      	cmp	r6, #9
 8017b9a:	bf88      	it	hi
 8017b9c:	3e0a      	subhi	r6, #10
 8017b9e:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017ba2:	f10e 0e01 	add.w	lr, lr, #1
 8017ba6:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 8017ba8:	e7d8      	b.n	8017b5c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x544>
 8017baa:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 8017bae:	eb07 0508 	add.w	r5, r7, r8
 8017bb2:	2d09      	cmp	r5, #9
 8017bb4:	d807      	bhi.n	8017bc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ae>
 8017bb6:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8017bba:	f46f 6ec8 	mvn.w	lr, #1600	; 0x640
 8017bbe:	4477      	add	r7, lr
 8017bc0:	f8dc 5010 	ldr.w	r5, [ip, #16]
 8017bc4:	e7b7      	b.n	8017b36 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x51e>
 8017bc6:	f46f 65ce 	mvn.w	r5, #1648	; 0x670
 8017bca:	197d      	adds	r5, r7, r5
 8017bcc:	2d62      	cmp	r5, #98	; 0x62
 8017bce:	d81d      	bhi.n	8017c0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 8017bd0:	f8bc 501e 	ldrh.w	r5, [ip, #30]
 8017bd4:	2d00      	cmp	r5, #0
 8017bd6:	d0b0      	beq.n	8017b3a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 8017bd8:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8017bdc:	9405      	str	r4, [sp, #20]
 8017bde:	f04f 0800 	mov.w	r8, #0
 8017be2:	eb05 0e08 	add.w	lr, r5, r8
 8017be6:	240a      	movs	r4, #10
 8017be8:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 8017bec:	fb04 fa0e 	mul.w	sl, r4, lr
 8017bf0:	9c05      	ldr	r4, [sp, #20]
 8017bf2:	4454      	add	r4, sl
 8017bf4:	9407      	str	r4, [sp, #28]
 8017bf6:	9c05      	ldr	r4, [sp, #20]
 8017bf8:	f834 a00a 	ldrh.w	sl, [r4, sl]
 8017bfc:	45ba      	cmp	sl, r7
 8017bfe:	d207      	bcs.n	8017c10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f8>
 8017c00:	f10e 0801 	add.w	r8, lr, #1
 8017c04:	e000      	b.n	8017c08 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f0>
 8017c06:	4675      	mov	r5, lr
 8017c08:	45a8      	cmp	r8, r5
 8017c0a:	dbea      	blt.n	8017be2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ca>
 8017c0c:	2500      	movs	r5, #0
 8017c0e:	e794      	b.n	8017b3a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 8017c10:	d8f9      	bhi.n	8017c06 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ee>
 8017c12:	9d07      	ldr	r5, [sp, #28]
 8017c14:	3502      	adds	r5, #2
 8017c16:	e790      	b.n	8017b3a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 8017c18:	f1bc 0f00 	cmp.w	ip, #0
 8017c1c:	d05a      	beq.n	8017cd4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 8017c1e:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 8017c22:	eb07 0608 	add.w	r6, r7, r8
 8017c26:	2e19      	cmp	r6, #25
 8017c28:	d823      	bhi.n	8017c72 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x65a>
 8017c2a:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 8017c2e:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8017c32:	4437      	add	r7, r6
 8017c34:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8017c38:	eb06 06c7 	add.w	r6, r6, r7, lsl #3
 8017c3c:	b155      	cbz	r5, 8017c54 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 8017c3e:	88ed      	ldrh	r5, [r5, #6]
 8017c40:	b145      	cbz	r5, 8017c54 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 8017c42:	b13e      	cbz	r6, 8017c54 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 8017c44:	8875      	ldrh	r5, [r6, #2]
 8017c46:	2d00      	cmp	r5, #0
 8017c48:	f040 810e 	bne.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017c4c:	88f5      	ldrh	r5, [r6, #6]
 8017c4e:	2d00      	cmp	r5, #0
 8017c50:	f040 810a 	bne.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017c54:	f1b9 0f02 	cmp.w	r9, #2
 8017c58:	d144      	bne.n	8017ce4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6cc>
 8017c5a:	880d      	ldrh	r5, [r1, #0]
 8017c5c:	2d00      	cmp	r5, #0
 8017c5e:	f000 8103 	beq.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017c62:	f240 6544 	movw	r5, #1604	; 0x644
 8017c66:	42ab      	cmp	r3, r5
 8017c68:	f040 80fe 	bne.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017c6c:	2401      	movs	r4, #1
 8017c6e:	9403      	str	r4, [sp, #12]
 8017c70:	e0de      	b.n	8017e30 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 8017c72:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 8017c76:	193e      	adds	r6, r7, r4
 8017c78:	2e09      	cmp	r6, #9
 8017c7a:	d807      	bhi.n	8017c8c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x674>
 8017c7c:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8017c80:	f46f 6ac8 	mvn.w	sl, #1600	; 0x640
 8017c84:	4457      	add	r7, sl
 8017c86:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8017c8a:	e7d5      	b.n	8017c38 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x620>
 8017c8c:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8017c90:	eb07 0608 	add.w	r6, r7, r8
 8017c94:	2e62      	cmp	r6, #98	; 0x62
 8017c96:	d81d      	bhi.n	8017cd4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 8017c98:	f8bc 601e 	ldrh.w	r6, [ip, #30]
 8017c9c:	2e00      	cmp	r6, #0
 8017c9e:	d0cd      	beq.n	8017c3c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8017ca0:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8017ca4:	9405      	str	r4, [sp, #20]
 8017ca6:	f04f 0800 	mov.w	r8, #0
 8017caa:	eb06 0e08 	add.w	lr, r6, r8
 8017cae:	240a      	movs	r4, #10
 8017cb0:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 8017cb4:	fb04 fa0e 	mul.w	sl, r4, lr
 8017cb8:	9c05      	ldr	r4, [sp, #20]
 8017cba:	4454      	add	r4, sl
 8017cbc:	9407      	str	r4, [sp, #28]
 8017cbe:	9c05      	ldr	r4, [sp, #20]
 8017cc0:	f834 a00a 	ldrh.w	sl, [r4, sl]
 8017cc4:	45ba      	cmp	sl, r7
 8017cc6:	d207      	bcs.n	8017cd8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c0>
 8017cc8:	f10e 0801 	add.w	r8, lr, #1
 8017ccc:	e000      	b.n	8017cd0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b8>
 8017cce:	4676      	mov	r6, lr
 8017cd0:	45b0      	cmp	r8, r6
 8017cd2:	dbea      	blt.n	8017caa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x692>
 8017cd4:	2600      	movs	r6, #0
 8017cd6:	e7b1      	b.n	8017c3c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8017cd8:	d8f9      	bhi.n	8017cce <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b6>
 8017cda:	9e07      	ldr	r6, [sp, #28]
 8017cdc:	3602      	adds	r6, #2
 8017cde:	e7ad      	b.n	8017c3c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8017ce0:	00f67e7f 	.word	0x00f67e7f
 8017ce4:	f1b9 0f03 	cmp.w	r9, #3
 8017ce8:	f040 80be 	bne.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017cec:	884d      	ldrh	r5, [r1, #2]
 8017cee:	2d00      	cmp	r5, #0
 8017cf0:	f000 80ba 	beq.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017cf4:	f240 6544 	movw	r5, #1604	; 0x644
 8017cf8:	42ab      	cmp	r3, r5
 8017cfa:	f040 80b5 	bne.w	8017e68 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8017cfe:	2401      	movs	r4, #1
 8017d00:	9403      	str	r4, [sp, #12]
 8017d02:	884d      	ldrh	r5, [r1, #2]
 8017d04:	2d00      	cmp	r5, #0
 8017d06:	f000 8093 	beq.w	8017e30 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 8017d0a:	f04f 0901 	mov.w	r9, #1
 8017d0e:	e0de      	b.n	8017ece <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8017d10:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 8017d14:	195d      	adds	r5, r3, r5
 8017d16:	b2ad      	uxth	r5, r5
 8017d18:	2d09      	cmp	r5, #9
 8017d1a:	d807      	bhi.n	8017d2c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x714>
 8017d1c:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 8017d20:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 8017d24:	4425      	add	r5, r4
 8017d26:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8017d2a:	e0ae      	b.n	8017e8a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x872>
 8017d2c:	f46f 6ace 	mvn.w	sl, #1648	; 0x670
 8017d30:	eb03 050a 	add.w	r5, r3, sl
 8017d34:	b2ad      	uxth	r5, r5
 8017d36:	2d62      	cmp	r5, #98	; 0x62
 8017d38:	d81b      	bhi.n	8017d72 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 8017d3a:	f8bc 801e 	ldrh.w	r8, [ip, #30]
 8017d3e:	f1b8 0f00 	cmp.w	r8, #0
 8017d42:	f000 80a4 	beq.w	8017e8e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8017d46:	f8dc 7014 	ldr.w	r7, [ip, #20]
 8017d4a:	2600      	movs	r6, #0
 8017d4c:	46c4      	mov	ip, r8
 8017d4e:	f04f 0a0a 	mov.w	sl, #10
 8017d52:	eb0c 0506 	add.w	r5, ip, r6
 8017d56:	106d      	asrs	r5, r5, #1
 8017d58:	fb0a fe05 	mul.w	lr, sl, r5
 8017d5c:	eb07 080e 	add.w	r8, r7, lr
 8017d60:	f837 e00e 	ldrh.w	lr, [r7, lr]
 8017d64:	459e      	cmp	lr, r3
 8017d66:	d207      	bcs.n	8017d78 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x760>
 8017d68:	1c6e      	adds	r6, r5, #1
 8017d6a:	e000      	b.n	8017d6e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x756>
 8017d6c:	46ac      	mov	ip, r5
 8017d6e:	4566      	cmp	r6, ip
 8017d70:	dbef      	blt.n	8017d52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x73a>
 8017d72:	f04f 0800 	mov.w	r8, #0
 8017d76:	e08a      	b.n	8017e8e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8017d78:	d8f8      	bhi.n	8017d6c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x754>
 8017d7a:	f108 0802 	add.w	r8, r8, #2
 8017d7e:	e086      	b.n	8017e8e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8017d80:	6c86      	ldr	r6, [r0, #72]	; 0x48
 8017d82:	b18e      	cbz	r6, 8017da8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8017d84:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 8017d88:	eb03 0508 	add.w	r5, r3, r8
 8017d8c:	b2ad      	uxth	r5, r5
 8017d8e:	2d19      	cmp	r5, #25
 8017d90:	d812      	bhi.n	8017db8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7a0>
 8017d92:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8017d96:	f46f 6cc4 	mvn.w	ip, #1568	; 0x620
 8017d9a:	68f5      	ldr	r5, [r6, #12]
 8017d9c:	4461      	add	r1, ip
 8017d9e:	eb05 01c1 	add.w	r1, r5, r1, lsl #3
 8017da2:	2900      	cmp	r1, #0
 8017da4:	f040 808c 	bne.w	8017ec0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8017da8:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 8017dac:	f47f ada0 	bne.w	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017db0:	2200      	movs	r2, #0
 8017db2:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
 8017db6:	e59b      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017db8:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 8017dbc:	19dd      	adds	r5, r3, r7
 8017dbe:	b2ad      	uxth	r5, r5
 8017dc0:	2d09      	cmp	r5, #9
 8017dc2:	d806      	bhi.n	8017dd2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ba>
 8017dc4:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 8017dc8:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8017dcc:	4429      	add	r1, r5
 8017dce:	6935      	ldr	r5, [r6, #16]
 8017dd0:	e7e5      	b.n	8017d9e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x786>
 8017dd2:	f46f 64ce 	mvn.w	r4, #1648	; 0x670
 8017dd6:	191d      	adds	r5, r3, r4
 8017dd8:	b2ad      	uxth	r5, r5
 8017dda:	2d62      	cmp	r5, #98	; 0x62
 8017ddc:	d8e4      	bhi.n	8017da8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8017dde:	8bf5      	ldrh	r5, [r6, #30]
 8017de0:	2d00      	cmp	r5, #0
 8017de2:	d0e1      	beq.n	8017da8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8017de4:	6977      	ldr	r7, [r6, #20]
 8017de6:	f04f 080a 	mov.w	r8, #10
 8017dea:	186e      	adds	r6, r5, r1
 8017dec:	1076      	asrs	r6, r6, #1
 8017dee:	fb08 fc06 	mul.w	ip, r8, r6
 8017df2:	eb07 0e0c 	add.w	lr, r7, ip
 8017df6:	f837 c00c 	ldrh.w	ip, [r7, ip]
 8017dfa:	459c      	cmp	ip, r3
 8017dfc:	d205      	bcs.n	8017e0a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7f2>
 8017dfe:	1c71      	adds	r1, r6, #1
 8017e00:	e000      	b.n	8017e04 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ec>
 8017e02:	4635      	mov	r5, r6
 8017e04:	428d      	cmp	r5, r1
 8017e06:	dcf0      	bgt.n	8017dea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d2>
 8017e08:	e7ce      	b.n	8017da8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8017e0a:	d8fa      	bhi.n	8017e02 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ea>
 8017e0c:	f10e 0102 	add.w	r1, lr, #2
 8017e10:	e056      	b.n	8017ec0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8017e12:	f1b9 0f03 	cmp.w	r9, #3
 8017e16:	d104      	bne.n	8017e22 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 8017e18:	88cd      	ldrh	r5, [r1, #6]
 8017e1a:	2d00      	cmp	r5, #0
 8017e1c:	f43f af6f 	beq.w	8017cfe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e6>
 8017e20:	e055      	b.n	8017ece <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8017e22:	f1b9 0f01 	cmp.w	r9, #1
 8017e26:	f43f af6c 	beq.w	8017d02 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ea>
 8017e2a:	f1b9 0f00 	cmp.w	r9, #0
 8017e2e:	d14e      	bne.n	8017ece <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8017e30:	880d      	ldrh	r5, [r1, #0]
 8017e32:	b935      	cbnz	r5, 8017e42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x82a>
 8017e34:	884d      	ldrh	r5, [r1, #2]
 8017e36:	f115 0900 	adds.w	r9, r5, #0
 8017e3a:	bf18      	it	ne
 8017e3c:	f04f 0901 	movne.w	r9, #1
 8017e40:	e045      	b.n	8017ece <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8017e42:	f04f 0900 	mov.w	r9, #0
 8017e46:	e042      	b.n	8017ece <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8017e48:	233e      	movs	r3, #62	; 0x3e
 8017e4a:	e551      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e4c:	233c      	movs	r3, #60	; 0x3c
 8017e4e:	e54f      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e50:	2329      	movs	r3, #41	; 0x29
 8017e52:	e54d      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e54:	2328      	movs	r3, #40	; 0x28
 8017e56:	e54b      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e58:	235d      	movs	r3, #93	; 0x5d
 8017e5a:	e549      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e5c:	235b      	movs	r3, #91	; 0x5b
 8017e5e:	e547      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e60:	237d      	movs	r3, #125	; 0x7d
 8017e62:	e545      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e64:	237b      	movs	r3, #123	; 0x7b
 8017e66:	e543      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017e68:	f1bc 0f00 	cmp.w	ip, #0
 8017e6c:	d081      	beq.n	8017d72 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 8017e6e:	f46f 67c4 	mvn.w	r7, #1568	; 0x620
 8017e72:	19dd      	adds	r5, r3, r7
 8017e74:	b2ad      	uxth	r5, r5
 8017e76:	2d19      	cmp	r5, #25
 8017e78:	f63f af4a 	bhi.w	8017d10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6f8>
 8017e7c:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 8017e80:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 8017e84:	4435      	add	r5, r6
 8017e86:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8017e8a:	eb06 08c5 	add.w	r8, r6, r5, lsl #3
 8017e8e:	9c04      	ldr	r4, [sp, #16]
 8017e90:	8c65      	ldrh	r5, [r4, #34]	; 0x22
 8017e92:	f2a5 6522 	subw	r5, r5, #1570	; 0x622
 8017e96:	b2ad      	uxth	r5, r5
 8017e98:	2db1      	cmp	r5, #177	; 0xb1
 8017e9a:	bf8c      	ite	hi
 8017e9c:	2600      	movhi	r6, #0
 8017e9e:	2602      	movls	r6, #2
 8017ea0:	f1b8 0f00 	cmp.w	r8, #0
 8017ea4:	d00c      	beq.n	8017ec0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8017ea6:	9c06      	ldr	r4, [sp, #24]
 8017ea8:	4426      	add	r6, r4
 8017eaa:	f838 7016 	ldrh.w	r7, [r8, r6, lsl #1]
 8017eae:	b13f      	cbz	r7, 8017ec0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8017eb0:	2db1      	cmp	r5, #177	; 0xb1
 8017eb2:	bf94      	ite	ls
 8017eb4:	2200      	movls	r2, #0
 8017eb6:	2201      	movhi	r2, #1
 8017eb8:	9203      	str	r2, [sp, #12]
 8017eba:	46b1      	mov	r9, r6
 8017ebc:	4641      	mov	r1, r8
 8017ebe:	2200      	movs	r2, #0
 8017ec0:	f1b9 0f02 	cmp.w	r9, #2
 8017ec4:	d1a5      	bne.n	8017e12 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7fa>
 8017ec6:	888d      	ldrh	r5, [r1, #4]
 8017ec8:	2d00      	cmp	r5, #0
 8017eca:	f43f aecf 	beq.w	8017c6c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x654>
 8017ece:	eb01 0549 	add.w	r5, r1, r9, lsl #1
 8017ed2:	f831 1019 	ldrh.w	r1, [r1, r9, lsl #1]
 8017ed6:	2900      	cmp	r1, #0
 8017ed8:	f43f ad0a 	beq.w	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017edc:	9b03      	ldr	r3, [sp, #12]
 8017ede:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8017ee2:	9b02      	ldr	r3, [sp, #8]
 8017ee4:	b292      	uxth	r2, r2
 8017ee6:	1a9b      	subs	r3, r3, r2
 8017ee8:	445a      	add	r2, fp
 8017eea:	b292      	uxth	r2, r2
 8017eec:	8703      	strh	r3, [r0, #56]	; 0x38
 8017eee:	2a09      	cmp	r2, #9
 8017ef0:	9b01      	ldr	r3, [sp, #4]
 8017ef2:	bf88      	it	hi
 8017ef4:	3a0a      	subhi	r2, #10
 8017ef6:	86c2      	strh	r2, [r0, #54]	; 0x36
 8017ef8:	b14b      	cbz	r3, 8017f0e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8f6>
 8017efa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017efc:	3301      	adds	r3, #1
 8017efe:	b29b      	uxth	r3, r3
 8017f00:	2b0a      	cmp	r3, #10
 8017f02:	bf28      	it	cs
 8017f04:	2300      	movcs	r3, #0
 8017f06:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f0a:	9b01      	ldr	r3, [sp, #4]
 8017f0c:	8443      	strh	r3, [r0, #34]	; 0x22
 8017f0e:	882b      	ldrh	r3, [r5, #0]
 8017f10:	e4ee      	b.n	80178f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8017f12:	9a01      	ldr	r2, [sp, #4]
 8017f14:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017f18:	00d2      	lsls	r2, r2, #3
 8017f1a:	2b20      	cmp	r3, #32
 8017f1c:	b292      	uxth	r2, r2
 8017f1e:	f47f ad1e 	bne.w	801795e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 8017f22:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 8017f26:	3a30      	subs	r2, #48	; 0x30
 8017f28:	b292      	uxth	r2, r2
 8017f2a:	f240 6152 	movw	r1, #1618	; 0x652
 8017f2e:	e52d      	b.n	801798c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>

08017f30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017f30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f32:	4605      	mov	r5, r0
 8017f34:	4608      	mov	r0, r1
 8017f36:	b1e9      	cbz	r1, 8017f74 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017f38:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017f3c:	460b      	mov	r3, r1
 8017f3e:	f101 0708 	add.w	r7, r1, #8
 8017f42:	4622      	mov	r2, r4
 8017f44:	6818      	ldr	r0, [r3, #0]
 8017f46:	6859      	ldr	r1, [r3, #4]
 8017f48:	4626      	mov	r6, r4
 8017f4a:	c603      	stmia	r6!, {r0, r1}
 8017f4c:	3308      	adds	r3, #8
 8017f4e:	42bb      	cmp	r3, r7
 8017f50:	4634      	mov	r4, r6
 8017f52:	d1f7      	bne.n	8017f44 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017f54:	6818      	ldr	r0, [r3, #0]
 8017f56:	6030      	str	r0, [r6, #0]
 8017f58:	889b      	ldrh	r3, [r3, #4]
 8017f5a:	80b3      	strh	r3, [r6, #4]
 8017f5c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017f60:	015b      	lsls	r3, r3, #5
 8017f62:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017f66:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017f6a:	430b      	orrs	r3, r1
 8017f6c:	425b      	negs	r3, r3
 8017f6e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017f72:	4610      	mov	r0, r2
 8017f74:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017f76 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017f76:	b538      	push	{r3, r4, r5, lr}
 8017f78:	460c      	mov	r4, r1
 8017f7a:	6811      	ldr	r1, [r2, #0]
 8017f7c:	4610      	mov	r0, r2
 8017f7e:	68cd      	ldr	r5, [r1, #12]
 8017f80:	4619      	mov	r1, r3
 8017f82:	47a8      	blx	r5
 8017f84:	2800      	cmp	r0, #0
 8017f86:	bf08      	it	eq
 8017f88:	4620      	moveq	r0, r4
 8017f8a:	bd38      	pop	{r3, r4, r5, pc}

08017f8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017f8e:	4604      	mov	r4, r0
 8017f90:	4615      	mov	r5, r2
 8017f92:	4608      	mov	r0, r1
 8017f94:	b93a      	cbnz	r2, 8017fa6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017f96:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017f9a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017f9e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017fa2:	4628      	mov	r0, r5
 8017fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017fa6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017faa:	8893      	ldrh	r3, [r2, #4]
 8017fac:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017fb0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017fb4:	79ee      	ldrb	r6, [r5, #7]
 8017fb6:	4316      	orrs	r6, r2
 8017fb8:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 8017fbc:	189a      	adds	r2, r3, r2
 8017fbe:	b291      	uxth	r1, r2
 8017fc0:	291d      	cmp	r1, #29
 8017fc2:	b2b7      	uxth	r7, r6
 8017fc4:	f200 8083 	bhi.w	80180ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8017fc8:	2201      	movs	r2, #1
 8017fca:	408a      	lsls	r2, r1
 8017fcc:	4978      	ldr	r1, [pc, #480]	; (80181b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8017fce:	420a      	tst	r2, r1
 8017fd0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017fd4:	d12d      	bne.n	8018032 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8017fd6:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017fda:	d078      	beq.n	80180ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8017fdc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017fe0:	462b      	mov	r3, r5
 8017fe2:	f105 0e08 	add.w	lr, r5, #8
 8017fe6:	4615      	mov	r5, r2
 8017fe8:	6818      	ldr	r0, [r3, #0]
 8017fea:	6859      	ldr	r1, [r3, #4]
 8017fec:	4694      	mov	ip, r2
 8017fee:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017ff2:	3308      	adds	r3, #8
 8017ff4:	4573      	cmp	r3, lr
 8017ff6:	4662      	mov	r2, ip
 8017ff8:	d1f6      	bne.n	8017fe8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 8017ffa:	6818      	ldr	r0, [r3, #0]
 8017ffc:	f8cc 0000 	str.w	r0, [ip]
 8018000:	889b      	ldrh	r3, [r3, #4]
 8018002:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018006:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801800a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801800e:	b2b3      	uxth	r3, r6
 8018010:	1aca      	subs	r2, r1, r3
 8018012:	b292      	uxth	r2, r2
 8018014:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018018:	10d2      	asrs	r2, r2, #3
 801801a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801801e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018022:	4302      	orrs	r2, r0
 8018024:	1bcf      	subs	r7, r1, r7
 8018026:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801802a:	1afb      	subs	r3, r7, r3
 801802c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018030:	e7b7      	b.n	8017fa2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018032:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018034:	b92b      	cbnz	r3, 8018042 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8018036:	4b5f      	ldr	r3, [pc, #380]	; (80181b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8018038:	4a5f      	ldr	r2, [pc, #380]	; (80181b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801803a:	4860      	ldr	r0, [pc, #384]	; (80181bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801803c:	21c0      	movs	r1, #192	; 0xc0
 801803e:	f00d fbbf 	bl	80257c0 <__assert_func>
 8018042:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018044:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018048:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801804a:	f640 6333 	movw	r3, #3635	; 0xe33
 801804e:	4299      	cmp	r1, r3
 8018050:	d110      	bne.n	8018074 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8018052:	6803      	ldr	r3, [r0, #0]
 8018054:	68db      	ldr	r3, [r3, #12]
 8018056:	4798      	blx	r3
 8018058:	7b41      	ldrb	r1, [r0, #13]
 801805a:	00cb      	lsls	r3, r1, #3
 801805c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018060:	7a03      	ldrb	r3, [r0, #8]
 8018062:	0648      	lsls	r0, r1, #25
 8018064:	ea43 0302 	orr.w	r3, r3, r2
 8018068:	bf44      	itt	mi
 801806a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801806e:	b21b      	sxthmi	r3, r3
 8018070:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018074:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8018078:	443b      	add	r3, r7
 801807a:	4433      	add	r3, r6
 801807c:	b29b      	uxth	r3, r3
 801807e:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018082:	462a      	mov	r2, r5
 8018084:	f105 0c08 	add.w	ip, r5, #8
 8018088:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801808c:	4635      	mov	r5, r6
 801808e:	6810      	ldr	r0, [r2, #0]
 8018090:	6851      	ldr	r1, [r2, #4]
 8018092:	4637      	mov	r7, r6
 8018094:	c703      	stmia	r7!, {r0, r1}
 8018096:	3208      	adds	r2, #8
 8018098:	4562      	cmp	r2, ip
 801809a:	463e      	mov	r6, r7
 801809c:	d1f7      	bne.n	801808e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801809e:	6810      	ldr	r0, [r2, #0]
 80180a0:	6038      	str	r0, [r7, #0]
 80180a2:	8892      	ldrh	r2, [r2, #4]
 80180a4:	80ba      	strh	r2, [r7, #4]
 80180a6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80180aa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80180ae:	10db      	asrs	r3, r3, #3
 80180b0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80180b4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80180b8:	4313      	orrs	r3, r2
 80180ba:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80180be:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80180c2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80180c6:	1a9b      	subs	r3, r3, r2
 80180c8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80180cc:	e769      	b.n	8017fa2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80180ce:	f023 0204 	bic.w	r2, r3, #4
 80180d2:	f640 611b 	movw	r1, #3611	; 0xe1b
 80180d6:	428a      	cmp	r2, r1
 80180d8:	d003      	beq.n	80180e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 80180da:	f640 621d 	movw	r2, #3613	; 0xe1d
 80180de:	4293      	cmp	r3, r2
 80180e0:	d120      	bne.n	8018124 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 80180e2:	3b01      	subs	r3, #1
 80180e4:	4602      	mov	r2, r0
 80180e6:	b29b      	uxth	r3, r3
 80180e8:	4629      	mov	r1, r5
 80180ea:	4620      	mov	r0, r4
 80180ec:	f7ff ff43 	bl	8017f76 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80180f0:	7b41      	ldrb	r1, [r0, #13]
 80180f2:	00cb      	lsls	r3, r1, #3
 80180f4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80180f8:	7a03      	ldrb	r3, [r0, #8]
 80180fa:	0649      	lsls	r1, r1, #25
 80180fc:	ea43 0302 	orr.w	r3, r3, r2
 8018100:	bf44      	itt	mi
 8018102:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018106:	b21b      	sxthmi	r3, r3
 8018108:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801810c:	7b6b      	ldrb	r3, [r5, #13]
 801810e:	7aaa      	ldrb	r2, [r5, #10]
 8018110:	005b      	lsls	r3, r3, #1
 8018112:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018116:	4313      	orrs	r3, r2
 8018118:	115a      	asrs	r2, r3, #5
 801811a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801811e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018122:	e036      	b.n	8018192 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8018124:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018128:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801812c:	7a2a      	ldrb	r2, [r5, #8]
 801812e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018132:	ea42 0201 	orr.w	r2, r2, r1
 8018136:	bf1c      	itt	ne
 8018138:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801813c:	b212      	sxthne	r2, r2
 801813e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018142:	f640 6109 	movw	r1, #3593	; 0xe09
 8018146:	f023 0210 	bic.w	r2, r3, #16
 801814a:	428a      	cmp	r2, r1
 801814c:	d003      	beq.n	8018156 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801814e:	f640 6213 	movw	r2, #3603	; 0xe13
 8018152:	4293      	cmp	r3, r2
 8018154:	d12a      	bne.n	80181ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8018156:	7b6e      	ldrb	r6, [r5, #13]
 8018158:	0076      	lsls	r6, r6, #1
 801815a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801815e:	7aae      	ldrb	r6, [r5, #10]
 8018160:	4316      	orrs	r6, r2
 8018162:	f640 6213 	movw	r2, #3603	; 0xe13
 8018166:	4293      	cmp	r3, r2
 8018168:	bf18      	it	ne
 801816a:	f103 33ff 	addne.w	r3, r3, #4294967295
 801816e:	4602      	mov	r2, r0
 8018170:	bf14      	ite	ne
 8018172:	b29b      	uxthne	r3, r3
 8018174:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8018178:	4629      	mov	r1, r5
 801817a:	4620      	mov	r0, r4
 801817c:	f7ff fefb 	bl	8017f76 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018180:	7b43      	ldrb	r3, [r0, #13]
 8018182:	7a82      	ldrb	r2, [r0, #10]
 8018184:	005b      	lsls	r3, r3, #1
 8018186:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801818a:	4313      	orrs	r3, r2
 801818c:	1af6      	subs	r6, r6, r3
 801818e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018192:	7b69      	ldrb	r1, [r5, #13]
 8018194:	00cb      	lsls	r3, r1, #3
 8018196:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801819a:	7a2b      	ldrb	r3, [r5, #8]
 801819c:	4313      	orrs	r3, r2
 801819e:	064a      	lsls	r2, r1, #25
 80181a0:	bf44      	itt	mi
 80181a2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80181a6:	b21b      	sxthmi	r3, r3
 80181a8:	1bdb      	subs	r3, r3, r7
 80181aa:	e73f      	b.n	801802c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80181ac:	2300      	movs	r3, #0
 80181ae:	e7b6      	b.n	801811e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 80181b0:	3fc00079 	.word	0x3fc00079
 80181b4:	08028278 	.word	0x08028278
 80181b8:	0802a943 	.word	0x0802a943
 80181bc:	0802834a 	.word	0x0802834a

080181c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80181c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80181c4:	4604      	mov	r4, r0
 80181c6:	b942      	cbnz	r2, 80181da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80181c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80181cc:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80181d0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80181d4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80181d8:	e046      	b.n	8018268 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80181da:	7b51      	ldrb	r1, [r2, #13]
 80181dc:	8893      	ldrh	r3, [r2, #4]
 80181de:	010f      	lsls	r7, r1, #4
 80181e0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80181e4:	79d7      	ldrb	r7, [r2, #7]
 80181e6:	4307      	orrs	r7, r0
 80181e8:	2f04      	cmp	r7, #4
 80181ea:	b2bd      	uxth	r5, r7
 80181ec:	bfcc      	ite	gt
 80181ee:	08bf      	lsrgt	r7, r7, #2
 80181f0:	2701      	movle	r7, #1
 80181f2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80181f6:	f200 80ab 	bhi.w	8018350 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 80181fa:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80181fe:	4283      	cmp	r3, r0
 8018200:	d216      	bcs.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018202:	f240 605b 	movw	r0, #1627	; 0x65b
 8018206:	4283      	cmp	r3, r0
 8018208:	d859      	bhi.n	80182be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801820a:	f240 6057 	movw	r0, #1623	; 0x657
 801820e:	4283      	cmp	r3, r0
 8018210:	d20e      	bcs.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018212:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018216:	d24a      	bcs.n	80182ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8018218:	f240 604e 	movw	r0, #1614	; 0x64e
 801821c:	4283      	cmp	r3, r0
 801821e:	d207      	bcs.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018220:	f240 601a 	movw	r0, #1562	; 0x61a
 8018224:	4283      	cmp	r3, r0
 8018226:	d02a      	beq.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018228:	d821      	bhi.n	801826e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801822a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801822e:	d35b      	bcc.n	80182e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018230:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018234:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018238:	f040 80d0 	bne.w	80183dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801823c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018240:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018244:	f040 80ca 	bne.w	80183dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8018248:	00cb      	lsls	r3, r1, #3
 801824a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801824e:	7a13      	ldrb	r3, [r2, #8]
 8018250:	0649      	lsls	r1, r1, #25
 8018252:	ea43 0300 	orr.w	r3, r3, r0
 8018256:	bf44      	itt	mi
 8018258:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801825c:	b21b      	sxthmi	r3, r3
 801825e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018262:	1b5d      	subs	r5, r3, r5
 8018264:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018268:	4610      	mov	r0, r2
 801826a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801826e:	f240 604b 	movw	r0, #1611	; 0x64b
 8018272:	4283      	cmp	r3, r0
 8018274:	d338      	bcc.n	80182e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018276:	f240 604c 	movw	r0, #1612	; 0x64c
 801827a:	4283      	cmp	r3, r0
 801827c:	d9d8      	bls.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801827e:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018282:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018286:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801828a:	f040 80f1 	bne.w	8018470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801828e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018292:	f040 80ed 	bne.w	8018470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8018296:	00cb      	lsls	r3, r1, #3
 8018298:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801829c:	7a13      	ldrb	r3, [r2, #8]
 801829e:	064e      	lsls	r6, r1, #25
 80182a0:	ea43 0300 	orr.w	r3, r3, r0
 80182a4:	bf44      	itt	mi
 80182a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80182aa:	b21b      	sxthmi	r3, r3
 80182ac:	e7d9      	b.n	8018262 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80182ae:	f240 6054 	movw	r0, #1620	; 0x654
 80182b2:	4283      	cmp	r3, r0
 80182b4:	d8e3      	bhi.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80182b6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80182ba:	d9e0      	bls.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80182bc:	e7b8      	b.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80182be:	f240 6074 	movw	r0, #1652	; 0x674
 80182c2:	4283      	cmp	r3, r0
 80182c4:	d0b4      	beq.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80182c6:	d82d      	bhi.n	8018324 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 80182c8:	f240 605e 	movw	r0, #1630	; 0x65e
 80182cc:	4283      	cmp	r3, r0
 80182ce:	d804      	bhi.n	80182da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 80182d0:	f240 605d 	movw	r0, #1629	; 0x65d
 80182d4:	4283      	cmp	r3, r0
 80182d6:	d3d2      	bcc.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80182d8:	e7aa      	b.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80182da:	f240 605f 	movw	r0, #1631	; 0x65f
 80182de:	4283      	cmp	r3, r0
 80182e0:	d0cd      	beq.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80182e2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80182e6:	d0a3      	beq.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80182e8:	00cb      	lsls	r3, r1, #3
 80182ea:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80182ee:	7a13      	ldrb	r3, [r2, #8]
 80182f0:	0649      	lsls	r1, r1, #25
 80182f2:	ea43 0300 	orr.w	r3, r3, r0
 80182f6:	bf44      	itt	mi
 80182f8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80182fc:	b21b      	sxthmi	r3, r3
 80182fe:	1b5d      	subs	r5, r3, r5
 8018300:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018304:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018308:	7b53      	ldrb	r3, [r2, #13]
 801830a:	015b      	lsls	r3, r3, #5
 801830c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018310:	7993      	ldrb	r3, [r2, #6]
 8018312:	430b      	orrs	r3, r1
 8018314:	005b      	lsls	r3, r3, #1
 8018316:	2105      	movs	r1, #5
 8018318:	fb93 f3f1 	sdiv	r3, r3, r1
 801831c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018320:	440b      	add	r3, r1
 8018322:	e757      	b.n	80181d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018324:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018328:	4283      	cmp	r3, r0
 801832a:	d809      	bhi.n	8018340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801832c:	f240 60df 	movw	r0, #1759	; 0x6df
 8018330:	4283      	cmp	r3, r0
 8018332:	f4bf af7d 	bcs.w	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018336:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801833a:	2b05      	cmp	r3, #5
 801833c:	d8d4      	bhi.n	80182e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801833e:	e777      	b.n	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018340:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018344:	4283      	cmp	r3, r0
 8018346:	d09a      	beq.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018348:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801834c:	4283      	cmp	r3, r0
 801834e:	e7ca      	b.n	80182e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8018350:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018354:	d22b      	bcs.n	80183ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8018356:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801835a:	4283      	cmp	r3, r0
 801835c:	d28f      	bcs.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801835e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018362:	4283      	cmp	r3, r0
 8018364:	d816      	bhi.n	8018394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8018366:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801836a:	4283      	cmp	r3, r0
 801836c:	f4bf af60 	bcs.w	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018370:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018374:	4283      	cmp	r3, r0
 8018376:	d80a      	bhi.n	801838e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8018378:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801837c:	4283      	cmp	r3, r0
 801837e:	f4bf af57 	bcs.w	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018382:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018386:	4283      	cmp	r3, r0
 8018388:	f43f af79 	beq.w	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801838c:	e7ac      	b.n	80182e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801838e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018392:	e7f8      	b.n	8018386 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8018394:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018398:	4283      	cmp	r3, r0
 801839a:	d802      	bhi.n	80183a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 801839c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80183a0:	e798      	b.n	80182d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 80183a2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80183a6:	4283      	cmp	r3, r0
 80183a8:	f47f af42 	bne.w	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80183ac:	e767      	b.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80183ae:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80183b2:	4283      	cmp	r3, r0
 80183b4:	f43f af63 	beq.w	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80183b8:	d802      	bhi.n	80183c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 80183ba:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80183be:	e7f2      	b.n	80183a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 80183c0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80183c4:	4283      	cmp	r3, r0
 80183c6:	d805      	bhi.n	80183d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 80183c8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80183cc:	4283      	cmp	r3, r0
 80183ce:	f4ff af2f 	bcc.w	8018230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80183d2:	e754      	b.n	801827e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80183d4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80183d8:	4283      	cmp	r3, r0
 80183da:	e7af      	b.n	801833c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 80183dc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80183e0:	4617      	mov	r7, r2
 80183e2:	f102 0808 	add.w	r8, r2, #8
 80183e6:	4666      	mov	r6, ip
 80183e8:	6838      	ldr	r0, [r7, #0]
 80183ea:	6879      	ldr	r1, [r7, #4]
 80183ec:	46e6      	mov	lr, ip
 80183ee:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80183f2:	3708      	adds	r7, #8
 80183f4:	4547      	cmp	r7, r8
 80183f6:	46f4      	mov	ip, lr
 80183f8:	d1f6      	bne.n	80183e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 80183fa:	6838      	ldr	r0, [r7, #0]
 80183fc:	f8ce 0000 	str.w	r0, [lr]
 8018400:	88b9      	ldrh	r1, [r7, #4]
 8018402:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018406:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801840a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801840e:	d009      	beq.n	8018424 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8018410:	7b51      	ldrb	r1, [r2, #13]
 8018412:	7992      	ldrb	r2, [r2, #6]
 8018414:	0149      	lsls	r1, r1, #5
 8018416:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801841a:	4311      	orrs	r1, r2
 801841c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018420:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018424:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018428:	d00d      	beq.n	8018446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801842a:	442b      	add	r3, r5
 801842c:	b29b      	uxth	r3, r3
 801842e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018432:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018436:	10db      	asrs	r3, r3, #3
 8018438:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801843c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018440:	4313      	orrs	r3, r2
 8018442:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018446:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801844a:	00cb      	lsls	r3, r1, #3
 801844c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018450:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018454:	064f      	lsls	r7, r1, #25
 8018456:	ea43 0302 	orr.w	r3, r3, r2
 801845a:	bf44      	itt	mi
 801845c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018460:	b21b      	sxthmi	r3, r3
 8018462:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018466:	1b5d      	subs	r5, r3, r5
 8018468:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801846c:	4632      	mov	r2, r6
 801846e:	e6fb      	b.n	8018268 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8018470:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 8018474:	4694      	mov	ip, r2
 8018476:	f102 0908 	add.w	r9, r2, #8
 801847a:	4676      	mov	r6, lr
 801847c:	f8dc 0000 	ldr.w	r0, [ip]
 8018480:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8018484:	46f0      	mov	r8, lr
 8018486:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801848a:	f10c 0c08 	add.w	ip, ip, #8
 801848e:	45cc      	cmp	ip, r9
 8018490:	46c6      	mov	lr, r8
 8018492:	d1f3      	bne.n	801847c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8018494:	f8dc 0000 	ldr.w	r0, [ip]
 8018498:	f8c8 0000 	str.w	r0, [r8]
 801849c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80184a0:	f8a8 1004 	strh.w	r1, [r8, #4]
 80184a4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80184a8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80184ac:	d009      	beq.n	80184c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 80184ae:	7b51      	ldrb	r1, [r2, #13]
 80184b0:	7992      	ldrb	r2, [r2, #6]
 80184b2:	0149      	lsls	r1, r1, #5
 80184b4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80184b8:	4311      	orrs	r1, r2
 80184ba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80184be:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80184c2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80184c6:	d00d      	beq.n	80184e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80184c8:	1bdb      	subs	r3, r3, r7
 80184ca:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80184ce:	b29b      	uxth	r3, r3
 80184d0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80184d4:	10db      	asrs	r3, r3, #3
 80184d6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80184da:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80184de:	4313      	orrs	r3, r2
 80184e0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80184e4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80184e8:	00cb      	lsls	r3, r1, #3
 80184ea:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80184ee:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80184f2:	0648      	lsls	r0, r1, #25
 80184f4:	ea43 0302 	orr.w	r3, r3, r2
 80184f8:	bf44      	itt	mi
 80184fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80184fe:	b21b      	sxthmi	r3, r3
 8018500:	e7b1      	b.n	8018466 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08018504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018508:	461e      	mov	r6, r3
 801850a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801850c:	4604      	mov	r4, r0
 801850e:	4617      	mov	r7, r2
 8018510:	b92b      	cbnz	r3, 801851e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8018512:	4b25      	ldr	r3, [pc, #148]	; (80185a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8018514:	4a25      	ldr	r2, [pc, #148]	; (80185ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8018516:	4826      	ldr	r0, [pc, #152]	; (80185b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8018518:	21c0      	movs	r1, #192	; 0xc0
 801851a:	f00d f951 	bl	80257c0 <__assert_func>
 801851e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018520:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018524:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018528:	f7ef f946 	bl	80077b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801852c:	4605      	mov	r5, r0
 801852e:	b918      	cbnz	r0, 8018538 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8018530:	6030      	str	r0, [r6, #0]
 8018532:	4628      	mov	r0, r5
 8018534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018538:	683b      	ldr	r3, [r7, #0]
 801853a:	4601      	mov	r1, r0
 801853c:	68db      	ldr	r3, [r3, #12]
 801853e:	4638      	mov	r0, r7
 8018540:	4798      	blx	r3
 8018542:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018546:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801854a:	4602      	mov	r2, r0
 801854c:	6030      	str	r0, [r6, #0]
 801854e:	d213      	bcs.n	8018578 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8018550:	4643      	mov	r3, r8
 8018552:	4639      	mov	r1, r7
 8018554:	4620      	mov	r0, r4
 8018556:	f7ff fe33 	bl	80181c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801855a:	6030      	str	r0, [r6, #0]
 801855c:	6833      	ldr	r3, [r6, #0]
 801855e:	b143      	cbz	r3, 8018572 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8018560:	7b5a      	ldrb	r2, [r3, #13]
 8018562:	7a9b      	ldrb	r3, [r3, #10]
 8018564:	0052      	lsls	r2, r2, #1
 8018566:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801856a:	4313      	orrs	r3, r2
 801856c:	bf0c      	ite	eq
 801856e:	2301      	moveq	r3, #1
 8018570:	2300      	movne	r3, #0
 8018572:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018576:	e7dc      	b.n	8018532 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8018578:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801857c:	b29b      	uxth	r3, r3
 801857e:	2b7f      	cmp	r3, #127	; 0x7f
 8018580:	d804      	bhi.n	801858c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8018582:	4639      	mov	r1, r7
 8018584:	4620      	mov	r0, r4
 8018586:	f7ff fd01 	bl	8017f8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801858a:	e7e6      	b.n	801855a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801858c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018590:	2b00      	cmp	r3, #0
 8018592:	d0e3      	beq.n	801855c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8018594:	f640 1302 	movw	r3, #2306	; 0x902
 8018598:	429d      	cmp	r5, r3
 801859a:	d1df      	bne.n	801855c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801859c:	4601      	mov	r1, r0
 801859e:	4620      	mov	r0, r4
 80185a0:	f7ff fcc6 	bl	8017f30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80185a4:	e7d9      	b.n	801855a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80185a6:	bf00      	nop
 80185a8:	08028278 	.word	0x08028278
 80185ac:	0802a943 	.word	0x0802a943
 80185b0:	0802834a 	.word	0x0802834a

080185b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80185b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80185b8:	461e      	mov	r6, r3
 80185ba:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80185bc:	4604      	mov	r4, r0
 80185be:	4617      	mov	r7, r2
 80185c0:	b92b      	cbnz	r3, 80185ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 80185c2:	4b26      	ldr	r3, [pc, #152]	; (801865c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 80185c4:	4a26      	ldr	r2, [pc, #152]	; (8018660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 80185c6:	4827      	ldr	r0, [pc, #156]	; (8018664 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 80185c8:	21c0      	movs	r1, #192	; 0xc0
 80185ca:	f00d f8f9 	bl	80257c0 <__assert_func>
 80185ce:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80185d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80185d4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80185d8:	f7ef f8ee 	bl	80077b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80185dc:	4605      	mov	r5, r0
 80185de:	b918      	cbnz	r0, 80185e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 80185e0:	6030      	str	r0, [r6, #0]
 80185e2:	4628      	mov	r0, r5
 80185e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80185e8:	683b      	ldr	r3, [r7, #0]
 80185ea:	4601      	mov	r1, r0
 80185ec:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80185f0:	4638      	mov	r0, r7
 80185f2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80185f6:	47c8      	blx	r9
 80185f8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80185fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018600:	4602      	mov	r2, r0
 8018602:	6030      	str	r0, [r6, #0]
 8018604:	d213      	bcs.n	801862e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8018606:	4643      	mov	r3, r8
 8018608:	4639      	mov	r1, r7
 801860a:	4620      	mov	r0, r4
 801860c:	f7ff fdd8 	bl	80181c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018610:	6030      	str	r0, [r6, #0]
 8018612:	6833      	ldr	r3, [r6, #0]
 8018614:	b143      	cbz	r3, 8018628 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8018616:	7b5a      	ldrb	r2, [r3, #13]
 8018618:	7a9b      	ldrb	r3, [r3, #10]
 801861a:	0052      	lsls	r2, r2, #1
 801861c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018620:	4313      	orrs	r3, r2
 8018622:	bf0c      	ite	eq
 8018624:	2301      	moveq	r3, #1
 8018626:	2300      	movne	r3, #0
 8018628:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801862c:	e7d9      	b.n	80185e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801862e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018632:	b29b      	uxth	r3, r3
 8018634:	2b7f      	cmp	r3, #127	; 0x7f
 8018636:	d804      	bhi.n	8018642 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8018638:	4639      	mov	r1, r7
 801863a:	4620      	mov	r0, r4
 801863c:	f7ff fca6 	bl	8017f8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018640:	e7e6      	b.n	8018610 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8018642:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018646:	2b00      	cmp	r3, #0
 8018648:	d0e3      	beq.n	8018612 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801864a:	f640 1302 	movw	r3, #2306	; 0x902
 801864e:	429d      	cmp	r5, r3
 8018650:	d1df      	bne.n	8018612 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8018652:	4601      	mov	r1, r0
 8018654:	4620      	mov	r0, r4
 8018656:	f7ff fc6b 	bl	8017f30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801865a:	e7d9      	b.n	8018610 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801865c:	08028278 	.word	0x08028278
 8018660:	0802a943 	.word	0x0802a943
 8018664:	0802834a 	.word	0x0802834a

08018668 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018668:	b510      	push	{r4, lr}
 801866a:	4604      	mov	r4, r0
 801866c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018670:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018672:	b9d9      	cbnz	r1, 80186ac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 8018674:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018676:	2b0a      	cmp	r3, #10
 8018678:	d037      	beq.n	80186ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801867a:	4620      	mov	r0, r4
 801867c:	f7fe ff86 	bl	801758c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018680:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018682:	2b09      	cmp	r3, #9
 8018684:	d906      	bls.n	8018694 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 8018686:	4b19      	ldr	r3, [pc, #100]	; (80186ec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8018688:	4a19      	ldr	r2, [pc, #100]	; (80186f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801868a:	481a      	ldr	r0, [pc, #104]	; (80186f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 801868c:	f44f 7182 	mov.w	r1, #260	; 0x104
 8018690:	f00d f896 	bl	80257c0 <__assert_func>
 8018694:	1c5a      	adds	r2, r3, #1
 8018696:	8722      	strh	r2, [r4, #56]	; 0x38
 8018698:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801869a:	4413      	add	r3, r2
 801869c:	b29b      	uxth	r3, r3
 801869e:	2b09      	cmp	r3, #9
 80186a0:	bf88      	it	hi
 80186a2:	3b0a      	subhi	r3, #10
 80186a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80186a8:	8458      	strh	r0, [r3, #34]	; 0x22
 80186aa:	e7e3      	b.n	8018674 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 80186ac:	2b0a      	cmp	r3, #10
 80186ae:	d01c      	beq.n	80186ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 80186b0:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80186b2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80186b6:	3901      	subs	r1, #1
 80186b8:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80186ba:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80186be:	1c51      	adds	r1, r2, #1
 80186c0:	b289      	uxth	r1, r1
 80186c2:	2901      	cmp	r1, #1
 80186c4:	bf8a      	itet	hi
 80186c6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80186ca:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80186cc:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80186ce:	2b09      	cmp	r3, #9
 80186d0:	d8d9      	bhi.n	8018686 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 80186d2:	1c5a      	adds	r2, r3, #1
 80186d4:	8722      	strh	r2, [r4, #56]	; 0x38
 80186d6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80186d8:	4413      	add	r3, r2
 80186da:	b29b      	uxth	r3, r3
 80186dc:	2b09      	cmp	r3, #9
 80186de:	bf88      	it	hi
 80186e0:	3b0a      	subhi	r3, #10
 80186e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80186e6:	8458      	strh	r0, [r3, #34]	; 0x22
 80186e8:	e7c0      	b.n	801866c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80186ea:	bd10      	pop	{r4, pc}
 80186ec:	0802a714 	.word	0x0802a714
 80186f0:	0802aa99 	.word	0x0802aa99
 80186f4:	0802834a 	.word	0x0802834a

080186f8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80186f8:	b538      	push	{r3, r4, r5, lr}
 80186fa:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80186fc:	4604      	mov	r4, r0
 80186fe:	b92a      	cbnz	r2, 801870c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8018700:	4b13      	ldr	r3, [pc, #76]	; (8018750 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8018702:	4a14      	ldr	r2, [pc, #80]	; (8018754 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8018704:	4814      	ldr	r0, [pc, #80]	; (8018758 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8018706:	21d5      	movs	r1, #213	; 0xd5
 8018708:	f00d f85a 	bl	80257c0 <__assert_func>
 801870c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801870e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8018712:	3a01      	subs	r2, #1
 8018714:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8018716:	8702      	strh	r2, [r0, #56]	; 0x38
 8018718:	1c5a      	adds	r2, r3, #1
 801871a:	b292      	uxth	r2, r2
 801871c:	2a09      	cmp	r2, #9
 801871e:	bf86      	itte	hi
 8018720:	3b09      	subhi	r3, #9
 8018722:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018724:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018726:	f7ff ff9f 	bl	8018668 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801872a:	8c23      	ldrh	r3, [r4, #32]
 801872c:	2b01      	cmp	r3, #1
 801872e:	bf9c      	itt	ls
 8018730:	3301      	addls	r3, #1
 8018732:	8423      	strhls	r3, [r4, #32]
 8018734:	8be3      	ldrh	r3, [r4, #30]
 8018736:	b90b      	cbnz	r3, 801873c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8018738:	2302      	movs	r3, #2
 801873a:	83e3      	strh	r3, [r4, #30]
 801873c:	8be3      	ldrh	r3, [r4, #30]
 801873e:	3b01      	subs	r3, #1
 8018740:	b29b      	uxth	r3, r3
 8018742:	83e3      	strh	r3, [r4, #30]
 8018744:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018748:	4628      	mov	r0, r5
 801874a:	8365      	strh	r5, [r4, #26]
 801874c:	bd38      	pop	{r3, r4, r5, pc}
 801874e:	bf00      	nop
 8018750:	08028278 	.word	0x08028278
 8018754:	0802a9ee 	.word	0x0802a9ee
 8018758:	0802834a 	.word	0x0802834a

0801875c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801875c:	b538      	push	{r3, r4, r5, lr}
 801875e:	428a      	cmp	r2, r1
 8018760:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018762:	d90c      	bls.n	801877e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8018764:	b92c      	cbnz	r4, 8018772 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8018766:	4b1c      	ldr	r3, [pc, #112]	; (80187d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8018768:	4a1c      	ldr	r2, [pc, #112]	; (80187dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 801876a:	21e1      	movs	r1, #225	; 0xe1
 801876c:	481c      	ldr	r0, [pc, #112]	; (80187e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801876e:	f00d f827 	bl	80257c0 <__assert_func>
 8018772:	3c01      	subs	r4, #1
 8018774:	8704      	strh	r4, [r0, #56]	; 0x38
 8018776:	4b1b      	ldr	r3, [pc, #108]	; (80187e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8018778:	4a1b      	ldr	r2, [pc, #108]	; (80187e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801877a:	21c5      	movs	r1, #197	; 0xc5
 801877c:	e7f6      	b.n	801876c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801877e:	428c      	cmp	r4, r1
 8018780:	d203      	bcs.n	801878a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8018782:	4b1a      	ldr	r3, [pc, #104]	; (80187ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8018784:	4a1a      	ldr	r2, [pc, #104]	; (80187f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8018786:	21cb      	movs	r1, #203	; 0xcb
 8018788:	e7f0      	b.n	801876c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801878a:	1a64      	subs	r4, r4, r1
 801878c:	8704      	strh	r4, [r0, #56]	; 0x38
 801878e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8018790:	4421      	add	r1, r4
 8018792:	b289      	uxth	r1, r1
 8018794:	2909      	cmp	r1, #9
 8018796:	bf88      	it	hi
 8018798:	390a      	subhi	r1, #10
 801879a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801879c:	250a      	movs	r5, #10
 801879e:	b1ba      	cbz	r2, 80187d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 80187a0:	3a01      	subs	r2, #1
 80187a2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80187a4:	b292      	uxth	r2, r2
 80187a6:	2909      	cmp	r1, #9
 80187a8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80187ac:	d903      	bls.n	80187b6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 80187ae:	4b11      	ldr	r3, [pc, #68]	; (80187f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 80187b0:	4a11      	ldr	r2, [pc, #68]	; (80187f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 80187b2:	21e6      	movs	r1, #230	; 0xe6
 80187b4:	e7da      	b.n	801876c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80187b6:	3101      	adds	r1, #1
 80187b8:	8701      	strh	r1, [r0, #56]	; 0x38
 80187ba:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80187bc:	b901      	cbnz	r1, 80187c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 80187be:	86c5      	strh	r5, [r0, #54]	; 0x36
 80187c0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80187c2:	3901      	subs	r1, #1
 80187c4:	b289      	uxth	r1, r1
 80187c6:	86c1      	strh	r1, [r0, #54]	; 0x36
 80187c8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80187cc:	844c      	strh	r4, [r1, #34]	; 0x22
 80187ce:	e7e6      	b.n	801879e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 80187d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80187d4:	f7ff bf48 	b.w	8018668 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80187d8:	08028278 	.word	0x08028278
 80187dc:	0802a7c7 	.word	0x0802a7c7
 80187e0:	0802834a 	.word	0x0802834a
 80187e4:	08028376 	.word	0x08028376
 80187e8:	0802a871 	.word	0x0802a871
 80187ec:	0802a720 	.word	0x0802a720
 80187f0:	0802ab48 	.word	0x0802ab48
 80187f4:	0802a72c 	.word	0x0802a72c
 80187f8:	0802a73f 	.word	0x0802a73f

080187fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80187fc:	3a01      	subs	r2, #1
 80187fe:	b570      	push	{r4, r5, r6, lr}
 8018800:	b292      	uxth	r2, r2
 8018802:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8018806:	42b2      	cmp	r2, r6
 8018808:	d019      	beq.n	801883e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801880a:	8c04      	ldrh	r4, [r0, #32]
 801880c:	f831 5b02 	ldrh.w	r5, [r1], #2
 8018810:	4294      	cmp	r4, r2
 8018812:	d805      	bhi.n	8018820 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8018814:	4b19      	ldr	r3, [pc, #100]	; (801887c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8018816:	4a1a      	ldr	r2, [pc, #104]	; (8018880 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8018818:	481a      	ldr	r0, [pc, #104]	; (8018884 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 801881a:	21c5      	movs	r1, #197	; 0xc5
 801881c:	f00c ffd0 	bl	80257c0 <__assert_func>
 8018820:	8bc4      	ldrh	r4, [r0, #30]
 8018822:	4414      	add	r4, r2
 8018824:	b2a4      	uxth	r4, r4
 8018826:	2c01      	cmp	r4, #1
 8018828:	bf88      	it	hi
 801882a:	3c02      	subhi	r4, #2
 801882c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018830:	3a01      	subs	r2, #1
 8018832:	8b64      	ldrh	r4, [r4, #26]
 8018834:	42ac      	cmp	r4, r5
 8018836:	b292      	uxth	r2, r2
 8018838:	d0e5      	beq.n	8018806 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 801883a:	2000      	movs	r0, #0
 801883c:	bd70      	pop	{r4, r5, r6, pc}
 801883e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018842:	2400      	movs	r4, #0
 8018844:	4413      	add	r3, r2
 8018846:	b2a2      	uxth	r2, r4
 8018848:	429a      	cmp	r2, r3
 801884a:	da14      	bge.n	8018876 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 801884c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 801884e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018852:	4296      	cmp	r6, r2
 8018854:	d802      	bhi.n	801885c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8018856:	4b09      	ldr	r3, [pc, #36]	; (801887c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8018858:	4a0b      	ldr	r2, [pc, #44]	; (8018888 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 801885a:	e7dd      	b.n	8018818 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 801885c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801885e:	4432      	add	r2, r6
 8018860:	b292      	uxth	r2, r2
 8018862:	2a09      	cmp	r2, #9
 8018864:	bf88      	it	hi
 8018866:	3a0a      	subhi	r2, #10
 8018868:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801886c:	3401      	adds	r4, #1
 801886e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018870:	42aa      	cmp	r2, r5
 8018872:	d0e8      	beq.n	8018846 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8018874:	e7e1      	b.n	801883a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8018876:	2001      	movs	r0, #1
 8018878:	e7e0      	b.n	801883c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801887a:	bf00      	nop
 801887c:	08028376 	.word	0x08028376
 8018880:	0802abcc 	.word	0x0802abcc
 8018884:	0802834a 	.word	0x0802834a
 8018888:	0802a871 	.word	0x0802a871

0801888c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801888c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018890:	4605      	mov	r5, r0
 8018892:	4616      	mov	r6, r2
 8018894:	1c8c      	adds	r4, r1, #2
 8018896:	8809      	ldrh	r1, [r1, #0]
 8018898:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801889c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80188a0:	42b3      	cmp	r3, r6
 80188a2:	d124      	bne.n	80188ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80188a4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80188a8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80188ac:	f001 070f 	and.w	r7, r1, #15
 80188b0:	f8cd 8000 	str.w	r8, [sp]
 80188b4:	464b      	mov	r3, r9
 80188b6:	4652      	mov	r2, sl
 80188b8:	4621      	mov	r1, r4
 80188ba:	4628      	mov	r0, r5
 80188bc:	f7ff ff9e 	bl	80187fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80188c0:	4683      	mov	fp, r0
 80188c2:	b168      	cbz	r0, 80188e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80188c4:	eb0a 0109 	add.w	r1, sl, r9
 80188c8:	4441      	add	r1, r8
 80188ca:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80188ce:	463a      	mov	r2, r7
 80188d0:	4649      	mov	r1, r9
 80188d2:	4628      	mov	r0, r5
 80188d4:	f7ff ff42 	bl	801875c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80188d8:	4658      	mov	r0, fp
 80188da:	b003      	add	sp, #12
 80188dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188e0:	eb07 010a 	add.w	r1, r7, sl
 80188e4:	4449      	add	r1, r9
 80188e6:	4441      	add	r1, r8
 80188e8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80188ec:	e7d2      	b.n	8018894 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80188ee:	f04f 0b00 	mov.w	fp, #0
 80188f2:	e7f1      	b.n	80188d8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080188f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80188f4:	b570      	push	{r4, r5, r6, lr}
 80188f6:	8810      	ldrh	r0, [r2, #0]
 80188f8:	4298      	cmp	r0, r3
 80188fa:	d817      	bhi.n	801892c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80188fc:	1e48      	subs	r0, r1, #1
 80188fe:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018902:	4298      	cmp	r0, r3
 8018904:	d312      	bcc.n	801892c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018906:	2400      	movs	r4, #0
 8018908:	428c      	cmp	r4, r1
 801890a:	d20f      	bcs.n	801892c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801890c:	1860      	adds	r0, r4, r1
 801890e:	1040      	asrs	r0, r0, #1
 8018910:	0085      	lsls	r5, r0, #2
 8018912:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018916:	42b3      	cmp	r3, r6
 8018918:	d902      	bls.n	8018920 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801891a:	3001      	adds	r0, #1
 801891c:	b284      	uxth	r4, r0
 801891e:	e7f3      	b.n	8018908 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018920:	d201      	bcs.n	8018926 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018922:	b281      	uxth	r1, r0
 8018924:	e7f0      	b.n	8018908 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018926:	442a      	add	r2, r5
 8018928:	8850      	ldrh	r0, [r2, #2]
 801892a:	bd70      	pop	{r4, r5, r6, pc}
 801892c:	2000      	movs	r0, #0
 801892e:	e7fc      	b.n	801892a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018930 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018934:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018936:	886f      	ldrh	r7, [r5, #2]
 8018938:	4604      	mov	r4, r0
 801893a:	087f      	lsrs	r7, r7, #1
 801893c:	260b      	movs	r6, #11
 801893e:	3e01      	subs	r6, #1
 8018940:	d01b      	beq.n	801897a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8018942:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018944:	b92b      	cbnz	r3, 8018952 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8018946:	4b0e      	ldr	r3, [pc, #56]	; (8018980 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8018948:	4a0e      	ldr	r2, [pc, #56]	; (8018984 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 801894a:	480f      	ldr	r0, [pc, #60]	; (8018988 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 801894c:	21c0      	movs	r1, #192	; 0xc0
 801894e:	f00c ff37 	bl	80257c0 <__assert_func>
 8018952:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018954:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018958:	462a      	mov	r2, r5
 801895a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801895e:	4639      	mov	r1, r7
 8018960:	4643      	mov	r3, r8
 8018962:	4620      	mov	r0, r4
 8018964:	f7ff ffc6 	bl	80188f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018968:	b138      	cbz	r0, 801897a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801896a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801896e:	4642      	mov	r2, r8
 8018970:	4620      	mov	r0, r4
 8018972:	f7ff ff8b 	bl	801888c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018976:	2800      	cmp	r0, #0
 8018978:	d1e1      	bne.n	801893e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801897a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801897e:	bf00      	nop
 8018980:	08028278 	.word	0x08028278
 8018984:	0802a943 	.word	0x0802a943
 8018988:	0802834a 	.word	0x0802834a

0801898c <_ZN8touchgfx8ceil28_4El>:
 801898c:	f110 030f 	adds.w	r3, r0, #15
 8018990:	d401      	bmi.n	8018996 <_ZN8touchgfx8ceil28_4El+0xa>
 8018992:	1118      	asrs	r0, r3, #4
 8018994:	4770      	bx	lr
 8018996:	f1c0 0001 	rsb	r0, r0, #1
 801899a:	f010 000f 	ands.w	r0, r0, #15
 801899e:	bf18      	it	ne
 80189a0:	2001      	movne	r0, #1
 80189a2:	2210      	movs	r2, #16
 80189a4:	fb93 f3f2 	sdiv	r3, r3, r2
 80189a8:	1a18      	subs	r0, r3, r0
 80189aa:	4770      	bx	lr

080189ac <_ZN8touchgfx11floorDivModEllRlS0_>:
 80189ac:	2900      	cmp	r1, #0
 80189ae:	b538      	push	{r3, r4, r5, lr}
 80189b0:	dc05      	bgt.n	80189be <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 80189b2:	4b0f      	ldr	r3, [pc, #60]	; (80189f0 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 80189b4:	4a0f      	ldr	r2, [pc, #60]	; (80189f4 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 80189b6:	4810      	ldr	r0, [pc, #64]	; (80189f8 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 80189b8:	21f7      	movs	r1, #247	; 0xf7
 80189ba:	f00c ff01 	bl	80257c0 <__assert_func>
 80189be:	2800      	cmp	r0, #0
 80189c0:	db06      	blt.n	80189d0 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 80189c2:	fb90 f4f1 	sdiv	r4, r0, r1
 80189c6:	6014      	str	r4, [r2, #0]
 80189c8:	fb01 0114 	mls	r1, r1, r4, r0
 80189cc:	6019      	str	r1, [r3, #0]
 80189ce:	bd38      	pop	{r3, r4, r5, pc}
 80189d0:	4240      	negs	r0, r0
 80189d2:	fb90 f4f1 	sdiv	r4, r0, r1
 80189d6:	4265      	negs	r5, r4
 80189d8:	fb01 0014 	mls	r0, r1, r4, r0
 80189dc:	6015      	str	r5, [r2, #0]
 80189de:	6018      	str	r0, [r3, #0]
 80189e0:	2800      	cmp	r0, #0
 80189e2:	d0f4      	beq.n	80189ce <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 80189e4:	6810      	ldr	r0, [r2, #0]
 80189e6:	3801      	subs	r0, #1
 80189e8:	6010      	str	r0, [r2, #0]
 80189ea:	6818      	ldr	r0, [r3, #0]
 80189ec:	1a09      	subs	r1, r1, r0
 80189ee:	e7ed      	b.n	80189cc <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 80189f0:	0802ac9d 	.word	0x0802ac9d
 80189f4:	0802acdc 	.word	0x0802acdc
 80189f8:	0802acad 	.word	0x0802acad

080189fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80189fc:	b570      	push	{r4, r5, r6, lr}
 80189fe:	694a      	ldr	r2, [r1, #20]
 8018a00:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018a02:	684b      	ldr	r3, [r1, #4]
 8018a04:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018a06:	1b54      	subs	r4, r2, r5
 8018a08:	f000 8106 	beq.w	8018c18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018a0c:	1b9b      	subs	r3, r3, r6
 8018a0e:	d003      	beq.n	8018a18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018a10:	4363      	muls	r3, r4
 8018a12:	2210      	movs	r2, #16
 8018a14:	fb93 f3f2 	sdiv	r3, r3, r2
 8018a18:	680c      	ldr	r4, [r1, #0]
 8018a1a:	698a      	ldr	r2, [r1, #24]
 8018a1c:	1b65      	subs	r5, r4, r5
 8018a1e:	f000 80fd 	beq.w	8018c1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018a22:	1b92      	subs	r2, r2, r6
 8018a24:	d003      	beq.n	8018a2e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018a26:	436a      	muls	r2, r5
 8018a28:	2410      	movs	r4, #16
 8018a2a:	fb92 f2f4 	sdiv	r2, r2, r4
 8018a2e:	1a9b      	subs	r3, r3, r2
 8018a30:	ee07 3a90 	vmov	s15, r3
 8018a34:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018c58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018a38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018a3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a40:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018a44:	460a      	mov	r2, r1
 8018a46:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018a4a:	4603      	mov	r3, r0
 8018a4c:	f100 040c 	add.w	r4, r0, #12
 8018a50:	eeb1 6a43 	vneg.f32	s12, s6
 8018a54:	edd2 7a02 	vldr	s15, [r2, #8]
 8018a58:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018a5c:	3214      	adds	r2, #20
 8018a5e:	ece3 6a01 	vstmia	r3!, {s13}
 8018a62:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018a66:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018a6a:	429c      	cmp	r4, r3
 8018a6c:	edc3 7a02 	vstr	s15, [r3, #8]
 8018a70:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018a74:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018a78:	edc3 7a05 	vstr	s15, [r3, #20]
 8018a7c:	d1ea      	bne.n	8018a54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018a7e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018a80:	698b      	ldr	r3, [r1, #24]
 8018a82:	edd0 4a02 	vldr	s9, [r0, #8]
 8018a86:	edd0 3a00 	vldr	s7, [r0]
 8018a8a:	edd0 6a01 	vldr	s13, [r0, #4]
 8018a8e:	ed90 5a05 	vldr	s10, [r0, #20]
 8018a92:	ed90 2a03 	vldr	s4, [r0, #12]
 8018a96:	edd0 5a04 	vldr	s11, [r0, #16]
 8018a9a:	ed90 1a07 	vldr	s2, [r0, #28]
 8018a9e:	edd0 2a06 	vldr	s5, [r0, #24]
 8018aa2:	1a9b      	subs	r3, r3, r2
 8018aa4:	ee07 3a90 	vmov	s15, r3
 8018aa8:	684b      	ldr	r3, [r1, #4]
 8018aaa:	1a9b      	subs	r3, r3, r2
 8018aac:	ee07 3a10 	vmov	s14, r3
 8018ab0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018ab4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018ab8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018abc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018ac0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018ac4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018ac8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018acc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018ad0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018ad4:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018ad8:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018adc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018ae0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018ae2:	694a      	ldr	r2, [r1, #20]
 8018ae4:	1b13      	subs	r3, r2, r4
 8018ae6:	ee07 3a10 	vmov	s14, r3
 8018aea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018aee:	680b      	ldr	r3, [r1, #0]
 8018af0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018af4:	1b1b      	subs	r3, r3, r4
 8018af6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018afa:	ee07 3a10 	vmov	s14, r3
 8018afe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b02:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b06:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018b0a:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018b0e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018b12:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018b14:	698b      	ldr	r3, [r1, #24]
 8018b16:	1a9b      	subs	r3, r3, r2
 8018b18:	ee06 3a90 	vmov	s13, r3
 8018b1c:	684b      	ldr	r3, [r1, #4]
 8018b1e:	1a9b      	subs	r3, r3, r2
 8018b20:	ee07 3a10 	vmov	s14, r3
 8018b24:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018b28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b2c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018b30:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b34:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018b38:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018b3c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018b40:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018b44:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018b46:	694a      	ldr	r2, [r1, #20]
 8018b48:	1b13      	subs	r3, r2, r4
 8018b4a:	ee07 3a10 	vmov	s14, r3
 8018b4e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b52:	680b      	ldr	r3, [r1, #0]
 8018b54:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b58:	1b1b      	subs	r3, r3, r4
 8018b5a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018b5e:	ee07 3a10 	vmov	s14, r3
 8018b62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b66:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b6a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018b6e:	edd0 5a08 	vldr	s11, [r0, #32]
 8018b72:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018b76:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018b7a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018b7e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018b80:	698b      	ldr	r3, [r1, #24]
 8018b82:	1a9b      	subs	r3, r3, r2
 8018b84:	ee07 3a10 	vmov	s14, r3
 8018b88:	684b      	ldr	r3, [r1, #4]
 8018b8a:	1a9b      	subs	r3, r3, r2
 8018b8c:	ee01 3a90 	vmov	s3, r3
 8018b90:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b94:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018b98:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b9c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018ba0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018ba4:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018ba8:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018bac:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018bb0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018bb4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018bb6:	694a      	ldr	r2, [r1, #20]
 8018bb8:	1b13      	subs	r3, r2, r4
 8018bba:	ee03 3a10 	vmov	s6, r3
 8018bbe:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018bc2:	680b      	ldr	r3, [r1, #0]
 8018bc4:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018bc8:	1b1b      	subs	r3, r3, r4
 8018bca:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018bce:	ee03 3a10 	vmov	s6, r3
 8018bd2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018bd6:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018bda:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018bde:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018be2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018be6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018bea:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018bee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018bf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bf6:	dd13      	ble.n	8018c20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018bf8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018bfc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018c00:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018c02:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018c06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c0e:	dd15      	ble.n	8018c3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018c10:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018c14:	6403      	str	r3, [r0, #64]	; 0x40
 8018c16:	bd70      	pop	{r4, r5, r6, pc}
 8018c18:	4623      	mov	r3, r4
 8018c1a:	e6fd      	b.n	8018a18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018c1c:	462a      	mov	r2, r5
 8018c1e:	e706      	b.n	8018a2e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018c20:	d502      	bpl.n	8018c28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018c22:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018c26:	e7e9      	b.n	8018bfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018c28:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018c2c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018c30:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c38:	dade      	bge.n	8018bf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018c3a:	e7f2      	b.n	8018c22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018c3c:	d502      	bpl.n	8018c44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018c3e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018c42:	e7e7      	b.n	8018c14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018c44:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018c48:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018c4c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018c50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c54:	dadc      	bge.n	8018c10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018c56:	e7f2      	b.n	8018c3e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018c58:	3d800000 	.word	0x3d800000

08018c5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018c5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c60:	f04f 0814 	mov.w	r8, #20
 8018c64:	fb08 f903 	mul.w	r9, r8, r3
 8018c68:	eb02 0a09 	add.w	sl, r2, r9
 8018c6c:	4604      	mov	r4, r0
 8018c6e:	f8da 0004 	ldr.w	r0, [sl, #4]
 8018c72:	4617      	mov	r7, r2
 8018c74:	460d      	mov	r5, r1
 8018c76:	461e      	mov	r6, r3
 8018c78:	f7ff fe88 	bl	801898c <_ZN8touchgfx8ceil28_4El>
 8018c7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c7e:	6160      	str	r0, [r4, #20]
 8018c80:	fb08 f803 	mul.w	r8, r8, r3
 8018c84:	eb07 0b08 	add.w	fp, r7, r8
 8018c88:	9001      	str	r0, [sp, #4]
 8018c8a:	f8db 0004 	ldr.w	r0, [fp, #4]
 8018c8e:	f7ff fe7d 	bl	801898c <_ZN8touchgfx8ceil28_4El>
 8018c92:	9a01      	ldr	r2, [sp, #4]
 8018c94:	1a80      	subs	r0, r0, r2
 8018c96:	61a0      	str	r0, [r4, #24]
 8018c98:	2800      	cmp	r0, #0
 8018c9a:	f000 8088 	beq.w	8018dae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 8018c9e:	f857 3009 	ldr.w	r3, [r7, r9]
 8018ca2:	f857 c008 	ldr.w	ip, [r7, r8]
 8018ca6:	f8da 1004 	ldr.w	r1, [sl, #4]
 8018caa:	f8db 0004 	ldr.w	r0, [fp, #4]
 8018cae:	ebac 0c03 	sub.w	ip, ip, r3
 8018cb2:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 8018cb6:	fb0b f202 	mul.w	r2, fp, r2
 8018cba:	fb0c 2211 	mls	r2, ip, r1, r2
 8018cbe:	1a40      	subs	r0, r0, r1
 8018cc0:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8018cc4:	fb00 2003 	mla	r0, r0, r3, r2
 8018cc8:	3801      	subs	r0, #1
 8018cca:	f104 0310 	add.w	r3, r4, #16
 8018cce:	4622      	mov	r2, r4
 8018cd0:	4641      	mov	r1, r8
 8018cd2:	4440      	add	r0, r8
 8018cd4:	f7ff fe6a 	bl	80189ac <_ZN8touchgfx11floorDivModEllRlS0_>
 8018cd8:	f104 0308 	add.w	r3, r4, #8
 8018cdc:	1d22      	adds	r2, r4, #4
 8018cde:	4641      	mov	r1, r8
 8018ce0:	4658      	mov	r0, fp
 8018ce2:	f7ff fe63 	bl	80189ac <_ZN8touchgfx11floorDivModEllRlS0_>
 8018ce6:	f8c4 800c 	str.w	r8, [r4, #12]
 8018cea:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018cee:	6962      	ldr	r2, [r4, #20]
 8018cf0:	eddf 6a31 	vldr	s13, [pc, #196]	; 8018db8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018cf4:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8018cf8:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8018cfc:	ee07 3a10 	vmov	s14, r3
 8018d00:	6822      	ldr	r2, [r4, #0]
 8018d02:	f857 3009 	ldr.w	r3, [r7, r9]
 8018d06:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8018d0a:	ee07 3a90 	vmov	s15, r3
 8018d0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018d12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018d16:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8018d1a:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018d1e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018d22:	edd3 6a00 	vldr	s13, [r3]
 8018d26:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018d2a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8018d2e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018d32:	edc4 6a07 	vstr	s13, [r4, #28]
 8018d36:	edd4 6a01 	vldr	s13, [r4, #4]
 8018d3a:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 8018d3e:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8018d42:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018d46:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018d4a:	ed84 6a08 	vstr	s12, [r4, #32]
 8018d4e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8018d50:	6262      	str	r2, [r4, #36]	; 0x24
 8018d52:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8018d56:	ed93 6a03 	vldr	s12, [r3, #12]
 8018d5a:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018d5e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8018d62:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018d66:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8018d6a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8018d6e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 8018d72:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018d76:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8018d7a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8018d7c:	6322      	str	r2, [r4, #48]	; 0x30
 8018d7e:	ed93 6a06 	vldr	s12, [r3, #24]
 8018d82:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8018d86:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018d8a:	eeb0 7a46 	vmov.f32	s14, s12
 8018d8e:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 8018d92:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018d96:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8018d9a:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 8018d9e:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 8018da2:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018da6:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8018daa:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8018dac:	63e3      	str	r3, [r4, #60]	; 0x3c
 8018dae:	4620      	mov	r0, r4
 8018db0:	b003      	add	sp, #12
 8018db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018db6:	bf00      	nop
 8018db8:	3d800000 	.word	0x3d800000

08018dbc <_ZN8touchgfx7Unicode6strlenEPKt>:
 8018dbc:	4602      	mov	r2, r0
 8018dbe:	b148      	cbz	r0, 8018dd4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018dc0:	2300      	movs	r3, #0
 8018dc2:	b298      	uxth	r0, r3
 8018dc4:	3301      	adds	r3, #1
 8018dc6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8018dca:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8018dce:	2900      	cmp	r1, #0
 8018dd0:	d1f7      	bne.n	8018dc2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018dd2:	4770      	bx	lr
 8018dd4:	4770      	bx	lr

08018dd6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018dd6:	b530      	push	{r4, r5, lr}
 8018dd8:	4604      	mov	r4, r0
 8018dda:	b159      	cbz	r1, 8018df4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8018ddc:	b148      	cbz	r0, 8018df2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018dde:	2300      	movs	r3, #0
 8018de0:	b298      	uxth	r0, r3
 8018de2:	4282      	cmp	r2, r0
 8018de4:	d905      	bls.n	8018df2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018de6:	5ccd      	ldrb	r5, [r1, r3]
 8018de8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8018dec:	3301      	adds	r3, #1
 8018dee:	2d00      	cmp	r5, #0
 8018df0:	d1f6      	bne.n	8018de0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018df2:	bd30      	pop	{r4, r5, pc}
 8018df4:	4608      	mov	r0, r1
 8018df6:	e7fc      	b.n	8018df2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018df8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8018df8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018dfa:	b08b      	sub	sp, #44	; 0x2c
 8018dfc:	468c      	mov	ip, r1
 8018dfe:	2100      	movs	r1, #0
 8018e00:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018e04:	ae01      	add	r6, sp, #4
 8018e06:	211f      	movs	r1, #31
 8018e08:	fbb0 f7f3 	udiv	r7, r0, r3
 8018e0c:	fb03 0517 	mls	r5, r3, r7, r0
 8018e10:	b2ec      	uxtb	r4, r5
 8018e12:	2d09      	cmp	r5, #9
 8018e14:	bfd4      	ite	le
 8018e16:	3430      	addle	r4, #48	; 0x30
 8018e18:	3457      	addgt	r4, #87	; 0x57
 8018e1a:	b2e4      	uxtb	r4, r4
 8018e1c:	558c      	strb	r4, [r1, r6]
 8018e1e:	4638      	mov	r0, r7
 8018e20:	1e4c      	subs	r4, r1, #1
 8018e22:	b92f      	cbnz	r7, 8018e30 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8018e24:	4431      	add	r1, r6
 8018e26:	4660      	mov	r0, ip
 8018e28:	f7ff ffd5 	bl	8018dd6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018e2c:	b00b      	add	sp, #44	; 0x2c
 8018e2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018e30:	4621      	mov	r1, r4
 8018e32:	e7e9      	b.n	8018e08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08018e34 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8018e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018e36:	4607      	mov	r7, r0
 8018e38:	b08b      	sub	sp, #44	; 0x2c
 8018e3a:	4608      	mov	r0, r1
 8018e3c:	b341      	cbz	r1, 8018e90 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8018e3e:	1e99      	subs	r1, r3, #2
 8018e40:	2922      	cmp	r1, #34	; 0x22
 8018e42:	d825      	bhi.n	8018e90 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8018e44:	2100      	movs	r1, #0
 8018e46:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018e4a:	463c      	mov	r4, r7
 8018e4c:	261f      	movs	r6, #31
 8018e4e:	f10d 0c04 	add.w	ip, sp, #4
 8018e52:	fb94 fef3 	sdiv	lr, r4, r3
 8018e56:	fb03 441e 	mls	r4, r3, lr, r4
 8018e5a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018e5e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8018e62:	b2ec      	uxtb	r4, r5
 8018e64:	2d09      	cmp	r5, #9
 8018e66:	bfd4      	ite	le
 8018e68:	3430      	addle	r4, #48	; 0x30
 8018e6a:	3457      	addgt	r4, #87	; 0x57
 8018e6c:	b2e4      	uxtb	r4, r4
 8018e6e:	f80c 4006 	strb.w	r4, [ip, r6]
 8018e72:	4674      	mov	r4, lr
 8018e74:	1e71      	subs	r1, r6, #1
 8018e76:	b96c      	cbnz	r4, 8018e94 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8018e78:	2f00      	cmp	r7, #0
 8018e7a:	da05      	bge.n	8018e88 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8018e7c:	ab0a      	add	r3, sp, #40	; 0x28
 8018e7e:	4419      	add	r1, r3
 8018e80:	232d      	movs	r3, #45	; 0x2d
 8018e82:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018e86:	1eb1      	subs	r1, r6, #2
 8018e88:	3101      	adds	r1, #1
 8018e8a:	4461      	add	r1, ip
 8018e8c:	f7ff ffa3 	bl	8018dd6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018e90:	b00b      	add	sp, #44	; 0x2c
 8018e92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018e94:	460e      	mov	r6, r1
 8018e96:	e7dc      	b.n	8018e52 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08018e98 <_ZN8touchgfx7Unicode4atoiEPKt>:
 8018e98:	b510      	push	{r4, lr}
 8018e9a:	b158      	cbz	r0, 8018eb4 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 8018e9c:	1e82      	subs	r2, r0, #2
 8018e9e:	210a      	movs	r1, #10
 8018ea0:	2000      	movs	r0, #0
 8018ea2:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018ea6:	3b30      	subs	r3, #48	; 0x30
 8018ea8:	b29c      	uxth	r4, r3
 8018eaa:	2c09      	cmp	r4, #9
 8018eac:	d802      	bhi.n	8018eb4 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 8018eae:	fb01 3000 	mla	r0, r1, r0, r3
 8018eb2:	e7f6      	b.n	8018ea2 <_ZN8touchgfx7Unicode4atoiEPKt+0xa>
 8018eb4:	bd10      	pop	{r4, pc}

08018eb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018eb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018eba:	4691      	mov	r9, r2
 8018ebc:	b085      	sub	sp, #20
 8018ebe:	6802      	ldr	r2, [r0, #0]
 8018ec0:	9201      	str	r2, [sp, #4]
 8018ec2:	4688      	mov	r8, r1
 8018ec4:	4683      	mov	fp, r0
 8018ec6:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018eca:	9103      	str	r1, [sp, #12]
 8018ecc:	4610      	mov	r0, r2
 8018ece:	461c      	mov	r4, r3
 8018ed0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018ed4:	9302      	str	r3, [sp, #8]
 8018ed6:	f7ff ff71 	bl	8018dbc <_ZN8touchgfx7Unicode6strlenEPKt>
 8018eda:	f1b8 0f00 	cmp.w	r8, #0
 8018ede:	bf0c      	ite	eq
 8018ee0:	4684      	moveq	ip, r0
 8018ee2:	f100 0c01 	addne.w	ip, r0, #1
 8018ee6:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018eea:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018eee:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018ef0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018ef2:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018ef6:	9903      	ldr	r1, [sp, #12]
 8018ef8:	fa1f fc8c 	uxth.w	ip, ip
 8018efc:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018f00:	d041      	beq.n	8018f86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018f02:	d834      	bhi.n	8018f6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018f04:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018f08:	d059      	beq.n	8018fbe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018f0a:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018f0e:	d03a      	beq.n	8018f86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018f10:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018f14:	d034      	beq.n	8018f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018f16:	2400      	movs	r4, #0
 8018f18:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018f1c:	3a01      	subs	r2, #1
 8018f1e:	b169      	cbz	r1, 8018f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018f20:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018f22:	458c      	cmp	ip, r1
 8018f24:	da09      	bge.n	8018f3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018f26:	eba1 010c 	sub.w	r1, r1, ip
 8018f2a:	b289      	uxth	r1, r1
 8018f2c:	b933      	cbnz	r3, 8018f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018f2e:	2e00      	cmp	r6, #0
 8018f30:	d051      	beq.n	8018fd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018f32:	2800      	cmp	r0, #0
 8018f34:	d04f      	beq.n	8018fd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018f36:	440c      	add	r4, r1
 8018f38:	b2a4      	uxth	r4, r4
 8018f3a:	2100      	movs	r1, #0
 8018f3c:	682b      	ldr	r3, [r5, #0]
 8018f3e:	4293      	cmp	r3, r2
 8018f40:	da07      	bge.n	8018f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018f42:	f1b8 0f00 	cmp.w	r8, #0
 8018f46:	d004      	beq.n	8018f52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018f48:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018f4c:	682b      	ldr	r3, [r5, #0]
 8018f4e:	3301      	adds	r3, #1
 8018f50:	602b      	str	r3, [r5, #0]
 8018f52:	2730      	movs	r7, #48	; 0x30
 8018f54:	2c00      	cmp	r4, #0
 8018f56:	d04e      	beq.n	8018ff6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018f58:	682e      	ldr	r6, [r5, #0]
 8018f5a:	3c01      	subs	r4, #1
 8018f5c:	42b2      	cmp	r2, r6
 8018f5e:	b2a4      	uxth	r4, r4
 8018f60:	dd49      	ble.n	8018ff6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018f62:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018f66:	682b      	ldr	r3, [r5, #0]
 8018f68:	3301      	adds	r3, #1
 8018f6a:	602b      	str	r3, [r5, #0]
 8018f6c:	e7f2      	b.n	8018f54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018f6e:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018f72:	d01d      	beq.n	8018fb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018f74:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018f78:	d002      	beq.n	8018f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018f7a:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018f7e:	e7c9      	b.n	8018f14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018f80:	4684      	mov	ip, r0
 8018f82:	f04f 0800 	mov.w	r8, #0
 8018f86:	2c00      	cmp	r4, #0
 8018f88:	d0c6      	beq.n	8018f18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018f8a:	b947      	cbnz	r7, 8018f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018f8c:	2801      	cmp	r0, #1
 8018f8e:	d106      	bne.n	8018f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018f90:	8814      	ldrh	r4, [r2, #0]
 8018f92:	2c30      	cmp	r4, #48	; 0x30
 8018f94:	bf02      	ittt	eq
 8018f96:	3202      	addeq	r2, #2
 8018f98:	f8cb 2000 	streq.w	r2, [fp]
 8018f9c:	4638      	moveq	r0, r7
 8018f9e:	45bc      	cmp	ip, r7
 8018fa0:	da14      	bge.n	8018fcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018fa2:	b2bf      	uxth	r7, r7
 8018fa4:	eba7 040c 	sub.w	r4, r7, ip
 8018fa8:	b2a4      	uxth	r4, r4
 8018faa:	46bc      	mov	ip, r7
 8018fac:	2600      	movs	r6, #0
 8018fae:	e7b3      	b.n	8018f18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018fb0:	4684      	mov	ip, r0
 8018fb2:	b16c      	cbz	r4, 8018fd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018fb4:	42b8      	cmp	r0, r7
 8018fb6:	dd00      	ble.n	8018fba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018fb8:	b2b8      	uxth	r0, r7
 8018fba:	2400      	movs	r4, #0
 8018fbc:	e003      	b.n	8018fc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018fbe:	f04f 0c01 	mov.w	ip, #1
 8018fc2:	2400      	movs	r4, #0
 8018fc4:	4660      	mov	r0, ip
 8018fc6:	4626      	mov	r6, r4
 8018fc8:	46a0      	mov	r8, r4
 8018fca:	e7a5      	b.n	8018f18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018fcc:	2400      	movs	r4, #0
 8018fce:	e7ed      	b.n	8018fac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018fd0:	4626      	mov	r6, r4
 8018fd2:	46a0      	mov	r8, r4
 8018fd4:	e7a0      	b.n	8018f18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018fd6:	2900      	cmp	r1, #0
 8018fd8:	d0b0      	beq.n	8018f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018fda:	2720      	movs	r7, #32
 8018fdc:	682e      	ldr	r6, [r5, #0]
 8018fde:	2900      	cmp	r1, #0
 8018fe0:	d0ac      	beq.n	8018f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018fe2:	3901      	subs	r1, #1
 8018fe4:	4296      	cmp	r6, r2
 8018fe6:	b289      	uxth	r1, r1
 8018fe8:	daa7      	bge.n	8018f3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018fea:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018fee:	682b      	ldr	r3, [r5, #0]
 8018ff0:	3301      	adds	r3, #1
 8018ff2:	602b      	str	r3, [r5, #0]
 8018ff4:	e7f2      	b.n	8018fdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018ff6:	b188      	cbz	r0, 801901c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018ff8:	682b      	ldr	r3, [r5, #0]
 8018ffa:	3801      	subs	r0, #1
 8018ffc:	429a      	cmp	r2, r3
 8018ffe:	b280      	uxth	r0, r0
 8019000:	dd0c      	ble.n	801901c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019002:	f8db 3000 	ldr.w	r3, [fp]
 8019006:	1c9c      	adds	r4, r3, #2
 8019008:	f8cb 4000 	str.w	r4, [fp]
 801900c:	881c      	ldrh	r4, [r3, #0]
 801900e:	682b      	ldr	r3, [r5, #0]
 8019010:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019014:	682b      	ldr	r3, [r5, #0]
 8019016:	3301      	adds	r3, #1
 8019018:	602b      	str	r3, [r5, #0]
 801901a:	e7ec      	b.n	8018ff6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801901c:	2620      	movs	r6, #32
 801901e:	b151      	cbz	r1, 8019036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019020:	6828      	ldr	r0, [r5, #0]
 8019022:	3901      	subs	r1, #1
 8019024:	4282      	cmp	r2, r0
 8019026:	b289      	uxth	r1, r1
 8019028:	dd05      	ble.n	8019036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801902a:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801902e:	682b      	ldr	r3, [r5, #0]
 8019030:	3301      	adds	r3, #1
 8019032:	602b      	str	r3, [r5, #0]
 8019034:	e7f3      	b.n	801901e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019036:	b005      	add	sp, #20
 8019038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801903c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801903c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019040:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019044:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019048:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801904c:	2400      	movs	r4, #0
 801904e:	8014      	strh	r4, [r2, #0]
 8019050:	701c      	strb	r4, [r3, #0]
 8019052:	f888 4000 	strb.w	r4, [r8]
 8019056:	f88c 4000 	strb.w	r4, [ip]
 801905a:	f88e 4000 	strb.w	r4, [lr]
 801905e:	703c      	strb	r4, [r7, #0]
 8019060:	6804      	ldr	r4, [r0, #0]
 8019062:	b1a4      	cbz	r4, 801908e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019064:	8824      	ldrh	r4, [r4, #0]
 8019066:	f04f 0901 	mov.w	r9, #1
 801906a:	b314      	cbz	r4, 80190b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801906c:	2c2b      	cmp	r4, #43	; 0x2b
 801906e:	d001      	beq.n	8019074 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019070:	2c20      	cmp	r4, #32
 8019072:	d110      	bne.n	8019096 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019074:	8014      	strh	r4, [r2, #0]
 8019076:	6804      	ldr	r4, [r0, #0]
 8019078:	b10c      	cbz	r4, 801907e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801907a:	3402      	adds	r4, #2
 801907c:	6004      	str	r4, [r0, #0]
 801907e:	680c      	ldr	r4, [r1, #0]
 8019080:	b10c      	cbz	r4, 8019086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019082:	3401      	adds	r4, #1
 8019084:	600c      	str	r4, [r1, #0]
 8019086:	6804      	ldr	r4, [r0, #0]
 8019088:	b17c      	cbz	r4, 80190aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801908a:	8824      	ldrh	r4, [r4, #0]
 801908c:	e7ed      	b.n	801906a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801908e:	680c      	ldr	r4, [r1, #0]
 8019090:	b17c      	cbz	r4, 80190b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019092:	7824      	ldrb	r4, [r4, #0]
 8019094:	e7e7      	b.n	8019066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019096:	2c2d      	cmp	r4, #45	; 0x2d
 8019098:	d102      	bne.n	80190a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801909a:	f883 9000 	strb.w	r9, [r3]
 801909e:	e7ea      	b.n	8019076 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80190a0:	2c23      	cmp	r4, #35	; 0x23
 80190a2:	d107      	bne.n	80190b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80190a4:	f888 9000 	strb.w	r9, [r8]
 80190a8:	e7e5      	b.n	8019076 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80190aa:	680c      	ldr	r4, [r1, #0]
 80190ac:	b10c      	cbz	r4, 80190b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80190ae:	7824      	ldrb	r4, [r4, #0]
 80190b0:	e7db      	b.n	801906a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80190b2:	2400      	movs	r4, #0
 80190b4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80190b8:	2b09      	cmp	r3, #9
 80190ba:	d901      	bls.n	80190c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80190bc:	2c2a      	cmp	r4, #42	; 0x2a
 80190be:	d122      	bne.n	8019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80190c0:	2301      	movs	r3, #1
 80190c2:	2c30      	cmp	r4, #48	; 0x30
 80190c4:	f88e 3000 	strb.w	r3, [lr]
 80190c8:	d10d      	bne.n	80190e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80190ca:	f88c 3000 	strb.w	r3, [ip]
 80190ce:	6803      	ldr	r3, [r0, #0]
 80190d0:	b10b      	cbz	r3, 80190d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80190d2:	3302      	adds	r3, #2
 80190d4:	6003      	str	r3, [r0, #0]
 80190d6:	680b      	ldr	r3, [r1, #0]
 80190d8:	b10b      	cbz	r3, 80190de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80190da:	3301      	adds	r3, #1
 80190dc:	600b      	str	r3, [r1, #0]
 80190de:	6803      	ldr	r3, [r0, #0]
 80190e0:	2b00      	cmp	r3, #0
 80190e2:	d02f      	beq.n	8019144 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80190e4:	881c      	ldrh	r4, [r3, #0]
 80190e6:	2c2a      	cmp	r4, #42	; 0x2a
 80190e8:	d135      	bne.n	8019156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80190ea:	f04f 33ff 	mov.w	r3, #4294967295
 80190ee:	6033      	str	r3, [r6, #0]
 80190f0:	6803      	ldr	r3, [r0, #0]
 80190f2:	b10b      	cbz	r3, 80190f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80190f4:	3302      	adds	r3, #2
 80190f6:	6003      	str	r3, [r0, #0]
 80190f8:	680b      	ldr	r3, [r1, #0]
 80190fa:	b10b      	cbz	r3, 8019100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80190fc:	3301      	adds	r3, #1
 80190fe:	600b      	str	r3, [r1, #0]
 8019100:	6803      	ldr	r3, [r0, #0]
 8019102:	b31b      	cbz	r3, 801914c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019104:	881c      	ldrh	r4, [r3, #0]
 8019106:	2c2e      	cmp	r4, #46	; 0x2e
 8019108:	d11a      	bne.n	8019140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801910a:	2301      	movs	r3, #1
 801910c:	703b      	strb	r3, [r7, #0]
 801910e:	6803      	ldr	r3, [r0, #0]
 8019110:	b10b      	cbz	r3, 8019116 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019112:	3302      	adds	r3, #2
 8019114:	6003      	str	r3, [r0, #0]
 8019116:	680b      	ldr	r3, [r1, #0]
 8019118:	b10b      	cbz	r3, 801911e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801911a:	3301      	adds	r3, #1
 801911c:	600b      	str	r3, [r1, #0]
 801911e:	6803      	ldr	r3, [r0, #0]
 8019120:	2b00      	cmp	r3, #0
 8019122:	d036      	beq.n	8019192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019124:	881b      	ldrh	r3, [r3, #0]
 8019126:	2b2a      	cmp	r3, #42	; 0x2a
 8019128:	d137      	bne.n	801919a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801912a:	f04f 33ff 	mov.w	r3, #4294967295
 801912e:	602b      	str	r3, [r5, #0]
 8019130:	6803      	ldr	r3, [r0, #0]
 8019132:	b10b      	cbz	r3, 8019138 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019134:	3302      	adds	r3, #2
 8019136:	6003      	str	r3, [r0, #0]
 8019138:	680b      	ldr	r3, [r1, #0]
 801913a:	b10b      	cbz	r3, 8019140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801913c:	3301      	adds	r3, #1
 801913e:	600b      	str	r3, [r1, #0]
 8019140:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019144:	680c      	ldr	r4, [r1, #0]
 8019146:	b134      	cbz	r4, 8019156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019148:	7824      	ldrb	r4, [r4, #0]
 801914a:	e7cc      	b.n	80190e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801914c:	680b      	ldr	r3, [r1, #0]
 801914e:	2b00      	cmp	r3, #0
 8019150:	d0f6      	beq.n	8019140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019152:	781c      	ldrb	r4, [r3, #0]
 8019154:	e7d7      	b.n	8019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019156:	2300      	movs	r3, #0
 8019158:	6033      	str	r3, [r6, #0]
 801915a:	220a      	movs	r2, #10
 801915c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019160:	fa1f f38c 	uxth.w	r3, ip
 8019164:	2b09      	cmp	r3, #9
 8019166:	d8ce      	bhi.n	8019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019168:	6833      	ldr	r3, [r6, #0]
 801916a:	fb02 c303 	mla	r3, r2, r3, ip
 801916e:	6033      	str	r3, [r6, #0]
 8019170:	6803      	ldr	r3, [r0, #0]
 8019172:	b10b      	cbz	r3, 8019178 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019174:	3302      	adds	r3, #2
 8019176:	6003      	str	r3, [r0, #0]
 8019178:	680b      	ldr	r3, [r1, #0]
 801917a:	b10b      	cbz	r3, 8019180 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801917c:	3301      	adds	r3, #1
 801917e:	600b      	str	r3, [r1, #0]
 8019180:	6803      	ldr	r3, [r0, #0]
 8019182:	b10b      	cbz	r3, 8019188 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019184:	881c      	ldrh	r4, [r3, #0]
 8019186:	e7e9      	b.n	801915c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019188:	680c      	ldr	r4, [r1, #0]
 801918a:	2c00      	cmp	r4, #0
 801918c:	d0e6      	beq.n	801915c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801918e:	7824      	ldrb	r4, [r4, #0]
 8019190:	e7e4      	b.n	801915c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019192:	680b      	ldr	r3, [r1, #0]
 8019194:	b10b      	cbz	r3, 801919a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019196:	781b      	ldrb	r3, [r3, #0]
 8019198:	e7c5      	b.n	8019126 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801919a:	2200      	movs	r2, #0
 801919c:	602a      	str	r2, [r5, #0]
 801919e:	240a      	movs	r4, #10
 80191a0:	3b30      	subs	r3, #48	; 0x30
 80191a2:	b29e      	uxth	r6, r3
 80191a4:	2e09      	cmp	r6, #9
 80191a6:	682a      	ldr	r2, [r5, #0]
 80191a8:	d813      	bhi.n	80191d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80191aa:	fb04 3302 	mla	r3, r4, r2, r3
 80191ae:	602b      	str	r3, [r5, #0]
 80191b0:	6803      	ldr	r3, [r0, #0]
 80191b2:	b10b      	cbz	r3, 80191b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80191b4:	3302      	adds	r3, #2
 80191b6:	6003      	str	r3, [r0, #0]
 80191b8:	680b      	ldr	r3, [r1, #0]
 80191ba:	b10b      	cbz	r3, 80191c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80191bc:	3301      	adds	r3, #1
 80191be:	600b      	str	r3, [r1, #0]
 80191c0:	6803      	ldr	r3, [r0, #0]
 80191c2:	b10b      	cbz	r3, 80191c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80191c4:	881b      	ldrh	r3, [r3, #0]
 80191c6:	e7eb      	b.n	80191a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80191c8:	680b      	ldr	r3, [r1, #0]
 80191ca:	2b00      	cmp	r3, #0
 80191cc:	d0e8      	beq.n	80191a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80191ce:	781b      	ldrb	r3, [r3, #0]
 80191d0:	e7e6      	b.n	80191a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80191d2:	2a06      	cmp	r2, #6
 80191d4:	bfa8      	it	ge
 80191d6:	2206      	movge	r2, #6
 80191d8:	602a      	str	r2, [r5, #0]
 80191da:	e7b1      	b.n	8019140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080191dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80191dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191e0:	b0a3      	sub	sp, #140	; 0x8c
 80191e2:	2600      	movs	r6, #0
 80191e4:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80191e8:	4607      	mov	r7, r0
 80191ea:	4688      	mov	r8, r1
 80191ec:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80191f0:	4631      	mov	r1, r6
 80191f2:	2242      	movs	r2, #66	; 0x42
 80191f4:	4648      	mov	r0, r9
 80191f6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80191f8:	960d      	str	r6, [sp, #52]	; 0x34
 80191fa:	f00c fc8f 	bl	8025b1c <memset>
 80191fe:	b15f      	cbz	r7, 8019218 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019200:	f108 3aff 	add.w	sl, r8, #4294967295
 8019204:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019206:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019208:	b152      	cbz	r2, 8019220 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801920a:	8812      	ldrh	r2, [r2, #0]
 801920c:	b10a      	cbz	r2, 8019212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801920e:	459a      	cmp	sl, r3
 8019210:	dc2e      	bgt.n	8019270 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019212:	2200      	movs	r2, #0
 8019214:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019218:	4638      	mov	r0, r7
 801921a:	b023      	add	sp, #140	; 0x8c
 801921c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019220:	9a08      	ldr	r2, [sp, #32]
 8019222:	2a00      	cmp	r2, #0
 8019224:	d0f5      	beq.n	8019212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019226:	7812      	ldrb	r2, [r2, #0]
 8019228:	e7f0      	b.n	801920c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801922a:	2d00      	cmp	r5, #0
 801922c:	d0ea      	beq.n	8019204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801922e:	782a      	ldrb	r2, [r5, #0]
 8019230:	b142      	cbz	r2, 8019244 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019232:	2a25      	cmp	r2, #37	; 0x25
 8019234:	d001      	beq.n	801923a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019236:	459a      	cmp	sl, r3
 8019238:	dc08      	bgt.n	801924c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801923a:	f1bb 0f00 	cmp.w	fp, #0
 801923e:	d121      	bne.n	8019284 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019240:	2d00      	cmp	r5, #0
 8019242:	d0df      	beq.n	8019204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019244:	782a      	ldrb	r2, [r5, #0]
 8019246:	f04f 0b00 	mov.w	fp, #0
 801924a:	e01d      	b.n	8019288 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801924c:	f1bb 0f00 	cmp.w	fp, #0
 8019250:	d078      	beq.n	8019344 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019252:	f8bb 2000 	ldrh.w	r2, [fp]
 8019256:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801925a:	f1bb 0f00 	cmp.w	fp, #0
 801925e:	d002      	beq.n	8019266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019260:	f10b 0202 	add.w	r2, fp, #2
 8019264:	9209      	str	r2, [sp, #36]	; 0x24
 8019266:	b10d      	cbz	r5, 801926c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8019268:	3501      	adds	r5, #1
 801926a:	9508      	str	r5, [sp, #32]
 801926c:	3301      	adds	r3, #1
 801926e:	930d      	str	r3, [sp, #52]	; 0x34
 8019270:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019274:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019276:	f1bb 0f00 	cmp.w	fp, #0
 801927a:	d0d6      	beq.n	801922a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801927c:	f8bb 2000 	ldrh.w	r2, [fp]
 8019280:	2a00      	cmp	r2, #0
 8019282:	d1d6      	bne.n	8019232 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019284:	f8bb 2000 	ldrh.w	r2, [fp]
 8019288:	2a00      	cmp	r2, #0
 801928a:	d0bb      	beq.n	8019204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801928c:	459a      	cmp	sl, r3
 801928e:	ddb9      	ble.n	8019204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019290:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019294:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019298:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801929c:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80192a0:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80192a4:	960e      	str	r6, [sp, #56]	; 0x38
 80192a6:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80192aa:	960f      	str	r6, [sp, #60]	; 0x3c
 80192ac:	f1bb 0f00 	cmp.w	fp, #0
 80192b0:	d002      	beq.n	80192b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80192b2:	f10b 0302 	add.w	r3, fp, #2
 80192b6:	9309      	str	r3, [sp, #36]	; 0x24
 80192b8:	b10d      	cbz	r5, 80192be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80192ba:	1c6b      	adds	r3, r5, #1
 80192bc:	9308      	str	r3, [sp, #32]
 80192be:	ab0f      	add	r3, sp, #60	; 0x3c
 80192c0:	9305      	str	r3, [sp, #20]
 80192c2:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80192c6:	9304      	str	r3, [sp, #16]
 80192c8:	ab0e      	add	r3, sp, #56	; 0x38
 80192ca:	9303      	str	r3, [sp, #12]
 80192cc:	ab0c      	add	r3, sp, #48	; 0x30
 80192ce:	9302      	str	r3, [sp, #8]
 80192d0:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80192d4:	9301      	str	r3, [sp, #4]
 80192d6:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80192da:	9300      	str	r3, [sp, #0]
 80192dc:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80192e0:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80192e4:	a908      	add	r1, sp, #32
 80192e6:	a809      	add	r0, sp, #36	; 0x24
 80192e8:	f7ff fea8 	bl	801903c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80192ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192ee:	2b00      	cmp	r3, #0
 80192f0:	bfbe      	ittt	lt
 80192f2:	6823      	ldrlt	r3, [r4, #0]
 80192f4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80192f8:	930e      	strlt	r3, [sp, #56]	; 0x38
 80192fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80192fc:	bfb8      	it	lt
 80192fe:	3404      	addlt	r4, #4
 8019300:	2b00      	cmp	r3, #0
 8019302:	bfb8      	it	lt
 8019304:	6823      	ldrlt	r3, [r4, #0]
 8019306:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801930a:	bfbe      	ittt	lt
 801930c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019310:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019312:	3404      	addlt	r4, #4
 8019314:	b1d9      	cbz	r1, 801934e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019316:	880b      	ldrh	r3, [r1, #0]
 8019318:	2b69      	cmp	r3, #105	; 0x69
 801931a:	d01f      	beq.n	801935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801931c:	d82f      	bhi.n	801937e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801931e:	2b58      	cmp	r3, #88	; 0x58
 8019320:	d01c      	beq.n	801935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019322:	d818      	bhi.n	8019356 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019324:	2b25      	cmp	r3, #37	; 0x25
 8019326:	d034      	beq.n	8019392 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019328:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801932c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801932e:	f1bb 0f00 	cmp.w	fp, #0
 8019332:	f000 80b8 	beq.w	80194a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019336:	f8bb 5000 	ldrh.w	r5, [fp]
 801933a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801933e:	3301      	adds	r3, #1
 8019340:	930d      	str	r3, [sp, #52]	; 0x34
 8019342:	e029      	b.n	8019398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019344:	b10d      	cbz	r5, 801934a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019346:	782a      	ldrb	r2, [r5, #0]
 8019348:	e785      	b.n	8019256 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801934a:	462a      	mov	r2, r5
 801934c:	e783      	b.n	8019256 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801934e:	2a00      	cmp	r2, #0
 8019350:	d0ea      	beq.n	8019328 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019352:	7813      	ldrb	r3, [r2, #0]
 8019354:	e7e0      	b.n	8019318 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019356:	3b63      	subs	r3, #99	; 0x63
 8019358:	2b01      	cmp	r3, #1
 801935a:	d8e5      	bhi.n	8019328 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801935c:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019360:	b329      	cbz	r1, 80193ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019362:	880b      	ldrh	r3, [r1, #0]
 8019364:	2b69      	cmp	r3, #105	; 0x69
 8019366:	d063      	beq.n	8019430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019368:	d825      	bhi.n	80193b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801936a:	2b63      	cmp	r3, #99	; 0x63
 801936c:	d038      	beq.n	80193e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801936e:	2b64      	cmp	r3, #100	; 0x64
 8019370:	d05e      	beq.n	8019430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019372:	2b58      	cmp	r3, #88	; 0x58
 8019374:	d07b      	beq.n	801946e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019376:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801937a:	4625      	mov	r5, r4
 801937c:	e036      	b.n	80193ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801937e:	2b73      	cmp	r3, #115	; 0x73
 8019380:	d0ec      	beq.n	801935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019382:	d802      	bhi.n	801938a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019384:	2b6f      	cmp	r3, #111	; 0x6f
 8019386:	d1cf      	bne.n	8019328 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019388:	e7e8      	b.n	801935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801938a:	2b75      	cmp	r3, #117	; 0x75
 801938c:	d0e6      	beq.n	801935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801938e:	2b78      	cmp	r3, #120	; 0x78
 8019390:	e7f9      	b.n	8019386 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019392:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019394:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019398:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801939a:	b10b      	cbz	r3, 80193a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801939c:	3302      	adds	r3, #2
 801939e:	9309      	str	r3, [sp, #36]	; 0x24
 80193a0:	9b08      	ldr	r3, [sp, #32]
 80193a2:	2b00      	cmp	r3, #0
 80193a4:	f43f af2e 	beq.w	8019204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80193a8:	3301      	adds	r3, #1
 80193aa:	9308      	str	r3, [sp, #32]
 80193ac:	e72a      	b.n	8019204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80193ae:	2a00      	cmp	r2, #0
 80193b0:	d0e1      	beq.n	8019376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80193b2:	7813      	ldrb	r3, [r2, #0]
 80193b4:	e7d6      	b.n	8019364 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80193b6:	2b73      	cmp	r3, #115	; 0x73
 80193b8:	d036      	beq.n	8019428 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80193ba:	d807      	bhi.n	80193cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80193bc:	2b6f      	cmp	r3, #111	; 0x6f
 80193be:	d1da      	bne.n	8019376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80193c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80193c2:	1d25      	adds	r5, r4, #4
 80193c4:	eba8 0202 	sub.w	r2, r8, r2
 80193c8:	2308      	movs	r3, #8
 80193ca:	e04a      	b.n	8019462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80193cc:	2b75      	cmp	r3, #117	; 0x75
 80193ce:	d043      	beq.n	8019458 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80193d0:	2b78      	cmp	r3, #120	; 0x78
 80193d2:	d1d0      	bne.n	8019376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80193d4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80193d6:	1d25      	adds	r5, r4, #4
 80193d8:	eba8 0202 	sub.w	r2, r8, r2
 80193dc:	2310      	movs	r3, #16
 80193de:	e040      	b.n	8019462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80193e0:	7823      	ldrb	r3, [r4, #0]
 80193e2:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80193e6:	1d25      	adds	r5, r4, #4
 80193e8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80193ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193ee:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80193f2:	2b00      	cmp	r3, #0
 80193f4:	d052      	beq.n	801949c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80193f6:	881a      	ldrh	r2, [r3, #0]
 80193f8:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80193fc:	a80d      	add	r0, sp, #52	; 0x34
 80193fe:	9005      	str	r0, [sp, #20]
 8019400:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019404:	9004      	str	r0, [sp, #16]
 8019406:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019408:	9003      	str	r0, [sp, #12]
 801940a:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801940e:	9002      	str	r0, [sp, #8]
 8019410:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019412:	9001      	str	r0, [sp, #4]
 8019414:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019418:	9000      	str	r0, [sp, #0]
 801941a:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801941e:	a810      	add	r0, sp, #64	; 0x40
 8019420:	f7ff fd49 	bl	8018eb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019424:	462c      	mov	r4, r5
 8019426:	e7b7      	b.n	8019398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019428:	6823      	ldr	r3, [r4, #0]
 801942a:	1d25      	adds	r5, r4, #4
 801942c:	9310      	str	r3, [sp, #64]	; 0x40
 801942e:	e7dd      	b.n	80193ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019430:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019432:	6820      	ldr	r0, [r4, #0]
 8019434:	eba8 0202 	sub.w	r2, r8, r2
 8019438:	230a      	movs	r3, #10
 801943a:	b292      	uxth	r2, r2
 801943c:	4649      	mov	r1, r9
 801943e:	f7ff fcf9 	bl	8018e34 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019442:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019446:	2b2d      	cmp	r3, #45	; 0x2d
 8019448:	f104 0504 	add.w	r5, r4, #4
 801944c:	d1ce      	bne.n	80193ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801944e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019452:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019454:	3302      	adds	r3, #2
 8019456:	e7e9      	b.n	801942c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019458:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801945a:	1d25      	adds	r5, r4, #4
 801945c:	eba8 0202 	sub.w	r2, r8, r2
 8019460:	230a      	movs	r3, #10
 8019462:	b292      	uxth	r2, r2
 8019464:	4649      	mov	r1, r9
 8019466:	6820      	ldr	r0, [r4, #0]
 8019468:	f7ff fcc6 	bl	8018df8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801946c:	e7be      	b.n	80193ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801946e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019470:	6820      	ldr	r0, [r4, #0]
 8019472:	eba8 0202 	sub.w	r2, r8, r2
 8019476:	b292      	uxth	r2, r2
 8019478:	2310      	movs	r3, #16
 801947a:	4649      	mov	r1, r9
 801947c:	f7ff fcbc 	bl	8018df8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8019480:	1d25      	adds	r5, r4, #4
 8019482:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019486:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801948a:	2b00      	cmp	r3, #0
 801948c:	d0ae      	beq.n	80193ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801948e:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019492:	2919      	cmp	r1, #25
 8019494:	d8f7      	bhi.n	8019486 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019496:	3b20      	subs	r3, #32
 8019498:	8013      	strh	r3, [r2, #0]
 801949a:	e7f4      	b.n	8019486 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801949c:	9a08      	ldr	r2, [sp, #32]
 801949e:	2a00      	cmp	r2, #0
 80194a0:	d0aa      	beq.n	80193f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80194a2:	7812      	ldrb	r2, [r2, #0]
 80194a4:	e7a8      	b.n	80193f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80194a6:	2d00      	cmp	r5, #0
 80194a8:	f43f af47 	beq.w	801933a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80194ac:	782d      	ldrb	r5, [r5, #0]
 80194ae:	e744      	b.n	801933a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>:
 80194b0:	b507      	push	{r0, r1, r2, lr}
 80194b2:	9300      	str	r3, [sp, #0]
 80194b4:	2300      	movs	r3, #0
 80194b6:	f7ff fe91 	bl	80191dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80194ba:	b003      	add	sp, #12
 80194bc:	f85d fb04 	ldr.w	pc, [sp], #4

080194c0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>:
 80194c0:	b40c      	push	{r2, r3}
 80194c2:	b507      	push	{r0, r1, r2, lr}
 80194c4:	ab04      	add	r3, sp, #16
 80194c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80194ca:	9301      	str	r3, [sp, #4]
 80194cc:	f7ff fff0 	bl	80194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>
 80194d0:	b003      	add	sp, #12
 80194d2:	f85d eb04 	ldr.w	lr, [sp], #4
 80194d6:	b002      	add	sp, #8
 80194d8:	4770      	bx	lr

080194da <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80194da:	b507      	push	{r0, r1, r2, lr}
 80194dc:	9300      	str	r3, [sp, #0]
 80194de:	4613      	mov	r3, r2
 80194e0:	2200      	movs	r2, #0
 80194e2:	f7ff fe7b 	bl	80191dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80194e6:	b003      	add	sp, #12
 80194e8:	f85d fb04 	ldr.w	pc, [sp], #4

080194ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80194ec:	b40c      	push	{r2, r3}
 80194ee:	b507      	push	{r0, r1, r2, lr}
 80194f0:	ab04      	add	r3, sp, #16
 80194f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80194f6:	9301      	str	r3, [sp, #4]
 80194f8:	f7ff ffef 	bl	80194da <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80194fc:	b003      	add	sp, #12
 80194fe:	f85d eb04 	ldr.w	lr, [sp], #4
 8019502:	b002      	add	sp, #8
 8019504:	4770      	bx	lr
	...

08019508 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019508:	4b01      	ldr	r3, [pc, #4]	; (8019510 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801950a:	6018      	str	r0, [r3, #0]
 801950c:	4770      	bx	lr
 801950e:	bf00      	nop
 8019510:	20027a10 	.word	0x20027a10

08019514 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019514:	4b06      	ldr	r3, [pc, #24]	; (8019530 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019516:	881a      	ldrh	r2, [r3, #0]
 8019518:	4282      	cmp	r2, r0
 801951a:	d807      	bhi.n	801952c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801951c:	4b05      	ldr	r3, [pc, #20]	; (8019534 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801951e:	881b      	ldrh	r3, [r3, #0]
 8019520:	4413      	add	r3, r2
 8019522:	4298      	cmp	r0, r3
 8019524:	bfac      	ite	ge
 8019526:	2000      	movge	r0, #0
 8019528:	2001      	movlt	r0, #1
 801952a:	4770      	bx	lr
 801952c:	2000      	movs	r0, #0
 801952e:	4770      	bx	lr
 8019530:	20027a30 	.word	0x20027a30
 8019534:	20027a34 	.word	0x20027a34

08019538 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019538:	b508      	push	{r3, lr}
 801953a:	4601      	mov	r1, r0
 801953c:	f7ff ffea 	bl	8019514 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019540:	b118      	cbz	r0, 801954a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019542:	4b02      	ldr	r3, [pc, #8]	; (801954c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019544:	681b      	ldr	r3, [r3, #0]
 8019546:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801954a:	bd08      	pop	{r3, pc}
 801954c:	20027a14 	.word	0x20027a14

08019550 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019554:	4d28      	ldr	r5, [pc, #160]	; (80195f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019556:	682b      	ldr	r3, [r5, #0]
 8019558:	2b00      	cmp	r3, #0
 801955a:	d04a      	beq.n	80195f2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 801955c:	4a27      	ldr	r2, [pc, #156]	; (80195fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801955e:	4e28      	ldr	r6, [pc, #160]	; (8019600 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019560:	8810      	ldrh	r0, [r2, #0]
 8019562:	f8b6 8000 	ldrh.w	r8, [r6]
 8019566:	4c27      	ldr	r4, [pc, #156]	; (8019604 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019568:	4f27      	ldr	r7, [pc, #156]	; (8019608 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801956a:	4440      	add	r0, r8
 801956c:	1c41      	adds	r1, r0, #1
 801956e:	f021 0101 	bic.w	r1, r1, #1
 8019572:	0409      	lsls	r1, r1, #16
 8019574:	0c09      	lsrs	r1, r1, #16
 8019576:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801957a:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 801957e:	eb03 020e 	add.w	r2, r3, lr
 8019582:	eb0e 010c 	add.w	r1, lr, ip
 8019586:	6022      	str	r2, [r4, #0]
 8019588:	185a      	adds	r2, r3, r1
 801958a:	603a      	str	r2, [r7, #0]
 801958c:	220e      	movs	r2, #14
 801958e:	fb02 f208 	mul.w	r2, r2, r8
 8019592:	3203      	adds	r2, #3
 8019594:	f022 0203 	bic.w	r2, r2, #3
 8019598:	4411      	add	r1, r2
 801959a:	440b      	add	r3, r1
 801959c:	491b      	ldr	r1, [pc, #108]	; (801960c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 801959e:	600b      	str	r3, [r1, #0]
 80195a0:	491b      	ldr	r1, [pc, #108]	; (8019610 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 80195a2:	2300      	movs	r3, #0
 80195a4:	800b      	strh	r3, [r1, #0]
 80195a6:	491b      	ldr	r1, [pc, #108]	; (8019614 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 80195a8:	6809      	ldr	r1, [r1, #0]
 80195aa:	eba1 010e 	sub.w	r1, r1, lr
 80195ae:	eba1 010c 	sub.w	r1, r1, ip
 80195b2:	1a8a      	subs	r2, r1, r2
 80195b4:	4918      	ldr	r1, [pc, #96]	; (8019618 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 80195b6:	600a      	str	r2, [r1, #0]
 80195b8:	4a18      	ldr	r2, [pc, #96]	; (801961c <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 80195ba:	469c      	mov	ip, r3
 80195bc:	8013      	strh	r3, [r2, #0]
 80195be:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80195c2:	4283      	cmp	r3, r0
 80195c4:	d10d      	bne.n	80195e2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 80195c6:	8835      	ldrh	r5, [r6, #0]
 80195c8:	6838      	ldr	r0, [r7, #0]
 80195ca:	2300      	movs	r3, #0
 80195cc:	240e      	movs	r4, #14
 80195ce:	429d      	cmp	r5, r3
 80195d0:	d90f      	bls.n	80195f2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 80195d2:	fb04 0203 	mla	r2, r4, r3, r0
 80195d6:	3301      	adds	r3, #1
 80195d8:	7b11      	ldrb	r1, [r2, #12]
 80195da:	f36f 1145 	bfc	r1, #5, #1
 80195de:	7311      	strb	r1, [r2, #12]
 80195e0:	e7f5      	b.n	80195ce <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 80195e2:	682a      	ldr	r2, [r5, #0]
 80195e4:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80195e8:	6822      	ldr	r2, [r4, #0]
 80195ea:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80195ee:	3301      	adds	r3, #1
 80195f0:	e7e7      	b.n	80195c2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 80195f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80195f6:	bf00      	nop
 80195f8:	20027a14 	.word	0x20027a14
 80195fc:	20027a30 	.word	0x20027a30
 8019600:	20027a34 	.word	0x20027a34
 8019604:	20027a28 	.word	0x20027a28
 8019608:	20027a18 	.word	0x20027a18
 801960c:	20027a20 	.word	0x20027a20
 8019610:	20027a32 	.word	0x20027a32
 8019614:	20027a1c 	.word	0x20027a1c
 8019618:	20027a2c 	.word	0x20027a2c
 801961c:	20027a24 	.word	0x20027a24

08019620 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019620:	b510      	push	{r4, lr}
 8019622:	4b10      	ldr	r3, [pc, #64]	; (8019664 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8019624:	681b      	ldr	r3, [r3, #0]
 8019626:	b9db      	cbnz	r3, 8019660 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8019628:	b1d1      	cbz	r1, 8019660 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801962a:	4b0f      	ldr	r3, [pc, #60]	; (8019668 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 801962c:	801a      	strh	r2, [r3, #0]
 801962e:	4b0f      	ldr	r3, [pc, #60]	; (801966c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8019630:	881b      	ldrh	r3, [r3, #0]
 8019632:	b292      	uxth	r2, r2
 8019634:	240e      	movs	r4, #14
 8019636:	4413      	add	r3, r2
 8019638:	4362      	muls	r2, r4
 801963a:	2406      	movs	r4, #6
 801963c:	fb04 2203 	mla	r2, r4, r3, r2
 8019640:	428a      	cmp	r2, r1
 8019642:	d305      	bcc.n	8019650 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8019644:	4b0a      	ldr	r3, [pc, #40]	; (8019670 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8019646:	4a0b      	ldr	r2, [pc, #44]	; (8019674 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8019648:	480b      	ldr	r0, [pc, #44]	; (8019678 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801964a:	2135      	movs	r1, #53	; 0x35
 801964c:	f00c f8b8 	bl	80257c0 <__assert_func>
 8019650:	4b0a      	ldr	r3, [pc, #40]	; (801967c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8019652:	6019      	str	r1, [r3, #0]
 8019654:	4b0a      	ldr	r3, [pc, #40]	; (8019680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8019656:	6018      	str	r0, [r3, #0]
 8019658:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801965c:	f7ff bf78 	b.w	8019550 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019660:	bd10      	pop	{r4, pc}
 8019662:	bf00      	nop
 8019664:	20027a20 	.word	0x20027a20
 8019668:	20027a34 	.word	0x20027a34
 801966c:	20027a30 	.word	0x20027a30
 8019670:	0802ad7a 	.word	0x0802ad7a
 8019674:	0802add3 	.word	0x0802add3
 8019678:	0802ad55 	.word	0x0802ad55
 801967c:	20027a1c 	.word	0x20027a1c
 8019680:	20027a14 	.word	0x20027a14

08019684 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019684:	b470      	push	{r4, r5, r6}
 8019686:	4c07      	ldr	r4, [pc, #28]	; (80196a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019688:	6826      	ldr	r6, [r4, #0]
 801968a:	4605      	mov	r5, r0
 801968c:	4610      	mov	r0, r2
 801968e:	9a03      	ldr	r2, [sp, #12]
 8019690:	b936      	cbnz	r6, 80196a0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8019692:	6025      	str	r5, [r4, #0]
 8019694:	4c04      	ldr	r4, [pc, #16]	; (80196a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019696:	8021      	strh	r1, [r4, #0]
 8019698:	bc70      	pop	{r4, r5, r6}
 801969a:	4619      	mov	r1, r3
 801969c:	f7ff bfc0 	b.w	8019620 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80196a0:	bc70      	pop	{r4, r5, r6}
 80196a2:	4770      	bx	lr
 80196a4:	20027a38 	.word	0x20027a38
 80196a8:	20027a30 	.word	0x20027a30

080196ac <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80196ac:	b508      	push	{r3, lr}
 80196ae:	4b14      	ldr	r3, [pc, #80]	; (8019700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80196b0:	6819      	ldr	r1, [r3, #0]
 80196b2:	b931      	cbnz	r1, 80196c2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 80196b4:	4b13      	ldr	r3, [pc, #76]	; (8019704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80196b6:	4a14      	ldr	r2, [pc, #80]	; (8019708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80196b8:	4814      	ldr	r0, [pc, #80]	; (801970c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80196ba:	f240 4185 	movw	r1, #1157	; 0x485
 80196be:	f00c f87f 	bl	80257c0 <__assert_func>
 80196c2:	4a13      	ldr	r2, [pc, #76]	; (8019710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80196c4:	8803      	ldrh	r3, [r0, #0]
 80196c6:	8812      	ldrh	r2, [r2, #0]
 80196c8:	4293      	cmp	r3, r2
 80196ca:	d204      	bcs.n	80196d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 80196cc:	2214      	movs	r2, #20
 80196ce:	fb02 1303 	mla	r3, r2, r3, r1
 80196d2:	8918      	ldrh	r0, [r3, #8]
 80196d4:	bd08      	pop	{r3, pc}
 80196d6:	490f      	ldr	r1, [pc, #60]	; (8019714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 80196d8:	8809      	ldrh	r1, [r1, #0]
 80196da:	4411      	add	r1, r2
 80196dc:	428b      	cmp	r3, r1
 80196de:	da06      	bge.n	80196ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 80196e0:	1a9b      	subs	r3, r3, r2
 80196e2:	4a0d      	ldr	r2, [pc, #52]	; (8019718 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 80196e4:	6812      	ldr	r2, [r2, #0]
 80196e6:	210e      	movs	r1, #14
 80196e8:	fb01 2303 	mla	r3, r1, r3, r2
 80196ec:	e7f1      	b.n	80196d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 80196ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80196f2:	4293      	cmp	r3, r2
 80196f4:	bf0a      	itet	eq
 80196f6:	4b09      	ldreq	r3, [pc, #36]	; (801971c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80196f8:	2000      	movne	r0, #0
 80196fa:	8818      	ldrheq	r0, [r3, #0]
 80196fc:	e7ea      	b.n	80196d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 80196fe:	bf00      	nop
 8019700:	20027a38 	.word	0x20027a38
 8019704:	08029fd0 	.word	0x08029fd0
 8019708:	0802ae80 	.word	0x0802ae80
 801970c:	0802ad55 	.word	0x0802ad55
 8019710:	20027a30 	.word	0x20027a30
 8019714:	20027a34 	.word	0x20027a34
 8019718:	20027a18 	.word	0x20027a18
 801971c:	200279a4 	.word	0x200279a4

08019720 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019720:	b508      	push	{r3, lr}
 8019722:	4b14      	ldr	r3, [pc, #80]	; (8019774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019724:	6819      	ldr	r1, [r3, #0]
 8019726:	b931      	cbnz	r1, 8019736 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8019728:	4b13      	ldr	r3, [pc, #76]	; (8019778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801972a:	4a14      	ldr	r2, [pc, #80]	; (801977c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801972c:	4814      	ldr	r0, [pc, #80]	; (8019780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801972e:	f240 4199 	movw	r1, #1177	; 0x499
 8019732:	f00c f845 	bl	80257c0 <__assert_func>
 8019736:	4a13      	ldr	r2, [pc, #76]	; (8019784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019738:	8803      	ldrh	r3, [r0, #0]
 801973a:	8812      	ldrh	r2, [r2, #0]
 801973c:	4293      	cmp	r3, r2
 801973e:	d204      	bcs.n	801974a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8019740:	2214      	movs	r2, #20
 8019742:	fb02 1303 	mla	r3, r2, r3, r1
 8019746:	8958      	ldrh	r0, [r3, #10]
 8019748:	bd08      	pop	{r3, pc}
 801974a:	490f      	ldr	r1, [pc, #60]	; (8019788 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801974c:	8809      	ldrh	r1, [r1, #0]
 801974e:	4411      	add	r1, r2
 8019750:	428b      	cmp	r3, r1
 8019752:	da06      	bge.n	8019762 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8019754:	1a9b      	subs	r3, r3, r2
 8019756:	4a0d      	ldr	r2, [pc, #52]	; (801978c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8019758:	6812      	ldr	r2, [r2, #0]
 801975a:	210e      	movs	r1, #14
 801975c:	fb01 2303 	mla	r3, r1, r3, r2
 8019760:	e7f1      	b.n	8019746 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8019762:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019766:	4293      	cmp	r3, r2
 8019768:	bf0a      	itet	eq
 801976a:	4b09      	ldreq	r3, [pc, #36]	; (8019790 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 801976c:	2000      	movne	r0, #0
 801976e:	8818      	ldrheq	r0, [r3, #0]
 8019770:	e7ea      	b.n	8019748 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8019772:	bf00      	nop
 8019774:	20027a38 	.word	0x20027a38
 8019778:	08029fd0 	.word	0x08029fd0
 801977c:	0802aeac 	.word	0x0802aeac
 8019780:	0802ad55 	.word	0x0802ad55
 8019784:	20027a30 	.word	0x20027a30
 8019788:	20027a34 	.word	0x20027a34
 801978c:	20027a18 	.word	0x20027a18
 8019790:	200279a6 	.word	0x200279a6

08019794 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019794:	b510      	push	{r4, lr}
 8019796:	4b23      	ldr	r3, [pc, #140]	; (8019824 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019798:	681c      	ldr	r4, [r3, #0]
 801979a:	b934      	cbnz	r4, 80197aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801979c:	4b22      	ldr	r3, [pc, #136]	; (8019828 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801979e:	4a23      	ldr	r2, [pc, #140]	; (801982c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80197a0:	4823      	ldr	r0, [pc, #140]	; (8019830 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80197a2:	f240 41ad 	movw	r1, #1197	; 0x4ad
 80197a6:	f00c f80b 	bl	80257c0 <__assert_func>
 80197aa:	4a22      	ldr	r2, [pc, #136]	; (8019834 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80197ac:	880b      	ldrh	r3, [r1, #0]
 80197ae:	8812      	ldrh	r2, [r2, #0]
 80197b0:	4293      	cmp	r3, r2
 80197b2:	d211      	bcs.n	80197d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 80197b4:	2214      	movs	r2, #20
 80197b6:	fb02 4303 	mla	r3, r2, r3, r4
 80197ba:	8a1a      	ldrh	r2, [r3, #16]
 80197bc:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80197c0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80197c4:	8a5b      	ldrh	r3, [r3, #18]
 80197c6:	8004      	strh	r4, [r0, #0]
 80197c8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80197cc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80197d0:	8041      	strh	r1, [r0, #2]
 80197d2:	8082      	strh	r2, [r0, #4]
 80197d4:	80c3      	strh	r3, [r0, #6]
 80197d6:	e00e      	b.n	80197f6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80197d8:	4917      	ldr	r1, [pc, #92]	; (8019838 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 80197da:	8809      	ldrh	r1, [r1, #0]
 80197dc:	4411      	add	r1, r2
 80197de:	428b      	cmp	r3, r1
 80197e0:	da0a      	bge.n	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 80197e2:	1a9b      	subs	r3, r3, r2
 80197e4:	4a15      	ldr	r2, [pc, #84]	; (801983c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 80197e6:	6812      	ldr	r2, [r2, #0]
 80197e8:	210e      	movs	r1, #14
 80197ea:	fb01 2303 	mla	r3, r1, r3, r2
 80197ee:	681a      	ldr	r2, [r3, #0]
 80197f0:	6002      	str	r2, [r0, #0]
 80197f2:	685a      	ldr	r2, [r3, #4]
 80197f4:	6042      	str	r2, [r0, #4]
 80197f6:	bd10      	pop	{r4, pc}
 80197f8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197fc:	4293      	cmp	r3, r2
 80197fe:	d10b      	bne.n	8019818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8019800:	4b0f      	ldr	r3, [pc, #60]	; (8019840 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8019802:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019806:	4b0f      	ldr	r3, [pc, #60]	; (8019844 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8019808:	8081      	strh	r1, [r0, #4]
 801980a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801980e:	80c2      	strh	r2, [r0, #6]
 8019810:	2300      	movs	r3, #0
 8019812:	8003      	strh	r3, [r0, #0]
 8019814:	8043      	strh	r3, [r0, #2]
 8019816:	e7ee      	b.n	80197f6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8019818:	2300      	movs	r3, #0
 801981a:	8003      	strh	r3, [r0, #0]
 801981c:	8043      	strh	r3, [r0, #2]
 801981e:	8083      	strh	r3, [r0, #4]
 8019820:	e7d8      	b.n	80197d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8019822:	bf00      	nop
 8019824:	20027a38 	.word	0x20027a38
 8019828:	08029fd0 	.word	0x08029fd0
 801982c:	0802ae19 	.word	0x0802ae19
 8019830:	0802ad55 	.word	0x0802ad55
 8019834:	20027a30 	.word	0x20027a30
 8019838:	20027a34 	.word	0x20027a34
 801983c:	20027a18 	.word	0x20027a18
 8019840:	200279a4 	.word	0x200279a4
 8019844:	200279a6 	.word	0x200279a6

08019848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019848:	4b18      	ldr	r3, [pc, #96]	; (80198ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801984a:	681b      	ldr	r3, [r3, #0]
 801984c:	b34b      	cbz	r3, 80198a2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801984e:	4a18      	ldr	r2, [pc, #96]	; (80198b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019850:	8800      	ldrh	r0, [r0, #0]
 8019852:	8812      	ldrh	r2, [r2, #0]
 8019854:	4290      	cmp	r0, r2
 8019856:	d211      	bcs.n	801987c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8019858:	2214      	movs	r2, #20
 801985a:	fb02 3300 	mla	r3, r2, r0, r3
 801985e:	8a1a      	ldrh	r2, [r3, #16]
 8019860:	8919      	ldrh	r1, [r3, #8]
 8019862:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019866:	428a      	cmp	r2, r1
 8019868:	db1d      	blt.n	80198a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801986a:	8a58      	ldrh	r0, [r3, #18]
 801986c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019870:	895b      	ldrh	r3, [r3, #10]
 8019872:	4298      	cmp	r0, r3
 8019874:	bfac      	ite	ge
 8019876:	2000      	movge	r0, #0
 8019878:	2001      	movlt	r0, #1
 801987a:	4770      	bx	lr
 801987c:	4b0d      	ldr	r3, [pc, #52]	; (80198b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801987e:	881b      	ldrh	r3, [r3, #0]
 8019880:	4413      	add	r3, r2
 8019882:	4298      	cmp	r0, r3
 8019884:	da0d      	bge.n	80198a2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8019886:	4b0c      	ldr	r3, [pc, #48]	; (80198b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8019888:	681b      	ldr	r3, [r3, #0]
 801988a:	1a80      	subs	r0, r0, r2
 801988c:	220e      	movs	r2, #14
 801988e:	fb02 3300 	mla	r3, r2, r0, r3
 8019892:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019896:	891a      	ldrh	r2, [r3, #8]
 8019898:	4291      	cmp	r1, r2
 801989a:	db04      	blt.n	80198a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801989c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80198a0:	e7e6      	b.n	8019870 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 80198a2:	2000      	movs	r0, #0
 80198a4:	4770      	bx	lr
 80198a6:	2001      	movs	r0, #1
 80198a8:	4770      	bx	lr
 80198aa:	bf00      	nop
 80198ac:	20027a38 	.word	0x20027a38
 80198b0:	20027a30 	.word	0x20027a30
 80198b4:	20027a34 	.word	0x20027a34
 80198b8:	20027a18 	.word	0x20027a18

080198bc <_ZNK8touchgfx6Bitmap7getDataEv>:
 80198bc:	b508      	push	{r3, lr}
 80198be:	4b12      	ldr	r3, [pc, #72]	; (8019908 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80198c0:	6819      	ldr	r1, [r3, #0]
 80198c2:	b931      	cbnz	r1, 80198d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80198c4:	4b11      	ldr	r3, [pc, #68]	; (801990c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80198c6:	4a12      	ldr	r2, [pc, #72]	; (8019910 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80198c8:	4812      	ldr	r0, [pc, #72]	; (8019914 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80198ca:	f240 41d1 	movw	r1, #1233	; 0x4d1
 80198ce:	f00b ff77 	bl	80257c0 <__assert_func>
 80198d2:	8803      	ldrh	r3, [r0, #0]
 80198d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80198d8:	4293      	cmp	r3, r2
 80198da:	d012      	beq.n	8019902 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80198dc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80198e0:	4293      	cmp	r3, r2
 80198e2:	d103      	bne.n	80198ec <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 80198e4:	4b0c      	ldr	r3, [pc, #48]	; (8019918 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80198e6:	681b      	ldr	r3, [r3, #0]
 80198e8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80198ea:	bd08      	pop	{r3, pc}
 80198ec:	4a0b      	ldr	r2, [pc, #44]	; (801991c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 80198ee:	6812      	ldr	r2, [r2, #0]
 80198f0:	b11a      	cbz	r2, 80198fa <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 80198f2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80198f6:	2800      	cmp	r0, #0
 80198f8:	d1f7      	bne.n	80198ea <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80198fa:	2214      	movs	r2, #20
 80198fc:	4353      	muls	r3, r2
 80198fe:	58c8      	ldr	r0, [r1, r3]
 8019900:	e7f3      	b.n	80198ea <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8019902:	2000      	movs	r0, #0
 8019904:	e7f1      	b.n	80198ea <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8019906:	bf00      	nop
 8019908:	20027a38 	.word	0x20027a38
 801990c:	08029fd0 	.word	0x08029fd0
 8019910:	0802ae4f 	.word	0x0802ae4f
 8019914:	0802ad55 	.word	0x0802ad55
 8019918:	200279b0 	.word	0x200279b0
 801991c:	20027a14 	.word	0x20027a14

08019920 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019920:	8802      	ldrh	r2, [r0, #0]
 8019922:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8019926:	429a      	cmp	r2, r3
 8019928:	d845      	bhi.n	80199b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801992a:	4b24      	ldr	r3, [pc, #144]	; (80199bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801992c:	8818      	ldrh	r0, [r3, #0]
 801992e:	4282      	cmp	r2, r0
 8019930:	d221      	bcs.n	8019976 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8019932:	4b23      	ldr	r3, [pc, #140]	; (80199c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019934:	6819      	ldr	r1, [r3, #0]
 8019936:	2314      	movs	r3, #20
 8019938:	fb03 1302 	mla	r3, r3, r2, r1
 801993c:	6858      	ldr	r0, [r3, #4]
 801993e:	2800      	cmp	r0, #0
 8019940:	d03a      	beq.n	80199b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8019942:	4920      	ldr	r1, [pc, #128]	; (80199c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019944:	6809      	ldr	r1, [r1, #0]
 8019946:	2900      	cmp	r1, #0
 8019948:	d036      	beq.n	80199b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801994a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801994e:	2900      	cmp	r1, #0
 8019950:	d032      	beq.n	80199b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8019952:	891a      	ldrh	r2, [r3, #8]
 8019954:	8958      	ldrh	r0, [r3, #10]
 8019956:	4350      	muls	r0, r2
 8019958:	7c5a      	ldrb	r2, [r3, #17]
 801995a:	7cdb      	ldrb	r3, [r3, #19]
 801995c:	0952      	lsrs	r2, r2, #5
 801995e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019962:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019966:	2b0b      	cmp	r3, #11
 8019968:	bf18      	it	ne
 801996a:	0040      	lslne	r0, r0, #1
 801996c:	3003      	adds	r0, #3
 801996e:	f020 0003 	bic.w	r0, r0, #3
 8019972:	4408      	add	r0, r1
 8019974:	4770      	bx	lr
 8019976:	4b14      	ldr	r3, [pc, #80]	; (80199c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8019978:	881b      	ldrh	r3, [r3, #0]
 801997a:	4403      	add	r3, r0
 801997c:	429a      	cmp	r2, r3
 801997e:	da1a      	bge.n	80199b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8019980:	4b12      	ldr	r3, [pc, #72]	; (80199cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8019982:	681b      	ldr	r3, [r3, #0]
 8019984:	1a10      	subs	r0, r2, r0
 8019986:	210e      	movs	r1, #14
 8019988:	fb01 3000 	mla	r0, r1, r0, r3
 801998c:	7b03      	ldrb	r3, [r0, #12]
 801998e:	f003 031f 	and.w	r3, r3, #31
 8019992:	2b0b      	cmp	r3, #11
 8019994:	d10b      	bne.n	80199ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019996:	8903      	ldrh	r3, [r0, #8]
 8019998:	8940      	ldrh	r0, [r0, #10]
 801999a:	4358      	muls	r0, r3
 801999c:	4b09      	ldr	r3, [pc, #36]	; (80199c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801999e:	6819      	ldr	r1, [r3, #0]
 80199a0:	3003      	adds	r0, #3
 80199a2:	f020 0303 	bic.w	r3, r0, #3
 80199a6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80199aa:	4418      	add	r0, r3
 80199ac:	4770      	bx	lr
 80199ae:	2b0d      	cmp	r3, #13
 80199b0:	d101      	bne.n	80199b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80199b2:	300d      	adds	r0, #13
 80199b4:	4770      	bx	lr
 80199b6:	2000      	movs	r0, #0
 80199b8:	4770      	bx	lr
 80199ba:	bf00      	nop
 80199bc:	20027a30 	.word	0x20027a30
 80199c0:	20027a38 	.word	0x20027a38
 80199c4:	20027a14 	.word	0x20027a14
 80199c8:	20027a34 	.word	0x20027a34
 80199cc:	20027a18 	.word	0x20027a18

080199d0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80199d0:	b510      	push	{r4, lr}
 80199d2:	4b17      	ldr	r3, [pc, #92]	; (8019a30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80199d4:	6819      	ldr	r1, [r3, #0]
 80199d6:	8803      	ldrh	r3, [r0, #0]
 80199d8:	b1e9      	cbz	r1, 8019a16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 80199da:	4a16      	ldr	r2, [pc, #88]	; (8019a34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80199dc:	8812      	ldrh	r2, [r2, #0]
 80199de:	429a      	cmp	r2, r3
 80199e0:	d90a      	bls.n	80199f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 80199e2:	2214      	movs	r2, #20
 80199e4:	fb02 1303 	mla	r3, r2, r3, r1
 80199e8:	7c58      	ldrb	r0, [r3, #17]
 80199ea:	0942      	lsrs	r2, r0, #5
 80199ec:	7cd8      	ldrb	r0, [r3, #19]
 80199ee:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80199f2:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80199f6:	bd10      	pop	{r4, pc}
 80199f8:	490f      	ldr	r1, [pc, #60]	; (8019a38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80199fa:	8809      	ldrh	r1, [r1, #0]
 80199fc:	4411      	add	r1, r2
 80199fe:	428b      	cmp	r3, r1
 8019a00:	da09      	bge.n	8019a16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8019a02:	1a9b      	subs	r3, r3, r2
 8019a04:	4a0d      	ldr	r2, [pc, #52]	; (8019a3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019a06:	6812      	ldr	r2, [r2, #0]
 8019a08:	210e      	movs	r1, #14
 8019a0a:	fb01 2303 	mla	r3, r1, r3, r2
 8019a0e:	7b18      	ldrb	r0, [r3, #12]
 8019a10:	f000 001f 	and.w	r0, r0, #31
 8019a14:	e7ef      	b.n	80199f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019a16:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019a1a:	4293      	cmp	r3, r2
 8019a1c:	d106      	bne.n	8019a2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8019a1e:	f7f8 fd29 	bl	8012474 <_ZN8touchgfx3HAL3lcdEv>
 8019a22:	6803      	ldr	r3, [r0, #0]
 8019a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019a28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019a2a:	4718      	bx	r3
 8019a2c:	2000      	movs	r0, #0
 8019a2e:	e7e2      	b.n	80199f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019a30:	20027a38 	.word	0x20027a38
 8019a34:	20027a30 	.word	0x20027a30
 8019a38:	20027a34 	.word	0x20027a34
 8019a3c:	20027a18 	.word	0x20027a18

08019a40 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019a40:	2010      	movs	r0, #16
 8019a42:	4770      	bx	lr

08019a44 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019a44:	2000      	movs	r0, #0
 8019a46:	4770      	bx	lr

08019a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019a48:	2bff      	cmp	r3, #255	; 0xff
 8019a4a:	d050      	beq.n	8019aee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019a4c:	2a0b      	cmp	r2, #11
 8019a4e:	d04a      	beq.n	8019ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019a50:	d80e      	bhi.n	8019a70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019a52:	2a03      	cmp	r2, #3
 8019a54:	d03f      	beq.n	8019ad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019a56:	d804      	bhi.n	8019a62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019a58:	2a01      	cmp	r2, #1
 8019a5a:	d03e      	beq.n	8019ada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019a5c:	d93f      	bls.n	8019ade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019a5e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019a60:	4770      	bx	lr
 8019a62:	2a09      	cmp	r2, #9
 8019a64:	d03f      	beq.n	8019ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019a66:	d83c      	bhi.n	8019ae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019a68:	2a08      	cmp	r2, #8
 8019a6a:	d03a      	beq.n	8019ae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019a6c:	2000      	movs	r0, #0
 8019a6e:	4770      	bx	lr
 8019a70:	2a2f      	cmp	r2, #47	; 0x2f
 8019a72:	d024      	beq.n	8019abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019a74:	d80d      	bhi.n	8019a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019a76:	2a2d      	cmp	r2, #45	; 0x2d
 8019a78:	d014      	beq.n	8019aa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8019a7a:	d826      	bhi.n	8019aca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019a7c:	2a2c      	cmp	r2, #44	; 0x2c
 8019a7e:	d1f5      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a80:	684b      	ldr	r3, [r1, #4]
 8019a82:	781b      	ldrb	r3, [r3, #0]
 8019a84:	2b01      	cmp	r3, #1
 8019a86:	d018      	beq.n	8019aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019a88:	d323      	bcc.n	8019ad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8019a8a:	2b02      	cmp	r3, #2
 8019a8c:	d1ee      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a8e:	6880      	ldr	r0, [r0, #8]
 8019a90:	4770      	bx	lr
 8019a92:	2a31      	cmp	r2, #49	; 0x31
 8019a94:	d004      	beq.n	8019aa0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019a96:	d328      	bcc.n	8019aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019a98:	2a32      	cmp	r2, #50	; 0x32
 8019a9a:	d026      	beq.n	8019aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019a9c:	2a33      	cmp	r2, #51	; 0x33
 8019a9e:	d1e5      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019aa0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019aa2:	4770      	bx	lr
 8019aa4:	684b      	ldr	r3, [r1, #4]
 8019aa6:	781b      	ldrb	r3, [r3, #0]
 8019aa8:	2b01      	cmp	r3, #1
 8019aaa:	d004      	beq.n	8019ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019aac:	d30b      	bcc.n	8019ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019aae:	2b02      	cmp	r3, #2
 8019ab0:	d1dc      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ab2:	6900      	ldr	r0, [r0, #16]
 8019ab4:	4770      	bx	lr
 8019ab6:	6a00      	ldr	r0, [r0, #32]
 8019ab8:	4770      	bx	lr
 8019aba:	6980      	ldr	r0, [r0, #24]
 8019abc:	4770      	bx	lr
 8019abe:	684b      	ldr	r3, [r1, #4]
 8019ac0:	781b      	ldrb	r3, [r3, #0]
 8019ac2:	2b00      	cmp	r3, #0
 8019ac4:	d1d2      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ac6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019ac8:	4770      	bx	lr
 8019aca:	684b      	ldr	r3, [r1, #4]
 8019acc:	781b      	ldrb	r3, [r3, #0]
 8019ace:	2b00      	cmp	r3, #0
 8019ad0:	d1cc      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ad2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019ad4:	4770      	bx	lr
 8019ad6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019ad8:	4770      	bx	lr
 8019ada:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019adc:	4770      	bx	lr
 8019ade:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019ae0:	4770      	bx	lr
 8019ae2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019ae4:	4770      	bx	lr
 8019ae6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019ae8:	4770      	bx	lr
 8019aea:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019aec:	4770      	bx	lr
 8019aee:	2a0b      	cmp	r2, #11
 8019af0:	d049      	beq.n	8019b86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019af2:	d80e      	bhi.n	8019b12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019af4:	2a03      	cmp	r2, #3
 8019af6:	d040      	beq.n	8019b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019af8:	d804      	bhi.n	8019b04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8019afa:	2a01      	cmp	r2, #1
 8019afc:	d03f      	beq.n	8019b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019afe:	d940      	bls.n	8019b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019b00:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019b02:	4770      	bx	lr
 8019b04:	2a09      	cmp	r2, #9
 8019b06:	d03e      	beq.n	8019b86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019b08:	d801      	bhi.n	8019b0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8019b0a:	2a08      	cmp	r2, #8
 8019b0c:	d1ae      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b0e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019b10:	4770      	bx	lr
 8019b12:	2a2f      	cmp	r2, #47	; 0x2f
 8019b14:	d024      	beq.n	8019b60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019b16:	d80d      	bhi.n	8019b34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019b18:	2a2d      	cmp	r2, #45	; 0x2d
 8019b1a:	d014      	beq.n	8019b46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019b1c:	d826      	bhi.n	8019b6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019b1e:	2a2c      	cmp	r2, #44	; 0x2c
 8019b20:	d1a4      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b22:	684b      	ldr	r3, [r1, #4]
 8019b24:	781b      	ldrb	r3, [r3, #0]
 8019b26:	2b01      	cmp	r3, #1
 8019b28:	d018      	beq.n	8019b5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019b2a:	d324      	bcc.n	8019b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019b2c:	2b02      	cmp	r3, #2
 8019b2e:	d19d      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b30:	68c0      	ldr	r0, [r0, #12]
 8019b32:	4770      	bx	lr
 8019b34:	2a31      	cmp	r2, #49	; 0x31
 8019b36:	d004      	beq.n	8019b42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019b38:	d327      	bcc.n	8019b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019b3a:	2a32      	cmp	r2, #50	; 0x32
 8019b3c:	d025      	beq.n	8019b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019b3e:	2a33      	cmp	r2, #51	; 0x33
 8019b40:	d194      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b42:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019b44:	4770      	bx	lr
 8019b46:	684b      	ldr	r3, [r1, #4]
 8019b48:	781b      	ldrb	r3, [r3, #0]
 8019b4a:	2b01      	cmp	r3, #1
 8019b4c:	d004      	beq.n	8019b58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019b4e:	d30b      	bcc.n	8019b68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019b50:	2b02      	cmp	r3, #2
 8019b52:	d18b      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b54:	6940      	ldr	r0, [r0, #20]
 8019b56:	4770      	bx	lr
 8019b58:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019b5a:	4770      	bx	lr
 8019b5c:	69c0      	ldr	r0, [r0, #28]
 8019b5e:	4770      	bx	lr
 8019b60:	684b      	ldr	r3, [r1, #4]
 8019b62:	781b      	ldrb	r3, [r3, #0]
 8019b64:	2b00      	cmp	r3, #0
 8019b66:	d181      	bne.n	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b68:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019b6a:	4770      	bx	lr
 8019b6c:	684b      	ldr	r3, [r1, #4]
 8019b6e:	781b      	ldrb	r3, [r3, #0]
 8019b70:	2b00      	cmp	r3, #0
 8019b72:	f47f af7b 	bne.w	8019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b76:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019b78:	4770      	bx	lr
 8019b7a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019b7c:	4770      	bx	lr
 8019b7e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019b80:	4770      	bx	lr
 8019b82:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019b84:	4770      	bx	lr
 8019b86:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019b88:	4770      	bx	lr
 8019b8a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019b8c:	4770      	bx	lr

08019b8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b92:	b087      	sub	sp, #28
 8019b94:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019b96:	9205      	str	r2, [sp, #20]
 8019b98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019b9c:	9202      	str	r2, [sp, #8]
 8019b9e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019ba2:	9101      	str	r1, [sp, #4]
 8019ba4:	6841      	ldr	r1, [r0, #4]
 8019ba6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019baa:	fb01 2404 	mla	r4, r1, r4, r2
 8019bae:	6802      	ldr	r2, [r0, #0]
 8019bb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019bb4:	f8de 2000 	ldr.w	r2, [lr]
 8019bb8:	9203      	str	r2, [sp, #12]
 8019bba:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019bbe:	3204      	adds	r2, #4
 8019bc0:	9204      	str	r2, [sp, #16]
 8019bc2:	9a02      	ldr	r2, [sp, #8]
 8019bc4:	43d6      	mvns	r6, r2
 8019bc6:	b2f6      	uxtb	r6, r6
 8019bc8:	9a01      	ldr	r2, [sp, #4]
 8019bca:	2a00      	cmp	r2, #0
 8019bcc:	dc03      	bgt.n	8019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019bce:	9a05      	ldr	r2, [sp, #20]
 8019bd0:	2a00      	cmp	r2, #0
 8019bd2:	f340 8129 	ble.w	8019e28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019bd6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019bd8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019bdc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019be0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019be4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019be6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019bea:	2b00      	cmp	r3, #0
 8019bec:	dd0e      	ble.n	8019c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019bee:	1408      	asrs	r0, r1, #16
 8019bf0:	d405      	bmi.n	8019bfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bf2:	4560      	cmp	r0, ip
 8019bf4:	da03      	bge.n	8019bfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bf6:	1410      	asrs	r0, r2, #16
 8019bf8:	d401      	bmi.n	8019bfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bfa:	42b8      	cmp	r0, r7
 8019bfc:	db07      	blt.n	8019c0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019bfe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c00:	4401      	add	r1, r0
 8019c02:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019c04:	3b01      	subs	r3, #1
 8019c06:	4402      	add	r2, r0
 8019c08:	3402      	adds	r4, #2
 8019c0a:	e7ee      	b.n	8019bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019c0c:	d071      	beq.n	8019cf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019c0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019c10:	1e58      	subs	r0, r3, #1
 8019c12:	fb05 1500 	mla	r5, r5, r0, r1
 8019c16:	142d      	asrs	r5, r5, #16
 8019c18:	d45f      	bmi.n	8019cda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c1a:	4565      	cmp	r5, ip
 8019c1c:	da5d      	bge.n	8019cda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c1e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019c20:	fb05 2000 	mla	r0, r5, r0, r2
 8019c24:	1400      	asrs	r0, r0, #16
 8019c26:	d458      	bmi.n	8019cda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c28:	42b8      	cmp	r0, r7
 8019c2a:	da56      	bge.n	8019cda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c2c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019c30:	4699      	mov	r9, r3
 8019c32:	46a2      	mov	sl, r4
 8019c34:	f1b9 0f00 	cmp.w	r9, #0
 8019c38:	dd57      	ble.n	8019cea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019c3a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019c3e:	9803      	ldr	r0, [sp, #12]
 8019c40:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019c44:	140d      	asrs	r5, r1, #16
 8019c46:	fb07 000c 	mla	r0, r7, ip, r0
 8019c4a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019c4e:	5d40      	ldrb	r0, [r0, r5]
 8019c50:	9d04      	ldr	r5, [sp, #16]
 8019c52:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019c56:	f8ba 5000 	ldrh.w	r5, [sl]
 8019c5a:	122f      	asrs	r7, r5, #8
 8019c5c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019c60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c64:	fb17 f706 	smulbb	r7, r7, r6
 8019c68:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019c6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c70:	00ed      	lsls	r5, r5, #3
 8019c72:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019c76:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019c7a:	10c7      	asrs	r7, r0, #3
 8019c7c:	b2ed      	uxtb	r5, r5
 8019c7e:	00c0      	lsls	r0, r0, #3
 8019c80:	fb18 f806 	smulbb	r8, r8, r6
 8019c84:	fb15 f506 	smulbb	r5, r5, r6
 8019c88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019c8c:	b2c0      	uxtb	r0, r0
 8019c8e:	fa1f fc8c 	uxth.w	ip, ip
 8019c92:	fb07 870b 	mla	r7, r7, fp, r8
 8019c96:	fb00 500b 	mla	r0, r0, fp, r5
 8019c9a:	b280      	uxth	r0, r0
 8019c9c:	b2bf      	uxth	r7, r7
 8019c9e:	f10c 0501 	add.w	r5, ip, #1
 8019ca2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019ca6:	f107 0801 	add.w	r8, r7, #1
 8019caa:	1c45      	adds	r5, r0, #1
 8019cac:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019cb0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019cb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019cb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019cba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019cbe:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019cc2:	ea45 0c0c 	orr.w	ip, r5, ip
 8019cc6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019cca:	4401      	add	r1, r0
 8019ccc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019cce:	ea4c 0c08 	orr.w	ip, ip, r8
 8019cd2:	f82a cb02 	strh.w	ip, [sl], #2
 8019cd6:	4402      	add	r2, r0
 8019cd8:	e7ac      	b.n	8019c34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019cda:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019cde:	f04f 0800 	mov.w	r8, #0
 8019ce2:	eb03 0008 	add.w	r0, r3, r8
 8019ce6:	2800      	cmp	r0, #0
 8019ce8:	dc41      	bgt.n	8019d6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019cea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019cee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019cf2:	9b01      	ldr	r3, [sp, #4]
 8019cf4:	2b00      	cmp	r3, #0
 8019cf6:	f340 8097 	ble.w	8019e28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019cfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cfe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d14:	eef0 6a62 	vmov.f32	s13, s5
 8019d18:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d20:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d24:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019d28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d2c:	eef0 6a43 	vmov.f32	s13, s6
 8019d30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d34:	ee12 2a90 	vmov	r2, s5
 8019d38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d40:	ee13 2a10 	vmov	r2, s6
 8019d44:	9313      	str	r3, [sp, #76]	; 0x4c
 8019d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d48:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d4c:	9314      	str	r3, [sp, #80]	; 0x50
 8019d4e:	9b01      	ldr	r3, [sp, #4]
 8019d50:	9a05      	ldr	r2, [sp, #20]
 8019d52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d56:	3b01      	subs	r3, #1
 8019d58:	9301      	str	r3, [sp, #4]
 8019d5a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019d5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d60:	eeb0 3a67 	vmov.f32	s6, s15
 8019d64:	bf08      	it	eq
 8019d66:	4613      	moveq	r3, r2
 8019d68:	eef0 2a47 	vmov.f32	s5, s14
 8019d6c:	e72c      	b.n	8019bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019d6e:	140f      	asrs	r7, r1, #16
 8019d70:	d453      	bmi.n	8019e1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d72:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019d76:	42bd      	cmp	r5, r7
 8019d78:	dd4f      	ble.n	8019e1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d7a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019d7e:	d44c      	bmi.n	8019e1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d80:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019d84:	4560      	cmp	r0, ip
 8019d86:	dd48      	ble.n	8019e1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d88:	9803      	ldr	r0, [sp, #12]
 8019d8a:	b22d      	sxth	r5, r5
 8019d8c:	fb0c 0505 	mla	r5, ip, r5, r0
 8019d90:	5de8      	ldrb	r0, [r5, r7]
 8019d92:	9d04      	ldr	r5, [sp, #16]
 8019d94:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019d98:	f06f 0501 	mvn.w	r5, #1
 8019d9c:	fb05 fb08 	mul.w	fp, r5, r8
 8019da0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019da4:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019da8:	122f      	asrs	r7, r5, #8
 8019daa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019dae:	fb17 f706 	smulbb	r7, r7, r6
 8019db2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019db6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019dba:	00ed      	lsls	r5, r5, #3
 8019dbc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019dc0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019dc4:	10c7      	asrs	r7, r0, #3
 8019dc6:	b2ed      	uxtb	r5, r5
 8019dc8:	00c0      	lsls	r0, r0, #3
 8019dca:	fb19 f906 	smulbb	r9, r9, r6
 8019dce:	fb15 f506 	smulbb	r5, r5, r6
 8019dd2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dd6:	b2c0      	uxtb	r0, r0
 8019dd8:	fa1f fc8c 	uxth.w	ip, ip
 8019ddc:	fb07 970a 	mla	r7, r7, sl, r9
 8019de0:	fb00 500a 	mla	r0, r0, sl, r5
 8019de4:	b2bf      	uxth	r7, r7
 8019de6:	b280      	uxth	r0, r0
 8019de8:	f10c 0501 	add.w	r5, ip, #1
 8019dec:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019df0:	f107 0901 	add.w	r9, r7, #1
 8019df4:	1c45      	adds	r5, r0, #1
 8019df6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019dfa:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019dfe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019e06:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019e0a:	ea45 0c0c 	orr.w	ip, r5, ip
 8019e0e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019e12:	ea4c 0c09 	orr.w	ip, ip, r9
 8019e16:	f824 c00b 	strh.w	ip, [r4, fp]
 8019e1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019e1c:	4401      	add	r1, r0
 8019e1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019e20:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e24:	4402      	add	r2, r0
 8019e26:	e75c      	b.n	8019ce2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019e28:	b007      	add	sp, #28
 8019e2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e32:	b085      	sub	sp, #20
 8019e34:	4693      	mov	fp, r2
 8019e36:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e38:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e3a:	6870      	ldr	r0, [r6, #4]
 8019e3c:	9100      	str	r1, [sp, #0]
 8019e3e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019e42:	fb00 2404 	mla	r4, r0, r4, r2
 8019e46:	6832      	ldr	r2, [r6, #0]
 8019e48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019e4c:	682a      	ldr	r2, [r5, #0]
 8019e4e:	9201      	str	r2, [sp, #4]
 8019e50:	686a      	ldr	r2, [r5, #4]
 8019e52:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019e56:	3204      	adds	r2, #4
 8019e58:	9202      	str	r2, [sp, #8]
 8019e5a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019e5e:	9a00      	ldr	r2, [sp, #0]
 8019e60:	2a00      	cmp	r2, #0
 8019e62:	dc03      	bgt.n	8019e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019e64:	f1bb 0f00 	cmp.w	fp, #0
 8019e68:	f340 80a0 	ble.w	8019fac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019e6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e6e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019e72:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019e76:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019e7a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019e7c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019e80:	2b00      	cmp	r3, #0
 8019e82:	dd0c      	ble.n	8019e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019e84:	1406      	asrs	r6, r0, #16
 8019e86:	d405      	bmi.n	8019e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019e88:	454e      	cmp	r6, r9
 8019e8a:	da03      	bge.n	8019e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019e8c:	1416      	asrs	r6, r2, #16
 8019e8e:	d401      	bmi.n	8019e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019e90:	4546      	cmp	r6, r8
 8019e92:	db05      	blt.n	8019ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e94:	4470      	add	r0, lr
 8019e96:	4462      	add	r2, ip
 8019e98:	3b01      	subs	r3, #1
 8019e9a:	3402      	adds	r4, #2
 8019e9c:	e7f0      	b.n	8019e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019e9e:	d00f      	beq.n	8019ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019ea0:	1e5e      	subs	r6, r3, #1
 8019ea2:	fb0e 0706 	mla	r7, lr, r6, r0
 8019ea6:	143f      	asrs	r7, r7, #16
 8019ea8:	d541      	bpl.n	8019f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019eaa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019eae:	4698      	mov	r8, r3
 8019eb0:	9603      	str	r6, [sp, #12]
 8019eb2:	f1b8 0f00 	cmp.w	r8, #0
 8019eb6:	dc59      	bgt.n	8019f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019eb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ebc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019ec0:	9b00      	ldr	r3, [sp, #0]
 8019ec2:	2b00      	cmp	r3, #0
 8019ec4:	dd72      	ble.n	8019fac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019ec6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019eca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ece:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019ed2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ed4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ed8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019edc:	eeb0 6a62 	vmov.f32	s12, s5
 8019ee0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ee4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ee8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019eec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019ef0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ef4:	eeb0 6a43 	vmov.f32	s12, s6
 8019ef8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019efc:	ee12 2a90 	vmov	r2, s5
 8019f00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f04:	fb92 fef3 	sdiv	lr, r2, r3
 8019f08:	ee13 2a10 	vmov	r2, s6
 8019f0c:	fb92 fcf3 	sdiv	ip, r2, r3
 8019f10:	9b00      	ldr	r3, [sp, #0]
 8019f12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f16:	3b01      	subs	r3, #1
 8019f18:	9300      	str	r3, [sp, #0]
 8019f1a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019f1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f20:	eeb0 3a67 	vmov.f32	s6, s15
 8019f24:	bf08      	it	eq
 8019f26:	465b      	moveq	r3, fp
 8019f28:	eef0 2a47 	vmov.f32	s5, s14
 8019f2c:	e797      	b.n	8019e5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019f2e:	454f      	cmp	r7, r9
 8019f30:	dabb      	bge.n	8019eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f32:	fb0c 2606 	mla	r6, ip, r6, r2
 8019f36:	1436      	asrs	r6, r6, #16
 8019f38:	d4b7      	bmi.n	8019eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f3a:	4546      	cmp	r6, r8
 8019f3c:	dab5      	bge.n	8019eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f3e:	461e      	mov	r6, r3
 8019f40:	46a0      	mov	r8, r4
 8019f42:	2e00      	cmp	r6, #0
 8019f44:	ddb8      	ble.n	8019eb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019f46:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019f4a:	9901      	ldr	r1, [sp, #4]
 8019f4c:	1417      	asrs	r7, r2, #16
 8019f4e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019f52:	fb0a 1707 	mla	r7, sl, r7, r1
 8019f56:	9902      	ldr	r1, [sp, #8]
 8019f58:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019f5c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019f60:	f828 7b02 	strh.w	r7, [r8], #2
 8019f64:	4470      	add	r0, lr
 8019f66:	4462      	add	r2, ip
 8019f68:	3e01      	subs	r6, #1
 8019f6a:	e7ea      	b.n	8019f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019f6c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019f70:	d417      	bmi.n	8019fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f72:	68ae      	ldr	r6, [r5, #8]
 8019f74:	454e      	cmp	r6, r9
 8019f76:	dd14      	ble.n	8019fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f78:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019f7c:	d411      	bmi.n	8019fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f7e:	68ef      	ldr	r7, [r5, #12]
 8019f80:	4557      	cmp	r7, sl
 8019f82:	dd0e      	ble.n	8019fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f84:	9f01      	ldr	r7, [sp, #4]
 8019f86:	b236      	sxth	r6, r6
 8019f88:	fb0a 7606 	mla	r6, sl, r6, r7
 8019f8c:	9f02      	ldr	r7, [sp, #8]
 8019f8e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019f92:	f06f 0101 	mvn.w	r1, #1
 8019f96:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019f9a:	fb01 f608 	mul.w	r6, r1, r8
 8019f9e:	9903      	ldr	r1, [sp, #12]
 8019fa0:	538f      	strh	r7, [r1, r6]
 8019fa2:	4470      	add	r0, lr
 8019fa4:	4462      	add	r2, ip
 8019fa6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019faa:	e782      	b.n	8019eb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fac:	b005      	add	sp, #20
 8019fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019fb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fb6:	b087      	sub	sp, #28
 8019fb8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019fba:	9205      	str	r2, [sp, #20]
 8019fbc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019fc0:	9203      	str	r2, [sp, #12]
 8019fc2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019fc6:	9102      	str	r1, [sp, #8]
 8019fc8:	6861      	ldr	r1, [r4, #4]
 8019fca:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019fce:	fb01 2000 	mla	r0, r1, r0, r2
 8019fd2:	6822      	ldr	r2, [r4, #0]
 8019fd4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019fd8:	9200      	str	r2, [sp, #0]
 8019fda:	f8dc 2000 	ldr.w	r2, [ip]
 8019fde:	9204      	str	r2, [sp, #16]
 8019fe0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019fe4:	3204      	adds	r2, #4
 8019fe6:	9201      	str	r2, [sp, #4]
 8019fe8:	9a03      	ldr	r2, [sp, #12]
 8019fea:	43d5      	mvns	r5, r2
 8019fec:	b2ed      	uxtb	r5, r5
 8019fee:	9a02      	ldr	r2, [sp, #8]
 8019ff0:	2a00      	cmp	r2, #0
 8019ff2:	dc03      	bgt.n	8019ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019ff4:	9a05      	ldr	r2, [sp, #20]
 8019ff6:	2a00      	cmp	r2, #0
 8019ff8:	f340 812c 	ble.w	801a254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019ffc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ffe:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a002:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a006:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a00a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a00c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a010:	2b00      	cmp	r3, #0
 801a012:	dd10      	ble.n	801a036 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a014:	140c      	asrs	r4, r1, #16
 801a016:	d405      	bmi.n	801a024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a018:	4574      	cmp	r4, lr
 801a01a:	da03      	bge.n	801a024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a01c:	1414      	asrs	r4, r2, #16
 801a01e:	d401      	bmi.n	801a024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a020:	42bc      	cmp	r4, r7
 801a022:	db09      	blt.n	801a038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a024:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a026:	9800      	ldr	r0, [sp, #0]
 801a028:	4421      	add	r1, r4
 801a02a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a02c:	3002      	adds	r0, #2
 801a02e:	4422      	add	r2, r4
 801a030:	3b01      	subs	r3, #1
 801a032:	9000      	str	r0, [sp, #0]
 801a034:	e7ec      	b.n	801a010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a036:	d071      	beq.n	801a11c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a038:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a03a:	1e5c      	subs	r4, r3, #1
 801a03c:	fb06 1604 	mla	r6, r6, r4, r1
 801a040:	1436      	asrs	r6, r6, #16
 801a042:	d45d      	bmi.n	801a100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a044:	4576      	cmp	r6, lr
 801a046:	da5b      	bge.n	801a100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a048:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a04a:	fb06 2404 	mla	r4, r6, r4, r2
 801a04e:	1424      	asrs	r4, r4, #16
 801a050:	d456      	bmi.n	801a100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a052:	42bc      	cmp	r4, r7
 801a054:	da54      	bge.n	801a100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a056:	f8dd 9000 	ldr.w	r9, [sp]
 801a05a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a05e:	4698      	mov	r8, r3
 801a060:	f1b8 0f00 	cmp.w	r8, #0
 801a064:	dd54      	ble.n	801a110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a066:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a06a:	9804      	ldr	r0, [sp, #16]
 801a06c:	1414      	asrs	r4, r2, #16
 801a06e:	fb07 0404 	mla	r4, r7, r4, r0
 801a072:	140e      	asrs	r6, r1, #16
 801a074:	9801      	ldr	r0, [sp, #4]
 801a076:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a07a:	f8b9 4000 	ldrh.w	r4, [r9]
 801a07e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a082:	eb00 0b0e 	add.w	fp, r0, lr
 801a086:	1227      	asrs	r7, r4, #8
 801a088:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a08c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a090:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a094:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a096:	fb16 f60a 	smulbb	r6, r6, sl
 801a09a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a09e:	fb07 6705 	mla	r7, r7, r5, r6
 801a0a2:	10e6      	asrs	r6, r4, #3
 801a0a4:	00e4      	lsls	r4, r4, #3
 801a0a6:	b2e4      	uxtb	r4, r4
 801a0a8:	fb1b fb0a 	smulbb	fp, fp, sl
 801a0ac:	fb14 f405 	smulbb	r4, r4, r5
 801a0b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a0b4:	b2bf      	uxth	r7, r7
 801a0b6:	fb06 b605 	mla	r6, r6, r5, fp
 801a0ba:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a0be:	b2b6      	uxth	r6, r6
 801a0c0:	fa1f fe8e 	uxth.w	lr, lr
 801a0c4:	1c7c      	adds	r4, r7, #1
 801a0c6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a0ca:	f106 0b01 	add.w	fp, r6, #1
 801a0ce:	f10e 0401 	add.w	r4, lr, #1
 801a0d2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a0d6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a0da:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a0de:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a0e2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a0e6:	4327      	orrs	r7, r4
 801a0e8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a0ec:	4401      	add	r1, r0
 801a0ee:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a0f0:	ea47 070b 	orr.w	r7, r7, fp
 801a0f4:	f829 7b02 	strh.w	r7, [r9], #2
 801a0f8:	4402      	add	r2, r0
 801a0fa:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0fe:	e7af      	b.n	801a060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a100:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a104:	f04f 0e00 	mov.w	lr, #0
 801a108:	eb03 040e 	add.w	r4, r3, lr
 801a10c:	2c00      	cmp	r4, #0
 801a10e:	dc43      	bgt.n	801a198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a110:	9a00      	ldr	r2, [sp, #0]
 801a112:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a116:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a11a:	9300      	str	r3, [sp, #0]
 801a11c:	9b02      	ldr	r3, [sp, #8]
 801a11e:	2b00      	cmp	r3, #0
 801a120:	f340 8098 	ble.w	801a254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a124:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a128:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a12c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a130:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a132:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a136:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a13a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a13e:	eef0 6a62 	vmov.f32	s13, s5
 801a142:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a146:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a14a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a14e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a152:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a156:	eef0 6a43 	vmov.f32	s13, s6
 801a15a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a15e:	ee12 2a90 	vmov	r2, s5
 801a162:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a166:	fb92 f3f3 	sdiv	r3, r2, r3
 801a16a:	ee13 2a10 	vmov	r2, s6
 801a16e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a170:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a172:	fb92 f3f3 	sdiv	r3, r2, r3
 801a176:	9314      	str	r3, [sp, #80]	; 0x50
 801a178:	9b02      	ldr	r3, [sp, #8]
 801a17a:	9a05      	ldr	r2, [sp, #20]
 801a17c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a180:	3b01      	subs	r3, #1
 801a182:	9302      	str	r3, [sp, #8]
 801a184:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a188:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a18a:	eeb0 3a67 	vmov.f32	s6, s15
 801a18e:	bf08      	it	eq
 801a190:	4613      	moveq	r3, r2
 801a192:	eef0 2a47 	vmov.f32	s5, s14
 801a196:	e72a      	b.n	8019fee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a198:	140f      	asrs	r7, r1, #16
 801a19a:	d454      	bmi.n	801a246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a19c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a1a0:	42be      	cmp	r6, r7
 801a1a2:	dd50      	ble.n	801a246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1a4:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a1a8:	d44d      	bmi.n	801a246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1aa:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a1ae:	4544      	cmp	r4, r8
 801a1b0:	dd49      	ble.n	801a246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1b2:	9c04      	ldr	r4, [sp, #16]
 801a1b4:	b236      	sxth	r6, r6
 801a1b6:	fb08 4606 	mla	r6, r8, r6, r4
 801a1ba:	f06f 0001 	mvn.w	r0, #1
 801a1be:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a1c2:	9c01      	ldr	r4, [sp, #4]
 801a1c4:	fb00 fa0e 	mul.w	sl, r0, lr
 801a1c8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a1cc:	9800      	ldr	r0, [sp, #0]
 801a1ce:	eb04 0b08 	add.w	fp, r4, r8
 801a1d2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a1d6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a1da:	9801      	ldr	r0, [sp, #4]
 801a1dc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a1e0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a1e4:	9800      	ldr	r0, [sp, #0]
 801a1e6:	1227      	asrs	r7, r4, #8
 801a1e8:	fb16 f609 	smulbb	r6, r6, r9
 801a1ec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a1f0:	fb07 6705 	mla	r7, r7, r5, r6
 801a1f4:	10e6      	asrs	r6, r4, #3
 801a1f6:	00e4      	lsls	r4, r4, #3
 801a1f8:	b2e4      	uxtb	r4, r4
 801a1fa:	fb1b fb09 	smulbb	fp, fp, r9
 801a1fe:	fb14 f405 	smulbb	r4, r4, r5
 801a202:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a206:	b2bf      	uxth	r7, r7
 801a208:	fb06 b605 	mla	r6, r6, r5, fp
 801a20c:	fb08 4809 	mla	r8, r8, r9, r4
 801a210:	b2b6      	uxth	r6, r6
 801a212:	fa1f f888 	uxth.w	r8, r8
 801a216:	1c7c      	adds	r4, r7, #1
 801a218:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a21c:	f106 0b01 	add.w	fp, r6, #1
 801a220:	f108 0401 	add.w	r4, r8, #1
 801a224:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a228:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a22c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a230:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a234:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a238:	4327      	orrs	r7, r4
 801a23a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a23e:	ea47 070b 	orr.w	r7, r7, fp
 801a242:	f820 700a 	strh.w	r7, [r0, sl]
 801a246:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a248:	4401      	add	r1, r0
 801a24a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a24c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a250:	4402      	add	r2, r0
 801a252:	e759      	b.n	801a108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a254:	b007      	add	sp, #28
 801a256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a25c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a260:	b085      	sub	sp, #20
 801a262:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a266:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a268:	9203      	str	r2, [sp, #12]
 801a26a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a26e:	6870      	ldr	r0, [r6, #4]
 801a270:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a272:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a276:	686f      	ldr	r7, [r5, #4]
 801a278:	9101      	str	r1, [sp, #4]
 801a27a:	fb00 2404 	mla	r4, r0, r4, r2
 801a27e:	6832      	ldr	r2, [r6, #0]
 801a280:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a284:	682a      	ldr	r2, [r5, #0]
 801a286:	9202      	str	r2, [sp, #8]
 801a288:	3704      	adds	r7, #4
 801a28a:	9a01      	ldr	r2, [sp, #4]
 801a28c:	2a00      	cmp	r2, #0
 801a28e:	dc03      	bgt.n	801a298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a290:	9a03      	ldr	r2, [sp, #12]
 801a292:	2a00      	cmp	r2, #0
 801a294:	f340 80cc 	ble.w	801a430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a298:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a29a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a29e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a2a2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a2a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a2a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a2ac:	2b00      	cmp	r3, #0
 801a2ae:	dd0d      	ble.n	801a2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a2b0:	1406      	asrs	r6, r0, #16
 801a2b2:	d405      	bmi.n	801a2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a2b4:	454e      	cmp	r6, r9
 801a2b6:	da03      	bge.n	801a2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a2b8:	1416      	asrs	r6, r2, #16
 801a2ba:	d401      	bmi.n	801a2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a2bc:	4546      	cmp	r6, r8
 801a2be:	db06      	blt.n	801a2ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a2c0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a2c2:	4460      	add	r0, ip
 801a2c4:	4432      	add	r2, r6
 801a2c6:	3b01      	subs	r3, #1
 801a2c8:	3402      	adds	r4, #2
 801a2ca:	e7ef      	b.n	801a2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a2cc:	d00f      	beq.n	801a2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2ce:	1e5e      	subs	r6, r3, #1
 801a2d0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a2d4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a2d8:	d543      	bpl.n	801a362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a2da:	4698      	mov	r8, r3
 801a2dc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a2e0:	f1b8 0f00 	cmp.w	r8, #0
 801a2e4:	dc71      	bgt.n	801a3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a2e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a2ee:	9b01      	ldr	r3, [sp, #4]
 801a2f0:	2b00      	cmp	r3, #0
 801a2f2:	f340 809d 	ble.w	801a430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a2f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a302:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a304:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a308:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a30c:	eeb0 6a62 	vmov.f32	s12, s5
 801a310:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a314:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a318:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a31c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a320:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a324:	eeb0 6a43 	vmov.f32	s12, s6
 801a328:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a32c:	ee12 2a90 	vmov	r2, s5
 801a330:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a334:	fb92 fcf3 	sdiv	ip, r2, r3
 801a338:	ee13 2a10 	vmov	r2, s6
 801a33c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a340:	9312      	str	r3, [sp, #72]	; 0x48
 801a342:	9b01      	ldr	r3, [sp, #4]
 801a344:	9a03      	ldr	r2, [sp, #12]
 801a346:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a34a:	3b01      	subs	r3, #1
 801a34c:	9301      	str	r3, [sp, #4]
 801a34e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a352:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a354:	eeb0 3a67 	vmov.f32	s6, s15
 801a358:	bf08      	it	eq
 801a35a:	4613      	moveq	r3, r2
 801a35c:	eef0 2a47 	vmov.f32	s5, s14
 801a360:	e793      	b.n	801a28a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a362:	45ce      	cmp	lr, r9
 801a364:	dab9      	bge.n	801a2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a366:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a368:	fb01 2606 	mla	r6, r1, r6, r2
 801a36c:	1436      	asrs	r6, r6, #16
 801a36e:	d4b4      	bmi.n	801a2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a370:	4546      	cmp	r6, r8
 801a372:	dab2      	bge.n	801a2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a374:	4698      	mov	r8, r3
 801a376:	46a2      	mov	sl, r4
 801a378:	f1b8 0f00 	cmp.w	r8, #0
 801a37c:	ddb3      	ble.n	801a2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a37e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a382:	9902      	ldr	r1, [sp, #8]
 801a384:	1416      	asrs	r6, r2, #16
 801a386:	fb09 1606 	mla	r6, r9, r6, r1
 801a38a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a38e:	492a      	ldr	r1, [pc, #168]	; (801a438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a390:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a394:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a398:	eb07 0b0e 	add.w	fp, r7, lr
 801a39c:	4460      	add	r0, ip
 801a39e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a3a2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a3a6:	00f6      	lsls	r6, r6, #3
 801a3a8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a3ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a3b0:	ea49 0606 	orr.w	r6, r9, r6
 801a3b4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a3b8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a3ba:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a3be:	f82a 6b02 	strh.w	r6, [sl], #2
 801a3c2:	440a      	add	r2, r1
 801a3c4:	f108 38ff 	add.w	r8, r8, #4294967295
 801a3c8:	e7d6      	b.n	801a378 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a3ca:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a3ce:	d429      	bmi.n	801a424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3d0:	68ae      	ldr	r6, [r5, #8]
 801a3d2:	454e      	cmp	r6, r9
 801a3d4:	dd26      	ble.n	801a424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3d6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a3da:	d423      	bmi.n	801a424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3dc:	68e9      	ldr	r1, [r5, #12]
 801a3de:	4559      	cmp	r1, fp
 801a3e0:	dd20      	ble.n	801a424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3e2:	9902      	ldr	r1, [sp, #8]
 801a3e4:	fa0f fe86 	sxth.w	lr, r6
 801a3e8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a3ec:	f06f 0101 	mvn.w	r1, #1
 801a3f0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a3f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a3f8:	eb07 060e 	add.w	r6, r7, lr
 801a3fc:	fb01 f908 	mul.w	r9, r1, r8
 801a400:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a404:	7876      	ldrb	r6, [r6, #1]
 801a406:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a40a:	00f6      	lsls	r6, r6, #3
 801a40c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a410:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a414:	ea4b 0606 	orr.w	r6, fp, r6
 801a418:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a41c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a420:	f82a 6009 	strh.w	r6, [sl, r9]
 801a424:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a426:	4460      	add	r0, ip
 801a428:	440a      	add	r2, r1
 801a42a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a42e:	e757      	b.n	801a2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a430:	b005      	add	sp, #20
 801a432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a436:	bf00      	nop
 801a438:	fffff800 	.word	0xfffff800

0801a43c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a43c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a440:	b087      	sub	sp, #28
 801a442:	468b      	mov	fp, r1
 801a444:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a446:	9204      	str	r2, [sp, #16]
 801a448:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a44c:	9205      	str	r2, [sp, #20]
 801a44e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a452:	6841      	ldr	r1, [r0, #4]
 801a454:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a458:	fb01 2404 	mla	r4, r1, r4, r2
 801a45c:	6802      	ldr	r2, [r0, #0]
 801a45e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a462:	f8dc 2000 	ldr.w	r2, [ip]
 801a466:	9201      	str	r2, [sp, #4]
 801a468:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a46c:	3204      	adds	r2, #4
 801a46e:	9202      	str	r2, [sp, #8]
 801a470:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a474:	f1bb 0f00 	cmp.w	fp, #0
 801a478:	dc03      	bgt.n	801a482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a47a:	9a04      	ldr	r2, [sp, #16]
 801a47c:	2a00      	cmp	r2, #0
 801a47e:	f340 8138 	ble.w	801a6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a482:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a484:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a488:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a48c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a490:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a492:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a496:	2b00      	cmp	r3, #0
 801a498:	dd0e      	ble.n	801a4b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a49a:	1402      	asrs	r2, r0, #16
 801a49c:	d405      	bmi.n	801a4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a49e:	42ba      	cmp	r2, r7
 801a4a0:	da03      	bge.n	801a4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4a2:	140a      	asrs	r2, r1, #16
 801a4a4:	d401      	bmi.n	801a4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4a6:	42b2      	cmp	r2, r6
 801a4a8:	db07      	blt.n	801a4ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a4aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4ac:	4410      	add	r0, r2
 801a4ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4b0:	3b01      	subs	r3, #1
 801a4b2:	4411      	add	r1, r2
 801a4b4:	3402      	adds	r4, #2
 801a4b6:	e7ee      	b.n	801a496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a4b8:	d019      	beq.n	801a4ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a4ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a4bc:	1e5a      	subs	r2, r3, #1
 801a4be:	fb05 0502 	mla	r5, r5, r2, r0
 801a4c2:	142d      	asrs	r5, r5, #16
 801a4c4:	d409      	bmi.n	801a4da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a4c6:	42bd      	cmp	r5, r7
 801a4c8:	da07      	bge.n	801a4da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a4ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a4cc:	fb05 1202 	mla	r2, r5, r2, r1
 801a4d0:	1412      	asrs	r2, r2, #16
 801a4d2:	d402      	bmi.n	801a4da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a4d4:	42b2      	cmp	r2, r6
 801a4d6:	f2c0 80ac 	blt.w	801a632 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a4da:	f04f 0e00 	mov.w	lr, #0
 801a4de:	eb03 020e 	add.w	r2, r3, lr
 801a4e2:	2a00      	cmp	r2, #0
 801a4e4:	dc3e      	bgt.n	801a564 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a4e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a4ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a4ee:	f1bb 0f00 	cmp.w	fp, #0
 801a4f2:	f340 80fe 	ble.w	801a6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a4f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a502:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a504:	f1bb 0b01 	subs.w	fp, fp, #1
 801a508:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a50c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a510:	eeb0 6a62 	vmov.f32	s12, s5
 801a514:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a518:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a51c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a520:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a524:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a528:	eeb0 6a43 	vmov.f32	s12, s6
 801a52c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a530:	ee12 2a90 	vmov	r2, s5
 801a534:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a538:	fb92 f3f3 	sdiv	r3, r2, r3
 801a53c:	ee13 2a10 	vmov	r2, s6
 801a540:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a544:	9313      	str	r3, [sp, #76]	; 0x4c
 801a546:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a548:	fb92 f3f3 	sdiv	r3, r2, r3
 801a54c:	9a04      	ldr	r2, [sp, #16]
 801a54e:	9314      	str	r3, [sp, #80]	; 0x50
 801a550:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a554:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a556:	eeb0 3a67 	vmov.f32	s6, s15
 801a55a:	bf08      	it	eq
 801a55c:	4613      	moveq	r3, r2
 801a55e:	eef0 2a47 	vmov.f32	s5, s14
 801a562:	e787      	b.n	801a474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a564:	1406      	asrs	r6, r0, #16
 801a566:	d45d      	bmi.n	801a624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a568:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a56c:	42b5      	cmp	r5, r6
 801a56e:	dd59      	ble.n	801a624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a570:	140f      	asrs	r7, r1, #16
 801a572:	d457      	bmi.n	801a624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a574:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a578:	42ba      	cmp	r2, r7
 801a57a:	dd53      	ble.n	801a624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a57c:	9a01      	ldr	r2, [sp, #4]
 801a57e:	b22d      	sxth	r5, r5
 801a580:	fb07 2505 	mla	r5, r7, r5, r2
 801a584:	5daa      	ldrb	r2, [r5, r6]
 801a586:	9d02      	ldr	r5, [sp, #8]
 801a588:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a58c:	0e2e      	lsrs	r6, r5, #24
 801a58e:	d049      	beq.n	801a624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a590:	f06f 0201 	mvn.w	r2, #1
 801a594:	fb02 f20e 	mul.w	r2, r2, lr
 801a598:	9203      	str	r2, [sp, #12]
 801a59a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a59e:	9a05      	ldr	r2, [sp, #20]
 801a5a0:	4356      	muls	r6, r2
 801a5a2:	1c72      	adds	r2, r6, #1
 801a5a4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a5a8:	1212      	asrs	r2, r2, #8
 801a5aa:	fa1f f982 	uxth.w	r9, r2
 801a5ae:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a5b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a5b6:	43d2      	mvns	r2, r2
 801a5b8:	b2d2      	uxtb	r2, r2
 801a5ba:	fb16 f609 	smulbb	r6, r6, r9
 801a5be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a5c2:	fb07 6702 	mla	r7, r7, r2, r6
 801a5c6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a5ca:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a5ce:	b2ed      	uxtb	r5, r5
 801a5d0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a5d4:	fa5f f888 	uxtb.w	r8, r8
 801a5d8:	fb15 f509 	smulbb	r5, r5, r9
 801a5dc:	fb08 5502 	mla	r5, r8, r2, r5
 801a5e0:	b2bf      	uxth	r7, r7
 801a5e2:	fb1a fa09 	smulbb	sl, sl, r9
 801a5e6:	b2ad      	uxth	r5, r5
 801a5e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a5ec:	fb06 a602 	mla	r6, r6, r2, sl
 801a5f0:	1c7a      	adds	r2, r7, #1
 801a5f2:	f105 0a01 	add.w	sl, r5, #1
 801a5f6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a5fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a5fe:	b2b6      	uxth	r6, r6
 801a600:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a604:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a608:	ea4a 0707 	orr.w	r7, sl, r7
 801a60c:	f106 0a01 	add.w	sl, r6, #1
 801a610:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a614:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a618:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a61c:	9a03      	ldr	r2, [sp, #12]
 801a61e:	ea47 070a 	orr.w	r7, r7, sl
 801a622:	52a7      	strh	r7, [r4, r2]
 801a624:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a626:	4410      	add	r0, r2
 801a628:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a62a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a62e:	4411      	add	r1, r2
 801a630:	e755      	b.n	801a4de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a632:	f04f 0800 	mov.w	r8, #0
 801a636:	eba3 0208 	sub.w	r2, r3, r8
 801a63a:	2a00      	cmp	r2, #0
 801a63c:	f77f af53 	ble.w	801a4e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a640:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a644:	9f01      	ldr	r7, [sp, #4]
 801a646:	140a      	asrs	r2, r1, #16
 801a648:	1405      	asrs	r5, r0, #16
 801a64a:	fb06 7202 	mla	r2, r6, r2, r7
 801a64e:	5d52      	ldrb	r2, [r2, r5]
 801a650:	9d02      	ldr	r5, [sp, #8]
 801a652:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a656:	0e2e      	lsrs	r6, r5, #24
 801a658:	d044      	beq.n	801a6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a65a:	9a05      	ldr	r2, [sp, #20]
 801a65c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a660:	4356      	muls	r6, r2
 801a662:	1c72      	adds	r2, r6, #1
 801a664:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a668:	1212      	asrs	r2, r2, #8
 801a66a:	fa1f f982 	uxth.w	r9, r2
 801a66e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a672:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a676:	43d2      	mvns	r2, r2
 801a678:	b2d2      	uxtb	r2, r2
 801a67a:	fb16 f609 	smulbb	r6, r6, r9
 801a67e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a682:	fb07 6702 	mla	r7, r7, r2, r6
 801a686:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a68a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a68e:	b2ed      	uxtb	r5, r5
 801a690:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a694:	fa5f fe8e 	uxtb.w	lr, lr
 801a698:	fb15 f509 	smulbb	r5, r5, r9
 801a69c:	fb0e 5502 	mla	r5, lr, r2, r5
 801a6a0:	b2bf      	uxth	r7, r7
 801a6a2:	fb1a fa09 	smulbb	sl, sl, r9
 801a6a6:	b2ad      	uxth	r5, r5
 801a6a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a6ac:	fb06 a602 	mla	r6, r6, r2, sl
 801a6b0:	1c7a      	adds	r2, r7, #1
 801a6b2:	f105 0a01 	add.w	sl, r5, #1
 801a6b6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a6ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a6be:	b2b6      	uxth	r6, r6
 801a6c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6c8:	ea4a 0707 	orr.w	r7, sl, r7
 801a6cc:	f106 0a01 	add.w	sl, r6, #1
 801a6d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a6d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6dc:	ea47 070a 	orr.w	r7, r7, sl
 801a6e0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a6e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6e6:	4410      	add	r0, r2
 801a6e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6ea:	f108 0801 	add.w	r8, r8, #1
 801a6ee:	4411      	add	r1, r2
 801a6f0:	e7a1      	b.n	801a636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a6f2:	b007      	add	sp, #28
 801a6f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6fc:	b085      	sub	sp, #20
 801a6fe:	468b      	mov	fp, r1
 801a700:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a702:	9203      	str	r2, [sp, #12]
 801a704:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a708:	6841      	ldr	r1, [r0, #4]
 801a70a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a70e:	fb01 2404 	mla	r4, r1, r4, r2
 801a712:	6802      	ldr	r2, [r0, #0]
 801a714:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a718:	f8de 2000 	ldr.w	r2, [lr]
 801a71c:	9200      	str	r2, [sp, #0]
 801a71e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a722:	3204      	adds	r2, #4
 801a724:	9201      	str	r2, [sp, #4]
 801a726:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a72a:	f1bb 0f00 	cmp.w	fp, #0
 801a72e:	dc03      	bgt.n	801a738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a730:	9a03      	ldr	r2, [sp, #12]
 801a732:	2a00      	cmp	r2, #0
 801a734:	f340 8153 	ble.w	801a9de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a738:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a73a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a73e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a742:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a746:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a748:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a74c:	2b00      	cmp	r3, #0
 801a74e:	dd0e      	ble.n	801a76e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a750:	1408      	asrs	r0, r1, #16
 801a752:	d405      	bmi.n	801a760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a754:	42b8      	cmp	r0, r7
 801a756:	da03      	bge.n	801a760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a758:	1410      	asrs	r0, r2, #16
 801a75a:	d401      	bmi.n	801a760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a75c:	42b0      	cmp	r0, r6
 801a75e:	db07      	blt.n	801a770 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a760:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a762:	4401      	add	r1, r0
 801a764:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a766:	3b01      	subs	r3, #1
 801a768:	4402      	add	r2, r0
 801a76a:	3402      	adds	r4, #2
 801a76c:	e7ee      	b.n	801a74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a76e:	d017      	beq.n	801a7a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a770:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a772:	1e58      	subs	r0, r3, #1
 801a774:	fb05 1500 	mla	r5, r5, r0, r1
 801a778:	142d      	asrs	r5, r5, #16
 801a77a:	d409      	bmi.n	801a790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a77c:	42bd      	cmp	r5, r7
 801a77e:	da07      	bge.n	801a790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a780:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a782:	fb05 2000 	mla	r0, r5, r0, r2
 801a786:	1400      	asrs	r0, r0, #16
 801a788:	d402      	bmi.n	801a790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a78a:	42b0      	cmp	r0, r6
 801a78c:	f2c0 80bc 	blt.w	801a908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a790:	2600      	movs	r6, #0
 801a792:	1998      	adds	r0, r3, r6
 801a794:	2800      	cmp	r0, #0
 801a796:	dc3e      	bgt.n	801a816 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a798:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a79c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a7a0:	f1bb 0f00 	cmp.w	fp, #0
 801a7a4:	f340 811b 	ble.w	801a9de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a7a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a7b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7b6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a7ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7c2:	eeb0 6a62 	vmov.f32	s12, s5
 801a7c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a7d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7da:	eeb0 6a43 	vmov.f32	s12, s6
 801a7de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7e2:	ee12 2a90 	vmov	r2, s5
 801a7e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7ee:	ee13 2a10 	vmov	r2, s6
 801a7f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7f6:	9311      	str	r3, [sp, #68]	; 0x44
 801a7f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7fe:	9a03      	ldr	r2, [sp, #12]
 801a800:	9312      	str	r3, [sp, #72]	; 0x48
 801a802:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a806:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a808:	eeb0 3a67 	vmov.f32	s6, s15
 801a80c:	bf08      	it	eq
 801a80e:	4613      	moveq	r3, r2
 801a810:	eef0 2a47 	vmov.f32	s5, s14
 801a814:	e789      	b.n	801a72a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a816:	140f      	asrs	r7, r1, #16
 801a818:	d426      	bmi.n	801a868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a81a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a81e:	42bd      	cmp	r5, r7
 801a820:	dd22      	ble.n	801a868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a822:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a826:	d41f      	bmi.n	801a868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a828:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a82c:	4560      	cmp	r0, ip
 801a82e:	dd1b      	ble.n	801a868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a830:	9800      	ldr	r0, [sp, #0]
 801a832:	b22d      	sxth	r5, r5
 801a834:	fb0c 0505 	mla	r5, ip, r5, r0
 801a838:	5de8      	ldrb	r0, [r5, r7]
 801a83a:	9d01      	ldr	r5, [sp, #4]
 801a83c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a840:	0e07      	lsrs	r7, r0, #24
 801a842:	2fff      	cmp	r7, #255	; 0xff
 801a844:	d116      	bne.n	801a874 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a846:	f06f 0501 	mvn.w	r5, #1
 801a84a:	fb05 f706 	mul.w	r7, r5, r6
 801a84e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a852:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a856:	0945      	lsrs	r5, r0, #5
 801a858:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a85c:	ea4c 0505 	orr.w	r5, ip, r5
 801a860:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a864:	4305      	orrs	r5, r0
 801a866:	53e5      	strh	r5, [r4, r7]
 801a868:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a86a:	4401      	add	r1, r0
 801a86c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a86e:	3e01      	subs	r6, #1
 801a870:	4402      	add	r2, r0
 801a872:	e78e      	b.n	801a792 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a874:	b2fd      	uxtb	r5, r7
 801a876:	2f00      	cmp	r7, #0
 801a878:	d0f6      	beq.n	801a868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a87a:	f06f 0701 	mvn.w	r7, #1
 801a87e:	4377      	muls	r7, r6
 801a880:	fa1f f985 	uxth.w	r9, r5
 801a884:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a888:	9702      	str	r7, [sp, #8]
 801a88a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a88e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a892:	43ed      	mvns	r5, r5
 801a894:	b2ed      	uxtb	r5, r5
 801a896:	fb17 f709 	smulbb	r7, r7, r9
 801a89a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a89e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a8a2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a8a6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a8aa:	b2c0      	uxtb	r0, r0
 801a8ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a8b0:	fa5f f888 	uxtb.w	r8, r8
 801a8b4:	fb10 f009 	smulbb	r0, r0, r9
 801a8b8:	fb08 0005 	mla	r0, r8, r5, r0
 801a8bc:	b280      	uxth	r0, r0
 801a8be:	fa1f fc8c 	uxth.w	ip, ip
 801a8c2:	fb1a fa09 	smulbb	sl, sl, r9
 801a8c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8ca:	fb07 a705 	mla	r7, r7, r5, sl
 801a8ce:	f100 0a01 	add.w	sl, r0, #1
 801a8d2:	f10c 0501 	add.w	r5, ip, #1
 801a8d6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a8da:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a8de:	b2bf      	uxth	r7, r7
 801a8e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a8e8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a8ec:	f107 0a01 	add.w	sl, r7, #1
 801a8f0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a8f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8fc:	9802      	ldr	r0, [sp, #8]
 801a8fe:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a902:	f824 c000 	strh.w	ip, [r4, r0]
 801a906:	e7af      	b.n	801a868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a908:	f04f 0800 	mov.w	r8, #0
 801a90c:	eba3 0008 	sub.w	r0, r3, r8
 801a910:	2800      	cmp	r0, #0
 801a912:	f77f af41 	ble.w	801a798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a916:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a91a:	9f00      	ldr	r7, [sp, #0]
 801a91c:	1410      	asrs	r0, r2, #16
 801a91e:	140d      	asrs	r5, r1, #16
 801a920:	fb06 7000 	mla	r0, r6, r0, r7
 801a924:	5d40      	ldrb	r0, [r0, r5]
 801a926:	9d01      	ldr	r5, [sp, #4]
 801a928:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a92c:	0e2e      	lsrs	r6, r5, #24
 801a92e:	2eff      	cmp	r6, #255	; 0xff
 801a930:	d112      	bne.n	801a958 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a932:	482c      	ldr	r0, [pc, #176]	; (801a9e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a934:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a938:	0968      	lsrs	r0, r5, #5
 801a93a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a93e:	4330      	orrs	r0, r6
 801a940:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a944:	4328      	orrs	r0, r5
 801a946:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a94a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a94c:	4401      	add	r1, r0
 801a94e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a950:	f108 0801 	add.w	r8, r8, #1
 801a954:	4402      	add	r2, r0
 801a956:	e7d9      	b.n	801a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a958:	b2f0      	uxtb	r0, r6
 801a95a:	2e00      	cmp	r6, #0
 801a95c:	d0f5      	beq.n	801a94a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a95e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a962:	fa1f f980 	uxth.w	r9, r0
 801a966:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a96a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a96e:	43c0      	mvns	r0, r0
 801a970:	b2c0      	uxtb	r0, r0
 801a972:	fb16 f609 	smulbb	r6, r6, r9
 801a976:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a97a:	fb07 6700 	mla	r7, r7, r0, r6
 801a97e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a982:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a986:	b2ed      	uxtb	r5, r5
 801a988:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a98c:	fa5f fc8c 	uxtb.w	ip, ip
 801a990:	fb15 f509 	smulbb	r5, r5, r9
 801a994:	fb0c 5500 	mla	r5, ip, r0, r5
 801a998:	b2bf      	uxth	r7, r7
 801a99a:	fb1a fa09 	smulbb	sl, sl, r9
 801a99e:	b2ad      	uxth	r5, r5
 801a9a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a9a4:	fb06 a600 	mla	r6, r6, r0, sl
 801a9a8:	1c78      	adds	r0, r7, #1
 801a9aa:	f105 0a01 	add.w	sl, r5, #1
 801a9ae:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a9b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a9b6:	b2b6      	uxth	r6, r6
 801a9b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a9bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a9c0:	ea4a 0707 	orr.w	r7, sl, r7
 801a9c4:	f106 0a01 	add.w	sl, r6, #1
 801a9c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a9cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9d4:	ea47 070a 	orr.w	r7, r7, sl
 801a9d8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a9dc:	e7b5      	b.n	801a94a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a9de:	b005      	add	sp, #20
 801a9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9e4:	fffff800 	.word	0xfffff800

0801a9e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9ec:	b087      	sub	sp, #28
 801a9ee:	468b      	mov	fp, r1
 801a9f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a9f2:	9204      	str	r2, [sp, #16]
 801a9f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a9f8:	9205      	str	r2, [sp, #20]
 801a9fa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a9fe:	6861      	ldr	r1, [r4, #4]
 801aa00:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801aa04:	fb01 2000 	mla	r0, r1, r0, r2
 801aa08:	6822      	ldr	r2, [r4, #0]
 801aa0a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801aa0e:	f8de 2000 	ldr.w	r2, [lr]
 801aa12:	9201      	str	r2, [sp, #4]
 801aa14:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aa18:	9202      	str	r2, [sp, #8]
 801aa1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa1e:	f1bb 0f00 	cmp.w	fp, #0
 801aa22:	dc03      	bgt.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801aa24:	9a04      	ldr	r2, [sp, #16]
 801aa26:	2a00      	cmp	r2, #0
 801aa28:	f340 8142 	ble.w	801acb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801aa2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa2e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aa32:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801aa36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa40:	2b00      	cmp	r3, #0
 801aa42:	dd0e      	ble.n	801aa62 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa44:	140c      	asrs	r4, r1, #16
 801aa46:	d405      	bmi.n	801aa54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa48:	42bc      	cmp	r4, r7
 801aa4a:	da03      	bge.n	801aa54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa4c:	1414      	asrs	r4, r2, #16
 801aa4e:	d401      	bmi.n	801aa54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa50:	42b4      	cmp	r4, r6
 801aa52:	db07      	blt.n	801aa64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aa54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa56:	4421      	add	r1, r4
 801aa58:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa5a:	3b01      	subs	r3, #1
 801aa5c:	4422      	add	r2, r4
 801aa5e:	3002      	adds	r0, #2
 801aa60:	e7ee      	b.n	801aa40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801aa62:	d019      	beq.n	801aa98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801aa64:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa66:	1e5c      	subs	r4, r3, #1
 801aa68:	fb05 1504 	mla	r5, r5, r4, r1
 801aa6c:	142d      	asrs	r5, r5, #16
 801aa6e:	d409      	bmi.n	801aa84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aa70:	42bd      	cmp	r5, r7
 801aa72:	da07      	bge.n	801aa84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aa74:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa76:	fb05 2404 	mla	r4, r5, r4, r2
 801aa7a:	1424      	asrs	r4, r4, #16
 801aa7c:	d402      	bmi.n	801aa84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aa7e:	42b4      	cmp	r4, r6
 801aa80:	f2c0 80b1 	blt.w	801abe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801aa84:	f04f 0800 	mov.w	r8, #0
 801aa88:	eb03 0408 	add.w	r4, r3, r8
 801aa8c:	2c00      	cmp	r4, #0
 801aa8e:	dc3e      	bgt.n	801ab0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801aa90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa98:	f1bb 0f00 	cmp.w	fp, #0
 801aa9c:	f340 8108 	ble.w	801acb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801aaa0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aaa4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aaa8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aaac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aaae:	f1bb 0b01 	subs.w	fp, fp, #1
 801aab2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aab6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aaba:	eeb0 6a62 	vmov.f32	s12, s5
 801aabe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aac2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aac6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aaca:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aace:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aad2:	eeb0 6a43 	vmov.f32	s12, s6
 801aad6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aada:	ee12 2a90 	vmov	r2, s5
 801aade:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aae2:	fb92 f3f3 	sdiv	r3, r2, r3
 801aae6:	ee13 2a10 	vmov	r2, s6
 801aaea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aaee:	9313      	str	r3, [sp, #76]	; 0x4c
 801aaf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aaf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801aaf6:	9a04      	ldr	r2, [sp, #16]
 801aaf8:	9314      	str	r3, [sp, #80]	; 0x50
 801aafa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aafe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab00:	eeb0 3a67 	vmov.f32	s6, s15
 801ab04:	bf08      	it	eq
 801ab06:	4613      	moveq	r3, r2
 801ab08:	eef0 2a47 	vmov.f32	s5, s14
 801ab0c:	e787      	b.n	801aa1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801ab0e:	140e      	asrs	r6, r1, #16
 801ab10:	d462      	bmi.n	801abd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab12:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ab16:	42b5      	cmp	r5, r6
 801ab18:	dd5e      	ble.n	801abd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab1a:	1417      	asrs	r7, r2, #16
 801ab1c:	d45c      	bmi.n	801abd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab1e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801ab22:	42bc      	cmp	r4, r7
 801ab24:	dd58      	ble.n	801abd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab26:	b22d      	sxth	r5, r5
 801ab28:	fb07 6505 	mla	r5, r7, r5, r6
 801ab2c:	9c02      	ldr	r4, [sp, #8]
 801ab2e:	5d66      	ldrb	r6, [r4, r5]
 801ab30:	2e00      	cmp	r6, #0
 801ab32:	d051      	beq.n	801abd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab34:	9c01      	ldr	r4, [sp, #4]
 801ab36:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ab3a:	f06f 0401 	mvn.w	r4, #1
 801ab3e:	fb04 f408 	mul.w	r4, r4, r8
 801ab42:	9403      	str	r4, [sp, #12]
 801ab44:	5b05      	ldrh	r5, [r0, r4]
 801ab46:	9c05      	ldr	r4, [sp, #20]
 801ab48:	4366      	muls	r6, r4
 801ab4a:	1c74      	adds	r4, r6, #1
 801ab4c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ab50:	1224      	asrs	r4, r4, #8
 801ab52:	b2a7      	uxth	r7, r4
 801ab54:	122e      	asrs	r6, r5, #8
 801ab56:	43e4      	mvns	r4, r4
 801ab58:	b2e4      	uxtb	r4, r4
 801ab5a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801ab5e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ab62:	fb16 f604 	smulbb	r6, r6, r4
 801ab66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab6e:	00ed      	lsls	r5, r5, #3
 801ab70:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ab74:	b2ed      	uxtb	r5, r5
 801ab76:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801ab7a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ab7e:	fb15 f504 	smulbb	r5, r5, r4
 801ab82:	fa5f f989 	uxtb.w	r9, r9
 801ab86:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab8a:	fb09 5507 	mla	r5, r9, r7, r5
 801ab8e:	fb1a fa04 	smulbb	sl, sl, r4
 801ab92:	fa1f fc8c 	uxth.w	ip, ip
 801ab96:	b2ad      	uxth	r5, r5
 801ab98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab9c:	fb06 a607 	mla	r6, r6, r7, sl
 801aba0:	f10c 0401 	add.w	r4, ip, #1
 801aba4:	f105 0a01 	add.w	sl, r5, #1
 801aba8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801abac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abb0:	b2b6      	uxth	r6, r6
 801abb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801abba:	ea4a 0c0c 	orr.w	ip, sl, ip
 801abbe:	f106 0a01 	add.w	sl, r6, #1
 801abc2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801abc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abce:	9c03      	ldr	r4, [sp, #12]
 801abd0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801abd4:	f820 c004 	strh.w	ip, [r0, r4]
 801abd8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801abda:	4421      	add	r1, r4
 801abdc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801abde:	f108 38ff 	add.w	r8, r8, #4294967295
 801abe2:	4422      	add	r2, r4
 801abe4:	e750      	b.n	801aa88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801abe6:	f04f 0900 	mov.w	r9, #0
 801abea:	eba3 0409 	sub.w	r4, r3, r9
 801abee:	2c00      	cmp	r4, #0
 801abf0:	f77f af4e 	ble.w	801aa90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801abf4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801abf8:	140d      	asrs	r5, r1, #16
 801abfa:	1414      	asrs	r4, r2, #16
 801abfc:	fb06 5404 	mla	r4, r6, r4, r5
 801ac00:	9d02      	ldr	r5, [sp, #8]
 801ac02:	5d2e      	ldrb	r6, [r5, r4]
 801ac04:	2e00      	cmp	r6, #0
 801ac06:	d04c      	beq.n	801aca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ac08:	9d01      	ldr	r5, [sp, #4]
 801ac0a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ac0e:	9c05      	ldr	r4, [sp, #20]
 801ac10:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ac14:	4366      	muls	r6, r4
 801ac16:	1c74      	adds	r4, r6, #1
 801ac18:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ac1c:	1224      	asrs	r4, r4, #8
 801ac1e:	b2a7      	uxth	r7, r4
 801ac20:	122e      	asrs	r6, r5, #8
 801ac22:	43e4      	mvns	r4, r4
 801ac24:	b2e4      	uxtb	r4, r4
 801ac26:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ac2a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac2e:	fb16 f604 	smulbb	r6, r6, r4
 801ac32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac3a:	00ed      	lsls	r5, r5, #3
 801ac3c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ac40:	b2ed      	uxtb	r5, r5
 801ac42:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ac46:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ac4a:	fb15 f504 	smulbb	r5, r5, r4
 801ac4e:	fa5f f888 	uxtb.w	r8, r8
 801ac52:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac56:	fb08 5507 	mla	r5, r8, r7, r5
 801ac5a:	fb1a fa04 	smulbb	sl, sl, r4
 801ac5e:	fa1f fc8c 	uxth.w	ip, ip
 801ac62:	b2ad      	uxth	r5, r5
 801ac64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac68:	fb06 a607 	mla	r6, r6, r7, sl
 801ac6c:	f10c 0401 	add.w	r4, ip, #1
 801ac70:	f105 0a01 	add.w	sl, r5, #1
 801ac74:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ac78:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac7c:	b2b6      	uxth	r6, r6
 801ac7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac86:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac8a:	f106 0a01 	add.w	sl, r6, #1
 801ac8e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac92:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac9a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ac9e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801aca2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aca4:	4421      	add	r1, r4
 801aca6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aca8:	f109 0901 	add.w	r9, r9, #1
 801acac:	4422      	add	r2, r4
 801acae:	e79c      	b.n	801abea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801acb0:	b007      	add	sp, #28
 801acb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801acb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acba:	b085      	sub	sp, #20
 801acbc:	468b      	mov	fp, r1
 801acbe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801acc0:	9203      	str	r2, [sp, #12]
 801acc2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801acc6:	6861      	ldr	r1, [r4, #4]
 801acc8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801accc:	fb01 2000 	mla	r0, r1, r0, r2
 801acd0:	6822      	ldr	r2, [r4, #0]
 801acd2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801acd6:	f8d8 2000 	ldr.w	r2, [r8]
 801acda:	9200      	str	r2, [sp, #0]
 801acdc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801ace0:	9201      	str	r2, [sp, #4]
 801ace2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ace6:	f1bb 0f00 	cmp.w	fp, #0
 801acea:	dc03      	bgt.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801acec:	9a03      	ldr	r2, [sp, #12]
 801acee:	2a00      	cmp	r2, #0
 801acf0:	f340 8146 	ble.w	801af80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801acf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acf6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801acfa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801acfe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad04:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad08:	2b00      	cmp	r3, #0
 801ad0a:	dd0e      	ble.n	801ad2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ad0c:	140c      	asrs	r4, r1, #16
 801ad0e:	d405      	bmi.n	801ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad10:	42bc      	cmp	r4, r7
 801ad12:	da03      	bge.n	801ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad14:	1414      	asrs	r4, r2, #16
 801ad16:	d401      	bmi.n	801ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad18:	42b4      	cmp	r4, r6
 801ad1a:	db07      	blt.n	801ad2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ad1c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad1e:	4421      	add	r1, r4
 801ad20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad22:	3b01      	subs	r3, #1
 801ad24:	4422      	add	r2, r4
 801ad26:	3002      	adds	r0, #2
 801ad28:	e7ee      	b.n	801ad08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ad2a:	d017      	beq.n	801ad5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad2c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad2e:	1e5c      	subs	r4, r3, #1
 801ad30:	fb05 1504 	mla	r5, r5, r4, r1
 801ad34:	142d      	asrs	r5, r5, #16
 801ad36:	d409      	bmi.n	801ad4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad38:	42bd      	cmp	r5, r7
 801ad3a:	da07      	bge.n	801ad4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad3c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ad3e:	fb05 2404 	mla	r4, r5, r4, r2
 801ad42:	1424      	asrs	r4, r4, #16
 801ad44:	d402      	bmi.n	801ad4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad46:	42b4      	cmp	r4, r6
 801ad48:	f2c0 80b3 	blt.w	801aeb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ad4c:	2600      	movs	r6, #0
 801ad4e:	199c      	adds	r4, r3, r6
 801ad50:	2c00      	cmp	r4, #0
 801ad52:	dc3e      	bgt.n	801add2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ad54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad5c:	f1bb 0f00 	cmp.w	fp, #0
 801ad60:	f340 810e 	ble.w	801af80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ad64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad72:	f1bb 0b01 	subs.w	fp, fp, #1
 801ad76:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad7e:	eeb0 6a62 	vmov.f32	s12, s5
 801ad82:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad8e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad96:	eeb0 6a43 	vmov.f32	s12, s6
 801ad9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad9e:	ee12 2a90 	vmov	r2, s5
 801ada2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ada6:	fb92 f3f3 	sdiv	r3, r2, r3
 801adaa:	ee13 2a10 	vmov	r2, s6
 801adae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801adb2:	9311      	str	r3, [sp, #68]	; 0x44
 801adb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801adba:	9a03      	ldr	r2, [sp, #12]
 801adbc:	9312      	str	r3, [sp, #72]	; 0x48
 801adbe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801adc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adc4:	eeb0 3a67 	vmov.f32	s6, s15
 801adc8:	bf08      	it	eq
 801adca:	4613      	moveq	r3, r2
 801adcc:	eef0 2a47 	vmov.f32	s5, s14
 801add0:	e789      	b.n	801ace6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801add2:	140f      	asrs	r7, r1, #16
 801add4:	d418      	bmi.n	801ae08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801add6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801adda:	42bd      	cmp	r5, r7
 801addc:	dd14      	ble.n	801ae08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adde:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ade2:	d411      	bmi.n	801ae08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ade4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ade8:	4564      	cmp	r4, ip
 801adea:	dd0d      	ble.n	801ae08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adec:	b22d      	sxth	r5, r5
 801adee:	fb0c 7505 	mla	r5, ip, r5, r7
 801adf2:	9c01      	ldr	r4, [sp, #4]
 801adf4:	5d64      	ldrb	r4, [r4, r5]
 801adf6:	2cff      	cmp	r4, #255	; 0xff
 801adf8:	d10c      	bne.n	801ae14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801adfa:	9c00      	ldr	r4, [sp, #0]
 801adfc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ae00:	f06f 0401 	mvn.w	r4, #1
 801ae04:	4374      	muls	r4, r6
 801ae06:	5305      	strh	r5, [r0, r4]
 801ae08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae0a:	4421      	add	r1, r4
 801ae0c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae0e:	3e01      	subs	r6, #1
 801ae10:	4422      	add	r2, r4
 801ae12:	e79c      	b.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ae14:	2c00      	cmp	r4, #0
 801ae16:	d0f7      	beq.n	801ae08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae18:	9f00      	ldr	r7, [sp, #0]
 801ae1a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ae1e:	f06f 0501 	mvn.w	r5, #1
 801ae22:	4375      	muls	r5, r6
 801ae24:	9502      	str	r5, [sp, #8]
 801ae26:	5b45      	ldrh	r5, [r0, r5]
 801ae28:	fa1f fc84 	uxth.w	ip, r4
 801ae2c:	122f      	asrs	r7, r5, #8
 801ae2e:	43e4      	mvns	r4, r4
 801ae30:	b2e4      	uxtb	r4, r4
 801ae32:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ae36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae3a:	fb17 f704 	smulbb	r7, r7, r4
 801ae3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ae42:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ae46:	00ed      	lsls	r5, r5, #3
 801ae48:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ae4c:	b2ed      	uxtb	r5, r5
 801ae4e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ae52:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ae56:	fb15 f504 	smulbb	r5, r5, r4
 801ae5a:	fa5f f989 	uxtb.w	r9, r9
 801ae5e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ae62:	fb09 550c 	mla	r5, r9, ip, r5
 801ae66:	fb1a fa04 	smulbb	sl, sl, r4
 801ae6a:	fa1f fe8e 	uxth.w	lr, lr
 801ae6e:	b2ad      	uxth	r5, r5
 801ae70:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae74:	fb07 a70c 	mla	r7, r7, ip, sl
 801ae78:	f10e 0401 	add.w	r4, lr, #1
 801ae7c:	f105 0a01 	add.w	sl, r5, #1
 801ae80:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ae84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae88:	b2bf      	uxth	r7, r7
 801ae8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae8e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ae92:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ae96:	f107 0a01 	add.w	sl, r7, #1
 801ae9a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ae9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aea2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aea6:	9c02      	ldr	r4, [sp, #8]
 801aea8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801aeac:	f820 e004 	strh.w	lr, [r0, r4]
 801aeb0:	e7aa      	b.n	801ae08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aeb2:	f04f 0900 	mov.w	r9, #0
 801aeb6:	eba3 0409 	sub.w	r4, r3, r9
 801aeba:	2c00      	cmp	r4, #0
 801aebc:	f77f af4a 	ble.w	801ad54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aec0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801aec4:	1414      	asrs	r4, r2, #16
 801aec6:	140d      	asrs	r5, r1, #16
 801aec8:	fb06 5504 	mla	r5, r6, r4, r5
 801aecc:	9c01      	ldr	r4, [sp, #4]
 801aece:	5d64      	ldrb	r4, [r4, r5]
 801aed0:	2cff      	cmp	r4, #255	; 0xff
 801aed2:	d10b      	bne.n	801aeec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801aed4:	9c00      	ldr	r4, [sp, #0]
 801aed6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801aeda:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801aede:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aee0:	4421      	add	r1, r4
 801aee2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aee4:	f109 0901 	add.w	r9, r9, #1
 801aee8:	4422      	add	r2, r4
 801aeea:	e7e4      	b.n	801aeb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801aeec:	2c00      	cmp	r4, #0
 801aeee:	d0f6      	beq.n	801aede <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801aef0:	9e00      	ldr	r6, [sp, #0]
 801aef2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801aef6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801aefa:	b2a7      	uxth	r7, r4
 801aefc:	122e      	asrs	r6, r5, #8
 801aefe:	43e4      	mvns	r4, r4
 801af00:	b2e4      	uxtb	r4, r4
 801af02:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801af06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af0a:	fb16 f604 	smulbb	r6, r6, r4
 801af0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801af12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af16:	00ed      	lsls	r5, r5, #3
 801af18:	fb0c 6c07 	mla	ip, ip, r7, r6
 801af1c:	b2ed      	uxtb	r5, r5
 801af1e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801af22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801af26:	fb15 f504 	smulbb	r5, r5, r4
 801af2a:	fa5f fe8e 	uxtb.w	lr, lr
 801af2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801af32:	fb0e 5507 	mla	r5, lr, r7, r5
 801af36:	fb1a fa04 	smulbb	sl, sl, r4
 801af3a:	fa1f fc8c 	uxth.w	ip, ip
 801af3e:	b2ad      	uxth	r5, r5
 801af40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af44:	fb06 a607 	mla	r6, r6, r7, sl
 801af48:	f10c 0401 	add.w	r4, ip, #1
 801af4c:	f105 0a01 	add.w	sl, r5, #1
 801af50:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801af54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af58:	b2b6      	uxth	r6, r6
 801af5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af62:	ea4a 0c0c 	orr.w	ip, sl, ip
 801af66:	f106 0a01 	add.w	sl, r6, #1
 801af6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af76:	ea4c 0c0a 	orr.w	ip, ip, sl
 801af7a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801af7e:	e7ae      	b.n	801aede <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801af80:	b005      	add	sp, #20
 801af82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af8a:	b085      	sub	sp, #20
 801af8c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801af8e:	9203      	str	r2, [sp, #12]
 801af90:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801af94:	9201      	str	r2, [sp, #4]
 801af96:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801af9a:	9100      	str	r1, [sp, #0]
 801af9c:	6841      	ldr	r1, [r0, #4]
 801af9e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801afa2:	fb01 2404 	mla	r4, r1, r4, r2
 801afa6:	6802      	ldr	r2, [r0, #0]
 801afa8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801afac:	f8de 2000 	ldr.w	r2, [lr]
 801afb0:	9202      	str	r2, [sp, #8]
 801afb2:	9a01      	ldr	r2, [sp, #4]
 801afb4:	43d6      	mvns	r6, r2
 801afb6:	b2f6      	uxtb	r6, r6
 801afb8:	9a00      	ldr	r2, [sp, #0]
 801afba:	2a00      	cmp	r2, #0
 801afbc:	dc03      	bgt.n	801afc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801afbe:	9a03      	ldr	r2, [sp, #12]
 801afc0:	2a00      	cmp	r2, #0
 801afc2:	f340 8124 	ble.w	801b20e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801afc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801afc8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801afcc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801afd0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801afd4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801afd6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801afda:	2b00      	cmp	r3, #0
 801afdc:	dd0e      	ble.n	801affc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801afde:	1408      	asrs	r0, r1, #16
 801afe0:	d405      	bmi.n	801afee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801afe2:	4560      	cmp	r0, ip
 801afe4:	da03      	bge.n	801afee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801afe6:	1410      	asrs	r0, r2, #16
 801afe8:	d401      	bmi.n	801afee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801afea:	42b8      	cmp	r0, r7
 801afec:	db07      	blt.n	801affe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801afee:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aff0:	4401      	add	r1, r0
 801aff2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aff4:	3b01      	subs	r3, #1
 801aff6:	4402      	add	r2, r0
 801aff8:	3402      	adds	r4, #2
 801affa:	e7ee      	b.n	801afda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801affc:	d06e      	beq.n	801b0dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801affe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b000:	1e58      	subs	r0, r3, #1
 801b002:	fb05 1500 	mla	r5, r5, r0, r1
 801b006:	142d      	asrs	r5, r5, #16
 801b008:	d45c      	bmi.n	801b0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b00a:	4565      	cmp	r5, ip
 801b00c:	da5a      	bge.n	801b0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b00e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b010:	fb05 2000 	mla	r0, r5, r0, r2
 801b014:	1400      	asrs	r0, r0, #16
 801b016:	d455      	bmi.n	801b0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b018:	42b8      	cmp	r0, r7
 801b01a:	da53      	bge.n	801b0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b01c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b020:	4699      	mov	r9, r3
 801b022:	46a2      	mov	sl, r4
 801b024:	f1b9 0f00 	cmp.w	r9, #0
 801b028:	dd54      	ble.n	801b0d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b02a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b02e:	140d      	asrs	r5, r1, #16
 801b030:	1410      	asrs	r0, r2, #16
 801b032:	fb07 5000 	mla	r0, r7, r0, r5
 801b036:	9d02      	ldr	r5, [sp, #8]
 801b038:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b03c:	f8ba 5000 	ldrh.w	r5, [sl]
 801b040:	122f      	asrs	r7, r5, #8
 801b042:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b046:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b04a:	fb17 f706 	smulbb	r7, r7, r6
 801b04e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b052:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b056:	00ed      	lsls	r5, r5, #3
 801b058:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b05c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b060:	10c7      	asrs	r7, r0, #3
 801b062:	b2ed      	uxtb	r5, r5
 801b064:	00c0      	lsls	r0, r0, #3
 801b066:	fb18 f806 	smulbb	r8, r8, r6
 801b06a:	fb15 f506 	smulbb	r5, r5, r6
 801b06e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b072:	b2c0      	uxtb	r0, r0
 801b074:	fa1f fc8c 	uxth.w	ip, ip
 801b078:	fb07 870b 	mla	r7, r7, fp, r8
 801b07c:	fb00 500b 	mla	r0, r0, fp, r5
 801b080:	b280      	uxth	r0, r0
 801b082:	b2bf      	uxth	r7, r7
 801b084:	f10c 0501 	add.w	r5, ip, #1
 801b088:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b08c:	f107 0801 	add.w	r8, r7, #1
 801b090:	1c45      	adds	r5, r0, #1
 801b092:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b096:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b09a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b09c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b0a0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b0a4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b0a8:	ea45 0c0c 	orr.w	ip, r5, ip
 801b0ac:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b0b0:	4401      	add	r1, r0
 801b0b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0b4:	ea4c 0c08 	orr.w	ip, ip, r8
 801b0b8:	f82a cb02 	strh.w	ip, [sl], #2
 801b0bc:	4402      	add	r2, r0
 801b0be:	f109 39ff 	add.w	r9, r9, #4294967295
 801b0c2:	e7af      	b.n	801b024 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b0c4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b0c8:	f04f 0800 	mov.w	r8, #0
 801b0cc:	eb03 0008 	add.w	r0, r3, r8
 801b0d0:	2800      	cmp	r0, #0
 801b0d2:	dc41      	bgt.n	801b158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b0d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0dc:	9b00      	ldr	r3, [sp, #0]
 801b0de:	2b00      	cmp	r3, #0
 801b0e0:	f340 8095 	ble.w	801b20e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b0e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b0ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b0f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b0fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0fe:	eef0 6a62 	vmov.f32	s13, s5
 801b102:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b10a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b10e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b112:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b116:	eef0 6a43 	vmov.f32	s13, s6
 801b11a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b11e:	ee12 2a90 	vmov	r2, s5
 801b122:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b126:	fb92 f3f3 	sdiv	r3, r2, r3
 801b12a:	ee13 2a10 	vmov	r2, s6
 801b12e:	9311      	str	r3, [sp, #68]	; 0x44
 801b130:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b132:	fb92 f3f3 	sdiv	r3, r2, r3
 801b136:	9312      	str	r3, [sp, #72]	; 0x48
 801b138:	9b00      	ldr	r3, [sp, #0]
 801b13a:	9a03      	ldr	r2, [sp, #12]
 801b13c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b140:	3b01      	subs	r3, #1
 801b142:	9300      	str	r3, [sp, #0]
 801b144:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b148:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b14a:	eeb0 3a67 	vmov.f32	s6, s15
 801b14e:	bf08      	it	eq
 801b150:	4613      	moveq	r3, r2
 801b152:	eef0 2a47 	vmov.f32	s5, s14
 801b156:	e72f      	b.n	801afb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b158:	140f      	asrs	r7, r1, #16
 801b15a:	d451      	bmi.n	801b200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b15c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b160:	42bd      	cmp	r5, r7
 801b162:	dd4d      	ble.n	801b200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b164:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b168:	d44a      	bmi.n	801b200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b16a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b16e:	4560      	cmp	r0, ip
 801b170:	dd46      	ble.n	801b200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b172:	b22d      	sxth	r5, r5
 801b174:	fb0c 7505 	mla	r5, ip, r5, r7
 801b178:	9802      	ldr	r0, [sp, #8]
 801b17a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b17e:	f06f 0501 	mvn.w	r5, #1
 801b182:	fb05 fb08 	mul.w	fp, r5, r8
 801b186:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b18a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b18e:	122f      	asrs	r7, r5, #8
 801b190:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b194:	fb17 f706 	smulbb	r7, r7, r6
 801b198:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b19c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b1a0:	00ed      	lsls	r5, r5, #3
 801b1a2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b1a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b1aa:	10c7      	asrs	r7, r0, #3
 801b1ac:	b2ed      	uxtb	r5, r5
 801b1ae:	00c0      	lsls	r0, r0, #3
 801b1b0:	fb19 f906 	smulbb	r9, r9, r6
 801b1b4:	fb15 f506 	smulbb	r5, r5, r6
 801b1b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b1bc:	b2c0      	uxtb	r0, r0
 801b1be:	fa1f fc8c 	uxth.w	ip, ip
 801b1c2:	fb07 970a 	mla	r7, r7, sl, r9
 801b1c6:	fb00 500a 	mla	r0, r0, sl, r5
 801b1ca:	b2bf      	uxth	r7, r7
 801b1cc:	b280      	uxth	r0, r0
 801b1ce:	f10c 0501 	add.w	r5, ip, #1
 801b1d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b1d6:	f107 0901 	add.w	r9, r7, #1
 801b1da:	1c45      	adds	r5, r0, #1
 801b1dc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b1e0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b1e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b1e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b1ec:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b1f0:	ea45 0c0c 	orr.w	ip, r5, ip
 801b1f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b1f8:	ea4c 0c09 	orr.w	ip, ip, r9
 801b1fc:	f824 c00b 	strh.w	ip, [r4, fp]
 801b200:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b202:	4401      	add	r1, r0
 801b204:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b206:	f108 38ff 	add.w	r8, r8, #4294967295
 801b20a:	4402      	add	r2, r0
 801b20c:	e75e      	b.n	801b0cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b20e:	b005      	add	sp, #20
 801b210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b214 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b218:	b085      	sub	sp, #20
 801b21a:	4693      	mov	fp, r2
 801b21c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b21e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b220:	6870      	ldr	r0, [r6, #4]
 801b222:	9101      	str	r1, [sp, #4]
 801b224:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b228:	fb00 2404 	mla	r4, r0, r4, r2
 801b22c:	6832      	ldr	r2, [r6, #0]
 801b22e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b232:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b236:	682a      	ldr	r2, [r5, #0]
 801b238:	9202      	str	r2, [sp, #8]
 801b23a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b23e:	9a01      	ldr	r2, [sp, #4]
 801b240:	2a00      	cmp	r2, #0
 801b242:	dc03      	bgt.n	801b24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b244:	f1bb 0f00 	cmp.w	fp, #0
 801b248:	f340 809a 	ble.w	801b380 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b24c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b24e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b252:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b256:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b25a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b25c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b260:	2b00      	cmp	r3, #0
 801b262:	dd0c      	ble.n	801b27e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b264:	1406      	asrs	r6, r0, #16
 801b266:	d405      	bmi.n	801b274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b268:	454e      	cmp	r6, r9
 801b26a:	da03      	bge.n	801b274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b26c:	1416      	asrs	r6, r2, #16
 801b26e:	d401      	bmi.n	801b274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b270:	4546      	cmp	r6, r8
 801b272:	db05      	blt.n	801b280 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b274:	4470      	add	r0, lr
 801b276:	4462      	add	r2, ip
 801b278:	3b01      	subs	r3, #1
 801b27a:	3402      	adds	r4, #2
 801b27c:	e7f0      	b.n	801b260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b27e:	d00f      	beq.n	801b2a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b280:	1e5e      	subs	r6, r3, #1
 801b282:	fb0e 0706 	mla	r7, lr, r6, r0
 801b286:	143f      	asrs	r7, r7, #16
 801b288:	d541      	bpl.n	801b30e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b28a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b28e:	4698      	mov	r8, r3
 801b290:	9603      	str	r6, [sp, #12]
 801b292:	f1b8 0f00 	cmp.w	r8, #0
 801b296:	dc56      	bgt.n	801b346 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b298:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b29c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2a0:	9b01      	ldr	r3, [sp, #4]
 801b2a2:	2b00      	cmp	r3, #0
 801b2a4:	dd6c      	ble.n	801b380 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b2a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b2aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b2b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b2b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b2b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b2bc:	eeb0 6a62 	vmov.f32	s12, s5
 801b2c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b2c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b2d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2d4:	eeb0 6a43 	vmov.f32	s12, s6
 801b2d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2dc:	ee12 2a90 	vmov	r2, s5
 801b2e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2e4:	fb92 fef3 	sdiv	lr, r2, r3
 801b2e8:	ee13 2a10 	vmov	r2, s6
 801b2ec:	fb92 fcf3 	sdiv	ip, r2, r3
 801b2f0:	9b01      	ldr	r3, [sp, #4]
 801b2f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2f6:	3b01      	subs	r3, #1
 801b2f8:	9301      	str	r3, [sp, #4]
 801b2fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b2fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b300:	eeb0 3a67 	vmov.f32	s6, s15
 801b304:	bf08      	it	eq
 801b306:	465b      	moveq	r3, fp
 801b308:	eef0 2a47 	vmov.f32	s5, s14
 801b30c:	e797      	b.n	801b23e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b30e:	454f      	cmp	r7, r9
 801b310:	dabb      	bge.n	801b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b312:	fb0c 2606 	mla	r6, ip, r6, r2
 801b316:	1436      	asrs	r6, r6, #16
 801b318:	d4b7      	bmi.n	801b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b31a:	4546      	cmp	r6, r8
 801b31c:	dab5      	bge.n	801b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b31e:	461e      	mov	r6, r3
 801b320:	46a0      	mov	r8, r4
 801b322:	2e00      	cmp	r6, #0
 801b324:	ddb8      	ble.n	801b298 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b326:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b32a:	9902      	ldr	r1, [sp, #8]
 801b32c:	1417      	asrs	r7, r2, #16
 801b32e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b332:	fb0a 9707 	mla	r7, sl, r7, r9
 801b336:	4470      	add	r0, lr
 801b338:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b33c:	f828 7b02 	strh.w	r7, [r8], #2
 801b340:	4462      	add	r2, ip
 801b342:	3e01      	subs	r6, #1
 801b344:	e7ed      	b.n	801b322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b346:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b34a:	d414      	bmi.n	801b376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b34c:	68ae      	ldr	r6, [r5, #8]
 801b34e:	454e      	cmp	r6, r9
 801b350:	dd11      	ble.n	801b376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b352:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b356:	d40e      	bmi.n	801b376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b358:	68ef      	ldr	r7, [r5, #12]
 801b35a:	4557      	cmp	r7, sl
 801b35c:	dd0b      	ble.n	801b376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b35e:	b236      	sxth	r6, r6
 801b360:	fb0a 9606 	mla	r6, sl, r6, r9
 801b364:	9f02      	ldr	r7, [sp, #8]
 801b366:	f06f 0101 	mvn.w	r1, #1
 801b36a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b36e:	fb01 f608 	mul.w	r6, r1, r8
 801b372:	9903      	ldr	r1, [sp, #12]
 801b374:	538f      	strh	r7, [r1, r6]
 801b376:	4470      	add	r0, lr
 801b378:	4462      	add	r2, ip
 801b37a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b37e:	e788      	b.n	801b292 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b380:	b005      	add	sp, #20
 801b382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b386 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b386:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b38a:	b087      	sub	sp, #28
 801b38c:	468b      	mov	fp, r1
 801b38e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b390:	9203      	str	r2, [sp, #12]
 801b392:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b396:	9204      	str	r2, [sp, #16]
 801b398:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b39c:	6841      	ldr	r1, [r0, #4]
 801b39e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b3a2:	fb01 2505 	mla	r5, r1, r5, r2
 801b3a6:	6802      	ldr	r2, [r0, #0]
 801b3a8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b3ac:	f8d9 2000 	ldr.w	r2, [r9]
 801b3b0:	9201      	str	r2, [sp, #4]
 801b3b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b3b6:	f1bb 0f00 	cmp.w	fp, #0
 801b3ba:	dc03      	bgt.n	801b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b3bc:	9a03      	ldr	r2, [sp, #12]
 801b3be:	2a00      	cmp	r2, #0
 801b3c0:	f340 8159 	ble.w	801b676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b3c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b3c6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b3ca:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b3ce:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b3d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b3d4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b3d8:	2b00      	cmp	r3, #0
 801b3da:	dd0e      	ble.n	801b3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b3dc:	1402      	asrs	r2, r0, #16
 801b3de:	d405      	bmi.n	801b3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3e0:	42ba      	cmp	r2, r7
 801b3e2:	da03      	bge.n	801b3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3e4:	140a      	asrs	r2, r1, #16
 801b3e6:	d401      	bmi.n	801b3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3e8:	42b2      	cmp	r2, r6
 801b3ea:	db07      	blt.n	801b3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b3ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b3ee:	4410      	add	r0, r2
 801b3f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3f2:	3b01      	subs	r3, #1
 801b3f4:	4411      	add	r1, r2
 801b3f6:	3502      	adds	r5, #2
 801b3f8:	e7ee      	b.n	801b3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b3fa:	d017      	beq.n	801b42c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b3fc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b3fe:	1e5a      	subs	r2, r3, #1
 801b400:	fb04 0402 	mla	r4, r4, r2, r0
 801b404:	1424      	asrs	r4, r4, #16
 801b406:	d409      	bmi.n	801b41c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b408:	42bc      	cmp	r4, r7
 801b40a:	da07      	bge.n	801b41c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b40c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b40e:	fb04 1202 	mla	r2, r4, r2, r1
 801b412:	1412      	asrs	r2, r2, #16
 801b414:	d402      	bmi.n	801b41c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b416:	42b2      	cmp	r2, r6
 801b418:	f2c0 80bf 	blt.w	801b59a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b41c:	2700      	movs	r7, #0
 801b41e:	19da      	adds	r2, r3, r7
 801b420:	2a00      	cmp	r2, #0
 801b422:	dc3e      	bgt.n	801b4a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b424:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b428:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b42c:	f1bb 0f00 	cmp.w	fp, #0
 801b430:	f340 8121 	ble.w	801b676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b434:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b438:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b43c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b440:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b442:	f1bb 0b01 	subs.w	fp, fp, #1
 801b446:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b44a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b44e:	eeb0 6a62 	vmov.f32	s12, s5
 801b452:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b456:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b45a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b45e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b462:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b466:	eeb0 6a43 	vmov.f32	s12, s6
 801b46a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b46e:	ee12 2a90 	vmov	r2, s5
 801b472:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b476:	fb92 f3f3 	sdiv	r3, r2, r3
 801b47a:	ee13 2a10 	vmov	r2, s6
 801b47e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b482:	9313      	str	r3, [sp, #76]	; 0x4c
 801b484:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b486:	fb92 f3f3 	sdiv	r3, r2, r3
 801b48a:	9a03      	ldr	r2, [sp, #12]
 801b48c:	9314      	str	r3, [sp, #80]	; 0x50
 801b48e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b492:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b494:	eeb0 3a67 	vmov.f32	s6, s15
 801b498:	bf08      	it	eq
 801b49a:	4613      	moveq	r3, r2
 801b49c:	eef0 2a47 	vmov.f32	s5, s14
 801b4a0:	e789      	b.n	801b3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b4a2:	1406      	asrs	r6, r0, #16
 801b4a4:	d42d      	bmi.n	801b502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4a6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b4aa:	42b4      	cmp	r4, r6
 801b4ac:	dd29      	ble.n	801b502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4ae:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b4b2:	d426      	bmi.n	801b502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4b4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b4b8:	4562      	cmp	r2, ip
 801b4ba:	dd22      	ble.n	801b502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4bc:	b224      	sxth	r4, r4
 801b4be:	9a01      	ldr	r2, [sp, #4]
 801b4c0:	fb0c 6404 	mla	r4, ip, r4, r6
 801b4c4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b4c8:	0e22      	lsrs	r2, r4, #24
 801b4ca:	d01a      	beq.n	801b502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4cc:	9e04      	ldr	r6, [sp, #16]
 801b4ce:	4372      	muls	r2, r6
 801b4d0:	1c56      	adds	r6, r2, #1
 801b4d2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b4d6:	1212      	asrs	r2, r2, #8
 801b4d8:	0a26      	lsrs	r6, r4, #8
 801b4da:	2aff      	cmp	r2, #255	; 0xff
 801b4dc:	9605      	str	r6, [sp, #20]
 801b4de:	d116      	bne.n	801b50e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b4e0:	f06f 0201 	mvn.w	r2, #1
 801b4e4:	fb02 fc07 	mul.w	ip, r2, r7
 801b4e8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b4ec:	0962      	lsrs	r2, r4, #5
 801b4ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b4f2:	f026 0607 	bic.w	r6, r6, #7
 801b4f6:	4316      	orrs	r6, r2
 801b4f8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b4fc:	4326      	orrs	r6, r4
 801b4fe:	f825 600c 	strh.w	r6, [r5, ip]
 801b502:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b504:	4410      	add	r0, r2
 801b506:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b508:	3f01      	subs	r7, #1
 801b50a:	4411      	add	r1, r2
 801b50c:	e787      	b.n	801b41e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b50e:	f06f 0601 	mvn.w	r6, #1
 801b512:	437e      	muls	r6, r7
 801b514:	fa1f fa82 	uxth.w	sl, r2
 801b518:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b51c:	9602      	str	r6, [sp, #8]
 801b51e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b522:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b526:	43d2      	mvns	r2, r2
 801b528:	b2d2      	uxtb	r2, r2
 801b52a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b52e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b532:	fb0e ce02 	mla	lr, lr, r2, ip
 801b536:	b2e4      	uxtb	r4, r4
 801b538:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b53c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b540:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b544:	fa5f f888 	uxtb.w	r8, r8
 801b548:	fb14 f40a 	smulbb	r4, r4, sl
 801b54c:	fb08 4402 	mla	r4, r8, r2, r4
 801b550:	fa1f fe8e 	uxth.w	lr, lr
 801b554:	fb16 f60a 	smulbb	r6, r6, sl
 801b558:	b2a4      	uxth	r4, r4
 801b55a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b55e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b562:	f10e 0201 	add.w	r2, lr, #1
 801b566:	1c66      	adds	r6, r4, #1
 801b568:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b56c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b570:	fa1f fc8c 	uxth.w	ip, ip
 801b574:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b578:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b57c:	ea46 0e0e 	orr.w	lr, r6, lr
 801b580:	f10c 0601 	add.w	r6, ip, #1
 801b584:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b588:	0976      	lsrs	r6, r6, #5
 801b58a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b58e:	9a02      	ldr	r2, [sp, #8]
 801b590:	ea4e 0e06 	orr.w	lr, lr, r6
 801b594:	f825 e002 	strh.w	lr, [r5, r2]
 801b598:	e7b3      	b.n	801b502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b59a:	f04f 0800 	mov.w	r8, #0
 801b59e:	eba3 0208 	sub.w	r2, r3, r8
 801b5a2:	2a00      	cmp	r2, #0
 801b5a4:	f77f af3e 	ble.w	801b424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b5a8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b5ac:	1404      	asrs	r4, r0, #16
 801b5ae:	140a      	asrs	r2, r1, #16
 801b5b0:	fb06 4202 	mla	r2, r6, r2, r4
 801b5b4:	9c01      	ldr	r4, [sp, #4]
 801b5b6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b5ba:	0e22      	lsrs	r2, r4, #24
 801b5bc:	d016      	beq.n	801b5ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b5be:	9e04      	ldr	r6, [sp, #16]
 801b5c0:	4372      	muls	r2, r6
 801b5c2:	1c56      	adds	r6, r2, #1
 801b5c4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b5c8:	1212      	asrs	r2, r2, #8
 801b5ca:	2aff      	cmp	r2, #255	; 0xff
 801b5cc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b5d0:	d113      	bne.n	801b5fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b5d2:	0962      	lsrs	r2, r4, #5
 801b5d4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b5d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b5dc:	f026 0607 	bic.w	r6, r6, #7
 801b5e0:	4316      	orrs	r6, r2
 801b5e2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b5e6:	4326      	orrs	r6, r4
 801b5e8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b5ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b5ee:	4410      	add	r0, r2
 801b5f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b5f2:	f108 0801 	add.w	r8, r8, #1
 801b5f6:	4411      	add	r1, r2
 801b5f8:	e7d1      	b.n	801b59e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b5fa:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b5fe:	fa1f fa82 	uxth.w	sl, r2
 801b602:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b606:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b60a:	43d2      	mvns	r2, r2
 801b60c:	b2d2      	uxtb	r2, r2
 801b60e:	fb17 f70a 	smulbb	r7, r7, sl
 801b612:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b616:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b61a:	b2e4      	uxtb	r4, r4
 801b61c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b620:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b624:	fa5f fe8e 	uxtb.w	lr, lr
 801b628:	fb14 f40a 	smulbb	r4, r4, sl
 801b62c:	fb0e 4402 	mla	r4, lr, r2, r4
 801b630:	b2f6      	uxtb	r6, r6
 801b632:	fa1f fc8c 	uxth.w	ip, ip
 801b636:	fb16 f60a 	smulbb	r6, r6, sl
 801b63a:	b2a4      	uxth	r4, r4
 801b63c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b640:	fb07 6702 	mla	r7, r7, r2, r6
 801b644:	f10c 0201 	add.w	r2, ip, #1
 801b648:	1c66      	adds	r6, r4, #1
 801b64a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b64e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b652:	b2bf      	uxth	r7, r7
 801b654:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b658:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b65c:	ea46 0c0c 	orr.w	ip, r6, ip
 801b660:	1c7e      	adds	r6, r7, #1
 801b662:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b666:	0976      	lsrs	r6, r6, #5
 801b668:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b66c:	ea4c 0c06 	orr.w	ip, ip, r6
 801b670:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b674:	e7ba      	b.n	801b5ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b676:	b007      	add	sp, #28
 801b678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b67c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b67c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b680:	b085      	sub	sp, #20
 801b682:	468b      	mov	fp, r1
 801b684:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b686:	9203      	str	r2, [sp, #12]
 801b688:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b68c:	6841      	ldr	r1, [r0, #4]
 801b68e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b692:	fb01 2404 	mla	r4, r1, r4, r2
 801b696:	6802      	ldr	r2, [r0, #0]
 801b698:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b69c:	f8d8 2000 	ldr.w	r2, [r8]
 801b6a0:	9201      	str	r2, [sp, #4]
 801b6a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b6a6:	f1bb 0f00 	cmp.w	fp, #0
 801b6aa:	dc03      	bgt.n	801b6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b6ac:	9a03      	ldr	r2, [sp, #12]
 801b6ae:	2a00      	cmp	r2, #0
 801b6b0:	f340 814f 	ble.w	801b952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b6b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b6b6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b6ba:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b6be:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b6c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b6c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b6c8:	2b00      	cmp	r3, #0
 801b6ca:	dd0e      	ble.n	801b6ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6cc:	1408      	asrs	r0, r1, #16
 801b6ce:	d405      	bmi.n	801b6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b6d0:	42b8      	cmp	r0, r7
 801b6d2:	da03      	bge.n	801b6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b6d4:	1410      	asrs	r0, r2, #16
 801b6d6:	d401      	bmi.n	801b6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b6d8:	42b0      	cmp	r0, r6
 801b6da:	db07      	blt.n	801b6ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b6dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6de:	4401      	add	r1, r0
 801b6e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6e2:	3b01      	subs	r3, #1
 801b6e4:	4402      	add	r2, r0
 801b6e6:	3402      	adds	r4, #2
 801b6e8:	e7ee      	b.n	801b6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b6ea:	d017      	beq.n	801b71c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b6ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b6ee:	1e58      	subs	r0, r3, #1
 801b6f0:	fb05 1500 	mla	r5, r5, r0, r1
 801b6f4:	142d      	asrs	r5, r5, #16
 801b6f6:	d409      	bmi.n	801b70c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b6f8:	42bd      	cmp	r5, r7
 801b6fa:	da07      	bge.n	801b70c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b6fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b6fe:	fb05 2000 	mla	r0, r5, r0, r2
 801b702:	1400      	asrs	r0, r0, #16
 801b704:	d402      	bmi.n	801b70c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b706:	42b0      	cmp	r0, r6
 801b708:	f2c0 80ba 	blt.w	801b880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b70c:	2600      	movs	r6, #0
 801b70e:	1998      	adds	r0, r3, r6
 801b710:	2800      	cmp	r0, #0
 801b712:	dc3e      	bgt.n	801b792 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b714:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b718:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b71c:	f1bb 0f00 	cmp.w	fp, #0
 801b720:	f340 8117 	ble.w	801b952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b724:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b728:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b72c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b730:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b732:	f1bb 0b01 	subs.w	fp, fp, #1
 801b736:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b73a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b73e:	eeb0 6a62 	vmov.f32	s12, s5
 801b742:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b746:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b74a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b74e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b752:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b756:	eeb0 6a43 	vmov.f32	s12, s6
 801b75a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b75e:	ee12 2a90 	vmov	r2, s5
 801b762:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b766:	fb92 f3f3 	sdiv	r3, r2, r3
 801b76a:	ee13 2a10 	vmov	r2, s6
 801b76e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b772:	9311      	str	r3, [sp, #68]	; 0x44
 801b774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b776:	fb92 f3f3 	sdiv	r3, r2, r3
 801b77a:	9a03      	ldr	r2, [sp, #12]
 801b77c:	9312      	str	r3, [sp, #72]	; 0x48
 801b77e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b782:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b784:	eeb0 3a67 	vmov.f32	s6, s15
 801b788:	bf08      	it	eq
 801b78a:	4613      	moveq	r3, r2
 801b78c:	eef0 2a47 	vmov.f32	s5, s14
 801b790:	e789      	b.n	801b6a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b792:	140f      	asrs	r7, r1, #16
 801b794:	d424      	bmi.n	801b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b796:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b79a:	42bd      	cmp	r5, r7
 801b79c:	dd20      	ble.n	801b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b79e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b7a2:	d41d      	bmi.n	801b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7a4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b7a8:	4560      	cmp	r0, ip
 801b7aa:	dd19      	ble.n	801b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7ac:	b22d      	sxth	r5, r5
 801b7ae:	fb0c 7505 	mla	r5, ip, r5, r7
 801b7b2:	9801      	ldr	r0, [sp, #4]
 801b7b4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b7b8:	0e07      	lsrs	r7, r0, #24
 801b7ba:	2fff      	cmp	r7, #255	; 0xff
 801b7bc:	d116      	bne.n	801b7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b7be:	f06f 0501 	mvn.w	r5, #1
 801b7c2:	fb05 f706 	mul.w	r7, r5, r6
 801b7c6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b7ca:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b7ce:	0945      	lsrs	r5, r0, #5
 801b7d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b7d4:	ea4c 0505 	orr.w	r5, ip, r5
 801b7d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b7dc:	4305      	orrs	r5, r0
 801b7de:	53e5      	strh	r5, [r4, r7]
 801b7e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7e2:	4401      	add	r1, r0
 801b7e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7e6:	3e01      	subs	r6, #1
 801b7e8:	4402      	add	r2, r0
 801b7ea:	e790      	b.n	801b70e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7ec:	b2fd      	uxtb	r5, r7
 801b7ee:	2f00      	cmp	r7, #0
 801b7f0:	d0f6      	beq.n	801b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7f2:	f06f 0701 	mvn.w	r7, #1
 801b7f6:	4377      	muls	r7, r6
 801b7f8:	fa1f f985 	uxth.w	r9, r5
 801b7fc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b800:	9702      	str	r7, [sp, #8]
 801b802:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b806:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b80a:	43ed      	mvns	r5, r5
 801b80c:	b2ed      	uxtb	r5, r5
 801b80e:	fb17 f709 	smulbb	r7, r7, r9
 801b812:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b816:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b81a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b81e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b822:	b2c0      	uxtb	r0, r0
 801b824:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b828:	fa5f fe8e 	uxtb.w	lr, lr
 801b82c:	fb10 f009 	smulbb	r0, r0, r9
 801b830:	fb0e 0005 	mla	r0, lr, r5, r0
 801b834:	b280      	uxth	r0, r0
 801b836:	fa1f fc8c 	uxth.w	ip, ip
 801b83a:	fb1a fa09 	smulbb	sl, sl, r9
 801b83e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b842:	fb07 a705 	mla	r7, r7, r5, sl
 801b846:	f100 0a01 	add.w	sl, r0, #1
 801b84a:	f10c 0501 	add.w	r5, ip, #1
 801b84e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b852:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b856:	b2bf      	uxth	r7, r7
 801b858:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b85c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b860:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b864:	f107 0a01 	add.w	sl, r7, #1
 801b868:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b86c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b870:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b874:	9802      	ldr	r0, [sp, #8]
 801b876:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b87a:	f824 c000 	strh.w	ip, [r4, r0]
 801b87e:	e7af      	b.n	801b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b880:	f04f 0e00 	mov.w	lr, #0
 801b884:	eba3 000e 	sub.w	r0, r3, lr
 801b888:	2800      	cmp	r0, #0
 801b88a:	f77f af43 	ble.w	801b714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b88e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b892:	140d      	asrs	r5, r1, #16
 801b894:	1410      	asrs	r0, r2, #16
 801b896:	fb06 5000 	mla	r0, r6, r0, r5
 801b89a:	9d01      	ldr	r5, [sp, #4]
 801b89c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b8a0:	0e2e      	lsrs	r6, r5, #24
 801b8a2:	2eff      	cmp	r6, #255	; 0xff
 801b8a4:	d112      	bne.n	801b8cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b8a6:	482c      	ldr	r0, [pc, #176]	; (801b958 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b8a8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b8ac:	0968      	lsrs	r0, r5, #5
 801b8ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b8b2:	4330      	orrs	r0, r6
 801b8b4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b8b8:	4328      	orrs	r0, r5
 801b8ba:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b8be:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b8c0:	4401      	add	r1, r0
 801b8c2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b8c4:	f10e 0e01 	add.w	lr, lr, #1
 801b8c8:	4402      	add	r2, r0
 801b8ca:	e7db      	b.n	801b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b8cc:	b2f0      	uxtb	r0, r6
 801b8ce:	2e00      	cmp	r6, #0
 801b8d0:	d0f5      	beq.n	801b8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b8d2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b8d6:	fa1f f980 	uxth.w	r9, r0
 801b8da:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b8de:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b8e2:	43c0      	mvns	r0, r0
 801b8e4:	b2c0      	uxtb	r0, r0
 801b8e6:	fb16 f609 	smulbb	r6, r6, r9
 801b8ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b8ee:	fb07 6700 	mla	r7, r7, r0, r6
 801b8f2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b8f6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b8fa:	b2ed      	uxtb	r5, r5
 801b8fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b900:	fa5f fc8c 	uxtb.w	ip, ip
 801b904:	fb15 f509 	smulbb	r5, r5, r9
 801b908:	fb0c 5500 	mla	r5, ip, r0, r5
 801b90c:	b2bf      	uxth	r7, r7
 801b90e:	fb1a fa09 	smulbb	sl, sl, r9
 801b912:	b2ad      	uxth	r5, r5
 801b914:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b918:	fb06 a600 	mla	r6, r6, r0, sl
 801b91c:	1c78      	adds	r0, r7, #1
 801b91e:	f105 0a01 	add.w	sl, r5, #1
 801b922:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b926:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b92a:	b2b6      	uxth	r6, r6
 801b92c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b930:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b934:	ea4a 0707 	orr.w	r7, sl, r7
 801b938:	f106 0a01 	add.w	sl, r6, #1
 801b93c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b940:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b944:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b948:	ea47 070a 	orr.w	r7, r7, sl
 801b94c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b950:	e7b5      	b.n	801b8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b952:	b005      	add	sp, #20
 801b954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b958:	fffff800 	.word	0xfffff800

0801b95c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b960:	b087      	sub	sp, #28
 801b962:	468b      	mov	fp, r1
 801b964:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b966:	9203      	str	r2, [sp, #12]
 801b968:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b96c:	9204      	str	r2, [sp, #16]
 801b96e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b972:	6841      	ldr	r1, [r0, #4]
 801b974:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b978:	fb01 2404 	mla	r4, r1, r4, r2
 801b97c:	6802      	ldr	r2, [r0, #0]
 801b97e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b982:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b986:	3201      	adds	r2, #1
 801b988:	f022 0201 	bic.w	r2, r2, #1
 801b98c:	9200      	str	r2, [sp, #0]
 801b98e:	f8d9 2000 	ldr.w	r2, [r9]
 801b992:	9201      	str	r2, [sp, #4]
 801b994:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b998:	f1bb 0f00 	cmp.w	fp, #0
 801b99c:	dc03      	bgt.n	801b9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b99e:	9a03      	ldr	r2, [sp, #12]
 801b9a0:	2a00      	cmp	r2, #0
 801b9a2:	f340 8169 	ble.w	801bc78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b9a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b9a8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b9ac:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b9b0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b9b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b9b6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b9ba:	2b00      	cmp	r3, #0
 801b9bc:	dd0e      	ble.n	801b9dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b9be:	1402      	asrs	r2, r0, #16
 801b9c0:	d405      	bmi.n	801b9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b9c2:	42ba      	cmp	r2, r7
 801b9c4:	da03      	bge.n	801b9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b9c6:	140a      	asrs	r2, r1, #16
 801b9c8:	d401      	bmi.n	801b9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b9ca:	42b2      	cmp	r2, r6
 801b9cc:	db07      	blt.n	801b9de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b9ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b9d0:	4410      	add	r0, r2
 801b9d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b9d4:	3b01      	subs	r3, #1
 801b9d6:	4411      	add	r1, r2
 801b9d8:	3402      	adds	r4, #2
 801b9da:	e7ee      	b.n	801b9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b9dc:	d017      	beq.n	801ba0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b9de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b9e0:	1e5a      	subs	r2, r3, #1
 801b9e2:	fb05 0502 	mla	r5, r5, r2, r0
 801b9e6:	142d      	asrs	r5, r5, #16
 801b9e8:	d409      	bmi.n	801b9fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b9ea:	42bd      	cmp	r5, r7
 801b9ec:	da07      	bge.n	801b9fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b9ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b9f0:	fb05 1202 	mla	r2, r5, r2, r1
 801b9f4:	1412      	asrs	r2, r2, #16
 801b9f6:	d402      	bmi.n	801b9fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b9f8:	42b2      	cmp	r2, r6
 801b9fa:	f2c0 80c7 	blt.w	801bb8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b9fe:	2700      	movs	r7, #0
 801ba00:	19da      	adds	r2, r3, r7
 801ba02:	2a00      	cmp	r2, #0
 801ba04:	dc3e      	bgt.n	801ba84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ba06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ba0e:	f1bb 0f00 	cmp.w	fp, #0
 801ba12:	f340 8131 	ble.w	801bc78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ba16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba24:	f1bb 0b01 	subs.w	fp, fp, #1
 801ba28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba30:	eeb0 6a62 	vmov.f32	s12, s5
 801ba34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba40:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ba44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba48:	eeb0 6a43 	vmov.f32	s12, s6
 801ba4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba50:	ee12 2a90 	vmov	r2, s5
 801ba54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba58:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba5c:	ee13 2a10 	vmov	r2, s6
 801ba60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba64:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba68:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba6c:	9a03      	ldr	r2, [sp, #12]
 801ba6e:	9314      	str	r3, [sp, #80]	; 0x50
 801ba70:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ba74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba76:	eeb0 3a67 	vmov.f32	s6, s15
 801ba7a:	bf08      	it	eq
 801ba7c:	4613      	moveq	r3, r2
 801ba7e:	eef0 2a47 	vmov.f32	s5, s14
 801ba82:	e789      	b.n	801b998 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ba84:	1405      	asrs	r5, r0, #16
 801ba86:	d435      	bmi.n	801baf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba88:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ba8c:	42aa      	cmp	r2, r5
 801ba8e:	dd31      	ble.n	801baf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba90:	140e      	asrs	r6, r1, #16
 801ba92:	d42f      	bmi.n	801baf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba94:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ba98:	42b2      	cmp	r2, r6
 801ba9a:	dd2b      	ble.n	801baf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba9c:	9a00      	ldr	r2, [sp, #0]
 801ba9e:	fb06 5502 	mla	r5, r6, r2, r5
 801baa2:	086a      	lsrs	r2, r5, #1
 801baa4:	9e01      	ldr	r6, [sp, #4]
 801baa6:	5cb2      	ldrb	r2, [r6, r2]
 801baa8:	07ee      	lsls	r6, r5, #31
 801baaa:	bf54      	ite	pl
 801baac:	f002 020f 	andpl.w	r2, r2, #15
 801bab0:	1112      	asrmi	r2, r2, #4
 801bab2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bab6:	b2d2      	uxtb	r2, r2
 801bab8:	b1e2      	cbz	r2, 801baf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801baba:	9d04      	ldr	r5, [sp, #16]
 801babc:	436a      	muls	r2, r5
 801babe:	1c55      	adds	r5, r2, #1
 801bac0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bac4:	4d6e      	ldr	r5, [pc, #440]	; (801bc80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bac6:	682d      	ldr	r5, [r5, #0]
 801bac8:	1212      	asrs	r2, r2, #8
 801baca:	0a2e      	lsrs	r6, r5, #8
 801bacc:	2aff      	cmp	r2, #255	; 0xff
 801bace:	9605      	str	r6, [sp, #20]
 801bad0:	d116      	bne.n	801bb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bad2:	f06f 0201 	mvn.w	r2, #1
 801bad6:	fb02 fc07 	mul.w	ip, r2, r7
 801bada:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bade:	096a      	lsrs	r2, r5, #5
 801bae0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bae4:	f026 0607 	bic.w	r6, r6, #7
 801bae8:	4316      	orrs	r6, r2
 801baea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801baee:	432e      	orrs	r6, r5
 801baf0:	f824 600c 	strh.w	r6, [r4, ip]
 801baf4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801baf6:	4410      	add	r0, r2
 801baf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bafa:	3f01      	subs	r7, #1
 801bafc:	4411      	add	r1, r2
 801bafe:	e77f      	b.n	801ba00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801bb00:	f06f 0601 	mvn.w	r6, #1
 801bb04:	437e      	muls	r6, r7
 801bb06:	fa1f fa82 	uxth.w	sl, r2
 801bb0a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801bb0e:	9602      	str	r6, [sp, #8]
 801bb10:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bb14:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801bb18:	43d2      	mvns	r2, r2
 801bb1a:	b2d2      	uxtb	r2, r2
 801bb1c:	fb1c fc0a 	smulbb	ip, ip, sl
 801bb20:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bb24:	fb0e ce02 	mla	lr, lr, r2, ip
 801bb28:	b2ed      	uxtb	r5, r5
 801bb2a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bb2e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bb32:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bb36:	fa5f f888 	uxtb.w	r8, r8
 801bb3a:	fb15 f50a 	smulbb	r5, r5, sl
 801bb3e:	fb08 5502 	mla	r5, r8, r2, r5
 801bb42:	fa1f fe8e 	uxth.w	lr, lr
 801bb46:	fb16 f60a 	smulbb	r6, r6, sl
 801bb4a:	b2ad      	uxth	r5, r5
 801bb4c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bb50:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bb54:	f10e 0201 	add.w	r2, lr, #1
 801bb58:	1c6e      	adds	r6, r5, #1
 801bb5a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bb5e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801bb62:	fa1f fc8c 	uxth.w	ip, ip
 801bb66:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bb6a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bb6e:	ea46 0e0e 	orr.w	lr, r6, lr
 801bb72:	f10c 0601 	add.w	r6, ip, #1
 801bb76:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bb7a:	0976      	lsrs	r6, r6, #5
 801bb7c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bb80:	9a02      	ldr	r2, [sp, #8]
 801bb82:	ea4e 0e06 	orr.w	lr, lr, r6
 801bb86:	f824 e002 	strh.w	lr, [r4, r2]
 801bb8a:	e7b3      	b.n	801baf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb8c:	f04f 0800 	mov.w	r8, #0
 801bb90:	eba3 0208 	sub.w	r2, r3, r8
 801bb94:	2a00      	cmp	r2, #0
 801bb96:	f77f af36 	ble.w	801ba06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801bb9a:	9e00      	ldr	r6, [sp, #0]
 801bb9c:	1402      	asrs	r2, r0, #16
 801bb9e:	140d      	asrs	r5, r1, #16
 801bba0:	fb06 2505 	mla	r5, r6, r5, r2
 801bba4:	086a      	lsrs	r2, r5, #1
 801bba6:	9e01      	ldr	r6, [sp, #4]
 801bba8:	5cb2      	ldrb	r2, [r6, r2]
 801bbaa:	07ed      	lsls	r5, r5, #31
 801bbac:	bf54      	ite	pl
 801bbae:	f002 020f 	andpl.w	r2, r2, #15
 801bbb2:	1112      	asrmi	r2, r2, #4
 801bbb4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bbb8:	b2d2      	uxtb	r2, r2
 801bbba:	b1c2      	cbz	r2, 801bbee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bbbc:	9d04      	ldr	r5, [sp, #16]
 801bbbe:	436a      	muls	r2, r5
 801bbc0:	1c55      	adds	r5, r2, #1
 801bbc2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bbc6:	4d2e      	ldr	r5, [pc, #184]	; (801bc80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bbc8:	1212      	asrs	r2, r2, #8
 801bbca:	682e      	ldr	r6, [r5, #0]
 801bbcc:	2aff      	cmp	r2, #255	; 0xff
 801bbce:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bbd2:	d113      	bne.n	801bbfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bbd4:	0972      	lsrs	r2, r6, #5
 801bbd6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bbda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbde:	f025 0507 	bic.w	r5, r5, #7
 801bbe2:	4315      	orrs	r5, r2
 801bbe4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bbe8:	4335      	orrs	r5, r6
 801bbea:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bbee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbf0:	4410      	add	r0, r2
 801bbf2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbf4:	f108 0801 	add.w	r8, r8, #1
 801bbf8:	4411      	add	r1, r2
 801bbfa:	e7c9      	b.n	801bb90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bbfc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bc00:	fa1f fa82 	uxth.w	sl, r2
 801bc04:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bc08:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bc0c:	43d2      	mvns	r2, r2
 801bc0e:	b2d2      	uxtb	r2, r2
 801bc10:	fb17 f70a 	smulbb	r7, r7, sl
 801bc14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bc18:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bc1c:	b2f6      	uxtb	r6, r6
 801bc1e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bc22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bc26:	fa5f fe8e 	uxtb.w	lr, lr
 801bc2a:	fb16 f60a 	smulbb	r6, r6, sl
 801bc2e:	fb0e 6602 	mla	r6, lr, r2, r6
 801bc32:	b2ed      	uxtb	r5, r5
 801bc34:	fa1f fc8c 	uxth.w	ip, ip
 801bc38:	fb15 f50a 	smulbb	r5, r5, sl
 801bc3c:	b2b6      	uxth	r6, r6
 801bc3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bc42:	fb07 5702 	mla	r7, r7, r2, r5
 801bc46:	f10c 0201 	add.w	r2, ip, #1
 801bc4a:	1c75      	adds	r5, r6, #1
 801bc4c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bc50:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bc54:	b2bf      	uxth	r7, r7
 801bc56:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bc5a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bc5e:	ea45 0c0c 	orr.w	ip, r5, ip
 801bc62:	1c7d      	adds	r5, r7, #1
 801bc64:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bc68:	096d      	lsrs	r5, r5, #5
 801bc6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bc6e:	ea4c 0c05 	orr.w	ip, ip, r5
 801bc72:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bc76:	e7ba      	b.n	801bbee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bc78:	b007      	add	sp, #28
 801bc7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc7e:	bf00      	nop
 801bc80:	200279b8 	.word	0x200279b8

0801bc84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc88:	b087      	sub	sp, #28
 801bc8a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bf98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bc8e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bc90:	9205      	str	r2, [sp, #20]
 801bc92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bc96:	9101      	str	r1, [sp, #4]
 801bc98:	6841      	ldr	r1, [r0, #4]
 801bc9a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bc9e:	fb01 2404 	mla	r4, r1, r4, r2
 801bca2:	6802      	ldr	r2, [r0, #0]
 801bca4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bca8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bcac:	3201      	adds	r2, #1
 801bcae:	f022 0201 	bic.w	r2, r2, #1
 801bcb2:	9202      	str	r2, [sp, #8]
 801bcb4:	f8db 2000 	ldr.w	r2, [fp]
 801bcb8:	9203      	str	r2, [sp, #12]
 801bcba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bcbe:	9a01      	ldr	r2, [sp, #4]
 801bcc0:	2a00      	cmp	r2, #0
 801bcc2:	dc03      	bgt.n	801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bcc4:	9a05      	ldr	r2, [sp, #20]
 801bcc6:	2a00      	cmp	r2, #0
 801bcc8:	f340 8162 	ble.w	801bf90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bccc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bcce:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bcd2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bcd6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bcda:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bcdc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bce0:	2b00      	cmp	r3, #0
 801bce2:	dd0e      	ble.n	801bd02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bce4:	1402      	asrs	r2, r0, #16
 801bce6:	d405      	bmi.n	801bcf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bce8:	42ba      	cmp	r2, r7
 801bcea:	da03      	bge.n	801bcf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bcec:	140a      	asrs	r2, r1, #16
 801bcee:	d401      	bmi.n	801bcf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bcf0:	42b2      	cmp	r2, r6
 801bcf2:	db07      	blt.n	801bd04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bcf4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcf6:	4410      	add	r0, r2
 801bcf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcfa:	3b01      	subs	r3, #1
 801bcfc:	4411      	add	r1, r2
 801bcfe:	3402      	adds	r4, #2
 801bd00:	e7ee      	b.n	801bce0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bd02:	d017      	beq.n	801bd34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bd04:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bd06:	1e5a      	subs	r2, r3, #1
 801bd08:	fb05 0502 	mla	r5, r5, r2, r0
 801bd0c:	142d      	asrs	r5, r5, #16
 801bd0e:	d409      	bmi.n	801bd24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd10:	42bd      	cmp	r5, r7
 801bd12:	da07      	bge.n	801bd24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd14:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bd16:	fb05 1202 	mla	r2, r5, r2, r1
 801bd1a:	1412      	asrs	r2, r2, #16
 801bd1c:	d402      	bmi.n	801bd24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd1e:	42b2      	cmp	r2, r6
 801bd20:	f2c0 80c3 	blt.w	801beaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bd24:	2500      	movs	r5, #0
 801bd26:	195a      	adds	r2, r3, r5
 801bd28:	2a00      	cmp	r2, #0
 801bd2a:	dc3f      	bgt.n	801bdac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bd2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd34:	9b01      	ldr	r3, [sp, #4]
 801bd36:	2b00      	cmp	r3, #0
 801bd38:	f340 812a 	ble.w	801bf90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bd3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd52:	eeb0 6a62 	vmov.f32	s12, s5
 801bd56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bd66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd6a:	eeb0 6a43 	vmov.f32	s12, s6
 801bd6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd72:	ee12 2a90 	vmov	r2, s5
 801bd76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd7e:	ee13 2a10 	vmov	r2, s6
 801bd82:	9313      	str	r3, [sp, #76]	; 0x4c
 801bd84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd86:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd8a:	9314      	str	r3, [sp, #80]	; 0x50
 801bd8c:	9b01      	ldr	r3, [sp, #4]
 801bd8e:	9a05      	ldr	r2, [sp, #20]
 801bd90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd94:	3b01      	subs	r3, #1
 801bd96:	9301      	str	r3, [sp, #4]
 801bd98:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bd9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd9e:	eeb0 3a67 	vmov.f32	s6, s15
 801bda2:	bf08      	it	eq
 801bda4:	4613      	moveq	r3, r2
 801bda6:	eef0 2a47 	vmov.f32	s5, s14
 801bdaa:	e788      	b.n	801bcbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bdac:	1406      	asrs	r6, r0, #16
 801bdae:	d42c      	bmi.n	801be0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bdb0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bdb4:	42b2      	cmp	r2, r6
 801bdb6:	dd28      	ble.n	801be0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bdb8:	140f      	asrs	r7, r1, #16
 801bdba:	d426      	bmi.n	801be0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bdbc:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bdc0:	42ba      	cmp	r2, r7
 801bdc2:	dd22      	ble.n	801be0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bdc4:	9a02      	ldr	r2, [sp, #8]
 801bdc6:	fb07 6602 	mla	r6, r7, r2, r6
 801bdca:	0872      	lsrs	r2, r6, #1
 801bdcc:	9f03      	ldr	r7, [sp, #12]
 801bdce:	5cba      	ldrb	r2, [r7, r2]
 801bdd0:	07f6      	lsls	r6, r6, #31
 801bdd2:	bf54      	ite	pl
 801bdd4:	f002 020f 	andpl.w	r2, r2, #15
 801bdd8:	1112      	asrmi	r2, r2, #4
 801bdda:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bdde:	b2d2      	uxtb	r2, r2
 801bde0:	2aff      	cmp	r2, #255	; 0xff
 801bde2:	d118      	bne.n	801be16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bde4:	f8d8 2000 	ldr.w	r2, [r8]
 801bde8:	f06f 0601 	mvn.w	r6, #1
 801bdec:	fb06 f705 	mul.w	r7, r6, r5
 801bdf0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bdf4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bdf8:	0956      	lsrs	r6, r2, #5
 801bdfa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bdfe:	ea4c 0606 	orr.w	r6, ip, r6
 801be02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801be06:	4316      	orrs	r6, r2
 801be08:	53e6      	strh	r6, [r4, r7]
 801be0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801be0c:	4410      	add	r0, r2
 801be0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be10:	3d01      	subs	r5, #1
 801be12:	4411      	add	r1, r2
 801be14:	e787      	b.n	801bd26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801be16:	2a00      	cmp	r2, #0
 801be18:	d0f7      	beq.n	801be0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be1a:	f06f 0601 	mvn.w	r6, #1
 801be1e:	436e      	muls	r6, r5
 801be20:	f8d8 c000 	ldr.w	ip, [r8]
 801be24:	f834 e006 	ldrh.w	lr, [r4, r6]
 801be28:	9604      	str	r6, [sp, #16]
 801be2a:	fa1f f982 	uxth.w	r9, r2
 801be2e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801be32:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801be36:	43d2      	mvns	r2, r2
 801be38:	b2d2      	uxtb	r2, r2
 801be3a:	fb16 f609 	smulbb	r6, r6, r9
 801be3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801be42:	fb07 6702 	mla	r7, r7, r2, r6
 801be46:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801be4a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801be4e:	fa5f fc8c 	uxtb.w	ip, ip
 801be52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801be56:	fa5f fe8e 	uxtb.w	lr, lr
 801be5a:	fb1c fc09 	smulbb	ip, ip, r9
 801be5e:	fb0e cc02 	mla	ip, lr, r2, ip
 801be62:	b2bf      	uxth	r7, r7
 801be64:	fb1a fa09 	smulbb	sl, sl, r9
 801be68:	fa1f fc8c 	uxth.w	ip, ip
 801be6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801be70:	fb06 a602 	mla	r6, r6, r2, sl
 801be74:	1c7a      	adds	r2, r7, #1
 801be76:	f10c 0a01 	add.w	sl, ip, #1
 801be7a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801be7e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801be82:	b2b6      	uxth	r6, r6
 801be84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be88:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801be8c:	ea4a 0707 	orr.w	r7, sl, r7
 801be90:	f106 0a01 	add.w	sl, r6, #1
 801be94:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801be98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be9c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bea0:	9a04      	ldr	r2, [sp, #16]
 801bea2:	ea47 070a 	orr.w	r7, r7, sl
 801bea6:	52a7      	strh	r7, [r4, r2]
 801bea8:	e7af      	b.n	801be0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801beaa:	f04f 0e00 	mov.w	lr, #0
 801beae:	eba3 020e 	sub.w	r2, r3, lr
 801beb2:	2a00      	cmp	r2, #0
 801beb4:	f77f af3a 	ble.w	801bd2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801beb8:	9e02      	ldr	r6, [sp, #8]
 801beba:	1402      	asrs	r2, r0, #16
 801bebc:	140d      	asrs	r5, r1, #16
 801bebe:	fb06 2505 	mla	r5, r6, r5, r2
 801bec2:	086a      	lsrs	r2, r5, #1
 801bec4:	9e03      	ldr	r6, [sp, #12]
 801bec6:	5cb2      	ldrb	r2, [r6, r2]
 801bec8:	07ed      	lsls	r5, r5, #31
 801beca:	bf54      	ite	pl
 801becc:	f002 020f 	andpl.w	r2, r2, #15
 801bed0:	1112      	asrmi	r2, r2, #4
 801bed2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bed6:	b2d2      	uxtb	r2, r2
 801bed8:	2aff      	cmp	r2, #255	; 0xff
 801beda:	d115      	bne.n	801bf08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bedc:	f8d8 5000 	ldr.w	r5, [r8]
 801bee0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bee4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bee8:	096a      	lsrs	r2, r5, #5
 801beea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801beee:	4332      	orrs	r2, r6
 801bef0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bef4:	432a      	orrs	r2, r5
 801bef6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801befa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801befc:	4410      	add	r0, r2
 801befe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf00:	f10e 0e01 	add.w	lr, lr, #1
 801bf04:	4411      	add	r1, r2
 801bf06:	e7d2      	b.n	801beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bf08:	2a00      	cmp	r2, #0
 801bf0a:	d0f6      	beq.n	801befa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bf0c:	f8d8 7000 	ldr.w	r7, [r8]
 801bf10:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bf14:	fa1f f982 	uxth.w	r9, r2
 801bf18:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bf1c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bf20:	43d2      	mvns	r2, r2
 801bf22:	b2d2      	uxtb	r2, r2
 801bf24:	fb15 f509 	smulbb	r5, r5, r9
 801bf28:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bf2c:	fb06 5602 	mla	r6, r6, r2, r5
 801bf30:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bf34:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bf38:	b2ff      	uxtb	r7, r7
 801bf3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf3e:	fa5f fc8c 	uxtb.w	ip, ip
 801bf42:	fb17 f709 	smulbb	r7, r7, r9
 801bf46:	fb0c 7702 	mla	r7, ip, r2, r7
 801bf4a:	b2b6      	uxth	r6, r6
 801bf4c:	fb1a fa09 	smulbb	sl, sl, r9
 801bf50:	b2bf      	uxth	r7, r7
 801bf52:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf56:	fb05 a502 	mla	r5, r5, r2, sl
 801bf5a:	1c72      	adds	r2, r6, #1
 801bf5c:	f107 0a01 	add.w	sl, r7, #1
 801bf60:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bf64:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bf68:	b2ad      	uxth	r5, r5
 801bf6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bf6e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bf72:	ea4a 0606 	orr.w	r6, sl, r6
 801bf76:	f105 0a01 	add.w	sl, r5, #1
 801bf7a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bf86:	ea46 060a 	orr.w	r6, r6, sl
 801bf8a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bf8e:	e7b4      	b.n	801befa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bf90:	b007      	add	sp, #28
 801bf92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf96:	bf00      	nop
 801bf98:	200279b8 	.word	0x200279b8

0801bf9c <_ZN8touchgfx8LCD16bppD1Ev>:
 801bf9c:	4770      	bx	lr

0801bf9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bf9e:	4770      	bx	lr

0801bfa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bfa0:	4770      	bx	lr

0801bfa2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bfa2:	4770      	bx	lr

0801bfa4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bfa4:	4770      	bx	lr

0801bfa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bfa6:	4770      	bx	lr

0801bfa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bfa8:	4770      	bx	lr

0801bfaa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bfaa:	4770      	bx	lr

0801bfac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bfac:	4770      	bx	lr

0801bfae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bfae:	4770      	bx	lr

0801bfb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bfb0:	4770      	bx	lr

0801bfb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bfb2:	4770      	bx	lr

0801bfb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bfb4:	4770      	bx	lr

0801bfb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bfb6:	4770      	bx	lr

0801bfb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bfb8:	4770      	bx	lr

0801bfba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bfba:	4770      	bx	lr

0801bfbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bfbc:	4770      	bx	lr

0801bfbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bfbe:	4770      	bx	lr

0801bfc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bfc0:	4770      	bx	lr

0801bfc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bfc2:	4770      	bx	lr

0801bfc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bfc4:	4770      	bx	lr

0801bfc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bfc6:	4770      	bx	lr

0801bfc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bfc8:	4770      	bx	lr

0801bfca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bfca:	4770      	bx	lr

0801bfcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bfcc:	4770      	bx	lr

0801bfce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bfce:	4770      	bx	lr

0801bfd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bfd0:	4770      	bx	lr

0801bfd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bfd2:	4770      	bx	lr

0801bfd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bfd4:	4770      	bx	lr
	...

0801bfd8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801bfd8:	b508      	push	{r3, lr}
 801bfda:	4b06      	ldr	r3, [pc, #24]	; (801bff4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801bfdc:	8818      	ldrh	r0, [r3, #0]
 801bfde:	b928      	cbnz	r0, 801bfec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801bfe0:	4b05      	ldr	r3, [pc, #20]	; (801bff8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801bfe2:	4a06      	ldr	r2, [pc, #24]	; (801bffc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801bfe4:	4806      	ldr	r0, [pc, #24]	; (801c000 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801bfe6:	2150      	movs	r1, #80	; 0x50
 801bfe8:	f009 fbea 	bl	80257c0 <__assert_func>
 801bfec:	0040      	lsls	r0, r0, #1
 801bfee:	b280      	uxth	r0, r0
 801bff0:	bd08      	pop	{r3, pc}
 801bff2:	bf00      	nop
 801bff4:	200279aa 	.word	0x200279aa
 801bff8:	0802b230 	.word	0x0802b230
 801bffc:	0802b82c 	.word	0x0802b82c
 801c000:	0802b272 	.word	0x0802b272

0801c004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c008:	b08b      	sub	sp, #44	; 0x2c
 801c00a:	460f      	mov	r7, r1
 801c00c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c010:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c014:	4616      	mov	r6, r2
 801c016:	f1bb 0f00 	cmp.w	fp, #0
 801c01a:	d049      	beq.n	801c0b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801c01c:	6810      	ldr	r0, [r2, #0]
 801c01e:	6851      	ldr	r1, [r2, #4]
 801c020:	ad06      	add	r5, sp, #24
 801c022:	c503      	stmia	r5!, {r0, r1}
 801c024:	6818      	ldr	r0, [r3, #0]
 801c026:	6859      	ldr	r1, [r3, #4]
 801c028:	ad08      	add	r5, sp, #32
 801c02a:	c503      	stmia	r5!, {r0, r1}
 801c02c:	a806      	add	r0, sp, #24
 801c02e:	f7f9 fbeb 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c032:	4631      	mov	r1, r6
 801c034:	a808      	add	r0, sp, #32
 801c036:	f7f9 fc0f 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c03a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c03e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c042:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c046:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c04a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c04e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c052:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c056:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c05a:	4f5f      	ldr	r7, [pc, #380]	; (801c1d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c05c:	440a      	add	r2, r1
 801c05e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c062:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c066:	6838      	ldr	r0, [r7, #0]
 801c068:	4413      	add	r3, r2
 801c06a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c06e:	6803      	ldr	r3, [r0, #0]
 801c070:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c072:	4798      	blx	r3
 801c074:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c078:	46b9      	mov	r9, r7
 801c07a:	d01c      	beq.n	801c0b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801c07c:	f010 0f04 	tst.w	r0, #4
 801c080:	d01d      	beq.n	801c0be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c082:	f8d9 0000 	ldr.w	r0, [r9]
 801c086:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c08a:	6801      	ldr	r1, [r0, #0]
 801c08c:	f8cd b00c 	str.w	fp, [sp, #12]
 801c090:	2700      	movs	r7, #0
 801c092:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c096:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c09a:	9402      	str	r4, [sp, #8]
 801c09c:	b2ad      	uxth	r5, r5
 801c09e:	fa1f f488 	uxth.w	r4, r8
 801c0a2:	9501      	str	r5, [sp, #4]
 801c0a4:	9400      	str	r4, [sp, #0]
 801c0a6:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c0a8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c0ac:	4631      	mov	r1, r6
 801c0ae:	47a0      	blx	r4
 801c0b0:	b00b      	add	sp, #44	; 0x2c
 801c0b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0b6:	b914      	cbnz	r4, 801c0be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c0b8:	f010 0f01 	tst.w	r0, #1
 801c0bc:	e7e0      	b.n	801c080 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801c0be:	f8d9 0000 	ldr.w	r0, [r9]
 801c0c2:	6803      	ldr	r3, [r0, #0]
 801c0c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0c6:	4798      	blx	r3
 801c0c8:	4b44      	ldr	r3, [pc, #272]	; (801c1dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c0ca:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c0ce:	881a      	ldrh	r2, [r3, #0]
 801c0d0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c0d4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c0d8:	fb02 1404 	mla	r4, r2, r4, r1
 801c0dc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c0e0:	469a      	mov	sl, r3
 801c0e2:	fb05 f502 	mul.w	r5, r5, r2
 801c0e6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c0ea:	d059      	beq.n	801c1a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c0ec:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c0f0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c0f4:	fa1f f28b 	uxth.w	r2, fp
 801c0f8:	fa1f f989 	uxth.w	r9, r9
 801c0fc:	469e      	mov	lr, r3
 801c0fe:	42ac      	cmp	r4, r5
 801c100:	d264      	bcs.n	801c1cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c102:	eb04 0a07 	add.w	sl, r4, r7
 801c106:	4554      	cmp	r4, sl
 801c108:	d23d      	bcs.n	801c186 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c10a:	8821      	ldrh	r1, [r4, #0]
 801c10c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c110:	1208      	asrs	r0, r1, #8
 801c112:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c116:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c11a:	fb10 f009 	smulbb	r0, r0, r9
 801c11e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c122:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c126:	00c9      	lsls	r1, r1, #3
 801c128:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c12c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c130:	10d8      	asrs	r0, r3, #3
 801c132:	b2c9      	uxtb	r1, r1
 801c134:	00db      	lsls	r3, r3, #3
 801c136:	fa1f fc8c 	uxth.w	ip, ip
 801c13a:	fb1b fb09 	smulbb	fp, fp, r9
 801c13e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c142:	b2db      	uxtb	r3, r3
 801c144:	fb11 f109 	smulbb	r1, r1, r9
 801c148:	fb00 b002 	mla	r0, r0, r2, fp
 801c14c:	fb03 1302 	mla	r3, r3, r2, r1
 801c150:	f10c 0b01 	add.w	fp, ip, #1
 801c154:	b29b      	uxth	r3, r3
 801c156:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c15a:	b280      	uxth	r0, r0
 801c15c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c160:	f103 0c01 	add.w	ip, r3, #1
 801c164:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c168:	1c43      	adds	r3, r0, #1
 801c16a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c16e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c172:	0940      	lsrs	r0, r0, #5
 801c174:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c178:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c17c:	ea4c 0c00 	orr.w	ip, ip, r0
 801c180:	f824 cb02 	strh.w	ip, [r4], #2
 801c184:	e7bf      	b.n	801c106 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c186:	f8be 3000 	ldrh.w	r3, [lr]
 801c18a:	eba3 0308 	sub.w	r3, r3, r8
 801c18e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c192:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c196:	eba3 0308 	sub.w	r3, r3, r8
 801c19a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c19e:	e7ae      	b.n	801c0fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c1a0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c1a4:	f8d9 0000 	ldr.w	r0, [r9]
 801c1a8:	42ac      	cmp	r4, r5
 801c1aa:	6803      	ldr	r3, [r0, #0]
 801c1ac:	d20e      	bcs.n	801c1cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c1ae:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c1b2:	4632      	mov	r2, r6
 801c1b4:	463b      	mov	r3, r7
 801c1b6:	4621      	mov	r1, r4
 801c1b8:	47c0      	blx	r8
 801c1ba:	f8ba 3000 	ldrh.w	r3, [sl]
 801c1be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c1c2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c1c6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c1ca:	e7eb      	b.n	801c1a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c1cc:	4b02      	ldr	r3, [pc, #8]	; (801c1d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c1ce:	6818      	ldr	r0, [r3, #0]
 801c1d0:	6803      	ldr	r3, [r0, #0]
 801c1d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1d4:	4798      	blx	r3
 801c1d6:	e76b      	b.n	801c0b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801c1d8:	200279b0 	.word	0x200279b0
 801c1dc:	200279aa 	.word	0x200279aa

0801c1e0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c1e0:	b510      	push	{r4, lr}
 801c1e2:	2178      	movs	r1, #120	; 0x78
 801c1e4:	4604      	mov	r4, r0
 801c1e6:	f009 fabd 	bl	8025764 <_ZdlPvj>
 801c1ea:	4620      	mov	r0, r4
 801c1ec:	bd10      	pop	{r4, pc}

0801c1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c1ee:	b510      	push	{r4, lr}
 801c1f0:	2104      	movs	r1, #4
 801c1f2:	4604      	mov	r4, r0
 801c1f4:	f009 fab6 	bl	8025764 <_ZdlPvj>
 801c1f8:	4620      	mov	r0, r4
 801c1fa:	bd10      	pop	{r4, pc}

0801c1fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c1fc:	b510      	push	{r4, lr}
 801c1fe:	2104      	movs	r1, #4
 801c200:	4604      	mov	r4, r0
 801c202:	f009 faaf 	bl	8025764 <_ZdlPvj>
 801c206:	4620      	mov	r0, r4
 801c208:	bd10      	pop	{r4, pc}

0801c20a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c20a:	b510      	push	{r4, lr}
 801c20c:	2104      	movs	r1, #4
 801c20e:	4604      	mov	r4, r0
 801c210:	f009 faa8 	bl	8025764 <_ZdlPvj>
 801c214:	4620      	mov	r0, r4
 801c216:	bd10      	pop	{r4, pc}

0801c218 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c218:	b510      	push	{r4, lr}
 801c21a:	2104      	movs	r1, #4
 801c21c:	4604      	mov	r4, r0
 801c21e:	f009 faa1 	bl	8025764 <_ZdlPvj>
 801c222:	4620      	mov	r0, r4
 801c224:	bd10      	pop	{r4, pc}

0801c226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c226:	b510      	push	{r4, lr}
 801c228:	2104      	movs	r1, #4
 801c22a:	4604      	mov	r4, r0
 801c22c:	f009 fa9a 	bl	8025764 <_ZdlPvj>
 801c230:	4620      	mov	r0, r4
 801c232:	bd10      	pop	{r4, pc}

0801c234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c234:	b510      	push	{r4, lr}
 801c236:	2104      	movs	r1, #4
 801c238:	4604      	mov	r4, r0
 801c23a:	f009 fa93 	bl	8025764 <_ZdlPvj>
 801c23e:	4620      	mov	r0, r4
 801c240:	bd10      	pop	{r4, pc}

0801c242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c242:	b510      	push	{r4, lr}
 801c244:	2104      	movs	r1, #4
 801c246:	4604      	mov	r4, r0
 801c248:	f009 fa8c 	bl	8025764 <_ZdlPvj>
 801c24c:	4620      	mov	r0, r4
 801c24e:	bd10      	pop	{r4, pc}

0801c250 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c250:	b510      	push	{r4, lr}
 801c252:	2104      	movs	r1, #4
 801c254:	4604      	mov	r4, r0
 801c256:	f009 fa85 	bl	8025764 <_ZdlPvj>
 801c25a:	4620      	mov	r0, r4
 801c25c:	bd10      	pop	{r4, pc}

0801c25e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c25e:	b510      	push	{r4, lr}
 801c260:	2104      	movs	r1, #4
 801c262:	4604      	mov	r4, r0
 801c264:	f009 fa7e 	bl	8025764 <_ZdlPvj>
 801c268:	4620      	mov	r0, r4
 801c26a:	bd10      	pop	{r4, pc}

0801c26c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c26c:	b510      	push	{r4, lr}
 801c26e:	2104      	movs	r1, #4
 801c270:	4604      	mov	r4, r0
 801c272:	f009 fa77 	bl	8025764 <_ZdlPvj>
 801c276:	4620      	mov	r0, r4
 801c278:	bd10      	pop	{r4, pc}

0801c27a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c27a:	b510      	push	{r4, lr}
 801c27c:	2104      	movs	r1, #4
 801c27e:	4604      	mov	r4, r0
 801c280:	f009 fa70 	bl	8025764 <_ZdlPvj>
 801c284:	4620      	mov	r0, r4
 801c286:	bd10      	pop	{r4, pc}

0801c288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c288:	b510      	push	{r4, lr}
 801c28a:	2104      	movs	r1, #4
 801c28c:	4604      	mov	r4, r0
 801c28e:	f009 fa69 	bl	8025764 <_ZdlPvj>
 801c292:	4620      	mov	r0, r4
 801c294:	bd10      	pop	{r4, pc}

0801c296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c296:	b510      	push	{r4, lr}
 801c298:	2104      	movs	r1, #4
 801c29a:	4604      	mov	r4, r0
 801c29c:	f009 fa62 	bl	8025764 <_ZdlPvj>
 801c2a0:	4620      	mov	r0, r4
 801c2a2:	bd10      	pop	{r4, pc}

0801c2a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c2a4:	b510      	push	{r4, lr}
 801c2a6:	2104      	movs	r1, #4
 801c2a8:	4604      	mov	r4, r0
 801c2aa:	f009 fa5b 	bl	8025764 <_ZdlPvj>
 801c2ae:	4620      	mov	r0, r4
 801c2b0:	bd10      	pop	{r4, pc}

0801c2b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c2b2:	b510      	push	{r4, lr}
 801c2b4:	2104      	movs	r1, #4
 801c2b6:	4604      	mov	r4, r0
 801c2b8:	f009 fa54 	bl	8025764 <_ZdlPvj>
 801c2bc:	4620      	mov	r0, r4
 801c2be:	bd10      	pop	{r4, pc}

0801c2c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c2c0:	b510      	push	{r4, lr}
 801c2c2:	2104      	movs	r1, #4
 801c2c4:	4604      	mov	r4, r0
 801c2c6:	f009 fa4d 	bl	8025764 <_ZdlPvj>
 801c2ca:	4620      	mov	r0, r4
 801c2cc:	bd10      	pop	{r4, pc}

0801c2ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c2ce:	b510      	push	{r4, lr}
 801c2d0:	2104      	movs	r1, #4
 801c2d2:	4604      	mov	r4, r0
 801c2d4:	f009 fa46 	bl	8025764 <_ZdlPvj>
 801c2d8:	4620      	mov	r0, r4
 801c2da:	bd10      	pop	{r4, pc}

0801c2dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c2dc:	b510      	push	{r4, lr}
 801c2de:	2104      	movs	r1, #4
 801c2e0:	4604      	mov	r4, r0
 801c2e2:	f009 fa3f 	bl	8025764 <_ZdlPvj>
 801c2e6:	4620      	mov	r0, r4
 801c2e8:	bd10      	pop	{r4, pc}

0801c2ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c2ea:	b510      	push	{r4, lr}
 801c2ec:	2104      	movs	r1, #4
 801c2ee:	4604      	mov	r4, r0
 801c2f0:	f009 fa38 	bl	8025764 <_ZdlPvj>
 801c2f4:	4620      	mov	r0, r4
 801c2f6:	bd10      	pop	{r4, pc}

0801c2f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2f8:	b510      	push	{r4, lr}
 801c2fa:	2104      	movs	r1, #4
 801c2fc:	4604      	mov	r4, r0
 801c2fe:	f009 fa31 	bl	8025764 <_ZdlPvj>
 801c302:	4620      	mov	r0, r4
 801c304:	bd10      	pop	{r4, pc}

0801c306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c306:	b510      	push	{r4, lr}
 801c308:	2104      	movs	r1, #4
 801c30a:	4604      	mov	r4, r0
 801c30c:	f009 fa2a 	bl	8025764 <_ZdlPvj>
 801c310:	4620      	mov	r0, r4
 801c312:	bd10      	pop	{r4, pc}

0801c314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c314:	b510      	push	{r4, lr}
 801c316:	2104      	movs	r1, #4
 801c318:	4604      	mov	r4, r0
 801c31a:	f009 fa23 	bl	8025764 <_ZdlPvj>
 801c31e:	4620      	mov	r0, r4
 801c320:	bd10      	pop	{r4, pc}

0801c322 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c322:	b510      	push	{r4, lr}
 801c324:	2104      	movs	r1, #4
 801c326:	4604      	mov	r4, r0
 801c328:	f009 fa1c 	bl	8025764 <_ZdlPvj>
 801c32c:	4620      	mov	r0, r4
 801c32e:	bd10      	pop	{r4, pc}

0801c330 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c330:	b510      	push	{r4, lr}
 801c332:	2104      	movs	r1, #4
 801c334:	4604      	mov	r4, r0
 801c336:	f009 fa15 	bl	8025764 <_ZdlPvj>
 801c33a:	4620      	mov	r0, r4
 801c33c:	bd10      	pop	{r4, pc}

0801c33e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c33e:	b510      	push	{r4, lr}
 801c340:	2104      	movs	r1, #4
 801c342:	4604      	mov	r4, r0
 801c344:	f009 fa0e 	bl	8025764 <_ZdlPvj>
 801c348:	4620      	mov	r0, r4
 801c34a:	bd10      	pop	{r4, pc}

0801c34c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c34c:	b510      	push	{r4, lr}
 801c34e:	2104      	movs	r1, #4
 801c350:	4604      	mov	r4, r0
 801c352:	f009 fa07 	bl	8025764 <_ZdlPvj>
 801c356:	4620      	mov	r0, r4
 801c358:	bd10      	pop	{r4, pc}

0801c35a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c35a:	b510      	push	{r4, lr}
 801c35c:	2104      	movs	r1, #4
 801c35e:	4604      	mov	r4, r0
 801c360:	f009 fa00 	bl	8025764 <_ZdlPvj>
 801c364:	4620      	mov	r0, r4
 801c366:	bd10      	pop	{r4, pc}

0801c368 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c368:	b510      	push	{r4, lr}
 801c36a:	2104      	movs	r1, #4
 801c36c:	4604      	mov	r4, r0
 801c36e:	f009 f9f9 	bl	8025764 <_ZdlPvj>
 801c372:	4620      	mov	r0, r4
 801c374:	bd10      	pop	{r4, pc}
	...

0801c378 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c378:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c37a:	4606      	mov	r6, r0
 801c37c:	b087      	sub	sp, #28
 801c37e:	460c      	mov	r4, r1
 801c380:	4617      	mov	r7, r2
 801c382:	461d      	mov	r5, r3
 801c384:	b333      	cbz	r3, 801c3d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c386:	4608      	mov	r0, r1
 801c388:	f7f5 fc09 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c38c:	bb10      	cbnz	r0, 801c3d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c38e:	6820      	ldr	r0, [r4, #0]
 801c390:	6861      	ldr	r1, [r4, #4]
 801c392:	4c1c      	ldr	r4, [pc, #112]	; (801c404 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c394:	ab04      	add	r3, sp, #16
 801c396:	c303      	stmia	r3!, {r0, r1}
 801c398:	a804      	add	r0, sp, #16
 801c39a:	f7f9 fa35 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c39e:	6820      	ldr	r0, [r4, #0]
 801c3a0:	6803      	ldr	r3, [r0, #0]
 801c3a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c3a4:	4798      	blx	r3
 801c3a6:	2dff      	cmp	r5, #255	; 0xff
 801c3a8:	d016      	beq.n	801c3d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c3aa:	f010 0f08 	tst.w	r0, #8
 801c3ae:	6820      	ldr	r0, [r4, #0]
 801c3b0:	d015      	beq.n	801c3de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c3b2:	2400      	movs	r4, #0
 801c3b4:	6801      	ldr	r1, [r0, #0]
 801c3b6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c3ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c3be:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c3c2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c3c6:	9401      	str	r4, [sp, #4]
 801c3c8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c3cc:	9400      	str	r4, [sp, #0]
 801c3ce:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 801c3d0:	4639      	mov	r1, r7
 801c3d2:	47a0      	blx	r4
 801c3d4:	b007      	add	sp, #28
 801c3d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c3d8:	f010 0f02 	tst.w	r0, #2
 801c3dc:	e7e7      	b.n	801c3ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c3de:	6803      	ldr	r3, [r0, #0]
 801c3e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c3e2:	4798      	blx	r3
 801c3e4:	4b08      	ldr	r3, [pc, #32]	; (801c408 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c3e6:	881a      	ldrh	r2, [r3, #0]
 801c3e8:	6833      	ldr	r3, [r6, #0]
 801c3ea:	e9cd 7500 	strd	r7, r5, [sp]
 801c3ee:	4601      	mov	r1, r0
 801c3f0:	69dd      	ldr	r5, [r3, #28]
 801c3f2:	4630      	mov	r0, r6
 801c3f4:	ab04      	add	r3, sp, #16
 801c3f6:	47a8      	blx	r5
 801c3f8:	6820      	ldr	r0, [r4, #0]
 801c3fa:	6803      	ldr	r3, [r0, #0]
 801c3fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3fe:	4798      	blx	r3
 801c400:	e7e8      	b.n	801c3d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c402:	bf00      	nop
 801c404:	200279b0 	.word	0x200279b0
 801c408:	200279aa 	.word	0x200279aa

0801c40c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c40c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c410:	4f97      	ldr	r7, [pc, #604]	; (801c670 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801c412:	4616      	mov	r6, r2
 801c414:	683a      	ldr	r2, [r7, #0]
 801c416:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801c41a:	2a02      	cmp	r2, #2
 801c41c:	b08f      	sub	sp, #60	; 0x3c
 801c41e:	4604      	mov	r4, r0
 801c420:	4689      	mov	r9, r1
 801c422:	d106      	bne.n	801c432 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801c424:	4b93      	ldr	r3, [pc, #588]	; (801c674 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 801c426:	4a94      	ldr	r2, [pc, #592]	; (801c678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801c428:	f44f 7159 	mov.w	r1, #868	; 0x364
 801c42c:	4893      	ldr	r0, [pc, #588]	; (801c67c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801c42e:	f009 f9c7 	bl	80257c0 <__assert_func>
 801c432:	ad0e      	add	r5, sp, #56	; 0x38
 801c434:	f825 3d24 	strh.w	r3, [r5, #-36]!
 801c438:	4628      	mov	r0, r5
 801c43a:	f7fd fac9 	bl	80199d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c43e:	6823      	ldr	r3, [r4, #0]
 801c440:	4680      	mov	r8, r0
 801c442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c444:	4620      	mov	r0, r4
 801c446:	4798      	blx	r3
 801c448:	4580      	cmp	r8, r0
 801c44a:	d004      	beq.n	801c456 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801c44c:	4b8c      	ldr	r3, [pc, #560]	; (801c680 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801c44e:	4a8a      	ldr	r2, [pc, #552]	; (801c678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801c450:	f240 3166 	movw	r1, #870	; 0x366
 801c454:	e7ea      	b.n	801c42c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801c456:	4628      	mov	r0, r5
 801c458:	f7fd fa30 	bl	80198bc <_ZNK8touchgfx6Bitmap7getDataEv>
 801c45c:	4680      	mov	r8, r0
 801c45e:	b920      	cbnz	r0, 801c46a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801c460:	4b88      	ldr	r3, [pc, #544]	; (801c684 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801c462:	4a85      	ldr	r2, [pc, #532]	; (801c678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801c464:	f44f 715a 	mov.w	r1, #872	; 0x368
 801c468:	e7e0      	b.n	801c42c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801c46a:	6830      	ldr	r0, [r6, #0]
 801c46c:	6871      	ldr	r1, [r6, #4]
 801c46e:	f9b6 a000 	ldrsh.w	sl, [r6]
 801c472:	ab06      	add	r3, sp, #24
 801c474:	c303      	stmia	r3!, {r0, r1}
 801c476:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801c47a:	f8d9 0000 	ldr.w	r0, [r9]
 801c47e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801c482:	ab08      	add	r3, sp, #32
 801c484:	c303      	stmia	r3!, {r0, r1}
 801c486:	4628      	mov	r0, r5
 801c488:	f7fd f910 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c48c:	4606      	mov	r6, r0
 801c48e:	4628      	mov	r0, r5
 801c490:	f7fd f946 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c494:	f10d 0b20 	add.w	fp, sp, #32
 801c498:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 801c49c:	a806      	add	r0, sp, #24
 801c49e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801c4a2:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801c4a6:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801c4aa:	f7f9 f9ad 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4ae:	4658      	mov	r0, fp
 801c4b0:	f7f9 f9aa 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4b4:	a80a      	add	r0, sp, #40	; 0x28
 801c4b6:	f7f9 f9a7 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4ba:	4d73      	ldr	r5, [pc, #460]	; (801c688 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801c4bc:	4b73      	ldr	r3, [pc, #460]	; (801c68c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801c4be:	f9b5 2000 	ldrsh.w	r2, [r5]
 801c4c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c4c6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801c4ca:	2100      	movs	r1, #0
 801c4cc:	910c      	str	r1, [sp, #48]	; 0x30
 801c4ce:	4658      	mov	r0, fp
 801c4d0:	a90c      	add	r1, sp, #48	; 0x30
 801c4d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c4d6:	f7f5 fb1f 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801c4da:	4658      	mov	r0, fp
 801c4dc:	f7f5 fb5f 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c4e0:	2800      	cmp	r0, #0
 801c4e2:	f040 8099 	bne.w	801c618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801c4e6:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801c4ea:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801c4ee:	4288      	cmp	r0, r1
 801c4f0:	db37      	blt.n	801c562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801c4f2:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801c4f6:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801c4fa:	429a      	cmp	r2, r3
 801c4fc:	db31      	blt.n	801c562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801c4fe:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801c502:	4430      	add	r0, r6
 801c504:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c508:	4431      	add	r1, r6
 801c50a:	b200      	sxth	r0, r0
 801c50c:	b209      	sxth	r1, r1
 801c50e:	4288      	cmp	r0, r1
 801c510:	dc27      	bgt.n	801c562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801c512:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801c516:	440a      	add	r2, r1
 801c518:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 801c51c:	440b      	add	r3, r1
 801c51e:	b212      	sxth	r2, r2
 801c520:	b21b      	sxth	r3, r3
 801c522:	429a      	cmp	r2, r3
 801c524:	dc1d      	bgt.n	801c562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801c526:	6823      	ldr	r3, [r4, #0]
 801c528:	4620      	mov	r0, r4
 801c52a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c52c:	4798      	blx	r3
 801c52e:	4682      	mov	sl, r0
 801c530:	6838      	ldr	r0, [r7, #0]
 801c532:	6803      	ldr	r3, [r0, #0]
 801c534:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c536:	4798      	blx	r3
 801c538:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c53c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801c540:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c544:	1a5b      	subs	r3, r3, r1
 801c546:	b29b      	uxth	r3, r3
 801c548:	b21c      	sxth	r4, r3
 801c54a:	2c00      	cmp	r4, #0
 801c54c:	dc0e      	bgt.n	801c56c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801c54e:	bf1f      	itttt	ne
 801c550:	f8ad 1020 	strhne.w	r1, [sp, #32]
 801c554:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 801c558:	185b      	addne	r3, r3, r1
 801c55a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801c55e:	4644      	mov	r4, r8
 801c560:	e009      	b.n	801c576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801c562:	4b4b      	ldr	r3, [pc, #300]	; (801c690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 801c564:	4a44      	ldr	r2, [pc, #272]	; (801c678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801c566:	f240 3176 	movw	r1, #886	; 0x376
 801c56a:	e75f      	b.n	801c42c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801c56c:	1ad3      	subs	r3, r2, r3
 801c56e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801c572:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c576:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 801c57a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c57e:	1b9b      	subs	r3, r3, r6
 801c580:	b29b      	uxth	r3, r3
 801c582:	b219      	sxth	r1, r3
 801c584:	2900      	cmp	r1, #0
 801c586:	dd4b      	ble.n	801c620 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 801c588:	4351      	muls	r1, r2
 801c58a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801c58e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801c592:	1acb      	subs	r3, r1, r3
 801c594:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801c598:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c59c:	2e00      	cmp	r6, #0
 801c59e:	dd3b      	ble.n	801c618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801c5a0:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801c5a4:	2b00      	cmp	r3, #0
 801c5a6:	dd37      	ble.n	801c618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801c5a8:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801c5ac:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c5b0:	fb0a f90c 	mul.w	r9, sl, ip
 801c5b4:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 801c5b8:	4481      	add	r9, r0
 801c5ba:	8828      	ldrh	r0, [r5, #0]
 801c5bc:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 801c5c0:	42ae      	cmp	r6, r5
 801c5c2:	bfa8      	it	ge
 801c5c4:	462e      	movge	r6, r5
 801c5c6:	1a41      	subs	r1, r0, r1
 801c5c8:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c5cc:	428e      	cmp	r6, r1
 801c5ce:	bfa8      	it	ge
 801c5d0:	460e      	movge	r6, r1
 801c5d2:	429d      	cmp	r5, r3
 801c5d4:	bfa8      	it	ge
 801c5d6:	461d      	movge	r5, r3
 801c5d8:	4b2c      	ldr	r3, [pc, #176]	; (801c68c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801c5da:	881b      	ldrh	r3, [r3, #0]
 801c5dc:	eba3 030c 	sub.w	r3, r3, ip
 801c5e0:	429d      	cmp	r5, r3
 801c5e2:	bfa8      	it	ge
 801c5e4:	461d      	movge	r5, r3
 801c5e6:	42b0      	cmp	r0, r6
 801c5e8:	d12c      	bne.n	801c644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801c5ea:	4290      	cmp	r0, r2
 801c5ec:	d12a      	bne.n	801c644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801c5ee:	6838      	ldr	r0, [r7, #0]
 801c5f0:	9203      	str	r2, [sp, #12]
 801c5f2:	6803      	ldr	r3, [r0, #0]
 801c5f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c5f6:	4798      	blx	r3
 801c5f8:	07c3      	lsls	r3, r0, #31
 801c5fa:	d51a      	bpl.n	801c632 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 801c5fc:	9a03      	ldr	r2, [sp, #12]
 801c5fe:	6838      	ldr	r0, [r7, #0]
 801c600:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 801c604:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801c608:	6803      	ldr	r3, [r0, #0]
 801c60a:	9200      	str	r2, [sp, #0]
 801c60c:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 801c60e:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801c612:	4623      	mov	r3, r4
 801c614:	47a8      	blx	r5
 801c616:	4680      	mov	r8, r0
 801c618:	4640      	mov	r0, r8
 801c61a:	b00f      	add	sp, #60	; 0x3c
 801c61c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c620:	bf1f      	itttt	ne
 801c622:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 801c626:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 801c62a:	185b      	addne	r3, r3, r1
 801c62c:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801c630:	e7b2      	b.n	801c598 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801c632:	6838      	ldr	r0, [r7, #0]
 801c634:	6803      	ldr	r3, [r0, #0]
 801c636:	464a      	mov	r2, r9
 801c638:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 801c63a:	4621      	mov	r1, r4
 801c63c:	fb05 f30a 	mul.w	r3, r5, sl
 801c640:	47b0      	blx	r6
 801c642:	e7e9      	b.n	801c618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801c644:	4355      	muls	r5, r2
 801c646:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 801c64a:	9303      	str	r3, [sp, #12]
 801c64c:	0076      	lsls	r6, r6, #1
 801c64e:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801c652:	9b03      	ldr	r3, [sp, #12]
 801c654:	429c      	cmp	r4, r3
 801c656:	d2df      	bcs.n	801c618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801c658:	6838      	ldr	r0, [r7, #0]
 801c65a:	6803      	ldr	r3, [r0, #0]
 801c65c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c65e:	464a      	mov	r2, r9
 801c660:	461d      	mov	r5, r3
 801c662:	4621      	mov	r1, r4
 801c664:	4633      	mov	r3, r6
 801c666:	47a8      	blx	r5
 801c668:	44d1      	add	r9, sl
 801c66a:	445c      	add	r4, fp
 801c66c:	e7f1      	b.n	801c652 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801c66e:	bf00      	nop
 801c670:	200279b0 	.word	0x200279b0
 801c674:	0802b028 	.word	0x0802b028
 801c678:	0802b8dc 	.word	0x0802b8dc
 801c67c:	0802b0da 	.word	0x0802b0da
 801c680:	0802b10c 	.word	0x0802b10c
 801c684:	0802b161 	.word	0x0802b161
 801c688:	200279aa 	.word	0x200279aa
 801c68c:	200279ac 	.word	0x200279ac
 801c690:	0802b19f 	.word	0x0802b19f

0801c694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c698:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c69c:	9e08      	ldr	r6, [sp, #32]
 801c69e:	4688      	mov	r8, r1
 801c6a0:	4614      	mov	r4, r2
 801c6a2:	461d      	mov	r5, r3
 801c6a4:	2f00      	cmp	r7, #0
 801c6a6:	f000 80b3 	beq.w	801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801c6aa:	4618      	mov	r0, r3
 801c6ac:	f7f5 fa77 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c6b0:	2800      	cmp	r0, #0
 801c6b2:	f040 80ad 	bne.w	801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801c6b6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c6ba:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c6be:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c6c2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c6c6:	fb04 1303 	mla	r3, r4, r3, r1
 801c6ca:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c6ce:	4365      	muls	r5, r4
 801c6d0:	2fff      	cmp	r7, #255	; 0xff
 801c6d2:	eba4 0200 	sub.w	r2, r4, r0
 801c6d6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c6da:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c6de:	d04b      	beq.n	801c778 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801c6e0:	b2bc      	uxth	r4, r7
 801c6e2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c6e6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c6ea:	fa5f f788 	uxtb.w	r7, r8
 801c6ee:	b2f3      	uxtb	r3, r6
 801c6f0:	0040      	lsls	r0, r0, #1
 801c6f2:	fb0e fe04 	mul.w	lr, lr, r4
 801c6f6:	4367      	muls	r7, r4
 801c6f8:	4363      	muls	r3, r4
 801c6fa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c6fe:	fa1f fc8c 	uxth.w	ip, ip
 801c702:	42a9      	cmp	r1, r5
 801c704:	f080 8084 	bcs.w	801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801c708:	eb01 0900 	add.w	r9, r1, r0
 801c70c:	4549      	cmp	r1, r9
 801c70e:	d231      	bcs.n	801c774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801c710:	880a      	ldrh	r2, [r1, #0]
 801c712:	1214      	asrs	r4, r2, #8
 801c714:	10d6      	asrs	r6, r2, #3
 801c716:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c71a:	00d2      	lsls	r2, r2, #3
 801c71c:	b2d2      	uxtb	r2, r2
 801c71e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c722:	fb14 f40c 	smulbb	r4, r4, ip
 801c726:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c72a:	4474      	add	r4, lr
 801c72c:	fb12 f20c 	smulbb	r2, r2, ip
 801c730:	b2a4      	uxth	r4, r4
 801c732:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c736:	441a      	add	r2, r3
 801c738:	b292      	uxth	r2, r2
 801c73a:	f104 0a01 	add.w	sl, r4, #1
 801c73e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c742:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c746:	fb16 f60c 	smulbb	r6, r6, ip
 801c74a:	f102 0a01 	add.w	sl, r2, #1
 801c74e:	443e      	add	r6, r7
 801c750:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c754:	b2b6      	uxth	r6, r6
 801c756:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c75a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c75e:	4322      	orrs	r2, r4
 801c760:	1c74      	adds	r4, r6, #1
 801c762:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c766:	0976      	lsrs	r6, r6, #5
 801c768:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c76c:	4332      	orrs	r2, r6
 801c76e:	f821 2b02 	strh.w	r2, [r1], #2
 801c772:	e7cb      	b.n	801c70c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801c774:	4441      	add	r1, r8
 801c776:	e7c4      	b.n	801c702 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c778:	4f26      	ldr	r7, [pc, #152]	; (801c814 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 801c77a:	0973      	lsrs	r3, r6, #5
 801c77c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c780:	ea08 0707 	and.w	r7, r8, r7
 801c784:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c788:	433b      	orrs	r3, r7
 801c78a:	4333      	orrs	r3, r6
 801c78c:	07e6      	lsls	r6, r4, #31
 801c78e:	b29b      	uxth	r3, r3
 801c790:	d50b      	bpl.n	801c7aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 801c792:	0040      	lsls	r0, r0, #1
 801c794:	0052      	lsls	r2, r2, #1
 801c796:	42a9      	cmp	r1, r5
 801c798:	d23a      	bcs.n	801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801c79a:	180c      	adds	r4, r1, r0
 801c79c:	42a1      	cmp	r1, r4
 801c79e:	d202      	bcs.n	801c7a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 801c7a0:	f821 3b02 	strh.w	r3, [r1], #2
 801c7a4:	e7fa      	b.n	801c79c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 801c7a6:	4411      	add	r1, r2
 801c7a8:	e7f5      	b.n	801c796 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 801c7aa:	078f      	lsls	r7, r1, #30
 801c7ac:	d008      	beq.n	801c7c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 801c7ae:	0066      	lsls	r6, r4, #1
 801c7b0:	460a      	mov	r2, r1
 801c7b2:	42aa      	cmp	r2, r5
 801c7b4:	d202      	bcs.n	801c7bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 801c7b6:	8013      	strh	r3, [r2, #0]
 801c7b8:	4432      	add	r2, r6
 801c7ba:	e7fa      	b.n	801c7b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801c7bc:	3102      	adds	r1, #2
 801c7be:	3801      	subs	r0, #1
 801c7c0:	07c6      	lsls	r6, r0, #31
 801c7c2:	d50b      	bpl.n	801c7dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801c7c4:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c7c8:	3a01      	subs	r2, #1
 801c7ca:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c7ce:	0066      	lsls	r6, r4, #1
 801c7d0:	42aa      	cmp	r2, r5
 801c7d2:	d202      	bcs.n	801c7da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c7d4:	8013      	strh	r3, [r2, #0]
 801c7d6:	4432      	add	r2, r6
 801c7d8:	e7fa      	b.n	801c7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 801c7da:	3801      	subs	r0, #1
 801c7dc:	b1c0      	cbz	r0, 801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801c7de:	1040      	asrs	r0, r0, #1
 801c7e0:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c7e4:	0080      	lsls	r0, r0, #2
 801c7e6:	0064      	lsls	r4, r4, #1
 801c7e8:	42a9      	cmp	r1, r5
 801c7ea:	d211      	bcs.n	801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801c7ec:	078a      	lsls	r2, r1, #30
 801c7ee:	d006      	beq.n	801c7fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 801c7f0:	4b09      	ldr	r3, [pc, #36]	; (801c818 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 801c7f2:	4a0a      	ldr	r2, [pc, #40]	; (801c81c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 801c7f4:	480a      	ldr	r0, [pc, #40]	; (801c820 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801c7f6:	f44f 6185 	mov.w	r1, #1064	; 0x428
 801c7fa:	f008 ffe1 	bl	80257c0 <__assert_func>
 801c7fe:	180e      	adds	r6, r1, r0
 801c800:	460a      	mov	r2, r1
 801c802:	42b2      	cmp	r2, r6
 801c804:	d202      	bcs.n	801c80c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 801c806:	f842 3b04 	str.w	r3, [r2], #4
 801c80a:	e7fa      	b.n	801c802 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 801c80c:	4421      	add	r1, r4
 801c80e:	e7eb      	b.n	801c7e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 801c810:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c814:	00fff800 	.word	0x00fff800
 801c818:	0802aed9 	.word	0x0802aed9
 801c81c:	0802b528 	.word	0x0802b528
 801c820:	0802b0da 	.word	0x0802b0da

0801c824 <_ZN8touchgfx8LCD16bppC1Ev>:
 801c824:	2200      	movs	r2, #0
 801c826:	4910      	ldr	r1, [pc, #64]	; (801c868 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801c828:	6042      	str	r2, [r0, #4]
 801c82a:	6001      	str	r1, [r0, #0]
 801c82c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c830:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c834:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c838:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c83c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c840:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c844:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c848:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c84c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c850:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c854:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c858:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c85c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c860:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c864:	4770      	bx	lr
 801c866:	bf00      	nop
 801c868:	0802b4e0 	.word	0x0802b4e0

0801c86c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c86c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c870:	460d      	mov	r5, r1
 801c872:	b08d      	sub	sp, #52	; 0x34
 801c874:	4604      	mov	r4, r0
 801c876:	6808      	ldr	r0, [r1, #0]
 801c878:	6849      	ldr	r1, [r1, #4]
 801c87a:	4699      	mov	r9, r3
 801c87c:	ab08      	add	r3, sp, #32
 801c87e:	c303      	stmia	r3!, {r0, r1}
 801c880:	6810      	ldr	r0, [r2, #0]
 801c882:	6851      	ldr	r1, [r2, #4]
 801c884:	ab0a      	add	r3, sp, #40	; 0x28
 801c886:	c303      	stmia	r3!, {r0, r1}
 801c888:	a808      	add	r0, sp, #32
 801c88a:	f7f8 ffbd 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c88e:	4629      	mov	r1, r5
 801c890:	a80a      	add	r0, sp, #40	; 0x28
 801c892:	f7f8 ffe1 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c896:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c89a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c89e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c8a2:	4d63      	ldr	r5, [pc, #396]	; (801ca30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c8a4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c8a8:	6828      	ldr	r0, [r5, #0]
 801c8aa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c8ae:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c8b2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c8b6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c8ba:	440a      	add	r2, r1
 801c8bc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c8c0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c8c4:	4413      	add	r3, r2
 801c8c6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c8ca:	6803      	ldr	r3, [r0, #0]
 801c8cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c8ce:	4798      	blx	r3
 801c8d0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c8d4:	d119      	bne.n	801c90a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c8d6:	f010 0f20 	tst.w	r0, #32
 801c8da:	6828      	ldr	r0, [r5, #0]
 801c8dc:	d018      	beq.n	801c910 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c8de:	2500      	movs	r5, #0
 801c8e0:	6801      	ldr	r1, [r0, #0]
 801c8e2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c8e6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c8ea:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c8ee:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c8f2:	9502      	str	r5, [sp, #8]
 801c8f4:	b2b6      	uxth	r6, r6
 801c8f6:	fa1f f588 	uxth.w	r5, r8
 801c8fa:	9601      	str	r6, [sp, #4]
 801c8fc:	9500      	str	r5, [sp, #0]
 801c8fe:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c900:	4621      	mov	r1, r4
 801c902:	47a8      	blx	r5
 801c904:	b00d      	add	sp, #52	; 0x34
 801c906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c90a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c90e:	e7e4      	b.n	801c8da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c910:	6803      	ldr	r3, [r0, #0]
 801c912:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c914:	4798      	blx	r3
 801c916:	4947      	ldr	r1, [pc, #284]	; (801ca34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c918:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c91c:	880b      	ldrh	r3, [r1, #0]
 801c91e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c922:	fb03 5202 	mla	r2, r3, r2, r5
 801c926:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c92a:	4373      	muls	r3, r6
 801c92c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c930:	9307      	str	r3, [sp, #28]
 801c932:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c936:	9306      	str	r3, [sp, #24]
 801c938:	468a      	mov	sl, r1
 801c93a:	9b07      	ldr	r3, [sp, #28]
 801c93c:	4298      	cmp	r0, r3
 801c93e:	d270      	bcs.n	801ca22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c940:	9b06      	ldr	r3, [sp, #24]
 801c942:	4621      	mov	r1, r4
 801c944:	eb00 0b03 	add.w	fp, r0, r3
 801c948:	4558      	cmp	r0, fp
 801c94a:	d25d      	bcs.n	801ca08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c94c:	f851 4b04 	ldr.w	r4, [r1], #4
 801c950:	0e23      	lsrs	r3, r4, #24
 801c952:	d014      	beq.n	801c97e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c954:	2bff      	cmp	r3, #255	; 0xff
 801c956:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c95a:	d112      	bne.n	801c982 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c95c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c960:	d10f      	bne.n	801c982 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c962:	0963      	lsrs	r3, r4, #5
 801c964:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c968:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c96c:	f02c 0c07 	bic.w	ip, ip, #7
 801c970:	ea43 0c0c 	orr.w	ip, r3, ip
 801c974:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c978:	ea4c 0404 	orr.w	r4, ip, r4
 801c97c:	8004      	strh	r4, [r0, #0]
 801c97e:	3002      	adds	r0, #2
 801c980:	e7e2      	b.n	801c948 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c982:	fb09 f303 	mul.w	r3, r9, r3
 801c986:	8807      	ldrh	r7, [r0, #0]
 801c988:	1c5a      	adds	r2, r3, #1
 801c98a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c98e:	1212      	asrs	r2, r2, #8
 801c990:	123e      	asrs	r6, r7, #8
 801c992:	b293      	uxth	r3, r2
 801c994:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c998:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c99c:	43d2      	mvns	r2, r2
 801c99e:	b2d2      	uxtb	r2, r2
 801c9a0:	10fd      	asrs	r5, r7, #3
 801c9a2:	fb1e fe03 	smulbb	lr, lr, r3
 801c9a6:	00ff      	lsls	r7, r7, #3
 801c9a8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c9ac:	fb06 e602 	mla	r6, r6, r2, lr
 801c9b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c9b4:	b2ff      	uxtb	r7, r7
 801c9b6:	fa5f fc8c 	uxtb.w	ip, ip
 801c9ba:	b2e4      	uxtb	r4, r4
 801c9bc:	b2b6      	uxth	r6, r6
 801c9be:	fb1c fc03 	smulbb	ip, ip, r3
 801c9c2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c9c6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c9ca:	fb14 f403 	smulbb	r4, r4, r3
 801c9ce:	fb05 c502 	mla	r5, r5, r2, ip
 801c9d2:	f106 0e01 	add.w	lr, r6, #1
 801c9d6:	fb07 4702 	mla	r7, r7, r2, r4
 801c9da:	b2ad      	uxth	r5, r5
 801c9dc:	b2bf      	uxth	r7, r7
 801c9de:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c9e2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801c9e6:	f105 0c01 	add.w	ip, r5, #1
 801c9ea:	1c7e      	adds	r6, r7, #1
 801c9ec:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c9f0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c9f4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c9f8:	096d      	lsrs	r5, r5, #5
 801c9fa:	ea46 060e 	orr.w	r6, r6, lr
 801c9fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca02:	432e      	orrs	r6, r5
 801ca04:	8006      	strh	r6, [r0, #0]
 801ca06:	e7ba      	b.n	801c97e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ca08:	f8ba 3000 	ldrh.w	r3, [sl]
 801ca0c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ca10:	eba3 0308 	sub.w	r3, r3, r8
 801ca14:	eba4 0408 	sub.w	r4, r4, r8
 801ca18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ca1c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ca20:	e78b      	b.n	801c93a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ca22:	4b03      	ldr	r3, [pc, #12]	; (801ca30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ca24:	6818      	ldr	r0, [r3, #0]
 801ca26:	6803      	ldr	r3, [r0, #0]
 801ca28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca2a:	4798      	blx	r3
 801ca2c:	e76a      	b.n	801c904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ca2e:	bf00      	nop
 801ca30:	200279b0 	.word	0x200279b0
 801ca34:	200279aa 	.word	0x200279aa

0801ca38 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ca38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ca3c:	460c      	mov	r4, r1
 801ca3e:	b085      	sub	sp, #20
 801ca40:	6810      	ldr	r0, [r2, #0]
 801ca42:	6851      	ldr	r1, [r2, #4]
 801ca44:	466d      	mov	r5, sp
 801ca46:	c503      	stmia	r5!, {r0, r1}
 801ca48:	6818      	ldr	r0, [r3, #0]
 801ca4a:	6859      	ldr	r1, [r3, #4]
 801ca4c:	4616      	mov	r6, r2
 801ca4e:	c503      	stmia	r5!, {r0, r1}
 801ca50:	4668      	mov	r0, sp
 801ca52:	f7f8 fed9 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca56:	4631      	mov	r1, r6
 801ca58:	a802      	add	r0, sp, #8
 801ca5a:	f7f8 fefd 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca5e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ca62:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ca66:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ca6a:	4d28      	ldr	r5, [pc, #160]	; (801cb0c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ca6c:	4e28      	ldr	r6, [pc, #160]	; (801cb10 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ca6e:	6828      	ldr	r0, [r5, #0]
 801ca70:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ca74:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ca78:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ca7c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ca80:	f8bd 1000 	ldrh.w	r1, [sp]
 801ca84:	440a      	add	r2, r1
 801ca86:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ca8a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ca8e:	4413      	add	r3, r2
 801ca90:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ca94:	6803      	ldr	r3, [r0, #0]
 801ca96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca98:	4798      	blx	r3
 801ca9a:	8833      	ldrh	r3, [r6, #0]
 801ca9c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801caa0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801caa4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cb14 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801caa8:	fb03 1202 	mla	r2, r3, r2, r1
 801caac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cab0:	fb08 f303 	mul.w	r3, r8, r3
 801cab4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cab8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cabc:	4298      	cmp	r0, r3
 801cabe:	d21d      	bcs.n	801cafc <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cac0:	eb00 080c 	add.w	r8, r0, ip
 801cac4:	4540      	cmp	r0, r8
 801cac6:	d20f      	bcs.n	801cae8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cac8:	f854 1b04 	ldr.w	r1, [r4], #4
 801cacc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cad0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cad4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cad8:	ea42 0209 	orr.w	r2, r2, r9
 801cadc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cae0:	430a      	orrs	r2, r1
 801cae2:	f820 2b02 	strh.w	r2, [r0], #2
 801cae6:	e7ed      	b.n	801cac4 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cae8:	8832      	ldrh	r2, [r6, #0]
 801caea:	1bd2      	subs	r2, r2, r7
 801caec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801caf0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801caf4:	1bd2      	subs	r2, r2, r7
 801caf6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cafa:	e7df      	b.n	801cabc <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cafc:	6828      	ldr	r0, [r5, #0]
 801cafe:	6803      	ldr	r3, [r0, #0]
 801cb00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb02:	4798      	blx	r3
 801cb04:	b005      	add	sp, #20
 801cb06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cb0a:	bf00      	nop
 801cb0c:	200279b0 	.word	0x200279b0
 801cb10:	200279aa 	.word	0x200279aa
 801cb14:	fffff800 	.word	0xfffff800

0801cb18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cb18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cb1c:	460e      	mov	r6, r1
 801cb1e:	b08e      	sub	sp, #56	; 0x38
 801cb20:	4604      	mov	r4, r0
 801cb22:	6808      	ldr	r0, [r1, #0]
 801cb24:	6849      	ldr	r1, [r1, #4]
 801cb26:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801cd00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cb2a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801cd04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cb2e:	461d      	mov	r5, r3
 801cb30:	ab0a      	add	r3, sp, #40	; 0x28
 801cb32:	c303      	stmia	r3!, {r0, r1}
 801cb34:	6810      	ldr	r0, [r2, #0]
 801cb36:	6851      	ldr	r1, [r2, #4]
 801cb38:	ab0c      	add	r3, sp, #48	; 0x30
 801cb3a:	c303      	stmia	r3!, {r0, r1}
 801cb3c:	a80a      	add	r0, sp, #40	; 0x28
 801cb3e:	f7f8 fe63 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb42:	4631      	mov	r1, r6
 801cb44:	a80c      	add	r0, sp, #48	; 0x30
 801cb46:	f7f8 fe87 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb4a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cb4e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cb52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cb56:	f8d8 0000 	ldr.w	r0, [r8]
 801cb5a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cb5e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cb62:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb66:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cb6a:	440c      	add	r4, r1
 801cb6c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cb70:	440a      	add	r2, r1
 801cb72:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cb76:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cb7a:	4413      	add	r3, r2
 801cb7c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cb80:	6803      	ldr	r3, [r0, #0]
 801cb82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cb84:	4798      	blx	r3
 801cb86:	2dff      	cmp	r5, #255	; 0xff
 801cb88:	d124      	bne.n	801cbd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cb8a:	f010 0f01 	tst.w	r0, #1
 801cb8e:	f8d8 0000 	ldr.w	r0, [r8]
 801cb92:	d022      	beq.n	801cbda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cb94:	2100      	movs	r1, #0
 801cb96:	f8d0 c000 	ldr.w	ip, [r0]
 801cb9a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cb9e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cba2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cba6:	f04f 0e01 	mov.w	lr, #1
 801cbaa:	f8cd e018 	str.w	lr, [sp, #24]
 801cbae:	f8b9 e000 	ldrh.w	lr, [r9]
 801cbb2:	9503      	str	r5, [sp, #12]
 801cbb4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cbb8:	b2b6      	uxth	r6, r6
 801cbba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cbbe:	9102      	str	r1, [sp, #8]
 801cbc0:	b2bf      	uxth	r7, r7
 801cbc2:	9601      	str	r6, [sp, #4]
 801cbc4:	9700      	str	r7, [sp, #0]
 801cbc6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cbca:	4621      	mov	r1, r4
 801cbcc:	47a8      	blx	r5
 801cbce:	b00e      	add	sp, #56	; 0x38
 801cbd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cbd4:	f010 0f04 	tst.w	r0, #4
 801cbd8:	e7d9      	b.n	801cb8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cbda:	6803      	ldr	r3, [r0, #0]
 801cbdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cbde:	4798      	blx	r3
 801cbe0:	f8b9 3000 	ldrh.w	r3, [r9]
 801cbe4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cbe8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cbec:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cbf0:	fb03 1202 	mla	r2, r3, r2, r1
 801cbf4:	ebac 0c07 	sub.w	ip, ip, r7
 801cbf8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbfc:	435e      	muls	r6, r3
 801cbfe:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cc02:	2dff      	cmp	r5, #255	; 0xff
 801cc04:	eba3 0707 	sub.w	r7, r3, r7
 801cc08:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cc0c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cc10:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cc14:	d049      	beq.n	801ccaa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cc16:	43eb      	mvns	r3, r5
 801cc18:	fa1f f985 	uxth.w	r9, r5
 801cc1c:	b2db      	uxtb	r3, r3
 801cc1e:	42b0      	cmp	r0, r6
 801cc20:	d266      	bcs.n	801ccf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cc22:	eb00 0a0e 	add.w	sl, r0, lr
 801cc26:	4550      	cmp	r0, sl
 801cc28:	4621      	mov	r1, r4
 801cc2a:	f104 0403 	add.w	r4, r4, #3
 801cc2e:	d25b      	bcs.n	801cce8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cc30:	8802      	ldrh	r2, [r0, #0]
 801cc32:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cc36:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cc3a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cc3e:	fb11 f109 	smulbb	r1, r1, r9
 801cc42:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cc46:	10d5      	asrs	r5, r2, #3
 801cc48:	fb08 1803 	mla	r8, r8, r3, r1
 801cc4c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cc50:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cc54:	fb11 f109 	smulbb	r1, r1, r9
 801cc58:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cc5c:	fb05 1503 	mla	r5, r5, r3, r1
 801cc60:	00d2      	lsls	r2, r2, #3
 801cc62:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cc66:	b2d2      	uxtb	r2, r2
 801cc68:	fb11 f109 	smulbb	r1, r1, r9
 801cc6c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc70:	fa1f f888 	uxth.w	r8, r8
 801cc74:	fb02 1203 	mla	r2, r2, r3, r1
 801cc78:	b292      	uxth	r2, r2
 801cc7a:	f108 0101 	add.w	r1, r8, #1
 801cc7e:	b2ad      	uxth	r5, r5
 801cc80:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cc84:	1c51      	adds	r1, r2, #1
 801cc86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cc8a:	1c69      	adds	r1, r5, #1
 801cc8c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cc90:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cc94:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc98:	096d      	lsrs	r5, r5, #5
 801cc9a:	ea42 0208 	orr.w	r2, r2, r8
 801cc9e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cca2:	432a      	orrs	r2, r5
 801cca4:	f820 2b02 	strh.w	r2, [r0], #2
 801cca8:	e7bd      	b.n	801cc26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ccaa:	4a14      	ldr	r2, [pc, #80]	; (801ccfc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ccac:	42b0      	cmp	r0, r6
 801ccae:	d21f      	bcs.n	801ccf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ccb0:	eb00 050e 	add.w	r5, r0, lr
 801ccb4:	42a8      	cmp	r0, r5
 801ccb6:	4621      	mov	r1, r4
 801ccb8:	f104 0403 	add.w	r4, r4, #3
 801ccbc:	d210      	bcs.n	801cce0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ccbe:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ccc2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ccc6:	00db      	lsls	r3, r3, #3
 801ccc8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cccc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ccd0:	430b      	orrs	r3, r1
 801ccd2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ccd6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ccda:	f820 3b02 	strh.w	r3, [r0], #2
 801ccde:	e7e9      	b.n	801ccb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cce0:	4438      	add	r0, r7
 801cce2:	eb01 040c 	add.w	r4, r1, ip
 801cce6:	e7e1      	b.n	801ccac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cce8:	4438      	add	r0, r7
 801ccea:	eb01 040c 	add.w	r4, r1, ip
 801ccee:	e796      	b.n	801cc1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ccf0:	4b03      	ldr	r3, [pc, #12]	; (801cd00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ccf2:	6818      	ldr	r0, [r3, #0]
 801ccf4:	6803      	ldr	r3, [r0, #0]
 801ccf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ccf8:	4798      	blx	r3
 801ccfa:	e768      	b.n	801cbce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ccfc:	fffff800 	.word	0xfffff800
 801cd00:	200279b0 	.word	0x200279b0
 801cd04:	200279aa 	.word	0x200279aa

0801cd08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cd08:	b570      	push	{r4, r5, r6, lr}
 801cd0a:	9c04      	ldr	r4, [sp, #16]
 801cd0c:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801cd10:	4605      	mov	r5, r0
 801cd12:	4608      	mov	r0, r1
 801cd14:	4619      	mov	r1, r3
 801cd16:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cd1a:	2a0d      	cmp	r2, #13
 801cd1c:	d825      	bhi.n	801cd6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801cd1e:	e8df f002 	tbb	[pc, r2]
 801cd22:	1807      	.short	0x1807
 801cd24:	1d1d1d13 	.word	0x1d1d1d13
 801cd28:	1d1d1d1d 	.word	0x1d1d1d1d
 801cd2c:	1d1d1d1d 	.word	0x1d1d1d1d
 801cd30:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801cd34:	682a      	ldr	r2, [r5, #0]
 801cd36:	68d6      	ldr	r6, [r2, #12]
 801cd38:	4623      	mov	r3, r4
 801cd3a:	460a      	mov	r2, r1
 801cd3c:	46b4      	mov	ip, r6
 801cd3e:	4601      	mov	r1, r0
 801cd40:	4628      	mov	r0, r5
 801cd42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801cd46:	4760      	bx	ip
 801cd48:	4622      	mov	r2, r4
 801cd4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801cd4e:	f7ff bd8d 	b.w	801c86c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cd52:	4622      	mov	r2, r4
 801cd54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801cd58:	f7ff bede 	b.w	801cb18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801cd5c:	4b03      	ldr	r3, [pc, #12]	; (801cd6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801cd5e:	4a04      	ldr	r2, [pc, #16]	; (801cd70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801cd60:	4804      	ldr	r0, [pc, #16]	; (801cd74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801cd62:	f240 315d 	movw	r1, #861	; 0x35d
 801cd66:	f008 fd2b 	bl	80257c0 <__assert_func>
 801cd6a:	bd70      	pop	{r4, r5, r6, pc}
 801cd6c:	0802b1ff 	.word	0x0802b1ff
 801cd70:	0802b962 	.word	0x0802b962
 801cd74:	0802b0da 	.word	0x0802b0da

0801cd78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801cd78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd7c:	b093      	sub	sp, #76	; 0x4c
 801cd7e:	880e      	ldrh	r6, [r1, #0]
 801cd80:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801cd84:	4681      	mov	r9, r0
 801cd86:	4688      	mov	r8, r1
 801cd88:	4615      	mov	r5, r2
 801cd8a:	b136      	cbz	r6, 801cd9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801cd8c:	4b70      	ldr	r3, [pc, #448]	; (801cf50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801cd8e:	4a71      	ldr	r2, [pc, #452]	; (801cf54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801cd90:	4871      	ldr	r0, [pc, #452]	; (801cf58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801cd92:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 801cd96:	f008 fd13 	bl	80257c0 <__assert_func>
 801cd9a:	6810      	ldr	r0, [r2, #0]
 801cd9c:	6851      	ldr	r1, [r2, #4]
 801cd9e:	4f6f      	ldr	r7, [pc, #444]	; (801cf5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801cda0:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801cf60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801cda4:	ac0e      	add	r4, sp, #56	; 0x38
 801cda6:	c403      	stmia	r4!, {r0, r1}
 801cda8:	6818      	ldr	r0, [r3, #0]
 801cdaa:	6859      	ldr	r1, [r3, #4]
 801cdac:	ac10      	add	r4, sp, #64	; 0x40
 801cdae:	c403      	stmia	r4!, {r0, r1}
 801cdb0:	a80e      	add	r0, sp, #56	; 0x38
 801cdb2:	f7f8 fd29 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cdb6:	4629      	mov	r1, r5
 801cdb8:	a810      	add	r0, sp, #64	; 0x40
 801cdba:	f7f8 fd4d 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cdbe:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801cdc2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801cdc6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801cdca:	6838      	ldr	r0, [r7, #0]
 801cdcc:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801cdd0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801cdd4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cdd8:	4489      	add	r9, r1
 801cdda:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801cdde:	440a      	add	r2, r1
 801cde0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801cde4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cde8:	4413      	add	r3, r2
 801cdea:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801cdee:	6803      	ldr	r3, [r0, #0]
 801cdf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cdf2:	4798      	blx	r3
 801cdf4:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cdf8:	6838      	ldr	r0, [r7, #0]
 801cdfa:	d01d      	beq.n	801ce38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801cdfc:	6802      	ldr	r2, [r0, #0]
 801cdfe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801ce02:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801ce06:	210b      	movs	r1, #11
 801ce08:	9107      	str	r1, [sp, #28]
 801ce0a:	f8bb 1000 	ldrh.w	r1, [fp]
 801ce0e:	9106      	str	r1, [sp, #24]
 801ce10:	2101      	movs	r1, #1
 801ce12:	e9cd a104 	strd	sl, r1, [sp, #16]
 801ce16:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ce1a:	9103      	str	r1, [sp, #12]
 801ce1c:	b2a4      	uxth	r4, r4
 801ce1e:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801ce22:	9100      	str	r1, [sp, #0]
 801ce24:	b2ad      	uxth	r5, r5
 801ce26:	9502      	str	r5, [sp, #8]
 801ce28:	9401      	str	r4, [sp, #4]
 801ce2a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801ce2c:	4649      	mov	r1, r9
 801ce2e:	4642      	mov	r2, r8
 801ce30:	47a0      	blx	r4
 801ce32:	b013      	add	sp, #76	; 0x4c
 801ce34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce38:	6803      	ldr	r3, [r0, #0]
 801ce3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce3c:	4798      	blx	r3
 801ce3e:	f8bb 3000 	ldrh.w	r3, [fp]
 801ce42:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ce46:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ce4a:	fb03 1202 	mla	r2, r3, r2, r1
 801ce4e:	435d      	muls	r5, r3
 801ce50:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ce54:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ce58:	920c      	str	r2, [sp, #48]	; 0x30
 801ce5a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ce5e:	1b12      	subs	r2, r2, r4
 801ce60:	920d      	str	r2, [sp, #52]	; 0x34
 801ce62:	0062      	lsls	r2, r4, #1
 801ce64:	1b1c      	subs	r4, r3, r4
 801ce66:	0063      	lsls	r3, r4, #1
 801ce68:	920a      	str	r2, [sp, #40]	; 0x28
 801ce6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ce6c:	f04f 0e04 	mov.w	lr, #4
 801ce70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ce72:	4298      	cmp	r0, r3
 801ce74:	d266      	bcs.n	801cf44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801ce76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ce78:	eb00 0b03 	add.w	fp, r0, r3
 801ce7c:	4558      	cmp	r0, fp
 801ce7e:	d25c      	bcs.n	801cf3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 801ce80:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ce84:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ce88:	f858 2003 	ldr.w	r2, [r8, r3]
 801ce8c:	0e11      	lsrs	r1, r2, #24
 801ce8e:	d012      	beq.n	801ceb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801ce90:	29ff      	cmp	r1, #255	; 0xff
 801ce92:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ce96:	d110      	bne.n	801ceba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801ce98:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ce9c:	d10d      	bne.n	801ceba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801ce9e:	0953      	lsrs	r3, r2, #5
 801cea0:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cea4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cea8:	f027 0707 	bic.w	r7, r7, #7
 801ceac:	431f      	orrs	r7, r3
 801ceae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ceb2:	433a      	orrs	r2, r7
 801ceb4:	8002      	strh	r2, [r0, #0]
 801ceb6:	3002      	adds	r0, #2
 801ceb8:	e7e0      	b.n	801ce7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801ceba:	fb0a f101 	mul.w	r1, sl, r1
 801cebe:	8806      	ldrh	r6, [r0, #0]
 801cec0:	1c4b      	adds	r3, r1, #1
 801cec2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cec6:	1235      	asrs	r5, r6, #8
 801cec8:	10f4      	asrs	r4, r6, #3
 801ceca:	121b      	asrs	r3, r3, #8
 801cecc:	00f6      	lsls	r6, r6, #3
 801cece:	b299      	uxth	r1, r3
 801ced0:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ced4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ced8:	b2f6      	uxtb	r6, r6
 801ceda:	43db      	mvns	r3, r3
 801cedc:	b2d2      	uxtb	r2, r2
 801cede:	b2db      	uxtb	r3, r3
 801cee0:	fb1c fc01 	smulbb	ip, ip, r1
 801cee4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cee8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ceec:	fb12 f201 	smulbb	r2, r2, r1
 801cef0:	fb05 c503 	mla	r5, r5, r3, ip
 801cef4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cef8:	b2ff      	uxtb	r7, r7
 801cefa:	fb06 2203 	mla	r2, r6, r3, r2
 801cefe:	b2ad      	uxth	r5, r5
 801cf00:	fb17 f701 	smulbb	r7, r7, r1
 801cf04:	b292      	uxth	r2, r2
 801cf06:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cf0a:	fb04 7403 	mla	r4, r4, r3, r7
 801cf0e:	f105 0c01 	add.w	ip, r5, #1
 801cf12:	1c57      	adds	r7, r2, #1
 801cf14:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cf18:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cf1c:	b2a4      	uxth	r4, r4
 801cf1e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cf22:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cf26:	433d      	orrs	r5, r7
 801cf28:	1c67      	adds	r7, r4, #1
 801cf2a:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cf2e:	0964      	lsrs	r4, r4, #5
 801cf30:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cf34:	4325      	orrs	r5, r4
 801cf36:	8005      	strh	r5, [r0, #0]
 801cf38:	e7bd      	b.n	801ceb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801cf3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cf3c:	4418      	add	r0, r3
 801cf3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cf40:	4499      	add	r9, r3
 801cf42:	e795      	b.n	801ce70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 801cf44:	4b05      	ldr	r3, [pc, #20]	; (801cf5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801cf46:	6818      	ldr	r0, [r3, #0]
 801cf48:	6803      	ldr	r3, [r0, #0]
 801cf4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf4c:	4798      	blx	r3
 801cf4e:	e770      	b.n	801ce32 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801cf50:	0802afd8 	.word	0x0802afd8
 801cf54:	0802b733 	.word	0x0802b733
 801cf58:	0802b0da 	.word	0x0802b0da
 801cf5c:	200279b0 	.word	0x200279b0
 801cf60:	200279aa 	.word	0x200279aa

0801cf64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cf64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf68:	4614      	mov	r4, r2
 801cf6a:	880a      	ldrh	r2, [r1, #0]
 801cf6c:	b087      	sub	sp, #28
 801cf6e:	2a02      	cmp	r2, #2
 801cf70:	4680      	mov	r8, r0
 801cf72:	460d      	mov	r5, r1
 801cf74:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801cf78:	d006      	beq.n	801cf88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801cf7a:	4b63      	ldr	r3, [pc, #396]	; (801d108 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801cf7c:	4a63      	ldr	r2, [pc, #396]	; (801d10c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801cf7e:	4864      	ldr	r0, [pc, #400]	; (801d110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 801cf80:	f240 11e1 	movw	r1, #481	; 0x1e1
 801cf84:	f008 fc1c 	bl	80257c0 <__assert_func>
 801cf88:	2e00      	cmp	r6, #0
 801cf8a:	f000 80b9 	beq.w	801d100 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801cf8e:	6820      	ldr	r0, [r4, #0]
 801cf90:	6861      	ldr	r1, [r4, #4]
 801cf92:	af02      	add	r7, sp, #8
 801cf94:	c703      	stmia	r7!, {r0, r1}
 801cf96:	6818      	ldr	r0, [r3, #0]
 801cf98:	6859      	ldr	r1, [r3, #4]
 801cf9a:	af04      	add	r7, sp, #16
 801cf9c:	c703      	stmia	r7!, {r0, r1}
 801cf9e:	a802      	add	r0, sp, #8
 801cfa0:	f7f8 fc32 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfa4:	4621      	mov	r1, r4
 801cfa6:	a804      	add	r0, sp, #16
 801cfa8:	f7f8 fc56 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfac:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cfb0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cfb4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cfb8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cfbc:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cfc0:	eb08 0401 	add.w	r4, r8, r1
 801cfc4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cfc8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cfcc:	440a      	add	r2, r1
 801cfce:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cfd2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cfd6:	4413      	add	r3, r2
 801cfd8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cfdc:	4b4d      	ldr	r3, [pc, #308]	; (801d114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801cfde:	6818      	ldr	r0, [r3, #0]
 801cfe0:	6803      	ldr	r3, [r0, #0]
 801cfe2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfe4:	4798      	blx	r3
 801cfe6:	4b4c      	ldr	r3, [pc, #304]	; (801d118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801cfe8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cfec:	881a      	ldrh	r2, [r3, #0]
 801cfee:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cff2:	2eff      	cmp	r6, #255	; 0xff
 801cff4:	fb02 c101 	mla	r1, r2, r1, ip
 801cff8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cffc:	fb02 f207 	mul.w	r2, r2, r7
 801d000:	f105 0104 	add.w	r1, r5, #4
 801d004:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d008:	461d      	mov	r5, r3
 801d00a:	d05a      	beq.n	801d0c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 801d00c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d010:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d014:	b2b6      	uxth	r6, r6
 801d016:	fa1f fe8e 	uxth.w	lr, lr
 801d01a:	9301      	str	r3, [sp, #4]
 801d01c:	4282      	cmp	r2, r0
 801d01e:	d96a      	bls.n	801d0f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801d020:	eb00 0b0a 	add.w	fp, r0, sl
 801d024:	4583      	cmp	fp, r0
 801d026:	d940      	bls.n	801d0aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801d028:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d02c:	8805      	ldrh	r5, [r0, #0]
 801d02e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d032:	122f      	asrs	r7, r5, #8
 801d034:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d038:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d03c:	fb17 f70e 	smulbb	r7, r7, lr
 801d040:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d044:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d048:	00ed      	lsls	r5, r5, #3
 801d04a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d04e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d052:	10df      	asrs	r7, r3, #3
 801d054:	b2ed      	uxtb	r5, r5
 801d056:	00db      	lsls	r3, r3, #3
 801d058:	fa1f fc8c 	uxth.w	ip, ip
 801d05c:	fb19 f90e 	smulbb	r9, r9, lr
 801d060:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d064:	b2db      	uxtb	r3, r3
 801d066:	fb15 f50e 	smulbb	r5, r5, lr
 801d06a:	fb07 9706 	mla	r7, r7, r6, r9
 801d06e:	fb03 5306 	mla	r3, r3, r6, r5
 801d072:	f10c 0901 	add.w	r9, ip, #1
 801d076:	b29b      	uxth	r3, r3
 801d078:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d07c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d080:	f103 0c01 	add.w	ip, r3, #1
 801d084:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d088:	b2bf      	uxth	r7, r7
 801d08a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d08e:	ea4c 0c09 	orr.w	ip, ip, r9
 801d092:	f107 0901 	add.w	r9, r7, #1
 801d096:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d09a:	097f      	lsrs	r7, r7, #5
 801d09c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0a0:	ea4c 0c07 	orr.w	ip, ip, r7
 801d0a4:	f820 cb02 	strh.w	ip, [r0], #2
 801d0a8:	e7bc      	b.n	801d024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801d0aa:	9b01      	ldr	r3, [sp, #4]
 801d0ac:	881b      	ldrh	r3, [r3, #0]
 801d0ae:	eba3 0308 	sub.w	r3, r3, r8
 801d0b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d0ba:	eba3 0308 	sub.w	r3, r3, r8
 801d0be:	441c      	add	r4, r3
 801d0c0:	e7ac      	b.n	801d01c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801d0c2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d0c6:	4282      	cmp	r2, r0
 801d0c8:	d915      	bls.n	801d0f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801d0ca:	eb00 060a 	add.w	r6, r0, sl
 801d0ce:	4286      	cmp	r6, r0
 801d0d0:	d906      	bls.n	801d0e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801d0d2:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d0d6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d0da:	f820 3b02 	strh.w	r3, [r0], #2
 801d0de:	e7f6      	b.n	801d0ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 801d0e0:	882b      	ldrh	r3, [r5, #0]
 801d0e2:	eba3 0308 	sub.w	r3, r3, r8
 801d0e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0ea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d0ee:	eba3 0308 	sub.w	r3, r3, r8
 801d0f2:	441c      	add	r4, r3
 801d0f4:	e7e7      	b.n	801d0c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801d0f6:	4b07      	ldr	r3, [pc, #28]	; (801d114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801d0f8:	6818      	ldr	r0, [r3, #0]
 801d0fa:	6803      	ldr	r3, [r0, #0]
 801d0fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0fe:	4798      	blx	r3
 801d100:	b007      	add	sp, #28
 801d102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d106:	bf00      	nop
 801d108:	0802af08 	.word	0x0802af08
 801d10c:	0802b59d 	.word	0x0802b59d
 801d110:	0802b0da 	.word	0x0802b0da
 801d114:	200279b0 	.word	0x200279b0
 801d118:	200279aa 	.word	0x200279aa

0801d11c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d120:	f8b1 9000 	ldrh.w	r9, [r1]
 801d124:	b091      	sub	sp, #68	; 0x44
 801d126:	f1b9 0f01 	cmp.w	r9, #1
 801d12a:	4604      	mov	r4, r0
 801d12c:	460f      	mov	r7, r1
 801d12e:	4690      	mov	r8, r2
 801d130:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d134:	d006      	beq.n	801d144 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801d136:	4b84      	ldr	r3, [pc, #528]	; (801d348 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801d138:	4a84      	ldr	r2, [pc, #528]	; (801d34c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801d13a:	4885      	ldr	r0, [pc, #532]	; (801d350 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801d13c:	f240 212f 	movw	r1, #559	; 0x22f
 801d140:	f008 fb3e 	bl	80257c0 <__assert_func>
 801d144:	2d00      	cmp	r5, #0
 801d146:	d04f      	beq.n	801d1e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801d148:	6810      	ldr	r0, [r2, #0]
 801d14a:	6851      	ldr	r1, [r2, #4]
 801d14c:	f8df b208 	ldr.w	fp, [pc, #520]	; 801d358 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801d150:	ae0c      	add	r6, sp, #48	; 0x30
 801d152:	c603      	stmia	r6!, {r0, r1}
 801d154:	6818      	ldr	r0, [r3, #0]
 801d156:	6859      	ldr	r1, [r3, #4]
 801d158:	ae0e      	add	r6, sp, #56	; 0x38
 801d15a:	c603      	stmia	r6!, {r0, r1}
 801d15c:	a80c      	add	r0, sp, #48	; 0x30
 801d15e:	f7f8 fb53 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d162:	4641      	mov	r1, r8
 801d164:	a80e      	add	r0, sp, #56	; 0x38
 801d166:	f7f8 fb77 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d16a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d16e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d172:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d176:	f8db 0000 	ldr.w	r0, [fp]
 801d17a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d17e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d182:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d35c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801d186:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d18a:	440c      	add	r4, r1
 801d18c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d190:	440a      	add	r2, r1
 801d192:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d196:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d19a:	4413      	add	r3, r2
 801d19c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d1a0:	6803      	ldr	r3, [r0, #0]
 801d1a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d1a4:	4798      	blx	r3
 801d1a6:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d1aa:	f8db 0000 	ldr.w	r0, [fp]
 801d1ae:	d01e      	beq.n	801d1ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 801d1b0:	2200      	movs	r2, #0
 801d1b2:	6801      	ldr	r1, [r0, #0]
 801d1b4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d1b8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d1bc:	220b      	movs	r2, #11
 801d1be:	9207      	str	r2, [sp, #28]
 801d1c0:	f8b8 2000 	ldrh.w	r2, [r8]
 801d1c4:	9504      	str	r5, [sp, #16]
 801d1c6:	e9cd 9205 	strd	r9, r2, [sp, #20]
 801d1ca:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d1ce:	9203      	str	r2, [sp, #12]
 801d1d0:	fa1f f28a 	uxth.w	r2, sl
 801d1d4:	9202      	str	r2, [sp, #8]
 801d1d6:	b2b6      	uxth	r6, r6
 801d1d8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d1dc:	9200      	str	r2, [sp, #0]
 801d1de:	9601      	str	r6, [sp, #4]
 801d1e0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d1e2:	463a      	mov	r2, r7
 801d1e4:	4621      	mov	r1, r4
 801d1e6:	47a8      	blx	r5
 801d1e8:	b011      	add	sp, #68	; 0x44
 801d1ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1ee:	6803      	ldr	r3, [r0, #0]
 801d1f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1f2:	4798      	blx	r3
 801d1f4:	f8b8 2000 	ldrh.w	r2, [r8]
 801d1f8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d1fc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d200:	2dff      	cmp	r5, #255	; 0xff
 801d202:	fb02 1303 	mla	r3, r2, r3, r1
 801d206:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d20a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d20e:	fb0a fa02 	mul.w	sl, sl, r2
 801d212:	d062      	beq.n	801d2da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 801d214:	ea6f 0c05 	mvn.w	ip, r5
 801d218:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d21c:	930a      	str	r3, [sp, #40]	; 0x28
 801d21e:	b2ad      	uxth	r5, r5
 801d220:	fa5f fc8c 	uxtb.w	ip, ip
 801d224:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d228:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d22a:	4298      	cmp	r0, r3
 801d22c:	f080 8085 	bcs.w	801d33a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801d230:	eb00 0b09 	add.w	fp, r0, r9
 801d234:	4558      	cmp	r0, fp
 801d236:	d246      	bcs.n	801d2c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d238:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d23c:	2303      	movs	r3, #3
 801d23e:	2204      	movs	r2, #4
 801d240:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d244:	eb07 0a0e 	add.w	sl, r7, lr
 801d248:	8803      	ldrh	r3, [r0, #0]
 801d24a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d24e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d252:	1219      	asrs	r1, r3, #8
 801d254:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d258:	fb18 f805 	smulbb	r8, r8, r5
 801d25c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d260:	10da      	asrs	r2, r3, #3
 801d262:	fb01 810c 	mla	r1, r1, ip, r8
 801d266:	00db      	lsls	r3, r3, #3
 801d268:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d26c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d270:	b2db      	uxtb	r3, r3
 801d272:	fb18 f805 	smulbb	r8, r8, r5
 801d276:	fb1e fe05 	smulbb	lr, lr, r5
 801d27a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d27e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d282:	b289      	uxth	r1, r1
 801d284:	fb02 820c 	mla	r2, r2, ip, r8
 801d288:	fb03 e30c 	mla	r3, r3, ip, lr
 801d28c:	b292      	uxth	r2, r2
 801d28e:	b29b      	uxth	r3, r3
 801d290:	f101 0801 	add.w	r8, r1, #1
 801d294:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d298:	f103 0e01 	add.w	lr, r3, #1
 801d29c:	f102 0801 	add.w	r8, r2, #1
 801d2a0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d2a4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d2a8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d2ac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d2b0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d2b4:	ea4e 0101 	orr.w	r1, lr, r1
 801d2b8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d2bc:	ea41 0108 	orr.w	r1, r1, r8
 801d2c0:	f820 1b02 	strh.w	r1, [r0], #2
 801d2c4:	e7b6      	b.n	801d234 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801d2c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d2c8:	881b      	ldrh	r3, [r3, #0]
 801d2ca:	1b9b      	subs	r3, r3, r6
 801d2cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d2d0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d2d4:	1b9b      	subs	r3, r3, r6
 801d2d6:	441c      	add	r4, r3
 801d2d8:	e7a6      	b.n	801d228 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801d2da:	491e      	ldr	r1, [pc, #120]	; (801d354 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801d2dc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d2e0:	2203      	movs	r2, #3
 801d2e2:	2504      	movs	r5, #4
 801d2e4:	4550      	cmp	r0, sl
 801d2e6:	d228      	bcs.n	801d33a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801d2e8:	eb00 0c09 	add.w	ip, r0, r9
 801d2ec:	4560      	cmp	r0, ip
 801d2ee:	4623      	mov	r3, r4
 801d2f0:	d219      	bcs.n	801d326 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d2f2:	f893 e000 	ldrb.w	lr, [r3]
 801d2f6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d2fa:	eb07 0b0e 	add.w	fp, r7, lr
 801d2fe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d302:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d306:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d30a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d30e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d312:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d316:	ea43 030b 	orr.w	r3, r3, fp
 801d31a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d31e:	3401      	adds	r4, #1
 801d320:	f820 3b02 	strh.w	r3, [r0], #2
 801d324:	e7e2      	b.n	801d2ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801d326:	f8b8 3000 	ldrh.w	r3, [r8]
 801d32a:	1b9b      	subs	r3, r3, r6
 801d32c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d330:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d334:	1b9b      	subs	r3, r3, r6
 801d336:	441c      	add	r4, r3
 801d338:	e7d4      	b.n	801d2e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801d33a:	4b07      	ldr	r3, [pc, #28]	; (801d358 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801d33c:	6818      	ldr	r0, [r3, #0]
 801d33e:	6803      	ldr	r3, [r0, #0]
 801d340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d342:	4798      	blx	r3
 801d344:	e750      	b.n	801d1e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801d346:	bf00      	nop
 801d348:	0802af56 	.word	0x0802af56
 801d34c:	0802b626 	.word	0x0802b626
 801d350:	0802b0da 	.word	0x0802b0da
 801d354:	fffff800 	.word	0xfffff800
 801d358:	200279b0 	.word	0x200279b0
 801d35c:	200279aa 	.word	0x200279aa

0801d360 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d360:	b430      	push	{r4, r5}
 801d362:	780d      	ldrb	r5, [r1, #0]
 801d364:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801d368:	2d01      	cmp	r5, #1
 801d36a:	d00a      	beq.n	801d382 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801d36c:	d305      	bcc.n	801d37a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801d36e:	2d02      	cmp	r5, #2
 801d370:	d10b      	bne.n	801d38a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801d372:	9402      	str	r4, [sp, #8]
 801d374:	bc30      	pop	{r4, r5}
 801d376:	f7ff bdf5 	b.w	801cf64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d37a:	9402      	str	r4, [sp, #8]
 801d37c:	bc30      	pop	{r4, r5}
 801d37e:	f7ff bcfb 	b.w	801cd78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d382:	9402      	str	r4, [sp, #8]
 801d384:	bc30      	pop	{r4, r5}
 801d386:	f7ff bec9 	b.w	801d11c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d38a:	bc30      	pop	{r4, r5}
 801d38c:	4770      	bx	lr
	...

0801d390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d394:	4604      	mov	r4, r0
 801d396:	b087      	sub	sp, #28
 801d398:	6810      	ldr	r0, [r2, #0]
 801d39a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d39e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d5d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d3a2:	460e      	mov	r6, r1
 801d3a4:	6851      	ldr	r1, [r2, #4]
 801d3a6:	ad02      	add	r5, sp, #8
 801d3a8:	c503      	stmia	r5!, {r0, r1}
 801d3aa:	6818      	ldr	r0, [r3, #0]
 801d3ac:	6859      	ldr	r1, [r3, #4]
 801d3ae:	ad04      	add	r5, sp, #16
 801d3b0:	4617      	mov	r7, r2
 801d3b2:	c503      	stmia	r5!, {r0, r1}
 801d3b4:	a802      	add	r0, sp, #8
 801d3b6:	f7f8 fa27 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3ba:	4639      	mov	r1, r7
 801d3bc:	a804      	add	r0, sp, #16
 801d3be:	f7f8 fa4b 	bl	8015858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3c2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d3c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d3ca:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d3ce:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d3d2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d3d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d3da:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d3de:	440e      	add	r6, r1
 801d3e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d3e4:	440a      	add	r2, r1
 801d3e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d3ea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d3ee:	4413      	add	r3, r2
 801d3f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d3f4:	4b77      	ldr	r3, [pc, #476]	; (801d5d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d3f6:	6818      	ldr	r0, [r3, #0]
 801d3f8:	6803      	ldr	r3, [r0, #0]
 801d3fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d3fc:	4798      	blx	r3
 801d3fe:	f8b9 b000 	ldrh.w	fp, [r9]
 801d402:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d406:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d40a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d40e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d412:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d416:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d41a:	fb05 f50b 	mul.w	r5, r5, fp
 801d41e:	9300      	str	r3, [sp, #0]
 801d420:	d069      	beq.n	801d4f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d422:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d426:	4558      	cmp	r0, fp
 801d428:	f080 80cc 	bcs.w	801d5c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d42c:	9b00      	ldr	r3, [sp, #0]
 801d42e:	18c3      	adds	r3, r0, r3
 801d430:	9301      	str	r3, [sp, #4]
 801d432:	4631      	mov	r1, r6
 801d434:	9b01      	ldr	r3, [sp, #4]
 801d436:	4298      	cmp	r0, r3
 801d438:	d24f      	bcs.n	801d4da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d43a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d43e:	2a00      	cmp	r2, #0
 801d440:	d048      	beq.n	801d4d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d442:	fb0a f202 	mul.w	r2, sl, r2
 801d446:	1c53      	adds	r3, r2, #1
 801d448:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d44c:	121b      	asrs	r3, r3, #8
 801d44e:	d041      	beq.n	801d4d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d450:	8802      	ldrh	r2, [r0, #0]
 801d452:	f8b4 c000 	ldrh.w	ip, [r4]
 801d456:	b29e      	uxth	r6, r3
 801d458:	1215      	asrs	r5, r2, #8
 801d45a:	43db      	mvns	r3, r3
 801d45c:	b2db      	uxtb	r3, r3
 801d45e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d462:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d466:	fb15 f503 	smulbb	r5, r5, r3
 801d46a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d46e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d472:	00d2      	lsls	r2, r2, #3
 801d474:	fb07 5706 	mla	r7, r7, r6, r5
 801d478:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d47c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d480:	b2d2      	uxtb	r2, r2
 801d482:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d486:	b2bf      	uxth	r7, r7
 801d488:	fb1e fe03 	smulbb	lr, lr, r3
 801d48c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d490:	fa5f fc8c 	uxtb.w	ip, ip
 801d494:	fb12 f203 	smulbb	r2, r2, r3
 801d498:	fb05 e506 	mla	r5, r5, r6, lr
 801d49c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d4a0:	f107 0e01 	add.w	lr, r7, #1
 801d4a4:	fa1f fc8c 	uxth.w	ip, ip
 801d4a8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d4ac:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d4b0:	f10c 0701 	add.w	r7, ip, #1
 801d4b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d4b8:	b2ad      	uxth	r5, r5
 801d4ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d4be:	ea47 070e 	orr.w	r7, r7, lr
 801d4c2:	f105 0e01 	add.w	lr, r5, #1
 801d4c6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d4ca:	096d      	lsrs	r5, r5, #5
 801d4cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d4d0:	432f      	orrs	r7, r5
 801d4d2:	8007      	strh	r7, [r0, #0]
 801d4d4:	3002      	adds	r0, #2
 801d4d6:	3402      	adds	r4, #2
 801d4d8:	e7ac      	b.n	801d434 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d4da:	f8b9 3000 	ldrh.w	r3, [r9]
 801d4de:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d4e2:	eba3 0308 	sub.w	r3, r3, r8
 801d4e6:	eba6 0608 	sub.w	r6, r6, r8
 801d4ea:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d4ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d4f2:	440e      	add	r6, r1
 801d4f4:	e797      	b.n	801d426 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d4f6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d4fa:	42a8      	cmp	r0, r5
 801d4fc:	d262      	bcs.n	801d5c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d4fe:	9b00      	ldr	r3, [sp, #0]
 801d500:	4631      	mov	r1, r6
 801d502:	eb00 0b03 	add.w	fp, r0, r3
 801d506:	4558      	cmp	r0, fp
 801d508:	d24e      	bcs.n	801d5a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d50a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d50e:	b12b      	cbz	r3, 801d51c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d510:	2bff      	cmp	r3, #255	; 0xff
 801d512:	f8b4 e000 	ldrh.w	lr, [r4]
 801d516:	d104      	bne.n	801d522 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d518:	f8a0 e000 	strh.w	lr, [r0]
 801d51c:	3002      	adds	r0, #2
 801d51e:	3402      	adds	r4, #2
 801d520:	e7f1      	b.n	801d506 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d522:	8802      	ldrh	r2, [r0, #0]
 801d524:	b29f      	uxth	r7, r3
 801d526:	1216      	asrs	r6, r2, #8
 801d528:	43db      	mvns	r3, r3
 801d52a:	b2db      	uxtb	r3, r3
 801d52c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d530:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d534:	fb16 f603 	smulbb	r6, r6, r3
 801d538:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d53c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d540:	00d2      	lsls	r2, r2, #3
 801d542:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d546:	b2d2      	uxtb	r2, r2
 801d548:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d54c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d550:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d554:	fb1a fa03 	smulbb	sl, sl, r3
 801d558:	fa1f fc8c 	uxth.w	ip, ip
 801d55c:	fb12 f303 	smulbb	r3, r2, r3
 801d560:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d564:	fa5f fe8e 	uxtb.w	lr, lr
 801d568:	fb06 a607 	mla	r6, r6, r7, sl
 801d56c:	f10c 0201 	add.w	r2, ip, #1
 801d570:	fb0e 3307 	mla	r3, lr, r7, r3
 801d574:	b2b6      	uxth	r6, r6
 801d576:	b29b      	uxth	r3, r3
 801d578:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d57c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d580:	f106 0a01 	add.w	sl, r6, #1
 801d584:	f103 0c01 	add.w	ip, r3, #1
 801d588:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d58c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d590:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d594:	0976      	lsrs	r6, r6, #5
 801d596:	ea4c 0c02 	orr.w	ip, ip, r2
 801d59a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d59e:	ea4c 0c06 	orr.w	ip, ip, r6
 801d5a2:	f8a0 c000 	strh.w	ip, [r0]
 801d5a6:	e7b9      	b.n	801d51c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d5a8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d5ac:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d5b0:	eba3 0308 	sub.w	r3, r3, r8
 801d5b4:	eba6 0608 	sub.w	r6, r6, r8
 801d5b8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d5bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5c0:	440e      	add	r6, r1
 801d5c2:	e79a      	b.n	801d4fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d5c4:	4b03      	ldr	r3, [pc, #12]	; (801d5d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d5c6:	6818      	ldr	r0, [r3, #0]
 801d5c8:	6803      	ldr	r3, [r0, #0]
 801d5ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5cc:	4798      	blx	r3
 801d5ce:	b007      	add	sp, #28
 801d5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5d4:	200279b0 	.word	0x200279b0
 801d5d8:	200279aa 	.word	0x200279aa

0801d5dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5e0:	b089      	sub	sp, #36	; 0x24
 801d5e2:	4682      	mov	sl, r0
 801d5e4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d5e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d5ea:	460f      	mov	r7, r1
 801d5ec:	4691      	mov	r9, r2
 801d5ee:	4698      	mov	r8, r3
 801d5f0:	2e00      	cmp	r6, #0
 801d5f2:	d03d      	beq.n	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d5f4:	4608      	mov	r0, r1
 801d5f6:	f7fc f859 	bl	80196ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d5fa:	4605      	mov	r5, r0
 801d5fc:	4638      	mov	r0, r7
 801d5fe:	f7fc f88f 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d602:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d606:	4638      	mov	r0, r7
 801d608:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d60c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d610:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d614:	f7fc f952 	bl	80198bc <_ZNK8touchgfx6Bitmap7getDataEv>
 801d618:	4605      	mov	r5, r0
 801d61a:	4638      	mov	r0, r7
 801d61c:	f7fc f980 	bl	8019920 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d620:	4681      	mov	r9, r0
 801d622:	4638      	mov	r0, r7
 801d624:	f7fc f9d4 	bl	80199d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d628:	280b      	cmp	r0, #11
 801d62a:	f200 816f 	bhi.w	801d90c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 801d62e:	e8df f010 	tbh	[pc, r0, lsl #1]
 801d632:	00c3      	.short	0x00c3
 801d634:	000c00b4 	.word	0x000c00b4
 801d638:	016d016d 	.word	0x016d016d
 801d63c:	016d016d 	.word	0x016d016d
 801d640:	016d016d 	.word	0x016d016d
 801d644:	016d016d 	.word	0x016d016d
 801d648:	00bb      	.short	0x00bb
 801d64a:	4bb3      	ldr	r3, [pc, #716]	; (801d918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 801d64c:	6818      	ldr	r0, [r3, #0]
 801d64e:	6803      	ldr	r3, [r0, #0]
 801d650:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d652:	4798      	blx	r3
 801d654:	2eff      	cmp	r6, #255	; 0xff
 801d656:	d121      	bne.n	801d69c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801d658:	0683      	lsls	r3, r0, #26
 801d65a:	d41f      	bmi.n	801d69c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801d65c:	4638      	mov	r0, r7
 801d65e:	f7fc f8f3 	bl	8019848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d662:	b940      	cbnz	r0, 801d676 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d664:	4623      	mov	r3, r4
 801d666:	aa02      	add	r2, sp, #8
 801d668:	4629      	mov	r1, r5
 801d66a:	4650      	mov	r0, sl
 801d66c:	f7ff f9e4 	bl	801ca38 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d670:	b009      	add	sp, #36	; 0x24
 801d672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d676:	f10d 0818 	add.w	r8, sp, #24
 801d67a:	4639      	mov	r1, r7
 801d67c:	4640      	mov	r0, r8
 801d67e:	f7fc f889 	bl	8019794 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d682:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d686:	af04      	add	r7, sp, #16
 801d688:	e887 0003 	stmia.w	r7, {r0, r1}
 801d68c:	4638      	mov	r0, r7
 801d68e:	4621      	mov	r1, r4
 801d690:	f7f4 fa42 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801d694:	4638      	mov	r0, r7
 801d696:	f7f4 fa82 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801d69a:	b130      	cbz	r0, 801d6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 801d69c:	4633      	mov	r3, r6
 801d69e:	4622      	mov	r2, r4
 801d6a0:	a902      	add	r1, sp, #8
 801d6a2:	4628      	mov	r0, r5
 801d6a4:	f7ff f8e2 	bl	801c86c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d6a8:	e7e2      	b.n	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d6aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d6ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d6b2:	4293      	cmp	r3, r2
 801d6b4:	dd12      	ble.n	801d6dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 801d6b6:	1a9b      	subs	r3, r3, r2
 801d6b8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d6bc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d6c0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d6c4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d6c8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d6cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d6d0:	4642      	mov	r2, r8
 801d6d2:	4633      	mov	r3, r6
 801d6d4:	a902      	add	r1, sp, #8
 801d6d6:	4628      	mov	r0, r5
 801d6d8:	f7ff f8c8 	bl	801c86c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d6dc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d6e0:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d6e4:	4293      	cmp	r3, r2
 801d6e6:	dd12      	ble.n	801d70e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 801d6e8:	1a9b      	subs	r3, r3, r2
 801d6ea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d6ee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d6f2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d6f6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d6fa:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d6fe:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d702:	23ff      	movs	r3, #255	; 0xff
 801d704:	4642      	mov	r2, r8
 801d706:	a902      	add	r1, sp, #8
 801d708:	4628      	mov	r0, r5
 801d70a:	f7ff f8af 	bl	801c86c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d70e:	463b      	mov	r3, r7
 801d710:	aa02      	add	r2, sp, #8
 801d712:	4629      	mov	r1, r5
 801d714:	4650      	mov	r0, sl
 801d716:	f7ff f98f 	bl	801ca38 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d71a:	88a2      	ldrh	r2, [r4, #4]
 801d71c:	8823      	ldrh	r3, [r4, #0]
 801d71e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d722:	4413      	add	r3, r2
 801d724:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d728:	440a      	add	r2, r1
 801d72a:	b29b      	uxth	r3, r3
 801d72c:	b292      	uxth	r2, r2
 801d72e:	b211      	sxth	r1, r2
 801d730:	b218      	sxth	r0, r3
 801d732:	4288      	cmp	r0, r1
 801d734:	dd12      	ble.n	801d75c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 801d736:	1a9b      	subs	r3, r3, r2
 801d738:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d73c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d740:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d744:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d748:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d74c:	23ff      	movs	r3, #255	; 0xff
 801d74e:	4642      	mov	r2, r8
 801d750:	a902      	add	r1, sp, #8
 801d752:	4628      	mov	r0, r5
 801d754:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d758:	f7ff f888 	bl	801c86c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d75c:	88e2      	ldrh	r2, [r4, #6]
 801d75e:	8863      	ldrh	r3, [r4, #2]
 801d760:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d764:	4413      	add	r3, r2
 801d766:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d76a:	440a      	add	r2, r1
 801d76c:	b29b      	uxth	r3, r3
 801d76e:	b292      	uxth	r2, r2
 801d770:	b211      	sxth	r1, r2
 801d772:	b218      	sxth	r0, r3
 801d774:	4288      	cmp	r0, r1
 801d776:	f77f af7b 	ble.w	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d77a:	1a9b      	subs	r3, r3, r2
 801d77c:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d780:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d784:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d788:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d78c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d790:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d794:	23ff      	movs	r3, #255	; 0xff
 801d796:	4642      	mov	r2, r8
 801d798:	e782      	b.n	801d6a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 801d79a:	4633      	mov	r3, r6
 801d79c:	4622      	mov	r2, r4
 801d79e:	a902      	add	r1, sp, #8
 801d7a0:	4628      	mov	r0, r5
 801d7a2:	f7ff f9b9 	bl	801cb18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d7a6:	e763      	b.n	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7a8:	9600      	str	r6, [sp, #0]
 801d7aa:	4623      	mov	r3, r4
 801d7ac:	aa02      	add	r2, sp, #8
 801d7ae:	4649      	mov	r1, r9
 801d7b0:	4628      	mov	r0, r5
 801d7b2:	f7ff fdd5 	bl	801d360 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d7b6:	e75b      	b.n	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7b8:	4638      	mov	r0, r7
 801d7ba:	f7fc f845 	bl	8019848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d7be:	b950      	cbnz	r0, 801d7d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 801d7c0:	e9cd 6000 	strd	r6, r0, [sp]
 801d7c4:	f8da 3000 	ldr.w	r3, [sl]
 801d7c8:	aa02      	add	r2, sp, #8
 801d7ca:	68de      	ldr	r6, [r3, #12]
 801d7cc:	4629      	mov	r1, r5
 801d7ce:	4623      	mov	r3, r4
 801d7d0:	4650      	mov	r0, sl
 801d7d2:	47b0      	blx	r6
 801d7d4:	e74c      	b.n	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7d6:	f10d 0818 	add.w	r8, sp, #24
 801d7da:	4639      	mov	r1, r7
 801d7dc:	4640      	mov	r0, r8
 801d7de:	f7fb ffd9 	bl	8019794 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d7e2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d7e6:	af04      	add	r7, sp, #16
 801d7e8:	e887 0003 	stmia.w	r7, {r0, r1}
 801d7ec:	4638      	mov	r0, r7
 801d7ee:	4621      	mov	r1, r4
 801d7f0:	f7f4 f992 	bl	8011b18 <_ZN8touchgfx4RectaNERKS0_>
 801d7f4:	4638      	mov	r0, r7
 801d7f6:	f7f4 f9d2 	bl	8011b9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801d7fa:	b138      	cbz	r0, 801d80c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801d7fc:	9600      	str	r6, [sp, #0]
 801d7fe:	4623      	mov	r3, r4
 801d800:	aa02      	add	r2, sp, #8
 801d802:	4649      	mov	r1, r9
 801d804:	4628      	mov	r0, r5
 801d806:	f7ff fdc3 	bl	801d390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d80a:	e731      	b.n	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d80c:	e9cd 6000 	strd	r6, r0, [sp]
 801d810:	f8da 3000 	ldr.w	r3, [sl]
 801d814:	aa02      	add	r2, sp, #8
 801d816:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d81a:	4629      	mov	r1, r5
 801d81c:	463b      	mov	r3, r7
 801d81e:	4650      	mov	r0, sl
 801d820:	47d8      	blx	fp
 801d822:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d826:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d82a:	4293      	cmp	r3, r2
 801d82c:	dd13      	ble.n	801d856 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 801d82e:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d832:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d836:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d83a:	1a9b      	subs	r3, r3, r2
 801d83c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d840:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d844:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d848:	9600      	str	r6, [sp, #0]
 801d84a:	4643      	mov	r3, r8
 801d84c:	aa02      	add	r2, sp, #8
 801d84e:	4649      	mov	r1, r9
 801d850:	4628      	mov	r0, r5
 801d852:	f7ff fd9d 	bl	801d390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d856:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d85a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d85e:	4293      	cmp	r3, r2
 801d860:	dd13      	ble.n	801d88a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 801d862:	1a9b      	subs	r3, r3, r2
 801d864:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d868:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d86c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d870:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d874:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d878:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d87c:	9600      	str	r6, [sp, #0]
 801d87e:	4643      	mov	r3, r8
 801d880:	aa02      	add	r2, sp, #8
 801d882:	4649      	mov	r1, r9
 801d884:	4628      	mov	r0, r5
 801d886:	f7ff fd83 	bl	801d390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d88a:	88a2      	ldrh	r2, [r4, #4]
 801d88c:	8823      	ldrh	r3, [r4, #0]
 801d88e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d892:	4413      	add	r3, r2
 801d894:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d898:	440a      	add	r2, r1
 801d89a:	b29b      	uxth	r3, r3
 801d89c:	b292      	uxth	r2, r2
 801d89e:	b211      	sxth	r1, r2
 801d8a0:	b218      	sxth	r0, r3
 801d8a2:	4288      	cmp	r0, r1
 801d8a4:	dd13      	ble.n	801d8ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 801d8a6:	1a9b      	subs	r3, r3, r2
 801d8a8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d8ac:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d8b0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d8b4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d8b8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d8bc:	9600      	str	r6, [sp, #0]
 801d8be:	4643      	mov	r3, r8
 801d8c0:	aa02      	add	r2, sp, #8
 801d8c2:	4649      	mov	r1, r9
 801d8c4:	4628      	mov	r0, r5
 801d8c6:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d8ca:	f7ff fd61 	bl	801d390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d8ce:	88e2      	ldrh	r2, [r4, #6]
 801d8d0:	8863      	ldrh	r3, [r4, #2]
 801d8d2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d8d6:	4413      	add	r3, r2
 801d8d8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d8dc:	440a      	add	r2, r1
 801d8de:	b29b      	uxth	r3, r3
 801d8e0:	b292      	uxth	r2, r2
 801d8e2:	b211      	sxth	r1, r2
 801d8e4:	b218      	sxth	r0, r3
 801d8e6:	4288      	cmp	r0, r1
 801d8e8:	f77f aec2 	ble.w	801d670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8ec:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d8f0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d8f4:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d8f8:	1a9b      	subs	r3, r3, r2
 801d8fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d8fe:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d902:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d906:	9600      	str	r6, [sp, #0]
 801d908:	4643      	mov	r3, r8
 801d90a:	e779      	b.n	801d800 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d90c:	4b03      	ldr	r3, [pc, #12]	; (801d91c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 801d90e:	4a04      	ldr	r2, [pc, #16]	; (801d920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 801d910:	4804      	ldr	r0, [pc, #16]	; (801d924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 801d912:	21b4      	movs	r1, #180	; 0xb4
 801d914:	f007 ff54 	bl	80257c0 <__assert_func>
 801d918:	200279b0 	.word	0x200279b0
 801d91c:	0802afa4 	.word	0x0802afa4
 801d920:	0802b6af 	.word	0x0802b6af
 801d924:	0802b0da 	.word	0x0802b0da

0801d928 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d928:	b508      	push	{r3, lr}
 801d92a:	b180      	cbz	r0, 801d94e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801d92c:	2902      	cmp	r1, #2
 801d92e:	d014      	beq.n	801d95a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801d930:	2903      	cmp	r1, #3
 801d932:	d01d      	beq.n	801d970 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801d934:	2901      	cmp	r1, #1
 801d936:	d101      	bne.n	801d93c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801d938:	2001      	movs	r0, #1
 801d93a:	bd08      	pop	{r3, pc}
 801d93c:	4b0e      	ldr	r3, [pc, #56]	; (801d978 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d93e:	8818      	ldrh	r0, [r3, #0]
 801d940:	b990      	cbnz	r0, 801d968 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d942:	4b0e      	ldr	r3, [pc, #56]	; (801d97c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801d944:	4a0e      	ldr	r2, [pc, #56]	; (801d980 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801d946:	480f      	ldr	r0, [pc, #60]	; (801d984 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801d948:	2150      	movs	r1, #80	; 0x50
 801d94a:	f007 ff39 	bl	80257c0 <__assert_func>
 801d94e:	2902      	cmp	r1, #2
 801d950:	d00e      	beq.n	801d970 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801d952:	2903      	cmp	r1, #3
 801d954:	d0f2      	beq.n	801d93c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801d956:	2901      	cmp	r1, #1
 801d958:	d1ee      	bne.n	801d938 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801d95a:	4b07      	ldr	r3, [pc, #28]	; (801d978 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d95c:	8818      	ldrh	r0, [r3, #0]
 801d95e:	2800      	cmp	r0, #0
 801d960:	d0ef      	beq.n	801d942 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801d962:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d966:	e7e8      	b.n	801d93a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801d968:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d96c:	4240      	negs	r0, r0
 801d96e:	e7e4      	b.n	801d93a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801d970:	f04f 30ff 	mov.w	r0, #4294967295
 801d974:	e7e1      	b.n	801d93a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801d976:	bf00      	nop
 801d978:	200279aa 	.word	0x200279aa
 801d97c:	0802b230 	.word	0x0802b230
 801d980:	0802b82c 	.word	0x0802b82c
 801d984:	0802b272 	.word	0x0802b272

0801d988 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d988:	b508      	push	{r3, lr}
 801d98a:	b180      	cbz	r0, 801d9ae <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801d98c:	2902      	cmp	r1, #2
 801d98e:	d014      	beq.n	801d9ba <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 801d990:	2903      	cmp	r1, #3
 801d992:	d018      	beq.n	801d9c6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801d994:	2901      	cmp	r1, #1
 801d996:	d001      	beq.n	801d99c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801d998:	2001      	movs	r0, #1
 801d99a:	e013      	b.n	801d9c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801d99c:	4b0e      	ldr	r3, [pc, #56]	; (801d9d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d99e:	8818      	ldrh	r0, [r3, #0]
 801d9a0:	b970      	cbnz	r0, 801d9c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801d9a2:	4b0e      	ldr	r3, [pc, #56]	; (801d9dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801d9a4:	4a0e      	ldr	r2, [pc, #56]	; (801d9e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801d9a6:	480f      	ldr	r0, [pc, #60]	; (801d9e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801d9a8:	2150      	movs	r1, #80	; 0x50
 801d9aa:	f007 ff09 	bl	80257c0 <__assert_func>
 801d9ae:	2902      	cmp	r1, #2
 801d9b0:	d009      	beq.n	801d9c6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801d9b2:	2903      	cmp	r1, #3
 801d9b4:	d0f0      	beq.n	801d998 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801d9b6:	2901      	cmp	r1, #1
 801d9b8:	d1f0      	bne.n	801d99c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801d9ba:	f04f 30ff 	mov.w	r0, #4294967295
 801d9be:	e001      	b.n	801d9c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801d9c0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d9c4:	bd08      	pop	{r3, pc}
 801d9c6:	4b04      	ldr	r3, [pc, #16]	; (801d9d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d9c8:	8818      	ldrh	r0, [r3, #0]
 801d9ca:	2800      	cmp	r0, #0
 801d9cc:	d0e9      	beq.n	801d9a2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801d9ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d9d2:	4240      	negs	r0, r0
 801d9d4:	e7f6      	b.n	801d9c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801d9d6:	bf00      	nop
 801d9d8:	200279aa 	.word	0x200279aa
 801d9dc:	0802b230 	.word	0x0802b230
 801d9e0:	0802b82c 	.word	0x0802b82c
 801d9e4:	0802b272 	.word	0x0802b272

0801d9e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9ec:	b099      	sub	sp, #100	; 0x64
 801d9ee:	910b      	str	r1, [sp, #44]	; 0x2c
 801d9f0:	a914      	add	r1, sp, #80	; 0x50
 801d9f2:	e881 000c 	stmia.w	r1, {r2, r3}
 801d9f6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d9fa:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801d9fe:	930a      	str	r3, [sp, #40]	; 0x28
 801da00:	f891 900d 	ldrb.w	r9, [r1, #13]
 801da04:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801da08:	9311      	str	r3, [sp, #68]	; 0x44
 801da0a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801da0e:	930c      	str	r3, [sp, #48]	; 0x30
 801da10:	7988      	ldrb	r0, [r1, #6]
 801da12:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 801da16:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801da1a:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801da1e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801da22:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801da26:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801da2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801da2e:	4303      	orrs	r3, r0
 801da30:	9309      	str	r3, [sp, #36]	; 0x24
 801da32:	f000 81a1 	beq.w	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801da36:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801da3a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801da3e:	f891 9007 	ldrb.w	r9, [r1, #7]
 801da42:	ea59 0903 	orrs.w	r9, r9, r3
 801da46:	f000 8197 	beq.w	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801da4a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801da4e:	b29b      	uxth	r3, r3
 801da50:	2e00      	cmp	r6, #0
 801da52:	f000 813a 	beq.w	801dcca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801da56:	1af6      	subs	r6, r6, r3
 801da58:	b2b6      	uxth	r6, r6
 801da5a:	0433      	lsls	r3, r6, #16
 801da5c:	d502      	bpl.n	801da64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801da5e:	1bad      	subs	r5, r5, r6
 801da60:	b22d      	sxth	r5, r5
 801da62:	2600      	movs	r6, #0
 801da64:	f9b2 1000 	ldrsh.w	r1, [r2]
 801da68:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801da6c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801da70:	428d      	cmp	r5, r1
 801da72:	b28b      	uxth	r3, r1
 801da74:	bfbf      	itttt	lt
 801da76:	18f6      	addlt	r6, r6, r3
 801da78:	1b75      	sublt	r5, r6, r5
 801da7a:	b2ae      	uxthlt	r6, r5
 801da7c:	460d      	movlt	r5, r1
 801da7e:	8891      	ldrh	r1, [r2, #4]
 801da80:	440b      	add	r3, r1
 801da82:	b21b      	sxth	r3, r3
 801da84:	9310      	str	r3, [sp, #64]	; 0x40
 801da86:	88d3      	ldrh	r3, [r2, #6]
 801da88:	8852      	ldrh	r2, [r2, #2]
 801da8a:	4413      	add	r3, r2
 801da8c:	b21b      	sxth	r3, r3
 801da8e:	930f      	str	r3, [sp, #60]	; 0x3c
 801da90:	4bbc      	ldr	r3, [pc, #752]	; (801dd84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801da92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801da94:	f893 b000 	ldrb.w	fp, [r3]
 801da98:	f10b 3cff 	add.w	ip, fp, #4294967295
 801da9c:	f1dc 0300 	rsbs	r3, ip, #0
 801daa0:	eb43 030c 	adc.w	r3, r3, ip
 801daa4:	930e      	str	r3, [sp, #56]	; 0x38
 801daa6:	4629      	mov	r1, r5
 801daa8:	4653      	mov	r3, sl
 801daaa:	a814      	add	r0, sp, #80	; 0x50
 801daac:	f7f7 fd31 	bl	8015512 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dab0:	4629      	mov	r1, r5
 801dab2:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801dab6:	4653      	mov	r3, sl
 801dab8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801daba:	a814      	add	r0, sp, #80	; 0x50
 801dabc:	f7f7 fd41 	bl	8015542 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dac0:	a918      	add	r1, sp, #96	; 0x60
 801dac2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dac6:	a817      	add	r0, sp, #92	; 0x5c
 801dac8:	f7f7 fe5c 	bl	8015784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dacc:	f1ba 0f00 	cmp.w	sl, #0
 801dad0:	f040 80fe 	bne.w	801dcd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 801dad4:	f1bb 0f01 	cmp.w	fp, #1
 801dad8:	f040 8102 	bne.w	801dce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 801dadc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dade:	b153      	cbz	r3, 801daf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801dae0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dae2:	2408      	movs	r4, #8
 801dae4:	fb94 f3f8 	sdiv	r3, r4, r8
 801dae8:	1e5c      	subs	r4, r3, #1
 801daea:	4414      	add	r4, r2
 801daec:	fb94 f4f3 	sdiv	r4, r4, r3
 801daf0:	fb14 f403 	smulbb	r4, r4, r3
 801daf4:	b2a4      	uxth	r4, r4
 801daf6:	b906      	cbnz	r6, 801dafa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801daf8:	b16f      	cbz	r7, 801db16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 801dafa:	fb07 6304 	mla	r3, r7, r4, r6
 801dafe:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801db00:	fb08 f303 	mul.w	r3, r8, r3
 801db04:	463a      	mov	r2, r7
 801db06:	f003 0707 	and.w	r7, r3, #7
 801db0a:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801db0e:	9328      	str	r3, [sp, #160]	; 0xa0
 801db10:	eba9 0302 	sub.w	r3, r9, r2
 801db14:	930d      	str	r3, [sp, #52]	; 0x34
 801db16:	4651      	mov	r1, sl
 801db18:	980e      	ldr	r0, [sp, #56]	; 0x38
 801db1a:	f7ff ff05 	bl	801d928 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801db1e:	4651      	mov	r1, sl
 801db20:	4681      	mov	r9, r0
 801db22:	980e      	ldr	r0, [sp, #56]	; 0x38
 801db24:	f7ff ff30 	bl	801d988 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801db28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801db2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801db2c:	eba3 0a02 	sub.w	sl, r3, r2
 801db30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db32:	459a      	cmp	sl, r3
 801db34:	bfa8      	it	ge
 801db36:	469a      	movge	sl, r3
 801db38:	f1ba 0f00 	cmp.w	sl, #0
 801db3c:	4683      	mov	fp, r0
 801db3e:	f340 811b 	ble.w	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801db42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db44:	1bad      	subs	r5, r5, r6
 801db46:	1b5d      	subs	r5, r3, r5
 801db48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801db4a:	429d      	cmp	r5, r3
 801db4c:	bfd4      	ite	le
 801db4e:	ebc6 0605 	rsble	r6, r6, r5
 801db52:	ebc6 0603 	rsbgt	r6, r6, r3
 801db56:	2e00      	cmp	r6, #0
 801db58:	f340 810e 	ble.w	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801db5c:	1ba4      	subs	r4, r4, r6
 801db5e:	fb08 f304 	mul.w	r3, r8, r4
 801db62:	930f      	str	r3, [sp, #60]	; 0x3c
 801db64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801db66:	2b00      	cmp	r3, #0
 801db68:	f040 8114 	bne.w	801dd94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801db6c:	4b86      	ldr	r3, [pc, #536]	; (801dd88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801db6e:	6818      	ldr	r0, [r3, #0]
 801db70:	6803      	ldr	r3, [r0, #0]
 801db72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db74:	4798      	blx	r3
 801db76:	2301      	movs	r3, #1
 801db78:	fa03 f308 	lsl.w	r3, r3, r8
 801db7c:	4a83      	ldr	r2, [pc, #524]	; (801dd8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801db7e:	3b01      	subs	r3, #1
 801db80:	b2db      	uxtb	r3, r3
 801db82:	8811      	ldrh	r1, [r2, #0]
 801db84:	930e      	str	r3, [sp, #56]	; 0x38
 801db86:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801db8a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801db8e:	fb01 2303 	mla	r3, r1, r3, r2
 801db92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801db96:	930a      	str	r3, [sp, #40]	; 0x28
 801db98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801db9a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801db9e:	9313      	str	r3, [sp, #76]	; 0x4c
 801dba0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dba2:	0a19      	lsrs	r1, r3, #8
 801dba4:	b2cb      	uxtb	r3, r1
 801dba6:	9312      	str	r3, [sp, #72]	; 0x48
 801dba8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbaa:	b2db      	uxtb	r3, r3
 801dbac:	9311      	str	r3, [sp, #68]	; 0x44
 801dbae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbb0:	095a      	lsrs	r2, r3, #5
 801dbb2:	4b77      	ldr	r3, [pc, #476]	; (801dd90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dbb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dbb8:	400b      	ands	r3, r1
 801dbba:	4313      	orrs	r3, r2
 801dbbc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801dbbe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dbc2:	4313      	orrs	r3, r2
 801dbc4:	b29b      	uxth	r3, r3
 801dbc6:	9310      	str	r3, [sp, #64]	; 0x40
 801dbc8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dbca:	781a      	ldrb	r2, [r3, #0]
 801dbcc:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dbd0:	413a      	asrs	r2, r7
 801dbd2:	fb06 b919 	mls	r9, r6, r9, fp
 801dbd6:	fb03 fb06 	mul.w	fp, r3, r6
 801dbda:	b2d2      	uxtb	r2, r2
 801dbdc:	930d      	str	r3, [sp, #52]	; 0x34
 801dbde:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dbe2:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dbe6:	f0c0 80ea 	bcc.w	801ddbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 801dbea:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dbee:	46b6      	mov	lr, r6
 801dbf0:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dbf4:	f0c0 80d2 	bcc.w	801dd9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801dbf8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dbfa:	4013      	ands	r3, r2
 801dbfc:	d055      	beq.n	801dcaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 801dbfe:	20ff      	movs	r0, #255	; 0xff
 801dc00:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dc02:	fb90 f1f1 	sdiv	r1, r0, r1
 801dc06:	434b      	muls	r3, r1
 801dc08:	2bfe      	cmp	r3, #254	; 0xfe
 801dc0a:	dd03      	ble.n	801dc14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 801dc0c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dc0e:	4281      	cmp	r1, r0
 801dc10:	f000 80c2 	beq.w	801dd98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dc14:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dc16:	f8bc 4000 	ldrh.w	r4, [ip]
 801dc1a:	fb11 f303 	smulbb	r3, r1, r3
 801dc1e:	b29b      	uxth	r3, r3
 801dc20:	1c59      	adds	r1, r3, #1
 801dc22:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dc26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dc2a:	b29d      	uxth	r5, r3
 801dc2c:	43db      	mvns	r3, r3
 801dc2e:	b2db      	uxtb	r3, r3
 801dc30:	9309      	str	r3, [sp, #36]	; 0x24
 801dc32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dc34:	1220      	asrs	r0, r4, #8
 801dc36:	fb13 f905 	smulbb	r9, r3, r5
 801dc3a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dc3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc40:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dc44:	fb00 9003 	mla	r0, r0, r3, r9
 801dc48:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dc4a:	10e1      	asrs	r1, r4, #3
 801dc4c:	fb13 f905 	smulbb	r9, r3, r5
 801dc50:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dc54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc56:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dc5a:	fb01 9103 	mla	r1, r1, r3, r9
 801dc5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dc60:	00e4      	lsls	r4, r4, #3
 801dc62:	fb13 f505 	smulbb	r5, r3, r5
 801dc66:	b2e4      	uxtb	r4, r4
 801dc68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc6a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dc6e:	fb04 5403 	mla	r4, r4, r3, r5
 801dc72:	b280      	uxth	r0, r0
 801dc74:	b2a4      	uxth	r4, r4
 801dc76:	1c43      	adds	r3, r0, #1
 801dc78:	f104 0901 	add.w	r9, r4, #1
 801dc7c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dc80:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dc84:	b289      	uxth	r1, r1
 801dc86:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dc8a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dc8e:	ea49 0000 	orr.w	r0, r9, r0
 801dc92:	f101 0901 	add.w	r9, r1, #1
 801dc96:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dc9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dc9e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dca2:	ea40 0009 	orr.w	r0, r0, r9
 801dca6:	f8ac 0000 	strh.w	r0, [ip]
 801dcaa:	4447      	add	r7, r8
 801dcac:	b2bf      	uxth	r7, r7
 801dcae:	2f07      	cmp	r7, #7
 801dcb0:	bf81      	itttt	hi
 801dcb2:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801dcb4:	785a      	ldrbhi	r2, [r3, #1]
 801dcb6:	3301      	addhi	r3, #1
 801dcb8:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801dcba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dcbc:	bf9a      	itte	ls
 801dcbe:	fa42 f208 	asrls.w	r2, r2, r8
 801dcc2:	b2d2      	uxtbls	r2, r2
 801dcc4:	2700      	movhi	r7, #0
 801dcc6:	449c      	add	ip, r3
 801dcc8:	e792      	b.n	801dbf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801dcca:	441d      	add	r5, r3
 801dccc:	b22d      	sxth	r5, r5
 801dcce:	e6c9      	b.n	801da64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801dcd0:	f1ba 0f01 	cmp.w	sl, #1
 801dcd4:	f47f af02 	bne.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801dcd8:	f1bb 0f01 	cmp.w	fp, #1
 801dcdc:	f47f aefe 	bne.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801dce0:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801dd88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801dce4:	f8db 0000 	ldr.w	r0, [fp]
 801dce8:	6803      	ldr	r3, [r0, #0]
 801dcea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dcec:	4798      	blx	r3
 801dcee:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801dcf2:	465a      	mov	r2, fp
 801dcf4:	d006      	beq.n	801dd04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801dcf6:	f1b8 0f04 	cmp.w	r8, #4
 801dcfa:	d140      	bne.n	801dd7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dcfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dcfe:	3300      	adds	r3, #0
 801dd00:	bf18      	it	ne
 801dd02:	2301      	movne	r3, #1
 801dd04:	0580      	lsls	r0, r0, #22
 801dd06:	d563      	bpl.n	801ddd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801dd08:	f1b8 0f08 	cmp.w	r8, #8
 801dd0c:	d160      	bne.n	801ddd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801dd0e:	2b00      	cmp	r3, #0
 801dd10:	bf0c      	ite	eq
 801dd12:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801dd16:	f44f 7180 	movne.w	r1, #256	; 0x100
 801dd1a:	2e00      	cmp	r6, #0
 801dd1c:	f47f aede 	bne.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801dd20:	2f00      	cmp	r7, #0
 801dd22:	f47f aedb 	bne.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801dd26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd28:	9810      	ldr	r0, [sp, #64]	; 0x40
 801dd2a:	18eb      	adds	r3, r5, r3
 801dd2c:	4283      	cmp	r3, r0
 801dd2e:	f73f aed5 	bgt.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801dd32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dd34:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801dd36:	444b      	add	r3, r9
 801dd38:	4283      	cmp	r3, r0
 801dd3a:	f73f aecf 	bgt.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801dd3e:	6810      	ldr	r0, [r2, #0]
 801dd40:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801dd44:	6805      	ldr	r5, [r0, #0]
 801dd46:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801dd4a:	f1b8 0f08 	cmp.w	r8, #8
 801dd4e:	f04f 0600 	mov.w	r6, #0
 801dd52:	bf18      	it	ne
 801dd54:	3401      	addne	r4, #1
 801dd56:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801dd5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd5c:	9104      	str	r1, [sp, #16]
 801dd5e:	bf18      	it	ne
 801dd60:	f024 0401 	bicne.w	r4, r4, #1
 801dd64:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dd66:	bf18      	it	ne
 801dd68:	b2a4      	uxthne	r4, r4
 801dd6a:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801dd6e:	e9cd 4900 	strd	r4, r9, [sp]
 801dd72:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dd74:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801dd76:	47a0      	blx	r4
 801dd78:	b019      	add	sp, #100	; 0x64
 801dd7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd7e:	2300      	movs	r3, #0
 801dd80:	e7c0      	b.n	801dd04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801dd82:	bf00      	nop
 801dd84:	200279a8 	.word	0x200279a8
 801dd88:	200279b0 	.word	0x200279b0
 801dd8c:	200279aa 	.word	0x200279aa
 801dd90:	00fff800 	.word	0x00fff800
 801dd94:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801dd96:	e6ee      	b.n	801db76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801dd98:	9810      	ldr	r0, [sp, #64]	; 0x40
 801dd9a:	e784      	b.n	801dca6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801dd9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dd9e:	b153      	cbz	r3, 801ddb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 801dda0:	441f      	add	r7, r3
 801dda2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dda4:	b2bf      	uxth	r7, r7
 801dda6:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801ddaa:	f007 0707 	and.w	r7, r7, #7
 801ddae:	781a      	ldrb	r2, [r3, #0]
 801ddb0:	9328      	str	r3, [sp, #160]	; 0xa0
 801ddb2:	413a      	asrs	r2, r7
 801ddb4:	b2d2      	uxtb	r2, r2
 801ddb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ddb8:	445b      	add	r3, fp
 801ddba:	930a      	str	r3, [sp, #40]	; 0x28
 801ddbc:	e711      	b.n	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801ddbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ddc0:	2b00      	cmp	r3, #0
 801ddc2:	d1d9      	bne.n	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801ddc4:	4b05      	ldr	r3, [pc, #20]	; (801dddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801ddc6:	6818      	ldr	r0, [r3, #0]
 801ddc8:	6803      	ldr	r3, [r0, #0]
 801ddca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ddcc:	4798      	blx	r3
 801ddce:	e7d3      	b.n	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801ddd0:	2b00      	cmp	r3, #0
 801ddd2:	f43f ae83 	beq.w	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801ddd6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ddda:	e79e      	b.n	801dd1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 801dddc:	200279b0 	.word	0x200279b0

0801dde0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801dde0:	b538      	push	{r3, r4, r5, lr}
 801dde2:	4c15      	ldr	r4, [pc, #84]	; (801de38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801dde4:	7823      	ldrb	r3, [r4, #0]
 801dde6:	f3bf 8f5b 	dmb	ish
 801ddea:	07da      	lsls	r2, r3, #31
 801ddec:	4605      	mov	r5, r0
 801ddee:	d40b      	bmi.n	801de08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ddf0:	4620      	mov	r0, r4
 801ddf2:	f007 fcb9 	bl	8025768 <__cxa_guard_acquire>
 801ddf6:	b138      	cbz	r0, 801de08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ddf8:	4620      	mov	r0, r4
 801ddfa:	f007 fcc1 	bl	8025780 <__cxa_guard_release>
 801ddfe:	4a0f      	ldr	r2, [pc, #60]	; (801de3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de00:	490f      	ldr	r1, [pc, #60]	; (801de40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801de02:	4810      	ldr	r0, [pc, #64]	; (801de44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de04:	f007 fca9 	bl	802575a <__aeabi_atexit>
 801de08:	4c0f      	ldr	r4, [pc, #60]	; (801de48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801de0a:	7823      	ldrb	r3, [r4, #0]
 801de0c:	f3bf 8f5b 	dmb	ish
 801de10:	07db      	lsls	r3, r3, #31
 801de12:	d40b      	bmi.n	801de2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801de14:	4620      	mov	r0, r4
 801de16:	f007 fca7 	bl	8025768 <__cxa_guard_acquire>
 801de1a:	b138      	cbz	r0, 801de2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801de1c:	4620      	mov	r0, r4
 801de1e:	f007 fcaf 	bl	8025780 <__cxa_guard_release>
 801de22:	4a06      	ldr	r2, [pc, #24]	; (801de3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de24:	4909      	ldr	r1, [pc, #36]	; (801de4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801de26:	480a      	ldr	r0, [pc, #40]	; (801de50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de28:	f007 fc97 	bl	802575a <__aeabi_atexit>
 801de2c:	4b05      	ldr	r3, [pc, #20]	; (801de44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de2e:	612b      	str	r3, [r5, #16]
 801de30:	4b07      	ldr	r3, [pc, #28]	; (801de50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de32:	616b      	str	r3, [r5, #20]
 801de34:	bd38      	pop	{r3, r4, r5, pc}
 801de36:	bf00      	nop
 801de38:	20027a7c 	.word	0x20027a7c
 801de3c:	20000000 	.word	0x20000000
 801de40:	0801bfd1 	.word	0x0801bfd1
 801de44:	200000a4 	.word	0x200000a4
 801de48:	20027a80 	.word	0x20027a80
 801de4c:	0801bfcf 	.word	0x0801bfcf
 801de50:	200000a8 	.word	0x200000a8

0801de54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801de54:	b538      	push	{r3, r4, r5, lr}
 801de56:	4c15      	ldr	r4, [pc, #84]	; (801deac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801de58:	7823      	ldrb	r3, [r4, #0]
 801de5a:	f3bf 8f5b 	dmb	ish
 801de5e:	07da      	lsls	r2, r3, #31
 801de60:	4605      	mov	r5, r0
 801de62:	d40b      	bmi.n	801de7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801de64:	4620      	mov	r0, r4
 801de66:	f007 fc7f 	bl	8025768 <__cxa_guard_acquire>
 801de6a:	b138      	cbz	r0, 801de7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801de6c:	4620      	mov	r0, r4
 801de6e:	f007 fc87 	bl	8025780 <__cxa_guard_release>
 801de72:	4a0f      	ldr	r2, [pc, #60]	; (801deb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801de74:	490f      	ldr	r1, [pc, #60]	; (801deb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801de76:	4810      	ldr	r0, [pc, #64]	; (801deb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801de78:	f007 fc6f 	bl	802575a <__aeabi_atexit>
 801de7c:	4c0f      	ldr	r4, [pc, #60]	; (801debc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801de7e:	7823      	ldrb	r3, [r4, #0]
 801de80:	f3bf 8f5b 	dmb	ish
 801de84:	07db      	lsls	r3, r3, #31
 801de86:	d40b      	bmi.n	801dea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801de88:	4620      	mov	r0, r4
 801de8a:	f007 fc6d 	bl	8025768 <__cxa_guard_acquire>
 801de8e:	b138      	cbz	r0, 801dea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801de90:	4620      	mov	r0, r4
 801de92:	f007 fc75 	bl	8025780 <__cxa_guard_release>
 801de96:	4a06      	ldr	r2, [pc, #24]	; (801deb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801de98:	4909      	ldr	r1, [pc, #36]	; (801dec0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801de9a:	480a      	ldr	r0, [pc, #40]	; (801dec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801de9c:	f007 fc5d 	bl	802575a <__aeabi_atexit>
 801dea0:	4b05      	ldr	r3, [pc, #20]	; (801deb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dea2:	60ab      	str	r3, [r5, #8]
 801dea4:	4b07      	ldr	r3, [pc, #28]	; (801dec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dea6:	60eb      	str	r3, [r5, #12]
 801dea8:	bd38      	pop	{r3, r4, r5, pc}
 801deaa:	bf00      	nop
 801deac:	20027a54 	.word	0x20027a54
 801deb0:	20000000 	.word	0x20000000
 801deb4:	0801bfd5 	.word	0x0801bfd5
 801deb8:	2000007c 	.word	0x2000007c
 801debc:	20027a58 	.word	0x20027a58
 801dec0:	0801bfd3 	.word	0x0801bfd3
 801dec4:	20000080 	.word	0x20000080

0801dec8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dec8:	b510      	push	{r4, lr}
 801deca:	4604      	mov	r4, r0
 801decc:	f7ff ff88 	bl	801dde0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801ded0:	4620      	mov	r0, r4
 801ded2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ded6:	f7ff bfbd 	b.w	801de54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dedc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dedc:	b538      	push	{r3, r4, r5, lr}
 801dede:	4c15      	ldr	r4, [pc, #84]	; (801df34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dee0:	7823      	ldrb	r3, [r4, #0]
 801dee2:	f3bf 8f5b 	dmb	ish
 801dee6:	07da      	lsls	r2, r3, #31
 801dee8:	4605      	mov	r5, r0
 801deea:	d40b      	bmi.n	801df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801deec:	4620      	mov	r0, r4
 801deee:	f007 fc3b 	bl	8025768 <__cxa_guard_acquire>
 801def2:	b138      	cbz	r0, 801df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801def4:	4620      	mov	r0, r4
 801def6:	f007 fc43 	bl	8025780 <__cxa_guard_release>
 801defa:	4a0f      	ldr	r2, [pc, #60]	; (801df38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801defc:	490f      	ldr	r1, [pc, #60]	; (801df3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801defe:	4810      	ldr	r0, [pc, #64]	; (801df40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df00:	f007 fc2b 	bl	802575a <__aeabi_atexit>
 801df04:	4c0f      	ldr	r4, [pc, #60]	; (801df44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801df06:	7823      	ldrb	r3, [r4, #0]
 801df08:	f3bf 8f5b 	dmb	ish
 801df0c:	07db      	lsls	r3, r3, #31
 801df0e:	d40b      	bmi.n	801df28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801df10:	4620      	mov	r0, r4
 801df12:	f007 fc29 	bl	8025768 <__cxa_guard_acquire>
 801df16:	b138      	cbz	r0, 801df28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801df18:	4620      	mov	r0, r4
 801df1a:	f007 fc31 	bl	8025780 <__cxa_guard_release>
 801df1e:	4a06      	ldr	r2, [pc, #24]	; (801df38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801df20:	4909      	ldr	r1, [pc, #36]	; (801df48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801df22:	480a      	ldr	r0, [pc, #40]	; (801df4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df24:	f007 fc19 	bl	802575a <__aeabi_atexit>
 801df28:	4b05      	ldr	r3, [pc, #20]	; (801df40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df2a:	622b      	str	r3, [r5, #32]
 801df2c:	4b07      	ldr	r3, [pc, #28]	; (801df4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df2e:	626b      	str	r3, [r5, #36]	; 0x24
 801df30:	bd38      	pop	{r3, r4, r5, pc}
 801df32:	bf00      	nop
 801df34:	20027a84 	.word	0x20027a84
 801df38:	20000000 	.word	0x20000000
 801df3c:	0801bfc9 	.word	0x0801bfc9
 801df40:	200000ac 	.word	0x200000ac
 801df44:	20027a88 	.word	0x20027a88
 801df48:	0801bfc7 	.word	0x0801bfc7
 801df4c:	200000b0 	.word	0x200000b0

0801df50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801df50:	b538      	push	{r3, r4, r5, lr}
 801df52:	4c15      	ldr	r4, [pc, #84]	; (801dfa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801df54:	7823      	ldrb	r3, [r4, #0]
 801df56:	f3bf 8f5b 	dmb	ish
 801df5a:	07da      	lsls	r2, r3, #31
 801df5c:	4605      	mov	r5, r0
 801df5e:	d40b      	bmi.n	801df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801df60:	4620      	mov	r0, r4
 801df62:	f007 fc01 	bl	8025768 <__cxa_guard_acquire>
 801df66:	b138      	cbz	r0, 801df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801df68:	4620      	mov	r0, r4
 801df6a:	f007 fc09 	bl	8025780 <__cxa_guard_release>
 801df6e:	4a0f      	ldr	r2, [pc, #60]	; (801dfac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801df70:	490f      	ldr	r1, [pc, #60]	; (801dfb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801df72:	4810      	ldr	r0, [pc, #64]	; (801dfb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801df74:	f007 fbf1 	bl	802575a <__aeabi_atexit>
 801df78:	4c0f      	ldr	r4, [pc, #60]	; (801dfb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801df7a:	7823      	ldrb	r3, [r4, #0]
 801df7c:	f3bf 8f5b 	dmb	ish
 801df80:	07db      	lsls	r3, r3, #31
 801df82:	d40b      	bmi.n	801df9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801df84:	4620      	mov	r0, r4
 801df86:	f007 fbef 	bl	8025768 <__cxa_guard_acquire>
 801df8a:	b138      	cbz	r0, 801df9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801df8c:	4620      	mov	r0, r4
 801df8e:	f007 fbf7 	bl	8025780 <__cxa_guard_release>
 801df92:	4a06      	ldr	r2, [pc, #24]	; (801dfac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801df94:	4909      	ldr	r1, [pc, #36]	; (801dfbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801df96:	480a      	ldr	r0, [pc, #40]	; (801dfc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801df98:	f007 fbdf 	bl	802575a <__aeabi_atexit>
 801df9c:	4b05      	ldr	r3, [pc, #20]	; (801dfb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801df9e:	61ab      	str	r3, [r5, #24]
 801dfa0:	4b07      	ldr	r3, [pc, #28]	; (801dfc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dfa2:	61eb      	str	r3, [r5, #28]
 801dfa4:	bd38      	pop	{r3, r4, r5, pc}
 801dfa6:	bf00      	nop
 801dfa8:	20027a5c 	.word	0x20027a5c
 801dfac:	20000000 	.word	0x20000000
 801dfb0:	0801bfcd 	.word	0x0801bfcd
 801dfb4:	20000084 	.word	0x20000084
 801dfb8:	20027a60 	.word	0x20027a60
 801dfbc:	0801bfcb 	.word	0x0801bfcb
 801dfc0:	20000088 	.word	0x20000088

0801dfc4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801dfc4:	b510      	push	{r4, lr}
 801dfc6:	4604      	mov	r4, r0
 801dfc8:	f7ff ff88 	bl	801dedc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dfcc:	4620      	mov	r0, r4
 801dfce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dfd2:	f7ff bfbd 	b.w	801df50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801dfd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801dfd8:	b538      	push	{r3, r4, r5, lr}
 801dfda:	4c15      	ldr	r4, [pc, #84]	; (801e030 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801dfdc:	7823      	ldrb	r3, [r4, #0]
 801dfde:	f3bf 8f5b 	dmb	ish
 801dfe2:	07da      	lsls	r2, r3, #31
 801dfe4:	4605      	mov	r5, r0
 801dfe6:	d40b      	bmi.n	801e000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dfe8:	4620      	mov	r0, r4
 801dfea:	f007 fbbd 	bl	8025768 <__cxa_guard_acquire>
 801dfee:	b138      	cbz	r0, 801e000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dff0:	4620      	mov	r0, r4
 801dff2:	f007 fbc5 	bl	8025780 <__cxa_guard_release>
 801dff6:	4a0f      	ldr	r2, [pc, #60]	; (801e034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dff8:	490f      	ldr	r1, [pc, #60]	; (801e038 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dffa:	4810      	ldr	r0, [pc, #64]	; (801e03c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dffc:	f007 fbad 	bl	802575a <__aeabi_atexit>
 801e000:	4c0f      	ldr	r4, [pc, #60]	; (801e040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e002:	7823      	ldrb	r3, [r4, #0]
 801e004:	f3bf 8f5b 	dmb	ish
 801e008:	07db      	lsls	r3, r3, #31
 801e00a:	d40b      	bmi.n	801e024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e00c:	4620      	mov	r0, r4
 801e00e:	f007 fbab 	bl	8025768 <__cxa_guard_acquire>
 801e012:	b138      	cbz	r0, 801e024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e014:	4620      	mov	r0, r4
 801e016:	f007 fbb3 	bl	8025780 <__cxa_guard_release>
 801e01a:	4a06      	ldr	r2, [pc, #24]	; (801e034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e01c:	4909      	ldr	r1, [pc, #36]	; (801e044 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e01e:	480a      	ldr	r0, [pc, #40]	; (801e048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e020:	f007 fb9b 	bl	802575a <__aeabi_atexit>
 801e024:	4b05      	ldr	r3, [pc, #20]	; (801e03c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e026:	632b      	str	r3, [r5, #48]	; 0x30
 801e028:	4b07      	ldr	r3, [pc, #28]	; (801e048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e02a:	636b      	str	r3, [r5, #52]	; 0x34
 801e02c:	bd38      	pop	{r3, r4, r5, pc}
 801e02e:	bf00      	nop
 801e030:	20027a94 	.word	0x20027a94
 801e034:	20000000 	.word	0x20000000
 801e038:	0801bfc1 	.word	0x0801bfc1
 801e03c:	200000bc 	.word	0x200000bc
 801e040:	20027a98 	.word	0x20027a98
 801e044:	0801bfbf 	.word	0x0801bfbf
 801e048:	200000c0 	.word	0x200000c0

0801e04c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e04c:	b538      	push	{r3, r4, r5, lr}
 801e04e:	4c15      	ldr	r4, [pc, #84]	; (801e0a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e050:	7823      	ldrb	r3, [r4, #0]
 801e052:	f3bf 8f5b 	dmb	ish
 801e056:	07da      	lsls	r2, r3, #31
 801e058:	4605      	mov	r5, r0
 801e05a:	d40b      	bmi.n	801e074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e05c:	4620      	mov	r0, r4
 801e05e:	f007 fb83 	bl	8025768 <__cxa_guard_acquire>
 801e062:	b138      	cbz	r0, 801e074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e064:	4620      	mov	r0, r4
 801e066:	f007 fb8b 	bl	8025780 <__cxa_guard_release>
 801e06a:	4a0f      	ldr	r2, [pc, #60]	; (801e0a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e06c:	490f      	ldr	r1, [pc, #60]	; (801e0ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e06e:	4810      	ldr	r0, [pc, #64]	; (801e0b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e070:	f007 fb73 	bl	802575a <__aeabi_atexit>
 801e074:	4c0f      	ldr	r4, [pc, #60]	; (801e0b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e076:	7823      	ldrb	r3, [r4, #0]
 801e078:	f3bf 8f5b 	dmb	ish
 801e07c:	07db      	lsls	r3, r3, #31
 801e07e:	d40b      	bmi.n	801e098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e080:	4620      	mov	r0, r4
 801e082:	f007 fb71 	bl	8025768 <__cxa_guard_acquire>
 801e086:	b138      	cbz	r0, 801e098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e088:	4620      	mov	r0, r4
 801e08a:	f007 fb79 	bl	8025780 <__cxa_guard_release>
 801e08e:	4a06      	ldr	r2, [pc, #24]	; (801e0a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e090:	4909      	ldr	r1, [pc, #36]	; (801e0b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e092:	480a      	ldr	r0, [pc, #40]	; (801e0bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e094:	f007 fb61 	bl	802575a <__aeabi_atexit>
 801e098:	4b05      	ldr	r3, [pc, #20]	; (801e0b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e09a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e09c:	4b07      	ldr	r3, [pc, #28]	; (801e0bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e09e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e0a0:	bd38      	pop	{r3, r4, r5, pc}
 801e0a2:	bf00      	nop
 801e0a4:	20027a64 	.word	0x20027a64
 801e0a8:	20000000 	.word	0x20000000
 801e0ac:	0801bfc5 	.word	0x0801bfc5
 801e0b0:	2000008c 	.word	0x2000008c
 801e0b4:	20027a68 	.word	0x20027a68
 801e0b8:	0801bfc3 	.word	0x0801bfc3
 801e0bc:	20000090 	.word	0x20000090

0801e0c0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e0c0:	b510      	push	{r4, lr}
 801e0c2:	4604      	mov	r4, r0
 801e0c4:	f7ff ff88 	bl	801dfd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e0c8:	4620      	mov	r0, r4
 801e0ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0ce:	f7ff bfbd 	b.w	801e04c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e0d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e0d4:	b538      	push	{r3, r4, r5, lr}
 801e0d6:	4c15      	ldr	r4, [pc, #84]	; (801e12c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e0d8:	7823      	ldrb	r3, [r4, #0]
 801e0da:	f3bf 8f5b 	dmb	ish
 801e0de:	07da      	lsls	r2, r3, #31
 801e0e0:	4605      	mov	r5, r0
 801e0e2:	d40b      	bmi.n	801e0fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e0e4:	4620      	mov	r0, r4
 801e0e6:	f007 fb3f 	bl	8025768 <__cxa_guard_acquire>
 801e0ea:	b138      	cbz	r0, 801e0fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e0ec:	4620      	mov	r0, r4
 801e0ee:	f007 fb47 	bl	8025780 <__cxa_guard_release>
 801e0f2:	4a0f      	ldr	r2, [pc, #60]	; (801e130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e0f4:	490f      	ldr	r1, [pc, #60]	; (801e134 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e0f6:	4810      	ldr	r0, [pc, #64]	; (801e138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e0f8:	f007 fb2f 	bl	802575a <__aeabi_atexit>
 801e0fc:	4c0f      	ldr	r4, [pc, #60]	; (801e13c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e0fe:	7823      	ldrb	r3, [r4, #0]
 801e100:	f3bf 8f5b 	dmb	ish
 801e104:	07db      	lsls	r3, r3, #31
 801e106:	d40b      	bmi.n	801e120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e108:	4620      	mov	r0, r4
 801e10a:	f007 fb2d 	bl	8025768 <__cxa_guard_acquire>
 801e10e:	b138      	cbz	r0, 801e120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e110:	4620      	mov	r0, r4
 801e112:	f007 fb35 	bl	8025780 <__cxa_guard_release>
 801e116:	4a06      	ldr	r2, [pc, #24]	; (801e130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e118:	4909      	ldr	r1, [pc, #36]	; (801e140 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e11a:	480a      	ldr	r0, [pc, #40]	; (801e144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e11c:	f007 fb1d 	bl	802575a <__aeabi_atexit>
 801e120:	4b05      	ldr	r3, [pc, #20]	; (801e138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e122:	652b      	str	r3, [r5, #80]	; 0x50
 801e124:	4b07      	ldr	r3, [pc, #28]	; (801e144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e126:	656b      	str	r3, [r5, #84]	; 0x54
 801e128:	bd38      	pop	{r3, r4, r5, pc}
 801e12a:	bf00      	nop
 801e12c:	20027a9c 	.word	0x20027a9c
 801e130:	20000000 	.word	0x20000000
 801e134:	0801bfb1 	.word	0x0801bfb1
 801e138:	200000c4 	.word	0x200000c4
 801e13c:	20027aa0 	.word	0x20027aa0
 801e140:	0801bfaf 	.word	0x0801bfaf
 801e144:	200000c8 	.word	0x200000c8

0801e148 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e148:	b538      	push	{r3, r4, r5, lr}
 801e14a:	4c15      	ldr	r4, [pc, #84]	; (801e1a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e14c:	7823      	ldrb	r3, [r4, #0]
 801e14e:	f3bf 8f5b 	dmb	ish
 801e152:	07da      	lsls	r2, r3, #31
 801e154:	4605      	mov	r5, r0
 801e156:	d40b      	bmi.n	801e170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e158:	4620      	mov	r0, r4
 801e15a:	f007 fb05 	bl	8025768 <__cxa_guard_acquire>
 801e15e:	b138      	cbz	r0, 801e170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e160:	4620      	mov	r0, r4
 801e162:	f007 fb0d 	bl	8025780 <__cxa_guard_release>
 801e166:	4a0f      	ldr	r2, [pc, #60]	; (801e1a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e168:	490f      	ldr	r1, [pc, #60]	; (801e1a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e16a:	4810      	ldr	r0, [pc, #64]	; (801e1ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e16c:	f007 faf5 	bl	802575a <__aeabi_atexit>
 801e170:	4c0f      	ldr	r4, [pc, #60]	; (801e1b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e172:	7823      	ldrb	r3, [r4, #0]
 801e174:	f3bf 8f5b 	dmb	ish
 801e178:	07db      	lsls	r3, r3, #31
 801e17a:	d40b      	bmi.n	801e194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e17c:	4620      	mov	r0, r4
 801e17e:	f007 faf3 	bl	8025768 <__cxa_guard_acquire>
 801e182:	b138      	cbz	r0, 801e194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e184:	4620      	mov	r0, r4
 801e186:	f007 fafb 	bl	8025780 <__cxa_guard_release>
 801e18a:	4a06      	ldr	r2, [pc, #24]	; (801e1a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e18c:	4909      	ldr	r1, [pc, #36]	; (801e1b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e18e:	480a      	ldr	r0, [pc, #40]	; (801e1b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e190:	f007 fae3 	bl	802575a <__aeabi_atexit>
 801e194:	4b05      	ldr	r3, [pc, #20]	; (801e1ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e196:	64ab      	str	r3, [r5, #72]	; 0x48
 801e198:	4b07      	ldr	r3, [pc, #28]	; (801e1b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e19a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e19c:	bd38      	pop	{r3, r4, r5, pc}
 801e19e:	bf00      	nop
 801e1a0:	20027aa4 	.word	0x20027aa4
 801e1a4:	20000000 	.word	0x20000000
 801e1a8:	0801bfb5 	.word	0x0801bfb5
 801e1ac:	200000cc 	.word	0x200000cc
 801e1b0:	20027aa8 	.word	0x20027aa8
 801e1b4:	0801bfb3 	.word	0x0801bfb3
 801e1b8:	200000d0 	.word	0x200000d0

0801e1bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e1bc:	b538      	push	{r3, r4, r5, lr}
 801e1be:	4c15      	ldr	r4, [pc, #84]	; (801e214 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e1c0:	7823      	ldrb	r3, [r4, #0]
 801e1c2:	f3bf 8f5b 	dmb	ish
 801e1c6:	07da      	lsls	r2, r3, #31
 801e1c8:	4605      	mov	r5, r0
 801e1ca:	d40b      	bmi.n	801e1e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e1cc:	4620      	mov	r0, r4
 801e1ce:	f007 facb 	bl	8025768 <__cxa_guard_acquire>
 801e1d2:	b138      	cbz	r0, 801e1e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e1d4:	4620      	mov	r0, r4
 801e1d6:	f007 fad3 	bl	8025780 <__cxa_guard_release>
 801e1da:	4a0f      	ldr	r2, [pc, #60]	; (801e218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e1dc:	490f      	ldr	r1, [pc, #60]	; (801e21c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e1de:	4810      	ldr	r0, [pc, #64]	; (801e220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e1e0:	f007 fabb 	bl	802575a <__aeabi_atexit>
 801e1e4:	4c0f      	ldr	r4, [pc, #60]	; (801e224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e1e6:	7823      	ldrb	r3, [r4, #0]
 801e1e8:	f3bf 8f5b 	dmb	ish
 801e1ec:	07db      	lsls	r3, r3, #31
 801e1ee:	d40b      	bmi.n	801e208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e1f0:	4620      	mov	r0, r4
 801e1f2:	f007 fab9 	bl	8025768 <__cxa_guard_acquire>
 801e1f6:	b138      	cbz	r0, 801e208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e1f8:	4620      	mov	r0, r4
 801e1fa:	f007 fac1 	bl	8025780 <__cxa_guard_release>
 801e1fe:	4a06      	ldr	r2, [pc, #24]	; (801e218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e200:	4909      	ldr	r1, [pc, #36]	; (801e228 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e202:	480a      	ldr	r0, [pc, #40]	; (801e22c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e204:	f007 faa9 	bl	802575a <__aeabi_atexit>
 801e208:	4b05      	ldr	r3, [pc, #20]	; (801e220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e20a:	642b      	str	r3, [r5, #64]	; 0x40
 801e20c:	4b07      	ldr	r3, [pc, #28]	; (801e22c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e20e:	646b      	str	r3, [r5, #68]	; 0x44
 801e210:	bd38      	pop	{r3, r4, r5, pc}
 801e212:	bf00      	nop
 801e214:	20027a6c 	.word	0x20027a6c
 801e218:	20000000 	.word	0x20000000
 801e21c:	0801bfb9 	.word	0x0801bfb9
 801e220:	20000094 	.word	0x20000094
 801e224:	20027a70 	.word	0x20027a70
 801e228:	0801bfb7 	.word	0x0801bfb7
 801e22c:	20000098 	.word	0x20000098

0801e230 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e230:	b538      	push	{r3, r4, r5, lr}
 801e232:	4c15      	ldr	r4, [pc, #84]	; (801e288 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e234:	7823      	ldrb	r3, [r4, #0]
 801e236:	f3bf 8f5b 	dmb	ish
 801e23a:	07da      	lsls	r2, r3, #31
 801e23c:	4605      	mov	r5, r0
 801e23e:	d40b      	bmi.n	801e258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e240:	4620      	mov	r0, r4
 801e242:	f007 fa91 	bl	8025768 <__cxa_guard_acquire>
 801e246:	b138      	cbz	r0, 801e258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e248:	4620      	mov	r0, r4
 801e24a:	f007 fa99 	bl	8025780 <__cxa_guard_release>
 801e24e:	4a0f      	ldr	r2, [pc, #60]	; (801e28c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e250:	490f      	ldr	r1, [pc, #60]	; (801e290 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e252:	4810      	ldr	r0, [pc, #64]	; (801e294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e254:	f007 fa81 	bl	802575a <__aeabi_atexit>
 801e258:	4c0f      	ldr	r4, [pc, #60]	; (801e298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e25a:	7823      	ldrb	r3, [r4, #0]
 801e25c:	f3bf 8f5b 	dmb	ish
 801e260:	07db      	lsls	r3, r3, #31
 801e262:	d40b      	bmi.n	801e27c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e264:	4620      	mov	r0, r4
 801e266:	f007 fa7f 	bl	8025768 <__cxa_guard_acquire>
 801e26a:	b138      	cbz	r0, 801e27c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e26c:	4620      	mov	r0, r4
 801e26e:	f007 fa87 	bl	8025780 <__cxa_guard_release>
 801e272:	4a06      	ldr	r2, [pc, #24]	; (801e28c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e274:	4909      	ldr	r1, [pc, #36]	; (801e29c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e276:	480a      	ldr	r0, [pc, #40]	; (801e2a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e278:	f007 fa6f 	bl	802575a <__aeabi_atexit>
 801e27c:	4b05      	ldr	r3, [pc, #20]	; (801e294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e27e:	63ab      	str	r3, [r5, #56]	; 0x38
 801e280:	4b07      	ldr	r3, [pc, #28]	; (801e2a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e282:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e284:	bd38      	pop	{r3, r4, r5, pc}
 801e286:	bf00      	nop
 801e288:	20027a8c 	.word	0x20027a8c
 801e28c:	20000000 	.word	0x20000000
 801e290:	0801bfbd 	.word	0x0801bfbd
 801e294:	200000b4 	.word	0x200000b4
 801e298:	20027a90 	.word	0x20027a90
 801e29c:	0801bfbb 	.word	0x0801bfbb
 801e2a0:	200000b8 	.word	0x200000b8

0801e2a4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e2a4:	b510      	push	{r4, lr}
 801e2a6:	4604      	mov	r4, r0
 801e2a8:	f7ff ff14 	bl	801e0d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e2ac:	4620      	mov	r0, r4
 801e2ae:	f7ff ff85 	bl	801e1bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e2b2:	4620      	mov	r0, r4
 801e2b4:	f7ff ff48 	bl	801e148 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e2b8:	4620      	mov	r0, r4
 801e2ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e2be:	f7ff bfb7 	b.w	801e230 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e2c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e2c4:	b538      	push	{r3, r4, r5, lr}
 801e2c6:	4c15      	ldr	r4, [pc, #84]	; (801e31c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e2c8:	7823      	ldrb	r3, [r4, #0]
 801e2ca:	f3bf 8f5b 	dmb	ish
 801e2ce:	07da      	lsls	r2, r3, #31
 801e2d0:	4605      	mov	r5, r0
 801e2d2:	d40b      	bmi.n	801e2ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e2d4:	4620      	mov	r0, r4
 801e2d6:	f007 fa47 	bl	8025768 <__cxa_guard_acquire>
 801e2da:	b138      	cbz	r0, 801e2ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e2dc:	4620      	mov	r0, r4
 801e2de:	f007 fa4f 	bl	8025780 <__cxa_guard_release>
 801e2e2:	4a0f      	ldr	r2, [pc, #60]	; (801e320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e2e4:	490f      	ldr	r1, [pc, #60]	; (801e324 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e2e6:	4810      	ldr	r0, [pc, #64]	; (801e328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e2e8:	f007 fa37 	bl	802575a <__aeabi_atexit>
 801e2ec:	4c0f      	ldr	r4, [pc, #60]	; (801e32c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e2ee:	7823      	ldrb	r3, [r4, #0]
 801e2f0:	f3bf 8f5b 	dmb	ish
 801e2f4:	07db      	lsls	r3, r3, #31
 801e2f6:	d40b      	bmi.n	801e310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e2f8:	4620      	mov	r0, r4
 801e2fa:	f007 fa35 	bl	8025768 <__cxa_guard_acquire>
 801e2fe:	b138      	cbz	r0, 801e310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e300:	4620      	mov	r0, r4
 801e302:	f007 fa3d 	bl	8025780 <__cxa_guard_release>
 801e306:	4a06      	ldr	r2, [pc, #24]	; (801e320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e308:	4909      	ldr	r1, [pc, #36]	; (801e330 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e30a:	480a      	ldr	r0, [pc, #40]	; (801e334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e30c:	f007 fa25 	bl	802575a <__aeabi_atexit>
 801e310:	4b05      	ldr	r3, [pc, #20]	; (801e328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e312:	662b      	str	r3, [r5, #96]	; 0x60
 801e314:	4b07      	ldr	r3, [pc, #28]	; (801e334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e316:	666b      	str	r3, [r5, #100]	; 0x64
 801e318:	bd38      	pop	{r3, r4, r5, pc}
 801e31a:	bf00      	nop
 801e31c:	20027a74 	.word	0x20027a74
 801e320:	20000000 	.word	0x20000000
 801e324:	0801bfa9 	.word	0x0801bfa9
 801e328:	2000009c 	.word	0x2000009c
 801e32c:	20027a78 	.word	0x20027a78
 801e330:	0801bfa7 	.word	0x0801bfa7
 801e334:	200000a0 	.word	0x200000a0

0801e338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e338:	b538      	push	{r3, r4, r5, lr}
 801e33a:	4c15      	ldr	r4, [pc, #84]	; (801e390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e33c:	7823      	ldrb	r3, [r4, #0]
 801e33e:	f3bf 8f5b 	dmb	ish
 801e342:	07da      	lsls	r2, r3, #31
 801e344:	4605      	mov	r5, r0
 801e346:	d40b      	bmi.n	801e360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e348:	4620      	mov	r0, r4
 801e34a:	f007 fa0d 	bl	8025768 <__cxa_guard_acquire>
 801e34e:	b138      	cbz	r0, 801e360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e350:	4620      	mov	r0, r4
 801e352:	f007 fa15 	bl	8025780 <__cxa_guard_release>
 801e356:	4a0f      	ldr	r2, [pc, #60]	; (801e394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e358:	490f      	ldr	r1, [pc, #60]	; (801e398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e35a:	4810      	ldr	r0, [pc, #64]	; (801e39c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e35c:	f007 f9fd 	bl	802575a <__aeabi_atexit>
 801e360:	4c0f      	ldr	r4, [pc, #60]	; (801e3a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e362:	7823      	ldrb	r3, [r4, #0]
 801e364:	f3bf 8f5b 	dmb	ish
 801e368:	07db      	lsls	r3, r3, #31
 801e36a:	d40b      	bmi.n	801e384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e36c:	4620      	mov	r0, r4
 801e36e:	f007 f9fb 	bl	8025768 <__cxa_guard_acquire>
 801e372:	b138      	cbz	r0, 801e384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e374:	4620      	mov	r0, r4
 801e376:	f007 fa03 	bl	8025780 <__cxa_guard_release>
 801e37a:	4a06      	ldr	r2, [pc, #24]	; (801e394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e37c:	4909      	ldr	r1, [pc, #36]	; (801e3a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e37e:	480a      	ldr	r0, [pc, #40]	; (801e3a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e380:	f007 f9eb 	bl	802575a <__aeabi_atexit>
 801e384:	4b05      	ldr	r3, [pc, #20]	; (801e39c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e386:	65ab      	str	r3, [r5, #88]	; 0x58
 801e388:	4b07      	ldr	r3, [pc, #28]	; (801e3a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e38a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e38c:	bd38      	pop	{r3, r4, r5, pc}
 801e38e:	bf00      	nop
 801e390:	20027a4c 	.word	0x20027a4c
 801e394:	20000000 	.word	0x20000000
 801e398:	0801bfad 	.word	0x0801bfad
 801e39c:	20000074 	.word	0x20000074
 801e3a0:	20027a50 	.word	0x20027a50
 801e3a4:	0801bfab 	.word	0x0801bfab
 801e3a8:	20000078 	.word	0x20000078

0801e3ac <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e3ac:	b510      	push	{r4, lr}
 801e3ae:	4604      	mov	r4, r0
 801e3b0:	f7ff ff88 	bl	801e2c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e3b4:	4620      	mov	r0, r4
 801e3b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3ba:	f7ff bfbd 	b.w	801e338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e3c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e3c0:	b538      	push	{r3, r4, r5, lr}
 801e3c2:	4c15      	ldr	r4, [pc, #84]	; (801e418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e3c4:	7823      	ldrb	r3, [r4, #0]
 801e3c6:	f3bf 8f5b 	dmb	ish
 801e3ca:	07da      	lsls	r2, r3, #31
 801e3cc:	4605      	mov	r5, r0
 801e3ce:	d40b      	bmi.n	801e3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e3d0:	4620      	mov	r0, r4
 801e3d2:	f007 f9c9 	bl	8025768 <__cxa_guard_acquire>
 801e3d6:	b138      	cbz	r0, 801e3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e3d8:	4620      	mov	r0, r4
 801e3da:	f007 f9d1 	bl	8025780 <__cxa_guard_release>
 801e3de:	4a0f      	ldr	r2, [pc, #60]	; (801e41c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e3e0:	490f      	ldr	r1, [pc, #60]	; (801e420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e3e2:	4810      	ldr	r0, [pc, #64]	; (801e424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e3e4:	f007 f9b9 	bl	802575a <__aeabi_atexit>
 801e3e8:	4c0f      	ldr	r4, [pc, #60]	; (801e428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e3ea:	7823      	ldrb	r3, [r4, #0]
 801e3ec:	f3bf 8f5b 	dmb	ish
 801e3f0:	07db      	lsls	r3, r3, #31
 801e3f2:	d40b      	bmi.n	801e40c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e3f4:	4620      	mov	r0, r4
 801e3f6:	f007 f9b7 	bl	8025768 <__cxa_guard_acquire>
 801e3fa:	b138      	cbz	r0, 801e40c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e3fc:	4620      	mov	r0, r4
 801e3fe:	f007 f9bf 	bl	8025780 <__cxa_guard_release>
 801e402:	4a06      	ldr	r2, [pc, #24]	; (801e41c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e404:	4909      	ldr	r1, [pc, #36]	; (801e42c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e406:	480a      	ldr	r0, [pc, #40]	; (801e430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e408:	f007 f9a7 	bl	802575a <__aeabi_atexit>
 801e40c:	4b05      	ldr	r3, [pc, #20]	; (801e424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e40e:	672b      	str	r3, [r5, #112]	; 0x70
 801e410:	4b07      	ldr	r3, [pc, #28]	; (801e430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e412:	676b      	str	r3, [r5, #116]	; 0x74
 801e414:	bd38      	pop	{r3, r4, r5, pc}
 801e416:	bf00      	nop
 801e418:	20027a44 	.word	0x20027a44
 801e41c:	20000000 	.word	0x20000000
 801e420:	0801bfa1 	.word	0x0801bfa1
 801e424:	2000006c 	.word	0x2000006c
 801e428:	20027a48 	.word	0x20027a48
 801e42c:	0801bf9f 	.word	0x0801bf9f
 801e430:	20000070 	.word	0x20000070

0801e434 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e434:	b538      	push	{r3, r4, r5, lr}
 801e436:	4c15      	ldr	r4, [pc, #84]	; (801e48c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e438:	7823      	ldrb	r3, [r4, #0]
 801e43a:	f3bf 8f5b 	dmb	ish
 801e43e:	07da      	lsls	r2, r3, #31
 801e440:	4605      	mov	r5, r0
 801e442:	d40b      	bmi.n	801e45c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e444:	4620      	mov	r0, r4
 801e446:	f007 f98f 	bl	8025768 <__cxa_guard_acquire>
 801e44a:	b138      	cbz	r0, 801e45c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e44c:	4620      	mov	r0, r4
 801e44e:	f007 f997 	bl	8025780 <__cxa_guard_release>
 801e452:	4a0f      	ldr	r2, [pc, #60]	; (801e490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e454:	490f      	ldr	r1, [pc, #60]	; (801e494 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e456:	4810      	ldr	r0, [pc, #64]	; (801e498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e458:	f007 f97f 	bl	802575a <__aeabi_atexit>
 801e45c:	4c0f      	ldr	r4, [pc, #60]	; (801e49c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e45e:	7823      	ldrb	r3, [r4, #0]
 801e460:	f3bf 8f5b 	dmb	ish
 801e464:	07db      	lsls	r3, r3, #31
 801e466:	d40b      	bmi.n	801e480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e468:	4620      	mov	r0, r4
 801e46a:	f007 f97d 	bl	8025768 <__cxa_guard_acquire>
 801e46e:	b138      	cbz	r0, 801e480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e470:	4620      	mov	r0, r4
 801e472:	f007 f985 	bl	8025780 <__cxa_guard_release>
 801e476:	4a06      	ldr	r2, [pc, #24]	; (801e490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e478:	4909      	ldr	r1, [pc, #36]	; (801e4a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e47a:	480a      	ldr	r0, [pc, #40]	; (801e4a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e47c:	f007 f96d 	bl	802575a <__aeabi_atexit>
 801e480:	4b05      	ldr	r3, [pc, #20]	; (801e498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e482:	66ab      	str	r3, [r5, #104]	; 0x68
 801e484:	4b07      	ldr	r3, [pc, #28]	; (801e4a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e486:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e488:	bd38      	pop	{r3, r4, r5, pc}
 801e48a:	bf00      	nop
 801e48c:	20027a3c 	.word	0x20027a3c
 801e490:	20000000 	.word	0x20000000
 801e494:	0801bfa5 	.word	0x0801bfa5
 801e498:	20000064 	.word	0x20000064
 801e49c:	20027a40 	.word	0x20027a40
 801e4a0:	0801bfa3 	.word	0x0801bfa3
 801e4a4:	20000068 	.word	0x20000068

0801e4a8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e4a8:	b510      	push	{r4, lr}
 801e4aa:	4604      	mov	r4, r0
 801e4ac:	f7ff ff88 	bl	801e3c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e4b0:	4620      	mov	r0, r4
 801e4b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4b6:	f7ff bfbd 	b.w	801e434 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e4ba <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e4ba:	b510      	push	{r4, lr}
 801e4bc:	4604      	mov	r4, r0
 801e4be:	f7ff fff3 	bl	801e4a8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e4c2:	4620      	mov	r0, r4
 801e4c4:	f7ff ff72 	bl	801e3ac <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e4c8:	4620      	mov	r0, r4
 801e4ca:	f7ff fdf9 	bl	801e0c0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e4ce:	4620      	mov	r0, r4
 801e4d0:	f7ff fcfa 	bl	801dec8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e4d4:	4620      	mov	r0, r4
 801e4d6:	f7ff fd75 	bl	801dfc4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e4da:	4620      	mov	r0, r4
 801e4dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4e0:	f7ff bee0 	b.w	801e2a4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e4e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4e8:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801e4ec:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801e4f0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801e4f4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801e4f8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801e4fc:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 801e500:	8808      	ldrh	r0, [r1, #0]
 801e502:	fb0e 4708 	mla	r7, lr, r8, r4
 801e506:	f1be 0f00 	cmp.w	lr, #0
 801e50a:	eb02 0a07 	add.w	sl, r2, r7
 801e50e:	db37      	blt.n	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801e510:	45f3      	cmp	fp, lr
 801e512:	dd35      	ble.n	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801e514:	2c00      	cmp	r4, #0
 801e516:	db31      	blt.n	801e57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801e518:	45a0      	cmp	r8, r4
 801e51a:	dd2f      	ble.n	801e57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801e51c:	5dd2      	ldrb	r2, [r2, r7]
 801e51e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801e522:	1c62      	adds	r2, r4, #1
 801e524:	d42f      	bmi.n	801e586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801e526:	4590      	cmp	r8, r2
 801e528:	dd2d      	ble.n	801e586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801e52a:	b366      	cbz	r6, 801e586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801e52c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e530:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801e534:	f11e 0e01 	adds.w	lr, lr, #1
 801e538:	d429      	bmi.n	801e58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801e53a:	45f3      	cmp	fp, lr
 801e53c:	dd27      	ble.n	801e58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801e53e:	f1bc 0f00 	cmp.w	ip, #0
 801e542:	f000 80a1 	beq.w	801e688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 801e546:	2c00      	cmp	r4, #0
 801e548:	db1f      	blt.n	801e58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e54a:	45a0      	cmp	r8, r4
 801e54c:	dd1d      	ble.n	801e58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e54e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801e552:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801e556:	3401      	adds	r4, #1
 801e558:	d41c      	bmi.n	801e594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801e55a:	45a0      	cmp	r8, r4
 801e55c:	dd1a      	ble.n	801e594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801e55e:	b1de      	cbz	r6, 801e598 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 801e560:	44d0      	add	r8, sl
 801e562:	f898 2001 	ldrb.w	r2, [r8, #1]
 801e566:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e56a:	2e0f      	cmp	r6, #15
 801e56c:	d915      	bls.n	801e59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801e56e:	4b49      	ldr	r3, [pc, #292]	; (801e694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 801e570:	4a49      	ldr	r2, [pc, #292]	; (801e698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801e572:	484a      	ldr	r0, [pc, #296]	; (801e69c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801e574:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801e578:	f007 f922 	bl	80257c0 <__assert_func>
 801e57c:	4681      	mov	r9, r0
 801e57e:	e7d0      	b.n	801e522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 801e580:	4607      	mov	r7, r0
 801e582:	4681      	mov	r9, r0
 801e584:	e7d6      	b.n	801e534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801e586:	4607      	mov	r7, r0
 801e588:	e7d4      	b.n	801e534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801e58a:	4686      	mov	lr, r0
 801e58c:	e7e3      	b.n	801e556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801e58e:	4603      	mov	r3, r0
 801e590:	4686      	mov	lr, r0
 801e592:	e7ea      	b.n	801e56a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801e594:	4603      	mov	r3, r0
 801e596:	e7e8      	b.n	801e56a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801e598:	4603      	mov	r3, r0
 801e59a:	f1bc 0f0f 	cmp.w	ip, #15
 801e59e:	d8e6      	bhi.n	801e56e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801e5a0:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801e5a4:	fb16 f80c 	smulbb	r8, r6, ip
 801e5a8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e5ac:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e5b0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e5b4:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801e5b8:	ea44 0909 	orr.w	r9, r4, r9
 801e5bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e5c0:	f1cc 0410 	rsb	r4, ip, #16
 801e5c4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e5c8:	1ba4      	subs	r4, r4, r6
 801e5ca:	041a      	lsls	r2, r3, #16
 801e5cc:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801e5d0:	ea4a 0707 	orr.w	r7, sl, r7
 801e5d4:	4377      	muls	r7, r6
 801e5d6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e5da:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801e5de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e5e2:	fb04 7409 	mla	r4, r4, r9, r7
 801e5e6:	4313      	orrs	r3, r2
 801e5e8:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801e5ec:	fb08 4303 	mla	r3, r8, r3, r4
 801e5f0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e5f4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801e5f8:	4322      	orrs	r2, r4
 801e5fa:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801e5fe:	fb0c 3202 	mla	r2, ip, r2, r3
 801e602:	0d53      	lsrs	r3, r2, #21
 801e604:	0952      	lsrs	r2, r2, #5
 801e606:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e60a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e60e:	431a      	orrs	r2, r3
 801e610:	b293      	uxth	r3, r2
 801e612:	b2af      	uxth	r7, r5
 801e614:	1202      	asrs	r2, r0, #8
 801e616:	43ed      	mvns	r5, r5
 801e618:	b2ed      	uxtb	r5, r5
 801e61a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e61e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e622:	fb12 f205 	smulbb	r2, r2, r5
 801e626:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e62a:	fb0c 2c07 	mla	ip, ip, r7, r2
 801e62e:	00dc      	lsls	r4, r3, #3
 801e630:	10da      	asrs	r2, r3, #3
 801e632:	10c6      	asrs	r6, r0, #3
 801e634:	00c3      	lsls	r3, r0, #3
 801e636:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e63a:	b2db      	uxtb	r3, r3
 801e63c:	fb16 f605 	smulbb	r6, r6, r5
 801e640:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e644:	b2e4      	uxtb	r4, r4
 801e646:	fb13 f305 	smulbb	r3, r3, r5
 801e64a:	fa1f fc8c 	uxth.w	ip, ip
 801e64e:	fb02 6207 	mla	r2, r2, r7, r6
 801e652:	fb04 3307 	mla	r3, r4, r7, r3
 801e656:	b296      	uxth	r6, r2
 801e658:	b29a      	uxth	r2, r3
 801e65a:	f10c 0301 	add.w	r3, ip, #1
 801e65e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e662:	1c53      	adds	r3, r2, #1
 801e664:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e668:	1c72      	adds	r2, r6, #1
 801e66a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801e66e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e672:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e676:	0952      	lsrs	r2, r2, #5
 801e678:	ea43 030c 	orr.w	r3, r3, ip
 801e67c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e680:	4313      	orrs	r3, r2
 801e682:	800b      	strh	r3, [r1, #0]
 801e684:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e688:	2e0f      	cmp	r6, #15
 801e68a:	f63f af70 	bhi.w	801e56e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801e68e:	4603      	mov	r3, r0
 801e690:	4686      	mov	lr, r0
 801e692:	e785      	b.n	801e5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801e694:	0802b1ee 	.word	0x0802b1ee
 801e698:	0802b867 	.word	0x0802b867
 801e69c:	0802b272 	.word	0x0802b272

0801e6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6a4:	ed2d 8b08 	vpush	{d8-d11}
 801e6a8:	b099      	sub	sp, #100	; 0x64
 801e6aa:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801e6ae:	9215      	str	r2, [sp, #84]	; 0x54
 801e6b0:	9309      	str	r3, [sp, #36]	; 0x24
 801e6b2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801e6b4:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801e6b8:	930d      	str	r3, [sp, #52]	; 0x34
 801e6ba:	910c      	str	r1, [sp, #48]	; 0x30
 801e6bc:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801e6c0:	9016      	str	r0, [sp, #88]	; 0x58
 801e6c2:	6850      	ldr	r0, [r2, #4]
 801e6c4:	6812      	ldr	r2, [r2, #0]
 801e6c6:	fb00 1303 	mla	r3, r0, r3, r1
 801e6ca:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e6ce:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801e6d0:	681b      	ldr	r3, [r3, #0]
 801e6d2:	930b      	str	r3, [sp, #44]	; 0x2c
 801e6d4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801e6d6:	685e      	ldr	r6, [r3, #4]
 801e6d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e6da:	43db      	mvns	r3, r3
 801e6dc:	b2db      	uxtb	r3, r3
 801e6de:	eeb0 aa40 	vmov.f32	s20, s0
 801e6e2:	eef0 9a60 	vmov.f32	s19, s1
 801e6e6:	eeb0 9a41 	vmov.f32	s18, s2
 801e6ea:	eeb0 8a62 	vmov.f32	s16, s5
 801e6ee:	eef0 8a43 	vmov.f32	s17, s6
 801e6f2:	eef0 ba44 	vmov.f32	s23, s8
 801e6f6:	eeb0 ba64 	vmov.f32	s22, s9
 801e6fa:	eef0 aa45 	vmov.f32	s21, s10
 801e6fe:	3604      	adds	r6, #4
 801e700:	930a      	str	r3, [sp, #40]	; 0x28
 801e702:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e704:	2b00      	cmp	r3, #0
 801e706:	dc03      	bgt.n	801e710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e708:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e70a:	2b00      	cmp	r3, #0
 801e70c:	f340 8225 	ble.w	801eb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801e710:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801e712:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e716:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e71a:	1e48      	subs	r0, r1, #1
 801e71c:	1e57      	subs	r7, r2, #1
 801e71e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e720:	2b00      	cmp	r3, #0
 801e722:	f340 80e3 	ble.w	801e8ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 801e726:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e72a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e72e:	d406      	bmi.n	801e73e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e730:	4584      	cmp	ip, r0
 801e732:	da04      	bge.n	801e73e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e734:	2b00      	cmp	r3, #0
 801e736:	db02      	blt.n	801e73e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e738:	42bb      	cmp	r3, r7
 801e73a:	f2c0 80d8 	blt.w	801e8ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e73e:	f11c 0c01 	adds.w	ip, ip, #1
 801e742:	f100 80c9 	bmi.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e746:	4561      	cmp	r1, ip
 801e748:	f2c0 80c6 	blt.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e74c:	3301      	adds	r3, #1
 801e74e:	f100 80c3 	bmi.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e752:	429a      	cmp	r2, r3
 801e754:	f2c0 80c0 	blt.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e758:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e75c:	4647      	mov	r7, r8
 801e75e:	f1bb 0f00 	cmp.w	fp, #0
 801e762:	f340 80e3 	ble.w	801e92c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e766:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801e768:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801e76a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e76e:	689b      	ldr	r3, [r3, #8]
 801e770:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e774:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e778:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e77c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e780:	f100 8121 	bmi.w	801e9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801e784:	f103 39ff 	add.w	r9, r3, #4294967295
 801e788:	454a      	cmp	r2, r9
 801e78a:	f280 811c 	bge.w	801e9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801e78e:	f1bc 0f00 	cmp.w	ip, #0
 801e792:	f2c0 8118 	blt.w	801e9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801e796:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e79a:	45cc      	cmp	ip, r9
 801e79c:	f280 8113 	bge.w	801e9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801e7a0:	b21b      	sxth	r3, r3
 801e7a2:	fb0c 2203 	mla	r2, ip, r3, r2
 801e7a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e7a8:	eb04 0902 	add.w	r9, r4, r2
 801e7ac:	5ca2      	ldrb	r2, [r4, r2]
 801e7ae:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e7b2:	2800      	cmp	r0, #0
 801e7b4:	f000 80fe 	beq.w	801e9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e7b8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e7bc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e7c0:	9211      	str	r2, [sp, #68]	; 0x44
 801e7c2:	b151      	cbz	r1, 801e7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801e7c4:	eb09 0203 	add.w	r2, r9, r3
 801e7c8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e7cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e7d0:	930f      	str	r3, [sp, #60]	; 0x3c
 801e7d2:	7853      	ldrb	r3, [r2, #1]
 801e7d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e7d8:	9312      	str	r3, [sp, #72]	; 0x48
 801e7da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e7dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e7de:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e7e2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e7e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e7ea:	ea4c 0c03 	orr.w	ip, ip, r3
 801e7ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e7f0:	041b      	lsls	r3, r3, #16
 801e7f2:	fb10 f201 	smulbb	r2, r0, r1
 801e7f6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e7fa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e7fe:	10d2      	asrs	r2, r2, #3
 801e800:	4323      	orrs	r3, r4
 801e802:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e806:	4353      	muls	r3, r2
 801e808:	fb09 330c 	mla	r3, r9, ip, r3
 801e80c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e810:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e814:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e818:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e81c:	f1c1 0c10 	rsb	ip, r1, #16
 801e820:	ebac 0c00 	sub.w	ip, ip, r0
 801e824:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e828:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e82c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e82e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e830:	0418      	lsls	r0, r3, #16
 801e832:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e836:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e83a:	4318      	orrs	r0, r3
 801e83c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e840:	fb02 c200 	mla	r2, r2, r0, ip
 801e844:	0d53      	lsrs	r3, r2, #21
 801e846:	0952      	lsrs	r2, r2, #5
 801e848:	8838      	ldrh	r0, [r7, #0]
 801e84a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e84e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e852:	431a      	orrs	r2, r3
 801e854:	b292      	uxth	r2, r2
 801e856:	1201      	asrs	r1, r0, #8
 801e858:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e85c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e860:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e864:	fb11 f104 	smulbb	r1, r1, r4
 801e868:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e86c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e870:	00c0      	lsls	r0, r0, #3
 801e872:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e876:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e87a:	10d1      	asrs	r1, r2, #3
 801e87c:	b2c0      	uxtb	r0, r0
 801e87e:	00d2      	lsls	r2, r2, #3
 801e880:	b2d2      	uxtb	r2, r2
 801e882:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e886:	fb1e fe04 	smulbb	lr, lr, r4
 801e88a:	fb10 f004 	smulbb	r0, r0, r4
 801e88e:	fa1f fc8c 	uxth.w	ip, ip
 801e892:	fb01 e103 	mla	r1, r1, r3, lr
 801e896:	fb02 0303 	mla	r3, r2, r3, r0
 801e89a:	b29a      	uxth	r2, r3
 801e89c:	f10c 0301 	add.w	r3, ip, #1
 801e8a0:	b289      	uxth	r1, r1
 801e8a2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e8a6:	1c53      	adds	r3, r2, #1
 801e8a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e8ac:	1c4a      	adds	r2, r1, #1
 801e8ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e8b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e8b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e8ba:	0949      	lsrs	r1, r1, #5
 801e8bc:	ea43 030c 	orr.w	r3, r3, ip
 801e8c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e8c4:	430b      	orrs	r3, r1
 801e8c6:	803b      	strh	r3, [r7, #0]
 801e8c8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801e8ca:	449a      	add	sl, r3
 801e8cc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e8ce:	3702      	adds	r7, #2
 801e8d0:	441d      	add	r5, r3
 801e8d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e8d6:	e742      	b.n	801e75e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801e8d8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801e8da:	449a      	add	sl, r3
 801e8dc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e8de:	441d      	add	r5, r3
 801e8e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8e2:	3b01      	subs	r3, #1
 801e8e4:	9309      	str	r3, [sp, #36]	; 0x24
 801e8e6:	f108 0802 	add.w	r8, r8, #2
 801e8ea:	e718      	b.n	801e71e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e8ec:	d023      	beq.n	801e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801e8ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8f0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801e8f2:	3b01      	subs	r3, #1
 801e8f4:	fb00 a003 	mla	r0, r0, r3, sl
 801e8f8:	1400      	asrs	r0, r0, #16
 801e8fa:	f53f af2d 	bmi.w	801e758 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e8fe:	3901      	subs	r1, #1
 801e900:	4288      	cmp	r0, r1
 801e902:	f6bf af29 	bge.w	801e758 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e906:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801e908:	fb01 5303 	mla	r3, r1, r3, r5
 801e90c:	141b      	asrs	r3, r3, #16
 801e90e:	f53f af23 	bmi.w	801e758 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e912:	3a01      	subs	r2, #1
 801e914:	4293      	cmp	r3, r2
 801e916:	f6bf af1f 	bge.w	801e758 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e91a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e91e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e922:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e926:	f1be 0f00 	cmp.w	lr, #0
 801e92a:	dc6c      	bgt.n	801ea06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 801e92c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e92e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e932:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e936:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e938:	2b00      	cmp	r3, #0
 801e93a:	f340 810e 	ble.w	801eb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801e93e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e942:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e946:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e94a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e94c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e950:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e954:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e958:	eef0 6a48 	vmov.f32	s13, s16
 801e95c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e960:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e964:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e968:	ee16 aa90 	vmov	sl, s13
 801e96c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e970:	eef0 6a68 	vmov.f32	s13, s17
 801e974:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e978:	ee18 2a10 	vmov	r2, s16
 801e97c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e980:	fb92 f3f3 	sdiv	r3, r2, r3
 801e984:	ee18 2a90 	vmov	r2, s17
 801e988:	932d      	str	r3, [sp, #180]	; 0xb4
 801e98a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e98c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e990:	932e      	str	r3, [sp, #184]	; 0xb8
 801e992:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e994:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801e996:	3b01      	subs	r3, #1
 801e998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e99c:	930c      	str	r3, [sp, #48]	; 0x30
 801e99e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e9a0:	bf08      	it	eq
 801e9a2:	4613      	moveq	r3, r2
 801e9a4:	ee16 5a90 	vmov	r5, s13
 801e9a8:	9309      	str	r3, [sp, #36]	; 0x24
 801e9aa:	eef0 8a67 	vmov.f32	s17, s15
 801e9ae:	eeb0 8a47 	vmov.f32	s16, s14
 801e9b2:	e6a6      	b.n	801e702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801e9b4:	2900      	cmp	r1, #0
 801e9b6:	f43f af10 	beq.w	801e7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801e9ba:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e9be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9c2:	930f      	str	r3, [sp, #60]	; 0x3c
 801e9c4:	e709      	b.n	801e7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801e9c6:	f112 0901 	adds.w	r9, r2, #1
 801e9ca:	f53f af7d 	bmi.w	801e8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e9ce:	454b      	cmp	r3, r9
 801e9d0:	f6ff af7a 	blt.w	801e8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e9d4:	f11c 0901 	adds.w	r9, ip, #1
 801e9d8:	f53f af76 	bmi.w	801e8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e9dc:	45ce      	cmp	lr, r9
 801e9de:	f6ff af73 	blt.w	801e8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e9e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e9e4:	9202      	str	r2, [sp, #8]
 801e9e6:	b21b      	sxth	r3, r3
 801e9e8:	fa0f f28e 	sxth.w	r2, lr
 801e9ec:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e9f0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e9f4:	9201      	str	r2, [sp, #4]
 801e9f6:	9300      	str	r3, [sp, #0]
 801e9f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e9fa:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e9fc:	4633      	mov	r3, r6
 801e9fe:	4639      	mov	r1, r7
 801ea00:	f7ff fd70 	bl	801e4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ea04:	e760      	b.n	801e8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ea06:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ea08:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ea0a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ea0e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ea12:	1429      	asrs	r1, r5, #16
 801ea14:	fb03 2101 	mla	r1, r3, r1, r2
 801ea18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ea1a:	440a      	add	r2, r1
 801ea1c:	5c61      	ldrb	r1, [r4, r1]
 801ea1e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ea22:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ea26:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ea2a:	f1bc 0f00 	cmp.w	ip, #0
 801ea2e:	f000 808c 	beq.w	801eb4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ea32:	7857      	ldrb	r7, [r2, #1]
 801ea34:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ea38:	9413      	str	r4, [sp, #76]	; 0x4c
 801ea3a:	b140      	cbz	r0, 801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ea3c:	18d7      	adds	r7, r2, r3
 801ea3e:	5cd3      	ldrb	r3, [r2, r3]
 801ea40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ea44:	9310      	str	r3, [sp, #64]	; 0x40
 801ea46:	787b      	ldrb	r3, [r7, #1]
 801ea48:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ea4c:	9314      	str	r3, [sp, #80]	; 0x50
 801ea4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ea50:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ea52:	fb1c f200 	smulbb	r2, ip, r0
 801ea56:	041f      	lsls	r7, r3, #16
 801ea58:	10d2      	asrs	r2, r2, #3
 801ea5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea5e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ea62:	431f      	orrs	r7, r3
 801ea64:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ea68:	9317      	str	r3, [sp, #92]	; 0x5c
 801ea6a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ea6c:	041b      	lsls	r3, r3, #16
 801ea6e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ea72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea76:	ea43 030b 	orr.w	r3, r3, fp
 801ea7a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ea7c:	4353      	muls	r3, r2
 801ea7e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ea82:	fb04 3707 	mla	r7, r4, r7, r3
 801ea86:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ea8a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ea8e:	ea43 0b01 	orr.w	fp, r3, r1
 801ea92:	f1c0 0110 	rsb	r1, r0, #16
 801ea96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ea9a:	eba1 0c0c 	sub.w	ip, r1, ip
 801ea9e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801eaa2:	fb0c 770b 	mla	r7, ip, fp, r7
 801eaa6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eaaa:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801eaae:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801eab2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801eab6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801eaba:	fb02 770c 	mla	r7, r2, ip, r7
 801eabe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eac0:	0d79      	lsrs	r1, r7, #21
 801eac2:	097f      	lsrs	r7, r7, #5
 801eac4:	8812      	ldrh	r2, [r2, #0]
 801eac6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eaca:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801eace:	430f      	orrs	r7, r1
 801ead0:	b2bb      	uxth	r3, r7
 801ead2:	1211      	asrs	r1, r2, #8
 801ead4:	1218      	asrs	r0, r3, #8
 801ead6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801eada:	fb11 f104 	smulbb	r1, r1, r4
 801eade:	10d7      	asrs	r7, r2, #3
 801eae0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eae4:	00d2      	lsls	r2, r2, #3
 801eae6:	fb00 1009 	mla	r0, r0, r9, r1
 801eaea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eaee:	10d9      	asrs	r1, r3, #3
 801eaf0:	b2d2      	uxtb	r2, r2
 801eaf2:	00db      	lsls	r3, r3, #3
 801eaf4:	fb17 f704 	smulbb	r7, r7, r4
 801eaf8:	fb12 f204 	smulbb	r2, r2, r4
 801eafc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eb00:	b2db      	uxtb	r3, r3
 801eb02:	b280      	uxth	r0, r0
 801eb04:	fb01 7109 	mla	r1, r1, r9, r7
 801eb08:	fb03 2309 	mla	r3, r3, r9, r2
 801eb0c:	b29b      	uxth	r3, r3
 801eb0e:	b289      	uxth	r1, r1
 801eb10:	1c42      	adds	r2, r0, #1
 801eb12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eb16:	1c4f      	adds	r7, r1, #1
 801eb18:	1c5a      	adds	r2, r3, #1
 801eb1a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801eb1e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801eb22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eb26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eb2a:	0949      	lsrs	r1, r1, #5
 801eb2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eb2e:	4310      	orrs	r0, r2
 801eb30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eb34:	4308      	orrs	r0, r1
 801eb36:	f823 0b02 	strh.w	r0, [r3], #2
 801eb3a:	930e      	str	r3, [sp, #56]	; 0x38
 801eb3c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801eb3e:	449a      	add	sl, r3
 801eb40:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801eb42:	f10e 3eff 	add.w	lr, lr, #4294967295
 801eb46:	441d      	add	r5, r3
 801eb48:	e6ed      	b.n	801e926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801eb4a:	2800      	cmp	r0, #0
 801eb4c:	f43f af7f 	beq.w	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801eb50:	5cd3      	ldrb	r3, [r2, r3]
 801eb52:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb56:	9310      	str	r3, [sp, #64]	; 0x40
 801eb58:	e779      	b.n	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801eb5a:	b019      	add	sp, #100	; 0x64
 801eb5c:	ecbd 8b08 	vpop	{d8-d11}
 801eb60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801eb64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801eb68:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801eb6c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801eb70:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801eb74:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 801eb78:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801eb7c:	8808      	ldrh	r0, [r1, #0]
 801eb7e:	fb06 570e 	mla	r7, r6, lr, r5
 801eb82:	2e00      	cmp	r6, #0
 801eb84:	eb02 0807 	add.w	r8, r2, r7
 801eb88:	db38      	blt.n	801ebfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801eb8a:	45b1      	cmp	r9, r6
 801eb8c:	dd36      	ble.n	801ebfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801eb8e:	2d00      	cmp	r5, #0
 801eb90:	db32      	blt.n	801ebf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801eb92:	45ae      	cmp	lr, r5
 801eb94:	dd30      	ble.n	801ebf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801eb96:	5dd2      	ldrb	r2, [r2, r7]
 801eb98:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801eb9c:	1c6a      	adds	r2, r5, #1
 801eb9e:	d430      	bmi.n	801ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801eba0:	4596      	cmp	lr, r2
 801eba2:	dd2e      	ble.n	801ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801eba4:	b36c      	cbz	r4, 801ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801eba6:	f898 2001 	ldrb.w	r2, [r8, #1]
 801ebaa:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ebae:	3601      	adds	r6, #1
 801ebb0:	d42b      	bmi.n	801ec0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801ebb2:	45b1      	cmp	r9, r6
 801ebb4:	dd29      	ble.n	801ec0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801ebb6:	f1bc 0f00 	cmp.w	ip, #0
 801ebba:	d028      	beq.n	801ec0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801ebbc:	2d00      	cmp	r5, #0
 801ebbe:	db22      	blt.n	801ec06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801ebc0:	45ae      	cmp	lr, r5
 801ebc2:	dd20      	ble.n	801ec06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801ebc4:	f818 600e 	ldrb.w	r6, [r8, lr]
 801ebc8:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801ebcc:	3501      	adds	r5, #1
 801ebce:	d407      	bmi.n	801ebe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801ebd0:	45ae      	cmp	lr, r5
 801ebd2:	dd05      	ble.n	801ebe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801ebd4:	b134      	cbz	r4, 801ebe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ebd6:	44c6      	add	lr, r8
 801ebd8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ebdc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ebe0:	2c0f      	cmp	r4, #15
 801ebe2:	d802      	bhi.n	801ebea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801ebe4:	f1bc 0f0f 	cmp.w	ip, #15
 801ebe8:	d914      	bls.n	801ec14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801ebea:	4b26      	ldr	r3, [pc, #152]	; (801ec84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801ebec:	4a26      	ldr	r2, [pc, #152]	; (801ec88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801ebee:	4827      	ldr	r0, [pc, #156]	; (801ec8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801ebf0:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801ebf4:	f006 fde4 	bl	80257c0 <__assert_func>
 801ebf8:	4607      	mov	r7, r0
 801ebfa:	e7cf      	b.n	801eb9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801ebfc:	4602      	mov	r2, r0
 801ebfe:	4607      	mov	r7, r0
 801ec00:	e7d5      	b.n	801ebae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801ec02:	4602      	mov	r2, r0
 801ec04:	e7d3      	b.n	801ebae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801ec06:	4606      	mov	r6, r0
 801ec08:	e7e0      	b.n	801ebcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801ec0a:	4606      	mov	r6, r0
 801ec0c:	e7e8      	b.n	801ebe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801ec0e:	2c0f      	cmp	r4, #15
 801ec10:	d8eb      	bhi.n	801ebea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801ec12:	4606      	mov	r6, r0
 801ec14:	043d      	lsls	r5, r7, #16
 801ec16:	fb14 f30c 	smulbb	r3, r4, ip
 801ec1a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801ec1e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801ec22:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ec26:	10db      	asrs	r3, r3, #3
 801ec28:	432f      	orrs	r7, r5
 801ec2a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ec2e:	f1cc 0510 	rsb	r5, ip, #16
 801ec32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ec36:	1b2d      	subs	r5, r5, r4
 801ec38:	ea4e 0202 	orr.w	r2, lr, r2
 801ec3c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801ec40:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801ec44:	4354      	muls	r4, r2
 801ec46:	fb05 4507 	mla	r5, r5, r7, r4
 801ec4a:	0404      	lsls	r4, r0, #16
 801ec4c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ec50:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ec54:	4320      	orrs	r0, r4
 801ec56:	fb03 5400 	mla	r4, r3, r0, r5
 801ec5a:	0430      	lsls	r0, r6, #16
 801ec5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ec60:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801ec64:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ec68:	4330      	orrs	r0, r6
 801ec6a:	fb03 4000 	mla	r0, r3, r0, r4
 801ec6e:	0d43      	lsrs	r3, r0, #21
 801ec70:	0940      	lsrs	r0, r0, #5
 801ec72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ec7a:	4318      	orrs	r0, r3
 801ec7c:	8008      	strh	r0, [r1, #0]
 801ec7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ec82:	bf00      	nop
 801ec84:	0802b1ee 	.word	0x0802b1ee
 801ec88:	0802b867 	.word	0x0802b867
 801ec8c:	0802b272 	.word	0x0802b272

0801ec90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec94:	ed2d 8b0a 	vpush	{d8-d12}
 801ec98:	b093      	sub	sp, #76	; 0x4c
 801ec9a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801ec9e:	920f      	str	r2, [sp, #60]	; 0x3c
 801eca0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801eca2:	9108      	str	r1, [sp, #32]
 801eca4:	9306      	str	r3, [sp, #24]
 801eca6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801ecaa:	9010      	str	r0, [sp, #64]	; 0x40
 801ecac:	6850      	ldr	r0, [r2, #4]
 801ecae:	6812      	ldr	r2, [r2, #0]
 801ecb0:	fb00 1303 	mla	r3, r0, r3, r1
 801ecb4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ecb8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ecba:	681b      	ldr	r3, [r3, #0]
 801ecbc:	9307      	str	r3, [sp, #28]
 801ecbe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ecc0:	685f      	ldr	r7, [r3, #4]
 801ecc2:	eeb0 aa40 	vmov.f32	s20, s0
 801ecc6:	eef0 9a60 	vmov.f32	s19, s1
 801ecca:	eeb0 9a41 	vmov.f32	s18, s2
 801ecce:	eeb0 8a62 	vmov.f32	s16, s5
 801ecd2:	eef0 8a43 	vmov.f32	s17, s6
 801ecd6:	eeb0 ca44 	vmov.f32	s24, s8
 801ecda:	eef0 ba64 	vmov.f32	s23, s9
 801ecde:	eeb0 ba45 	vmov.f32	s22, s10
 801ece2:	3704      	adds	r7, #4
 801ece4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801ece8:	9b08      	ldr	r3, [sp, #32]
 801ecea:	2b00      	cmp	r3, #0
 801ecec:	dc03      	bgt.n	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ecee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ecf0:	2b00      	cmp	r3, #0
 801ecf2:	f340 81b2 	ble.w	801f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801ecf6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ecf8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ecfc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ed00:	1e48      	subs	r0, r1, #1
 801ed02:	f102 3cff 	add.w	ip, r2, #4294967295
 801ed06:	9b06      	ldr	r3, [sp, #24]
 801ed08:	2b00      	cmp	r3, #0
 801ed0a:	f340 80a9 	ble.w	801ee60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801ed0e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ed12:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ed16:	d406      	bmi.n	801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ed18:	4586      	cmp	lr, r0
 801ed1a:	da04      	bge.n	801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ed1c:	2b00      	cmp	r3, #0
 801ed1e:	db02      	blt.n	801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ed20:	4563      	cmp	r3, ip
 801ed22:	f2c0 809e 	blt.w	801ee62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ed26:	f11e 0e01 	adds.w	lr, lr, #1
 801ed2a:	f100 808f 	bmi.w	801ee4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801ed2e:	4571      	cmp	r1, lr
 801ed30:	f2c0 808c 	blt.w	801ee4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801ed34:	3301      	adds	r3, #1
 801ed36:	f100 8089 	bmi.w	801ee4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801ed3a:	429a      	cmp	r2, r3
 801ed3c:	f2c0 8086 	blt.w	801ee4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801ed40:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ed44:	46c8      	mov	r8, r9
 801ed46:	f1bb 0f00 	cmp.w	fp, #0
 801ed4a:	f340 80a6 	ble.w	801ee9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801ed4e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ed50:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ed52:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ed56:	689b      	ldr	r3, [r3, #8]
 801ed58:	1422      	asrs	r2, r4, #16
 801ed5a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ed5e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ed62:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ed66:	f100 80e3 	bmi.w	801ef30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ed6a:	f103 3aff 	add.w	sl, r3, #4294967295
 801ed6e:	4552      	cmp	r2, sl
 801ed70:	f280 80de 	bge.w	801ef30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ed74:	f1bc 0f00 	cmp.w	ip, #0
 801ed78:	f2c0 80da 	blt.w	801ef30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ed7c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ed80:	45d4      	cmp	ip, sl
 801ed82:	f280 80d5 	bge.w	801ef30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ed86:	b21b      	sxth	r3, r3
 801ed88:	fb0c 2203 	mla	r2, ip, r3, r2
 801ed8c:	9d07      	ldr	r5, [sp, #28]
 801ed8e:	eb05 0a02 	add.w	sl, r5, r2
 801ed92:	5caa      	ldrb	r2, [r5, r2]
 801ed94:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ed98:	2800      	cmp	r0, #0
 801ed9a:	f000 80c0 	beq.w	801ef1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801ed9e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801eda2:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801eda6:	920b      	str	r2, [sp, #44]	; 0x2c
 801eda8:	b151      	cbz	r1, 801edc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801edaa:	eb0a 0203 	add.w	r2, sl, r3
 801edae:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801edb2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801edb6:	9309      	str	r3, [sp, #36]	; 0x24
 801edb8:	7853      	ldrb	r3, [r2, #1]
 801edba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801edbe:	930c      	str	r3, [sp, #48]	; 0x30
 801edc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801edc2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801edc4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801edc8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801edcc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801edd0:	ea4c 0c03 	orr.w	ip, ip, r3
 801edd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801edd6:	041b      	lsls	r3, r3, #16
 801edd8:	fb10 f201 	smulbb	r2, r0, r1
 801eddc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ede0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ede4:	10d2      	asrs	r2, r2, #3
 801ede6:	432b      	orrs	r3, r5
 801ede8:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801edec:	4353      	muls	r3, r2
 801edee:	fb0a 330c 	mla	r3, sl, ip, r3
 801edf2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801edf6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801edfa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801edfe:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ee02:	f1c1 0c10 	rsb	ip, r1, #16
 801ee06:	ebac 0c00 	sub.w	ip, ip, r0
 801ee0a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ee0e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ee12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee14:	0418      	lsls	r0, r3, #16
 801ee16:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ee1a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ee1e:	4318      	orrs	r0, r3
 801ee20:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ee24:	fb02 c200 	mla	r2, r2, r0, ip
 801ee28:	0d53      	lsrs	r3, r2, #21
 801ee2a:	0952      	lsrs	r2, r2, #5
 801ee2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ee30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ee34:	431a      	orrs	r2, r3
 801ee36:	f8a8 2000 	strh.w	r2, [r8]
 801ee3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ee3c:	441c      	add	r4, r3
 801ee3e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee40:	f108 0802 	add.w	r8, r8, #2
 801ee44:	441e      	add	r6, r3
 801ee46:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee4a:	e77c      	b.n	801ed46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ee4c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ee4e:	441c      	add	r4, r3
 801ee50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee52:	441e      	add	r6, r3
 801ee54:	9b06      	ldr	r3, [sp, #24]
 801ee56:	3b01      	subs	r3, #1
 801ee58:	9306      	str	r3, [sp, #24]
 801ee5a:	f109 0902 	add.w	r9, r9, #2
 801ee5e:	e752      	b.n	801ed06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ee60:	d020      	beq.n	801eea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ee62:	9b06      	ldr	r3, [sp, #24]
 801ee64:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801ee66:	3b01      	subs	r3, #1
 801ee68:	fb00 4003 	mla	r0, r0, r3, r4
 801ee6c:	1400      	asrs	r0, r0, #16
 801ee6e:	f53f af67 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ee72:	3901      	subs	r1, #1
 801ee74:	4288      	cmp	r0, r1
 801ee76:	f6bf af63 	bge.w	801ed40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ee7a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ee7c:	fb01 6303 	mla	r3, r1, r3, r6
 801ee80:	141b      	asrs	r3, r3, #16
 801ee82:	f53f af5d 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ee86:	3a01      	subs	r2, #1
 801ee88:	4293      	cmp	r3, r2
 801ee8a:	f6bf af59 	bge.w	801ed40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ee8e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ee92:	46ca      	mov	sl, r9
 801ee94:	f1b8 0f00 	cmp.w	r8, #0
 801ee98:	dc67      	bgt.n	801ef6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801ee9a:	9b06      	ldr	r3, [sp, #24]
 801ee9c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eea0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801eea4:	9b08      	ldr	r3, [sp, #32]
 801eea6:	2b00      	cmp	r3, #0
 801eea8:	f340 80d7 	ble.w	801f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801eeac:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801eeb0:	ee79 9aab 	vadd.f32	s19, s19, s23
 801eeb4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801eeb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eeba:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801eebe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801eec2:	eef0 6a48 	vmov.f32	s13, s16
 801eec6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801eeca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eece:	ee37 8a48 	vsub.f32	s16, s14, s16
 801eed2:	ee16 4a90 	vmov	r4, s13
 801eed6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801eeda:	eef0 6a68 	vmov.f32	s13, s17
 801eede:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801eee2:	ee18 2a10 	vmov	r2, s16
 801eee6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801eeea:	fb92 f3f3 	sdiv	r3, r2, r3
 801eeee:	ee18 2a90 	vmov	r2, s17
 801eef2:	9329      	str	r3, [sp, #164]	; 0xa4
 801eef4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eef6:	fb92 f3f3 	sdiv	r3, r2, r3
 801eefa:	932a      	str	r3, [sp, #168]	; 0xa8
 801eefc:	9b08      	ldr	r3, [sp, #32]
 801eefe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ef00:	3b01      	subs	r3, #1
 801ef02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ef06:	9308      	str	r3, [sp, #32]
 801ef08:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ef0a:	bf08      	it	eq
 801ef0c:	4613      	moveq	r3, r2
 801ef0e:	ee16 6a90 	vmov	r6, s13
 801ef12:	9306      	str	r3, [sp, #24]
 801ef14:	eef0 8a67 	vmov.f32	s17, s15
 801ef18:	eeb0 8a47 	vmov.f32	s16, s14
 801ef1c:	e6e4      	b.n	801ece8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ef1e:	2900      	cmp	r1, #0
 801ef20:	f43f af4e 	beq.w	801edc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801ef24:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ef28:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef2c:	9309      	str	r3, [sp, #36]	; 0x24
 801ef2e:	e747      	b.n	801edc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801ef30:	f112 0a01 	adds.w	sl, r2, #1
 801ef34:	d481      	bmi.n	801ee3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801ef36:	4553      	cmp	r3, sl
 801ef38:	f6ff af7f 	blt.w	801ee3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801ef3c:	f11c 0a01 	adds.w	sl, ip, #1
 801ef40:	f53f af7b 	bmi.w	801ee3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801ef44:	45d6      	cmp	lr, sl
 801ef46:	f6ff af78 	blt.w	801ee3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801ef4a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ef4e:	b21b      	sxth	r3, r3
 801ef50:	fa0f f28e 	sxth.w	r2, lr
 801ef54:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ef58:	9201      	str	r2, [sp, #4]
 801ef5a:	9300      	str	r3, [sp, #0]
 801ef5c:	9a07      	ldr	r2, [sp, #28]
 801ef5e:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ef60:	463b      	mov	r3, r7
 801ef62:	4641      	mov	r1, r8
 801ef64:	f7ff fdfe 	bl	801eb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ef68:	e767      	b.n	801ee3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801ef6a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ef6c:	9d07      	ldr	r5, [sp, #28]
 801ef6e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ef72:	1422      	asrs	r2, r4, #16
 801ef74:	1431      	asrs	r1, r6, #16
 801ef76:	fb03 2101 	mla	r1, r3, r1, r2
 801ef7a:	9a07      	ldr	r2, [sp, #28]
 801ef7c:	440a      	add	r2, r1
 801ef7e:	5c69      	ldrb	r1, [r5, r1]
 801ef80:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ef84:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ef88:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ef8c:	f1be 0f00 	cmp.w	lr, #0
 801ef90:	d05c      	beq.n	801f04c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801ef92:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ef96:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ef9a:	950d      	str	r5, [sp, #52]	; 0x34
 801ef9c:	b150      	cbz	r0, 801efb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801ef9e:	eb02 0c03 	add.w	ip, r2, r3
 801efa2:	5cd3      	ldrb	r3, [r2, r3]
 801efa4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801efa8:	930a      	str	r3, [sp, #40]	; 0x28
 801efaa:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801efae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801efb2:	930e      	str	r3, [sp, #56]	; 0x38
 801efb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801efb6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801efb8:	fb1e f200 	smulbb	r2, lr, r0
 801efbc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801efc0:	10d2      	asrs	r2, r2, #3
 801efc2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801efc6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801efca:	ea4c 0c03 	orr.w	ip, ip, r3
 801efce:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801efd2:	9311      	str	r3, [sp, #68]	; 0x44
 801efd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efd6:	041b      	lsls	r3, r3, #16
 801efd8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801efdc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801efe0:	ea43 030b 	orr.w	r3, r3, fp
 801efe4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801efe6:	4353      	muls	r3, r2
 801efe8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801efec:	fb05 3c0c 	mla	ip, r5, ip, r3
 801eff0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801eff4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801eff8:	ea43 0b01 	orr.w	fp, r3, r1
 801effc:	f1c0 0110 	rsb	r1, r0, #16
 801f000:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f002:	eba1 0e0e 	sub.w	lr, r1, lr
 801f006:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f00a:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f00e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f012:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f016:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f01a:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f01e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f022:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f026:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f02a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f02e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f032:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f036:	ea43 0c0c 	orr.w	ip, r3, ip
 801f03a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f03c:	f82a cb02 	strh.w	ip, [sl], #2
 801f040:	441c      	add	r4, r3
 801f042:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f044:	f108 38ff 	add.w	r8, r8, #4294967295
 801f048:	441e      	add	r6, r3
 801f04a:	e723      	b.n	801ee94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f04c:	2800      	cmp	r0, #0
 801f04e:	d0b1      	beq.n	801efb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801f050:	5cd3      	ldrb	r3, [r2, r3]
 801f052:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f056:	930a      	str	r3, [sp, #40]	; 0x28
 801f058:	e7ac      	b.n	801efb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801f05a:	b013      	add	sp, #76	; 0x4c
 801f05c:	ecbd 8b0a 	vpop	{d8-d12}
 801f060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f068:	468b      	mov	fp, r1
 801f06a:	8809      	ldrh	r1, [r1, #0]
 801f06c:	b089      	sub	sp, #36	; 0x24
 801f06e:	10cd      	asrs	r5, r1, #3
 801f070:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801f074:	ea4f 2921 	mov.w	r9, r1, asr #8
 801f078:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f07c:	00c9      	lsls	r1, r1, #3
 801f07e:	9500      	str	r5, [sp, #0]
 801f080:	b2c9      	uxtb	r1, r1
 801f082:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801f086:	9101      	str	r1, [sp, #4]
 801f088:	9900      	ldr	r1, [sp, #0]
 801f08a:	9202      	str	r2, [sp, #8]
 801f08c:	fb04 650e 	mla	r5, r4, lr, r6
 801f090:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801f094:	eb02 0805 	add.w	r8, r2, r5
 801f098:	0209      	lsls	r1, r1, #8
 801f09a:	9a01      	ldr	r2, [sp, #4]
 801f09c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 801f0a0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801f0a4:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801f0a8:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801f0ac:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 801f0b0:	4311      	orrs	r1, r2
 801f0b2:	2c00      	cmp	r4, #0
 801f0b4:	9107      	str	r1, [sp, #28]
 801f0b6:	db43      	blt.n	801f140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801f0b8:	45a2      	cmp	sl, r4
 801f0ba:	dd41      	ble.n	801f140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801f0bc:	2e00      	cmp	r6, #0
 801f0be:	db3d      	blt.n	801f13c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801f0c0:	45b6      	cmp	lr, r6
 801f0c2:	dd3b      	ble.n	801f13c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801f0c4:	9a02      	ldr	r2, [sp, #8]
 801f0c6:	5d55      	ldrb	r5, [r2, r5]
 801f0c8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f0cc:	441d      	add	r5, r3
 801f0ce:	1c72      	adds	r2, r6, #1
 801f0d0:	d439      	bmi.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801f0d2:	4596      	cmp	lr, r2
 801f0d4:	dd37      	ble.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801f0d6:	2f00      	cmp	r7, #0
 801f0d8:	d035      	beq.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801f0da:	f898 1001 	ldrb.w	r1, [r8, #1]
 801f0de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f0e2:	4419      	add	r1, r3
 801f0e4:	3401      	adds	r4, #1
 801f0e6:	d432      	bmi.n	801f14e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801f0e8:	45a2      	cmp	sl, r4
 801f0ea:	dd30      	ble.n	801f14e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801f0ec:	b378      	cbz	r0, 801f14e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801f0ee:	2e00      	cmp	r6, #0
 801f0f0:	db2b      	blt.n	801f14a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801f0f2:	45b6      	cmp	lr, r6
 801f0f4:	dd29      	ble.n	801f14a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801f0f6:	f818 400e 	ldrb.w	r4, [r8, lr]
 801f0fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f0fe:	441c      	add	r4, r3
 801f100:	3601      	adds	r6, #1
 801f102:	d427      	bmi.n	801f154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801f104:	45b6      	cmp	lr, r6
 801f106:	dd25      	ble.n	801f154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801f108:	b327      	cbz	r7, 801f154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801f10a:	44c6      	add	lr, r8
 801f10c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f110:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f114:	4413      	add	r3, r2
 801f116:	782a      	ldrb	r2, [r5, #0]
 801f118:	9202      	str	r2, [sp, #8]
 801f11a:	780a      	ldrb	r2, [r1, #0]
 801f11c:	9203      	str	r2, [sp, #12]
 801f11e:	7822      	ldrb	r2, [r4, #0]
 801f120:	9204      	str	r2, [sp, #16]
 801f122:	2f0f      	cmp	r7, #15
 801f124:	781a      	ldrb	r2, [r3, #0]
 801f126:	9205      	str	r2, [sp, #20]
 801f128:	d801      	bhi.n	801f12e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801f12a:	280f      	cmp	r0, #15
 801f12c:	d914      	bls.n	801f158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801f12e:	4b3f      	ldr	r3, [pc, #252]	; (801f22c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801f130:	4a3f      	ldr	r2, [pc, #252]	; (801f230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801f132:	4840      	ldr	r0, [pc, #256]	; (801f234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801f134:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801f138:	f006 fb42 	bl	80257c0 <__assert_func>
 801f13c:	ad07      	add	r5, sp, #28
 801f13e:	e7c6      	b.n	801f0ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801f140:	a907      	add	r1, sp, #28
 801f142:	460d      	mov	r5, r1
 801f144:	e7ce      	b.n	801f0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801f146:	a907      	add	r1, sp, #28
 801f148:	e7cc      	b.n	801f0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801f14a:	ac07      	add	r4, sp, #28
 801f14c:	e7d8      	b.n	801f100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801f14e:	ab07      	add	r3, sp, #28
 801f150:	461c      	mov	r4, r3
 801f152:	e7e0      	b.n	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801f154:	ab07      	add	r3, sp, #28
 801f156:	e7de      	b.n	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801f158:	b2ba      	uxth	r2, r7
 801f15a:	b280      	uxth	r0, r0
 801f15c:	fb02 fa00 	mul.w	sl, r2, r0
 801f160:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801f164:	0112      	lsls	r2, r2, #4
 801f166:	b280      	uxth	r0, r0
 801f168:	f891 8002 	ldrb.w	r8, [r1, #2]
 801f16c:	7849      	ldrb	r1, [r1, #1]
 801f16e:	78ae      	ldrb	r6, [r5, #2]
 801f170:	786d      	ldrb	r5, [r5, #1]
 801f172:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801f176:	eba2 020a 	sub.w	r2, r2, sl
 801f17a:	b292      	uxth	r2, r2
 801f17c:	ebae 0e00 	sub.w	lr, lr, r0
 801f180:	fa1f fe8e 	uxth.w	lr, lr
 801f184:	4351      	muls	r1, r2
 801f186:	fb02 f808 	mul.w	r8, r2, r8
 801f18a:	fb0e 8806 	mla	r8, lr, r6, r8
 801f18e:	fb0e 1505 	mla	r5, lr, r5, r1
 801f192:	78a6      	ldrb	r6, [r4, #2]
 801f194:	7861      	ldrb	r1, [r4, #1]
 801f196:	fa1f f78c 	uxth.w	r7, ip
 801f19a:	fb00 8806 	mla	r8, r0, r6, r8
 801f19e:	fb00 5501 	mla	r5, r0, r1, r5
 801f1a2:	789e      	ldrb	r6, [r3, #2]
 801f1a4:	7859      	ldrb	r1, [r3, #1]
 801f1a6:	9b00      	ldr	r3, [sp, #0]
 801f1a8:	ea6f 0c0c 	mvn.w	ip, ip
 801f1ac:	fa5f fc8c 	uxtb.w	ip, ip
 801f1b0:	fb0a 5101 	mla	r1, sl, r1, r5
 801f1b4:	fb13 f50c 	smulbb	r5, r3, ip
 801f1b8:	9b03      	ldr	r3, [sp, #12]
 801f1ba:	435a      	muls	r2, r3
 801f1bc:	9b02      	ldr	r3, [sp, #8]
 801f1be:	fb0e 2203 	mla	r2, lr, r3, r2
 801f1c2:	9b04      	ldr	r3, [sp, #16]
 801f1c4:	fb00 2003 	mla	r0, r0, r3, r2
 801f1c8:	9b05      	ldr	r3, [sp, #20]
 801f1ca:	fb0a 8606 	mla	r6, sl, r6, r8
 801f1ce:	fb19 f90c 	smulbb	r9, r9, ip
 801f1d2:	fb0a 0a03 	mla	sl, sl, r3, r0
 801f1d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f1da:	9b01      	ldr	r3, [sp, #4]
 801f1dc:	fb06 9607 	mla	r6, r6, r7, r9
 801f1e0:	b2b6      	uxth	r6, r6
 801f1e2:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801f1e6:	fb13 fc0c 	smulbb	ip, r3, ip
 801f1ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f1ee:	fb01 5107 	mla	r1, r1, r7, r5
 801f1f2:	f106 0901 	add.w	r9, r6, #1
 801f1f6:	fb0a c707 	mla	r7, sl, r7, ip
 801f1fa:	b2bf      	uxth	r7, r7
 801f1fc:	b289      	uxth	r1, r1
 801f1fe:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801f202:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801f206:	1c4d      	adds	r5, r1, #1
 801f208:	1c7e      	adds	r6, r7, #1
 801f20a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801f20e:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801f212:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801f216:	0949      	lsrs	r1, r1, #5
 801f218:	ea46 0609 	orr.w	r6, r6, r9
 801f21c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f220:	430e      	orrs	r6, r1
 801f222:	f8ab 6000 	strh.w	r6, [fp]
 801f226:	b009      	add	sp, #36	; 0x24
 801f228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f22c:	0802b1ee 	.word	0x0802b1ee
 801f230:	0802b7be 	.word	0x0802b7be
 801f234:	0802b272 	.word	0x0802b272

0801f238 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f23c:	ed2d 8b08 	vpush	{d8-d11}
 801f240:	b095      	sub	sp, #84	; 0x54
 801f242:	eeb0 aa40 	vmov.f32	s20, s0
 801f246:	9212      	str	r2, [sp, #72]	; 0x48
 801f248:	9309      	str	r3, [sp, #36]	; 0x24
 801f24a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801f24c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801f250:	930f      	str	r3, [sp, #60]	; 0x3c
 801f252:	910e      	str	r1, [sp, #56]	; 0x38
 801f254:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801f258:	9013      	str	r0, [sp, #76]	; 0x4c
 801f25a:	6850      	ldr	r0, [r2, #4]
 801f25c:	6812      	ldr	r2, [r2, #0]
 801f25e:	fb00 1303 	mla	r3, r0, r3, r1
 801f262:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f266:	930a      	str	r3, [sp, #40]	; 0x28
 801f268:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f26a:	681b      	ldr	r3, [r3, #0]
 801f26c:	930d      	str	r3, [sp, #52]	; 0x34
 801f26e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f270:	685c      	ldr	r4, [r3, #4]
 801f272:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f274:	43db      	mvns	r3, r3
 801f276:	b2db      	uxtb	r3, r3
 801f278:	eef0 9a60 	vmov.f32	s19, s1
 801f27c:	eeb0 9a41 	vmov.f32	s18, s2
 801f280:	eeb0 8a62 	vmov.f32	s16, s5
 801f284:	eef0 8a43 	vmov.f32	s17, s6
 801f288:	eef0 ba44 	vmov.f32	s23, s8
 801f28c:	eeb0 ba64 	vmov.f32	s22, s9
 801f290:	eef0 aa45 	vmov.f32	s21, s10
 801f294:	3404      	adds	r4, #4
 801f296:	930b      	str	r3, [sp, #44]	; 0x2c
 801f298:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f29a:	2b00      	cmp	r3, #0
 801f29c:	dc03      	bgt.n	801f2a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f29e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f2a0:	2b00      	cmp	r3, #0
 801f2a2:	f340 8255 	ble.w	801f750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801f2a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f2a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f2ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f2b0:	1e48      	subs	r0, r1, #1
 801f2b2:	1e55      	subs	r5, r2, #1
 801f2b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2b6:	2b00      	cmp	r3, #0
 801f2b8:	f340 80f9 	ble.w	801f4ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f2bc:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801f2be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2c0:	1436      	asrs	r6, r6, #16
 801f2c2:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f2c6:	d406      	bmi.n	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f2c8:	4286      	cmp	r6, r0
 801f2ca:	da04      	bge.n	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f2cc:	2b00      	cmp	r3, #0
 801f2ce:	db02      	blt.n	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f2d0:	42ab      	cmp	r3, r5
 801f2d2:	f2c0 80ed 	blt.w	801f4b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f2d6:	3601      	adds	r6, #1
 801f2d8:	f100 80da 	bmi.w	801f490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f2dc:	42b1      	cmp	r1, r6
 801f2de:	f2c0 80d7 	blt.w	801f490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f2e2:	3301      	adds	r3, #1
 801f2e4:	f100 80d4 	bmi.w	801f490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f2e8:	429a      	cmp	r2, r3
 801f2ea:	f2c0 80d1 	blt.w	801f490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f2ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2f0:	9311      	str	r3, [sp, #68]	; 0x44
 801f2f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f2f4:	930c      	str	r3, [sp, #48]	; 0x30
 801f2f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f2f8:	2b00      	cmp	r3, #0
 801f2fa:	f340 80fa 	ble.w	801f4f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801f2fe:	982e      	ldr	r0, [sp, #184]	; 0xb8
 801f300:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f302:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801f304:	68c6      	ldr	r6, [r0, #12]
 801f306:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f308:	141d      	asrs	r5, r3, #16
 801f30a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f30e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f310:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801f312:	1400      	asrs	r0, r0, #16
 801f314:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f318:	6892      	ldr	r2, [r2, #8]
 801f31a:	f100 813e 	bmi.w	801f59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f31e:	1e57      	subs	r7, r2, #1
 801f320:	42b8      	cmp	r0, r7
 801f322:	f280 813a 	bge.w	801f59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f326:	2d00      	cmp	r5, #0
 801f328:	f2c0 8137 	blt.w	801f59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f32c:	1e77      	subs	r7, r6, #1
 801f32e:	42bd      	cmp	r5, r7
 801f330:	f280 8133 	bge.w	801f59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f334:	b212      	sxth	r2, r2
 801f336:	fb05 0002 	mla	r0, r5, r2, r0
 801f33a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f33c:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f340:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f344:	182e      	adds	r6, r5, r0
 801f346:	eb04 050a 	add.w	r5, r4, sl
 801f34a:	2b00      	cmp	r3, #0
 801f34c:	f000 8117 	beq.w	801f57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801f350:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f354:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f358:	44a4      	add	ip, r4
 801f35a:	2900      	cmp	r1, #0
 801f35c:	f000 8117 	beq.w	801f58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f360:	18b0      	adds	r0, r6, r2
 801f362:	5cb2      	ldrb	r2, [r6, r2]
 801f364:	7840      	ldrb	r0, [r0, #1]
 801f366:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f36a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f36e:	4422      	add	r2, r4
 801f370:	4420      	add	r0, r4
 801f372:	b29b      	uxth	r3, r3
 801f374:	b289      	uxth	r1, r1
 801f376:	fb03 f901 	mul.w	r9, r3, r1
 801f37a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f37e:	011b      	lsls	r3, r3, #4
 801f380:	b289      	uxth	r1, r1
 801f382:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f386:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f38a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f38c:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f390:	f8b6 e000 	ldrh.w	lr, [r6]
 801f394:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f398:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f39c:	eba3 0309 	sub.w	r3, r3, r9
 801f3a0:	b29b      	uxth	r3, r3
 801f3a2:	eba8 0801 	sub.w	r8, r8, r1
 801f3a6:	fa1f f888 	uxth.w	r8, r8
 801f3aa:	435f      	muls	r7, r3
 801f3ac:	fb08 770b 	mla	r7, r8, fp, r7
 801f3b0:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f3b4:	9310      	str	r3, [sp, #64]	; 0x40
 801f3b6:	fb01 770b 	mla	r7, r1, fp, r7
 801f3ba:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f3be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f3c0:	fb09 770b 	mla	r7, r9, fp, r7
 801f3c4:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f3c8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f3cc:	fb1b fb03 	smulbb	fp, fp, r3
 801f3d0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f3d4:	fb07 b706 	mla	r7, r7, r6, fp
 801f3d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f3da:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f3de:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f3e2:	f89c c000 	ldrb.w	ip, [ip]
 801f3e6:	435d      	muls	r5, r3
 801f3e8:	fb08 550b 	mla	r5, r8, fp, r5
 801f3ec:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f3f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f3f2:	fb01 550b 	mla	r5, r1, fp, r5
 801f3f6:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f3fa:	fb09 550b 	mla	r5, r9, fp, r5
 801f3fe:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f402:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f406:	fb1b fb03 	smulbb	fp, fp, r3
 801f40a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f40c:	fb03 f30c 	mul.w	r3, r3, ip
 801f410:	f892 c000 	ldrb.w	ip, [r2]
 801f414:	fb08 330a 	mla	r3, r8, sl, r3
 801f418:	fb01 330c 	mla	r3, r1, ip, r3
 801f41c:	f890 c000 	ldrb.w	ip, [r0]
 801f420:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f424:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f428:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f42a:	fa5f fe8e 	uxtb.w	lr, lr
 801f42e:	b2bf      	uxth	r7, r7
 801f430:	fb1e fe03 	smulbb	lr, lr, r3
 801f434:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f438:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f43c:	fb05 b506 	mla	r5, r5, r6, fp
 801f440:	1c7b      	adds	r3, r7, #1
 801f442:	fb0c e606 	mla	r6, ip, r6, lr
 801f446:	b2ad      	uxth	r5, r5
 801f448:	b2b6      	uxth	r6, r6
 801f44a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f44e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f452:	f105 0b01 	add.w	fp, r5, #1
 801f456:	1c77      	adds	r7, r6, #1
 801f458:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f45c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f460:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f464:	096d      	lsrs	r5, r5, #5
 801f466:	431f      	orrs	r7, r3
 801f468:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f46c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f46e:	433d      	orrs	r5, r7
 801f470:	801d      	strh	r5, [r3, #0]
 801f472:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f474:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f476:	3302      	adds	r3, #2
 801f478:	930c      	str	r3, [sp, #48]	; 0x30
 801f47a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f47c:	4413      	add	r3, r2
 801f47e:	9327      	str	r3, [sp, #156]	; 0x9c
 801f480:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f482:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f484:	4413      	add	r3, r2
 801f486:	9328      	str	r3, [sp, #160]	; 0xa0
 801f488:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f48a:	3b01      	subs	r3, #1
 801f48c:	9311      	str	r3, [sp, #68]	; 0x44
 801f48e:	e732      	b.n	801f2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801f490:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f492:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801f494:	4433      	add	r3, r6
 801f496:	9327      	str	r3, [sp, #156]	; 0x9c
 801f498:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801f49a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f49c:	4433      	add	r3, r6
 801f49e:	9328      	str	r3, [sp, #160]	; 0xa0
 801f4a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4a2:	3b01      	subs	r3, #1
 801f4a4:	9309      	str	r3, [sp, #36]	; 0x24
 801f4a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4a8:	3302      	adds	r3, #2
 801f4aa:	930a      	str	r3, [sp, #40]	; 0x28
 801f4ac:	e702      	b.n	801f2b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4ae:	d027      	beq.n	801f500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801f4b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4b2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801f4b4:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801f4b6:	3b01      	subs	r3, #1
 801f4b8:	fb00 5003 	mla	r0, r0, r3, r5
 801f4bc:	1400      	asrs	r0, r0, #16
 801f4be:	f53f af16 	bmi.w	801f2ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f4c2:	3901      	subs	r1, #1
 801f4c4:	4288      	cmp	r0, r1
 801f4c6:	f6bf af12 	bge.w	801f2ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f4ca:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f4cc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f4ce:	fb01 0303 	mla	r3, r1, r3, r0
 801f4d2:	141b      	asrs	r3, r3, #16
 801f4d4:	f53f af0b 	bmi.w	801f2ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f4d8:	3a01      	subs	r2, #1
 801f4da:	4293      	cmp	r3, r2
 801f4dc:	f6bf af07 	bge.w	801f2ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f4e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4e2:	9311      	str	r3, [sp, #68]	; 0x44
 801f4e4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f4e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4ea:	930c      	str	r3, [sp, #48]	; 0x30
 801f4ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f4ee:	2b00      	cmp	r3, #0
 801f4f0:	dc70      	bgt.n	801f5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801f4f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f4f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f4fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f4fe:	930a      	str	r3, [sp, #40]	; 0x28
 801f500:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f502:	2b00      	cmp	r3, #0
 801f504:	f340 8124 	ble.w	801f750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801f508:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801f50c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f510:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801f514:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f516:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801f51a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801f51e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801f522:	eef0 6a48 	vmov.f32	s13, s16
 801f526:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f52a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f52e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801f532:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801f536:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801f53a:	eef0 6a68 	vmov.f32	s13, s17
 801f53e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f542:	ee18 2a10 	vmov	r2, s16
 801f546:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801f54a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f54e:	ee18 2a90 	vmov	r2, s17
 801f552:	9329      	str	r3, [sp, #164]	; 0xa4
 801f554:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f556:	fb92 f3f3 	sdiv	r3, r2, r3
 801f55a:	932a      	str	r3, [sp, #168]	; 0xa8
 801f55c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f55e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f560:	3b01      	subs	r3, #1
 801f562:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f566:	930e      	str	r3, [sp, #56]	; 0x38
 801f568:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f56a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801f56e:	bf08      	it	eq
 801f570:	4613      	moveq	r3, r2
 801f572:	9309      	str	r3, [sp, #36]	; 0x24
 801f574:	eef0 8a67 	vmov.f32	s17, s15
 801f578:	eeb0 8a47 	vmov.f32	s16, s14
 801f57c:	e68c      	b.n	801f298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801f57e:	b149      	cbz	r1, 801f594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 801f580:	5cb2      	ldrb	r2, [r6, r2]
 801f582:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f586:	4422      	add	r2, r4
 801f588:	4628      	mov	r0, r5
 801f58a:	46ac      	mov	ip, r5
 801f58c:	e6f1      	b.n	801f372 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801f58e:	4628      	mov	r0, r5
 801f590:	462a      	mov	r2, r5
 801f592:	e6ee      	b.n	801f372 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801f594:	4628      	mov	r0, r5
 801f596:	462a      	mov	r2, r5
 801f598:	e7f7      	b.n	801f58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f59a:	1c47      	adds	r7, r0, #1
 801f59c:	f53f af69 	bmi.w	801f472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801f5a0:	42ba      	cmp	r2, r7
 801f5a2:	f6ff af66 	blt.w	801f472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801f5a6:	1c6f      	adds	r7, r5, #1
 801f5a8:	f53f af63 	bmi.w	801f472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801f5ac:	42be      	cmp	r6, r7
 801f5ae:	f6ff af60 	blt.w	801f472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801f5b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f5b4:	9002      	str	r0, [sp, #8]
 801f5b6:	b236      	sxth	r6, r6
 801f5b8:	b212      	sxth	r2, r2
 801f5ba:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f5be:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f5c2:	9200      	str	r2, [sp, #0]
 801f5c4:	9601      	str	r6, [sp, #4]
 801f5c6:	4623      	mov	r3, r4
 801f5c8:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f5cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f5ce:	f7ff fd49 	bl	801f064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f5d2:	e74e      	b.n	801f472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801f5d4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801f5d6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f5d8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801f5da:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f5dc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f5e0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801f5e2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f5e6:	142d      	asrs	r5, r5, #16
 801f5e8:	1400      	asrs	r0, r0, #16
 801f5ea:	fb02 5000 	mla	r0, r2, r0, r5
 801f5ee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f5f0:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f5f4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f5f8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f5fc:	182e      	adds	r6, r5, r0
 801f5fe:	eb04 0509 	add.w	r5, r4, r9
 801f602:	2b00      	cmp	r3, #0
 801f604:	f000 8096 	beq.w	801f734 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801f608:	7877      	ldrb	r7, [r6, #1]
 801f60a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f60e:	4427      	add	r7, r4
 801f610:	2900      	cmp	r1, #0
 801f612:	f000 8097 	beq.w	801f744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 801f616:	18b0      	adds	r0, r6, r2
 801f618:	5cb2      	ldrb	r2, [r6, r2]
 801f61a:	7840      	ldrb	r0, [r0, #1]
 801f61c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f620:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f624:	4422      	add	r2, r4
 801f626:	4420      	add	r0, r4
 801f628:	b29b      	uxth	r3, r3
 801f62a:	b289      	uxth	r1, r1
 801f62c:	fb03 f801 	mul.w	r8, r3, r1
 801f630:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f632:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f636:	f8b6 c000 	ldrh.w	ip, [r6]
 801f63a:	78be      	ldrb	r6, [r7, #2]
 801f63c:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f640:	011b      	lsls	r3, r3, #4
 801f642:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f646:	b289      	uxth	r1, r1
 801f648:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f64c:	eba3 0308 	sub.w	r3, r3, r8
 801f650:	b29b      	uxth	r3, r3
 801f652:	ebae 0e01 	sub.w	lr, lr, r1
 801f656:	fa1f fe8e 	uxth.w	lr, lr
 801f65a:	435e      	muls	r6, r3
 801f65c:	fb0e 660b 	mla	r6, lr, fp, r6
 801f660:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f664:	9310      	str	r3, [sp, #64]	; 0x40
 801f666:	fb01 660b 	mla	r6, r1, fp, r6
 801f66a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f66e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f670:	fb08 660b 	mla	r6, r8, fp, r6
 801f674:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f678:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f67c:	fb1b fb03 	smulbb	fp, fp, r3
 801f680:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f684:	fb06 b60a 	mla	r6, r6, sl, fp
 801f688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f68a:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f68e:	787d      	ldrb	r5, [r7, #1]
 801f690:	783f      	ldrb	r7, [r7, #0]
 801f692:	435d      	muls	r5, r3
 801f694:	fb0e 550b 	mla	r5, lr, fp, r5
 801f698:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f69c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f69e:	fb01 550b 	mla	r5, r1, fp, r5
 801f6a2:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f6a6:	fb08 550b 	mla	r5, r8, fp, r5
 801f6aa:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f6ae:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f6b2:	fb1b fb03 	smulbb	fp, fp, r3
 801f6b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6b8:	437b      	muls	r3, r7
 801f6ba:	7817      	ldrb	r7, [r2, #0]
 801f6bc:	fb0e 3309 	mla	r3, lr, r9, r3
 801f6c0:	fb01 3307 	mla	r3, r1, r7, r3
 801f6c4:	7807      	ldrb	r7, [r0, #0]
 801f6c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f6ca:	fb08 3707 	mla	r7, r8, r7, r3
 801f6ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6d0:	fa5f fc8c 	uxtb.w	ip, ip
 801f6d4:	fb1c fc03 	smulbb	ip, ip, r3
 801f6d8:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f6dc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f6e0:	fb05 b50a 	mla	r5, r5, sl, fp
 801f6e4:	fb07 c70a 	mla	r7, r7, sl, ip
 801f6e8:	b2b6      	uxth	r6, r6
 801f6ea:	b2ad      	uxth	r5, r5
 801f6ec:	b2bf      	uxth	r7, r7
 801f6ee:	1c73      	adds	r3, r6, #1
 801f6f0:	1c7a      	adds	r2, r7, #1
 801f6f2:	f105 0b01 	add.w	fp, r5, #1
 801f6f6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f6fa:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f6fe:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f702:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f706:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f70a:	096d      	lsrs	r5, r5, #5
 801f70c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f70e:	4316      	orrs	r6, r2
 801f710:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f714:	432e      	orrs	r6, r5
 801f716:	f823 6b02 	strh.w	r6, [r3], #2
 801f71a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f71c:	930c      	str	r3, [sp, #48]	; 0x30
 801f71e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f720:	4413      	add	r3, r2
 801f722:	9327      	str	r3, [sp, #156]	; 0x9c
 801f724:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f726:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f728:	4413      	add	r3, r2
 801f72a:	9328      	str	r3, [sp, #160]	; 0xa0
 801f72c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f72e:	3b01      	subs	r3, #1
 801f730:	9311      	str	r3, [sp, #68]	; 0x44
 801f732:	e6db      	b.n	801f4ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801f734:	b149      	cbz	r1, 801f74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801f736:	5cb2      	ldrb	r2, [r6, r2]
 801f738:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f73c:	4422      	add	r2, r4
 801f73e:	4628      	mov	r0, r5
 801f740:	462f      	mov	r7, r5
 801f742:	e771      	b.n	801f628 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801f744:	4628      	mov	r0, r5
 801f746:	462a      	mov	r2, r5
 801f748:	e76e      	b.n	801f628 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801f74a:	4628      	mov	r0, r5
 801f74c:	462a      	mov	r2, r5
 801f74e:	e7f7      	b.n	801f740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801f750:	b015      	add	sp, #84	; 0x54
 801f752:	ecbd 8b08 	vpop	{d8-d11}
 801f756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801f75c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f75c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f760:	880e      	ldrh	r6, [r1, #0]
 801f762:	b085      	sub	sp, #20
 801f764:	0230      	lsls	r0, r6, #8
 801f766:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801f76a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801f76e:	0170      	lsls	r0, r6, #5
 801f770:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801f774:	9101      	str	r1, [sp, #4]
 801f776:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801f77a:	00f6      	lsls	r6, r6, #3
 801f77c:	ea4b 0000 	orr.w	r0, fp, r0
 801f780:	b2f6      	uxtb	r6, r6
 801f782:	4691      	mov	r9, r2
 801f784:	fb05 7a0c 	mla	sl, r5, ip, r7
 801f788:	4306      	orrs	r6, r0
 801f78a:	2d00      	cmp	r5, #0
 801f78c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801f790:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801f794:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801f798:	9603      	str	r6, [sp, #12]
 801f79a:	eb09 0e0a 	add.w	lr, r9, sl
 801f79e:	db42      	blt.n	801f826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801f7a0:	45a8      	cmp	r8, r5
 801f7a2:	dd40      	ble.n	801f826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801f7a4:	2f00      	cmp	r7, #0
 801f7a6:	db3c      	blt.n	801f822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801f7a8:	45bc      	cmp	ip, r7
 801f7aa:	dd3a      	ble.n	801f822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801f7ac:	f819 600a 	ldrb.w	r6, [r9, sl]
 801f7b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f7b4:	441e      	add	r6, r3
 801f7b6:	1c78      	adds	r0, r7, #1
 801f7b8:	d438      	bmi.n	801f82c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801f7ba:	4584      	cmp	ip, r0
 801f7bc:	dd36      	ble.n	801f82c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801f7be:	b3aa      	cbz	r2, 801f82c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801f7c0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f7c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f7c8:	4418      	add	r0, r3
 801f7ca:	3501      	adds	r5, #1
 801f7cc:	d432      	bmi.n	801f834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801f7ce:	45a8      	cmp	r8, r5
 801f7d0:	dd30      	ble.n	801f834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801f7d2:	b37c      	cbz	r4, 801f834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801f7d4:	2f00      	cmp	r7, #0
 801f7d6:	db2b      	blt.n	801f830 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801f7d8:	45bc      	cmp	ip, r7
 801f7da:	dd29      	ble.n	801f830 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801f7dc:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801f7e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f7e4:	441d      	add	r5, r3
 801f7e6:	3701      	adds	r7, #1
 801f7e8:	d427      	bmi.n	801f83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801f7ea:	45bc      	cmp	ip, r7
 801f7ec:	dd25      	ble.n	801f83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801f7ee:	b322      	cbz	r2, 801f83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801f7f0:	44f4      	add	ip, lr
 801f7f2:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801f7f6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f7fa:	443b      	add	r3, r7
 801f7fc:	781f      	ldrb	r7, [r3, #0]
 801f7fe:	f896 9000 	ldrb.w	r9, [r6]
 801f802:	f890 a000 	ldrb.w	sl, [r0]
 801f806:	f895 8000 	ldrb.w	r8, [r5]
 801f80a:	2a0f      	cmp	r2, #15
 801f80c:	4639      	mov	r1, r7
 801f80e:	d801      	bhi.n	801f814 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 801f810:	2c0f      	cmp	r4, #15
 801f812:	d914      	bls.n	801f83e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 801f814:	4b2c      	ldr	r3, [pc, #176]	; (801f8c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801f816:	4a2d      	ldr	r2, [pc, #180]	; (801f8cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 801f818:	482d      	ldr	r0, [pc, #180]	; (801f8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 801f81a:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801f81e:	f005 ffcf 	bl	80257c0 <__assert_func>
 801f822:	ae03      	add	r6, sp, #12
 801f824:	e7c7      	b.n	801f7b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 801f826:	a803      	add	r0, sp, #12
 801f828:	4606      	mov	r6, r0
 801f82a:	e7ce      	b.n	801f7ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f82c:	a803      	add	r0, sp, #12
 801f82e:	e7cc      	b.n	801f7ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f830:	ad03      	add	r5, sp, #12
 801f832:	e7d8      	b.n	801f7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 801f834:	ab03      	add	r3, sp, #12
 801f836:	461d      	mov	r5, r3
 801f838:	e7e0      	b.n	801f7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801f83a:	ab03      	add	r3, sp, #12
 801f83c:	e7de      	b.n	801f7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801f83e:	b292      	uxth	r2, r2
 801f840:	b2a4      	uxth	r4, r4
 801f842:	fb02 fe04 	mul.w	lr, r2, r4
 801f846:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 801f84a:	0112      	lsls	r2, r2, #4
 801f84c:	b2a4      	uxth	r4, r4
 801f84e:	f890 c002 	ldrb.w	ip, [r0, #2]
 801f852:	f896 b002 	ldrb.w	fp, [r6, #2]
 801f856:	7840      	ldrb	r0, [r0, #1]
 801f858:	7876      	ldrb	r6, [r6, #1]
 801f85a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f85e:	eba2 020e 	sub.w	r2, r2, lr
 801f862:	b292      	uxth	r2, r2
 801f864:	1b3f      	subs	r7, r7, r4
 801f866:	b2bf      	uxth	r7, r7
 801f868:	fb02 fc0c 	mul.w	ip, r2, ip
 801f86c:	fb07 cc0b 	mla	ip, r7, fp, ip
 801f870:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f874:	fb04 cc0b 	mla	ip, r4, fp, ip
 801f878:	f893 b002 	ldrb.w	fp, [r3, #2]
 801f87c:	785b      	ldrb	r3, [r3, #1]
 801f87e:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f882:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801f886:	fb02 fc0a 	mul.w	ip, r2, sl
 801f88a:	4342      	muls	r2, r0
 801f88c:	7868      	ldrb	r0, [r5, #1]
 801f88e:	fb07 cc09 	mla	ip, r7, r9, ip
 801f892:	fb07 2206 	mla	r2, r7, r6, r2
 801f896:	fb04 cc08 	mla	ip, r4, r8, ip
 801f89a:	fb04 2400 	mla	r4, r4, r0, r2
 801f89e:	fb0e cc01 	mla	ip, lr, r1, ip
 801f8a2:	fb0e 4e03 	mla	lr, lr, r3, r4
 801f8a6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f8aa:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f8ae:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f8b2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801f8b6:	9b01      	ldr	r3, [sp, #4]
 801f8b8:	ea4c 0c0e 	orr.w	ip, ip, lr
 801f8bc:	f8a3 c000 	strh.w	ip, [r3]
 801f8c0:	b005      	add	sp, #20
 801f8c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8c6:	bf00      	nop
 801f8c8:	0802b1ee 	.word	0x0802b1ee
 801f8cc:	0802b7be 	.word	0x0802b7be
 801f8d0:	0802b272 	.word	0x0802b272

0801f8d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8d8:	ed2d 8b08 	vpush	{d8-d11}
 801f8dc:	b08f      	sub	sp, #60	; 0x3c
 801f8de:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801f8e2:	920c      	str	r2, [sp, #48]	; 0x30
 801f8e4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f8e6:	910a      	str	r1, [sp, #40]	; 0x28
 801f8e8:	9306      	str	r3, [sp, #24]
 801f8ea:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f8ee:	900d      	str	r0, [sp, #52]	; 0x34
 801f8f0:	6850      	ldr	r0, [r2, #4]
 801f8f2:	6812      	ldr	r2, [r2, #0]
 801f8f4:	fb00 1303 	mla	r3, r0, r3, r1
 801f8f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f8fc:	9307      	str	r3, [sp, #28]
 801f8fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f900:	681b      	ldr	r3, [r3, #0]
 801f902:	9308      	str	r3, [sp, #32]
 801f904:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f906:	685c      	ldr	r4, [r3, #4]
 801f908:	eeb0 aa40 	vmov.f32	s20, s0
 801f90c:	eef0 9a60 	vmov.f32	s19, s1
 801f910:	eeb0 9a41 	vmov.f32	s18, s2
 801f914:	eeb0 8a62 	vmov.f32	s16, s5
 801f918:	eef0 8a43 	vmov.f32	s17, s6
 801f91c:	eef0 ba44 	vmov.f32	s23, s8
 801f920:	eeb0 ba64 	vmov.f32	s22, s9
 801f924:	eef0 aa45 	vmov.f32	s21, s10
 801f928:	3404      	adds	r4, #4
 801f92a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f92c:	2b00      	cmp	r3, #0
 801f92e:	dc03      	bgt.n	801f938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f930:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f932:	2b00      	cmp	r3, #0
 801f934:	f340 81d6 	ble.w	801fce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801f938:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f93a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f93e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f942:	1e48      	subs	r0, r1, #1
 801f944:	1e56      	subs	r6, r2, #1
 801f946:	9b06      	ldr	r3, [sp, #24]
 801f948:	2b00      	cmp	r3, #0
 801f94a:	f340 80b7 	ble.w	801fabc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f94e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f952:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f956:	d406      	bmi.n	801f966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f958:	4287      	cmp	r7, r0
 801f95a:	da04      	bge.n	801f966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f95c:	2b00      	cmp	r3, #0
 801f95e:	db02      	blt.n	801f966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f960:	42b3      	cmp	r3, r6
 801f962:	f2c0 80ac 	blt.w	801fabe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f966:	3701      	adds	r7, #1
 801f968:	f100 809d 	bmi.w	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f96c:	42b9      	cmp	r1, r7
 801f96e:	f2c0 809a 	blt.w	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f972:	3301      	adds	r3, #1
 801f974:	f100 8097 	bmi.w	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f978:	429a      	cmp	r2, r3
 801f97a:	f2c0 8094 	blt.w	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f97e:	9b06      	ldr	r3, [sp, #24]
 801f980:	930b      	str	r3, [sp, #44]	; 0x2c
 801f982:	9b07      	ldr	r3, [sp, #28]
 801f984:	9309      	str	r3, [sp, #36]	; 0x24
 801f986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f988:	2b00      	cmp	r3, #0
 801f98a:	f340 80b5 	ble.w	801faf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801f98e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f990:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801f992:	68c7      	ldr	r7, [r0, #12]
 801f994:	6892      	ldr	r2, [r2, #8]
 801f996:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f99a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f99e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f9a2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f9a6:	f100 80fb 	bmi.w	801fba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801f9aa:	f102 3cff 	add.w	ip, r2, #4294967295
 801f9ae:	4560      	cmp	r0, ip
 801f9b0:	f280 80f6 	bge.w	801fba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801f9b4:	2e00      	cmp	r6, #0
 801f9b6:	f2c0 80f3 	blt.w	801fba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801f9ba:	f107 3cff 	add.w	ip, r7, #4294967295
 801f9be:	4566      	cmp	r6, ip
 801f9c0:	f280 80ee 	bge.w	801fba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801f9c4:	b212      	sxth	r2, r2
 801f9c6:	fb06 0002 	mla	r0, r6, r2, r0
 801f9ca:	9e08      	ldr	r6, [sp, #32]
 801f9cc:	1837      	adds	r7, r6, r0
 801f9ce:	5c30      	ldrb	r0, [r6, r0]
 801f9d0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f9d4:	eb04 0c08 	add.w	ip, r4, r8
 801f9d8:	2b00      	cmp	r3, #0
 801f9da:	f000 80d3 	beq.w	801fb84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801f9de:	787e      	ldrb	r6, [r7, #1]
 801f9e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f9e4:	4426      	add	r6, r4
 801f9e6:	2900      	cmp	r1, #0
 801f9e8:	f000 80d4 	beq.w	801fb94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 801f9ec:	18b8      	adds	r0, r7, r2
 801f9ee:	5cba      	ldrb	r2, [r7, r2]
 801f9f0:	7840      	ldrb	r0, [r0, #1]
 801f9f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f9f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f9fa:	4422      	add	r2, r4
 801f9fc:	4420      	add	r0, r4
 801f9fe:	b29b      	uxth	r3, r3
 801fa00:	b289      	uxth	r1, r1
 801fa02:	fb03 f901 	mul.w	r9, r3, r1
 801fa06:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fa0a:	011b      	lsls	r3, r3, #4
 801fa0c:	b289      	uxth	r1, r1
 801fa0e:	78b7      	ldrb	r7, [r6, #2]
 801fa10:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fa14:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fa18:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fa1c:	eba3 0309 	sub.w	r3, r3, r9
 801fa20:	b29b      	uxth	r3, r3
 801fa22:	ebae 0e01 	sub.w	lr, lr, r1
 801fa26:	fa1f fe8e 	uxth.w	lr, lr
 801fa2a:	435f      	muls	r7, r3
 801fa2c:	fb0e 770a 	mla	r7, lr, sl, r7
 801fa30:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fa34:	fb01 770a 	mla	r7, r1, sl, r7
 801fa38:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fa3c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fa40:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fa44:	f896 8000 	ldrb.w	r8, [r6]
 801fa48:	7876      	ldrb	r6, [r6, #1]
 801fa4a:	fb03 f808 	mul.w	r8, r3, r8
 801fa4e:	fb0e 8807 	mla	r8, lr, r7, r8
 801fa52:	7817      	ldrb	r7, [r2, #0]
 801fa54:	fb01 8807 	mla	r8, r1, r7, r8
 801fa58:	7807      	ldrb	r7, [r0, #0]
 801fa5a:	fb09 8707 	mla	r7, r9, r7, r8
 801fa5e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fa62:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fa66:	ea47 070a 	orr.w	r7, r7, sl
 801fa6a:	4373      	muls	r3, r6
 801fa6c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fa70:	fb0e 330c 	mla	r3, lr, ip, r3
 801fa74:	fb01 310a 	mla	r1, r1, sl, r3
 801fa78:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fa7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa7e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fa82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fa86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fa8a:	ea47 070a 	orr.w	r7, r7, sl
 801fa8e:	801f      	strh	r7, [r3, #0]
 801fa90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa92:	3302      	adds	r3, #2
 801fa94:	9309      	str	r3, [sp, #36]	; 0x24
 801fa96:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801fa98:	449b      	add	fp, r3
 801fa9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa9c:	441d      	add	r5, r3
 801fa9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faa0:	3b01      	subs	r3, #1
 801faa2:	930b      	str	r3, [sp, #44]	; 0x2c
 801faa4:	e76f      	b.n	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801faa6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801faa8:	449b      	add	fp, r3
 801faaa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801faac:	441d      	add	r5, r3
 801faae:	9b06      	ldr	r3, [sp, #24]
 801fab0:	3b01      	subs	r3, #1
 801fab2:	9306      	str	r3, [sp, #24]
 801fab4:	9b07      	ldr	r3, [sp, #28]
 801fab6:	3302      	adds	r3, #2
 801fab8:	9307      	str	r3, [sp, #28]
 801faba:	e744      	b.n	801f946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fabc:	d023      	beq.n	801fb06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801fabe:	9b06      	ldr	r3, [sp, #24]
 801fac0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801fac2:	3b01      	subs	r3, #1
 801fac4:	fb00 b003 	mla	r0, r0, r3, fp
 801fac8:	1400      	asrs	r0, r0, #16
 801faca:	f53f af58 	bmi.w	801f97e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801face:	3901      	subs	r1, #1
 801fad0:	4288      	cmp	r0, r1
 801fad2:	f6bf af54 	bge.w	801f97e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801fad6:	9924      	ldr	r1, [sp, #144]	; 0x90
 801fad8:	fb01 5303 	mla	r3, r1, r3, r5
 801fadc:	141b      	asrs	r3, r3, #16
 801fade:	f53f af4e 	bmi.w	801f97e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801fae2:	3a01      	subs	r2, #1
 801fae4:	4293      	cmp	r3, r2
 801fae6:	f6bf af4a 	bge.w	801f97e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801faea:	9b06      	ldr	r3, [sp, #24]
 801faec:	9309      	str	r3, [sp, #36]	; 0x24
 801faee:	9b07      	ldr	r3, [sp, #28]
 801faf0:	930b      	str	r3, [sp, #44]	; 0x2c
 801faf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faf4:	2b00      	cmp	r3, #0
 801faf6:	dc70      	bgt.n	801fbda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faf8:	9b06      	ldr	r3, [sp, #24]
 801fafa:	9a07      	ldr	r2, [sp, #28]
 801fafc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fb00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fb04:	9307      	str	r3, [sp, #28]
 801fb06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb08:	2b00      	cmp	r3, #0
 801fb0a:	f340 80eb 	ble.w	801fce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801fb0e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801fb12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb16:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801fb1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb1c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801fb20:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801fb24:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801fb28:	eef0 6a48 	vmov.f32	s13, s16
 801fb2c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801fb30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb34:	ee37 8a48 	vsub.f32	s16, s14, s16
 801fb38:	ee16 ba90 	vmov	fp, s13
 801fb3c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801fb40:	eef0 6a68 	vmov.f32	s13, s17
 801fb44:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801fb48:	ee18 2a10 	vmov	r2, s16
 801fb4c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801fb50:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb54:	ee18 2a90 	vmov	r2, s17
 801fb58:	9323      	str	r3, [sp, #140]	; 0x8c
 801fb5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb5c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb60:	9324      	str	r3, [sp, #144]	; 0x90
 801fb62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fb66:	3b01      	subs	r3, #1
 801fb68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb6c:	930a      	str	r3, [sp, #40]	; 0x28
 801fb6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb70:	bf08      	it	eq
 801fb72:	4613      	moveq	r3, r2
 801fb74:	ee16 5a90 	vmov	r5, s13
 801fb78:	9306      	str	r3, [sp, #24]
 801fb7a:	eef0 8a67 	vmov.f32	s17, s15
 801fb7e:	eeb0 8a47 	vmov.f32	s16, s14
 801fb82:	e6d2      	b.n	801f92a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801fb84:	b149      	cbz	r1, 801fb9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801fb86:	5cba      	ldrb	r2, [r7, r2]
 801fb88:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb8c:	4422      	add	r2, r4
 801fb8e:	4660      	mov	r0, ip
 801fb90:	4666      	mov	r6, ip
 801fb92:	e734      	b.n	801f9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801fb94:	4660      	mov	r0, ip
 801fb96:	4662      	mov	r2, ip
 801fb98:	e731      	b.n	801f9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801fb9a:	4660      	mov	r0, ip
 801fb9c:	4662      	mov	r2, ip
 801fb9e:	e7f7      	b.n	801fb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801fba0:	f110 0c01 	adds.w	ip, r0, #1
 801fba4:	f53f af74 	bmi.w	801fa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801fba8:	4562      	cmp	r2, ip
 801fbaa:	f6ff af71 	blt.w	801fa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801fbae:	f116 0c01 	adds.w	ip, r6, #1
 801fbb2:	f53f af6d 	bmi.w	801fa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801fbb6:	4567      	cmp	r7, ip
 801fbb8:	f6ff af6a 	blt.w	801fa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801fbbc:	b23f      	sxth	r7, r7
 801fbbe:	b212      	sxth	r2, r2
 801fbc0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fbc4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fbc8:	9200      	str	r2, [sp, #0]
 801fbca:	9701      	str	r7, [sp, #4]
 801fbcc:	4623      	mov	r3, r4
 801fbce:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fbd2:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fbd4:	f7ff fdc2 	bl	801f75c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fbd8:	e75a      	b.n	801fa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801fbda:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801fbdc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fbe0:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fbe4:	1428      	asrs	r0, r5, #16
 801fbe6:	fb02 6000 	mla	r0, r2, r0, r6
 801fbea:	9e08      	ldr	r6, [sp, #32]
 801fbec:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fbf0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fbf4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fbf8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fbfc:	1837      	adds	r7, r6, r0
 801fbfe:	eb04 0c08 	add.w	ip, r4, r8
 801fc02:	2b00      	cmp	r3, #0
 801fc04:	d060      	beq.n	801fcc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fc06:	787e      	ldrb	r6, [r7, #1]
 801fc08:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fc0c:	4426      	add	r6, r4
 801fc0e:	2900      	cmp	r1, #0
 801fc10:	d062      	beq.n	801fcd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801fc12:	18b8      	adds	r0, r7, r2
 801fc14:	5cba      	ldrb	r2, [r7, r2]
 801fc16:	7840      	ldrb	r0, [r0, #1]
 801fc18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc1c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fc20:	4422      	add	r2, r4
 801fc22:	4420      	add	r0, r4
 801fc24:	b29b      	uxth	r3, r3
 801fc26:	b289      	uxth	r1, r1
 801fc28:	fb03 f901 	mul.w	r9, r3, r1
 801fc2c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fc30:	011b      	lsls	r3, r3, #4
 801fc32:	b289      	uxth	r1, r1
 801fc34:	78b7      	ldrb	r7, [r6, #2]
 801fc36:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fc3a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fc3e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fc42:	eba3 0309 	sub.w	r3, r3, r9
 801fc46:	b29b      	uxth	r3, r3
 801fc48:	ebae 0e01 	sub.w	lr, lr, r1
 801fc4c:	fa1f fe8e 	uxth.w	lr, lr
 801fc50:	435f      	muls	r7, r3
 801fc52:	fb0e 770a 	mla	r7, lr, sl, r7
 801fc56:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fc5a:	fb01 770a 	mla	r7, r1, sl, r7
 801fc5e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fc62:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fc66:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fc6a:	f896 8000 	ldrb.w	r8, [r6]
 801fc6e:	7876      	ldrb	r6, [r6, #1]
 801fc70:	fb03 f808 	mul.w	r8, r3, r8
 801fc74:	fb0e 8807 	mla	r8, lr, r7, r8
 801fc78:	7817      	ldrb	r7, [r2, #0]
 801fc7a:	fb01 8807 	mla	r8, r1, r7, r8
 801fc7e:	7807      	ldrb	r7, [r0, #0]
 801fc80:	fb09 8707 	mla	r7, r9, r7, r8
 801fc84:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fc88:	4373      	muls	r3, r6
 801fc8a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fc8e:	7856      	ldrb	r6, [r2, #1]
 801fc90:	ea47 070a 	orr.w	r7, r7, sl
 801fc94:	fb0e 330c 	mla	r3, lr, ip, r3
 801fc98:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fc9c:	fb01 3306 	mla	r3, r1, r6, r3
 801fca0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fca4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fca8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fcaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fcae:	ea47 070a 	orr.w	r7, r7, sl
 801fcb2:	f823 7b02 	strh.w	r7, [r3], #2
 801fcb6:	930b      	str	r3, [sp, #44]	; 0x2c
 801fcb8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801fcba:	449b      	add	fp, r3
 801fcbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fcbe:	441d      	add	r5, r3
 801fcc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fcc2:	3b01      	subs	r3, #1
 801fcc4:	9309      	str	r3, [sp, #36]	; 0x24
 801fcc6:	e714      	b.n	801faf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801fcc8:	b149      	cbz	r1, 801fcde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801fcca:	5cba      	ldrb	r2, [r7, r2]
 801fccc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fcd0:	4422      	add	r2, r4
 801fcd2:	4660      	mov	r0, ip
 801fcd4:	4666      	mov	r6, ip
 801fcd6:	e7a5      	b.n	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fcd8:	4660      	mov	r0, ip
 801fcda:	4662      	mov	r2, ip
 801fcdc:	e7a2      	b.n	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fcde:	4660      	mov	r0, ip
 801fce0:	4662      	mov	r2, ip
 801fce2:	e7f7      	b.n	801fcd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801fce4:	b00f      	add	sp, #60	; 0x3c
 801fce6:	ecbd 8b08 	vpop	{d8-d11}
 801fcea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801fcf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fcf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcf4:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 801fcf8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801fcfc:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801fd00:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fd04:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 801fd08:	fb04 560c 	mla	r6, r4, ip, r5
 801fd0c:	2c00      	cmp	r4, #0
 801fd0e:	eb02 0e06 	add.w	lr, r2, r6
 801fd12:	db3d      	blt.n	801fd90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801fd14:	45a0      	cmp	r8, r4
 801fd16:	dd3b      	ble.n	801fd90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801fd18:	2d00      	cmp	r5, #0
 801fd1a:	db37      	blt.n	801fd8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801fd1c:	45ac      	cmp	ip, r5
 801fd1e:	dd35      	ble.n	801fd8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801fd20:	5d92      	ldrb	r2, [r2, r6]
 801fd22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fd26:	1c6e      	adds	r6, r5, #1
 801fd28:	d435      	bmi.n	801fd96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801fd2a:	45b4      	cmp	ip, r6
 801fd2c:	dd33      	ble.n	801fd96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801fd2e:	b3a0      	cbz	r0, 801fd9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 801fd30:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801fd34:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801fd38:	3401      	adds	r4, #1
 801fd3a:	d432      	bmi.n	801fda2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801fd3c:	45a0      	cmp	r8, r4
 801fd3e:	dd30      	ble.n	801fda2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801fd40:	b397      	cbz	r7, 801fda8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 801fd42:	2d00      	cmp	r5, #0
 801fd44:	db2b      	blt.n	801fd9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801fd46:	45ac      	cmp	ip, r5
 801fd48:	dd29      	ble.n	801fd9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801fd4a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801fd4e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801fd52:	3501      	adds	r5, #1
 801fd54:	d42b      	bmi.n	801fdae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801fd56:	45ac      	cmp	ip, r5
 801fd58:	dd29      	ble.n	801fdae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801fd5a:	b350      	cbz	r0, 801fdb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801fd5c:	44f4      	add	ip, lr
 801fd5e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fd62:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801fd66:	280f      	cmp	r0, #15
 801fd68:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801fd6c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801fd70:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fd74:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801fd78:	d801      	bhi.n	801fd7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801fd7a:	2f0f      	cmp	r7, #15
 801fd7c:	d91b      	bls.n	801fdb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801fd7e:	4b8d      	ldr	r3, [pc, #564]	; (801ffb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 801fd80:	4a8d      	ldr	r2, [pc, #564]	; (801ffb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801fd82:	488e      	ldr	r0, [pc, #568]	; (801ffbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801fd84:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801fd88:	f005 fd1a 	bl	80257c0 <__assert_func>
 801fd8c:	2200      	movs	r2, #0
 801fd8e:	e7ca      	b.n	801fd26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 801fd90:	2600      	movs	r6, #0
 801fd92:	4632      	mov	r2, r6
 801fd94:	e7d0      	b.n	801fd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801fd96:	2600      	movs	r6, #0
 801fd98:	e7ce      	b.n	801fd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801fd9a:	4606      	mov	r6, r0
 801fd9c:	e7cc      	b.n	801fd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801fd9e:	2400      	movs	r4, #0
 801fda0:	e7d7      	b.n	801fd52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801fda2:	2300      	movs	r3, #0
 801fda4:	461c      	mov	r4, r3
 801fda6:	e7de      	b.n	801fd66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801fda8:	463b      	mov	r3, r7
 801fdaa:	463c      	mov	r4, r7
 801fdac:	e7db      	b.n	801fd66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801fdae:	2300      	movs	r3, #0
 801fdb0:	e7d9      	b.n	801fd66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801fdb2:	4603      	mov	r3, r0
 801fdb4:	e7d7      	b.n	801fd66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801fdb6:	b280      	uxth	r0, r0
 801fdb8:	b2bf      	uxth	r7, r7
 801fdba:	fb07 fe00 	mul.w	lr, r7, r0
 801fdbe:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801fdc2:	0100      	lsls	r0, r0, #4
 801fdc4:	eba0 0c0e 	sub.w	ip, r0, lr
 801fdc8:	b2bf      	uxth	r7, r7
 801fdca:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801fdce:	fa1f fc8c 	uxth.w	ip, ip
 801fdd2:	1bed      	subs	r5, r5, r7
 801fdd4:	b2ad      	uxth	r5, r5
 801fdd6:	fb0a f00c 	mul.w	r0, sl, ip
 801fdda:	fb0b 0005 	mla	r0, fp, r5, r0
 801fdde:	fb07 0009 	mla	r0, r7, r9, r0
 801fde2:	fb0e 0008 	mla	r0, lr, r8, r0
 801fde6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fdea:	9001      	str	r0, [sp, #4]
 801fdec:	2800      	cmp	r0, #0
 801fdee:	f000 80de 	beq.w	801ffae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801fdf2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801fdf6:	d018      	beq.n	801fe2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 801fdf8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801fdfc:	fb0b f000 	mul.w	r0, fp, r0
 801fe00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fe04:	fb0b fb02 	mul.w	fp, fp, r2
 801fe08:	0a02      	lsrs	r2, r0, #8
 801fe0a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fe0e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801fe12:	4402      	add	r2, r0
 801fe14:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801fe18:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fe1c:	0a12      	lsrs	r2, r2, #8
 801fe1e:	0a00      	lsrs	r0, r0, #8
 801fe20:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fe24:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801fe28:	4302      	orrs	r2, r0
 801fe2a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fe2e:	d01a      	beq.n	801fe66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 801fe30:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801fe34:	fb0a f000 	mul.w	r0, sl, r0
 801fe38:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801fe3c:	fb0a fa06 	mul.w	sl, sl, r6
 801fe40:	0a06      	lsrs	r6, r0, #8
 801fe42:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801fe46:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801fe4a:	4406      	add	r6, r0
 801fe4c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801fe50:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801fe54:	0a36      	lsrs	r6, r6, #8
 801fe56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe5a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801fe5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe62:	ea46 060a 	orr.w	r6, r6, sl
 801fe66:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fe6a:	d01b      	beq.n	801fea4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 801fe6c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801fe70:	fb09 fa0a 	mul.w	sl, r9, sl
 801fe74:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fe78:	fb09 f004 	mul.w	r0, r9, r4
 801fe7c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801fe80:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fe84:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fe88:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801fe8c:	4454      	add	r4, sl
 801fe8e:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801fe92:	0a24      	lsrs	r4, r4, #8
 801fe94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe98:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fe9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fea0:	ea44 0409 	orr.w	r4, r4, r9
 801fea4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801fea8:	d01b      	beq.n	801fee2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 801feaa:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801feae:	fb08 f909 	mul.w	r9, r8, r9
 801feb2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801feb6:	fb08 f003 	mul.w	r0, r8, r3
 801feba:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801febe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fec2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801fec6:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801feca:	444b      	add	r3, r9
 801fecc:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801fed0:	0a1b      	lsrs	r3, r3, #8
 801fed2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fed6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801feda:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fede:	ea43 0308 	orr.w	r3, r3, r8
 801fee2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801fee6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801feea:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801feee:	fb0c f808 	mul.w	r8, ip, r8
 801fef2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fef6:	fb0c f606 	mul.w	r6, ip, r6
 801fefa:	fb05 8909 	mla	r9, r5, r9, r8
 801fefe:	fb05 6502 	mla	r5, r5, r2, r6
 801ff02:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801ff06:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ff0a:	9a01      	ldr	r2, [sp, #4]
 801ff0c:	8808      	ldrh	r0, [r1, #0]
 801ff0e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ff12:	fb07 9908 	mla	r9, r7, r8, r9
 801ff16:	fb07 5704 	mla	r7, r7, r4, r5
 801ff1a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801ff1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ff22:	b2b6      	uxth	r6, r6
 801ff24:	fb0e 9808 	mla	r8, lr, r8, r9
 801ff28:	fb0e 7e03 	mla	lr, lr, r3, r7
 801ff2c:	4372      	muls	r2, r6
 801ff2e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ff32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ff36:	1c53      	adds	r3, r2, #1
 801ff38:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801ff3c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801ff40:	ea48 0e0e 	orr.w	lr, r8, lr
 801ff44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ff48:	1205      	asrs	r5, r0, #8
 801ff4a:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801ff4e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ff52:	b2db      	uxtb	r3, r3
 801ff54:	fb12 f206 	smulbb	r2, r2, r6
 801ff58:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ff5c:	fb05 2503 	mla	r5, r5, r3, r2
 801ff60:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801ff64:	10c2      	asrs	r2, r0, #3
 801ff66:	fa5f fe8e 	uxtb.w	lr, lr
 801ff6a:	00c0      	lsls	r0, r0, #3
 801ff6c:	fb14 f406 	smulbb	r4, r4, r6
 801ff70:	b2c0      	uxtb	r0, r0
 801ff72:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ff76:	fb1e fe06 	smulbb	lr, lr, r6
 801ff7a:	fb02 4203 	mla	r2, r2, r3, r4
 801ff7e:	b2ad      	uxth	r5, r5
 801ff80:	fb00 e303 	mla	r3, r0, r3, lr
 801ff84:	b298      	uxth	r0, r3
 801ff86:	b294      	uxth	r4, r2
 801ff88:	1c6b      	adds	r3, r5, #1
 801ff8a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ff8e:	1c62      	adds	r2, r4, #1
 801ff90:	1c43      	adds	r3, r0, #1
 801ff92:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ff96:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ff9a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ff9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ffa2:	0952      	lsrs	r2, r2, #5
 801ffa4:	432b      	orrs	r3, r5
 801ffa6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ffaa:	4313      	orrs	r3, r2
 801ffac:	800b      	strh	r3, [r1, #0]
 801ffae:	b003      	add	sp, #12
 801ffb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffb4:	0802b1ee 	.word	0x0802b1ee
 801ffb8:	0802b7be 	.word	0x0802b7be
 801ffbc:	0802b272 	.word	0x0802b272

0801ffc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ffc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffc4:	ed2d 8b08 	vpush	{d8-d11}
 801ffc8:	b09f      	sub	sp, #124	; 0x7c
 801ffca:	eeb0 aa40 	vmov.f32	s20, s0
 801ffce:	921b      	str	r2, [sp, #108]	; 0x6c
 801ffd0:	9309      	str	r3, [sp, #36]	; 0x24
 801ffd2:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801ffd4:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 801ffd8:	931c      	str	r3, [sp, #112]	; 0x70
 801ffda:	9119      	str	r1, [sp, #100]	; 0x64
 801ffdc:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801ffe0:	901d      	str	r0, [sp, #116]	; 0x74
 801ffe2:	6850      	ldr	r0, [r2, #4]
 801ffe4:	6812      	ldr	r2, [r2, #0]
 801ffe6:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 801ffe8:	fb00 1303 	mla	r3, r0, r3, r1
 801ffec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fff0:	930c      	str	r3, [sp, #48]	; 0x30
 801fff2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801fff4:	681b      	ldr	r3, [r3, #0]
 801fff6:	9312      	str	r3, [sp, #72]	; 0x48
 801fff8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801fffa:	685e      	ldr	r6, [r3, #4]
 801fffc:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020000:	930d      	str	r3, [sp, #52]	; 0x34
 8020002:	eef0 9a60 	vmov.f32	s19, s1
 8020006:	eeb0 9a41 	vmov.f32	s18, s2
 802000a:	eeb0 8a62 	vmov.f32	s16, s5
 802000e:	eef0 8a43 	vmov.f32	s17, s6
 8020012:	eef0 ba44 	vmov.f32	s23, s8
 8020016:	eeb0 ba64 	vmov.f32	s22, s9
 802001a:	eef0 aa45 	vmov.f32	s21, s10
 802001e:	3604      	adds	r6, #4
 8020020:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020022:	2b00      	cmp	r3, #0
 8020024:	dc03      	bgt.n	802002e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020026:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020028:	2b00      	cmp	r3, #0
 802002a:	f340 8388 	ble.w	802073e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802002e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8020030:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020034:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020038:	1e48      	subs	r0, r1, #1
 802003a:	1e57      	subs	r7, r2, #1
 802003c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802003e:	2b00      	cmp	r3, #0
 8020040:	f340 8195 	ble.w	802036e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8020044:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020046:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802004a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802004e:	d406      	bmi.n	802005e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020050:	4584      	cmp	ip, r0
 8020052:	da04      	bge.n	802005e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020054:	2b00      	cmp	r3, #0
 8020056:	db02      	blt.n	802005e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020058:	42bb      	cmp	r3, r7
 802005a:	f2c0 8189 	blt.w	8020370 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 802005e:	f11c 0c01 	adds.w	ip, ip, #1
 8020062:	f100 8177 	bmi.w	8020354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8020066:	4561      	cmp	r1, ip
 8020068:	f2c0 8174 	blt.w	8020354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802006c:	3301      	adds	r3, #1
 802006e:	f100 8171 	bmi.w	8020354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8020072:	429a      	cmp	r2, r3
 8020074:	f2c0 816e 	blt.w	8020354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8020078:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802007a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802007c:	931a      	str	r3, [sp, #104]	; 0x68
 802007e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020080:	2b00      	cmp	r3, #0
 8020082:	f340 8193 	ble.w	80203ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020086:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020088:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802008c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 802008e:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020092:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020094:	141b      	asrs	r3, r3, #16
 8020096:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802009a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802009e:	f100 81d6 	bmi.w	802044e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80200a2:	f100 38ff 	add.w	r8, r0, #4294967295
 80200a6:	4543      	cmp	r3, r8
 80200a8:	f280 81d1 	bge.w	802044e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80200ac:	f1bc 0f00 	cmp.w	ip, #0
 80200b0:	f2c0 81cd 	blt.w	802044e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80200b4:	f10e 38ff 	add.w	r8, lr, #4294967295
 80200b8:	45c4      	cmp	ip, r8
 80200ba:	f280 81c8 	bge.w	802044e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80200be:	b200      	sxth	r0, r0
 80200c0:	fb0c 3300 	mla	r3, ip, r0, r3
 80200c4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80200c6:	eb04 0803 	add.w	r8, r4, r3
 80200ca:	5ce3      	ldrb	r3, [r4, r3]
 80200cc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80200d0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80200d4:	2a00      	cmp	r2, #0
 80200d6:	f000 81af 	beq.w	8020438 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80200da:	f898 c001 	ldrb.w	ip, [r8, #1]
 80200de:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80200e2:	940e      	str	r4, [sp, #56]	; 0x38
 80200e4:	0e24      	lsrs	r4, r4, #24
 80200e6:	9415      	str	r4, [sp, #84]	; 0x54
 80200e8:	b179      	cbz	r1, 802010a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80200ea:	eb08 0c00 	add.w	ip, r8, r0
 80200ee:	f818 0000 	ldrb.w	r0, [r8, r0]
 80200f2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80200f6:	900a      	str	r0, [sp, #40]	; 0x28
 80200f8:	0e00      	lsrs	r0, r0, #24
 80200fa:	9013      	str	r0, [sp, #76]	; 0x4c
 80200fc:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020100:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020104:	900f      	str	r0, [sp, #60]	; 0x3c
 8020106:	0e00      	lsrs	r0, r0, #24
 8020108:	9016      	str	r0, [sp, #88]	; 0x58
 802010a:	b292      	uxth	r2, r2
 802010c:	b289      	uxth	r1, r1
 802010e:	fb02 f901 	mul.w	r9, r2, r1
 8020112:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020116:	0112      	lsls	r2, r2, #4
 8020118:	eba2 0809 	sub.w	r8, r2, r9
 802011c:	b289      	uxth	r1, r1
 802011e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020122:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020124:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020126:	fa1f f888 	uxth.w	r8, r8
 802012a:	1a52      	subs	r2, r2, r1
 802012c:	b292      	uxth	r2, r2
 802012e:	fb08 f000 	mul.w	r0, r8, r0
 8020132:	fb02 000e 	mla	r0, r2, lr, r0
 8020136:	fb01 0004 	mla	r0, r1, r4, r0
 802013a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802013c:	fb09 0004 	mla	r0, r9, r4, r0
 8020140:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020144:	2800      	cmp	r0, #0
 8020146:	f000 80fa 	beq.w	802033e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802014a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802014e:	d01b      	beq.n	8020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020150:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020154:	fb0e fa0a 	mul.w	sl, lr, sl
 8020158:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802015c:	fb0e fe03 	mul.w	lr, lr, r3
 8020160:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020164:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020168:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802016c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020170:	4453      	add	r3, sl
 8020172:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020176:	0a1b      	lsrs	r3, r3, #8
 8020178:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802017c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020180:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020184:	ea43 030c 	orr.w	r3, r3, ip
 8020188:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802018a:	2cff      	cmp	r4, #255	; 0xff
 802018c:	d021      	beq.n	80201d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802018e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020190:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020194:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020196:	fb04 fb0b 	mul.w	fp, r4, fp
 802019a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802019c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80201a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80201a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80201a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80201aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201b6:	44de      	add	lr, fp
 80201b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80201c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201cc:	ea4e 040a 	orr.w	r4, lr, sl
 80201d0:	940e      	str	r4, [sp, #56]	; 0x38
 80201d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201d4:	2cff      	cmp	r4, #255	; 0xff
 80201d6:	d021      	beq.n	802021c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80201d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80201da:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80201de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201e0:	fb04 fb0b 	mul.w	fp, r4, fp
 80201e4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80201e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80201ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80201f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80201f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020200:	44de      	add	lr, fp
 8020202:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802020a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802020e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020212:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020216:	ea4e 040a 	orr.w	r4, lr, sl
 802021a:	940a      	str	r4, [sp, #40]	; 0x28
 802021c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802021e:	2cff      	cmp	r4, #255	; 0xff
 8020220:	d021      	beq.n	8020266 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8020222:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020224:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020228:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802022a:	fb04 fb0b 	mul.w	fp, r4, fp
 802022e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020230:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020234:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020236:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802023a:	fb04 fa0a 	mul.w	sl, r4, sl
 802023e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020242:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020246:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802024a:	44de      	add	lr, fp
 802024c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020250:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020254:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020258:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802025c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020260:	ea4e 040a 	orr.w	r4, lr, sl
 8020264:	940f      	str	r4, [sp, #60]	; 0x3c
 8020266:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020268:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802026c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802026e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020272:	fb08 fc0c 	mul.w	ip, r8, ip
 8020276:	fb02 cc0e 	mla	ip, r2, lr, ip
 802027a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802027e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020280:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020284:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020288:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802028a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802028e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020292:	fb08 f80e 	mul.w	r8, r8, lr
 8020296:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802029a:	fb02 8303 	mla	r3, r2, r3, r8
 802029e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80202a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80202a2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80202a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80202a8:	fb01 330a 	mla	r3, r1, sl, r3
 80202ac:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80202b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80202b2:	fb09 3901 	mla	r9, r9, r1, r3
 80202b6:	4342      	muls	r2, r0
 80202b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80202c0:	883b      	ldrh	r3, [r7, #0]
 80202c2:	1c50      	adds	r0, r2, #1
 80202c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80202c8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80202cc:	ea4c 0c09 	orr.w	ip, ip, r9
 80202d0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80202d4:	1219      	asrs	r1, r3, #8
 80202d6:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80202da:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80202de:	b2c0      	uxtb	r0, r0
 80202e0:	fb12 f204 	smulbb	r2, r2, r4
 80202e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80202e8:	fb01 2100 	mla	r1, r1, r0, r2
 80202ec:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80202f0:	10da      	asrs	r2, r3, #3
 80202f2:	fa5f fc8c 	uxtb.w	ip, ip
 80202f6:	00db      	lsls	r3, r3, #3
 80202f8:	fb1c fc04 	smulbb	ip, ip, r4
 80202fc:	b2db      	uxtb	r3, r3
 80202fe:	b289      	uxth	r1, r1
 8020300:	fb03 c300 	mla	r3, r3, r0, ip
 8020304:	fa1f fc83 	uxth.w	ip, r3
 8020308:	1c4b      	adds	r3, r1, #1
 802030a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802030e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020312:	fb1e fe04 	smulbb	lr, lr, r4
 8020316:	f10c 0301 	add.w	r3, ip, #1
 802031a:	fb02 e200 	mla	r2, r2, r0, lr
 802031e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020322:	b292      	uxth	r2, r2
 8020324:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020328:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802032c:	430b      	orrs	r3, r1
 802032e:	1c51      	adds	r1, r2, #1
 8020330:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020334:	0952      	lsrs	r2, r2, #5
 8020336:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802033a:	4313      	orrs	r3, r2
 802033c:	803b      	strh	r3, [r7, #0]
 802033e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8020340:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8020342:	441a      	add	r2, r3
 8020344:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020346:	9231      	str	r2, [sp, #196]	; 0xc4
 8020348:	441d      	add	r5, r3
 802034a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802034c:	3b01      	subs	r3, #1
 802034e:	3702      	adds	r7, #2
 8020350:	931a      	str	r3, [sp, #104]	; 0x68
 8020352:	e694      	b.n	802007e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8020354:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8020356:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020358:	441c      	add	r4, r3
 802035a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802035c:	9431      	str	r4, [sp, #196]	; 0xc4
 802035e:	441d      	add	r5, r3
 8020360:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020362:	3b01      	subs	r3, #1
 8020364:	9309      	str	r3, [sp, #36]	; 0x24
 8020366:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020368:	3302      	adds	r3, #2
 802036a:	930c      	str	r3, [sp, #48]	; 0x30
 802036c:	e666      	b.n	802003c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802036e:	d024      	beq.n	80203ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8020370:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020372:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8020374:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020376:	3b01      	subs	r3, #1
 8020378:	fb00 4003 	mla	r0, r0, r3, r4
 802037c:	1400      	asrs	r0, r0, #16
 802037e:	f53f ae7b 	bmi.w	8020078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020382:	3901      	subs	r1, #1
 8020384:	4288      	cmp	r0, r1
 8020386:	f6bf ae77 	bge.w	8020078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802038a:	9934      	ldr	r1, [sp, #208]	; 0xd0
 802038c:	fb01 5303 	mla	r3, r1, r3, r5
 8020390:	141b      	asrs	r3, r3, #16
 8020392:	f53f ae71 	bmi.w	8020078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020396:	3a01      	subs	r2, #1
 8020398:	4293      	cmp	r3, r2
 802039a:	f6bf ae6d 	bge.w	8020078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802039e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80203a2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80203a6:	f1bb 0f00 	cmp.w	fp, #0
 80203aa:	dc70      	bgt.n	802048e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80203ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203ae:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80203b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80203b4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80203b8:	930c      	str	r3, [sp, #48]	; 0x30
 80203ba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80203bc:	2b00      	cmp	r3, #0
 80203be:	f340 81be 	ble.w	802073e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80203c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80203c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80203ca:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80203ce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80203d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80203d4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80203d8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80203dc:	eef0 6a48 	vmov.f32	s13, s16
 80203e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80203e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80203e8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80203ec:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80203f0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80203f4:	eef0 6a68 	vmov.f32	s13, s17
 80203f8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80203fc:	ee18 2a10 	vmov	r2, s16
 8020400:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020404:	fb92 f3f3 	sdiv	r3, r2, r3
 8020408:	ee18 2a90 	vmov	r2, s17
 802040c:	9333      	str	r3, [sp, #204]	; 0xcc
 802040e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020410:	fb92 f3f3 	sdiv	r3, r2, r3
 8020414:	9334      	str	r3, [sp, #208]	; 0xd0
 8020416:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020418:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802041a:	3b01      	subs	r3, #1
 802041c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020420:	9319      	str	r3, [sp, #100]	; 0x64
 8020422:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020424:	bf08      	it	eq
 8020426:	4613      	moveq	r3, r2
 8020428:	ee16 5a90 	vmov	r5, s13
 802042c:	9309      	str	r3, [sp, #36]	; 0x24
 802042e:	eef0 8a67 	vmov.f32	s17, s15
 8020432:	eeb0 8a47 	vmov.f32	s16, s14
 8020436:	e5f3      	b.n	8020020 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020438:	2900      	cmp	r1, #0
 802043a:	f43f ae66 	beq.w	802010a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802043e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020442:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020446:	900a      	str	r0, [sp, #40]	; 0x28
 8020448:	0e00      	lsrs	r0, r0, #24
 802044a:	9013      	str	r0, [sp, #76]	; 0x4c
 802044c:	e65d      	b.n	802010a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802044e:	f113 0801 	adds.w	r8, r3, #1
 8020452:	f53f af74 	bmi.w	802033e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020456:	4540      	cmp	r0, r8
 8020458:	f6ff af71 	blt.w	802033e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802045c:	f11c 0801 	adds.w	r8, ip, #1
 8020460:	f53f af6d 	bmi.w	802033e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020464:	45c6      	cmp	lr, r8
 8020466:	f6ff af6a 	blt.w	802033e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802046a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802046c:	9302      	str	r3, [sp, #8]
 802046e:	b200      	sxth	r0, r0
 8020470:	fa0f f38e 	sxth.w	r3, lr
 8020474:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020478:	e9cd c203 	strd	ip, r2, [sp, #12]
 802047c:	9301      	str	r3, [sp, #4]
 802047e:	9000      	str	r0, [sp, #0]
 8020480:	4633      	mov	r3, r6
 8020482:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020484:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020486:	4639      	mov	r1, r7
 8020488:	f7ff fc32 	bl	801fcf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802048c:	e757      	b.n	802033e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802048e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020490:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020492:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020496:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8020498:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802049c:	1427      	asrs	r7, r4, #16
 802049e:	142b      	asrs	r3, r5, #16
 80204a0:	fb01 7303 	mla	r3, r1, r3, r7
 80204a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80204a6:	18e7      	adds	r7, r4, r3
 80204a8:	5ce3      	ldrb	r3, [r4, r3]
 80204aa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80204ae:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80204b2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80204b6:	2a00      	cmp	r2, #0
 80204b8:	f000 8137 	beq.w	802072a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80204bc:	f897 e001 	ldrb.w	lr, [r7, #1]
 80204c0:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80204c4:	9410      	str	r4, [sp, #64]	; 0x40
 80204c6:	0e24      	lsrs	r4, r4, #24
 80204c8:	9417      	str	r4, [sp, #92]	; 0x5c
 80204ca:	b170      	cbz	r0, 80204ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80204cc:	eb07 0e01 	add.w	lr, r7, r1
 80204d0:	5c79      	ldrb	r1, [r7, r1]
 80204d2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80204d6:	910b      	str	r1, [sp, #44]	; 0x2c
 80204d8:	0e09      	lsrs	r1, r1, #24
 80204da:	9114      	str	r1, [sp, #80]	; 0x50
 80204dc:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80204e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80204e4:	9111      	str	r1, [sp, #68]	; 0x44
 80204e6:	0e09      	lsrs	r1, r1, #24
 80204e8:	9118      	str	r1, [sp, #96]	; 0x60
 80204ea:	b292      	uxth	r2, r2
 80204ec:	b280      	uxth	r0, r0
 80204ee:	fb02 f800 	mul.w	r8, r2, r0
 80204f2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80204f6:	0112      	lsls	r2, r2, #4
 80204f8:	eba2 0e08 	sub.w	lr, r2, r8
 80204fc:	b280      	uxth	r0, r0
 80204fe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020502:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020504:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020506:	fa1f fe8e 	uxth.w	lr, lr
 802050a:	1a12      	subs	r2, r2, r0
 802050c:	b292      	uxth	r2, r2
 802050e:	fb0e f101 	mul.w	r1, lr, r1
 8020512:	fb02 110c 	mla	r1, r2, ip, r1
 8020516:	fb00 1104 	mla	r1, r0, r4, r1
 802051a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802051c:	fb08 1104 	mla	r1, r8, r4, r1
 8020520:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020524:	2900      	cmp	r1, #0
 8020526:	f000 80f5 	beq.w	8020714 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 802052a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802052e:	d019      	beq.n	8020564 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8020530:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020534:	fb0c fa0a 	mul.w	sl, ip, sl
 8020538:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802053c:	fb0c fc03 	mul.w	ip, ip, r3
 8020540:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020544:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020548:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802054c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020550:	4453      	add	r3, sl
 8020552:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020556:	0a1b      	lsrs	r3, r3, #8
 8020558:	0a3f      	lsrs	r7, r7, #8
 802055a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802055e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020562:	433b      	orrs	r3, r7
 8020564:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020566:	2cff      	cmp	r4, #255	; 0xff
 8020568:	d020      	beq.n	80205ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802056a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802056c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020570:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020572:	4367      	muls	r7, r4
 8020574:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020576:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802057a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802057c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020580:	fb04 fa0a 	mul.w	sl, r4, sl
 8020584:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020588:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802058c:	44bc      	add	ip, r7
 802058e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020592:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020596:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802059a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802059e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205a6:	ea4c 040a 	orr.w	r4, ip, sl
 80205aa:	9410      	str	r4, [sp, #64]	; 0x40
 80205ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205ae:	2cff      	cmp	r4, #255	; 0xff
 80205b0:	d020      	beq.n	80205f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80205b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80205b4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205ba:	4367      	muls	r7, r4
 80205bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80205be:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80205c8:	fb04 fa0a 	mul.w	sl, r4, sl
 80205cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80205d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205d4:	44bc      	add	ip, r7
 80205d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80205da:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80205de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205ee:	ea4c 040a 	orr.w	r4, ip, sl
 80205f2:	940b      	str	r4, [sp, #44]	; 0x2c
 80205f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80205f6:	2cff      	cmp	r4, #255	; 0xff
 80205f8:	d020      	beq.n	802063c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80205fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80205fc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020600:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020602:	4367      	muls	r7, r4
 8020604:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020606:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802060a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802060c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020610:	fb04 fa0a 	mul.w	sl, r4, sl
 8020614:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020618:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802061c:	44bc      	add	ip, r7
 802061e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020622:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020626:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802062a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802062e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020632:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020636:	ea4c 040a 	orr.w	r4, ip, sl
 802063a:	9411      	str	r4, [sp, #68]	; 0x44
 802063c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802063e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020642:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020644:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020648:	fb0e f707 	mul.w	r7, lr, r7
 802064c:	fb02 770c 	mla	r7, r2, ip, r7
 8020650:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020654:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020656:	fb00 770c 	mla	r7, r0, ip, r7
 802065a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802065e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020660:	fb08 770c 	mla	r7, r8, ip, r7
 8020664:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020668:	fb0e fe0c 	mul.w	lr, lr, ip
 802066c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020670:	fb02 e303 	mla	r3, r2, r3, lr
 8020674:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020676:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020678:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802067c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802067e:	fb00 330a 	mla	r3, r0, sl, r3
 8020682:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020686:	fb08 3c0c 	mla	ip, r8, ip, r3
 802068a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802068c:	f8b9 0000 	ldrh.w	r0, [r9]
 8020690:	434b      	muls	r3, r1
 8020692:	0a3f      	lsrs	r7, r7, #8
 8020694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020698:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802069c:	1c59      	adds	r1, r3, #1
 802069e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80206a2:	ea47 070c 	orr.w	r7, r7, ip
 80206a6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80206aa:	1202      	asrs	r2, r0, #8
 80206ac:	0c3b      	lsrs	r3, r7, #16
 80206ae:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80206b2:	b2c9      	uxtb	r1, r1
 80206b4:	fb13 f304 	smulbb	r3, r3, r4
 80206b8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80206bc:	fb02 3201 	mla	r2, r2, r1, r3
 80206c0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80206c4:	10c3      	asrs	r3, r0, #3
 80206c6:	b2ff      	uxtb	r7, r7
 80206c8:	00c0      	lsls	r0, r0, #3
 80206ca:	b292      	uxth	r2, r2
 80206cc:	fb1c fc04 	smulbb	ip, ip, r4
 80206d0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80206d4:	b2c0      	uxtb	r0, r0
 80206d6:	fb17 f704 	smulbb	r7, r7, r4
 80206da:	fb03 c301 	mla	r3, r3, r1, ip
 80206de:	fb00 7001 	mla	r0, r0, r1, r7
 80206e2:	f102 0c01 	add.w	ip, r2, #1
 80206e6:	b280      	uxth	r0, r0
 80206e8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80206ec:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80206f0:	1c42      	adds	r2, r0, #1
 80206f2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80206f6:	b29b      	uxth	r3, r3
 80206f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80206fc:	ea42 020c 	orr.w	r2, r2, ip
 8020700:	f103 0c01 	add.w	ip, r3, #1
 8020704:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020708:	095b      	lsrs	r3, r3, #5
 802070a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802070e:	431a      	orrs	r2, r3
 8020710:	f8a9 2000 	strh.w	r2, [r9]
 8020714:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8020716:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8020718:	441a      	add	r2, r3
 802071a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802071c:	9231      	str	r2, [sp, #196]	; 0xc4
 802071e:	f109 0902 	add.w	r9, r9, #2
 8020722:	441d      	add	r5, r3
 8020724:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020728:	e63d      	b.n	80203a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802072a:	2800      	cmp	r0, #0
 802072c:	f43f aedd 	beq.w	80204ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8020730:	5c79      	ldrb	r1, [r7, r1]
 8020732:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020736:	910b      	str	r1, [sp, #44]	; 0x2c
 8020738:	0e09      	lsrs	r1, r1, #24
 802073a:	9114      	str	r1, [sp, #80]	; 0x50
 802073c:	e6d5      	b.n	80204ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 802073e:	b01f      	add	sp, #124	; 0x7c
 8020740:	ecbd 8b08 	vpop	{d8-d11}
 8020744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802074c:	880e      	ldrh	r6, [r1, #0]
 802074e:	b085      	sub	sp, #20
 8020750:	ea4f 2826 	mov.w	r8, r6, asr #8
 8020754:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8020758:	4691      	mov	r9, r2
 802075a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802075e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8020762:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8020766:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 802076a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 802076e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8020772:	9200      	str	r2, [sp, #0]
 8020774:	00f6      	lsls	r6, r6, #3
 8020776:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 802077a:	9201      	str	r2, [sp, #4]
 802077c:	2c00      	cmp	r4, #0
 802077e:	b2f2      	uxtb	r2, r6
 8020780:	fb04 560c 	mla	r6, r4, ip, r5
 8020784:	9202      	str	r2, [sp, #8]
 8020786:	eb09 0806 	add.w	r8, r9, r6
 802078a:	db3f      	blt.n	802080c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 802078c:	45a6      	cmp	lr, r4
 802078e:	dd3d      	ble.n	802080c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8020790:	2d00      	cmp	r5, #0
 8020792:	db39      	blt.n	8020808 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8020794:	45ac      	cmp	ip, r5
 8020796:	dd37      	ble.n	8020808 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8020798:	f819 2006 	ldrb.w	r2, [r9, r6]
 802079c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80207a0:	1c6e      	adds	r6, r5, #1
 80207a2:	d436      	bmi.n	8020812 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 80207a4:	45b4      	cmp	ip, r6
 80207a6:	dd34      	ble.n	8020812 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 80207a8:	b3a8      	cbz	r0, 8020816 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 80207aa:	f898 6001 	ldrb.w	r6, [r8, #1]
 80207ae:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80207b2:	3401      	adds	r4, #1
 80207b4:	d433      	bmi.n	802081e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80207b6:	45a6      	cmp	lr, r4
 80207b8:	dd31      	ble.n	802081e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80207ba:	b39f      	cbz	r7, 8020824 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 80207bc:	2d00      	cmp	r5, #0
 80207be:	eb08 0e0c 	add.w	lr, r8, ip
 80207c2:	db2a      	blt.n	802081a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 80207c4:	45ac      	cmp	ip, r5
 80207c6:	dd28      	ble.n	802081a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 80207c8:	f818 400c 	ldrb.w	r4, [r8, ip]
 80207cc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80207d0:	3501      	adds	r5, #1
 80207d2:	d42a      	bmi.n	802082a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80207d4:	45ac      	cmp	ip, r5
 80207d6:	dd28      	ble.n	802082a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80207d8:	b348      	cbz	r0, 802082e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 80207da:	f89e 5001 	ldrb.w	r5, [lr, #1]
 80207de:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80207e2:	280f      	cmp	r0, #15
 80207e4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80207e8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80207ec:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80207f0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80207f4:	d801      	bhi.n	80207fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 80207f6:	2f0f      	cmp	r7, #15
 80207f8:	d91b      	bls.n	8020832 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 80207fa:	4b7d      	ldr	r3, [pc, #500]	; (80209f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80207fc:	4a7d      	ldr	r2, [pc, #500]	; (80209f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80207fe:	487e      	ldr	r0, [pc, #504]	; (80209f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8020800:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8020804:	f004 ffdc 	bl	80257c0 <__assert_func>
 8020808:	2200      	movs	r2, #0
 802080a:	e7c9      	b.n	80207a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 802080c:	2600      	movs	r6, #0
 802080e:	4632      	mov	r2, r6
 8020810:	e7cf      	b.n	80207b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8020812:	2600      	movs	r6, #0
 8020814:	e7cd      	b.n	80207b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8020816:	4606      	mov	r6, r0
 8020818:	e7cb      	b.n	80207b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 802081a:	2400      	movs	r4, #0
 802081c:	e7d8      	b.n	80207d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 802081e:	2300      	movs	r3, #0
 8020820:	461c      	mov	r4, r3
 8020822:	e7de      	b.n	80207e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8020824:	463b      	mov	r3, r7
 8020826:	463c      	mov	r4, r7
 8020828:	e7db      	b.n	80207e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 802082a:	2300      	movs	r3, #0
 802082c:	e7d9      	b.n	80207e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 802082e:	4603      	mov	r3, r0
 8020830:	e7d7      	b.n	80207e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8020832:	b280      	uxth	r0, r0
 8020834:	b2bf      	uxth	r7, r7
 8020836:	fb00 fe07 	mul.w	lr, r0, r7
 802083a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 802083e:	0100      	lsls	r0, r0, #4
 8020840:	eba0 0c0e 	sub.w	ip, r0, lr
 8020844:	b2bf      	uxth	r7, r7
 8020846:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 802084a:	fa1f fc8c 	uxth.w	ip, ip
 802084e:	1bed      	subs	r5, r5, r7
 8020850:	b2ad      	uxth	r5, r5
 8020852:	fb0c f00a 	mul.w	r0, ip, sl
 8020856:	fb05 000b 	mla	r0, r5, fp, r0
 802085a:	fb07 0009 	mla	r0, r7, r9, r0
 802085e:	fb0e 0008 	mla	r0, lr, r8, r0
 8020862:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020866:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 802086a:	9003      	str	r0, [sp, #12]
 802086c:	d018      	beq.n	80208a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 802086e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8020872:	fb0b f000 	mul.w	r0, fp, r0
 8020876:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802087a:	fb0b fb02 	mul.w	fp, fp, r2
 802087e:	0a02      	lsrs	r2, r0, #8
 8020880:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020884:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8020888:	4402      	add	r2, r0
 802088a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802088e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020892:	0a12      	lsrs	r2, r2, #8
 8020894:	0a00      	lsrs	r0, r0, #8
 8020896:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802089a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802089e:	4302      	orrs	r2, r0
 80208a0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80208a4:	d019      	beq.n	80208da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 80208a6:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80208aa:	fb0a fb0b 	mul.w	fp, sl, fp
 80208ae:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80208b2:	fb0a fa06 	mul.w	sl, sl, r6
 80208b6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80208ba:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80208be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80208c2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80208c6:	445e      	add	r6, fp
 80208c8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80208cc:	0a36      	lsrs	r6, r6, #8
 80208ce:	0a00      	lsrs	r0, r0, #8
 80208d0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80208d4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80208d8:	4306      	orrs	r6, r0
 80208da:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80208de:	d019      	beq.n	8020914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 80208e0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80208e4:	fb09 fa0a 	mul.w	sl, r9, sl
 80208e8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80208ec:	fb09 f904 	mul.w	r9, r9, r4
 80208f0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80208f4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80208f8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80208fc:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8020900:	4454      	add	r4, sl
 8020902:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8020906:	0a24      	lsrs	r4, r4, #8
 8020908:	0a00      	lsrs	r0, r0, #8
 802090a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802090e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020912:	4304      	orrs	r4, r0
 8020914:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020918:	d019      	beq.n	802094e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 802091a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 802091e:	fb08 f909 	mul.w	r9, r8, r9
 8020922:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020926:	fb08 f803 	mul.w	r8, r8, r3
 802092a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 802092e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020932:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8020936:	f508 7080 	add.w	r0, r8, #256	; 0x100
 802093a:	444b      	add	r3, r9
 802093c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020940:	0a1b      	lsrs	r3, r3, #8
 8020942:	0a00      	lsrs	r0, r0, #8
 8020944:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020948:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802094c:	4303      	orrs	r3, r0
 802094e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8020952:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8020956:	fb0c f808 	mul.w	r8, ip, r8
 802095a:	fb05 8800 	mla	r8, r5, r0, r8
 802095e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8020962:	fb07 8800 	mla	r8, r7, r0, r8
 8020966:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 802096a:	fb0e 8000 	mla	r0, lr, r0, r8
 802096e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020972:	fb0c f606 	mul.w	r6, ip, r6
 8020976:	0a00      	lsrs	r0, r0, #8
 8020978:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802097c:	fb05 6202 	mla	r2, r5, r2, r6
 8020980:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8020984:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8020988:	fb07 2700 	mla	r7, r7, r0, r2
 802098c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020990:	9b03      	ldr	r3, [sp, #12]
 8020992:	9d00      	ldr	r5, [sp, #0]
 8020994:	9a02      	ldr	r2, [sp, #8]
 8020996:	fb0e 7000 	mla	r0, lr, r0, r7
 802099a:	43dc      	mvns	r4, r3
 802099c:	9b01      	ldr	r3, [sp, #4]
 802099e:	b2e4      	uxtb	r4, r4
 80209a0:	0a00      	lsrs	r0, r0, #8
 80209a2:	4363      	muls	r3, r4
 80209a4:	4365      	muls	r5, r4
 80209a6:	4362      	muls	r2, r4
 80209a8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80209ac:	ea48 0000 	orr.w	r0, r8, r0
 80209b0:	4614      	mov	r4, r2
 80209b2:	1c5e      	adds	r6, r3, #1
 80209b4:	1c6a      	adds	r2, r5, #1
 80209b6:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 80209ba:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80209be:	0a03      	lsrs	r3, r0, #8
 80209c0:	0c02      	lsrs	r2, r0, #16
 80209c2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80209c6:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80209ca:	00db      	lsls	r3, r3, #3
 80209cc:	0212      	lsls	r2, r2, #8
 80209ce:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80209d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209d6:	4313      	orrs	r3, r2
 80209d8:	1c62      	adds	r2, r4, #1
 80209da:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80209de:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 80209e2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80209e6:	4318      	orrs	r0, r3
 80209e8:	8008      	strh	r0, [r1, #0]
 80209ea:	b005      	add	sp, #20
 80209ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209f0:	0802b1ee 	.word	0x0802b1ee
 80209f4:	0802b7be 	.word	0x0802b7be
 80209f8:	0802b272 	.word	0x0802b272

080209fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80209fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a00:	ed2d 8b08 	vpush	{d8-d11}
 8020a04:	b09b      	sub	sp, #108	; 0x6c
 8020a06:	eeb0 aa40 	vmov.f32	s20, s0
 8020a0a:	9218      	str	r2, [sp, #96]	; 0x60
 8020a0c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8020a0e:	9116      	str	r1, [sp, #88]	; 0x58
 8020a10:	9307      	str	r3, [sp, #28]
 8020a12:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8020a16:	9019      	str	r0, [sp, #100]	; 0x64
 8020a18:	6850      	ldr	r0, [r2, #4]
 8020a1a:	6812      	ldr	r2, [r2, #0]
 8020a1c:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8020a1e:	fb00 1303 	mla	r3, r0, r3, r1
 8020a22:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020a26:	930a      	str	r3, [sp, #40]	; 0x28
 8020a28:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020a2a:	681b      	ldr	r3, [r3, #0]
 8020a2c:	930f      	str	r3, [sp, #60]	; 0x3c
 8020a2e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020a30:	685e      	ldr	r6, [r3, #4]
 8020a32:	eef0 9a60 	vmov.f32	s19, s1
 8020a36:	eeb0 9a41 	vmov.f32	s18, s2
 8020a3a:	eeb0 8a62 	vmov.f32	s16, s5
 8020a3e:	eef0 8a43 	vmov.f32	s17, s6
 8020a42:	eef0 ba44 	vmov.f32	s23, s8
 8020a46:	eeb0 ba64 	vmov.f32	s22, s9
 8020a4a:	eef0 aa45 	vmov.f32	s21, s10
 8020a4e:	3604      	adds	r6, #4
 8020a50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020a52:	2b00      	cmp	r3, #0
 8020a54:	dc03      	bgt.n	8020a5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8020a56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020a58:	2b00      	cmp	r3, #0
 8020a5a:	f340 8373 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020a5e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020a60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a68:	1e48      	subs	r0, r1, #1
 8020a6a:	1e57      	subs	r7, r2, #1
 8020a6c:	9b07      	ldr	r3, [sp, #28]
 8020a6e:	2b00      	cmp	r3, #0
 8020a70:	f340 8190 	ble.w	8020d94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020a74:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8020a76:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020a7a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a7e:	d406      	bmi.n	8020a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a80:	4584      	cmp	ip, r0
 8020a82:	da04      	bge.n	8020a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a84:	2b00      	cmp	r3, #0
 8020a86:	db02      	blt.n	8020a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a88:	42bb      	cmp	r3, r7
 8020a8a:	f2c0 8184 	blt.w	8020d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8020a8e:	f11c 0c01 	adds.w	ip, ip, #1
 8020a92:	f100 8172 	bmi.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020a96:	4561      	cmp	r1, ip
 8020a98:	f2c0 816f 	blt.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020a9c:	3301      	adds	r3, #1
 8020a9e:	f100 816c 	bmi.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020aa2:	429a      	cmp	r2, r3
 8020aa4:	f2c0 8169 	blt.w	8020d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020aa8:	9b07      	ldr	r3, [sp, #28]
 8020aaa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020aac:	9317      	str	r3, [sp, #92]	; 0x5c
 8020aae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020ab0:	2b00      	cmp	r3, #0
 8020ab2:	f340 818e 	ble.w	8020dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020ab6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020ab8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020abc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020abe:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020ac2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020ac4:	141b      	asrs	r3, r3, #16
 8020ac6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020aca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ace:	f100 81d1 	bmi.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020ad2:	f101 38ff 	add.w	r8, r1, #4294967295
 8020ad6:	4543      	cmp	r3, r8
 8020ad8:	f280 81cc 	bge.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020adc:	f1bc 0f00 	cmp.w	ip, #0
 8020ae0:	f2c0 81c8 	blt.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020ae4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020ae8:	45c4      	cmp	ip, r8
 8020aea:	f280 81c3 	bge.w	8020e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020aee:	b209      	sxth	r1, r1
 8020af0:	fb0c 3301 	mla	r3, ip, r1, r3
 8020af4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020af6:	eb04 0803 	add.w	r8, r4, r3
 8020afa:	5ce3      	ldrb	r3, [r4, r3]
 8020afc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020b00:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020b04:	2a00      	cmp	r2, #0
 8020b06:	f000 81aa 	beq.w	8020e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8020b0a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020b0e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020b12:	940b      	str	r4, [sp, #44]	; 0x2c
 8020b14:	0e24      	lsrs	r4, r4, #24
 8020b16:	9412      	str	r4, [sp, #72]	; 0x48
 8020b18:	b178      	cbz	r0, 8020b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020b1a:	eb08 0c01 	add.w	ip, r8, r1
 8020b1e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020b22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b26:	9108      	str	r1, [sp, #32]
 8020b28:	0e09      	lsrs	r1, r1, #24
 8020b2a:	9110      	str	r1, [sp, #64]	; 0x40
 8020b2c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020b30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b34:	910c      	str	r1, [sp, #48]	; 0x30
 8020b36:	0e09      	lsrs	r1, r1, #24
 8020b38:	9113      	str	r1, [sp, #76]	; 0x4c
 8020b3a:	b292      	uxth	r2, r2
 8020b3c:	b280      	uxth	r0, r0
 8020b3e:	fb02 f900 	mul.w	r9, r2, r0
 8020b42:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020b46:	0112      	lsls	r2, r2, #4
 8020b48:	eba2 0809 	sub.w	r8, r2, r9
 8020b4c:	b280      	uxth	r0, r0
 8020b4e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020b52:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020b54:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b56:	fa1f f888 	uxth.w	r8, r8
 8020b5a:	1a12      	subs	r2, r2, r0
 8020b5c:	b292      	uxth	r2, r2
 8020b5e:	fb08 f101 	mul.w	r1, r8, r1
 8020b62:	fb02 110e 	mla	r1, r2, lr, r1
 8020b66:	fb00 1104 	mla	r1, r0, r4, r1
 8020b6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b6c:	fb09 1104 	mla	r1, r9, r4, r1
 8020b70:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020b74:	2900      	cmp	r1, #0
 8020b76:	f000 80f5 	beq.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020b7a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020b7e:	d01b      	beq.n	8020bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8020b80:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020b84:	fb0e fa0a 	mul.w	sl, lr, sl
 8020b88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b8c:	fb0e fe03 	mul.w	lr, lr, r3
 8020b90:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020b94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b98:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020b9c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020ba0:	4453      	add	r3, sl
 8020ba2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020ba6:	0a1b      	lsrs	r3, r3, #8
 8020ba8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020bb0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020bb4:	ea43 030c 	orr.w	r3, r3, ip
 8020bb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020bba:	2cff      	cmp	r4, #255	; 0xff
 8020bbc:	d021      	beq.n	8020c02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8020bbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bc0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020bc4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020bc6:	fb04 fb0b 	mul.w	fp, r4, fp
 8020bca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bcc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020bd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020bd2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020bd6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020bda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020bde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020be2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020be6:	44de      	add	lr, fp
 8020be8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020bec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020bf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020bf4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020bf8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020bfc:	ea4e 040a 	orr.w	r4, lr, sl
 8020c00:	940b      	str	r4, [sp, #44]	; 0x2c
 8020c02:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c04:	2cff      	cmp	r4, #255	; 0xff
 8020c06:	d021      	beq.n	8020c4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8020c08:	9c08      	ldr	r4, [sp, #32]
 8020c0a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c0e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c10:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c14:	9c08      	ldr	r4, [sp, #32]
 8020c16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c20:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c30:	44de      	add	lr, fp
 8020c32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c46:	ea4e 040a 	orr.w	r4, lr, sl
 8020c4a:	9408      	str	r4, [sp, #32]
 8020c4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c4e:	2cff      	cmp	r4, #255	; 0xff
 8020c50:	d021      	beq.n	8020c96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8020c52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020c54:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c5a:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020c60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c6a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c72:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c7a:	44de      	add	lr, fp
 8020c7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c90:	ea4e 040a 	orr.w	r4, lr, sl
 8020c94:	940c      	str	r4, [sp, #48]	; 0x30
 8020c96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020c9c:	9c08      	ldr	r4, [sp, #32]
 8020c9e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020ca2:	fb08 fc0c 	mul.w	ip, r8, ip
 8020ca6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020caa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020cae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020cb0:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020cb4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020cb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020cba:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020cbe:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020cc2:	fb08 f80e 	mul.w	r8, r8, lr
 8020cc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020cca:	fb02 8303 	mla	r3, r2, r3, r8
 8020cce:	9a08      	ldr	r2, [sp, #32]
 8020cd0:	f8b7 8000 	ldrh.w	r8, [r7]
 8020cd4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020cd8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020cda:	fb00 330a 	mla	r3, r0, sl, r3
 8020cde:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020ce2:	fb09 3900 	mla	r9, r9, r0, r3
 8020ce6:	43c9      	mvns	r1, r1
 8020ce8:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020cec:	fa5f fe81 	uxtb.w	lr, r1
 8020cf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020cf4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020cf8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020cfc:	fb02 f20e 	mul.w	r2, r2, lr
 8020d00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020d04:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020d08:	ea4c 0c09 	orr.w	ip, ip, r9
 8020d0c:	1c53      	adds	r3, r2, #1
 8020d0e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020d12:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020d16:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020d1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020d22:	4a63      	ldr	r2, [pc, #396]	; (8020eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8020d24:	fb00 f00e 	mul.w	r0, r0, lr
 8020d28:	b2db      	uxtb	r3, r3
 8020d2a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020d2e:	1c43      	adds	r3, r0, #1
 8020d30:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020d34:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020d38:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020d3c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020d40:	b2c9      	uxtb	r1, r1
 8020d42:	00db      	lsls	r3, r3, #3
 8020d44:	fb01 f10e 	mul.w	r1, r1, lr
 8020d48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d4c:	4313      	orrs	r3, r2
 8020d4e:	1c4a      	adds	r2, r1, #1
 8020d50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d54:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020d58:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020d5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020d60:	f8a7 c000 	strh.w	ip, [r7]
 8020d64:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8020d66:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8020d68:	441a      	add	r2, r3
 8020d6a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020d6c:	922d      	str	r2, [sp, #180]	; 0xb4
 8020d6e:	441d      	add	r5, r3
 8020d70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020d72:	3b01      	subs	r3, #1
 8020d74:	3702      	adds	r7, #2
 8020d76:	9317      	str	r3, [sp, #92]	; 0x5c
 8020d78:	e699      	b.n	8020aae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8020d7a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8020d7c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8020d7e:	441c      	add	r4, r3
 8020d80:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020d82:	942d      	str	r4, [sp, #180]	; 0xb4
 8020d84:	441d      	add	r5, r3
 8020d86:	9b07      	ldr	r3, [sp, #28]
 8020d88:	3b01      	subs	r3, #1
 8020d8a:	9307      	str	r3, [sp, #28]
 8020d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d8e:	3302      	adds	r3, #2
 8020d90:	930a      	str	r3, [sp, #40]	; 0x28
 8020d92:	e66b      	b.n	8020a6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020d94:	d024      	beq.n	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8020d96:	9b07      	ldr	r3, [sp, #28]
 8020d98:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8020d9a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8020d9c:	3b01      	subs	r3, #1
 8020d9e:	fb00 4003 	mla	r0, r0, r3, r4
 8020da2:	1400      	asrs	r0, r0, #16
 8020da4:	f53f ae80 	bmi.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8020da8:	3901      	subs	r1, #1
 8020daa:	4288      	cmp	r0, r1
 8020dac:	f6bf ae7c 	bge.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8020db0:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8020db2:	fb01 5303 	mla	r3, r1, r3, r5
 8020db6:	141b      	asrs	r3, r3, #16
 8020db8:	f53f ae76 	bmi.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8020dbc:	3a01      	subs	r2, #1
 8020dbe:	4293      	cmp	r3, r2
 8020dc0:	f6bf ae72 	bge.w	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8020dc4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020dc8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020dcc:	f1bb 0f00 	cmp.w	fp, #0
 8020dd0:	dc70      	bgt.n	8020eb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8020dd2:	9b07      	ldr	r3, [sp, #28]
 8020dd4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020dd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dda:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020dde:	930a      	str	r3, [sp, #40]	; 0x28
 8020de0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020de2:	2b00      	cmp	r3, #0
 8020de4:	f340 81ae 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020de8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8020dec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020df0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8020df4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020df6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8020dfa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8020dfe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8020e02:	eef0 6a48 	vmov.f32	s13, s16
 8020e06:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e0e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8020e12:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8020e16:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8020e1a:	eef0 6a68 	vmov.f32	s13, s17
 8020e1e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8020e22:	ee18 2a10 	vmov	r2, s16
 8020e26:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e2e:	ee18 2a90 	vmov	r2, s17
 8020e32:	932f      	str	r3, [sp, #188]	; 0xbc
 8020e34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020e36:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e3a:	9330      	str	r3, [sp, #192]	; 0xc0
 8020e3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020e3e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020e40:	3b01      	subs	r3, #1
 8020e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e46:	9316      	str	r3, [sp, #88]	; 0x58
 8020e48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020e4a:	bf08      	it	eq
 8020e4c:	4613      	moveq	r3, r2
 8020e4e:	ee16 5a90 	vmov	r5, s13
 8020e52:	9307      	str	r3, [sp, #28]
 8020e54:	eef0 8a67 	vmov.f32	s17, s15
 8020e58:	eeb0 8a47 	vmov.f32	s16, s14
 8020e5c:	e5f8      	b.n	8020a50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8020e5e:	2800      	cmp	r0, #0
 8020e60:	f43f ae6b 	beq.w	8020b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020e64:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020e68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e6c:	9108      	str	r1, [sp, #32]
 8020e6e:	0e09      	lsrs	r1, r1, #24
 8020e70:	9110      	str	r1, [sp, #64]	; 0x40
 8020e72:	e662      	b.n	8020b3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020e74:	f113 0801 	adds.w	r8, r3, #1
 8020e78:	f53f af74 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020e7c:	4541      	cmp	r1, r8
 8020e7e:	f6ff af71 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020e82:	f11c 0801 	adds.w	r8, ip, #1
 8020e86:	f53f af6d 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020e8a:	45c6      	cmp	lr, r8
 8020e8c:	f6ff af6a 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020e90:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020e94:	b209      	sxth	r1, r1
 8020e96:	fa0f f38e 	sxth.w	r3, lr
 8020e9a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020e9e:	9301      	str	r3, [sp, #4]
 8020ea0:	9100      	str	r1, [sp, #0]
 8020ea2:	4633      	mov	r3, r6
 8020ea4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020ea6:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020ea8:	4639      	mov	r1, r7
 8020eaa:	f7ff fc4d 	bl	8020748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020eae:	e759      	b.n	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020eb0:	fffff800 	.word	0xfffff800
 8020eb4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020eb6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8020eb8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020ebc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020ebe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ec2:	1427      	asrs	r7, r4, #16
 8020ec4:	142b      	asrs	r3, r5, #16
 8020ec6:	fb01 7303 	mla	r3, r1, r3, r7
 8020eca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020ecc:	18e7      	adds	r7, r4, r3
 8020ece:	5ce3      	ldrb	r3, [r4, r3]
 8020ed0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020ed4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ed8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020edc:	2a00      	cmp	r2, #0
 8020ede:	f000 8127 	beq.w	8021130 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8020ee2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020ee6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020eea:	940d      	str	r4, [sp, #52]	; 0x34
 8020eec:	0e24      	lsrs	r4, r4, #24
 8020eee:	9414      	str	r4, [sp, #80]	; 0x50
 8020ef0:	b170      	cbz	r0, 8020f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8020ef2:	eb07 0e01 	add.w	lr, r7, r1
 8020ef6:	5c79      	ldrb	r1, [r7, r1]
 8020ef8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020efc:	9109      	str	r1, [sp, #36]	; 0x24
 8020efe:	0e09      	lsrs	r1, r1, #24
 8020f00:	9111      	str	r1, [sp, #68]	; 0x44
 8020f02:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020f06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f0a:	910e      	str	r1, [sp, #56]	; 0x38
 8020f0c:	0e09      	lsrs	r1, r1, #24
 8020f0e:	9115      	str	r1, [sp, #84]	; 0x54
 8020f10:	b292      	uxth	r2, r2
 8020f12:	b280      	uxth	r0, r0
 8020f14:	fb02 f800 	mul.w	r8, r2, r0
 8020f18:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020f1c:	0112      	lsls	r2, r2, #4
 8020f1e:	eba2 0e08 	sub.w	lr, r2, r8
 8020f22:	b280      	uxth	r0, r0
 8020f24:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020f28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020f2a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f2c:	fa1f fe8e 	uxth.w	lr, lr
 8020f30:	1a09      	subs	r1, r1, r0
 8020f32:	b289      	uxth	r1, r1
 8020f34:	fb0e f202 	mul.w	r2, lr, r2
 8020f38:	fb01 220c 	mla	r2, r1, ip, r2
 8020f3c:	fb00 2204 	mla	r2, r0, r4, r2
 8020f40:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020f42:	fb08 2204 	mla	r2, r8, r4, r2
 8020f46:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020f4a:	2a00      	cmp	r2, #0
 8020f4c:	f000 80e5 	beq.w	802111a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8020f50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020f54:	d019      	beq.n	8020f8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8020f56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020f5a:	fb0c fa0a 	mul.w	sl, ip, sl
 8020f5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f62:	fb0c fc03 	mul.w	ip, ip, r3
 8020f66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020f6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f6e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020f72:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020f76:	4453      	add	r3, sl
 8020f78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020f7c:	0a1b      	lsrs	r3, r3, #8
 8020f7e:	0a3f      	lsrs	r7, r7, #8
 8020f80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f84:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020f88:	433b      	orrs	r3, r7
 8020f8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f8c:	2cff      	cmp	r4, #255	; 0xff
 8020f8e:	d020      	beq.n	8020fd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8020f90:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f92:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f98:	4367      	muls	r7, r4
 8020f9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f9c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020fa0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020fa2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020fa6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020faa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020fae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020fb2:	44bc      	add	ip, r7
 8020fb4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020fb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020fbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fc4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020fc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020fcc:	ea4c 040a 	orr.w	r4, ip, sl
 8020fd0:	940d      	str	r4, [sp, #52]	; 0x34
 8020fd2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fd4:	2cff      	cmp	r4, #255	; 0xff
 8020fd6:	d020      	beq.n	802101a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8020fd8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020fda:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020fde:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fe0:	4367      	muls	r7, r4
 8020fe2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020fe4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020fe8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020fee:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ff2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ff6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ffa:	44bc      	add	ip, r7
 8020ffc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021000:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802100c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021010:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021014:	ea4c 040a 	orr.w	r4, ip, sl
 8021018:	9409      	str	r4, [sp, #36]	; 0x24
 802101a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802101c:	2cff      	cmp	r4, #255	; 0xff
 802101e:	d020      	beq.n	8021062 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8021020:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021022:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021026:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021028:	4367      	muls	r7, r4
 802102a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802102c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021030:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021032:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021036:	fb04 fa0a 	mul.w	sl, r4, sl
 802103a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802103e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021042:	44bc      	add	ip, r7
 8021044:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021048:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802104c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021050:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021054:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021058:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802105c:	ea4c 040a 	orr.w	r4, ip, sl
 8021060:	940e      	str	r4, [sp, #56]	; 0x38
 8021062:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021064:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021068:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802106a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802106e:	fb0e f707 	mul.w	r7, lr, r7
 8021072:	fb01 770c 	mla	r7, r1, ip, r7
 8021076:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802107a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802107c:	fb00 770c 	mla	r7, r0, ip, r7
 8021080:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021084:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021086:	fb08 770c 	mla	r7, r8, ip, r7
 802108a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802108e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021092:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021096:	fb01 e303 	mla	r3, r1, r3, lr
 802109a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802109c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80210a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80210a2:	fb00 330a 	mla	r3, r0, sl, r3
 80210a6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80210aa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80210ae:	f8b9 3000 	ldrh.w	r3, [r9]
 80210b2:	43d2      	mvns	r2, r2
 80210b4:	1218      	asrs	r0, r3, #8
 80210b6:	b2d2      	uxtb	r2, r2
 80210b8:	10d9      	asrs	r1, r3, #3
 80210ba:	0a3f      	lsrs	r7, r7, #8
 80210bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80210c4:	00db      	lsls	r3, r3, #3
 80210c6:	4350      	muls	r0, r2
 80210c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80210cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80210d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80210d4:	b2db      	uxtb	r3, r3
 80210d6:	ea47 070c 	orr.w	r7, r7, ip
 80210da:	4351      	muls	r1, r2
 80210dc:	4353      	muls	r3, r2
 80210de:	1c42      	adds	r2, r0, #1
 80210e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80210e4:	0c3a      	lsrs	r2, r7, #16
 80210e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80210ea:	4a19      	ldr	r2, [pc, #100]	; (8021150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80210ec:	b2c0      	uxtb	r0, r0
 80210ee:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80210f2:	1c4a      	adds	r2, r1, #1
 80210f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80210f8:	0a3a      	lsrs	r2, r7, #8
 80210fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80210fe:	00c9      	lsls	r1, r1, #3
 8021100:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021104:	4301      	orrs	r1, r0
 8021106:	1c58      	adds	r0, r3, #1
 8021108:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802110c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021110:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8021114:	4308      	orrs	r0, r1
 8021116:	f8a9 0000 	strh.w	r0, [r9]
 802111a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 802111c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802111e:	441a      	add	r2, r3
 8021120:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021122:	922d      	str	r2, [sp, #180]	; 0xb4
 8021124:	f109 0902 	add.w	r9, r9, #2
 8021128:	441d      	add	r5, r3
 802112a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802112e:	e64d      	b.n	8020dcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021130:	2800      	cmp	r0, #0
 8021132:	f43f aeed 	beq.w	8020f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8021136:	5c79      	ldrb	r1, [r7, r1]
 8021138:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802113c:	9109      	str	r1, [sp, #36]	; 0x24
 802113e:	0e09      	lsrs	r1, r1, #24
 8021140:	9111      	str	r1, [sp, #68]	; 0x44
 8021142:	e6e5      	b.n	8020f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8021144:	b01b      	add	sp, #108	; 0x6c
 8021146:	ecbd 8b08 	vpop	{d8-d11}
 802114a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802114e:	bf00      	nop
 8021150:	fffff800 	.word	0xfffff800

08021154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021158:	b085      	sub	sp, #20
 802115a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 802115e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021162:	9103      	str	r1, [sp, #12]
 8021164:	fb05 7106 	mla	r1, r5, r6, r7
 8021168:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 802116c:	2d00      	cmp	r5, #0
 802116e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021172:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021176:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802117a:	9401      	str	r4, [sp, #4]
 802117c:	eb03 0901 	add.w	r9, r3, r1
 8021180:	f2c0 80c0 	blt.w	8021304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8021184:	45a8      	cmp	r8, r5
 8021186:	f340 80bd 	ble.w	8021304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 802118a:	2f00      	cmp	r7, #0
 802118c:	f2c0 80b6 	blt.w	80212fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8021190:	42be      	cmp	r6, r7
 8021192:	f340 80b3 	ble.w	80212fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8021196:	f813 c001 	ldrb.w	ip, [r3, r1]
 802119a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 802119e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80211a2:	d019      	beq.n	80211d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80211a4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80211a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80211ac:	435a      	muls	r2, r3
 80211ae:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80211b2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80211b6:	fb0c f403 	mul.w	r4, ip, r3
 80211ba:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80211be:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80211c2:	441a      	add	r2, r3
 80211c4:	f104 0320 	add.w	r3, r4, #32
 80211c8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80211cc:	0a1b      	lsrs	r3, r3, #8
 80211ce:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80211d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80211d6:	4319      	orrs	r1, r3
 80211d8:	b289      	uxth	r1, r1
 80211da:	1c7b      	adds	r3, r7, #1
 80211dc:	f100 8097 	bmi.w	802130e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80211e0:	429e      	cmp	r6, r3
 80211e2:	f340 8094 	ble.w	802130e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80211e6:	2800      	cmp	r0, #0
 80211e8:	f000 8094 	beq.w	8021314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80211ec:	f899 4001 	ldrb.w	r4, [r9, #1]
 80211f0:	9b01      	ldr	r3, [sp, #4]
 80211f2:	2cff      	cmp	r4, #255	; 0xff
 80211f4:	885b      	ldrh	r3, [r3, #2]
 80211f6:	d01b      	beq.n	8021230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80211f8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80211fc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8021200:	fb0a f202 	mul.w	r2, sl, r2
 8021204:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021208:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802120c:	fb04 fa03 	mul.w	sl, r4, r3
 8021210:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8021214:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8021218:	441a      	add	r2, r3
 802121a:	f10a 0320 	add.w	r3, sl, #32
 802121e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8021222:	0a1b      	lsrs	r3, r3, #8
 8021224:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8021228:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802122c:	ea4b 0303 	orr.w	r3, fp, r3
 8021230:	b29b      	uxth	r3, r3
 8021232:	3501      	adds	r5, #1
 8021234:	d474      	bmi.n	8021320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8021236:	45a8      	cmp	r8, r5
 8021238:	dd72      	ble.n	8021320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 802123a:	f1be 0f00 	cmp.w	lr, #0
 802123e:	f000 8120 	beq.w	8021482 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8021242:	2f00      	cmp	r7, #0
 8021244:	db69      	blt.n	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8021246:	42be      	cmp	r6, r7
 8021248:	dd67      	ble.n	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 802124a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802124e:	9a01      	ldr	r2, [sp, #4]
 8021250:	2dff      	cmp	r5, #255	; 0xff
 8021252:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8021256:	d01c      	beq.n	8021292 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8021258:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 802125c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8021260:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021264:	fb05 fa0b 	mul.w	sl, r5, fp
 8021268:	fb08 f802 	mul.w	r8, r8, r2
 802126c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021270:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8021274:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021278:	4490      	add	r8, r2
 802127a:	f10a 0220 	add.w	r2, sl, #32
 802127e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8021282:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021286:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 802128a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802128e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8021292:	fa1f fb8b 	uxth.w	fp, fp
 8021296:	3701      	adds	r7, #1
 8021298:	d447      	bmi.n	802132a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 802129a:	42be      	cmp	r6, r7
 802129c:	dd45      	ble.n	802132a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 802129e:	2800      	cmp	r0, #0
 80212a0:	d046      	beq.n	8021330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80212a2:	3601      	adds	r6, #1
 80212a4:	9a01      	ldr	r2, [sp, #4]
 80212a6:	f819 7006 	ldrb.w	r7, [r9, r6]
 80212aa:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80212ae:	2fff      	cmp	r7, #255	; 0xff
 80212b0:	d01a      	beq.n	80212e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80212b2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80212b6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80212ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80212be:	fb07 f902 	mul.w	r9, r7, r2
 80212c2:	fb08 f806 	mul.w	r8, r8, r6
 80212c6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80212ca:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80212ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80212d2:	44b0      	add	r8, r6
 80212d4:	f109 0620 	add.w	r6, r9, #32
 80212d8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80212dc:	0a36      	lsrs	r6, r6, #8
 80212de:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80212e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80212e6:	4332      	orrs	r2, r6
 80212e8:	b292      	uxth	r2, r2
 80212ea:	280f      	cmp	r0, #15
 80212ec:	d922      	bls.n	8021334 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80212ee:	4b69      	ldr	r3, [pc, #420]	; (8021494 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80212f0:	4a69      	ldr	r2, [pc, #420]	; (8021498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80212f2:	486a      	ldr	r0, [pc, #424]	; (802149c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80212f4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80212f8:	f004 fa62 	bl	80257c0 <__assert_func>
 80212fc:	f04f 0c00 	mov.w	ip, #0
 8021300:	4661      	mov	r1, ip
 8021302:	e76a      	b.n	80211da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8021304:	2400      	movs	r4, #0
 8021306:	46a4      	mov	ip, r4
 8021308:	4623      	mov	r3, r4
 802130a:	4621      	mov	r1, r4
 802130c:	e791      	b.n	8021232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 802130e:	2400      	movs	r4, #0
 8021310:	4623      	mov	r3, r4
 8021312:	e78e      	b.n	8021232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8021314:	4604      	mov	r4, r0
 8021316:	4603      	mov	r3, r0
 8021318:	e78b      	b.n	8021232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 802131a:	2500      	movs	r5, #0
 802131c:	46ab      	mov	fp, r5
 802131e:	e7ba      	b.n	8021296 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8021320:	2700      	movs	r7, #0
 8021322:	463d      	mov	r5, r7
 8021324:	463a      	mov	r2, r7
 8021326:	46bb      	mov	fp, r7
 8021328:	e7df      	b.n	80212ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 802132a:	2700      	movs	r7, #0
 802132c:	463a      	mov	r2, r7
 802132e:	e7dc      	b.n	80212ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8021330:	4607      	mov	r7, r0
 8021332:	4602      	mov	r2, r0
 8021334:	f1be 0f0f 	cmp.w	lr, #15
 8021338:	d8d9      	bhi.n	80212ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 802133a:	b286      	uxth	r6, r0
 802133c:	fa1f f98e 	uxth.w	r9, lr
 8021340:	fb06 f809 	mul.w	r8, r6, r9
 8021344:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021348:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802134c:	0136      	lsls	r6, r6, #4
 802134e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021352:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021356:	9601      	str	r6, [sp, #4]
 8021358:	ea4a 0101 	orr.w	r1, sl, r1
 802135c:	fa1f f689 	uxth.w	r6, r9
 8021360:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8021364:	fb10 f90e 	smulbb	r9, r0, lr
 8021368:	ea4f 09e9 	mov.w	r9, r9, asr #3
 802136c:	9602      	str	r6, [sp, #8]
 802136e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021372:	460e      	mov	r6, r1
 8021374:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021378:	f1ce 0110 	rsb	r1, lr, #16
 802137c:	1a09      	subs	r1, r1, r0
 802137e:	ea4a 0303 	orr.w	r3, sl, r3
 8021382:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8021386:	4343      	muls	r3, r0
 8021388:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 802138c:	9801      	ldr	r0, [sp, #4]
 802138e:	fb01 3106 	mla	r1, r1, r6, r3
 8021392:	9e02      	ldr	r6, [sp, #8]
 8021394:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021398:	1b80      	subs	r0, r0, r6
 802139a:	9e01      	ldr	r6, [sp, #4]
 802139c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80213a0:	eba6 0608 	sub.w	r6, r6, r8
 80213a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213a8:	b2b6      	uxth	r6, r6
 80213aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213ae:	ea4a 0202 	orr.w	r2, sl, r2
 80213b2:	b280      	uxth	r0, r0
 80213b4:	4374      	muls	r4, r6
 80213b6:	fb09 1302 	mla	r3, r9, r2, r1
 80213ba:	fb0c 4400 	mla	r4, ip, r0, r4
 80213be:	9a03      	ldr	r2, [sp, #12]
 80213c0:	9802      	ldr	r0, [sp, #8]
 80213c2:	8811      	ldrh	r1, [r2, #0]
 80213c4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80213c8:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80213cc:	fb00 4505 	mla	r5, r0, r5, r4
 80213d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213d4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80213d8:	fb08 5707 	mla	r7, r8, r7, r5
 80213dc:	ea4a 0b0b 	orr.w	fp, sl, fp
 80213e0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80213e4:	b292      	uxth	r2, r2
 80213e6:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80213ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80213ee:	4357      	muls	r7, r2
 80213f0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80213f4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80213f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80213fc:	f107 0801 	add.w	r8, r7, #1
 8021400:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021404:	ea43 0e0e 	orr.w	lr, r3, lr
 8021408:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 802140c:	fa1f f38e 	uxth.w	r3, lr
 8021410:	1208      	asrs	r0, r1, #8
 8021412:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021416:	b2ff      	uxtb	r7, r7
 8021418:	121c      	asrs	r4, r3, #8
 802141a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802141e:	fb10 f007 	smulbb	r0, r0, r7
 8021422:	10cd      	asrs	r5, r1, #3
 8021424:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021428:	fb04 0402 	mla	r4, r4, r2, r0
 802142c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021430:	10d8      	asrs	r0, r3, #3
 8021432:	fb15 f507 	smulbb	r5, r5, r7
 8021436:	00db      	lsls	r3, r3, #3
 8021438:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802143c:	fb00 5002 	mla	r0, r0, r2, r5
 8021440:	b2dd      	uxtb	r5, r3
 8021442:	00cb      	lsls	r3, r1, #3
 8021444:	b2db      	uxtb	r3, r3
 8021446:	fb13 f307 	smulbb	r3, r3, r7
 802144a:	fb05 3202 	mla	r2, r5, r2, r3
 802144e:	b2a4      	uxth	r4, r4
 8021450:	b292      	uxth	r2, r2
 8021452:	1c63      	adds	r3, r4, #1
 8021454:	b280      	uxth	r0, r0
 8021456:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802145a:	1c53      	adds	r3, r2, #1
 802145c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021460:	1c42      	adds	r2, r0, #1
 8021462:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021466:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802146a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802146e:	0940      	lsrs	r0, r0, #5
 8021470:	4323      	orrs	r3, r4
 8021472:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021476:	9a03      	ldr	r2, [sp, #12]
 8021478:	4303      	orrs	r3, r0
 802147a:	8013      	strh	r3, [r2, #0]
 802147c:	b005      	add	sp, #20
 802147e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021482:	280f      	cmp	r0, #15
 8021484:	f63f af33 	bhi.w	80212ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8021488:	4677      	mov	r7, lr
 802148a:	4675      	mov	r5, lr
 802148c:	4672      	mov	r2, lr
 802148e:	46f3      	mov	fp, lr
 8021490:	e753      	b.n	802133a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8021492:	bf00      	nop
 8021494:	0802b1ee 	.word	0x0802b1ee
 8021498:	0802b7be 	.word	0x0802b7be
 802149c:	0802b272 	.word	0x0802b272

080214a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214a4:	ed2d 8b08 	vpush	{d8-d11}
 80214a8:	b097      	sub	sp, #92	; 0x5c
 80214aa:	eeb0 aa40 	vmov.f32	s20, s0
 80214ae:	9214      	str	r2, [sp, #80]	; 0x50
 80214b0:	9308      	str	r3, [sp, #32]
 80214b2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80214b4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80214b8:	9312      	str	r3, [sp, #72]	; 0x48
 80214ba:	9111      	str	r1, [sp, #68]	; 0x44
 80214bc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80214c0:	9015      	str	r0, [sp, #84]	; 0x54
 80214c2:	6850      	ldr	r0, [r2, #4]
 80214c4:	6812      	ldr	r2, [r2, #0]
 80214c6:	fb00 1303 	mla	r3, r0, r3, r1
 80214ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80214ce:	9309      	str	r3, [sp, #36]	; 0x24
 80214d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214d2:	681b      	ldr	r3, [r3, #0]
 80214d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80214d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214d8:	685b      	ldr	r3, [r3, #4]
 80214da:	930c      	str	r3, [sp, #48]	; 0x30
 80214dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80214e0:	930a      	str	r3, [sp, #40]	; 0x28
 80214e2:	eef0 9a60 	vmov.f32	s19, s1
 80214e6:	eeb0 9a41 	vmov.f32	s18, s2
 80214ea:	eeb0 8a62 	vmov.f32	s16, s5
 80214ee:	eef0 8a43 	vmov.f32	s17, s6
 80214f2:	eef0 ba44 	vmov.f32	s23, s8
 80214f6:	eeb0 ba64 	vmov.f32	s22, s9
 80214fa:	eef0 aa45 	vmov.f32	s21, s10
 80214fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021500:	2b00      	cmp	r3, #0
 8021502:	dc03      	bgt.n	802150c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021504:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021506:	2b00      	cmp	r3, #0
 8021508:	f340 83cb 	ble.w	8021ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 802150c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802150e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021512:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021516:	1e48      	subs	r0, r1, #1
 8021518:	1e55      	subs	r5, r2, #1
 802151a:	9b08      	ldr	r3, [sp, #32]
 802151c:	2b00      	cmp	r3, #0
 802151e:	f340 81a3 	ble.w	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021522:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8021524:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021526:	1436      	asrs	r6, r6, #16
 8021528:	ea4f 4323 	mov.w	r3, r3, asr #16
 802152c:	d406      	bmi.n	802153c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802152e:	4286      	cmp	r6, r0
 8021530:	da04      	bge.n	802153c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021532:	2b00      	cmp	r3, #0
 8021534:	db02      	blt.n	802153c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021536:	42ab      	cmp	r3, r5
 8021538:	f2c0 8197 	blt.w	802186a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802153c:	3601      	adds	r6, #1
 802153e:	f100 8184 	bmi.w	802184a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021542:	42b1      	cmp	r1, r6
 8021544:	f2c0 8181 	blt.w	802184a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021548:	3301      	adds	r3, #1
 802154a:	f100 817e 	bmi.w	802184a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802154e:	429a      	cmp	r2, r3
 8021550:	f2c0 817b 	blt.w	802184a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021554:	9b08      	ldr	r3, [sp, #32]
 8021556:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021558:	9313      	str	r3, [sp, #76]	; 0x4c
 802155a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802155e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021560:	2b00      	cmp	r3, #0
 8021562:	f340 81a4 	ble.w	80218ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8021566:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021568:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 802156a:	1418      	asrs	r0, r3, #16
 802156c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802156e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021572:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021574:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021578:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802157a:	142d      	asrs	r5, r5, #16
 802157c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021580:	f100 81f8 	bmi.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8021584:	f102 3eff 	add.w	lr, r2, #4294967295
 8021588:	4575      	cmp	r5, lr
 802158a:	f280 81f3 	bge.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802158e:	2800      	cmp	r0, #0
 8021590:	f2c0 81f0 	blt.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8021594:	f103 3eff 	add.w	lr, r3, #4294967295
 8021598:	4570      	cmp	r0, lr
 802159a:	f280 81eb 	bge.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802159e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80215a0:	b212      	sxth	r2, r2
 80215a2:	fb00 5002 	mla	r0, r0, r2, r5
 80215a6:	fa1f fe81 	uxth.w	lr, r1
 80215aa:	eb03 0a00 	add.w	sl, r3, r0
 80215ae:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80215b2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80215b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80215ba:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80215be:	b29b      	uxth	r3, r3
 80215c0:	f1bc 0f00 	cmp.w	ip, #0
 80215c4:	f000 81b9 	beq.w	802193a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80215c8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80215cc:	940d      	str	r4, [sp, #52]	; 0x34
 80215ce:	eb0a 0b02 	add.w	fp, sl, r2
 80215d2:	fa1f fa8c 	uxth.w	sl, ip
 80215d6:	fb0a fe0e 	mul.w	lr, sl, lr
 80215da:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80215de:	fa1f fa8a 	uxth.w	sl, sl
 80215e2:	eba5 050e 	sub.w	r5, r5, lr
 80215e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80215ea:	940e      	str	r4, [sp, #56]	; 0x38
 80215ec:	eba3 030a 	sub.w	r3, r3, sl
 80215f0:	b2ad      	uxth	r5, r5
 80215f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80215f4:	b29b      	uxth	r3, r3
 80215f6:	fb08 f505 	mul.w	r5, r8, r5
 80215fa:	fb09 5303 	mla	r3, r9, r3, r5
 80215fe:	fb0a 3304 	mla	r3, sl, r4, r3
 8021602:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021604:	fb0e 3304 	mla	r3, lr, r4, r3
 8021608:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802160c:	2b00      	cmp	r3, #0
 802160e:	f000 810f 	beq.w	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021612:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021614:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021618:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802161c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021620:	f000 8190 	beq.w	8021944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8021624:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021628:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802162c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021630:	fb09 f000 	mul.w	r0, r9, r0
 8021634:	fb0a fe0e 	mul.w	lr, sl, lr
 8021638:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802163c:	f100 0b20 	add.w	fp, r0, #32
 8021640:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021644:	44ce      	add	lr, r9
 8021646:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802164a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802164e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021652:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021656:	ea4e 0909 	orr.w	r9, lr, r9
 802165a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802165e:	8868      	ldrh	r0, [r5, #2]
 8021660:	d019      	beq.n	8021696 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8021662:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021666:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802166a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802166e:	fb08 f800 	mul.w	r8, r8, r0
 8021672:	fb0a fe0e 	mul.w	lr, sl, lr
 8021676:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802167a:	f108 0b20 	add.w	fp, r8, #32
 802167e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021682:	4486      	add	lr, r0
 8021684:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021688:	0a00      	lsrs	r0, r0, #8
 802168a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802168e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021692:	ea4e 0000 	orr.w	r0, lr, r0
 8021696:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802169a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802169e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80216a2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80216a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80216aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80216ae:	ea4e 0909 	orr.w	r9, lr, r9
 80216b2:	ea4a 0000 	orr.w	r0, sl, r0
 80216b6:	f1bc 0f00 	cmp.w	ip, #0
 80216ba:	f000 8145 	beq.w	8021948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80216be:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80216c2:	3a01      	subs	r2, #1
 80216c4:	0052      	lsls	r2, r2, #1
 80216c6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80216c8:	3202      	adds	r2, #2
 80216ca:	2cff      	cmp	r4, #255	; 0xff
 80216cc:	eb05 0e02 	add.w	lr, r5, r2
 80216d0:	5aaa      	ldrh	r2, [r5, r2]
 80216d2:	d018      	beq.n	8021706 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80216d4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80216d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80216dc:	fb04 fa02 	mul.w	sl, r4, r2
 80216e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80216e4:	fb08 f805 	mul.w	r8, r8, r5
 80216e8:	f10a 0520 	add.w	r5, sl, #32
 80216ec:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80216f0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80216f4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80216f8:	4442      	add	r2, r8
 80216fa:	0a2d      	lsrs	r5, r5, #8
 80216fc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021700:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021704:	432a      	orrs	r2, r5
 8021706:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021708:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802170c:	2cff      	cmp	r4, #255	; 0xff
 802170e:	d01a      	beq.n	8021746 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021710:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021714:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021718:	fb04 fa05 	mul.w	sl, r4, r5
 802171c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021720:	fb08 f80e 	mul.w	r8, r8, lr
 8021724:	f10a 0e20 	add.w	lr, sl, #32
 8021728:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802172c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021730:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021734:	4445      	add	r5, r8
 8021736:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802173a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802173e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021742:	ea45 050e 	orr.w	r5, r5, lr
 8021746:	fb1c fe01 	smulbb	lr, ip, r1
 802174a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802174e:	f1cc 0810 	rsb	r8, ip, #16
 8021752:	eba8 0801 	sub.w	r8, r8, r1
 8021756:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802175a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802175e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021762:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021766:	4341      	muls	r1, r0
 8021768:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802176c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021770:	ea4a 0202 	orr.w	r2, sl, r2
 8021774:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021778:	fb09 1108 	mla	r1, r9, r8, r1
 802177c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021780:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021784:	fb0c 1102 	mla	r1, ip, r2, r1
 8021788:	ea4b 0505 	orr.w	r5, fp, r5
 802178c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021790:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021794:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021798:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802179c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80217a0:	ea42 0e0e 	orr.w	lr, r2, lr
 80217a4:	fa1f f28e 	uxth.w	r2, lr
 80217a8:	2bff      	cmp	r3, #255	; 0xff
 80217aa:	d103      	bne.n	80217b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80217ac:	9912      	ldr	r1, [sp, #72]	; 0x48
 80217ae:	29ff      	cmp	r1, #255	; 0xff
 80217b0:	f000 80de 	beq.w	8021970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 80217b4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80217b6:	8838      	ldrh	r0, [r7, #0]
 80217b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80217ba:	434b      	muls	r3, r1
 80217bc:	f103 0c01 	add.w	ip, r3, #1
 80217c0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80217c4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80217c8:	fa5f fc83 	uxtb.w	ip, r3
 80217cc:	1203      	asrs	r3, r0, #8
 80217ce:	1215      	asrs	r5, r2, #8
 80217d0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80217d4:	fb13 f30c 	smulbb	r3, r3, ip
 80217d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80217dc:	fb05 3501 	mla	r5, r5, r1, r3
 80217e0:	10c3      	asrs	r3, r0, #3
 80217e2:	10d1      	asrs	r1, r2, #3
 80217e4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80217e8:	fb13 f30c 	smulbb	r3, r3, ip
 80217ec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80217f0:	fb01 3104 	mla	r1, r1, r4, r3
 80217f4:	00c3      	lsls	r3, r0, #3
 80217f6:	00d2      	lsls	r2, r2, #3
 80217f8:	b2db      	uxtb	r3, r3
 80217fa:	b2d2      	uxtb	r2, r2
 80217fc:	fb13 f30c 	smulbb	r3, r3, ip
 8021800:	b2ad      	uxth	r5, r5
 8021802:	fb02 3304 	mla	r3, r2, r4, r3
 8021806:	b29a      	uxth	r2, r3
 8021808:	1c6b      	adds	r3, r5, #1
 802180a:	b289      	uxth	r1, r1
 802180c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021810:	1c53      	adds	r3, r2, #1
 8021812:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021816:	1c4a      	adds	r2, r1, #1
 8021818:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802181c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021820:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021824:	0949      	lsrs	r1, r1, #5
 8021826:	432b      	orrs	r3, r5
 8021828:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802182c:	430b      	orrs	r3, r1
 802182e:	803b      	strh	r3, [r7, #0]
 8021830:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021832:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8021834:	4413      	add	r3, r2
 8021836:	9329      	str	r3, [sp, #164]	; 0xa4
 8021838:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802183a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802183c:	441a      	add	r2, r3
 802183e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021840:	922a      	str	r2, [sp, #168]	; 0xa8
 8021842:	3b01      	subs	r3, #1
 8021844:	3702      	adds	r7, #2
 8021846:	9313      	str	r3, [sp, #76]	; 0x4c
 8021848:	e689      	b.n	802155e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802184a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802184c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 802184e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8021850:	4433      	add	r3, r6
 8021852:	9329      	str	r3, [sp, #164]	; 0xa4
 8021854:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021856:	441c      	add	r4, r3
 8021858:	9b08      	ldr	r3, [sp, #32]
 802185a:	942a      	str	r4, [sp, #168]	; 0xa8
 802185c:	3b01      	subs	r3, #1
 802185e:	9308      	str	r3, [sp, #32]
 8021860:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021862:	3302      	adds	r3, #2
 8021864:	9309      	str	r3, [sp, #36]	; 0x24
 8021866:	e658      	b.n	802151a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021868:	d028      	beq.n	80218bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802186a:	9b08      	ldr	r3, [sp, #32]
 802186c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802186e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8021870:	3b01      	subs	r3, #1
 8021872:	fb00 5003 	mla	r0, r0, r3, r5
 8021876:	1400      	asrs	r0, r0, #16
 8021878:	f53f ae6c 	bmi.w	8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802187c:	3901      	subs	r1, #1
 802187e:	4288      	cmp	r0, r1
 8021880:	f6bf ae68 	bge.w	8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021884:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8021886:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8021888:	fb01 0303 	mla	r3, r1, r3, r0
 802188c:	141b      	asrs	r3, r3, #16
 802188e:	f53f ae61 	bmi.w	8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021892:	3a01      	subs	r2, #1
 8021894:	4293      	cmp	r3, r2
 8021896:	f6bf ae5d 	bge.w	8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802189a:	9b08      	ldr	r3, [sp, #32]
 802189c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80218a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80218a2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80218a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80218a8:	2b00      	cmp	r3, #0
 80218aa:	f300 8082 	bgt.w	80219b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80218ae:	9b08      	ldr	r3, [sp, #32]
 80218b0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80218b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218b6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80218ba:	9309      	str	r3, [sp, #36]	; 0x24
 80218bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80218be:	2b00      	cmp	r3, #0
 80218c0:	f340 81ef 	ble.w	8021ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80218c4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80218c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80218cc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80218d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218d2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80218d6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80218da:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80218de:	eef0 6a48 	vmov.f32	s13, s16
 80218e2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80218e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218ea:	ee37 8a48 	vsub.f32	s16, s14, s16
 80218ee:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80218f2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80218f6:	eef0 6a68 	vmov.f32	s13, s17
 80218fa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80218fe:	ee18 2a10 	vmov	r2, s16
 8021902:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021906:	fb92 f3f3 	sdiv	r3, r2, r3
 802190a:	ee18 2a90 	vmov	r2, s17
 802190e:	932b      	str	r3, [sp, #172]	; 0xac
 8021910:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021912:	fb92 f3f3 	sdiv	r3, r2, r3
 8021916:	932c      	str	r3, [sp, #176]	; 0xb0
 8021918:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802191a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802191c:	3b01      	subs	r3, #1
 802191e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021922:	9311      	str	r3, [sp, #68]	; 0x44
 8021924:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021926:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 802192a:	bf08      	it	eq
 802192c:	4613      	moveq	r3, r2
 802192e:	9308      	str	r3, [sp, #32]
 8021930:	eef0 8a67 	vmov.f32	s17, s15
 8021934:	eeb0 8a47 	vmov.f32	s16, s14
 8021938:	e5e1      	b.n	80214fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802193a:	fb08 f505 	mul.w	r5, r8, r5
 802193e:	fb09 5303 	mla	r3, r9, r3, r5
 8021942:	e661      	b.n	8021608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8021944:	4681      	mov	r9, r0
 8021946:	e688      	b.n	802165a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021948:	f1c1 0210 	rsb	r2, r1, #16
 802194c:	4341      	muls	r1, r0
 802194e:	fb09 1902 	mla	r9, r9, r2, r1
 8021952:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021956:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802195a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802195e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021962:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021966:	ea42 0909 	orr.w	r9, r2, r9
 802196a:	fa1f f289 	uxth.w	r2, r9
 802196e:	e71b      	b.n	80217a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8021970:	803a      	strh	r2, [r7, #0]
 8021972:	e75d      	b.n	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021974:	f115 0e01 	adds.w	lr, r5, #1
 8021978:	f53f af5a 	bmi.w	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802197c:	4572      	cmp	r2, lr
 802197e:	f6ff af57 	blt.w	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021982:	f110 0e01 	adds.w	lr, r0, #1
 8021986:	f53f af53 	bmi.w	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802198a:	4573      	cmp	r3, lr
 802198c:	f6ff af50 	blt.w	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021990:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021992:	9502      	str	r5, [sp, #8]
 8021994:	b21b      	sxth	r3, r3
 8021996:	b212      	sxth	r2, r2
 8021998:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802199c:	9301      	str	r3, [sp, #4]
 802199e:	9200      	str	r2, [sp, #0]
 80219a0:	e9cd c405 	strd	ip, r4, [sp, #20]
 80219a4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80219a8:	4639      	mov	r1, r7
 80219aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 80219ac:	f7ff fbd2 	bl	8021154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80219b0:	e73e      	b.n	8021830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80219b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80219b4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80219b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80219ba:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80219be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80219c6:	141f      	asrs	r7, r3, #16
 80219c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80219ca:	141b      	asrs	r3, r3, #16
 80219cc:	fb01 3707 	mla	r7, r1, r7, r3
 80219d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219d2:	fa1f fc82 	uxth.w	ip, r2
 80219d6:	eb03 0a07 	add.w	sl, r3, r7
 80219da:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80219de:	f813 9007 	ldrb.w	r9, [r3, r7]
 80219e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80219e6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80219ea:	b29b      	uxth	r3, r3
 80219ec:	2d00      	cmp	r5, #0
 80219ee:	f000 813d 	beq.w	8021c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 80219f2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80219f6:	940f      	str	r4, [sp, #60]	; 0x3c
 80219f8:	eb0a 0b01 	add.w	fp, sl, r1
 80219fc:	fa1f fa85 	uxth.w	sl, r5
 8021a00:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a04:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021a08:	fa1f fa8a 	uxth.w	sl, sl
 8021a0c:	eba0 000c 	sub.w	r0, r0, ip
 8021a10:	eba3 030a 	sub.w	r3, r3, sl
 8021a14:	b280      	uxth	r0, r0
 8021a16:	fb08 f000 	mul.w	r0, r8, r0
 8021a1a:	b29b      	uxth	r3, r3
 8021a1c:	fb09 0303 	mla	r3, r9, r3, r0
 8021a20:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021a22:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021a26:	9410      	str	r4, [sp, #64]	; 0x40
 8021a28:	fb0a 3300 	mla	r3, sl, r0, r3
 8021a2c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021a30:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021a34:	2b00      	cmp	r3, #0
 8021a36:	f000 810b 	beq.w	8021c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8021a3a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021a3c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a3e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021a42:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021a46:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021a4a:	f000 8114 	beq.w	8021c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8021a4e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a52:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021a56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a5a:	fb09 f707 	mul.w	r7, r9, r7
 8021a5e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a62:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021a66:	f107 0b20 	add.w	fp, r7, #32
 8021a6a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021a6e:	44cc      	add	ip, r9
 8021a70:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021a74:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021a78:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021a7c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021a80:	ea4c 0909 	orr.w	r9, ip, r9
 8021a84:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021a88:	8847      	ldrh	r7, [r0, #2]
 8021a8a:	d019      	beq.n	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8021a8c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a90:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021a94:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a98:	fb08 f807 	mul.w	r8, r8, r7
 8021a9c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021aa0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021aa4:	f108 0b20 	add.w	fp, r8, #32
 8021aa8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021aac:	44bc      	add	ip, r7
 8021aae:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021ab2:	0a3f      	lsrs	r7, r7, #8
 8021ab4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021ab8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021abc:	ea4c 0707 	orr.w	r7, ip, r7
 8021ac0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021ac4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021ac8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021acc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021ad0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ad4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021ad8:	ea4c 0909 	orr.w	r9, ip, r9
 8021adc:	ea4a 0707 	orr.w	r7, sl, r7
 8021ae0:	2d00      	cmp	r5, #0
 8021ae2:	f000 80ca 	beq.w	8021c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8021ae6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021aea:	3901      	subs	r1, #1
 8021aec:	0049      	lsls	r1, r1, #1
 8021aee:	3102      	adds	r1, #2
 8021af0:	eb00 0c01 	add.w	ip, r0, r1
 8021af4:	5a41      	ldrh	r1, [r0, r1]
 8021af6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021af8:	28ff      	cmp	r0, #255	; 0xff
 8021afa:	d019      	beq.n	8021b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8021afc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021afe:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021b02:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021b06:	fb04 fa01 	mul.w	sl, r4, r1
 8021b0a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b0e:	fb08 f800 	mul.w	r8, r8, r0
 8021b12:	f10a 0020 	add.w	r0, sl, #32
 8021b16:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021b1a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021b1e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b22:	4441      	add	r1, r8
 8021b24:	0a00      	lsrs	r0, r0, #8
 8021b26:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021b2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b2e:	4301      	orrs	r1, r0
 8021b30:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b32:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021b36:	2cff      	cmp	r4, #255	; 0xff
 8021b38:	d01a      	beq.n	8021b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8021b3a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021b3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b42:	fb04 fa00 	mul.w	sl, r4, r0
 8021b46:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b4a:	fb08 f80c 	mul.w	r8, r8, ip
 8021b4e:	f10a 0c20 	add.w	ip, sl, #32
 8021b52:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021b56:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021b5a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b5e:	4440      	add	r0, r8
 8021b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b64:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021b68:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021b6c:	ea40 000c 	orr.w	r0, r0, ip
 8021b70:	fb15 fc02 	smulbb	ip, r5, r2
 8021b74:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021b78:	f1c5 0810 	rsb	r8, r5, #16
 8021b7c:	eba8 0802 	sub.w	r8, r8, r2
 8021b80:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021b84:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021b88:	437a      	muls	r2, r7
 8021b8a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021b8e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021b92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b96:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021b9a:	fb09 2208 	mla	r2, r9, r8, r2
 8021b9e:	ea4a 0101 	orr.w	r1, sl, r1
 8021ba2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021ba6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021baa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021bae:	fb05 2201 	mla	r2, r5, r1, r2
 8021bb2:	ea4b 0000 	orr.w	r0, fp, r0
 8021bb6:	fb0c 2200 	mla	r2, ip, r0, r2
 8021bba:	0d57      	lsrs	r7, r2, #21
 8021bbc:	0952      	lsrs	r2, r2, #5
 8021bbe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021bc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bc6:	433a      	orrs	r2, r7
 8021bc8:	2bff      	cmp	r3, #255	; 0xff
 8021bca:	b292      	uxth	r2, r2
 8021bcc:	d102      	bne.n	8021bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8021bce:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021bd0:	29ff      	cmp	r1, #255	; 0xff
 8021bd2:	d063      	beq.n	8021c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8021bd4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021bd6:	f8be 1000 	ldrh.w	r1, [lr]
 8021bda:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021bdc:	4343      	muls	r3, r0
 8021bde:	1c58      	adds	r0, r3, #1
 8021be0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021be4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021be8:	1208      	asrs	r0, r1, #8
 8021bea:	b2db      	uxtb	r3, r3
 8021bec:	1215      	asrs	r5, r2, #8
 8021bee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021bf2:	fb10 f003 	smulbb	r0, r0, r3
 8021bf6:	10cf      	asrs	r7, r1, #3
 8021bf8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021bfc:	00c9      	lsls	r1, r1, #3
 8021bfe:	fb05 0504 	mla	r5, r5, r4, r0
 8021c02:	b2c9      	uxtb	r1, r1
 8021c04:	10d0      	asrs	r0, r2, #3
 8021c06:	00d2      	lsls	r2, r2, #3
 8021c08:	fb11 f103 	smulbb	r1, r1, r3
 8021c0c:	b2d2      	uxtb	r2, r2
 8021c0e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021c12:	fb02 1204 	mla	r2, r2, r4, r1
 8021c16:	fb17 f703 	smulbb	r7, r7, r3
 8021c1a:	b2ad      	uxth	r5, r5
 8021c1c:	b292      	uxth	r2, r2
 8021c1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021c22:	fb00 7004 	mla	r0, r0, r4, r7
 8021c26:	1c6b      	adds	r3, r5, #1
 8021c28:	1c57      	adds	r7, r2, #1
 8021c2a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c2e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021c32:	b280      	uxth	r0, r0
 8021c34:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021c38:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021c3c:	433d      	orrs	r5, r7
 8021c3e:	1c47      	adds	r7, r0, #1
 8021c40:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021c44:	097f      	lsrs	r7, r7, #5
 8021c46:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021c4a:	433d      	orrs	r5, r7
 8021c4c:	f8ae 5000 	strh.w	r5, [lr]
 8021c50:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021c52:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8021c54:	4413      	add	r3, r2
 8021c56:	9329      	str	r3, [sp, #164]	; 0xa4
 8021c58:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021c5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c5c:	441a      	add	r2, r3
 8021c5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c60:	922a      	str	r2, [sp, #168]	; 0xa8
 8021c62:	3b01      	subs	r3, #1
 8021c64:	f10e 0e02 	add.w	lr, lr, #2
 8021c68:	9313      	str	r3, [sp, #76]	; 0x4c
 8021c6a:	e61c      	b.n	80218a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8021c6c:	fb08 f000 	mul.w	r0, r8, r0
 8021c70:	fb09 0303 	mla	r3, r9, r3, r0
 8021c74:	e6dc      	b.n	8021a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8021c76:	46b9      	mov	r9, r7
 8021c78:	e704      	b.n	8021a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8021c7a:	f1c2 0110 	rsb	r1, r2, #16
 8021c7e:	437a      	muls	r2, r7
 8021c80:	fb09 2901 	mla	r9, r9, r1, r2
 8021c84:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021c88:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021c8c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021c90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c98:	4302      	orrs	r2, r0
 8021c9a:	e795      	b.n	8021bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8021c9c:	f8ae 2000 	strh.w	r2, [lr]
 8021ca0:	e7d6      	b.n	8021c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8021ca2:	b017      	add	sp, #92	; 0x5c
 8021ca4:	ecbd 8b08 	vpop	{d8-d11}
 8021ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021cac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cb0:	b085      	sub	sp, #20
 8021cb2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8021cb6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021cba:	9103      	str	r1, [sp, #12]
 8021cbc:	fb05 7106 	mla	r1, r5, r6, r7
 8021cc0:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8021cc4:	2d00      	cmp	r5, #0
 8021cc6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021cca:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021cce:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021cd2:	9401      	str	r4, [sp, #4]
 8021cd4:	eb02 0901 	add.w	r9, r2, r1
 8021cd8:	f2c0 80c0 	blt.w	8021e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8021cdc:	45a8      	cmp	r8, r5
 8021cde:	f340 80bd 	ble.w	8021e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8021ce2:	2f00      	cmp	r7, #0
 8021ce4:	f2c0 80b6 	blt.w	8021e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8021ce8:	42be      	cmp	r6, r7
 8021cea:	f340 80b3 	ble.w	8021e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8021cee:	f812 c001 	ldrb.w	ip, [r2, r1]
 8021cf2:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8021cf6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021cfa:	d019      	beq.n	8021d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8021cfc:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8021d00:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021d04:	435a      	muls	r2, r3
 8021d06:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8021d0a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8021d0e:	fb0c f403 	mul.w	r4, ip, r3
 8021d12:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8021d16:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8021d1a:	441a      	add	r2, r3
 8021d1c:	f104 0320 	add.w	r3, r4, #32
 8021d20:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8021d24:	0a1b      	lsrs	r3, r3, #8
 8021d26:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8021d2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d2e:	4319      	orrs	r1, r3
 8021d30:	b289      	uxth	r1, r1
 8021d32:	1c7b      	adds	r3, r7, #1
 8021d34:	f100 8097 	bmi.w	8021e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8021d38:	429e      	cmp	r6, r3
 8021d3a:	f340 8094 	ble.w	8021e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8021d3e:	2800      	cmp	r0, #0
 8021d40:	f000 8094 	beq.w	8021e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8021d44:	f899 4001 	ldrb.w	r4, [r9, #1]
 8021d48:	9b01      	ldr	r3, [sp, #4]
 8021d4a:	2cff      	cmp	r4, #255	; 0xff
 8021d4c:	885b      	ldrh	r3, [r3, #2]
 8021d4e:	d01b      	beq.n	8021d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8021d50:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8021d54:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8021d58:	fb0a f202 	mul.w	r2, sl, r2
 8021d5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d60:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021d64:	fb04 fa03 	mul.w	sl, r4, r3
 8021d68:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8021d6c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8021d70:	441a      	add	r2, r3
 8021d72:	f10a 0320 	add.w	r3, sl, #32
 8021d76:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8021d7a:	0a1b      	lsrs	r3, r3, #8
 8021d7c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8021d80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d84:	ea4b 0303 	orr.w	r3, fp, r3
 8021d88:	b29b      	uxth	r3, r3
 8021d8a:	3501      	adds	r5, #1
 8021d8c:	d474      	bmi.n	8021e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8021d8e:	45a8      	cmp	r8, r5
 8021d90:	dd72      	ble.n	8021e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8021d92:	f1be 0f00 	cmp.w	lr, #0
 8021d96:	f000 8110 	beq.w	8021fba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8021d9a:	2f00      	cmp	r7, #0
 8021d9c:	db69      	blt.n	8021e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8021d9e:	42be      	cmp	r6, r7
 8021da0:	dd67      	ble.n	8021e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8021da2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021da6:	9a01      	ldr	r2, [sp, #4]
 8021da8:	2dff      	cmp	r5, #255	; 0xff
 8021daa:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8021dae:	d01c      	beq.n	8021dea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8021db0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8021db4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8021db8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021dbc:	fb05 fa0b 	mul.w	sl, r5, fp
 8021dc0:	fb08 f802 	mul.w	r8, r8, r2
 8021dc4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021dc8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8021dcc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021dd0:	4490      	add	r8, r2
 8021dd2:	f10a 0220 	add.w	r2, sl, #32
 8021dd6:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8021dda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021dde:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8021de2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021de6:	ea4b 0b0a 	orr.w	fp, fp, sl
 8021dea:	fa1f fb8b 	uxth.w	fp, fp
 8021dee:	3701      	adds	r7, #1
 8021df0:	d447      	bmi.n	8021e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8021df2:	42be      	cmp	r6, r7
 8021df4:	dd45      	ble.n	8021e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8021df6:	2800      	cmp	r0, #0
 8021df8:	d046      	beq.n	8021e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8021dfa:	3601      	adds	r6, #1
 8021dfc:	9a01      	ldr	r2, [sp, #4]
 8021dfe:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021e02:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8021e06:	2fff      	cmp	r7, #255	; 0xff
 8021e08:	d01a      	beq.n	8021e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8021e0a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8021e0e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8021e12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e16:	fb07 f902 	mul.w	r9, r7, r2
 8021e1a:	fb08 f806 	mul.w	r8, r8, r6
 8021e1e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021e22:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8021e26:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021e2a:	44b0      	add	r8, r6
 8021e2c:	f109 0620 	add.w	r6, r9, #32
 8021e30:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8021e34:	0a36      	lsrs	r6, r6, #8
 8021e36:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021e3a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021e3e:	4332      	orrs	r2, r6
 8021e40:	b292      	uxth	r2, r2
 8021e42:	280f      	cmp	r0, #15
 8021e44:	d922      	bls.n	8021e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8021e46:	4b61      	ldr	r3, [pc, #388]	; (8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8021e48:	4a61      	ldr	r2, [pc, #388]	; (8021fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8021e4a:	4862      	ldr	r0, [pc, #392]	; (8021fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8021e4c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8021e50:	f003 fcb6 	bl	80257c0 <__assert_func>
 8021e54:	f04f 0c00 	mov.w	ip, #0
 8021e58:	4661      	mov	r1, ip
 8021e5a:	e76a      	b.n	8021d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8021e5c:	2400      	movs	r4, #0
 8021e5e:	46a4      	mov	ip, r4
 8021e60:	4623      	mov	r3, r4
 8021e62:	4621      	mov	r1, r4
 8021e64:	e791      	b.n	8021d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8021e66:	2400      	movs	r4, #0
 8021e68:	4623      	mov	r3, r4
 8021e6a:	e78e      	b.n	8021d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8021e6c:	4604      	mov	r4, r0
 8021e6e:	4603      	mov	r3, r0
 8021e70:	e78b      	b.n	8021d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8021e72:	2500      	movs	r5, #0
 8021e74:	46ab      	mov	fp, r5
 8021e76:	e7ba      	b.n	8021dee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8021e78:	2700      	movs	r7, #0
 8021e7a:	463d      	mov	r5, r7
 8021e7c:	463a      	mov	r2, r7
 8021e7e:	46bb      	mov	fp, r7
 8021e80:	e7df      	b.n	8021e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8021e82:	2700      	movs	r7, #0
 8021e84:	463a      	mov	r2, r7
 8021e86:	e7dc      	b.n	8021e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8021e88:	4607      	mov	r7, r0
 8021e8a:	4602      	mov	r2, r0
 8021e8c:	f1be 0f0f 	cmp.w	lr, #15
 8021e90:	d8d9      	bhi.n	8021e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8021e92:	b286      	uxth	r6, r0
 8021e94:	fa1f f98e 	uxth.w	r9, lr
 8021e98:	fb06 f809 	mul.w	r8, r6, r9
 8021e9c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021ea0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021ea4:	0136      	lsls	r6, r6, #4
 8021ea6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021eaa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021eae:	9601      	str	r6, [sp, #4]
 8021eb0:	ea4a 0101 	orr.w	r1, sl, r1
 8021eb4:	fa1f f689 	uxth.w	r6, r9
 8021eb8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8021ebc:	fb10 f90e 	smulbb	r9, r0, lr
 8021ec0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8021ec4:	9602      	str	r6, [sp, #8]
 8021ec6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021eca:	460e      	mov	r6, r1
 8021ecc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021ed0:	f1ce 0110 	rsb	r1, lr, #16
 8021ed4:	1a09      	subs	r1, r1, r0
 8021ed6:	ea4a 0303 	orr.w	r3, sl, r3
 8021eda:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8021ede:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021ee2:	4343      	muls	r3, r0
 8021ee4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8021ee8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021eec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021ef0:	fb01 3106 	mla	r1, r1, r6, r3
 8021ef4:	ea4a 0202 	orr.w	r2, sl, r2
 8021ef8:	fb09 1302 	mla	r3, r9, r2, r1
 8021efc:	9a03      	ldr	r2, [sp, #12]
 8021efe:	9802      	ldr	r0, [sp, #8]
 8021f00:	8811      	ldrh	r1, [r2, #0]
 8021f02:	9a01      	ldr	r2, [sp, #4]
 8021f04:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021f08:	1a12      	subs	r2, r2, r0
 8021f0a:	9801      	ldr	r0, [sp, #4]
 8021f0c:	eba0 0608 	sub.w	r6, r0, r8
 8021f10:	b2b6      	uxth	r6, r6
 8021f12:	b292      	uxth	r2, r2
 8021f14:	4374      	muls	r4, r6
 8021f16:	fb0c 4402 	mla	r4, ip, r2, r4
 8021f1a:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8021f1e:	9a02      	ldr	r2, [sp, #8]
 8021f20:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021f24:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021f28:	fb02 4505 	mla	r5, r2, r5, r4
 8021f2c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8021f30:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021f34:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8021f38:	fb08 5707 	mla	r7, r8, r7, r5
 8021f3c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8021f40:	120a      	asrs	r2, r1, #8
 8021f42:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021f46:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021f4a:	b2ff      	uxtb	r7, r7
 8021f4c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f50:	10c8      	asrs	r0, r1, #3
 8021f52:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021f56:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021f5a:	00c9      	lsls	r1, r1, #3
 8021f5c:	437a      	muls	r2, r7
 8021f5e:	ea43 0e0e 	orr.w	lr, r3, lr
 8021f62:	b2c9      	uxtb	r1, r1
 8021f64:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021f68:	fa1f f38e 	uxth.w	r3, lr
 8021f6c:	4378      	muls	r0, r7
 8021f6e:	434f      	muls	r7, r1
 8021f70:	1c51      	adds	r1, r2, #1
 8021f72:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8021f76:	121a      	asrs	r2, r3, #8
 8021f78:	f022 0207 	bic.w	r2, r2, #7
 8021f7c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021f80:	1c41      	adds	r1, r0, #1
 8021f82:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021f86:	10d9      	asrs	r1, r3, #3
 8021f88:	f021 0103 	bic.w	r1, r1, #3
 8021f8c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021f90:	0212      	lsls	r2, r2, #8
 8021f92:	00c9      	lsls	r1, r1, #3
 8021f94:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021f98:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021f9c:	430a      	orrs	r2, r1
 8021f9e:	1c79      	adds	r1, r7, #1
 8021fa0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021fa4:	00db      	lsls	r3, r3, #3
 8021fa6:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021faa:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021fae:	4313      	orrs	r3, r2
 8021fb0:	9a03      	ldr	r2, [sp, #12]
 8021fb2:	8013      	strh	r3, [r2, #0]
 8021fb4:	b005      	add	sp, #20
 8021fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021fba:	280f      	cmp	r0, #15
 8021fbc:	f63f af43 	bhi.w	8021e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8021fc0:	4677      	mov	r7, lr
 8021fc2:	4675      	mov	r5, lr
 8021fc4:	4672      	mov	r2, lr
 8021fc6:	46f3      	mov	fp, lr
 8021fc8:	e763      	b.n	8021e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8021fca:	bf00      	nop
 8021fcc:	0802b1ee 	.word	0x0802b1ee
 8021fd0:	0802b7be 	.word	0x0802b7be
 8021fd4:	0802b272 	.word	0x0802b272

08021fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021fdc:	ed2d 8b08 	vpush	{d8-d11}
 8021fe0:	b093      	sub	sp, #76	; 0x4c
 8021fe2:	eeb0 aa40 	vmov.f32	s20, s0
 8021fe6:	9210      	str	r2, [sp, #64]	; 0x40
 8021fe8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021fea:	910e      	str	r1, [sp, #56]	; 0x38
 8021fec:	9306      	str	r3, [sp, #24]
 8021fee:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021ff2:	9011      	str	r0, [sp, #68]	; 0x44
 8021ff4:	6850      	ldr	r0, [r2, #4]
 8021ff6:	6812      	ldr	r2, [r2, #0]
 8021ff8:	fb00 1303 	mla	r3, r0, r3, r1
 8021ffc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022000:	9307      	str	r3, [sp, #28]
 8022002:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022004:	681b      	ldr	r3, [r3, #0]
 8022006:	9308      	str	r3, [sp, #32]
 8022008:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802200a:	685b      	ldr	r3, [r3, #4]
 802200c:	9309      	str	r3, [sp, #36]	; 0x24
 802200e:	eef0 9a60 	vmov.f32	s19, s1
 8022012:	eeb0 9a41 	vmov.f32	s18, s2
 8022016:	eeb0 8a62 	vmov.f32	s16, s5
 802201a:	eef0 8a43 	vmov.f32	s17, s6
 802201e:	eef0 ba44 	vmov.f32	s23, s8
 8022022:	eeb0 ba64 	vmov.f32	s22, s9
 8022026:	eef0 aa45 	vmov.f32	s21, s10
 802202a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802202c:	2b00      	cmp	r3, #0
 802202e:	dc03      	bgt.n	8022038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8022030:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022032:	2b00      	cmp	r3, #0
 8022034:	f340 83b4 	ble.w	80227a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8022038:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802203a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802203e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022042:	1e48      	subs	r0, r1, #1
 8022044:	1e55      	subs	r5, r2, #1
 8022046:	9b06      	ldr	r3, [sp, #24]
 8022048:	2b00      	cmp	r3, #0
 802204a:	f340 8163 	ble.w	8022314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 802204e:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8022050:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022052:	1436      	asrs	r6, r6, #16
 8022054:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022058:	d406      	bmi.n	8022068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802205a:	4286      	cmp	r6, r0
 802205c:	da04      	bge.n	8022068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802205e:	2b00      	cmp	r3, #0
 8022060:	db02      	blt.n	8022068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022062:	42ab      	cmp	r3, r5
 8022064:	f2c0 8157 	blt.w	8022316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8022068:	3601      	adds	r6, #1
 802206a:	f100 8144 	bmi.w	80222f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802206e:	42b1      	cmp	r1, r6
 8022070:	f2c0 8141 	blt.w	80222f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022074:	3301      	adds	r3, #1
 8022076:	f100 813e 	bmi.w	80222f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802207a:	429a      	cmp	r2, r3
 802207c:	f2c0 813b 	blt.w	80222f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022080:	9b06      	ldr	r3, [sp, #24]
 8022082:	9f07      	ldr	r7, [sp, #28]
 8022084:	930f      	str	r3, [sp, #60]	; 0x3c
 8022086:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802208a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802208c:	2b00      	cmp	r3, #0
 802208e:	f340 8164 	ble.w	802235a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8022092:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022094:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8022096:	1418      	asrs	r0, r3, #16
 8022098:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802209a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802209e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80220a0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80220a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80220a6:	142d      	asrs	r5, r5, #16
 80220a8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80220ac:	f100 81ee 	bmi.w	802248c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80220b0:	f102 3eff 	add.w	lr, r2, #4294967295
 80220b4:	4575      	cmp	r5, lr
 80220b6:	f280 81e9 	bge.w	802248c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80220ba:	2800      	cmp	r0, #0
 80220bc:	f2c0 81e6 	blt.w	802248c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80220c0:	f103 3eff 	add.w	lr, r3, #4294967295
 80220c4:	4570      	cmp	r0, lr
 80220c6:	f280 81e1 	bge.w	802248c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80220ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80220cc:	b212      	sxth	r2, r2
 80220ce:	fb00 5002 	mla	r0, r0, r2, r5
 80220d2:	fa1f fe81 	uxth.w	lr, r1
 80220d6:	eb03 0a00 	add.w	sl, r3, r0
 80220da:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80220de:	f813 9000 	ldrb.w	r9, [r3, r0]
 80220e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80220e6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80220ea:	b29b      	uxth	r3, r3
 80220ec:	f1bc 0f00 	cmp.w	ip, #0
 80220f0:	f000 8179 	beq.w	80223e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80220f4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80220f8:	940a      	str	r4, [sp, #40]	; 0x28
 80220fa:	eb0a 0b02 	add.w	fp, sl, r2
 80220fe:	fa1f fa8c 	uxth.w	sl, ip
 8022102:	fb0a fe0e 	mul.w	lr, sl, lr
 8022106:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802210a:	fa1f fa8a 	uxth.w	sl, sl
 802210e:	eba5 050e 	sub.w	r5, r5, lr
 8022112:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022116:	940b      	str	r4, [sp, #44]	; 0x2c
 8022118:	eba3 030a 	sub.w	r3, r3, sl
 802211c:	b2ad      	uxth	r5, r5
 802211e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022120:	b29b      	uxth	r3, r3
 8022122:	fb08 f505 	mul.w	r5, r8, r5
 8022126:	fb09 5303 	mla	r3, r9, r3, r5
 802212a:	fb0a 3304 	mla	r3, sl, r4, r3
 802212e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022130:	fb0e 3304 	mla	r3, lr, r4, r3
 8022134:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022138:	2b00      	cmp	r3, #0
 802213a:	f000 80cf 	beq.w	80222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802213e:	9c08      	ldr	r4, [sp, #32]
 8022140:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022144:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022148:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802214c:	f000 8150 	beq.w	80223f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8022150:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022154:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022158:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802215c:	fb09 f000 	mul.w	r0, r9, r0
 8022160:	fb0a fe0e 	mul.w	lr, sl, lr
 8022164:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022168:	f100 0b20 	add.w	fp, r0, #32
 802216c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022170:	44ce      	add	lr, r9
 8022172:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022176:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802217a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802217e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022182:	ea4e 0909 	orr.w	r9, lr, r9
 8022186:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802218a:	8868      	ldrh	r0, [r5, #2]
 802218c:	d019      	beq.n	80221c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802218e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022192:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022196:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802219a:	fb08 f800 	mul.w	r8, r8, r0
 802219e:	fb0a fe0e 	mul.w	lr, sl, lr
 80221a2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80221a6:	f108 0b20 	add.w	fp, r8, #32
 80221aa:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80221ae:	4486      	add	lr, r0
 80221b0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80221b4:	0a00      	lsrs	r0, r0, #8
 80221b6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80221ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80221be:	ea4e 0000 	orr.w	r0, lr, r0
 80221c2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80221c6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80221ca:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80221ce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80221d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80221da:	ea4e 0909 	orr.w	r9, lr, r9
 80221de:	ea4a 0000 	orr.w	r0, sl, r0
 80221e2:	f1bc 0f00 	cmp.w	ip, #0
 80221e6:	f000 8105 	beq.w	80223f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80221ea:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80221ee:	3a01      	subs	r2, #1
 80221f0:	0052      	lsls	r2, r2, #1
 80221f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80221f4:	3202      	adds	r2, #2
 80221f6:	2cff      	cmp	r4, #255	; 0xff
 80221f8:	eb05 0e02 	add.w	lr, r5, r2
 80221fc:	5aaa      	ldrh	r2, [r5, r2]
 80221fe:	d018      	beq.n	8022232 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022200:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022204:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022208:	fb04 fa02 	mul.w	sl, r4, r2
 802220c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022210:	fb08 f805 	mul.w	r8, r8, r5
 8022214:	f10a 0520 	add.w	r5, sl, #32
 8022218:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802221c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022220:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022224:	4442      	add	r2, r8
 8022226:	0a2d      	lsrs	r5, r5, #8
 8022228:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802222c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022230:	432a      	orrs	r2, r5
 8022232:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022234:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022238:	2cff      	cmp	r4, #255	; 0xff
 802223a:	d01a      	beq.n	8022272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802223c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022240:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022244:	fb04 fa05 	mul.w	sl, r4, r5
 8022248:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802224c:	fb08 f80e 	mul.w	r8, r8, lr
 8022250:	f10a 0e20 	add.w	lr, sl, #32
 8022254:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022258:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802225c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022260:	4445      	add	r5, r8
 8022262:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022266:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802226a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802226e:	ea45 050e 	orr.w	r5, r5, lr
 8022272:	fb1c fe01 	smulbb	lr, ip, r1
 8022276:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802227a:	f1cc 0810 	rsb	r8, ip, #16
 802227e:	eba8 0801 	sub.w	r8, r8, r1
 8022282:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022286:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802228a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802228e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022292:	4341      	muls	r1, r0
 8022294:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022298:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802229c:	ea4a 0202 	orr.w	r2, sl, r2
 80222a0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80222a4:	fb09 1108 	mla	r1, r9, r8, r1
 80222a8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80222ac:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80222b0:	fb0c 1102 	mla	r1, ip, r2, r1
 80222b4:	ea4b 0505 	orr.w	r5, fp, r5
 80222b8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80222bc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80222c0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80222c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80222c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80222cc:	ea42 0e0e 	orr.w	lr, r2, lr
 80222d0:	fa1f f28e 	uxth.w	r2, lr
 80222d4:	2bff      	cmp	r3, #255	; 0xff
 80222d6:	f040 80a1 	bne.w	802241c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80222da:	803a      	strh	r2, [r7, #0]
 80222dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80222de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80222e0:	4413      	add	r3, r2
 80222e2:	9325      	str	r3, [sp, #148]	; 0x94
 80222e4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80222e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80222e8:	441a      	add	r2, r3
 80222ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222ec:	9226      	str	r2, [sp, #152]	; 0x98
 80222ee:	3b01      	subs	r3, #1
 80222f0:	3702      	adds	r7, #2
 80222f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80222f4:	e6c9      	b.n	802208a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80222f6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80222f8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80222fa:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80222fc:	4433      	add	r3, r6
 80222fe:	9325      	str	r3, [sp, #148]	; 0x94
 8022300:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022302:	441c      	add	r4, r3
 8022304:	9b06      	ldr	r3, [sp, #24]
 8022306:	9426      	str	r4, [sp, #152]	; 0x98
 8022308:	3b01      	subs	r3, #1
 802230a:	9306      	str	r3, [sp, #24]
 802230c:	9b07      	ldr	r3, [sp, #28]
 802230e:	3302      	adds	r3, #2
 8022310:	9307      	str	r3, [sp, #28]
 8022312:	e698      	b.n	8022046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022314:	d028      	beq.n	8022368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8022316:	9b06      	ldr	r3, [sp, #24]
 8022318:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802231a:	9d25      	ldr	r5, [sp, #148]	; 0x94
 802231c:	3b01      	subs	r3, #1
 802231e:	fb00 5003 	mla	r0, r0, r3, r5
 8022322:	1400      	asrs	r0, r0, #16
 8022324:	f53f aeac 	bmi.w	8022080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022328:	3901      	subs	r1, #1
 802232a:	4288      	cmp	r0, r1
 802232c:	f6bf aea8 	bge.w	8022080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022330:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022332:	9826      	ldr	r0, [sp, #152]	; 0x98
 8022334:	fb01 0303 	mla	r3, r1, r3, r0
 8022338:	141b      	asrs	r3, r3, #16
 802233a:	f53f aea1 	bmi.w	8022080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802233e:	3a01      	subs	r2, #1
 8022340:	4293      	cmp	r3, r2
 8022342:	f6bf ae9d 	bge.w	8022080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022346:	9b06      	ldr	r3, [sp, #24]
 8022348:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802234c:	930f      	str	r3, [sp, #60]	; 0x3c
 802234e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022352:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022354:	2b00      	cmp	r3, #0
 8022356:	f300 80b6 	bgt.w	80224c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802235a:	9b06      	ldr	r3, [sp, #24]
 802235c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022360:	9b07      	ldr	r3, [sp, #28]
 8022362:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022366:	9307      	str	r3, [sp, #28]
 8022368:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802236a:	2b00      	cmp	r3, #0
 802236c:	f340 8218 	ble.w	80227a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8022370:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022374:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022378:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802237c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802237e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022382:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022386:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802238a:	eef0 6a48 	vmov.f32	s13, s16
 802238e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022392:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022396:	ee37 8a48 	vsub.f32	s16, s14, s16
 802239a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802239e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80223a2:	eef0 6a68 	vmov.f32	s13, s17
 80223a6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80223aa:	ee18 2a10 	vmov	r2, s16
 80223ae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80223b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80223b6:	ee18 2a90 	vmov	r2, s17
 80223ba:	9327      	str	r3, [sp, #156]	; 0x9c
 80223bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223be:	fb92 f3f3 	sdiv	r3, r2, r3
 80223c2:	9328      	str	r3, [sp, #160]	; 0xa0
 80223c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80223c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80223c8:	3b01      	subs	r3, #1
 80223ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80223ce:	930e      	str	r3, [sp, #56]	; 0x38
 80223d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223d2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80223d6:	bf08      	it	eq
 80223d8:	4613      	moveq	r3, r2
 80223da:	9306      	str	r3, [sp, #24]
 80223dc:	eef0 8a67 	vmov.f32	s17, s15
 80223e0:	eeb0 8a47 	vmov.f32	s16, s14
 80223e4:	e621      	b.n	802202a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80223e6:	fb08 f505 	mul.w	r5, r8, r5
 80223ea:	fb09 5303 	mla	r3, r9, r3, r5
 80223ee:	e6a1      	b.n	8022134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80223f0:	4681      	mov	r9, r0
 80223f2:	e6c8      	b.n	8022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80223f4:	f1c1 0210 	rsb	r2, r1, #16
 80223f8:	4341      	muls	r1, r0
 80223fa:	fb09 1902 	mla	r9, r9, r2, r1
 80223fe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022402:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022406:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802240a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802240e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022412:	ea42 0909 	orr.w	r9, r2, r9
 8022416:	fa1f f289 	uxth.w	r2, r9
 802241a:	e75b      	b.n	80222d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802241c:	f8b7 c000 	ldrh.w	ip, [r7]
 8022420:	43db      	mvns	r3, r3
 8022422:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022426:	fa5f fe83 	uxtb.w	lr, r3
 802242a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802242e:	fb00 f00e 	mul.w	r0, r0, lr
 8022432:	1c41      	adds	r1, r0, #1
 8022434:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022438:	1211      	asrs	r1, r2, #8
 802243a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802243e:	f021 0107 	bic.w	r1, r1, #7
 8022442:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022446:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802244a:	48d8      	ldr	r0, [pc, #864]	; (80227ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 802244c:	fb05 f50e 	mul.w	r5, r5, lr
 8022450:	b2c9      	uxtb	r1, r1
 8022452:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022456:	1c69      	adds	r1, r5, #1
 8022458:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802245c:	10d1      	asrs	r1, r2, #3
 802245e:	f021 0103 	bic.w	r1, r1, #3
 8022462:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022466:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802246a:	b2db      	uxtb	r3, r3
 802246c:	00c9      	lsls	r1, r1, #3
 802246e:	fb03 f30e 	mul.w	r3, r3, lr
 8022472:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022476:	4301      	orrs	r1, r0
 8022478:	1c58      	adds	r0, r3, #1
 802247a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802247e:	00d2      	lsls	r2, r2, #3
 8022480:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022484:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022488:	430a      	orrs	r2, r1
 802248a:	e726      	b.n	80222da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802248c:	f115 0e01 	adds.w	lr, r5, #1
 8022490:	f53f af24 	bmi.w	80222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8022494:	4572      	cmp	r2, lr
 8022496:	f6ff af21 	blt.w	80222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802249a:	f110 0e01 	adds.w	lr, r0, #1
 802249e:	f53f af1d 	bmi.w	80222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80224a2:	4573      	cmp	r3, lr
 80224a4:	f6ff af1a 	blt.w	80222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80224a8:	b21b      	sxth	r3, r3
 80224aa:	b212      	sxth	r2, r2
 80224ac:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80224b0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80224b4:	9301      	str	r3, [sp, #4]
 80224b6:	9200      	str	r2, [sp, #0]
 80224b8:	4639      	mov	r1, r7
 80224ba:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80224be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80224c0:	f7ff fbf4 	bl	8021cac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80224c4:	e70a      	b.n	80222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80224c6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80224c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80224cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80224ce:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80224d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80224d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80224d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80224da:	141f      	asrs	r7, r3, #16
 80224dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80224de:	141b      	asrs	r3, r3, #16
 80224e0:	fb01 3707 	mla	r7, r1, r7, r3
 80224e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224e6:	fa1f fc82 	uxth.w	ip, r2
 80224ea:	eb03 0a07 	add.w	sl, r3, r7
 80224ee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80224f2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80224f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80224fa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80224fe:	b29b      	uxth	r3, r3
 8022500:	2d00      	cmp	r5, #0
 8022502:	f000 80fe 	beq.w	8022702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 8022506:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802250a:	940c      	str	r4, [sp, #48]	; 0x30
 802250c:	eb0a 0b01 	add.w	fp, sl, r1
 8022510:	fa1f fa85 	uxth.w	sl, r5
 8022514:	fb0a fc0c 	mul.w	ip, sl, ip
 8022518:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802251c:	fa1f fa8a 	uxth.w	sl, sl
 8022520:	eba0 000c 	sub.w	r0, r0, ip
 8022524:	eba3 030a 	sub.w	r3, r3, sl
 8022528:	b280      	uxth	r0, r0
 802252a:	fb08 f000 	mul.w	r0, r8, r0
 802252e:	b29b      	uxth	r3, r3
 8022530:	fb09 0303 	mla	r3, r9, r3, r0
 8022534:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022536:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802253a:	940d      	str	r4, [sp, #52]	; 0x34
 802253c:	fb0a 3300 	mla	r3, sl, r0, r3
 8022540:	fb0c 3304 	mla	r3, ip, r4, r3
 8022544:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022548:	2b00      	cmp	r3, #0
 802254a:	f000 80cc 	beq.w	80226e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 802254e:	9808      	ldr	r0, [sp, #32]
 8022550:	9c08      	ldr	r4, [sp, #32]
 8022552:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022556:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802255a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802255e:	f000 80d5 	beq.w	802270c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8022562:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022566:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802256a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802256e:	fb09 f707 	mul.w	r7, r9, r7
 8022572:	fb0a fc0c 	mul.w	ip, sl, ip
 8022576:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802257a:	f107 0b20 	add.w	fp, r7, #32
 802257e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022582:	44cc      	add	ip, r9
 8022584:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022588:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802258c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022590:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022594:	ea4c 0909 	orr.w	r9, ip, r9
 8022598:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802259c:	8847      	ldrh	r7, [r0, #2]
 802259e:	d019      	beq.n	80225d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80225a0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80225a4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80225a8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80225ac:	fb08 f807 	mul.w	r8, r8, r7
 80225b0:	fb0a fc0c 	mul.w	ip, sl, ip
 80225b4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80225b8:	f108 0b20 	add.w	fp, r8, #32
 80225bc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80225c0:	44bc      	add	ip, r7
 80225c2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80225c6:	0a3f      	lsrs	r7, r7, #8
 80225c8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80225cc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80225d0:	ea4c 0707 	orr.w	r7, ip, r7
 80225d4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80225d8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80225dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80225e0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80225e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225e8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80225ec:	ea4c 0909 	orr.w	r9, ip, r9
 80225f0:	ea4a 0707 	orr.w	r7, sl, r7
 80225f4:	2d00      	cmp	r5, #0
 80225f6:	f000 808b 	beq.w	8022710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 80225fa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80225fe:	3901      	subs	r1, #1
 8022600:	0049      	lsls	r1, r1, #1
 8022602:	3102      	adds	r1, #2
 8022604:	eb00 0c01 	add.w	ip, r0, r1
 8022608:	5a41      	ldrh	r1, [r0, r1]
 802260a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802260c:	28ff      	cmp	r0, #255	; 0xff
 802260e:	d019      	beq.n	8022644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022610:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022612:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022616:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802261a:	fb04 fa01 	mul.w	sl, r4, r1
 802261e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022622:	fb08 f800 	mul.w	r8, r8, r0
 8022626:	f10a 0020 	add.w	r0, sl, #32
 802262a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802262e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022632:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022636:	4441      	add	r1, r8
 8022638:	0a00      	lsrs	r0, r0, #8
 802263a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802263e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022642:	4301      	orrs	r1, r0
 8022644:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022646:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802264a:	2cff      	cmp	r4, #255	; 0xff
 802264c:	d01a      	beq.n	8022684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802264e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022652:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022656:	fb04 fa00 	mul.w	sl, r4, r0
 802265a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802265e:	fb08 f80c 	mul.w	r8, r8, ip
 8022662:	f10a 0c20 	add.w	ip, sl, #32
 8022666:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802266a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802266e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022672:	4440      	add	r0, r8
 8022674:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022678:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802267c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022680:	ea40 000c 	orr.w	r0, r0, ip
 8022684:	fb15 fc02 	smulbb	ip, r5, r2
 8022688:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802268c:	f1c5 0810 	rsb	r8, r5, #16
 8022690:	eba8 0802 	sub.w	r8, r8, r2
 8022694:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022698:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802269c:	437a      	muls	r2, r7
 802269e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80226a2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80226a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80226ae:	fb09 2208 	mla	r2, r9, r8, r2
 80226b2:	ea4a 0101 	orr.w	r1, sl, r1
 80226b6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80226ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80226be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80226c2:	fb05 2201 	mla	r2, r5, r1, r2
 80226c6:	ea4b 0000 	orr.w	r0, fp, r0
 80226ca:	fb0c 2200 	mla	r2, ip, r0, r2
 80226ce:	0d57      	lsrs	r7, r2, #21
 80226d0:	0952      	lsrs	r2, r2, #5
 80226d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80226d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226da:	433a      	orrs	r2, r7
 80226dc:	2bff      	cmp	r3, #255	; 0xff
 80226de:	b292      	uxth	r2, r2
 80226e0:	d127      	bne.n	8022732 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80226e2:	f8ae 2000 	strh.w	r2, [lr]
 80226e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80226e8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80226ea:	4413      	add	r3, r2
 80226ec:	9325      	str	r3, [sp, #148]	; 0x94
 80226ee:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80226f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80226f2:	441a      	add	r2, r3
 80226f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80226f6:	9226      	str	r2, [sp, #152]	; 0x98
 80226f8:	3b01      	subs	r3, #1
 80226fa:	f10e 0e02 	add.w	lr, lr, #2
 80226fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8022700:	e627      	b.n	8022352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022702:	fb08 f000 	mul.w	r0, r8, r0
 8022706:	fb09 0303 	mla	r3, r9, r3, r0
 802270a:	e71b      	b.n	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802270c:	46b9      	mov	r9, r7
 802270e:	e743      	b.n	8022598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022710:	f1c2 0110 	rsb	r1, r2, #16
 8022714:	437a      	muls	r2, r7
 8022716:	fb09 2901 	mla	r9, r9, r1, r2
 802271a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802271e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022722:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022726:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802272a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802272e:	4302      	orrs	r2, r0
 8022730:	e7d4      	b.n	80226dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022732:	f8be 7000 	ldrh.w	r7, [lr]
 8022736:	4c1d      	ldr	r4, [pc, #116]	; (80227ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8022738:	43db      	mvns	r3, r3
 802273a:	1238      	asrs	r0, r7, #8
 802273c:	fa5f fc83 	uxtb.w	ip, r3
 8022740:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022744:	10fd      	asrs	r5, r7, #3
 8022746:	fb00 f00c 	mul.w	r0, r0, ip
 802274a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802274e:	fb05 f10c 	mul.w	r1, r5, ip
 8022752:	1c45      	adds	r5, r0, #1
 8022754:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022758:	1215      	asrs	r5, r2, #8
 802275a:	f025 0507 	bic.w	r5, r5, #7
 802275e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022762:	1c4d      	adds	r5, r1, #1
 8022764:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022768:	10d1      	asrs	r1, r2, #3
 802276a:	f021 0103 	bic.w	r1, r1, #3
 802276e:	00fb      	lsls	r3, r7, #3
 8022770:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022774:	b2db      	uxtb	r3, r3
 8022776:	b2c0      	uxtb	r0, r0
 8022778:	00c9      	lsls	r1, r1, #3
 802277a:	fb03 f30c 	mul.w	r3, r3, ip
 802277e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022782:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022786:	4308      	orrs	r0, r1
 8022788:	1c59      	adds	r1, r3, #1
 802278a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802278e:	00d2      	lsls	r2, r2, #3
 8022790:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022794:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022798:	4318      	orrs	r0, r3
 802279a:	f8ae 0000 	strh.w	r0, [lr]
 802279e:	e7a2      	b.n	80226e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 80227a0:	b013      	add	sp, #76	; 0x4c
 80227a2:	ecbd 8b08 	vpop	{d8-d11}
 80227a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80227aa:	bf00      	nop
 80227ac:	fffff800 	.word	0xfffff800

080227b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80227b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80227b4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 80227b8:	fb0c 4e03 	mla	lr, ip, r3, r4
 80227bc:	f1bc 0f00 	cmp.w	ip, #0
 80227c0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80227c4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 80227c8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 80227cc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80227d0:	8808      	ldrh	r0, [r1, #0]
 80227d2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 80227d6:	db2f      	blt.n	8022838 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80227d8:	45e2      	cmp	sl, ip
 80227da:	dd2d      	ble.n	8022838 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80227dc:	2c00      	cmp	r4, #0
 80227de:	db29      	blt.n	8022834 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80227e0:	42a3      	cmp	r3, r4
 80227e2:	dd27      	ble.n	8022834 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80227e4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80227e8:	1c62      	adds	r2, r4, #1
 80227ea:	d428      	bmi.n	802283e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80227ec:	4293      	cmp	r3, r2
 80227ee:	dd26      	ble.n	802283e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80227f0:	b32f      	cbz	r7, 802283e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80227f2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80227f6:	f11c 0c01 	adds.w	ip, ip, #1
 80227fa:	d424      	bmi.n	8022846 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80227fc:	45e2      	cmp	sl, ip
 80227fe:	dd22      	ble.n	8022846 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8022800:	2e00      	cmp	r6, #0
 8022802:	f000 809d 	beq.w	8022940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8022806:	2c00      	cmp	r4, #0
 8022808:	db1b      	blt.n	8022842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 802280a:	42a3      	cmp	r3, r4
 802280c:	dd19      	ble.n	8022842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 802280e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8022812:	3401      	adds	r4, #1
 8022814:	d41a      	bmi.n	802284c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8022816:	42a3      	cmp	r3, r4
 8022818:	dd18      	ble.n	802284c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 802281a:	b1cf      	cbz	r7, 8022850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 802281c:	3301      	adds	r3, #1
 802281e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8022822:	2f0f      	cmp	r7, #15
 8022824:	d915      	bls.n	8022852 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8022826:	4b49      	ldr	r3, [pc, #292]	; (802294c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8022828:	4a49      	ldr	r2, [pc, #292]	; (8022950 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 802282a:	484a      	ldr	r0, [pc, #296]	; (8022954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 802282c:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8022830:	f002 ffc6 	bl	80257c0 <__assert_func>
 8022834:	4681      	mov	r9, r0
 8022836:	e7d7      	b.n	80227e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8022838:	4686      	mov	lr, r0
 802283a:	4681      	mov	r9, r0
 802283c:	e7db      	b.n	80227f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 802283e:	4686      	mov	lr, r0
 8022840:	e7d9      	b.n	80227f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8022842:	4684      	mov	ip, r0
 8022844:	e7e5      	b.n	8022812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8022846:	4603      	mov	r3, r0
 8022848:	4684      	mov	ip, r0
 802284a:	e7ea      	b.n	8022822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 802284c:	4603      	mov	r3, r0
 802284e:	e7e8      	b.n	8022822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8022850:	4603      	mov	r3, r0
 8022852:	2e0f      	cmp	r6, #15
 8022854:	d8e7      	bhi.n	8022826 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8022856:	ea4f 4409 	mov.w	r4, r9, lsl #16
 802285a:	fb17 f806 	smulbb	r8, r7, r6
 802285e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022862:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8022866:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802286a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 802286e:	ea44 0909 	orr.w	r9, r4, r9
 8022872:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022876:	f1c6 0410 	rsb	r4, r6, #16
 802287a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802287e:	1be4      	subs	r4, r4, r7
 8022880:	041a      	lsls	r2, r3, #16
 8022882:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8022886:	ea4a 0e0e 	orr.w	lr, sl, lr
 802288a:	fb07 fe0e 	mul.w	lr, r7, lr
 802288e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022892:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8022896:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802289a:	fb04 e409 	mla	r4, r4, r9, lr
 802289e:	4313      	orrs	r3, r2
 80228a0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 80228a4:	fb08 4303 	mla	r3, r8, r3, r4
 80228a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80228ac:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 80228b0:	4322      	orrs	r2, r4
 80228b2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80228b6:	fb06 3202 	mla	r2, r6, r2, r3
 80228ba:	0d53      	lsrs	r3, r2, #21
 80228bc:	0952      	lsrs	r2, r2, #5
 80228be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80228c6:	431a      	orrs	r2, r3
 80228c8:	b293      	uxth	r3, r2
 80228ca:	b2af      	uxth	r7, r5
 80228cc:	1202      	asrs	r2, r0, #8
 80228ce:	43ed      	mvns	r5, r5
 80228d0:	b2ed      	uxtb	r5, r5
 80228d2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80228d6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80228da:	fb12 f205 	smulbb	r2, r2, r5
 80228de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80228e2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80228e6:	00dc      	lsls	r4, r3, #3
 80228e8:	10da      	asrs	r2, r3, #3
 80228ea:	10c6      	asrs	r6, r0, #3
 80228ec:	00c3      	lsls	r3, r0, #3
 80228ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80228f2:	b2db      	uxtb	r3, r3
 80228f4:	fb16 f605 	smulbb	r6, r6, r5
 80228f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80228fc:	b2e4      	uxtb	r4, r4
 80228fe:	fb13 f305 	smulbb	r3, r3, r5
 8022902:	fa1f fc8c 	uxth.w	ip, ip
 8022906:	fb02 6207 	mla	r2, r2, r7, r6
 802290a:	fb04 3307 	mla	r3, r4, r7, r3
 802290e:	b296      	uxth	r6, r2
 8022910:	b29a      	uxth	r2, r3
 8022912:	f10c 0301 	add.w	r3, ip, #1
 8022916:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802291a:	1c53      	adds	r3, r2, #1
 802291c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022920:	1c72      	adds	r2, r6, #1
 8022922:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8022926:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802292a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802292e:	0952      	lsrs	r2, r2, #5
 8022930:	ea43 030c 	orr.w	r3, r3, ip
 8022934:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022938:	4313      	orrs	r3, r2
 802293a:	800b      	strh	r3, [r1, #0]
 802293c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022940:	2f0f      	cmp	r7, #15
 8022942:	f63f af70 	bhi.w	8022826 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8022946:	4603      	mov	r3, r0
 8022948:	4684      	mov	ip, r0
 802294a:	e784      	b.n	8022856 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 802294c:	0802b1ee 	.word	0x0802b1ee
 8022950:	0802b867 	.word	0x0802b867
 8022954:	0802b272 	.word	0x0802b272

08022958 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802295c:	ed2d 8b08 	vpush	{d8-d11}
 8022960:	b093      	sub	sp, #76	; 0x4c
 8022962:	461d      	mov	r5, r3
 8022964:	9210      	str	r2, [sp, #64]	; 0x40
 8022966:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022968:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 802296c:	920b      	str	r2, [sp, #44]	; 0x2c
 802296e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8022972:	910a      	str	r1, [sp, #40]	; 0x28
 8022974:	6859      	ldr	r1, [r3, #4]
 8022976:	681b      	ldr	r3, [r3, #0]
 8022978:	9011      	str	r0, [sp, #68]	; 0x44
 802297a:	fb01 2707 	mla	r7, r1, r7, r2
 802297e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022982:	9307      	str	r3, [sp, #28]
 8022984:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022986:	681b      	ldr	r3, [r3, #0]
 8022988:	9309      	str	r3, [sp, #36]	; 0x24
 802298a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802298c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8022990:	43db      	mvns	r3, r3
 8022992:	b2db      	uxtb	r3, r3
 8022994:	eeb0 aa40 	vmov.f32	s20, s0
 8022998:	eef0 9a60 	vmov.f32	s19, s1
 802299c:	eeb0 9a41 	vmov.f32	s18, s2
 80229a0:	eeb0 8a62 	vmov.f32	s16, s5
 80229a4:	eef0 8a43 	vmov.f32	s17, s6
 80229a8:	eef0 ba44 	vmov.f32	s23, s8
 80229ac:	eeb0 ba64 	vmov.f32	s22, s9
 80229b0:	eef0 aa45 	vmov.f32	s21, s10
 80229b4:	9308      	str	r3, [sp, #32]
 80229b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80229b8:	2b00      	cmp	r3, #0
 80229ba:	dc03      	bgt.n	80229c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80229bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80229be:	2b00      	cmp	r3, #0
 80229c0:	f340 8203 	ble.w	8022dca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80229c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80229c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80229ce:	1e48      	subs	r0, r1, #1
 80229d0:	f102 3cff 	add.w	ip, r2, #4294967295
 80229d4:	2d00      	cmp	r5, #0
 80229d6:	f340 80da 	ble.w	8022b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80229da:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80229de:	ea4f 4326 	mov.w	r3, r6, asr #16
 80229e2:	d406      	bmi.n	80229f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229e4:	4586      	cmp	lr, r0
 80229e6:	da04      	bge.n	80229f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229e8:	2b00      	cmp	r3, #0
 80229ea:	db02      	blt.n	80229f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229ec:	4563      	cmp	r3, ip
 80229ee:	f2c0 80cf 	blt.w	8022b90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80229f2:	f11e 0e01 	adds.w	lr, lr, #1
 80229f6:	f100 80c1 	bmi.w	8022b7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80229fa:	4571      	cmp	r1, lr
 80229fc:	f2c0 80be 	blt.w	8022b7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022a00:	3301      	adds	r3, #1
 8022a02:	f100 80bb 	bmi.w	8022b7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022a06:	429a      	cmp	r2, r3
 8022a08:	f2c0 80b8 	blt.w	8022b7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022a0c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022a10:	46a9      	mov	r9, r5
 8022a12:	f1b9 0f00 	cmp.w	r9, #0
 8022a16:	f340 80d8 	ble.w	8022bca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022a1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022a1c:	1421      	asrs	r1, r4, #16
 8022a1e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022a22:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022a26:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022a2a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022a2e:	f100 8111 	bmi.w	8022c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022a32:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022a36:	4551      	cmp	r1, sl
 8022a38:	f280 810c 	bge.w	8022c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022a3c:	2800      	cmp	r0, #0
 8022a3e:	f2c0 8109 	blt.w	8022c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022a42:	f103 3aff 	add.w	sl, r3, #4294967295
 8022a46:	4550      	cmp	r0, sl
 8022a48:	f280 8104 	bge.w	8022c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022a4c:	fa0f f38e 	sxth.w	r3, lr
 8022a50:	fb00 1103 	mla	r1, r0, r3, r1
 8022a54:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022a56:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022a5a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022a5e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022a62:	f1bc 0f00 	cmp.w	ip, #0
 8022a66:	d007      	beq.n	8022a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8022a68:	005b      	lsls	r3, r3, #1
 8022a6a:	eb0a 0003 	add.w	r0, sl, r3
 8022a6e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022a72:	930c      	str	r3, [sp, #48]	; 0x30
 8022a74:	8843      	ldrh	r3, [r0, #2]
 8022a76:	930d      	str	r3, [sp, #52]	; 0x34
 8022a78:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022a7c:	fb12 f30c 	smulbb	r3, r2, ip
 8022a80:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022a84:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022a88:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022a8c:	10db      	asrs	r3, r3, #3
 8022a8e:	ea40 000e 	orr.w	r0, r0, lr
 8022a92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022a96:	f1cc 0e10 	rsb	lr, ip, #16
 8022a9a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022a9e:	ebae 0e02 	sub.w	lr, lr, r2
 8022aa2:	ea4a 0101 	orr.w	r1, sl, r1
 8022aa6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022aaa:	4351      	muls	r1, r2
 8022aac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022aae:	9f08      	ldr	r7, [sp, #32]
 8022ab0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022ab4:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022ab8:	0410      	lsls	r0, r2, #16
 8022aba:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022abe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ac2:	4310      	orrs	r0, r2
 8022ac4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022ac6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022ac8:	0412      	lsls	r2, r2, #16
 8022aca:	fb03 e000 	mla	r0, r3, r0, lr
 8022ace:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022ad2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022ad6:	ea42 020e 	orr.w	r2, r2, lr
 8022ada:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022ade:	fb03 0302 	mla	r3, r3, r2, r0
 8022ae2:	0d5a      	lsrs	r2, r3, #21
 8022ae4:	095b      	lsrs	r3, r3, #5
 8022ae6:	f8b8 0000 	ldrh.w	r0, [r8]
 8022aea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022aee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022af2:	4313      	orrs	r3, r2
 8022af4:	b29b      	uxth	r3, r3
 8022af6:	1201      	asrs	r1, r0, #8
 8022af8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022afc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022b00:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022b04:	fb11 f107 	smulbb	r1, r1, r7
 8022b08:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022b0c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022b10:	00c0      	lsls	r0, r0, #3
 8022b12:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022b16:	b2c0      	uxtb	r0, r0
 8022b18:	10d9      	asrs	r1, r3, #3
 8022b1a:	00db      	lsls	r3, r3, #3
 8022b1c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022b20:	b2db      	uxtb	r3, r3
 8022b22:	fb10 f007 	smulbb	r0, r0, r7
 8022b26:	fa1f fc8c 	uxth.w	ip, ip
 8022b2a:	fb03 0302 	mla	r3, r3, r2, r0
 8022b2e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b32:	fb1e fe07 	smulbb	lr, lr, r7
 8022b36:	fb01 e102 	mla	r1, r1, r2, lr
 8022b3a:	b29a      	uxth	r2, r3
 8022b3c:	f10c 0301 	add.w	r3, ip, #1
 8022b40:	b289      	uxth	r1, r1
 8022b42:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022b46:	1c53      	adds	r3, r2, #1
 8022b48:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022b4c:	1c4a      	adds	r2, r1, #1
 8022b4e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022b52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022b56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022b5a:	0949      	lsrs	r1, r1, #5
 8022b5c:	ea43 030c 	orr.w	r3, r3, ip
 8022b60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b64:	430b      	orrs	r3, r1
 8022b66:	f8a8 3000 	strh.w	r3, [r8]
 8022b6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022b6c:	441c      	add	r4, r3
 8022b6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b70:	f108 0802 	add.w	r8, r8, #2
 8022b74:	441e      	add	r6, r3
 8022b76:	f109 39ff 	add.w	r9, r9, #4294967295
 8022b7a:	e74a      	b.n	8022a12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8022b7c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022b7e:	441c      	add	r4, r3
 8022b80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b82:	441e      	add	r6, r3
 8022b84:	9b07      	ldr	r3, [sp, #28]
 8022b86:	3302      	adds	r3, #2
 8022b88:	3d01      	subs	r5, #1
 8022b8a:	9307      	str	r3, [sp, #28]
 8022b8c:	e722      	b.n	80229d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022b8e:	d022      	beq.n	8022bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8022b90:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022b92:	1e6b      	subs	r3, r5, #1
 8022b94:	fb00 4003 	mla	r0, r0, r3, r4
 8022b98:	1400      	asrs	r0, r0, #16
 8022b9a:	f53f af37 	bmi.w	8022a0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8022b9e:	3901      	subs	r1, #1
 8022ba0:	4288      	cmp	r0, r1
 8022ba2:	f6bf af33 	bge.w	8022a0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8022ba6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022ba8:	fb01 6303 	mla	r3, r1, r3, r6
 8022bac:	141b      	asrs	r3, r3, #16
 8022bae:	f53f af2d 	bmi.w	8022a0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8022bb2:	3a01      	subs	r2, #1
 8022bb4:	4293      	cmp	r3, r2
 8022bb6:	f6bf af29 	bge.w	8022a0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8022bba:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022bbe:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022bc2:	46a8      	mov	r8, r5
 8022bc4:	f1b8 0f00 	cmp.w	r8, #0
 8022bc8:	dc5e      	bgt.n	8022c88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022bca:	9b07      	ldr	r3, [sp, #28]
 8022bcc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022bd0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022bd4:	9307      	str	r3, [sp, #28]
 8022bd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022bd8:	2b00      	cmp	r3, #0
 8022bda:	f340 80f6 	ble.w	8022dca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8022bde:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022be2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022be6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022bea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bec:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022bf0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022bf4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022bf8:	eef0 6a48 	vmov.f32	s13, s16
 8022bfc:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022c00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c04:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022c08:	ee16 4a90 	vmov	r4, s13
 8022c0c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022c10:	eef0 6a68 	vmov.f32	s13, s17
 8022c14:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022c18:	ee18 2a10 	vmov	r2, s16
 8022c1c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022c20:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c24:	ee18 2a90 	vmov	r2, s17
 8022c28:	9327      	str	r3, [sp, #156]	; 0x9c
 8022c2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c30:	9328      	str	r3, [sp, #160]	; 0xa0
 8022c32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022c34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022c36:	3b01      	subs	r3, #1
 8022c38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c3c:	930a      	str	r3, [sp, #40]	; 0x28
 8022c3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c40:	ee16 6a90 	vmov	r6, s13
 8022c44:	bf14      	ite	ne
 8022c46:	461d      	movne	r5, r3
 8022c48:	4615      	moveq	r5, r2
 8022c4a:	eef0 8a67 	vmov.f32	s17, s15
 8022c4e:	eeb0 8a47 	vmov.f32	s16, s14
 8022c52:	e6b0      	b.n	80229b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8022c54:	f111 0a01 	adds.w	sl, r1, #1
 8022c58:	d487      	bmi.n	8022b6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022c5a:	45d6      	cmp	lr, sl
 8022c5c:	db85      	blt.n	8022b6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022c5e:	f110 0a01 	adds.w	sl, r0, #1
 8022c62:	d482      	bmi.n	8022b6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022c64:	4553      	cmp	r3, sl
 8022c66:	db80      	blt.n	8022b6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022c68:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022c6a:	9101      	str	r1, [sp, #4]
 8022c6c:	b21b      	sxth	r3, r3
 8022c6e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022c72:	9300      	str	r3, [sp, #0]
 8022c74:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022c78:	fa0f f38e 	sxth.w	r3, lr
 8022c7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022c7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022c80:	4641      	mov	r1, r8
 8022c82:	f7ff fd95 	bl	80227b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022c86:	e770      	b.n	8022b6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022c88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c8a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022c8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c90:	1430      	asrs	r0, r6, #16
 8022c92:	1423      	asrs	r3, r4, #16
 8022c94:	fb01 3000 	mla	r0, r1, r0, r3
 8022c98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c9a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022c9e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022ca2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022ca6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022caa:	8858      	ldrh	r0, [r3, #2]
 8022cac:	f1be 0f00 	cmp.w	lr, #0
 8022cb0:	d00b      	beq.n	8022cca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8022cb2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022cb6:	3901      	subs	r1, #1
 8022cb8:	0049      	lsls	r1, r1, #1
 8022cba:	3102      	adds	r1, #2
 8022cbc:	eb03 0b01 	add.w	fp, r3, r1
 8022cc0:	5a5b      	ldrh	r3, [r3, r1]
 8022cc2:	930e      	str	r3, [sp, #56]	; 0x38
 8022cc4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022cc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8022cca:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022cce:	fb12 f30e 	smulbb	r3, r2, lr
 8022cd2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022cd6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022cda:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022cde:	10db      	asrs	r3, r3, #3
 8022ce0:	ea41 010c 	orr.w	r1, r1, ip
 8022ce4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ce8:	f1ce 0c10 	rsb	ip, lr, #16
 8022cec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022cf0:	ebac 0c02 	sub.w	ip, ip, r2
 8022cf4:	ea4b 0000 	orr.w	r0, fp, r0
 8022cf8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022cfc:	4350      	muls	r0, r2
 8022cfe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022d00:	9f08      	ldr	r7, [sp, #32]
 8022d02:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022d06:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022d0a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022d0e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022d12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022d14:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022d16:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d1a:	0412      	lsls	r2, r2, #16
 8022d1c:	ea4b 0101 	orr.w	r1, fp, r1
 8022d20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d24:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d28:	fb03 c101 	mla	r1, r3, r1, ip
 8022d2c:	4302      	orrs	r2, r0
 8022d2e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022d32:	fb03 1202 	mla	r2, r3, r2, r1
 8022d36:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022d3a:	0952      	lsrs	r2, r2, #5
 8022d3c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022d40:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022d44:	f8b9 2000 	ldrh.w	r2, [r9]
 8022d48:	ea4b 0303 	orr.w	r3, fp, r3
 8022d4c:	b29b      	uxth	r3, r3
 8022d4e:	1211      	asrs	r1, r2, #8
 8022d50:	1218      	asrs	r0, r3, #8
 8022d52:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022d56:	fb11 f107 	smulbb	r1, r1, r7
 8022d5a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022d5e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022d62:	00d2      	lsls	r2, r2, #3
 8022d64:	fb00 100a 	mla	r0, r0, sl, r1
 8022d68:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022d6c:	10d9      	asrs	r1, r3, #3
 8022d6e:	b2d2      	uxtb	r2, r2
 8022d70:	00db      	lsls	r3, r3, #3
 8022d72:	fb1c fc07 	smulbb	ip, ip, r7
 8022d76:	fb12 f207 	smulbb	r2, r2, r7
 8022d7a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022d7e:	b2db      	uxtb	r3, r3
 8022d80:	b280      	uxth	r0, r0
 8022d82:	fb01 c10a 	mla	r1, r1, sl, ip
 8022d86:	fb03 230a 	mla	r3, r3, sl, r2
 8022d8a:	b29b      	uxth	r3, r3
 8022d8c:	b289      	uxth	r1, r1
 8022d8e:	1c42      	adds	r2, r0, #1
 8022d90:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022d94:	f101 0c01 	add.w	ip, r1, #1
 8022d98:	1c5a      	adds	r2, r3, #1
 8022d9a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022d9e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022da2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022da4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022da8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022dac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022db0:	4310      	orrs	r0, r2
 8022db2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022db6:	441c      	add	r4, r3
 8022db8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022dba:	ea40 000c 	orr.w	r0, r0, ip
 8022dbe:	f829 0b02 	strh.w	r0, [r9], #2
 8022dc2:	441e      	add	r6, r3
 8022dc4:	f108 38ff 	add.w	r8, r8, #4294967295
 8022dc8:	e6fc      	b.n	8022bc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8022dca:	b013      	add	sp, #76	; 0x4c
 8022dcc:	ecbd 8b08 	vpop	{d8-d11}
 8022dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022dd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022dd8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8022ddc:	fb06 5c03 	mla	ip, r6, r3, r5
 8022de0:	2e00      	cmp	r6, #0
 8022de2:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8022de6:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8022dea:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8022dee:	8808      	ldrh	r0, [r1, #0]
 8022df0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022df4:	db2e      	blt.n	8022e54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8022df6:	45b0      	cmp	r8, r6
 8022df8:	dd2c      	ble.n	8022e54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8022dfa:	2d00      	cmp	r5, #0
 8022dfc:	db28      	blt.n	8022e50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8022dfe:	42ab      	cmp	r3, r5
 8022e00:	dd26      	ble.n	8022e50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8022e02:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8022e06:	1c6a      	adds	r2, r5, #1
 8022e08:	d427      	bmi.n	8022e5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8022e0a:	4293      	cmp	r3, r2
 8022e0c:	dd25      	ble.n	8022e5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8022e0e:	b324      	cbz	r4, 8022e5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8022e10:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8022e14:	3601      	adds	r6, #1
 8022e16:	d424      	bmi.n	8022e62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8022e18:	45b0      	cmp	r8, r6
 8022e1a:	dd22      	ble.n	8022e62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8022e1c:	b31f      	cbz	r7, 8022e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8022e1e:	2d00      	cmp	r5, #0
 8022e20:	db1d      	blt.n	8022e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8022e22:	42ab      	cmp	r3, r5
 8022e24:	dd1b      	ble.n	8022e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8022e26:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8022e2a:	3501      	adds	r5, #1
 8022e2c:	d405      	bmi.n	8022e3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8022e2e:	42ab      	cmp	r3, r5
 8022e30:	dd03      	ble.n	8022e3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8022e32:	b124      	cbz	r4, 8022e3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8022e34:	3301      	adds	r3, #1
 8022e36:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8022e3a:	2c0f      	cmp	r4, #15
 8022e3c:	d801      	bhi.n	8022e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022e3e:	2f0f      	cmp	r7, #15
 8022e40:	d914      	bls.n	8022e6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8022e42:	4b27      	ldr	r3, [pc, #156]	; (8022ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8022e44:	4a27      	ldr	r2, [pc, #156]	; (8022ee4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8022e46:	4828      	ldr	r0, [pc, #160]	; (8022ee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8022e48:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8022e4c:	f002 fcb8 	bl	80257c0 <__assert_func>
 8022e50:	4684      	mov	ip, r0
 8022e52:	e7d8      	b.n	8022e06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8022e54:	4602      	mov	r2, r0
 8022e56:	4684      	mov	ip, r0
 8022e58:	e7dc      	b.n	8022e14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8022e5a:	4602      	mov	r2, r0
 8022e5c:	e7da      	b.n	8022e14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8022e5e:	4606      	mov	r6, r0
 8022e60:	e7e3      	b.n	8022e2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8022e62:	4606      	mov	r6, r0
 8022e64:	e7e9      	b.n	8022e3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8022e66:	2c0f      	cmp	r4, #15
 8022e68:	d8eb      	bhi.n	8022e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022e6a:	4606      	mov	r6, r0
 8022e6c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8022e70:	fb14 f307 	smulbb	r3, r4, r7
 8022e74:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8022e78:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8022e7c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022e80:	10db      	asrs	r3, r3, #3
 8022e82:	ea45 0c0c 	orr.w	ip, r5, ip
 8022e86:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022e8a:	f1c7 0510 	rsb	r5, r7, #16
 8022e8e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e92:	1b2d      	subs	r5, r5, r4
 8022e94:	ea4e 0202 	orr.w	r2, lr, r2
 8022e98:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8022e9c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8022ea0:	4354      	muls	r4, r2
 8022ea2:	fb05 450c 	mla	r5, r5, ip, r4
 8022ea6:	0404      	lsls	r4, r0, #16
 8022ea8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022eac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022eb0:	4320      	orrs	r0, r4
 8022eb2:	fb03 5400 	mla	r4, r3, r0, r5
 8022eb6:	0430      	lsls	r0, r6, #16
 8022eb8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ebc:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8022ec0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8022ec4:	4330      	orrs	r0, r6
 8022ec6:	fb07 4000 	mla	r0, r7, r0, r4
 8022eca:	0d43      	lsrs	r3, r0, #21
 8022ecc:	0940      	lsrs	r0, r0, #5
 8022ece:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ed2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ed6:	4318      	orrs	r0, r3
 8022ed8:	8008      	strh	r0, [r1, #0]
 8022eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022ede:	bf00      	nop
 8022ee0:	0802b1ee 	.word	0x0802b1ee
 8022ee4:	0802b867 	.word	0x0802b867
 8022ee8:	0802b272 	.word	0x0802b272

08022eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ef0:	ed2d 8b08 	vpush	{d8-d11}
 8022ef4:	b08f      	sub	sp, #60	; 0x3c
 8022ef6:	461d      	mov	r5, r3
 8022ef8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022efa:	920c      	str	r2, [sp, #48]	; 0x30
 8022efc:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8022f00:	9107      	str	r1, [sp, #28]
 8022f02:	6859      	ldr	r1, [r3, #4]
 8022f04:	681b      	ldr	r3, [r3, #0]
 8022f06:	900d      	str	r0, [sp, #52]	; 0x34
 8022f08:	fb01 2707 	mla	r7, r1, r7, r2
 8022f0c:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022f10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f12:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8022f16:	f8d3 8000 	ldr.w	r8, [r3]
 8022f1a:	eeb0 aa40 	vmov.f32	s20, s0
 8022f1e:	eef0 9a60 	vmov.f32	s19, s1
 8022f22:	eeb0 9a41 	vmov.f32	s18, s2
 8022f26:	eeb0 8a62 	vmov.f32	s16, s5
 8022f2a:	eef0 8a43 	vmov.f32	s17, s6
 8022f2e:	eef0 ba44 	vmov.f32	s23, s8
 8022f32:	eeb0 ba64 	vmov.f32	s22, s9
 8022f36:	eef0 aa45 	vmov.f32	s21, s10
 8022f3a:	9b07      	ldr	r3, [sp, #28]
 8022f3c:	2b00      	cmp	r3, #0
 8022f3e:	dc03      	bgt.n	8022f48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8022f40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022f42:	2b00      	cmp	r3, #0
 8022f44:	f340 8181 	ble.w	802324a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022f48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f52:	1e48      	subs	r0, r1, #1
 8022f54:	f102 3cff 	add.w	ip, r2, #4294967295
 8022f58:	2d00      	cmp	r5, #0
 8022f5a:	f340 809b 	ble.w	8023094 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8022f5e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022f62:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022f66:	d406      	bmi.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022f68:	4586      	cmp	lr, r0
 8022f6a:	da04      	bge.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022f6c:	2b00      	cmp	r3, #0
 8022f6e:	db02      	blt.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022f70:	4563      	cmp	r3, ip
 8022f72:	f2c0 8090 	blt.w	8023096 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022f76:	f11e 0e01 	adds.w	lr, lr, #1
 8022f7a:	f100 8084 	bmi.w	8023086 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022f7e:	4571      	cmp	r1, lr
 8022f80:	f2c0 8081 	blt.w	8023086 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022f84:	3301      	adds	r3, #1
 8022f86:	d47e      	bmi.n	8023086 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022f88:	429a      	cmp	r2, r3
 8022f8a:	db7c      	blt.n	8023086 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022f8c:	46aa      	mov	sl, r5
 8022f8e:	46b9      	mov	r9, r7
 8022f90:	f1ba 0f00 	cmp.w	sl, #0
 8022f94:	f340 8099 	ble.w	80230ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8022f98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f9a:	1421      	asrs	r1, r4, #16
 8022f9c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022fa0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022fa4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022fa8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022fac:	f100 80d0 	bmi.w	8023150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8022fb0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022fb4:	4559      	cmp	r1, fp
 8022fb6:	f280 80cb 	bge.w	8023150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8022fba:	2800      	cmp	r0, #0
 8022fbc:	f2c0 80c8 	blt.w	8023150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8022fc0:	f103 3bff 	add.w	fp, r3, #4294967295
 8022fc4:	4558      	cmp	r0, fp
 8022fc6:	f280 80c3 	bge.w	8023150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8022fca:	fa0f fe8e 	sxth.w	lr, lr
 8022fce:	fb00 110e 	mla	r1, r0, lr, r1
 8022fd2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022fd6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022fda:	8841      	ldrh	r1, [r0, #2]
 8022fdc:	f1bc 0f00 	cmp.w	ip, #0
 8022fe0:	d00b      	beq.n	8022ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022fe2:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022fe6:	3b01      	subs	r3, #1
 8022fe8:	005b      	lsls	r3, r3, #1
 8022fea:	3302      	adds	r3, #2
 8022fec:	eb00 0e03 	add.w	lr, r0, r3
 8022ff0:	5ac3      	ldrh	r3, [r0, r3]
 8022ff2:	9308      	str	r3, [sp, #32]
 8022ff4:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022ff8:	9309      	str	r3, [sp, #36]	; 0x24
 8022ffa:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022ffe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023002:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023006:	ea40 000b 	orr.w	r0, r0, fp
 802300a:	fb12 f30c 	smulbb	r3, r2, ip
 802300e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023012:	10db      	asrs	r3, r3, #3
 8023014:	f1cc 0e10 	rsb	lr, ip, #16
 8023018:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802301c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023020:	ebae 0e02 	sub.w	lr, lr, r2
 8023024:	ea4b 0101 	orr.w	r1, fp, r1
 8023028:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802302c:	4351      	muls	r1, r2
 802302e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023030:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023034:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023038:	0410      	lsls	r0, r2, #16
 802303a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802303e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023042:	4310      	orrs	r0, r2
 8023044:	9a08      	ldr	r2, [sp, #32]
 8023046:	9908      	ldr	r1, [sp, #32]
 8023048:	0412      	lsls	r2, r2, #16
 802304a:	fb03 e000 	mla	r0, r3, r0, lr
 802304e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023052:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023056:	ea42 020e 	orr.w	r2, r2, lr
 802305a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802305e:	fb03 0302 	mla	r3, r3, r2, r0
 8023062:	0d5a      	lsrs	r2, r3, #21
 8023064:	095b      	lsrs	r3, r3, #5
 8023066:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802306a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802306e:	4313      	orrs	r3, r2
 8023070:	f8a9 3000 	strh.w	r3, [r9]
 8023074:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023076:	441c      	add	r4, r3
 8023078:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802307a:	f109 0902 	add.w	r9, r9, #2
 802307e:	441e      	add	r6, r3
 8023080:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023084:	e784      	b.n	8022f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8023086:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023088:	441c      	add	r4, r3
 802308a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802308c:	3d01      	subs	r5, #1
 802308e:	441e      	add	r6, r3
 8023090:	3702      	adds	r7, #2
 8023092:	e761      	b.n	8022f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023094:	d01d      	beq.n	80230d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8023096:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023098:	1e6b      	subs	r3, r5, #1
 802309a:	fb00 4003 	mla	r0, r0, r3, r4
 802309e:	1400      	asrs	r0, r0, #16
 80230a0:	f53f af74 	bmi.w	8022f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80230a4:	3901      	subs	r1, #1
 80230a6:	4288      	cmp	r0, r1
 80230a8:	f6bf af70 	bge.w	8022f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80230ac:	9924      	ldr	r1, [sp, #144]	; 0x90
 80230ae:	fb01 6303 	mla	r3, r1, r3, r6
 80230b2:	141b      	asrs	r3, r3, #16
 80230b4:	f53f af6a 	bmi.w	8022f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80230b8:	3a01      	subs	r2, #1
 80230ba:	4293      	cmp	r3, r2
 80230bc:	f6bf af66 	bge.w	8022f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80230c0:	46a9      	mov	r9, r5
 80230c2:	46ba      	mov	sl, r7
 80230c4:	f1b9 0f00 	cmp.w	r9, #0
 80230c8:	dc5a      	bgt.n	8023180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80230ca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80230ce:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80230d2:	9b07      	ldr	r3, [sp, #28]
 80230d4:	2b00      	cmp	r3, #0
 80230d6:	f340 80b8 	ble.w	802324a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80230da:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80230de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80230e2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80230e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230e8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80230ec:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80230f0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80230f4:	eef0 6a48 	vmov.f32	s13, s16
 80230f8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80230fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023100:	ee37 8a48 	vsub.f32	s16, s14, s16
 8023104:	ee16 4a90 	vmov	r4, s13
 8023108:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802310c:	eef0 6a68 	vmov.f32	s13, s17
 8023110:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023114:	ee18 2a10 	vmov	r2, s16
 8023118:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802311c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023120:	ee18 2a90 	vmov	r2, s17
 8023124:	9323      	str	r3, [sp, #140]	; 0x8c
 8023126:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023128:	fb92 f3f3 	sdiv	r3, r2, r3
 802312c:	9324      	str	r3, [sp, #144]	; 0x90
 802312e:	9b07      	ldr	r3, [sp, #28]
 8023130:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023132:	3b01      	subs	r3, #1
 8023134:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023138:	9307      	str	r3, [sp, #28]
 802313a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802313c:	ee16 6a90 	vmov	r6, s13
 8023140:	bf14      	ite	ne
 8023142:	461d      	movne	r5, r3
 8023144:	4615      	moveq	r5, r2
 8023146:	eef0 8a67 	vmov.f32	s17, s15
 802314a:	eeb0 8a47 	vmov.f32	s16, s14
 802314e:	e6f4      	b.n	8022f3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023150:	f111 0b01 	adds.w	fp, r1, #1
 8023154:	d48e      	bmi.n	8023074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023156:	45de      	cmp	lr, fp
 8023158:	db8c      	blt.n	8023074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802315a:	f110 0b01 	adds.w	fp, r0, #1
 802315e:	d489      	bmi.n	8023074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023160:	455b      	cmp	r3, fp
 8023162:	db87      	blt.n	8023074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023164:	b21b      	sxth	r3, r3
 8023166:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802316a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802316e:	9300      	str	r3, [sp, #0]
 8023170:	4642      	mov	r2, r8
 8023172:	fa0f f38e 	sxth.w	r3, lr
 8023176:	4649      	mov	r1, r9
 8023178:	980d      	ldr	r0, [sp, #52]	; 0x34
 802317a:	f7ff fe2b 	bl	8022dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802317e:	e779      	b.n	8023074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023182:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023186:	1420      	asrs	r0, r4, #16
 8023188:	1431      	asrs	r1, r6, #16
 802318a:	fb03 0101 	mla	r1, r3, r1, r0
 802318e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023192:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023196:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802319a:	8841      	ldrh	r1, [r0, #2]
 802319c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80231a0:	f1be 0f00 	cmp.w	lr, #0
 80231a4:	d00b      	beq.n	80231be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80231a6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80231aa:	3b01      	subs	r3, #1
 80231ac:	005b      	lsls	r3, r3, #1
 80231ae:	3302      	adds	r3, #2
 80231b0:	eb00 0b03 	add.w	fp, r0, r3
 80231b4:	5ac3      	ldrh	r3, [r0, r3]
 80231b6:	930a      	str	r3, [sp, #40]	; 0x28
 80231b8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80231bc:	930b      	str	r3, [sp, #44]	; 0x2c
 80231be:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80231c2:	fb12 f30e 	smulbb	r3, r2, lr
 80231c6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80231ca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80231ce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231d2:	10db      	asrs	r3, r3, #3
 80231d4:	ea40 000c 	orr.w	r0, r0, ip
 80231d8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231dc:	f1ce 0c10 	rsb	ip, lr, #16
 80231e0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80231e4:	ebac 0c02 	sub.w	ip, ip, r2
 80231e8:	ea4b 0101 	orr.w	r1, fp, r1
 80231ec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231f0:	4351      	muls	r1, r2
 80231f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80231f4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80231f8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80231fc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023200:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8023204:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023206:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023208:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802320c:	0412      	lsls	r2, r2, #16
 802320e:	ea4b 0000 	orr.w	r0, fp, r0
 8023212:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023216:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802321a:	fb03 c000 	mla	r0, r3, r0, ip
 802321e:	ea42 0b0b 	orr.w	fp, r2, fp
 8023222:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023226:	fb03 000b 	mla	r0, r3, fp, r0
 802322a:	0d43      	lsrs	r3, r0, #21
 802322c:	0940      	lsrs	r0, r0, #5
 802322e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023232:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023236:	4318      	orrs	r0, r3
 8023238:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802323a:	f82a 0b02 	strh.w	r0, [sl], #2
 802323e:	441c      	add	r4, r3
 8023240:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023242:	f109 39ff 	add.w	r9, r9, #4294967295
 8023246:	441e      	add	r6, r3
 8023248:	e73c      	b.n	80230c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802324a:	b00f      	add	sp, #60	; 0x3c
 802324c:	ecbd 8b08 	vpop	{d8-d11}
 8023250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023254:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023258:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 802325c:	fb04 5603 	mla	r6, r4, r3, r5
 8023260:	2c00      	cmp	r4, #0
 8023262:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8023266:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 802326a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 802326e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8023272:	db36      	blt.n	80232e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8023274:	45a6      	cmp	lr, r4
 8023276:	dd34      	ble.n	80232e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8023278:	2d00      	cmp	r5, #0
 802327a:	db30      	blt.n	80232de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 802327c:	42ab      	cmp	r3, r5
 802327e:	dd2e      	ble.n	80232de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8023280:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8023284:	1c6e      	adds	r6, r5, #1
 8023286:	d42f      	bmi.n	80232e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8023288:	42b3      	cmp	r3, r6
 802328a:	dd2d      	ble.n	80232e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 802328c:	b370      	cbz	r0, 80232ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 802328e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8023292:	3401      	adds	r4, #1
 8023294:	d42e      	bmi.n	80232f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8023296:	45a6      	cmp	lr, r4
 8023298:	dd2c      	ble.n	80232f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 802329a:	b377      	cbz	r7, 80232fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 802329c:	2d00      	cmp	r5, #0
 802329e:	db27      	blt.n	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80232a0:	42ab      	cmp	r3, r5
 80232a2:	dd25      	ble.n	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80232a4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80232a8:	3501      	adds	r5, #1
 80232aa:	d429      	bmi.n	8023300 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80232ac:	42ab      	cmp	r3, r5
 80232ae:	dd27      	ble.n	8023300 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80232b0:	b340      	cbz	r0, 8023304 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80232b2:	3301      	adds	r3, #1
 80232b4:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80232b8:	280f      	cmp	r0, #15
 80232ba:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80232be:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80232c2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80232c6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80232ca:	d801      	bhi.n	80232d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 80232cc:	2f0f      	cmp	r7, #15
 80232ce:	d91b      	bls.n	8023308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80232d0:	4b8d      	ldr	r3, [pc, #564]	; (8023508 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 80232d2:	4a8e      	ldr	r2, [pc, #568]	; (802350c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 80232d4:	488e      	ldr	r0, [pc, #568]	; (8023510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80232d6:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80232da:	f002 fa71 	bl	80257c0 <__assert_func>
 80232de:	2200      	movs	r2, #0
 80232e0:	e7d0      	b.n	8023284 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80232e2:	2600      	movs	r6, #0
 80232e4:	4632      	mov	r2, r6
 80232e6:	e7d4      	b.n	8023292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80232e8:	2600      	movs	r6, #0
 80232ea:	e7d2      	b.n	8023292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80232ec:	4606      	mov	r6, r0
 80232ee:	e7d0      	b.n	8023292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80232f0:	2400      	movs	r4, #0
 80232f2:	e7d9      	b.n	80232a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80232f4:	2300      	movs	r3, #0
 80232f6:	461c      	mov	r4, r3
 80232f8:	e7de      	b.n	80232b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80232fa:	463b      	mov	r3, r7
 80232fc:	463c      	mov	r4, r7
 80232fe:	e7db      	b.n	80232b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8023300:	2300      	movs	r3, #0
 8023302:	e7d9      	b.n	80232b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8023304:	4603      	mov	r3, r0
 8023306:	e7d7      	b.n	80232b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8023308:	b280      	uxth	r0, r0
 802330a:	b2bf      	uxth	r7, r7
 802330c:	fb07 fe00 	mul.w	lr, r7, r0
 8023310:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8023314:	0100      	lsls	r0, r0, #4
 8023316:	eba0 0c0e 	sub.w	ip, r0, lr
 802331a:	b2bf      	uxth	r7, r7
 802331c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8023320:	fa1f fc8c 	uxth.w	ip, ip
 8023324:	1bed      	subs	r5, r5, r7
 8023326:	b2ad      	uxth	r5, r5
 8023328:	fb0a f00c 	mul.w	r0, sl, ip
 802332c:	fb0b 0005 	mla	r0, fp, r5, r0
 8023330:	fb07 0009 	mla	r0, r7, r9, r0
 8023334:	fb0e 0008 	mla	r0, lr, r8, r0
 8023338:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802333c:	9001      	str	r0, [sp, #4]
 802333e:	2800      	cmp	r0, #0
 8023340:	f000 80de 	beq.w	8023500 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8023344:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8023348:	d018      	beq.n	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 802334a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 802334e:	fb0b f000 	mul.w	r0, fp, r0
 8023352:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023356:	fb0b fb02 	mul.w	fp, fp, r2
 802335a:	0a02      	lsrs	r2, r0, #8
 802335c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023360:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023364:	4402      	add	r2, r0
 8023366:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802336a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802336e:	0a12      	lsrs	r2, r2, #8
 8023370:	0a00      	lsrs	r0, r0, #8
 8023372:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023376:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802337a:	4302      	orrs	r2, r0
 802337c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8023380:	d01a      	beq.n	80233b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8023382:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8023386:	fb0a f000 	mul.w	r0, sl, r0
 802338a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802338e:	fb0a fa06 	mul.w	sl, sl, r6
 8023392:	0a06      	lsrs	r6, r0, #8
 8023394:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023398:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802339c:	4406      	add	r6, r0
 802339e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80233a2:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80233a6:	0a36      	lsrs	r6, r6, #8
 80233a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80233ac:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80233b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80233b4:	ea46 060a 	orr.w	r6, r6, sl
 80233b8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80233bc:	d01b      	beq.n	80233f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 80233be:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80233c2:	fb09 fa0a 	mul.w	sl, r9, sl
 80233c6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80233ca:	fb09 f004 	mul.w	r0, r9, r4
 80233ce:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80233d2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80233d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80233da:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80233de:	4454      	add	r4, sl
 80233e0:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80233e4:	0a24      	lsrs	r4, r4, #8
 80233e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80233ea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80233ee:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80233f2:	ea44 0409 	orr.w	r4, r4, r9
 80233f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80233fa:	d01b      	beq.n	8023434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80233fc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8023400:	fb08 f909 	mul.w	r9, r8, r9
 8023404:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023408:	fb08 f003 	mul.w	r0, r8, r3
 802340c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8023410:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023414:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8023418:	f500 7880 	add.w	r8, r0, #256	; 0x100
 802341c:	444b      	add	r3, r9
 802341e:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8023422:	0a1b      	lsrs	r3, r3, #8
 8023424:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023428:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802342c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023430:	ea43 0308 	orr.w	r3, r3, r8
 8023434:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8023438:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802343c:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8023440:	fb0c f808 	mul.w	r8, ip, r8
 8023444:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023448:	fb0c f606 	mul.w	r6, ip, r6
 802344c:	fb05 8909 	mla	r9, r5, r9, r8
 8023450:	fb05 6502 	mla	r5, r5, r2, r6
 8023454:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8023458:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802345c:	9a01      	ldr	r2, [sp, #4]
 802345e:	8808      	ldrh	r0, [r1, #0]
 8023460:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023464:	fb07 9908 	mla	r9, r7, r8, r9
 8023468:	fb07 5704 	mla	r7, r7, r4, r5
 802346c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8023470:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023474:	b2b6      	uxth	r6, r6
 8023476:	fb0e 9808 	mla	r8, lr, r8, r9
 802347a:	fb0e 7e03 	mla	lr, lr, r3, r7
 802347e:	4372      	muls	r2, r6
 8023480:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023484:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023488:	1c53      	adds	r3, r2, #1
 802348a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 802348e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8023492:	ea48 0e0e 	orr.w	lr, r8, lr
 8023496:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802349a:	1205      	asrs	r5, r0, #8
 802349c:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80234a0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80234a4:	b2db      	uxtb	r3, r3
 80234a6:	fb12 f206 	smulbb	r2, r2, r6
 80234aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80234ae:	fb05 2503 	mla	r5, r5, r3, r2
 80234b2:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80234b6:	10c2      	asrs	r2, r0, #3
 80234b8:	fa5f fe8e 	uxtb.w	lr, lr
 80234bc:	00c0      	lsls	r0, r0, #3
 80234be:	fb14 f406 	smulbb	r4, r4, r6
 80234c2:	b2c0      	uxtb	r0, r0
 80234c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80234c8:	fb1e fe06 	smulbb	lr, lr, r6
 80234cc:	fb02 4203 	mla	r2, r2, r3, r4
 80234d0:	b2ad      	uxth	r5, r5
 80234d2:	fb00 e303 	mla	r3, r0, r3, lr
 80234d6:	b298      	uxth	r0, r3
 80234d8:	b294      	uxth	r4, r2
 80234da:	1c6b      	adds	r3, r5, #1
 80234dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80234e0:	1c62      	adds	r2, r4, #1
 80234e2:	1c43      	adds	r3, r0, #1
 80234e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80234e8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80234ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80234f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80234f4:	0952      	lsrs	r2, r2, #5
 80234f6:	432b      	orrs	r3, r5
 80234f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234fc:	4313      	orrs	r3, r2
 80234fe:	800b      	strh	r3, [r1, #0]
 8023500:	b003      	add	sp, #12
 8023502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023506:	bf00      	nop
 8023508:	0802b1ee 	.word	0x0802b1ee
 802350c:	0802b7be 	.word	0x0802b7be
 8023510:	0802b272 	.word	0x0802b272

08023514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023518:	ed2d 8b08 	vpush	{d8-d11}
 802351c:	b09d      	sub	sp, #116	; 0x74
 802351e:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8023522:	9219      	str	r2, [sp, #100]	; 0x64
 8023524:	9307      	str	r3, [sp, #28]
 8023526:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8023528:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 802352c:	931a      	str	r3, [sp, #104]	; 0x68
 802352e:	9117      	str	r1, [sp, #92]	; 0x5c
 8023530:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8023534:	901b      	str	r0, [sp, #108]	; 0x6c
 8023536:	6850      	ldr	r0, [r2, #4]
 8023538:	6812      	ldr	r2, [r2, #0]
 802353a:	fb00 1303 	mla	r3, r0, r3, r1
 802353e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023542:	930a      	str	r3, [sp, #40]	; 0x28
 8023544:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8023546:	681b      	ldr	r3, [r3, #0]
 8023548:	9310      	str	r3, [sp, #64]	; 0x40
 802354a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802354e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023550:	eeb0 aa40 	vmov.f32	s20, s0
 8023554:	eef0 9a60 	vmov.f32	s19, s1
 8023558:	eeb0 9a41 	vmov.f32	s18, s2
 802355c:	eeb0 8a62 	vmov.f32	s16, s5
 8023560:	eef0 8a43 	vmov.f32	s17, s6
 8023564:	eef0 ba44 	vmov.f32	s23, s8
 8023568:	eeb0 ba64 	vmov.f32	s22, s9
 802356c:	eef0 aa45 	vmov.f32	s21, s10
 8023570:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023572:	2b00      	cmp	r3, #0
 8023574:	dc03      	bgt.n	802357e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8023576:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023578:	2b00      	cmp	r3, #0
 802357a:	f340 8375 	ble.w	8023c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 802357e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8023580:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023584:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023588:	1e48      	subs	r0, r1, #1
 802358a:	1e57      	subs	r7, r2, #1
 802358c:	9b07      	ldr	r3, [sp, #28]
 802358e:	2b00      	cmp	r3, #0
 8023590:	f340 818e 	ble.w	80238b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8023594:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023598:	ea4f 4326 	mov.w	r3, r6, asr #16
 802359c:	d406      	bmi.n	80235ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802359e:	4584      	cmp	ip, r0
 80235a0:	da04      	bge.n	80235ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80235a2:	2b00      	cmp	r3, #0
 80235a4:	db02      	blt.n	80235ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80235a6:	42bb      	cmp	r3, r7
 80235a8:	f2c0 8183 	blt.w	80238b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 80235ac:	f11c 0c01 	adds.w	ip, ip, #1
 80235b0:	f100 8173 	bmi.w	802389a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80235b4:	4561      	cmp	r1, ip
 80235b6:	f2c0 8170 	blt.w	802389a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80235ba:	3301      	adds	r3, #1
 80235bc:	f100 816d 	bmi.w	802389a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80235c0:	429a      	cmp	r2, r3
 80235c2:	f2c0 816a 	blt.w	802389a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80235c6:	9b07      	ldr	r3, [sp, #28]
 80235c8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80235ca:	9318      	str	r3, [sp, #96]	; 0x60
 80235cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80235ce:	2b00      	cmp	r3, #0
 80235d0:	f340 818c 	ble.w	80238ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 80235d4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80235d6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80235d8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80235dc:	689b      	ldr	r3, [r3, #8]
 80235de:	1422      	asrs	r2, r4, #16
 80235e0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80235e4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80235e8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80235ec:	f100 81cd 	bmi.w	802398a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80235f0:	f103 38ff 	add.w	r8, r3, #4294967295
 80235f4:	4542      	cmp	r2, r8
 80235f6:	f280 81c8 	bge.w	802398a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80235fa:	f1bc 0f00 	cmp.w	ip, #0
 80235fe:	f2c0 81c4 	blt.w	802398a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023602:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023606:	45c4      	cmp	ip, r8
 8023608:	f280 81bf 	bge.w	802398a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802360c:	b21b      	sxth	r3, r3
 802360e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023612:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023614:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023618:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802361c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023620:	2800      	cmp	r0, #0
 8023622:	f000 81a9 	beq.w	8023978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8023626:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802362a:	950c      	str	r5, [sp, #48]	; 0x30
 802362c:	0e2d      	lsrs	r5, r5, #24
 802362e:	9513      	str	r5, [sp, #76]	; 0x4c
 8023630:	b181      	cbz	r1, 8023654 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8023632:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023636:	3b01      	subs	r3, #1
 8023638:	009b      	lsls	r3, r3, #2
 802363a:	3304      	adds	r3, #4
 802363c:	eb08 0c03 	add.w	ip, r8, r3
 8023640:	f858 3003 	ldr.w	r3, [r8, r3]
 8023644:	9308      	str	r3, [sp, #32]
 8023646:	0e1b      	lsrs	r3, r3, #24
 8023648:	9311      	str	r3, [sp, #68]	; 0x44
 802364a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802364e:	930d      	str	r3, [sp, #52]	; 0x34
 8023650:	0e1b      	lsrs	r3, r3, #24
 8023652:	9314      	str	r3, [sp, #80]	; 0x50
 8023654:	b280      	uxth	r0, r0
 8023656:	b289      	uxth	r1, r1
 8023658:	fb00 f901 	mul.w	r9, r0, r1
 802365c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023660:	0100      	lsls	r0, r0, #4
 8023662:	eba0 0809 	sub.w	r8, r0, r9
 8023666:	b289      	uxth	r1, r1
 8023668:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802366c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802366e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023670:	fa1f f888 	uxth.w	r8, r8
 8023674:	1a5b      	subs	r3, r3, r1
 8023676:	b29b      	uxth	r3, r3
 8023678:	fb08 f000 	mul.w	r0, r8, r0
 802367c:	fb03 000e 	mla	r0, r3, lr, r0
 8023680:	fb01 0005 	mla	r0, r1, r5, r0
 8023684:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023686:	fb09 0005 	mla	r0, r9, r5, r0
 802368a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802368e:	2800      	cmp	r0, #0
 8023690:	f000 80fa 	beq.w	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023694:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023698:	d01b      	beq.n	80236d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802369a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802369e:	fb0e fa0a 	mul.w	sl, lr, sl
 80236a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80236a6:	fb0e fe02 	mul.w	lr, lr, r2
 80236aa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80236ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80236b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80236b6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80236ba:	4452      	add	r2, sl
 80236bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80236c0:	0a12      	lsrs	r2, r2, #8
 80236c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80236ca:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80236ce:	ea42 020c 	orr.w	r2, r2, ip
 80236d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80236d4:	2dff      	cmp	r5, #255	; 0xff
 80236d6:	d021      	beq.n	802371c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80236d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80236da:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80236de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80236e0:	fb05 fb0b 	mul.w	fp, r5, fp
 80236e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80236e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80236ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80236ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80236f0:	fb05 fa0a 	mul.w	sl, r5, sl
 80236f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80236f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80236fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023700:	44de      	add	lr, fp
 8023702:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023706:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802370a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802370e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023712:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023716:	ea4e 050a 	orr.w	r5, lr, sl
 802371a:	950c      	str	r5, [sp, #48]	; 0x30
 802371c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802371e:	2dff      	cmp	r5, #255	; 0xff
 8023720:	d021      	beq.n	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8023722:	9d08      	ldr	r5, [sp, #32]
 8023724:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023728:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802372a:	fb05 fb0b 	mul.w	fp, r5, fp
 802372e:	9d08      	ldr	r5, [sp, #32]
 8023730:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023734:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023736:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802373a:	fb05 fa0a 	mul.w	sl, r5, sl
 802373e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023742:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023746:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802374a:	44de      	add	lr, fp
 802374c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023750:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023754:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023758:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802375c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023760:	ea4e 050a 	orr.w	r5, lr, sl
 8023764:	9508      	str	r5, [sp, #32]
 8023766:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023768:	2dff      	cmp	r5, #255	; 0xff
 802376a:	d021      	beq.n	80237b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802376c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802376e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023772:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023774:	fb05 fb0b 	mul.w	fp, r5, fp
 8023778:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802377a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802377e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023780:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023784:	fb05 fa0a 	mul.w	sl, r5, sl
 8023788:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802378c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023790:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023794:	44de      	add	lr, fp
 8023796:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802379a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802379e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80237a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80237aa:	ea4e 050a 	orr.w	r5, lr, sl
 80237ae:	950d      	str	r5, [sp, #52]	; 0x34
 80237b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80237b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80237b6:	9d08      	ldr	r5, [sp, #32]
 80237b8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80237bc:	fb08 fc0c 	mul.w	ip, r8, ip
 80237c0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80237c4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80237c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80237ca:	fb01 cc0e 	mla	ip, r1, lr, ip
 80237ce:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80237d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80237d4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80237d8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80237dc:	fb08 f80e 	mul.w	r8, r8, lr
 80237e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80237e4:	fb03 8202 	mla	r2, r3, r2, r8
 80237e8:	9b08      	ldr	r3, [sp, #32]
 80237ea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80237ec:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80237f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80237f2:	fb01 220a 	mla	r2, r1, sl, r2
 80237f6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80237fa:	fb09 2901 	mla	r9, r9, r1, r2
 80237fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023800:	883b      	ldrh	r3, [r7, #0]
 8023802:	4342      	muls	r2, r0
 8023804:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023808:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802380c:	1c50      	adds	r0, r2, #1
 802380e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023812:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023816:	ea4c 0c09 	orr.w	ip, ip, r9
 802381a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802381e:	1219      	asrs	r1, r3, #8
 8023820:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023824:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023828:	b2c0      	uxtb	r0, r0
 802382a:	fb12 f205 	smulbb	r2, r2, r5
 802382e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023832:	fb01 2100 	mla	r1, r1, r0, r2
 8023836:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802383a:	10da      	asrs	r2, r3, #3
 802383c:	fa5f fc8c 	uxtb.w	ip, ip
 8023840:	00db      	lsls	r3, r3, #3
 8023842:	fb1c fc05 	smulbb	ip, ip, r5
 8023846:	b2db      	uxtb	r3, r3
 8023848:	b289      	uxth	r1, r1
 802384a:	fb03 c300 	mla	r3, r3, r0, ip
 802384e:	fa1f fc83 	uxth.w	ip, r3
 8023852:	1c4b      	adds	r3, r1, #1
 8023854:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023858:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802385c:	fb1e fe05 	smulbb	lr, lr, r5
 8023860:	f10c 0301 	add.w	r3, ip, #1
 8023864:	fb02 e200 	mla	r2, r2, r0, lr
 8023868:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802386c:	b292      	uxth	r2, r2
 802386e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023872:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023876:	430b      	orrs	r3, r1
 8023878:	1c51      	adds	r1, r2, #1
 802387a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802387e:	0952      	lsrs	r2, r2, #5
 8023880:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023884:	4313      	orrs	r3, r2
 8023886:	803b      	strh	r3, [r7, #0]
 8023888:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802388a:	441c      	add	r4, r3
 802388c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802388e:	441e      	add	r6, r3
 8023890:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023892:	3b01      	subs	r3, #1
 8023894:	3702      	adds	r7, #2
 8023896:	9318      	str	r3, [sp, #96]	; 0x60
 8023898:	e698      	b.n	80235cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802389a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802389c:	441c      	add	r4, r3
 802389e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80238a0:	441e      	add	r6, r3
 80238a2:	9b07      	ldr	r3, [sp, #28]
 80238a4:	3b01      	subs	r3, #1
 80238a6:	9307      	str	r3, [sp, #28]
 80238a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80238aa:	3302      	adds	r3, #2
 80238ac:	930a      	str	r3, [sp, #40]	; 0x28
 80238ae:	e66d      	b.n	802358c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80238b0:	d023      	beq.n	80238fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80238b2:	9b07      	ldr	r3, [sp, #28]
 80238b4:	9831      	ldr	r0, [sp, #196]	; 0xc4
 80238b6:	3b01      	subs	r3, #1
 80238b8:	fb00 4003 	mla	r0, r0, r3, r4
 80238bc:	1400      	asrs	r0, r0, #16
 80238be:	f53f ae82 	bmi.w	80235c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80238c2:	3901      	subs	r1, #1
 80238c4:	4288      	cmp	r0, r1
 80238c6:	f6bf ae7e 	bge.w	80235c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80238ca:	9932      	ldr	r1, [sp, #200]	; 0xc8
 80238cc:	fb01 6303 	mla	r3, r1, r3, r6
 80238d0:	141b      	asrs	r3, r3, #16
 80238d2:	f53f ae78 	bmi.w	80235c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80238d6:	3a01      	subs	r2, #1
 80238d8:	4293      	cmp	r3, r2
 80238da:	f6bf ae74 	bge.w	80235c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80238de:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80238e2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80238e6:	f1bb 0f00 	cmp.w	fp, #0
 80238ea:	dc6c      	bgt.n	80239c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 80238ec:	9b07      	ldr	r3, [sp, #28]
 80238ee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80238f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80238f4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80238f8:	930a      	str	r3, [sp, #40]	; 0x28
 80238fa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80238fc:	2b00      	cmp	r3, #0
 80238fe:	f340 81b3 	ble.w	8023c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8023902:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023906:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802390a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802390e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023910:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8023914:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8023918:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802391c:	eef0 6a48 	vmov.f32	s13, s16
 8023920:	ee69 7a27 	vmul.f32	s15, s18, s15
 8023924:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023928:	ee37 8a48 	vsub.f32	s16, s14, s16
 802392c:	ee16 4a90 	vmov	r4, s13
 8023930:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8023934:	eef0 6a68 	vmov.f32	s13, s17
 8023938:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802393c:	ee18 2a10 	vmov	r2, s16
 8023940:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8023944:	fb92 f3f3 	sdiv	r3, r2, r3
 8023948:	ee18 2a90 	vmov	r2, s17
 802394c:	9331      	str	r3, [sp, #196]	; 0xc4
 802394e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023950:	fb92 f3f3 	sdiv	r3, r2, r3
 8023954:	9332      	str	r3, [sp, #200]	; 0xc8
 8023956:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023958:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802395a:	3b01      	subs	r3, #1
 802395c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023960:	9317      	str	r3, [sp, #92]	; 0x5c
 8023962:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023964:	bf08      	it	eq
 8023966:	4613      	moveq	r3, r2
 8023968:	ee16 6a90 	vmov	r6, s13
 802396c:	9307      	str	r3, [sp, #28]
 802396e:	eef0 8a67 	vmov.f32	s17, s15
 8023972:	eeb0 8a47 	vmov.f32	s16, s14
 8023976:	e5fb      	b.n	8023570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8023978:	2900      	cmp	r1, #0
 802397a:	f43f ae6b 	beq.w	8023654 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802397e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023982:	9308      	str	r3, [sp, #32]
 8023984:	0e1b      	lsrs	r3, r3, #24
 8023986:	9311      	str	r3, [sp, #68]	; 0x44
 8023988:	e664      	b.n	8023654 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802398a:	f112 0801 	adds.w	r8, r2, #1
 802398e:	f53f af7b 	bmi.w	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023992:	4543      	cmp	r3, r8
 8023994:	f6ff af78 	blt.w	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023998:	f11c 0801 	adds.w	r8, ip, #1
 802399c:	f53f af74 	bmi.w	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80239a0:	45c6      	cmp	lr, r8
 80239a2:	f6ff af71 	blt.w	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80239a6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80239a8:	9201      	str	r2, [sp, #4]
 80239aa:	fa0f f28e 	sxth.w	r2, lr
 80239ae:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80239b2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80239b6:	9200      	str	r2, [sp, #0]
 80239b8:	b21b      	sxth	r3, r3
 80239ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80239bc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80239be:	4639      	mov	r1, r7
 80239c0:	f7ff fc48 	bl	8023254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80239c4:	e760      	b.n	8023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80239c6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80239c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80239ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80239ce:	1427      	asrs	r7, r4, #16
 80239d0:	1433      	asrs	r3, r6, #16
 80239d2:	fb01 7303 	mla	r3, r1, r3, r7
 80239d6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80239da:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80239de:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80239e2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80239e6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80239ea:	2a00      	cmp	r2, #0
 80239ec:	f000 8133 	beq.w	8023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 80239f0:	687d      	ldr	r5, [r7, #4]
 80239f2:	950e      	str	r5, [sp, #56]	; 0x38
 80239f4:	0e2d      	lsrs	r5, r5, #24
 80239f6:	9515      	str	r5, [sp, #84]	; 0x54
 80239f8:	b178      	cbz	r0, 8023a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80239fa:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80239fe:	3901      	subs	r1, #1
 8023a00:	0089      	lsls	r1, r1, #2
 8023a02:	3104      	adds	r1, #4
 8023a04:	eb07 0e01 	add.w	lr, r7, r1
 8023a08:	5879      	ldr	r1, [r7, r1]
 8023a0a:	9109      	str	r1, [sp, #36]	; 0x24
 8023a0c:	0e09      	lsrs	r1, r1, #24
 8023a0e:	9112      	str	r1, [sp, #72]	; 0x48
 8023a10:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023a14:	910f      	str	r1, [sp, #60]	; 0x3c
 8023a16:	0e09      	lsrs	r1, r1, #24
 8023a18:	9116      	str	r1, [sp, #88]	; 0x58
 8023a1a:	b292      	uxth	r2, r2
 8023a1c:	b280      	uxth	r0, r0
 8023a1e:	fb02 f800 	mul.w	r8, r2, r0
 8023a22:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023a26:	0112      	lsls	r2, r2, #4
 8023a28:	eba2 0e08 	sub.w	lr, r2, r8
 8023a2c:	b280      	uxth	r0, r0
 8023a2e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023a32:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023a34:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023a36:	fa1f fe8e 	uxth.w	lr, lr
 8023a3a:	1a12      	subs	r2, r2, r0
 8023a3c:	b292      	uxth	r2, r2
 8023a3e:	fb0e f101 	mul.w	r1, lr, r1
 8023a42:	fb02 110c 	mla	r1, r2, ip, r1
 8023a46:	fb00 1105 	mla	r1, r0, r5, r1
 8023a4a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023a4c:	fb08 1105 	mla	r1, r8, r5, r1
 8023a50:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023a54:	2900      	cmp	r1, #0
 8023a56:	f000 80f5 	beq.w	8023c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023a5a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023a5e:	d019      	beq.n	8023a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8023a60:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023a64:	fb0c fa0a 	mul.w	sl, ip, sl
 8023a68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023a6c:	fb0c fc03 	mul.w	ip, ip, r3
 8023a70:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023a74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023a78:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023a7c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023a80:	4453      	add	r3, sl
 8023a82:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023a86:	0a1b      	lsrs	r3, r3, #8
 8023a88:	0a3f      	lsrs	r7, r7, #8
 8023a8a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023a8e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023a92:	433b      	orrs	r3, r7
 8023a94:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023a96:	2dff      	cmp	r5, #255	; 0xff
 8023a98:	d020      	beq.n	8023adc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8023a9a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023a9c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023aa0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023aa2:	436f      	muls	r7, r5
 8023aa4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023aa6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023aaa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023aac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ab0:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ab4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023ab8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023abc:	44bc      	add	ip, r7
 8023abe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023ac2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023ac6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023aca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ace:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ad2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ad6:	ea4c 050a 	orr.w	r5, ip, sl
 8023ada:	950e      	str	r5, [sp, #56]	; 0x38
 8023adc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023ade:	2dff      	cmp	r5, #255	; 0xff
 8023ae0:	d020      	beq.n	8023b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8023ae2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023ae4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023ae8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023aea:	436f      	muls	r7, r5
 8023aec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023aee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023af2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023af4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023af8:	fb05 fa0a 	mul.w	sl, r5, sl
 8023afc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023b00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b04:	44bc      	add	ip, r7
 8023b06:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023b0a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023b0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b1e:	ea4c 050a 	orr.w	r5, ip, sl
 8023b22:	9509      	str	r5, [sp, #36]	; 0x24
 8023b24:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b26:	2dff      	cmp	r5, #255	; 0xff
 8023b28:	d020      	beq.n	8023b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8023b2a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023b2c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023b30:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b32:	436f      	muls	r7, r5
 8023b34:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023b36:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023b3a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b3c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023b40:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b44:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023b48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b4c:	44bc      	add	ip, r7
 8023b4e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023b52:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023b56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b66:	ea4c 050a 	orr.w	r5, ip, sl
 8023b6a:	950f      	str	r5, [sp, #60]	; 0x3c
 8023b6c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023b6e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023b72:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023b74:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023b78:	fb0e f707 	mul.w	r7, lr, r7
 8023b7c:	fb02 770c 	mla	r7, r2, ip, r7
 8023b80:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023b84:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023b86:	fb00 770c 	mla	r7, r0, ip, r7
 8023b8a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023b8e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023b90:	fb08 770c 	mla	r7, r8, ip, r7
 8023b94:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023b98:	fb0e fe0c 	mul.w	lr, lr, ip
 8023b9c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ba0:	fb02 e303 	mla	r3, r2, r3, lr
 8023ba4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023ba6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023ba8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023bac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023bae:	fb00 330a 	mla	r3, r0, sl, r3
 8023bb2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023bb6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023bba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023bbc:	f8b9 0000 	ldrh.w	r0, [r9]
 8023bc0:	4359      	muls	r1, r3
 8023bc2:	0a3f      	lsrs	r7, r7, #8
 8023bc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023bc8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023bcc:	1c4b      	adds	r3, r1, #1
 8023bce:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023bd2:	ea47 070c 	orr.w	r7, r7, ip
 8023bd6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023bda:	1202      	asrs	r2, r0, #8
 8023bdc:	0c3b      	lsrs	r3, r7, #16
 8023bde:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023be2:	b2c9      	uxtb	r1, r1
 8023be4:	fb13 f305 	smulbb	r3, r3, r5
 8023be8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023bec:	fb02 3201 	mla	r2, r2, r1, r3
 8023bf0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023bf4:	10c3      	asrs	r3, r0, #3
 8023bf6:	b2ff      	uxtb	r7, r7
 8023bf8:	00c0      	lsls	r0, r0, #3
 8023bfa:	b2c0      	uxtb	r0, r0
 8023bfc:	fb17 f705 	smulbb	r7, r7, r5
 8023c00:	fb00 7001 	mla	r0, r0, r1, r7
 8023c04:	b292      	uxth	r2, r2
 8023c06:	fb1c fc05 	smulbb	ip, ip, r5
 8023c0a:	b280      	uxth	r0, r0
 8023c0c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023c10:	fb03 c301 	mla	r3, r3, r1, ip
 8023c14:	1c51      	adds	r1, r2, #1
 8023c16:	f100 0c01 	add.w	ip, r0, #1
 8023c1a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023c1e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023c22:	b29b      	uxth	r3, r3
 8023c24:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023c28:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023c2c:	ea4c 0202 	orr.w	r2, ip, r2
 8023c30:	f103 0c01 	add.w	ip, r3, #1
 8023c34:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023c38:	095b      	lsrs	r3, r3, #5
 8023c3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023c3e:	431a      	orrs	r2, r3
 8023c40:	f8a9 2000 	strh.w	r2, [r9]
 8023c44:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023c46:	441c      	add	r4, r3
 8023c48:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8023c4a:	f109 0902 	add.w	r9, r9, #2
 8023c4e:	441e      	add	r6, r3
 8023c50:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023c54:	e647      	b.n	80238e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8023c56:	2800      	cmp	r0, #0
 8023c58:	f43f aedf 	beq.w	8023a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023c5c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023c60:	9109      	str	r1, [sp, #36]	; 0x24
 8023c62:	0e09      	lsrs	r1, r1, #24
 8023c64:	9112      	str	r1, [sp, #72]	; 0x48
 8023c66:	e6d8      	b.n	8023a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023c68:	b01d      	add	sp, #116	; 0x74
 8023c6a:	ecbd 8b08 	vpop	{d8-d11}
 8023c6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08023c74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023c74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c78:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8023c7c:	fb04 5603 	mla	r6, r4, r3, r5
 8023c80:	2c00      	cmp	r4, #0
 8023c82:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8023c86:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8023c8a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8023c8e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8023c92:	db37      	blt.n	8023d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8023c94:	45a6      	cmp	lr, r4
 8023c96:	dd35      	ble.n	8023d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8023c98:	2d00      	cmp	r5, #0
 8023c9a:	db31      	blt.n	8023d00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023c9c:	42ab      	cmp	r3, r5
 8023c9e:	dd2f      	ble.n	8023d00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ca0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8023ca4:	1c6e      	adds	r6, r5, #1
 8023ca6:	d430      	bmi.n	8023d0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8023ca8:	42b3      	cmp	r3, r6
 8023caa:	dd2e      	ble.n	8023d0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8023cac:	b378      	cbz	r0, 8023d0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8023cae:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8023cb2:	3401      	adds	r4, #1
 8023cb4:	d42f      	bmi.n	8023d16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8023cb6:	45a6      	cmp	lr, r4
 8023cb8:	dd2d      	ble.n	8023d16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8023cba:	b37f      	cbz	r7, 8023d1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8023cbc:	2d00      	cmp	r5, #0
 8023cbe:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8023cc2:	db26      	blt.n	8023d12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8023cc4:	42ab      	cmp	r3, r5
 8023cc6:	dd24      	ble.n	8023d12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8023cc8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023ccc:	3501      	adds	r5, #1
 8023cce:	d428      	bmi.n	8023d22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8023cd0:	42ab      	cmp	r3, r5
 8023cd2:	dd26      	ble.n	8023d22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8023cd4:	b338      	cbz	r0, 8023d26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 8023cd6:	f8de 3004 	ldr.w	r3, [lr, #4]
 8023cda:	280f      	cmp	r0, #15
 8023cdc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8023ce0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8023ce4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023ce8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8023cec:	d801      	bhi.n	8023cf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8023cee:	2f0f      	cmp	r7, #15
 8023cf0:	d91b      	bls.n	8023d2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8023cf2:	4b87      	ldr	r3, [pc, #540]	; (8023f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8023cf4:	4a87      	ldr	r2, [pc, #540]	; (8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8023cf6:	4888      	ldr	r0, [pc, #544]	; (8023f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8023cf8:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8023cfc:	f001 fd60 	bl	80257c0 <__assert_func>
 8023d00:	2200      	movs	r2, #0
 8023d02:	e7cf      	b.n	8023ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 8023d04:	2600      	movs	r6, #0
 8023d06:	4632      	mov	r2, r6
 8023d08:	e7d3      	b.n	8023cb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8023d0a:	2600      	movs	r6, #0
 8023d0c:	e7d1      	b.n	8023cb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8023d0e:	4606      	mov	r6, r0
 8023d10:	e7cf      	b.n	8023cb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8023d12:	2400      	movs	r4, #0
 8023d14:	e7da      	b.n	8023ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 8023d16:	2300      	movs	r3, #0
 8023d18:	461c      	mov	r4, r3
 8023d1a:	e7de      	b.n	8023cda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8023d1c:	463b      	mov	r3, r7
 8023d1e:	463c      	mov	r4, r7
 8023d20:	e7db      	b.n	8023cda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8023d22:	2300      	movs	r3, #0
 8023d24:	e7d9      	b.n	8023cda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8023d26:	4603      	mov	r3, r0
 8023d28:	e7d7      	b.n	8023cda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8023d2a:	b280      	uxth	r0, r0
 8023d2c:	b2bf      	uxth	r7, r7
 8023d2e:	fb07 fe00 	mul.w	lr, r7, r0
 8023d32:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8023d36:	0100      	lsls	r0, r0, #4
 8023d38:	eba0 0c0e 	sub.w	ip, r0, lr
 8023d3c:	b2bf      	uxth	r7, r7
 8023d3e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8023d42:	fa1f fc8c 	uxth.w	ip, ip
 8023d46:	1bed      	subs	r5, r5, r7
 8023d48:	b2ad      	uxth	r5, r5
 8023d4a:	fb0c f00a 	mul.w	r0, ip, sl
 8023d4e:	fb0b 0005 	mla	r0, fp, r5, r0
 8023d52:	fb07 0009 	mla	r0, r7, r9, r0
 8023d56:	fb0e 0008 	mla	r0, lr, r8, r0
 8023d5a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023d5e:	9001      	str	r0, [sp, #4]
 8023d60:	2800      	cmp	r0, #0
 8023d62:	f000 80d1 	beq.w	8023f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8023d66:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8023d6a:	d018      	beq.n	8023d9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 8023d6c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8023d70:	fb0b f000 	mul.w	r0, fp, r0
 8023d74:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023d78:	fb0b fb02 	mul.w	fp, fp, r2
 8023d7c:	0a02      	lsrs	r2, r0, #8
 8023d7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d82:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023d86:	4402      	add	r2, r0
 8023d88:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8023d8c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023d90:	0a12      	lsrs	r2, r2, #8
 8023d92:	0a00      	lsrs	r0, r0, #8
 8023d94:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d98:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023d9c:	4302      	orrs	r2, r0
 8023d9e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8023da2:	d01a      	beq.n	8023dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8023da4:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8023da8:	fb0a f000 	mul.w	r0, sl, r0
 8023dac:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023db0:	fb0a fa06 	mul.w	sl, sl, r6
 8023db4:	0a06      	lsrs	r6, r0, #8
 8023db6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023dba:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023dbe:	4406      	add	r6, r0
 8023dc0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8023dc4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8023dc8:	0a36      	lsrs	r6, r6, #8
 8023dca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dce:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023dd2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dd6:	ea46 060a 	orr.w	r6, r6, sl
 8023dda:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023dde:	d01b      	beq.n	8023e18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8023de0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8023de4:	fb09 fa0a 	mul.w	sl, r9, sl
 8023de8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023dec:	fb09 f004 	mul.w	r0, r9, r4
 8023df0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8023df4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023df8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023dfc:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8023e00:	4454      	add	r4, sl
 8023e02:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8023e06:	0a24      	lsrs	r4, r4, #8
 8023e08:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e0c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023e10:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023e14:	ea44 0409 	orr.w	r4, r4, r9
 8023e18:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023e1c:	d01b      	beq.n	8023e56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 8023e1e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8023e22:	fb08 f909 	mul.w	r9, r8, r9
 8023e26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023e2a:	fb08 f003 	mul.w	r0, r8, r3
 8023e2e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8023e32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023e36:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8023e3a:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8023e3e:	444b      	add	r3, r9
 8023e40:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8023e44:	0a1b      	lsrs	r3, r3, #8
 8023e46:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023e4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023e4e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023e52:	ea43 0308 	orr.w	r3, r3, r8
 8023e56:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8023e5a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023e5e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8023e62:	fb0c f808 	mul.w	r8, ip, r8
 8023e66:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e6a:	fb0c f606 	mul.w	r6, ip, r6
 8023e6e:	fb05 8909 	mla	r9, r5, r9, r8
 8023e72:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8023e76:	fb05 6502 	mla	r5, r5, r2, r6
 8023e7a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023e7e:	fb07 9908 	mla	r9, r7, r8, r9
 8023e82:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8023e86:	fb07 5704 	mla	r7, r7, r4, r5
 8023e8a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023e8e:	8808      	ldrh	r0, [r1, #0]
 8023e90:	fb0e 9808 	mla	r8, lr, r8, r9
 8023e94:	fb0e 7e03 	mla	lr, lr, r3, r7
 8023e98:	9b01      	ldr	r3, [sp, #4]
 8023e9a:	43da      	mvns	r2, r3
 8023e9c:	1203      	asrs	r3, r0, #8
 8023e9e:	b2d2      	uxtb	r2, r2
 8023ea0:	10c4      	asrs	r4, r0, #3
 8023ea2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023ea6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023eaa:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023eae:	00c0      	lsls	r0, r0, #3
 8023eb0:	4353      	muls	r3, r2
 8023eb2:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8023eb6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8023eba:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8023ebe:	b2c0      	uxtb	r0, r0
 8023ec0:	ea48 0e0e 	orr.w	lr, r8, lr
 8023ec4:	4354      	muls	r4, r2
 8023ec6:	4350      	muls	r0, r2
 8023ec8:	1c5a      	adds	r2, r3, #1
 8023eca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023ece:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8023ed2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023ed6:	1c62      	adds	r2, r4, #1
 8023ed8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023edc:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8023ee0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023ee4:	021b      	lsls	r3, r3, #8
 8023ee6:	00d2      	lsls	r2, r2, #3
 8023ee8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023eec:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023ef0:	4313      	orrs	r3, r2
 8023ef2:	1c42      	adds	r2, r0, #1
 8023ef4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023ef8:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 8023efc:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 8023f00:	ea4e 0e03 	orr.w	lr, lr, r3
 8023f04:	f8a1 e000 	strh.w	lr, [r1]
 8023f08:	b003      	add	sp, #12
 8023f0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f0e:	bf00      	nop
 8023f10:	0802b1ee 	.word	0x0802b1ee
 8023f14:	0802b7be 	.word	0x0802b7be
 8023f18:	0802b272 	.word	0x0802b272

08023f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f20:	ed2d 8b08 	vpush	{d8-d11}
 8023f24:	b09b      	sub	sp, #108	; 0x6c
 8023f26:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8023f2a:	9218      	str	r2, [sp, #96]	; 0x60
 8023f2c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8023f2e:	9116      	str	r1, [sp, #88]	; 0x58
 8023f30:	9307      	str	r3, [sp, #28]
 8023f32:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8023f36:	9019      	str	r0, [sp, #100]	; 0x64
 8023f38:	6850      	ldr	r0, [r2, #4]
 8023f3a:	6812      	ldr	r2, [r2, #0]
 8023f3c:	fb00 1303 	mla	r3, r0, r3, r1
 8023f40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023f44:	930a      	str	r3, [sp, #40]	; 0x28
 8023f46:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023f48:	681b      	ldr	r3, [r3, #0]
 8023f4a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023f4c:	eeb0 aa40 	vmov.f32	s20, s0
 8023f50:	eef0 9a60 	vmov.f32	s19, s1
 8023f54:	eeb0 9a41 	vmov.f32	s18, s2
 8023f58:	eeb0 8a62 	vmov.f32	s16, s5
 8023f5c:	eef0 8a43 	vmov.f32	s17, s6
 8023f60:	eef0 ba44 	vmov.f32	s23, s8
 8023f64:	eeb0 ba64 	vmov.f32	s22, s9
 8023f68:	eef0 aa45 	vmov.f32	s21, s10
 8023f6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023f6e:	2b00      	cmp	r3, #0
 8023f70:	dc03      	bgt.n	8023f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8023f72:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023f74:	2b00      	cmp	r3, #0
 8023f76:	f340 8386 	ble.w	8024686 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8023f7a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023f7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f84:	1e48      	subs	r0, r1, #1
 8023f86:	1e57      	subs	r7, r2, #1
 8023f88:	9b07      	ldr	r3, [sp, #28]
 8023f8a:	2b00      	cmp	r3, #0
 8023f8c:	f340 8166 	ble.w	802425c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8023f90:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023f94:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023f98:	d406      	bmi.n	8023fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023f9a:	4584      	cmp	ip, r0
 8023f9c:	da04      	bge.n	8023fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023f9e:	2b00      	cmp	r3, #0
 8023fa0:	db02      	blt.n	8023fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023fa2:	42bb      	cmp	r3, r7
 8023fa4:	f2c0 815b 	blt.w	802425e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8023fa8:	f11c 0c01 	adds.w	ip, ip, #1
 8023fac:	f100 814b 	bmi.w	8024246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8023fb0:	4561      	cmp	r1, ip
 8023fb2:	f2c0 8148 	blt.w	8024246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8023fb6:	3301      	adds	r3, #1
 8023fb8:	f100 8145 	bmi.w	8024246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8023fbc:	429a      	cmp	r2, r3
 8023fbe:	f2c0 8142 	blt.w	8024246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8023fc2:	9b07      	ldr	r3, [sp, #28]
 8023fc4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023fc6:	9317      	str	r3, [sp, #92]	; 0x5c
 8023fc8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023fca:	2b00      	cmp	r3, #0
 8023fcc:	f340 8165 	ble.w	802429a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023fd0:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8023fd2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023fd4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023fd8:	689b      	ldr	r3, [r3, #8]
 8023fda:	1422      	asrs	r2, r4, #16
 8023fdc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023fe0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023fe4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023fe8:	f100 81d5 	bmi.w	8024396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8023fec:	f103 38ff 	add.w	r8, r3, #4294967295
 8023ff0:	4542      	cmp	r2, r8
 8023ff2:	f280 81d0 	bge.w	8024396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8023ff6:	f1bc 0f00 	cmp.w	ip, #0
 8023ffa:	f2c0 81cc 	blt.w	8024396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8023ffe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024002:	45c4      	cmp	ip, r8
 8024004:	f280 81c7 	bge.w	8024396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8024008:	b21b      	sxth	r3, r3
 802400a:	fb0c 2203 	mla	r2, ip, r3, r2
 802400e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024010:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024014:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024018:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802401c:	2900      	cmp	r1, #0
 802401e:	f000 8182 	beq.w	8024326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8024022:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024026:	950b      	str	r5, [sp, #44]	; 0x2c
 8024028:	0e2d      	lsrs	r5, r5, #24
 802402a:	9512      	str	r5, [sp, #72]	; 0x48
 802402c:	b180      	cbz	r0, 8024050 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802402e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024032:	3b01      	subs	r3, #1
 8024034:	009b      	lsls	r3, r3, #2
 8024036:	3304      	adds	r3, #4
 8024038:	eb08 0c03 	add.w	ip, r8, r3
 802403c:	f858 3003 	ldr.w	r3, [r8, r3]
 8024040:	9308      	str	r3, [sp, #32]
 8024042:	0e1b      	lsrs	r3, r3, #24
 8024044:	9310      	str	r3, [sp, #64]	; 0x40
 8024046:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802404a:	930c      	str	r3, [sp, #48]	; 0x30
 802404c:	0e1b      	lsrs	r3, r3, #24
 802404e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024050:	b289      	uxth	r1, r1
 8024052:	b280      	uxth	r0, r0
 8024054:	fb01 f900 	mul.w	r9, r1, r0
 8024058:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802405c:	0109      	lsls	r1, r1, #4
 802405e:	eba1 0809 	sub.w	r8, r1, r9
 8024062:	b280      	uxth	r0, r0
 8024064:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024068:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802406a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802406c:	fa1f f888 	uxth.w	r8, r8
 8024070:	1a09      	subs	r1, r1, r0
 8024072:	b289      	uxth	r1, r1
 8024074:	fb08 f303 	mul.w	r3, r8, r3
 8024078:	fb01 330e 	mla	r3, r1, lr, r3
 802407c:	fb00 3305 	mla	r3, r0, r5, r3
 8024080:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024082:	fb09 3305 	mla	r3, r9, r5, r3
 8024086:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802408a:	2b00      	cmp	r3, #0
 802408c:	f000 80d2 	beq.w	8024234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8024090:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024094:	d01b      	beq.n	80240ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8024096:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802409a:	fb0e fa0a 	mul.w	sl, lr, sl
 802409e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80240a2:	fb0e fe02 	mul.w	lr, lr, r2
 80240a6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80240aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80240ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80240b2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80240b6:	4452      	add	r2, sl
 80240b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80240bc:	0a12      	lsrs	r2, r2, #8
 80240be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240c2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80240c6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80240ca:	ea42 020c 	orr.w	r2, r2, ip
 80240ce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80240d0:	2dff      	cmp	r5, #255	; 0xff
 80240d2:	d021      	beq.n	8024118 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80240d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80240d6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80240da:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80240dc:	fb05 fb0b 	mul.w	fp, r5, fp
 80240e0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80240e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80240e6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80240e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240ec:	fb05 fa0a 	mul.w	sl, r5, sl
 80240f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240fc:	44de      	add	lr, fp
 80240fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024102:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024106:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802410a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802410e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024112:	ea4e 050a 	orr.w	r5, lr, sl
 8024116:	950b      	str	r5, [sp, #44]	; 0x2c
 8024118:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802411a:	2dff      	cmp	r5, #255	; 0xff
 802411c:	d021      	beq.n	8024162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802411e:	9d08      	ldr	r5, [sp, #32]
 8024120:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024124:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024126:	fb05 fb0b 	mul.w	fp, r5, fp
 802412a:	9d08      	ldr	r5, [sp, #32]
 802412c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024130:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024132:	fb05 fa0e 	mul.w	sl, r5, lr
 8024136:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802413a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802413e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024142:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024146:	44de      	add	lr, fp
 8024148:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802414c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024150:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024154:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024158:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802415c:	ea4e 050a 	orr.w	r5, lr, sl
 8024160:	9508      	str	r5, [sp, #32]
 8024162:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024164:	2dff      	cmp	r5, #255	; 0xff
 8024166:	d021      	beq.n	80241ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8024168:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802416a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802416e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024170:	fb05 fb0b 	mul.w	fp, r5, fp
 8024174:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024176:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802417a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802417c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024180:	fb05 fa0a 	mul.w	sl, r5, sl
 8024184:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024188:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802418c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024190:	44de      	add	lr, fp
 8024192:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024196:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802419a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802419e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241a6:	ea4e 050a 	orr.w	r5, lr, sl
 80241aa:	950c      	str	r5, [sp, #48]	; 0x30
 80241ac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80241b2:	9d08      	ldr	r5, [sp, #32]
 80241b4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80241b8:	fb08 fc0c 	mul.w	ip, r8, ip
 80241bc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80241c0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80241c4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80241c6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80241ca:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80241ce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241d0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80241d4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80241d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80241dc:	fb08 f80e 	mul.w	r8, r8, lr
 80241e0:	fb01 8202 	mla	r2, r1, r2, r8
 80241e4:	9908      	ldr	r1, [sp, #32]
 80241e6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80241ea:	990c      	ldr	r1, [sp, #48]	; 0x30
 80241ec:	fb00 220a 	mla	r2, r0, sl, r2
 80241f0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80241f4:	fb09 2900 	mla	r9, r9, r0, r2
 80241f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024204:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024208:	ea4c 0c09 	orr.w	ip, ip, r9
 802420c:	2bff      	cmp	r3, #255	; 0xff
 802420e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024212:	f040 8091 	bne.w	8024338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8024216:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802421a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802421e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024222:	f022 0207 	bic.w	r2, r2, #7
 8024226:	431a      	orrs	r2, r3
 8024228:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802422c:	ea4c 0c02 	orr.w	ip, ip, r2
 8024230:	f8a7 c000 	strh.w	ip, [r7]
 8024234:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8024236:	441c      	add	r4, r3
 8024238:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802423a:	441e      	add	r6, r3
 802423c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802423e:	3b01      	subs	r3, #1
 8024240:	3702      	adds	r7, #2
 8024242:	9317      	str	r3, [sp, #92]	; 0x5c
 8024244:	e6c0      	b.n	8023fc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8024246:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8024248:	441c      	add	r4, r3
 802424a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802424c:	441e      	add	r6, r3
 802424e:	9b07      	ldr	r3, [sp, #28]
 8024250:	3b01      	subs	r3, #1
 8024252:	9307      	str	r3, [sp, #28]
 8024254:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024256:	3302      	adds	r3, #2
 8024258:	930a      	str	r3, [sp, #40]	; 0x28
 802425a:	e695      	b.n	8023f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802425c:	d024      	beq.n	80242a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802425e:	9b07      	ldr	r3, [sp, #28]
 8024260:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8024262:	3b01      	subs	r3, #1
 8024264:	fb00 4003 	mla	r0, r0, r3, r4
 8024268:	1400      	asrs	r0, r0, #16
 802426a:	f53f aeaa 	bmi.w	8023fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802426e:	3901      	subs	r1, #1
 8024270:	4288      	cmp	r0, r1
 8024272:	f6bf aea6 	bge.w	8023fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8024276:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8024278:	fb01 6303 	mla	r3, r1, r3, r6
 802427c:	141b      	asrs	r3, r3, #16
 802427e:	f53f aea0 	bmi.w	8023fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8024282:	3a01      	subs	r2, #1
 8024284:	4293      	cmp	r3, r2
 8024286:	f6bf ae9c 	bge.w	8023fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802428a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802428e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024292:	f1bb 0f00 	cmp.w	fp, #0
 8024296:	f300 809a 	bgt.w	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 802429a:	9b07      	ldr	r3, [sp, #28]
 802429c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80242a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80242a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80242a6:	930a      	str	r3, [sp, #40]	; 0x28
 80242a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80242aa:	2b00      	cmp	r3, #0
 80242ac:	f340 81eb 	ble.w	8024686 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80242b0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80242b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80242b8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80242bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80242be:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80242c2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80242c6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80242ca:	eef0 6a48 	vmov.f32	s13, s16
 80242ce:	ee69 7a27 	vmul.f32	s15, s18, s15
 80242d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242d6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80242da:	ee16 4a90 	vmov	r4, s13
 80242de:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80242e2:	eef0 6a68 	vmov.f32	s13, s17
 80242e6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80242ea:	ee18 2a10 	vmov	r2, s16
 80242ee:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80242f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80242f6:	ee18 2a90 	vmov	r2, s17
 80242fa:	932f      	str	r3, [sp, #188]	; 0xbc
 80242fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80242fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8024302:	9330      	str	r3, [sp, #192]	; 0xc0
 8024304:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024306:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024308:	3b01      	subs	r3, #1
 802430a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802430e:	9316      	str	r3, [sp, #88]	; 0x58
 8024310:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024312:	bf08      	it	eq
 8024314:	4613      	moveq	r3, r2
 8024316:	ee16 6a90 	vmov	r6, s13
 802431a:	9307      	str	r3, [sp, #28]
 802431c:	eef0 8a67 	vmov.f32	s17, s15
 8024320:	eeb0 8a47 	vmov.f32	s16, s14
 8024324:	e622      	b.n	8023f6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8024326:	2800      	cmp	r0, #0
 8024328:	f43f ae92 	beq.w	8024050 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802432c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024330:	9308      	str	r3, [sp, #32]
 8024332:	0e1b      	lsrs	r3, r3, #24
 8024334:	9310      	str	r3, [sp, #64]	; 0x40
 8024336:	e68b      	b.n	8024050 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8024338:	8839      	ldrh	r1, [r7, #0]
 802433a:	4dd5      	ldr	r5, [pc, #852]	; (8024690 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 802433c:	43db      	mvns	r3, r3
 802433e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024342:	fa5f f883 	uxtb.w	r8, r3
 8024346:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802434a:	fb0e fe08 	mul.w	lr, lr, r8
 802434e:	10c8      	asrs	r0, r1, #3
 8024350:	00cb      	lsls	r3, r1, #3
 8024352:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024356:	f10e 0101 	add.w	r1, lr, #1
 802435a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802435e:	fb00 f008 	mul.w	r0, r0, r8
 8024362:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024366:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802436a:	f100 0e01 	add.w	lr, r0, #1
 802436e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024372:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024376:	b2db      	uxtb	r3, r3
 8024378:	b2c9      	uxtb	r1, r1
 802437a:	00d2      	lsls	r2, r2, #3
 802437c:	fb03 f308 	mul.w	r3, r3, r8
 8024380:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024384:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024388:	430a      	orrs	r2, r1
 802438a:	1c59      	adds	r1, r3, #1
 802438c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024390:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024394:	e748      	b.n	8024228 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024396:	f112 0801 	adds.w	r8, r2, #1
 802439a:	f53f af4b 	bmi.w	8024234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802439e:	4543      	cmp	r3, r8
 80243a0:	f6ff af48 	blt.w	8024234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80243a4:	f11c 0801 	adds.w	r8, ip, #1
 80243a8:	f53f af44 	bmi.w	8024234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80243ac:	45c6      	cmp	lr, r8
 80243ae:	f6ff af41 	blt.w	8024234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80243b2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80243b6:	fa0f f28e 	sxth.w	r2, lr
 80243ba:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80243be:	9200      	str	r2, [sp, #0]
 80243c0:	b21b      	sxth	r3, r3
 80243c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80243c4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80243c6:	4639      	mov	r1, r7
 80243c8:	f7ff fc54 	bl	8023c74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80243cc:	e732      	b.n	8024234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80243ce:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80243d0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80243d2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80243d6:	1421      	asrs	r1, r4, #16
 80243d8:	1433      	asrs	r3, r6, #16
 80243da:	fb07 1303 	mla	r3, r7, r3, r1
 80243de:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80243e0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80243e4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80243e8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80243ec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80243f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80243f4:	2a00      	cmp	r2, #0
 80243f6:	f000 8107 	beq.w	8024608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80243fa:	684d      	ldr	r5, [r1, #4]
 80243fc:	950d      	str	r5, [sp, #52]	; 0x34
 80243fe:	0e2d      	lsrs	r5, r5, #24
 8024400:	9514      	str	r5, [sp, #80]	; 0x50
 8024402:	b178      	cbz	r0, 8024424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8024404:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024408:	3f01      	subs	r7, #1
 802440a:	00bf      	lsls	r7, r7, #2
 802440c:	3704      	adds	r7, #4
 802440e:	eb01 0e07 	add.w	lr, r1, r7
 8024412:	59c9      	ldr	r1, [r1, r7]
 8024414:	9109      	str	r1, [sp, #36]	; 0x24
 8024416:	0e09      	lsrs	r1, r1, #24
 8024418:	9111      	str	r1, [sp, #68]	; 0x44
 802441a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802441e:	910e      	str	r1, [sp, #56]	; 0x38
 8024420:	0e09      	lsrs	r1, r1, #24
 8024422:	9115      	str	r1, [sp, #84]	; 0x54
 8024424:	b292      	uxth	r2, r2
 8024426:	b280      	uxth	r0, r0
 8024428:	fb02 f900 	mul.w	r9, r2, r0
 802442c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024430:	0112      	lsls	r2, r2, #4
 8024432:	eba2 0e09 	sub.w	lr, r2, r9
 8024436:	b280      	uxth	r0, r0
 8024438:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802443c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802443e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024440:	fa1f fe8e 	uxth.w	lr, lr
 8024444:	1a09      	subs	r1, r1, r0
 8024446:	b289      	uxth	r1, r1
 8024448:	fb0e f202 	mul.w	r2, lr, r2
 802444c:	fb01 220c 	mla	r2, r1, ip, r2
 8024450:	fb00 2205 	mla	r2, r0, r5, r2
 8024454:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024456:	fb09 2205 	mla	r2, r9, r5, r2
 802445a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802445e:	2a00      	cmp	r2, #0
 8024460:	f000 80c9 	beq.w	80245f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024464:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024468:	d019      	beq.n	802449e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 802446a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802446e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024472:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024476:	fb0c fc03 	mul.w	ip, ip, r3
 802447a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802447e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024482:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024486:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802448a:	4453      	add	r3, sl
 802448c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024490:	0a1b      	lsrs	r3, r3, #8
 8024492:	0a3f      	lsrs	r7, r7, #8
 8024494:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024498:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802449c:	433b      	orrs	r3, r7
 802449e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80244a0:	2dff      	cmp	r5, #255	; 0xff
 80244a2:	d020      	beq.n	80244e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 80244a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80244a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80244aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80244ac:	436f      	muls	r7, r5
 80244ae:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80244b0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80244b4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80244b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244ba:	fb05 fa0a 	mul.w	sl, r5, sl
 80244be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244c6:	44bc      	add	ip, r7
 80244c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80244d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244e0:	ea4c 050a 	orr.w	r5, ip, sl
 80244e4:	950d      	str	r5, [sp, #52]	; 0x34
 80244e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80244e8:	2dff      	cmp	r5, #255	; 0xff
 80244ea:	d020      	beq.n	802452e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80244ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80244ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80244f2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80244f4:	436f      	muls	r7, r5
 80244f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80244f8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80244fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80244fe:	fb05 fa0c 	mul.w	sl, r5, ip
 8024502:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024506:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802450a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802450e:	44bc      	add	ip, r7
 8024510:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024514:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024518:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802451c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024520:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024524:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024528:	ea4c 050a 	orr.w	r5, ip, sl
 802452c:	9509      	str	r5, [sp, #36]	; 0x24
 802452e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024530:	2dff      	cmp	r5, #255	; 0xff
 8024532:	d020      	beq.n	8024576 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8024534:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024536:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802453a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802453c:	436f      	muls	r7, r5
 802453e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024540:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024544:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024546:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802454a:	fb05 fa0a 	mul.w	sl, r5, sl
 802454e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024552:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024556:	44bc      	add	ip, r7
 8024558:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802455c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024560:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024564:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024568:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802456c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024570:	ea4c 050a 	orr.w	r5, ip, sl
 8024574:	950e      	str	r5, [sp, #56]	; 0x38
 8024576:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024578:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802457c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802457e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024582:	fb0e f707 	mul.w	r7, lr, r7
 8024586:	fb01 770c 	mla	r7, r1, ip, r7
 802458a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802458e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024590:	fb00 770c 	mla	r7, r0, ip, r7
 8024594:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024598:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802459a:	fb09 770c 	mla	r7, r9, ip, r7
 802459e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80245a2:	fb0e fe0c 	mul.w	lr, lr, ip
 80245a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80245aa:	fb01 e303 	mla	r3, r1, r3, lr
 80245ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 80245b0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80245b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80245b6:	fb00 330a 	mla	r3, r0, sl, r3
 80245ba:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80245be:	fb09 3c0c 	mla	ip, r9, ip, r3
 80245c2:	0a3f      	lsrs	r7, r7, #8
 80245c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80245cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80245d0:	ea47 070c 	orr.w	r7, r7, ip
 80245d4:	2aff      	cmp	r2, #255	; 0xff
 80245d6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80245da:	d11e      	bne.n	802461a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80245dc:	097a      	lsrs	r2, r7, #5
 80245de:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80245e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80245e6:	f023 0307 	bic.w	r3, r3, #7
 80245ea:	4313      	orrs	r3, r2
 80245ec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80245f0:	431f      	orrs	r7, r3
 80245f2:	f8a8 7000 	strh.w	r7, [r8]
 80245f6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80245f8:	441c      	add	r4, r3
 80245fa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80245fc:	f108 0802 	add.w	r8, r8, #2
 8024600:	441e      	add	r6, r3
 8024602:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024606:	e644      	b.n	8024292 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024608:	2800      	cmp	r0, #0
 802460a:	f43f af0b 	beq.w	8024424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 802460e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024612:	9109      	str	r1, [sp, #36]	; 0x24
 8024614:	0e09      	lsrs	r1, r1, #24
 8024616:	9111      	str	r1, [sp, #68]	; 0x44
 8024618:	e704      	b.n	8024424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 802461a:	f8b8 1000 	ldrh.w	r1, [r8]
 802461e:	43d2      	mvns	r2, r2
 8024620:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024624:	fa5f fe82 	uxtb.w	lr, r2
 8024628:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802462c:	fb0c fc0e 	mul.w	ip, ip, lr
 8024630:	10c8      	asrs	r0, r1, #3
 8024632:	00ca      	lsls	r2, r1, #3
 8024634:	f10c 0101 	add.w	r1, ip, #1
 8024638:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802463c:	0c39      	lsrs	r1, r7, #16
 802463e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024642:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024646:	4912      	ldr	r1, [pc, #72]	; (8024690 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8024648:	fb00 f00e 	mul.w	r0, r0, lr
 802464c:	fa5f fc8c 	uxtb.w	ip, ip
 8024650:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024654:	b2d2      	uxtb	r2, r2
 8024656:	1c41      	adds	r1, r0, #1
 8024658:	fb02 f20e 	mul.w	r2, r2, lr
 802465c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024660:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024664:	1c51      	adds	r1, r2, #1
 8024666:	00c0      	lsls	r0, r0, #3
 8024668:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802466c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024670:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024674:	ea4c 0c00 	orr.w	ip, ip, r0
 8024678:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802467c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024680:	f8a8 c000 	strh.w	ip, [r8]
 8024684:	e7b7      	b.n	80245f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024686:	b01b      	add	sp, #108	; 0x6c
 8024688:	ecbd 8b08 	vpop	{d8-d11}
 802468c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024690:	fffff800 	.word	0xfffff800

08024694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024698:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 802469c:	2c00      	cmp	r4, #0
 802469e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80246a2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80246a6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80246aa:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80246ae:	fb04 ce03 	mla	lr, r4, r3, ip
 80246b2:	db60      	blt.n	8024776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80246b4:	45a1      	cmp	r9, r4
 80246b6:	dd5e      	ble.n	8024776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80246b8:	f1bc 0f00 	cmp.w	ip, #0
 80246bc:	db59      	blt.n	8024772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80246be:	45e0      	cmp	r8, ip
 80246c0:	dd57      	ble.n	8024772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80246c2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80246c6:	f01e 0f01 	tst.w	lr, #1
 80246ca:	5c16      	ldrb	r6, [r2, r0]
 80246cc:	bf0c      	ite	eq
 80246ce:	f006 060f 	andeq.w	r6, r6, #15
 80246d2:	1136      	asrne	r6, r6, #4
 80246d4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80246d8:	b2f6      	uxtb	r6, r6
 80246da:	f11c 0001 	adds.w	r0, ip, #1
 80246de:	d44d      	bmi.n	802477c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80246e0:	4580      	cmp	r8, r0
 80246e2:	dd4b      	ble.n	802477c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80246e4:	2d00      	cmp	r5, #0
 80246e6:	d04b      	beq.n	8024780 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80246e8:	f10e 0a01 	add.w	sl, lr, #1
 80246ec:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80246f0:	f01a 0f01 	tst.w	sl, #1
 80246f4:	5c10      	ldrb	r0, [r2, r0]
 80246f6:	bf0c      	ite	eq
 80246f8:	f000 000f 	andeq.w	r0, r0, #15
 80246fc:	1100      	asrne	r0, r0, #4
 80246fe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024702:	b2c0      	uxtb	r0, r0
 8024704:	3401      	adds	r4, #1
 8024706:	d43f      	bmi.n	8024788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8024708:	45a1      	cmp	r9, r4
 802470a:	dd3d      	ble.n	8024788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 802470c:	2f00      	cmp	r7, #0
 802470e:	f000 80a8 	beq.w	8024862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 8024712:	f1bc 0f00 	cmp.w	ip, #0
 8024716:	db35      	blt.n	8024784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8024718:	45e0      	cmp	r8, ip
 802471a:	dd33      	ble.n	8024784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 802471c:	eb03 090e 	add.w	r9, r3, lr
 8024720:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8024724:	f019 0f01 	tst.w	r9, #1
 8024728:	5d14      	ldrb	r4, [r2, r4]
 802472a:	bf0c      	ite	eq
 802472c:	f004 040f 	andeq.w	r4, r4, #15
 8024730:	1124      	asrne	r4, r4, #4
 8024732:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024736:	b2e4      	uxtb	r4, r4
 8024738:	f11c 0c01 	adds.w	ip, ip, #1
 802473c:	d427      	bmi.n	802478e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 802473e:	45e0      	cmp	r8, ip
 8024740:	dd25      	ble.n	802478e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8024742:	b335      	cbz	r5, 8024792 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8024744:	3301      	adds	r3, #1
 8024746:	449e      	add	lr, r3
 8024748:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802474c:	f01e 0f01 	tst.w	lr, #1
 8024750:	5cd2      	ldrb	r2, [r2, r3]
 8024752:	bf0c      	ite	eq
 8024754:	f002 020f 	andeq.w	r2, r2, #15
 8024758:	1112      	asrne	r2, r2, #4
 802475a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802475e:	b2d3      	uxtb	r3, r2
 8024760:	2d0f      	cmp	r5, #15
 8024762:	d917      	bls.n	8024794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8024764:	4b42      	ldr	r3, [pc, #264]	; (8024870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 8024766:	4a43      	ldr	r2, [pc, #268]	; (8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8024768:	4843      	ldr	r0, [pc, #268]	; (8024878 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 802476a:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 802476e:	f001 f827 	bl	80257c0 <__assert_func>
 8024772:	2600      	movs	r6, #0
 8024774:	e7b1      	b.n	80246da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8024776:	2000      	movs	r0, #0
 8024778:	4606      	mov	r6, r0
 802477a:	e7c3      	b.n	8024704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 802477c:	2000      	movs	r0, #0
 802477e:	e7c1      	b.n	8024704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8024780:	4628      	mov	r0, r5
 8024782:	e7bf      	b.n	8024704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8024784:	2400      	movs	r4, #0
 8024786:	e7d7      	b.n	8024738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8024788:	2300      	movs	r3, #0
 802478a:	461c      	mov	r4, r3
 802478c:	e7e8      	b.n	8024760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 802478e:	2300      	movs	r3, #0
 8024790:	e7e6      	b.n	8024760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8024792:	462b      	mov	r3, r5
 8024794:	2f0f      	cmp	r7, #15
 8024796:	d8e5      	bhi.n	8024764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8024798:	b2ad      	uxth	r5, r5
 802479a:	b2bf      	uxth	r7, r7
 802479c:	fb05 fc07 	mul.w	ip, r5, r7
 80247a0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80247a4:	012d      	lsls	r5, r5, #4
 80247a6:	b2bf      	uxth	r7, r7
 80247a8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80247ac:	eba5 050c 	sub.w	r5, r5, ip
 80247b0:	1bd2      	subs	r2, r2, r7
 80247b2:	b2ad      	uxth	r5, r5
 80247b4:	b292      	uxth	r2, r2
 80247b6:	4368      	muls	r0, r5
 80247b8:	fb06 0002 	mla	r0, r6, r2, r0
 80247bc:	fb07 0404 	mla	r4, r7, r4, r0
 80247c0:	fb0c 4303 	mla	r3, ip, r3, r4
 80247c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80247c8:	b1b3      	cbz	r3, 80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 80247ca:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80247ce:	435a      	muls	r2, r3
 80247d0:	1c53      	adds	r3, r2, #1
 80247d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80247d6:	4a29      	ldr	r2, [pc, #164]	; (802487c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 80247d8:	121b      	asrs	r3, r3, #8
 80247da:	6812      	ldr	r2, [r2, #0]
 80247dc:	2bff      	cmp	r3, #255	; 0xff
 80247de:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80247e2:	d10b      	bne.n	80247fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 80247e4:	4b26      	ldr	r3, [pc, #152]	; (8024880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 80247e6:	0950      	lsrs	r0, r2, #5
 80247e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80247ec:	4033      	ands	r3, r6
 80247ee:	4318      	orrs	r0, r3
 80247f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80247f4:	4302      	orrs	r2, r0
 80247f6:	800a      	strh	r2, [r1, #0]
 80247f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80247fc:	880d      	ldrh	r5, [r1, #0]
 80247fe:	b29f      	uxth	r7, r3
 8024800:	122c      	asrs	r4, r5, #8
 8024802:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024806:	43db      	mvns	r3, r3
 8024808:	b2db      	uxtb	r3, r3
 802480a:	fb10 f007 	smulbb	r0, r0, r7
 802480e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024812:	fb04 0403 	mla	r4, r4, r3, r0
 8024816:	b2f6      	uxtb	r6, r6
 8024818:	10e8      	asrs	r0, r5, #3
 802481a:	b2d2      	uxtb	r2, r2
 802481c:	00ed      	lsls	r5, r5, #3
 802481e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024822:	fb12 f207 	smulbb	r2, r2, r7
 8024826:	fb16 f607 	smulbb	r6, r6, r7
 802482a:	b2ed      	uxtb	r5, r5
 802482c:	b2a4      	uxth	r4, r4
 802482e:	fb00 6603 	mla	r6, r0, r3, r6
 8024832:	fb05 2303 	mla	r3, r5, r3, r2
 8024836:	b29a      	uxth	r2, r3
 8024838:	1c63      	adds	r3, r4, #1
 802483a:	b2b0      	uxth	r0, r6
 802483c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024840:	1c53      	adds	r3, r2, #1
 8024842:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024846:	1c42      	adds	r2, r0, #1
 8024848:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802484c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024850:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024854:	0940      	lsrs	r0, r0, #5
 8024856:	4323      	orrs	r3, r4
 8024858:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802485c:	4303      	orrs	r3, r0
 802485e:	800b      	strh	r3, [r1, #0]
 8024860:	e7ca      	b.n	80247f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8024862:	2d0f      	cmp	r5, #15
 8024864:	f63f af7e 	bhi.w	8024764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8024868:	463b      	mov	r3, r7
 802486a:	463c      	mov	r4, r7
 802486c:	e794      	b.n	8024798 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 802486e:	bf00      	nop
 8024870:	0802b1ee 	.word	0x0802b1ee
 8024874:	0802b7be 	.word	0x0802b7be
 8024878:	0802b272 	.word	0x0802b272
 802487c:	200279b8 	.word	0x200279b8
 8024880:	00fff800 	.word	0x00fff800

08024884 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024888:	ed2d 8b08 	vpush	{d8-d11}
 802488c:	b097      	sub	sp, #92	; 0x5c
 802488e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8024892:	9214      	str	r2, [sp, #80]	; 0x50
 8024894:	9309      	str	r3, [sp, #36]	; 0x24
 8024896:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8024898:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802489c:	910d      	str	r1, [sp, #52]	; 0x34
 802489e:	930f      	str	r3, [sp, #60]	; 0x3c
 80248a0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80248a4:	9015      	str	r0, [sp, #84]	; 0x54
 80248a6:	6850      	ldr	r0, [r2, #4]
 80248a8:	6812      	ldr	r2, [r2, #0]
 80248aa:	fb00 1303 	mla	r3, r0, r3, r1
 80248ae:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80248b2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80248b4:	689b      	ldr	r3, [r3, #8]
 80248b6:	3301      	adds	r3, #1
 80248b8:	f023 0301 	bic.w	r3, r3, #1
 80248bc:	930a      	str	r3, [sp, #40]	; 0x28
 80248be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80248c0:	681f      	ldr	r7, [r3, #0]
 80248c2:	eeb0 aa40 	vmov.f32	s20, s0
 80248c6:	eef0 9a60 	vmov.f32	s19, s1
 80248ca:	eeb0 9a41 	vmov.f32	s18, s2
 80248ce:	eeb0 8a62 	vmov.f32	s16, s5
 80248d2:	eef0 8a43 	vmov.f32	s17, s6
 80248d6:	eef0 ba44 	vmov.f32	s23, s8
 80248da:	eeb0 ba64 	vmov.f32	s22, s9
 80248de:	eef0 aa45 	vmov.f32	s21, s10
 80248e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80248e4:	2b00      	cmp	r3, #0
 80248e6:	dc03      	bgt.n	80248f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80248e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80248ea:	2b00      	cmp	r3, #0
 80248ec:	f340 8287 	ble.w	8024dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 80248f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80248f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248fa:	1e48      	subs	r0, r1, #1
 80248fc:	f102 3cff 	add.w	ip, r2, #4294967295
 8024900:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024902:	2b00      	cmp	r3, #0
 8024904:	f340 80c4 	ble.w	8024a90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8024908:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802490c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024910:	d406      	bmi.n	8024920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024912:	4586      	cmp	lr, r0
 8024914:	da04      	bge.n	8024920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024916:	2b00      	cmp	r3, #0
 8024918:	db02      	blt.n	8024920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802491a:	4563      	cmp	r3, ip
 802491c:	f2c0 80b9 	blt.w	8024a92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024920:	f11e 0e01 	adds.w	lr, lr, #1
 8024924:	f100 80aa 	bmi.w	8024a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8024928:	4571      	cmp	r1, lr
 802492a:	f2c0 80a7 	blt.w	8024a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 802492e:	3301      	adds	r3, #1
 8024930:	f100 80a4 	bmi.w	8024a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8024934:	429a      	cmp	r2, r3
 8024936:	f2c0 80a1 	blt.w	8024a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 802493a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802493c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024940:	930e      	str	r3, [sp, #56]	; 0x38
 8024942:	46c8      	mov	r8, r9
 8024944:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024946:	2b00      	cmp	r3, #0
 8024948:	f340 80c3 	ble.w	8024ad2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802494c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802494e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024952:	1423      	asrs	r3, r4, #16
 8024954:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024958:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802495c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024960:	f100 814d 	bmi.w	8024bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024964:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024968:	455b      	cmp	r3, fp
 802496a:	f280 8148 	bge.w	8024bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802496e:	2800      	cmp	r0, #0
 8024970:	f2c0 8145 	blt.w	8024bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024974:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024978:	4558      	cmp	r0, fp
 802497a:	f280 8140 	bge.w	8024bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802497e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024980:	fb00 3305 	mla	r3, r0, r5, r3
 8024984:	0858      	lsrs	r0, r3, #1
 8024986:	07dd      	lsls	r5, r3, #31
 8024988:	f817 c000 	ldrb.w	ip, [r7, r0]
 802498c:	bf54      	ite	pl
 802498e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024992:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024996:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802499a:	fa5f fc8c 	uxtb.w	ip, ip
 802499e:	2a00      	cmp	r2, #0
 80249a0:	f000 80db 	beq.w	8024b5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80249a4:	1c58      	adds	r0, r3, #1
 80249a6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80249aa:	07c0      	lsls	r0, r0, #31
 80249ac:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80249b0:	bf54      	ite	pl
 80249b2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80249b6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80249ba:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80249be:	fa5f f08e 	uxtb.w	r0, lr
 80249c2:	9010      	str	r0, [sp, #64]	; 0x40
 80249c4:	b1c9      	cbz	r1, 80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80249c6:	4453      	add	r3, sl
 80249c8:	0858      	lsrs	r0, r3, #1
 80249ca:	07dd      	lsls	r5, r3, #31
 80249cc:	5c38      	ldrb	r0, [r7, r0]
 80249ce:	bf54      	ite	pl
 80249d0:	f000 000f 	andpl.w	r0, r0, #15
 80249d4:	1100      	asrmi	r0, r0, #4
 80249d6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80249da:	3301      	adds	r3, #1
 80249dc:	b2c0      	uxtb	r0, r0
 80249de:	900b      	str	r0, [sp, #44]	; 0x2c
 80249e0:	0858      	lsrs	r0, r3, #1
 80249e2:	07dd      	lsls	r5, r3, #31
 80249e4:	f817 e000 	ldrb.w	lr, [r7, r0]
 80249e8:	bf54      	ite	pl
 80249ea:	f00e 030f 	andpl.w	r3, lr, #15
 80249ee:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80249f2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80249f6:	b2db      	uxtb	r3, r3
 80249f8:	9311      	str	r3, [sp, #68]	; 0x44
 80249fa:	b292      	uxth	r2, r2
 80249fc:	b289      	uxth	r1, r1
 80249fe:	fb02 f301 	mul.w	r3, r2, r1
 8024a02:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024a06:	0112      	lsls	r2, r2, #4
 8024a08:	b289      	uxth	r1, r1
 8024a0a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024a0e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024a10:	1ad2      	subs	r2, r2, r3
 8024a12:	1a40      	subs	r0, r0, r1
 8024a14:	b292      	uxth	r2, r2
 8024a16:	436a      	muls	r2, r5
 8024a18:	b280      	uxth	r0, r0
 8024a1a:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024a1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024a20:	fb01 c102 	mla	r1, r1, r2, ip
 8024a24:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024a26:	fb03 1302 	mla	r3, r3, r2, r1
 8024a2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024a2e:	b1db      	cbz	r3, 8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024a30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024a32:	4353      	muls	r3, r2
 8024a34:	1c5a      	adds	r2, r3, #1
 8024a36:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024a3a:	4ac6      	ldr	r2, [pc, #792]	; (8024d54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8024a3c:	121b      	asrs	r3, r3, #8
 8024a3e:	6812      	ldr	r2, [r2, #0]
 8024a40:	2bff      	cmp	r3, #255	; 0xff
 8024a42:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024a46:	f040 8099 	bne.w	8024b7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8024a4a:	0953      	lsrs	r3, r2, #5
 8024a4c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024a50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a54:	f02c 0c07 	bic.w	ip, ip, #7
 8024a58:	ea43 0c0c 	orr.w	ip, r3, ip
 8024a5c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024a60:	ea4c 0202 	orr.w	r2, ip, r2
 8024a64:	f8a8 2000 	strh.w	r2, [r8]
 8024a68:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024a6a:	441c      	add	r4, r3
 8024a6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a6e:	441e      	add	r6, r3
 8024a70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024a72:	3b01      	subs	r3, #1
 8024a74:	f108 0802 	add.w	r8, r8, #2
 8024a78:	930e      	str	r3, [sp, #56]	; 0x38
 8024a7a:	e763      	b.n	8024944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8024a7c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024a7e:	441c      	add	r4, r3
 8024a80:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a82:	441e      	add	r6, r3
 8024a84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a86:	3b01      	subs	r3, #1
 8024a88:	9309      	str	r3, [sp, #36]	; 0x24
 8024a8a:	f109 0902 	add.w	r9, r9, #2
 8024a8e:	e737      	b.n	8024900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024a90:	d024      	beq.n	8024adc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8024a92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a94:	982b      	ldr	r0, [sp, #172]	; 0xac
 8024a96:	3b01      	subs	r3, #1
 8024a98:	fb00 4003 	mla	r0, r0, r3, r4
 8024a9c:	1400      	asrs	r0, r0, #16
 8024a9e:	f53f af4c 	bmi.w	802493a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024aa2:	3901      	subs	r1, #1
 8024aa4:	4288      	cmp	r0, r1
 8024aa6:	f6bf af48 	bge.w	802493a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024aaa:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024aac:	fb01 6303 	mla	r3, r1, r3, r6
 8024ab0:	141b      	asrs	r3, r3, #16
 8024ab2:	f53f af42 	bmi.w	802493a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024ab6:	3a01      	subs	r2, #1
 8024ab8:	4293      	cmp	r3, r2
 8024aba:	f6bf af3e 	bge.w	802493a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024abe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024ac2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024ac6:	930e      	str	r3, [sp, #56]	; 0x38
 8024ac8:	46c8      	mov	r8, r9
 8024aca:	f1bb 0f00 	cmp.w	fp, #0
 8024ace:	f300 80b7 	bgt.w	8024c40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8024ad2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024ad4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024ad8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024adc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024ade:	2b00      	cmp	r3, #0
 8024ae0:	f340 818d 	ble.w	8024dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8024ae4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024ae8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024aec:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8024af0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024af2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024af6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024afa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8024afe:	eef0 6a48 	vmov.f32	s13, s16
 8024b02:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024b06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b0a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8024b0e:	ee16 4a90 	vmov	r4, s13
 8024b12:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024b16:	eef0 6a68 	vmov.f32	s13, s17
 8024b1a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8024b1e:	ee18 2a10 	vmov	r2, s16
 8024b22:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024b26:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b2a:	ee18 2a90 	vmov	r2, s17
 8024b2e:	932b      	str	r3, [sp, #172]	; 0xac
 8024b30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b32:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b36:	932c      	str	r3, [sp, #176]	; 0xb0
 8024b38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024b3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024b3c:	3b01      	subs	r3, #1
 8024b3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b42:	930d      	str	r3, [sp, #52]	; 0x34
 8024b44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b46:	bf08      	it	eq
 8024b48:	4613      	moveq	r3, r2
 8024b4a:	ee16 6a90 	vmov	r6, s13
 8024b4e:	9309      	str	r3, [sp, #36]	; 0x24
 8024b50:	eef0 8a67 	vmov.f32	s17, s15
 8024b54:	eeb0 8a47 	vmov.f32	s16, s14
 8024b58:	e6c3      	b.n	80248e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8024b5a:	2900      	cmp	r1, #0
 8024b5c:	f43f af4d 	beq.w	80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024b60:	eb0a 0003 	add.w	r0, sl, r3
 8024b64:	0843      	lsrs	r3, r0, #1
 8024b66:	07c0      	lsls	r0, r0, #31
 8024b68:	5cfb      	ldrb	r3, [r7, r3]
 8024b6a:	bf54      	ite	pl
 8024b6c:	f003 030f 	andpl.w	r3, r3, #15
 8024b70:	111b      	asrmi	r3, r3, #4
 8024b72:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024b76:	b2db      	uxtb	r3, r3
 8024b78:	930b      	str	r3, [sp, #44]	; 0x2c
 8024b7a:	e73e      	b.n	80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024b7c:	f8b8 e000 	ldrh.w	lr, [r8]
 8024b80:	fa1f fb83 	uxth.w	fp, r3
 8024b84:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024b88:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024b8c:	43db      	mvns	r3, r3
 8024b8e:	b2db      	uxtb	r3, r3
 8024b90:	fb11 f10b 	smulbb	r1, r1, fp
 8024b94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024b98:	fb00 1003 	mla	r0, r0, r3, r1
 8024b9c:	fa5f fc8c 	uxtb.w	ip, ip
 8024ba0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024ba4:	b2d2      	uxtb	r2, r2
 8024ba6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024baa:	b280      	uxth	r0, r0
 8024bac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024bb0:	fb1c fc0b 	smulbb	ip, ip, fp
 8024bb4:	fa5f fe8e 	uxtb.w	lr, lr
 8024bb8:	fb12 fb0b 	smulbb	fp, r2, fp
 8024bbc:	fb01 cc03 	mla	ip, r1, r3, ip
 8024bc0:	fb0e bb03 	mla	fp, lr, r3, fp
 8024bc4:	1c43      	adds	r3, r0, #1
 8024bc6:	fa1f fc8c 	uxth.w	ip, ip
 8024bca:	fa1f fb8b 	uxth.w	fp, fp
 8024bce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bd2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024bd6:	f10c 0101 	add.w	r1, ip, #1
 8024bda:	f10b 0001 	add.w	r0, fp, #1
 8024bde:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024be2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024be6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024bea:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024bee:	4318      	orrs	r0, r3
 8024bf0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024bf4:	ea40 000c 	orr.w	r0, r0, ip
 8024bf8:	f8a8 0000 	strh.w	r0, [r8]
 8024bfc:	e734      	b.n	8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024bfe:	f113 0b01 	adds.w	fp, r3, #1
 8024c02:	f53f af31 	bmi.w	8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024c06:	45dc      	cmp	ip, fp
 8024c08:	f6ff af2e 	blt.w	8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024c0c:	f110 0b01 	adds.w	fp, r0, #1
 8024c10:	f53f af2a 	bmi.w	8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024c14:	45de      	cmp	lr, fp
 8024c16:	f6ff af27 	blt.w	8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024c1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024c1c:	9302      	str	r3, [sp, #8]
 8024c1e:	fa0f f38e 	sxth.w	r3, lr
 8024c22:	9301      	str	r3, [sp, #4]
 8024c24:	fa0f f38c 	sxth.w	r3, ip
 8024c28:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024c2c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024c30:	9300      	str	r3, [sp, #0]
 8024c32:	463a      	mov	r2, r7
 8024c34:	4653      	mov	r3, sl
 8024c36:	4641      	mov	r1, r8
 8024c38:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024c3a:	f7ff fd2b 	bl	8024694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024c3e:	e713      	b.n	8024a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024c40:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024c42:	1422      	asrs	r2, r4, #16
 8024c44:	1433      	asrs	r3, r6, #16
 8024c46:	fb05 2303 	mla	r3, r5, r3, r2
 8024c4a:	085a      	lsrs	r2, r3, #1
 8024c4c:	07dd      	lsls	r5, r3, #31
 8024c4e:	5cba      	ldrb	r2, [r7, r2]
 8024c50:	bf54      	ite	pl
 8024c52:	f002 020f 	andpl.w	r2, r2, #15
 8024c56:	1112      	asrmi	r2, r2, #4
 8024c58:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024c5c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024c60:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024c64:	b2d2      	uxtb	r2, r2
 8024c66:	2900      	cmp	r1, #0
 8024c68:	d076      	beq.n	8024d58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8024c6a:	f103 0e01 	add.w	lr, r3, #1
 8024c6e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024c72:	f01e 0f01 	tst.w	lr, #1
 8024c76:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024c7a:	bf0c      	ite	eq
 8024c7c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024c80:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024c84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024c88:	fa5f f58c 	uxtb.w	r5, ip
 8024c8c:	9512      	str	r5, [sp, #72]	; 0x48
 8024c8e:	b300      	cbz	r0, 8024cd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024c90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024c92:	442b      	add	r3, r5
 8024c94:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024c98:	07dd      	lsls	r5, r3, #31
 8024c9a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024c9e:	bf54      	ite	pl
 8024ca0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ca4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ca8:	3301      	adds	r3, #1
 8024caa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024cae:	fa5f f58c 	uxtb.w	r5, ip
 8024cb2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024cb6:	950c      	str	r5, [sp, #48]	; 0x30
 8024cb8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024cbc:	07dd      	lsls	r5, r3, #31
 8024cbe:	bf54      	ite	pl
 8024cc0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024cc4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024cc8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ccc:	fa5f f38c 	uxtb.w	r3, ip
 8024cd0:	9313      	str	r3, [sp, #76]	; 0x4c
 8024cd2:	b289      	uxth	r1, r1
 8024cd4:	b280      	uxth	r0, r0
 8024cd6:	fb01 f300 	mul.w	r3, r1, r0
 8024cda:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024cde:	0109      	lsls	r1, r1, #4
 8024ce0:	b280      	uxth	r0, r0
 8024ce2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024ce6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024ce8:	1ac9      	subs	r1, r1, r3
 8024cea:	ebac 0c00 	sub.w	ip, ip, r0
 8024cee:	b289      	uxth	r1, r1
 8024cf0:	4369      	muls	r1, r5
 8024cf2:	fa1f fc8c 	uxth.w	ip, ip
 8024cf6:	fb02 120c 	mla	r2, r2, ip, r1
 8024cfa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024cfc:	fb00 2001 	mla	r0, r0, r1, r2
 8024d00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024d02:	fb03 0302 	mla	r3, r3, r2, r0
 8024d06:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d0a:	b1d3      	cbz	r3, 8024d42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8024d0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d0e:	4353      	muls	r3, r2
 8024d10:	1c5a      	adds	r2, r3, #1
 8024d12:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024d16:	4a0f      	ldr	r2, [pc, #60]	; (8024d54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8024d18:	121b      	asrs	r3, r3, #8
 8024d1a:	6812      	ldr	r2, [r2, #0]
 8024d1c:	2bff      	cmp	r3, #255	; 0xff
 8024d1e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024d22:	d12d      	bne.n	8024d80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8024d24:	0953      	lsrs	r3, r2, #5
 8024d26:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024d2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024d2e:	f02c 0c07 	bic.w	ip, ip, #7
 8024d32:	ea43 0c0c 	orr.w	ip, r3, ip
 8024d36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024d3a:	ea4c 0202 	orr.w	r2, ip, r2
 8024d3e:	f8a8 2000 	strh.w	r2, [r8]
 8024d42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024d44:	441c      	add	r4, r3
 8024d46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d48:	f108 0802 	add.w	r8, r8, #2
 8024d4c:	441e      	add	r6, r3
 8024d4e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024d52:	e6ba      	b.n	8024aca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8024d54:	200279b8 	.word	0x200279b8
 8024d58:	2800      	cmp	r0, #0
 8024d5a:	d0ba      	beq.n	8024cd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024d5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d5e:	442b      	add	r3, r5
 8024d60:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d64:	07db      	lsls	r3, r3, #31
 8024d66:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d6a:	bf54      	ite	pl
 8024d6c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d70:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d74:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d78:	fa5f f38c 	uxtb.w	r3, ip
 8024d7c:	930c      	str	r3, [sp, #48]	; 0x30
 8024d7e:	e7a8      	b.n	8024cd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024d80:	f8b8 e000 	ldrh.w	lr, [r8]
 8024d84:	fa1f fa83 	uxth.w	sl, r3
 8024d88:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024d8c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024d90:	43db      	mvns	r3, r3
 8024d92:	b2db      	uxtb	r3, r3
 8024d94:	fb11 f10a 	smulbb	r1, r1, sl
 8024d98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024d9c:	fb00 1003 	mla	r0, r0, r3, r1
 8024da0:	b2d2      	uxtb	r2, r2
 8024da2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024da6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024daa:	fa5f fe8e 	uxtb.w	lr, lr
 8024dae:	fb12 f20a 	smulbb	r2, r2, sl
 8024db2:	fb0e 2203 	mla	r2, lr, r3, r2
 8024db6:	fa5f fc8c 	uxtb.w	ip, ip
 8024dba:	b280      	uxth	r0, r0
 8024dbc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024dc0:	b292      	uxth	r2, r2
 8024dc2:	fb1c fc0a 	smulbb	ip, ip, sl
 8024dc6:	fb01 cc03 	mla	ip, r1, r3, ip
 8024dca:	1c43      	adds	r3, r0, #1
 8024dcc:	1c51      	adds	r1, r2, #1
 8024dce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024dd2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024dd6:	fa1f fc8c 	uxth.w	ip, ip
 8024dda:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024dde:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024de2:	4308      	orrs	r0, r1
 8024de4:	f10c 0101 	add.w	r1, ip, #1
 8024de8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024dec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024df0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024df4:	ea40 000c 	orr.w	r0, r0, ip
 8024df8:	f8a8 0000 	strh.w	r0, [r8]
 8024dfc:	e7a1      	b.n	8024d42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8024dfe:	b017      	add	sp, #92	; 0x5c
 8024e00:	ecbd 8b08 	vpop	{d8-d11}
 8024e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024e08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024e0c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8024e10:	2c00      	cmp	r4, #0
 8024e12:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024e16:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024e1a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8024e1e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8024e22:	fb04 ce03 	mla	lr, r4, r3, ip
 8024e26:	db60      	blt.n	8024eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8024e28:	45a1      	cmp	r9, r4
 8024e2a:	dd5e      	ble.n	8024eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8024e2c:	f1bc 0f00 	cmp.w	ip, #0
 8024e30:	db59      	blt.n	8024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8024e32:	45e0      	cmp	r8, ip
 8024e34:	dd57      	ble.n	8024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8024e36:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8024e3a:	f01e 0f01 	tst.w	lr, #1
 8024e3e:	5c16      	ldrb	r6, [r2, r0]
 8024e40:	bf0c      	ite	eq
 8024e42:	f006 060f 	andeq.w	r6, r6, #15
 8024e46:	1136      	asrne	r6, r6, #4
 8024e48:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024e4c:	b2f6      	uxtb	r6, r6
 8024e4e:	f11c 0001 	adds.w	r0, ip, #1
 8024e52:	d44d      	bmi.n	8024ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8024e54:	4580      	cmp	r8, r0
 8024e56:	dd4b      	ble.n	8024ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8024e58:	2d00      	cmp	r5, #0
 8024e5a:	d04b      	beq.n	8024ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8024e5c:	f10e 0a01 	add.w	sl, lr, #1
 8024e60:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8024e64:	f01a 0f01 	tst.w	sl, #1
 8024e68:	5c10      	ldrb	r0, [r2, r0]
 8024e6a:	bf0c      	ite	eq
 8024e6c:	f000 000f 	andeq.w	r0, r0, #15
 8024e70:	1100      	asrne	r0, r0, #4
 8024e72:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024e76:	b2c0      	uxtb	r0, r0
 8024e78:	3401      	adds	r4, #1
 8024e7a:	d43f      	bmi.n	8024efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8024e7c:	45a1      	cmp	r9, r4
 8024e7e:	dd3d      	ble.n	8024efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8024e80:	2f00      	cmp	r7, #0
 8024e82:	f000 8093 	beq.w	8024fac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024e86:	f1bc 0f00 	cmp.w	ip, #0
 8024e8a:	db35      	blt.n	8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8024e8c:	45e0      	cmp	r8, ip
 8024e8e:	dd33      	ble.n	8024ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8024e90:	eb03 090e 	add.w	r9, r3, lr
 8024e94:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8024e98:	f019 0f01 	tst.w	r9, #1
 8024e9c:	5d14      	ldrb	r4, [r2, r4]
 8024e9e:	bf0c      	ite	eq
 8024ea0:	f004 040f 	andeq.w	r4, r4, #15
 8024ea4:	1124      	asrne	r4, r4, #4
 8024ea6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024eaa:	b2e4      	uxtb	r4, r4
 8024eac:	f11c 0c01 	adds.w	ip, ip, #1
 8024eb0:	d427      	bmi.n	8024f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8024eb2:	45e0      	cmp	r8, ip
 8024eb4:	dd25      	ble.n	8024f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8024eb6:	b335      	cbz	r5, 8024f06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8024eb8:	3301      	adds	r3, #1
 8024eba:	449e      	add	lr, r3
 8024ebc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024ec0:	f01e 0f01 	tst.w	lr, #1
 8024ec4:	5cd2      	ldrb	r2, [r2, r3]
 8024ec6:	bf0c      	ite	eq
 8024ec8:	f002 020f 	andeq.w	r2, r2, #15
 8024ecc:	1112      	asrne	r2, r2, #4
 8024ece:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024ed2:	b2d3      	uxtb	r3, r2
 8024ed4:	2d0f      	cmp	r5, #15
 8024ed6:	d917      	bls.n	8024f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8024ed8:	4b37      	ldr	r3, [pc, #220]	; (8024fb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8024eda:	4a38      	ldr	r2, [pc, #224]	; (8024fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8024edc:	4838      	ldr	r0, [pc, #224]	; (8024fc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8024ede:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8024ee2:	f000 fc6d 	bl	80257c0 <__assert_func>
 8024ee6:	2600      	movs	r6, #0
 8024ee8:	e7b1      	b.n	8024e4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8024eea:	2000      	movs	r0, #0
 8024eec:	4606      	mov	r6, r0
 8024eee:	e7c3      	b.n	8024e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8024ef0:	2000      	movs	r0, #0
 8024ef2:	e7c1      	b.n	8024e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8024ef4:	4628      	mov	r0, r5
 8024ef6:	e7bf      	b.n	8024e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8024ef8:	2400      	movs	r4, #0
 8024efa:	e7d7      	b.n	8024eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8024efc:	2300      	movs	r3, #0
 8024efe:	461c      	mov	r4, r3
 8024f00:	e7e8      	b.n	8024ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8024f02:	2300      	movs	r3, #0
 8024f04:	e7e6      	b.n	8024ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8024f06:	462b      	mov	r3, r5
 8024f08:	2f0f      	cmp	r7, #15
 8024f0a:	d8e5      	bhi.n	8024ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8024f0c:	b2ad      	uxth	r5, r5
 8024f0e:	b2bf      	uxth	r7, r7
 8024f10:	fb05 fc07 	mul.w	ip, r5, r7
 8024f14:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8024f18:	012d      	lsls	r5, r5, #4
 8024f1a:	b2bf      	uxth	r7, r7
 8024f1c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8024f20:	eba5 050c 	sub.w	r5, r5, ip
 8024f24:	1bd2      	subs	r2, r2, r7
 8024f26:	b2ad      	uxth	r5, r5
 8024f28:	b292      	uxth	r2, r2
 8024f2a:	4368      	muls	r0, r5
 8024f2c:	fb06 0002 	mla	r0, r6, r2, r0
 8024f30:	fb07 0404 	mla	r4, r7, r4, r0
 8024f34:	fb0c 4303 	mla	r3, ip, r3, r4
 8024f38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f3c:	b3a3      	cbz	r3, 8024fa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f3e:	4a21      	ldr	r2, [pc, #132]	; (8024fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8024f40:	880e      	ldrh	r6, [r1, #0]
 8024f42:	6815      	ldr	r5, [r2, #0]
 8024f44:	1234      	asrs	r4, r6, #8
 8024f46:	b29a      	uxth	r2, r3
 8024f48:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024f4c:	43db      	mvns	r3, r3
 8024f4e:	b2db      	uxtb	r3, r3
 8024f50:	fb10 f002 	smulbb	r0, r0, r2
 8024f54:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024f58:	fb04 0403 	mla	r4, r4, r3, r0
 8024f5c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024f60:	10f0      	asrs	r0, r6, #3
 8024f62:	b2ed      	uxtb	r5, r5
 8024f64:	00f6      	lsls	r6, r6, #3
 8024f66:	fb17 f702 	smulbb	r7, r7, r2
 8024f6a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024f6e:	fb15 f202 	smulbb	r2, r5, r2
 8024f72:	b2f6      	uxtb	r6, r6
 8024f74:	b2a4      	uxth	r4, r4
 8024f76:	fb00 7003 	mla	r0, r0, r3, r7
 8024f7a:	fb06 2303 	mla	r3, r6, r3, r2
 8024f7e:	b29a      	uxth	r2, r3
 8024f80:	1c63      	adds	r3, r4, #1
 8024f82:	b280      	uxth	r0, r0
 8024f84:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024f88:	1c53      	adds	r3, r2, #1
 8024f8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024f8e:	1c42      	adds	r2, r0, #1
 8024f90:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f94:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024f98:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024f9c:	0940      	lsrs	r0, r0, #5
 8024f9e:	4323      	orrs	r3, r4
 8024fa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024fa4:	4303      	orrs	r3, r0
 8024fa6:	800b      	strh	r3, [r1, #0]
 8024fa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024fac:	2d0f      	cmp	r5, #15
 8024fae:	d893      	bhi.n	8024ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8024fb0:	463b      	mov	r3, r7
 8024fb2:	463c      	mov	r4, r7
 8024fb4:	e7aa      	b.n	8024f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8024fb6:	bf00      	nop
 8024fb8:	0802b1ee 	.word	0x0802b1ee
 8024fbc:	0802b7be 	.word	0x0802b7be
 8024fc0:	0802b272 	.word	0x0802b272
 8024fc4:	200279b8 	.word	0x200279b8

08024fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024fcc:	ed2d 8b08 	vpush	{d8-d11}
 8024fd0:	b093      	sub	sp, #76	; 0x4c
 8024fd2:	461d      	mov	r5, r3
 8024fd4:	920c      	str	r2, [sp, #48]	; 0x30
 8024fd6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024fd8:	9107      	str	r1, [sp, #28]
 8024fda:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024fde:	9011      	str	r0, [sp, #68]	; 0x44
 8024fe0:	6850      	ldr	r0, [r2, #4]
 8024fe2:	6812      	ldr	r2, [r2, #0]
 8024fe4:	fb00 1303 	mla	r3, r0, r3, r1
 8024fe8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024fec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024fee:	689b      	ldr	r3, [r3, #8]
 8024ff0:	3301      	adds	r3, #1
 8024ff2:	f023 0301 	bic.w	r3, r3, #1
 8024ff6:	9306      	str	r3, [sp, #24]
 8024ff8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024ffa:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024ffe:	681f      	ldr	r7, [r3, #0]
 8025000:	eeb0 aa40 	vmov.f32	s20, s0
 8025004:	eef0 9a60 	vmov.f32	s19, s1
 8025008:	eeb0 9a41 	vmov.f32	s18, s2
 802500c:	eeb0 8a62 	vmov.f32	s16, s5
 8025010:	eef0 8a43 	vmov.f32	s17, s6
 8025014:	eef0 ba44 	vmov.f32	s23, s8
 8025018:	eeb0 ba64 	vmov.f32	s22, s9
 802501c:	eef0 aa45 	vmov.f32	s21, s10
 8025020:	9b07      	ldr	r3, [sp, #28]
 8025022:	2b00      	cmp	r3, #0
 8025024:	dc03      	bgt.n	802502e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025026:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025028:	2b00      	cmp	r3, #0
 802502a:	f340 8267 	ble.w	80254fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 802502e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025030:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025034:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025038:	1e48      	subs	r0, r1, #1
 802503a:	f102 3cff 	add.w	ip, r2, #4294967295
 802503e:	2d00      	cmp	r5, #0
 8025040:	f340 80b8 	ble.w	80251b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8025044:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025048:	ea4f 4326 	mov.w	r3, r6, asr #16
 802504c:	d406      	bmi.n	802505c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802504e:	4586      	cmp	lr, r0
 8025050:	da04      	bge.n	802505c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025052:	2b00      	cmp	r3, #0
 8025054:	db02      	blt.n	802505c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025056:	4563      	cmp	r3, ip
 8025058:	f2c0 80ad 	blt.w	80251b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802505c:	f11e 0e01 	adds.w	lr, lr, #1
 8025060:	f100 80a0 	bmi.w	80251a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8025064:	4571      	cmp	r1, lr
 8025066:	f2c0 809d 	blt.w	80251a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802506a:	3301      	adds	r3, #1
 802506c:	f100 809a 	bmi.w	80251a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8025070:	429a      	cmp	r2, r3
 8025072:	f2c0 8097 	blt.w	80251a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8025076:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802507a:	9509      	str	r5, [sp, #36]	; 0x24
 802507c:	46c8      	mov	r8, r9
 802507e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025080:	2b00      	cmp	r3, #0
 8025082:	f340 80b6 	ble.w	80251f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025086:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802508a:	9308      	str	r3, [sp, #32]
 802508c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802508e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025092:	1423      	asrs	r3, r4, #16
 8025094:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025098:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802509c:	f100 813e 	bmi.w	802531c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80250a0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80250a4:	455b      	cmp	r3, fp
 80250a6:	f280 8139 	bge.w	802531c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80250aa:	2800      	cmp	r0, #0
 80250ac:	f2c0 8136 	blt.w	802531c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80250b0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80250b4:	4558      	cmp	r0, fp
 80250b6:	f280 8131 	bge.w	802531c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80250ba:	9a06      	ldr	r2, [sp, #24]
 80250bc:	fb00 3302 	mla	r3, r0, r2, r3
 80250c0:	0858      	lsrs	r0, r3, #1
 80250c2:	07da      	lsls	r2, r3, #31
 80250c4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80250c8:	9a08      	ldr	r2, [sp, #32]
 80250ca:	bf54      	ite	pl
 80250cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80250d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80250d4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80250d8:	fa5f fc8c 	uxtb.w	ip, ip
 80250dc:	2a00      	cmp	r2, #0
 80250de:	f000 80cb 	beq.w	8025278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80250e2:	1c58      	adds	r0, r3, #1
 80250e4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80250e8:	07c0      	lsls	r0, r0, #31
 80250ea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80250ee:	bf54      	ite	pl
 80250f0:	f00e 0e0f 	andpl.w	lr, lr, #15
 80250f4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80250f8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80250fc:	fa5f fe8e 	uxtb.w	lr, lr
 8025100:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025104:	b1b9      	cbz	r1, 8025136 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8025106:	4453      	add	r3, sl
 8025108:	0858      	lsrs	r0, r3, #1
 802510a:	07da      	lsls	r2, r3, #31
 802510c:	5c38      	ldrb	r0, [r7, r0]
 802510e:	bf54      	ite	pl
 8025110:	f000 000f 	andpl.w	r0, r0, #15
 8025114:	1100      	asrmi	r0, r0, #4
 8025116:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802511a:	b2c0      	uxtb	r0, r0
 802511c:	900a      	str	r0, [sp, #40]	; 0x28
 802511e:	1c58      	adds	r0, r3, #1
 8025120:	0843      	lsrs	r3, r0, #1
 8025122:	07c2      	lsls	r2, r0, #31
 8025124:	5cfb      	ldrb	r3, [r7, r3]
 8025126:	bf54      	ite	pl
 8025128:	f003 030f 	andpl.w	r3, r3, #15
 802512c:	111b      	asrmi	r3, r3, #4
 802512e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025132:	b2db      	uxtb	r3, r3
 8025134:	930e      	str	r3, [sp, #56]	; 0x38
 8025136:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802513a:	b289      	uxth	r1, r1
 802513c:	fb02 f301 	mul.w	r3, r2, r1
 8025140:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025144:	0112      	lsls	r2, r2, #4
 8025146:	b289      	uxth	r1, r1
 8025148:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802514c:	1a40      	subs	r0, r0, r1
 802514e:	fa1f fe80 	uxth.w	lr, r0
 8025152:	1ad2      	subs	r2, r2, r3
 8025154:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025156:	b292      	uxth	r2, r2
 8025158:	4342      	muls	r2, r0
 802515a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802515e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025160:	fb01 c102 	mla	r1, r1, r2, ip
 8025164:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025166:	fb03 1302 	mla	r3, r3, r2, r1
 802516a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802516e:	2bff      	cmp	r3, #255	; 0xff
 8025170:	f040 8093 	bne.w	802529a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8025174:	4bbe      	ldr	r3, [pc, #760]	; (8025470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8025176:	681a      	ldr	r2, [r3, #0]
 8025178:	4bbe      	ldr	r3, [pc, #760]	; (8025474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802517a:	0951      	lsrs	r1, r2, #5
 802517c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025180:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025184:	430b      	orrs	r3, r1
 8025186:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802518a:	4313      	orrs	r3, r2
 802518c:	f8a8 3000 	strh.w	r3, [r8]
 8025190:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025192:	441c      	add	r4, r3
 8025194:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025196:	441e      	add	r6, r3
 8025198:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802519a:	3b01      	subs	r3, #1
 802519c:	f108 0802 	add.w	r8, r8, #2
 80251a0:	9309      	str	r3, [sp, #36]	; 0x24
 80251a2:	e76c      	b.n	802507e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80251a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80251a6:	441c      	add	r4, r3
 80251a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80251aa:	3d01      	subs	r5, #1
 80251ac:	441e      	add	r6, r3
 80251ae:	f109 0902 	add.w	r9, r9, #2
 80251b2:	e744      	b.n	802503e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80251b4:	d021      	beq.n	80251fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80251b6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80251b8:	1e6b      	subs	r3, r5, #1
 80251ba:	fb00 4003 	mla	r0, r0, r3, r4
 80251be:	1400      	asrs	r0, r0, #16
 80251c0:	f53f af59 	bmi.w	8025076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80251c4:	3901      	subs	r1, #1
 80251c6:	4288      	cmp	r0, r1
 80251c8:	f6bf af55 	bge.w	8025076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80251cc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80251ce:	fb01 6303 	mla	r3, r1, r3, r6
 80251d2:	141b      	asrs	r3, r3, #16
 80251d4:	f53f af4f 	bmi.w	8025076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80251d8:	3a01      	subs	r2, #1
 80251da:	4293      	cmp	r3, r2
 80251dc:	f6bf af4b 	bge.w	8025076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80251e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80251e4:	9308      	str	r3, [sp, #32]
 80251e6:	46a8      	mov	r8, r5
 80251e8:	46ce      	mov	lr, r9
 80251ea:	f1b8 0f00 	cmp.w	r8, #0
 80251ee:	f300 80b5 	bgt.w	802535c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80251f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80251f6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80251fa:	9b07      	ldr	r3, [sp, #28]
 80251fc:	2b00      	cmp	r3, #0
 80251fe:	f340 817d 	ble.w	80254fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8025202:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8025206:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802520a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802520e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025210:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8025214:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8025218:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802521c:	eef0 6a48 	vmov.f32	s13, s16
 8025220:	ee69 7a27 	vmul.f32	s15, s18, s15
 8025224:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025228:	ee37 8a48 	vsub.f32	s16, s14, s16
 802522c:	ee16 4a90 	vmov	r4, s13
 8025230:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8025234:	eef0 6a68 	vmov.f32	s13, s17
 8025238:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802523c:	ee18 2a10 	vmov	r2, s16
 8025240:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8025244:	fb92 f3f3 	sdiv	r3, r2, r3
 8025248:	ee18 2a90 	vmov	r2, s17
 802524c:	9327      	str	r3, [sp, #156]	; 0x9c
 802524e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025250:	fb92 f3f3 	sdiv	r3, r2, r3
 8025254:	9328      	str	r3, [sp, #160]	; 0xa0
 8025256:	9b07      	ldr	r3, [sp, #28]
 8025258:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802525a:	3b01      	subs	r3, #1
 802525c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025260:	9307      	str	r3, [sp, #28]
 8025262:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025264:	ee16 6a90 	vmov	r6, s13
 8025268:	bf14      	ite	ne
 802526a:	461d      	movne	r5, r3
 802526c:	4615      	moveq	r5, r2
 802526e:	eef0 8a67 	vmov.f32	s17, s15
 8025272:	eeb0 8a47 	vmov.f32	s16, s14
 8025276:	e6d3      	b.n	8025020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025278:	2900      	cmp	r1, #0
 802527a:	f43f af5c 	beq.w	8025136 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802527e:	eb0a 0003 	add.w	r0, sl, r3
 8025282:	0843      	lsrs	r3, r0, #1
 8025284:	07c0      	lsls	r0, r0, #31
 8025286:	5cfb      	ldrb	r3, [r7, r3]
 8025288:	bf54      	ite	pl
 802528a:	f003 030f 	andpl.w	r3, r3, #15
 802528e:	111b      	asrmi	r3, r3, #4
 8025290:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025294:	b2db      	uxtb	r3, r3
 8025296:	930a      	str	r3, [sp, #40]	; 0x28
 8025298:	e74d      	b.n	8025136 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802529a:	2b00      	cmp	r3, #0
 802529c:	f43f af78 	beq.w	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80252a0:	4a73      	ldr	r2, [pc, #460]	; (8025470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80252a2:	f8b8 c000 	ldrh.w	ip, [r8]
 80252a6:	6810      	ldr	r0, [r2, #0]
 80252a8:	fa1f fe83 	uxth.w	lr, r3
 80252ac:	ea4f 212c 	mov.w	r1, ip, asr #8
 80252b0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80252b4:	43db      	mvns	r3, r3
 80252b6:	b2db      	uxtb	r3, r3
 80252b8:	fb12 f20e 	smulbb	r2, r2, lr
 80252bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80252c0:	fb01 2103 	mla	r1, r1, r3, r2
 80252c4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80252c8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80252cc:	b2c0      	uxtb	r0, r0
 80252ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80252d2:	fb1b fb0e 	smulbb	fp, fp, lr
 80252d6:	b289      	uxth	r1, r1
 80252d8:	fb10 fe0e 	smulbb	lr, r0, lr
 80252dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80252e0:	fa5f fc8c 	uxtb.w	ip, ip
 80252e4:	fb02 b203 	mla	r2, r2, r3, fp
 80252e8:	1c48      	adds	r0, r1, #1
 80252ea:	fb0c e303 	mla	r3, ip, r3, lr
 80252ee:	b292      	uxth	r2, r2
 80252f0:	b29b      	uxth	r3, r3
 80252f2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80252f6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80252fa:	f102 0b01 	add.w	fp, r2, #1
 80252fe:	1c59      	adds	r1, r3, #1
 8025300:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025304:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025308:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802530c:	0952      	lsrs	r2, r2, #5
 802530e:	4301      	orrs	r1, r0
 8025310:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025314:	4311      	orrs	r1, r2
 8025316:	f8a8 1000 	strh.w	r1, [r8]
 802531a:	e739      	b.n	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802531c:	f113 0b01 	adds.w	fp, r3, #1
 8025320:	f53f af36 	bmi.w	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025324:	45dc      	cmp	ip, fp
 8025326:	f6ff af33 	blt.w	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802532a:	f110 0b01 	adds.w	fp, r0, #1
 802532e:	f53f af2f 	bmi.w	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025332:	45de      	cmp	lr, fp
 8025334:	f6ff af2c 	blt.w	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025338:	9a08      	ldr	r2, [sp, #32]
 802533a:	9302      	str	r3, [sp, #8]
 802533c:	fa0f f38e 	sxth.w	r3, lr
 8025340:	9301      	str	r3, [sp, #4]
 8025342:	fa0f f38c 	sxth.w	r3, ip
 8025346:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802534a:	9105      	str	r1, [sp, #20]
 802534c:	9300      	str	r3, [sp, #0]
 802534e:	463a      	mov	r2, r7
 8025350:	4653      	mov	r3, sl
 8025352:	4641      	mov	r1, r8
 8025354:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025356:	f7ff fd57 	bl	8024e08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802535a:	e719      	b.n	8025190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802535c:	9906      	ldr	r1, [sp, #24]
 802535e:	1422      	asrs	r2, r4, #16
 8025360:	1433      	asrs	r3, r6, #16
 8025362:	fb01 2303 	mla	r3, r1, r3, r2
 8025366:	085a      	lsrs	r2, r3, #1
 8025368:	07d9      	lsls	r1, r3, #31
 802536a:	5cba      	ldrb	r2, [r7, r2]
 802536c:	bf54      	ite	pl
 802536e:	f002 020f 	andpl.w	r2, r2, #15
 8025372:	1112      	asrmi	r2, r2, #4
 8025374:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025378:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802537c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025380:	b2d2      	uxtb	r2, r2
 8025382:	2800      	cmp	r0, #0
 8025384:	d062      	beq.n	802544c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8025386:	f103 0a01 	add.w	sl, r3, #1
 802538a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802538e:	f01a 0f01 	tst.w	sl, #1
 8025392:	5c79      	ldrb	r1, [r7, r1]
 8025394:	bf0c      	ite	eq
 8025396:	f001 010f 	andeq.w	r1, r1, #15
 802539a:	1109      	asrne	r1, r1, #4
 802539c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80253a0:	b2c9      	uxtb	r1, r1
 80253a2:	910f      	str	r1, [sp, #60]	; 0x3c
 80253a4:	f1bc 0f00 	cmp.w	ip, #0
 80253a8:	d019      	beq.n	80253de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 80253aa:	9908      	ldr	r1, [sp, #32]
 80253ac:	440b      	add	r3, r1
 80253ae:	0859      	lsrs	r1, r3, #1
 80253b0:	f013 0f01 	tst.w	r3, #1
 80253b4:	5c79      	ldrb	r1, [r7, r1]
 80253b6:	bf0c      	ite	eq
 80253b8:	f001 010f 	andeq.w	r1, r1, #15
 80253bc:	1109      	asrne	r1, r1, #4
 80253be:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80253c2:	b2c9      	uxtb	r1, r1
 80253c4:	3301      	adds	r3, #1
 80253c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80253c8:	0859      	lsrs	r1, r3, #1
 80253ca:	07db      	lsls	r3, r3, #31
 80253cc:	5c79      	ldrb	r1, [r7, r1]
 80253ce:	bf54      	ite	pl
 80253d0:	f001 010f 	andpl.w	r1, r1, #15
 80253d4:	1109      	asrmi	r1, r1, #4
 80253d6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80253da:	b2c9      	uxtb	r1, r1
 80253dc:	9110      	str	r1, [sp, #64]	; 0x40
 80253de:	b280      	uxth	r0, r0
 80253e0:	fa1f fc8c 	uxth.w	ip, ip
 80253e4:	fb00 f30c 	mul.w	r3, r0, ip
 80253e8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80253ec:	0100      	lsls	r0, r0, #4
 80253ee:	fa1f fc8c 	uxth.w	ip, ip
 80253f2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80253f6:	eba1 010c 	sub.w	r1, r1, ip
 80253fa:	fa1f fa81 	uxth.w	sl, r1
 80253fe:	1ac0      	subs	r0, r0, r3
 8025400:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025402:	b280      	uxth	r0, r0
 8025404:	4348      	muls	r0, r1
 8025406:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8025408:	fb02 020a 	mla	r2, r2, sl, r0
 802540c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025410:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025412:	fb03 c302 	mla	r3, r3, r2, ip
 8025416:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802541a:	2bff      	cmp	r3, #255	; 0xff
 802541c:	d12c      	bne.n	8025478 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802541e:	4b14      	ldr	r3, [pc, #80]	; (8025470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8025420:	681a      	ldr	r2, [r3, #0]
 8025422:	4b14      	ldr	r3, [pc, #80]	; (8025474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025424:	0951      	lsrs	r1, r2, #5
 8025426:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802542a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802542e:	430b      	orrs	r3, r1
 8025430:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025434:	4313      	orrs	r3, r2
 8025436:	f8ae 3000 	strh.w	r3, [lr]
 802543a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802543c:	441c      	add	r4, r3
 802543e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025440:	f10e 0e02 	add.w	lr, lr, #2
 8025444:	441e      	add	r6, r3
 8025446:	f108 38ff 	add.w	r8, r8, #4294967295
 802544a:	e6ce      	b.n	80251ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802544c:	f1bc 0f00 	cmp.w	ip, #0
 8025450:	d0c5      	beq.n	80253de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8025452:	9908      	ldr	r1, [sp, #32]
 8025454:	440b      	add	r3, r1
 8025456:	0859      	lsrs	r1, r3, #1
 8025458:	07db      	lsls	r3, r3, #31
 802545a:	5c79      	ldrb	r1, [r7, r1]
 802545c:	bf54      	ite	pl
 802545e:	f001 010f 	andpl.w	r1, r1, #15
 8025462:	1109      	asrmi	r1, r1, #4
 8025464:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025468:	b2c9      	uxtb	r1, r1
 802546a:	910b      	str	r1, [sp, #44]	; 0x2c
 802546c:	e7b7      	b.n	80253de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802546e:	bf00      	nop
 8025470:	200279b8 	.word	0x200279b8
 8025474:	fffff800 	.word	0xfffff800
 8025478:	2b00      	cmp	r3, #0
 802547a:	d0de      	beq.n	802543a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802547c:	4a22      	ldr	r2, [pc, #136]	; (8025508 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 802547e:	f8be c000 	ldrh.w	ip, [lr]
 8025482:	6810      	ldr	r0, [r2, #0]
 8025484:	fa1f fa83 	uxth.w	sl, r3
 8025488:	ea4f 212c 	mov.w	r1, ip, asr #8
 802548c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025490:	43db      	mvns	r3, r3
 8025492:	b2db      	uxtb	r3, r3
 8025494:	fb12 f20a 	smulbb	r2, r2, sl
 8025498:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802549c:	fb01 2103 	mla	r1, r1, r3, r2
 80254a0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80254a4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80254a8:	b2c0      	uxtb	r0, r0
 80254aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80254ae:	fa5f fc8c 	uxtb.w	ip, ip
 80254b2:	fb10 f00a 	smulbb	r0, r0, sl
 80254b6:	fb0c 0003 	mla	r0, ip, r3, r0
 80254ba:	b289      	uxth	r1, r1
 80254bc:	fb1b fb0a 	smulbb	fp, fp, sl
 80254c0:	b280      	uxth	r0, r0
 80254c2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80254c6:	fb02 b203 	mla	r2, r2, r3, fp
 80254ca:	1c4b      	adds	r3, r1, #1
 80254cc:	f100 0b01 	add.w	fp, r0, #1
 80254d0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80254d4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80254d8:	b292      	uxth	r2, r2
 80254da:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80254de:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80254e2:	ea4b 0101 	orr.w	r1, fp, r1
 80254e6:	f102 0b01 	add.w	fp, r2, #1
 80254ea:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80254ee:	0952      	lsrs	r2, r2, #5
 80254f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254f4:	4311      	orrs	r1, r2
 80254f6:	f8ae 1000 	strh.w	r1, [lr]
 80254fa:	e79e      	b.n	802543a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80254fc:	b013      	add	sp, #76	; 0x4c
 80254fe:	ecbd 8b08 	vpop	{d8-d11}
 8025502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025506:	bf00      	nop
 8025508:	200279b8 	.word	0x200279b8

0802550c <CRC_Lock>:
 802550c:	b530      	push	{r4, r5, lr}
 802550e:	4a20      	ldr	r2, [pc, #128]	; (8025590 <CRC_Lock+0x84>)
 8025510:	6813      	ldr	r3, [r2, #0]
 8025512:	f023 0301 	bic.w	r3, r3, #1
 8025516:	6013      	str	r3, [r2, #0]
 8025518:	4b1e      	ldr	r3, [pc, #120]	; (8025594 <CRC_Lock+0x88>)
 802551a:	681a      	ldr	r2, [r3, #0]
 802551c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025520:	4022      	ands	r2, r4
 8025522:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025526:	42aa      	cmp	r2, r5
 8025528:	d005      	beq.n	8025536 <CRC_Lock+0x2a>
 802552a:	681b      	ldr	r3, [r3, #0]
 802552c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025530:	4023      	ands	r3, r4
 8025532:	4293      	cmp	r3, r2
 8025534:	d124      	bne.n	8025580 <CRC_Lock+0x74>
 8025536:	4b18      	ldr	r3, [pc, #96]	; (8025598 <CRC_Lock+0x8c>)
 8025538:	681b      	ldr	r3, [r3, #0]
 802553a:	bb0b      	cbnz	r3, 8025580 <CRC_Lock+0x74>
 802553c:	4b17      	ldr	r3, [pc, #92]	; (802559c <CRC_Lock+0x90>)
 802553e:	681a      	ldr	r2, [r3, #0]
 8025540:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025544:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025548:	d00d      	beq.n	8025566 <CRC_Lock+0x5a>
 802554a:	681a      	ldr	r2, [r3, #0]
 802554c:	f240 4483 	movw	r4, #1155	; 0x483
 8025550:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025554:	42a2      	cmp	r2, r4
 8025556:	d006      	beq.n	8025566 <CRC_Lock+0x5a>
 8025558:	681b      	ldr	r3, [r3, #0]
 802555a:	f240 4285 	movw	r2, #1157	; 0x485
 802555e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025562:	4293      	cmp	r3, r2
 8025564:	d10c      	bne.n	8025580 <CRC_Lock+0x74>
 8025566:	4b0e      	ldr	r3, [pc, #56]	; (80255a0 <CRC_Lock+0x94>)
 8025568:	2201      	movs	r2, #1
 802556a:	601a      	str	r2, [r3, #0]
 802556c:	681a      	ldr	r2, [r3, #0]
 802556e:	2a00      	cmp	r2, #0
 8025570:	d1fc      	bne.n	802556c <CRC_Lock+0x60>
 8025572:	4b0c      	ldr	r3, [pc, #48]	; (80255a4 <CRC_Lock+0x98>)
 8025574:	6018      	str	r0, [r3, #0]
 8025576:	6818      	ldr	r0, [r3, #0]
 8025578:	1a43      	subs	r3, r0, r1
 802557a:	4258      	negs	r0, r3
 802557c:	4158      	adcs	r0, r3
 802557e:	bd30      	pop	{r4, r5, pc}
 8025580:	4b09      	ldr	r3, [pc, #36]	; (80255a8 <CRC_Lock+0x9c>)
 8025582:	2201      	movs	r2, #1
 8025584:	601a      	str	r2, [r3, #0]
 8025586:	681a      	ldr	r2, [r3, #0]
 8025588:	2a00      	cmp	r2, #0
 802558a:	d1fc      	bne.n	8025586 <CRC_Lock+0x7a>
 802558c:	4b07      	ldr	r3, [pc, #28]	; (80255ac <CRC_Lock+0xa0>)
 802558e:	e7f1      	b.n	8025574 <CRC_Lock+0x68>
 8025590:	e0002000 	.word	0xe0002000
 8025594:	e000ed00 	.word	0xe000ed00
 8025598:	e0042000 	.word	0xe0042000
 802559c:	5c001000 	.word	0x5c001000
 80255a0:	58024c08 	.word	0x58024c08
 80255a4:	58024c00 	.word	0x58024c00
 80255a8:	40023008 	.word	0x40023008
 80255ac:	40023000 	.word	0x40023000

080255b0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80255b0:	6101      	str	r1, [r0, #16]
 80255b2:	4770      	bx	lr

080255b4 <_ZN8touchgfx8Gestures4tickEv>:
 80255b4:	7b83      	ldrb	r3, [r0, #14]
 80255b6:	b14b      	cbz	r3, 80255cc <_ZN8touchgfx8Gestures4tickEv+0x18>
 80255b8:	8903      	ldrh	r3, [r0, #8]
 80255ba:	3301      	adds	r3, #1
 80255bc:	b29b      	uxth	r3, r3
 80255be:	2b07      	cmp	r3, #7
 80255c0:	8103      	strh	r3, [r0, #8]
 80255c2:	bf81      	itttt	hi
 80255c4:	2300      	movhi	r3, #0
 80255c6:	8143      	strhhi	r3, [r0, #10]
 80255c8:	8183      	strhhi	r3, [r0, #12]
 80255ca:	7383      	strbhi	r3, [r0, #14]
 80255cc:	4770      	bx	lr
	...

080255d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80255d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80255d4:	4604      	mov	r4, r0
 80255d6:	8880      	ldrh	r0, [r0, #4]
 80255d8:	f8ad 0006 	strh.w	r0, [sp, #6]
 80255dc:	4698      	mov	r8, r3
 80255de:	eba8 0000 	sub.w	r0, r8, r0
 80255e2:	4b1c      	ldr	r3, [pc, #112]	; (8025654 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 80255e4:	9300      	str	r3, [sp, #0]
 80255e6:	b280      	uxth	r0, r0
 80255e8:	2300      	movs	r3, #0
 80255ea:	f88d 3004 	strb.w	r3, [sp, #4]
 80255ee:	b203      	sxth	r3, r0
 80255f0:	2b00      	cmp	r3, #0
 80255f2:	bfb8      	it	lt
 80255f4:	4240      	neglt	r0, r0
 80255f6:	4617      	mov	r7, r2
 80255f8:	8aa2      	ldrh	r2, [r4, #20]
 80255fa:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80255fe:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025602:	bfb8      	it	lt
 8025604:	b203      	sxthlt	r3, r0
 8025606:	460e      	mov	r6, r1
 8025608:	4293      	cmp	r3, r2
 802560a:	88e1      	ldrh	r1, [r4, #6]
 802560c:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025610:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025614:	dc08      	bgt.n	8025628 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 8025616:	1a69      	subs	r1, r5, r1
 8025618:	b289      	uxth	r1, r1
 802561a:	b20b      	sxth	r3, r1
 802561c:	2b00      	cmp	r3, #0
 802561e:	bfbc      	itt	lt
 8025620:	4249      	neglt	r1, r1
 8025622:	b20b      	sxthlt	r3, r1
 8025624:	429a      	cmp	r2, r3
 8025626:	da13      	bge.n	8025650 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 8025628:	6920      	ldr	r0, [r4, #16]
 802562a:	6803      	ldr	r3, [r0, #0]
 802562c:	4669      	mov	r1, sp
 802562e:	685b      	ldr	r3, [r3, #4]
 8025630:	4798      	blx	r3
 8025632:	eba8 0606 	sub.w	r6, r8, r6
 8025636:	2300      	movs	r3, #0
 8025638:	1bef      	subs	r7, r5, r7
 802563a:	2001      	movs	r0, #1
 802563c:	8123      	strh	r3, [r4, #8]
 802563e:	8166      	strh	r6, [r4, #10]
 8025640:	81a7      	strh	r7, [r4, #12]
 8025642:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025646:	80e5      	strh	r5, [r4, #6]
 8025648:	73a0      	strb	r0, [r4, #14]
 802564a:	b004      	add	sp, #16
 802564c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025650:	2000      	movs	r0, #0
 8025652:	e7fa      	b.n	802564a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8025654:	0802a6c0 	.word	0x0802a6c0

08025658 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025658:	b5f0      	push	{r4, r5, r6, r7, lr}
 802565a:	461e      	mov	r6, r3
 802565c:	1e4b      	subs	r3, r1, #1
 802565e:	2b01      	cmp	r3, #1
 8025660:	b085      	sub	sp, #20
 8025662:	4604      	mov	r4, r0
 8025664:	460d      	mov	r5, r1
 8025666:	4617      	mov	r7, r2
 8025668:	d84b      	bhi.n	8025702 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802566a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802566e:	1cd3      	adds	r3, r2, #3
 8025670:	b29b      	uxth	r3, r3
 8025672:	2b06      	cmp	r3, #6
 8025674:	d916      	bls.n	80256a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025676:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025718 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802567a:	f8cd c004 	str.w	ip, [sp, #4]
 802567e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025682:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025686:	6900      	ldr	r0, [r0, #16]
 8025688:	f8ad 100c 	strh.w	r1, [sp, #12]
 802568c:	f04f 0c00 	mov.w	ip, #0
 8025690:	f88d c008 	strb.w	ip, [sp, #8]
 8025694:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025698:	f8ad 300e 	strh.w	r3, [sp, #14]
 802569c:	6803      	ldr	r3, [r0, #0]
 802569e:	a901      	add	r1, sp, #4
 80256a0:	689b      	ldr	r3, [r3, #8]
 80256a2:	4798      	blx	r3
 80256a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80256a8:	1cd3      	adds	r3, r2, #3
 80256aa:	b29b      	uxth	r3, r3
 80256ac:	2b06      	cmp	r3, #6
 80256ae:	d916      	bls.n	80256de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80256b0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025718 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80256b4:	f8cd c004 	str.w	ip, [sp, #4]
 80256b8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80256bc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80256c0:	6920      	ldr	r0, [r4, #16]
 80256c2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80256c6:	f04f 0c01 	mov.w	ip, #1
 80256ca:	f88d c008 	strb.w	ip, [sp, #8]
 80256ce:	f8ad 200a 	strh.w	r2, [sp, #10]
 80256d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80256d6:	6803      	ldr	r3, [r0, #0]
 80256d8:	a901      	add	r1, sp, #4
 80256da:	689b      	ldr	r3, [r3, #8]
 80256dc:	4798      	blx	r3
 80256de:	4b0d      	ldr	r3, [pc, #52]	; (8025714 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80256e0:	9301      	str	r3, [sp, #4]
 80256e2:	6920      	ldr	r0, [r4, #16]
 80256e4:	f88d 5008 	strb.w	r5, [sp, #8]
 80256e8:	2300      	movs	r3, #0
 80256ea:	f8ad 700a 	strh.w	r7, [sp, #10]
 80256ee:	f8ad 600c 	strh.w	r6, [sp, #12]
 80256f2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80256f6:	6803      	ldr	r3, [r0, #0]
 80256f8:	a901      	add	r1, sp, #4
 80256fa:	681b      	ldr	r3, [r3, #0]
 80256fc:	4798      	blx	r3
 80256fe:	b005      	add	sp, #20
 8025700:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025702:	2900      	cmp	r1, #0
 8025704:	d1eb      	bne.n	80256de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025706:	80a2      	strh	r2, [r4, #4]
 8025708:	80c6      	strh	r6, [r0, #6]
 802570a:	60a1      	str	r1, [r4, #8]
 802570c:	81a1      	strh	r1, [r4, #12]
 802570e:	73a1      	strb	r1, [r4, #14]
 8025710:	e7e5      	b.n	80256de <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025712:	bf00      	nop
 8025714:	0802a6ac 	.word	0x0802a6ac
 8025718:	0802a6d4 	.word	0x0802a6d4

0802571c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802571c:	b570      	push	{r4, r5, r6, lr}
 802571e:	790b      	ldrb	r3, [r1, #4]
 8025720:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8025724:	2b00      	cmp	r3, #0
 8025726:	bf0c      	ite	eq
 8025728:	2301      	moveq	r3, #1
 802572a:	2300      	movne	r3, #0
 802572c:	4604      	mov	r4, r0
 802572e:	460e      	mov	r6, r1
 8025730:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8025734:	d109      	bne.n	802574a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8025736:	b14d      	cbz	r5, 802574c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8025738:	7933      	ldrb	r3, [r6, #4]
 802573a:	2b01      	cmp	r3, #1
 802573c:	d10c      	bne.n	8025758 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802573e:	6823      	ldr	r3, [r4, #0]
 8025740:	4620      	mov	r0, r4
 8025742:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8025744:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8025748:	4718      	bx	r3
 802574a:	b12d      	cbz	r5, 8025758 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802574c:	6823      	ldr	r3, [r4, #0]
 802574e:	4620      	mov	r0, r4
 8025750:	695b      	ldr	r3, [r3, #20]
 8025752:	4798      	blx	r3
 8025754:	2d00      	cmp	r5, #0
 8025756:	d1ef      	bne.n	8025738 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8025758:	bd70      	pop	{r4, r5, r6, pc}

0802575a <__aeabi_atexit>:
 802575a:	460b      	mov	r3, r1
 802575c:	4601      	mov	r1, r0
 802575e:	4618      	mov	r0, r3
 8025760:	f000 b852 	b.w	8025808 <__cxa_atexit>

08025764 <_ZdlPvj>:
 8025764:	f000 b812 	b.w	802578c <_ZdlPv>

08025768 <__cxa_guard_acquire>:
 8025768:	6803      	ldr	r3, [r0, #0]
 802576a:	07db      	lsls	r3, r3, #31
 802576c:	d406      	bmi.n	802577c <__cxa_guard_acquire+0x14>
 802576e:	7843      	ldrb	r3, [r0, #1]
 8025770:	b103      	cbz	r3, 8025774 <__cxa_guard_acquire+0xc>
 8025772:	deff      	udf	#255	; 0xff
 8025774:	2301      	movs	r3, #1
 8025776:	7043      	strb	r3, [r0, #1]
 8025778:	4618      	mov	r0, r3
 802577a:	4770      	bx	lr
 802577c:	2000      	movs	r0, #0
 802577e:	4770      	bx	lr

08025780 <__cxa_guard_release>:
 8025780:	2301      	movs	r3, #1
 8025782:	6003      	str	r3, [r0, #0]
 8025784:	4770      	bx	lr

08025786 <__cxa_pure_virtual>:
 8025786:	b508      	push	{r3, lr}
 8025788:	f000 f80e 	bl	80257a8 <_ZSt9terminatev>

0802578c <_ZdlPv>:
 802578c:	f000 b9b0 	b.w	8025af0 <free>

08025790 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8025790:	b508      	push	{r3, lr}
 8025792:	4780      	blx	r0
 8025794:	f000 f80d 	bl	80257b2 <abort>

08025798 <_ZSt13get_terminatev>:
 8025798:	4b02      	ldr	r3, [pc, #8]	; (80257a4 <_ZSt13get_terminatev+0xc>)
 802579a:	6818      	ldr	r0, [r3, #0]
 802579c:	f3bf 8f5b 	dmb	ish
 80257a0:	4770      	bx	lr
 80257a2:	bf00      	nop
 80257a4:	200000d4 	.word	0x200000d4

080257a8 <_ZSt9terminatev>:
 80257a8:	b508      	push	{r3, lr}
 80257aa:	f7ff fff5 	bl	8025798 <_ZSt13get_terminatev>
 80257ae:	f7ff ffef 	bl	8025790 <_ZN10__cxxabiv111__terminateEPFvvE>

080257b2 <abort>:
 80257b2:	b508      	push	{r3, lr}
 80257b4:	2006      	movs	r0, #6
 80257b6:	f000 fdf3 	bl	80263a0 <raise>
 80257ba:	2001      	movs	r0, #1
 80257bc:	f7dc fbae 	bl	8001f1c <_exit>

080257c0 <__assert_func>:
 80257c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80257c2:	4614      	mov	r4, r2
 80257c4:	461a      	mov	r2, r3
 80257c6:	4b09      	ldr	r3, [pc, #36]	; (80257ec <__assert_func+0x2c>)
 80257c8:	681b      	ldr	r3, [r3, #0]
 80257ca:	4605      	mov	r5, r0
 80257cc:	68d8      	ldr	r0, [r3, #12]
 80257ce:	b14c      	cbz	r4, 80257e4 <__assert_func+0x24>
 80257d0:	4b07      	ldr	r3, [pc, #28]	; (80257f0 <__assert_func+0x30>)
 80257d2:	9100      	str	r1, [sp, #0]
 80257d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80257d8:	4906      	ldr	r1, [pc, #24]	; (80257f4 <__assert_func+0x34>)
 80257da:	462b      	mov	r3, r5
 80257dc:	f000 f912 	bl	8025a04 <fiprintf>
 80257e0:	f7ff ffe7 	bl	80257b2 <abort>
 80257e4:	4b04      	ldr	r3, [pc, #16]	; (80257f8 <__assert_func+0x38>)
 80257e6:	461c      	mov	r4, r3
 80257e8:	e7f3      	b.n	80257d2 <__assert_func+0x12>
 80257ea:	bf00      	nop
 80257ec:	200000d8 	.word	0x200000d8
 80257f0:	0802b9f9 	.word	0x0802b9f9
 80257f4:	0802ba06 	.word	0x0802ba06
 80257f8:	0802ba34 	.word	0x0802ba34

080257fc <atexit>:
 80257fc:	2300      	movs	r3, #0
 80257fe:	4601      	mov	r1, r0
 8025800:	461a      	mov	r2, r3
 8025802:	4618      	mov	r0, r3
 8025804:	f000 befe 	b.w	8026604 <__register_exitproc>

08025808 <__cxa_atexit>:
 8025808:	b510      	push	{r4, lr}
 802580a:	4c05      	ldr	r4, [pc, #20]	; (8025820 <__cxa_atexit+0x18>)
 802580c:	4613      	mov	r3, r2
 802580e:	b12c      	cbz	r4, 802581c <__cxa_atexit+0x14>
 8025810:	460a      	mov	r2, r1
 8025812:	4601      	mov	r1, r0
 8025814:	2002      	movs	r0, #2
 8025816:	f000 fef5 	bl	8026604 <__register_exitproc>
 802581a:	bd10      	pop	{r4, pc}
 802581c:	4620      	mov	r0, r4
 802581e:	e7fc      	b.n	802581a <__cxa_atexit+0x12>
 8025820:	08026605 	.word	0x08026605

08025824 <div>:
 8025824:	2900      	cmp	r1, #0
 8025826:	b510      	push	{r4, lr}
 8025828:	fb91 f4f2 	sdiv	r4, r1, r2
 802582c:	fb02 1314 	mls	r3, r2, r4, r1
 8025830:	db06      	blt.n	8025840 <div+0x1c>
 8025832:	2b00      	cmp	r3, #0
 8025834:	da01      	bge.n	802583a <div+0x16>
 8025836:	3401      	adds	r4, #1
 8025838:	1a9b      	subs	r3, r3, r2
 802583a:	e9c0 4300 	strd	r4, r3, [r0]
 802583e:	bd10      	pop	{r4, pc}
 8025840:	2b00      	cmp	r3, #0
 8025842:	bfc4      	itt	gt
 8025844:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8025848:	189b      	addgt	r3, r3, r2
 802584a:	e7f6      	b.n	802583a <div+0x16>

0802584c <__errno>:
 802584c:	4b01      	ldr	r3, [pc, #4]	; (8025854 <__errno+0x8>)
 802584e:	6818      	ldr	r0, [r3, #0]
 8025850:	4770      	bx	lr
 8025852:	bf00      	nop
 8025854:	200000d8 	.word	0x200000d8

08025858 <std>:
 8025858:	2300      	movs	r3, #0
 802585a:	b510      	push	{r4, lr}
 802585c:	4604      	mov	r4, r0
 802585e:	e9c0 3300 	strd	r3, r3, [r0]
 8025862:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025866:	6083      	str	r3, [r0, #8]
 8025868:	8181      	strh	r1, [r0, #12]
 802586a:	6643      	str	r3, [r0, #100]	; 0x64
 802586c:	81c2      	strh	r2, [r0, #14]
 802586e:	6183      	str	r3, [r0, #24]
 8025870:	4619      	mov	r1, r3
 8025872:	2208      	movs	r2, #8
 8025874:	305c      	adds	r0, #92	; 0x5c
 8025876:	f000 f951 	bl	8025b1c <memset>
 802587a:	4b05      	ldr	r3, [pc, #20]	; (8025890 <std+0x38>)
 802587c:	6263      	str	r3, [r4, #36]	; 0x24
 802587e:	4b05      	ldr	r3, [pc, #20]	; (8025894 <std+0x3c>)
 8025880:	62a3      	str	r3, [r4, #40]	; 0x28
 8025882:	4b05      	ldr	r3, [pc, #20]	; (8025898 <std+0x40>)
 8025884:	62e3      	str	r3, [r4, #44]	; 0x2c
 8025886:	4b05      	ldr	r3, [pc, #20]	; (802589c <std+0x44>)
 8025888:	6224      	str	r4, [r4, #32]
 802588a:	6323      	str	r3, [r4, #48]	; 0x30
 802588c:	bd10      	pop	{r4, pc}
 802588e:	bf00      	nop
 8025890:	080263d9 	.word	0x080263d9
 8025894:	080263fb 	.word	0x080263fb
 8025898:	08026433 	.word	0x08026433
 802589c:	08026457 	.word	0x08026457

080258a0 <_cleanup_r>:
 80258a0:	4901      	ldr	r1, [pc, #4]	; (80258a8 <_cleanup_r+0x8>)
 80258a2:	f000 b8c1 	b.w	8025a28 <_fwalk_reent>
 80258a6:	bf00      	nop
 80258a8:	080267f5 	.word	0x080267f5

080258ac <__sfmoreglue>:
 80258ac:	b570      	push	{r4, r5, r6, lr}
 80258ae:	1e4a      	subs	r2, r1, #1
 80258b0:	2568      	movs	r5, #104	; 0x68
 80258b2:	4355      	muls	r5, r2
 80258b4:	460e      	mov	r6, r1
 80258b6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80258ba:	f000 f987 	bl	8025bcc <_malloc_r>
 80258be:	4604      	mov	r4, r0
 80258c0:	b140      	cbz	r0, 80258d4 <__sfmoreglue+0x28>
 80258c2:	2100      	movs	r1, #0
 80258c4:	e9c0 1600 	strd	r1, r6, [r0]
 80258c8:	300c      	adds	r0, #12
 80258ca:	60a0      	str	r0, [r4, #8]
 80258cc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80258d0:	f000 f924 	bl	8025b1c <memset>
 80258d4:	4620      	mov	r0, r4
 80258d6:	bd70      	pop	{r4, r5, r6, pc}

080258d8 <__sfp_lock_acquire>:
 80258d8:	4801      	ldr	r0, [pc, #4]	; (80258e0 <__sfp_lock_acquire+0x8>)
 80258da:	f000 b8fe 	b.w	8025ada <__retarget_lock_acquire_recursive>
 80258de:	bf00      	nop
 80258e0:	20027f28 	.word	0x20027f28

080258e4 <__sfp_lock_release>:
 80258e4:	4801      	ldr	r0, [pc, #4]	; (80258ec <__sfp_lock_release+0x8>)
 80258e6:	f000 b8fa 	b.w	8025ade <__retarget_lock_release_recursive>
 80258ea:	bf00      	nop
 80258ec:	20027f28 	.word	0x20027f28

080258f0 <__sinit_lock_acquire>:
 80258f0:	4801      	ldr	r0, [pc, #4]	; (80258f8 <__sinit_lock_acquire+0x8>)
 80258f2:	f000 b8f2 	b.w	8025ada <__retarget_lock_acquire_recursive>
 80258f6:	bf00      	nop
 80258f8:	20027f23 	.word	0x20027f23

080258fc <__sinit_lock_release>:
 80258fc:	4801      	ldr	r0, [pc, #4]	; (8025904 <__sinit_lock_release+0x8>)
 80258fe:	f000 b8ee 	b.w	8025ade <__retarget_lock_release_recursive>
 8025902:	bf00      	nop
 8025904:	20027f23 	.word	0x20027f23

08025908 <__sinit>:
 8025908:	b510      	push	{r4, lr}
 802590a:	4604      	mov	r4, r0
 802590c:	f7ff fff0 	bl	80258f0 <__sinit_lock_acquire>
 8025910:	69a3      	ldr	r3, [r4, #24]
 8025912:	b11b      	cbz	r3, 802591c <__sinit+0x14>
 8025914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025918:	f7ff bff0 	b.w	80258fc <__sinit_lock_release>
 802591c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8025920:	6523      	str	r3, [r4, #80]	; 0x50
 8025922:	4b13      	ldr	r3, [pc, #76]	; (8025970 <__sinit+0x68>)
 8025924:	4a13      	ldr	r2, [pc, #76]	; (8025974 <__sinit+0x6c>)
 8025926:	681b      	ldr	r3, [r3, #0]
 8025928:	62a2      	str	r2, [r4, #40]	; 0x28
 802592a:	42a3      	cmp	r3, r4
 802592c:	bf04      	itt	eq
 802592e:	2301      	moveq	r3, #1
 8025930:	61a3      	streq	r3, [r4, #24]
 8025932:	4620      	mov	r0, r4
 8025934:	f000 f820 	bl	8025978 <__sfp>
 8025938:	6060      	str	r0, [r4, #4]
 802593a:	4620      	mov	r0, r4
 802593c:	f000 f81c 	bl	8025978 <__sfp>
 8025940:	60a0      	str	r0, [r4, #8]
 8025942:	4620      	mov	r0, r4
 8025944:	f000 f818 	bl	8025978 <__sfp>
 8025948:	2200      	movs	r2, #0
 802594a:	60e0      	str	r0, [r4, #12]
 802594c:	2104      	movs	r1, #4
 802594e:	6860      	ldr	r0, [r4, #4]
 8025950:	f7ff ff82 	bl	8025858 <std>
 8025954:	68a0      	ldr	r0, [r4, #8]
 8025956:	2201      	movs	r2, #1
 8025958:	2109      	movs	r1, #9
 802595a:	f7ff ff7d 	bl	8025858 <std>
 802595e:	68e0      	ldr	r0, [r4, #12]
 8025960:	2202      	movs	r2, #2
 8025962:	2112      	movs	r1, #18
 8025964:	f7ff ff78 	bl	8025858 <std>
 8025968:	2301      	movs	r3, #1
 802596a:	61a3      	str	r3, [r4, #24]
 802596c:	e7d2      	b.n	8025914 <__sinit+0xc>
 802596e:	bf00      	nop
 8025970:	0802ba98 	.word	0x0802ba98
 8025974:	080258a1 	.word	0x080258a1

08025978 <__sfp>:
 8025978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802597a:	4607      	mov	r7, r0
 802597c:	f7ff ffac 	bl	80258d8 <__sfp_lock_acquire>
 8025980:	4b1e      	ldr	r3, [pc, #120]	; (80259fc <__sfp+0x84>)
 8025982:	681e      	ldr	r6, [r3, #0]
 8025984:	69b3      	ldr	r3, [r6, #24]
 8025986:	b913      	cbnz	r3, 802598e <__sfp+0x16>
 8025988:	4630      	mov	r0, r6
 802598a:	f7ff ffbd 	bl	8025908 <__sinit>
 802598e:	3648      	adds	r6, #72	; 0x48
 8025990:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8025994:	3b01      	subs	r3, #1
 8025996:	d503      	bpl.n	80259a0 <__sfp+0x28>
 8025998:	6833      	ldr	r3, [r6, #0]
 802599a:	b30b      	cbz	r3, 80259e0 <__sfp+0x68>
 802599c:	6836      	ldr	r6, [r6, #0]
 802599e:	e7f7      	b.n	8025990 <__sfp+0x18>
 80259a0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80259a4:	b9d5      	cbnz	r5, 80259dc <__sfp+0x64>
 80259a6:	4b16      	ldr	r3, [pc, #88]	; (8025a00 <__sfp+0x88>)
 80259a8:	60e3      	str	r3, [r4, #12]
 80259aa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80259ae:	6665      	str	r5, [r4, #100]	; 0x64
 80259b0:	f000 f892 	bl	8025ad8 <__retarget_lock_init_recursive>
 80259b4:	f7ff ff96 	bl	80258e4 <__sfp_lock_release>
 80259b8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80259bc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80259c0:	6025      	str	r5, [r4, #0]
 80259c2:	61a5      	str	r5, [r4, #24]
 80259c4:	2208      	movs	r2, #8
 80259c6:	4629      	mov	r1, r5
 80259c8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80259cc:	f000 f8a6 	bl	8025b1c <memset>
 80259d0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80259d4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80259d8:	4620      	mov	r0, r4
 80259da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80259dc:	3468      	adds	r4, #104	; 0x68
 80259de:	e7d9      	b.n	8025994 <__sfp+0x1c>
 80259e0:	2104      	movs	r1, #4
 80259e2:	4638      	mov	r0, r7
 80259e4:	f7ff ff62 	bl	80258ac <__sfmoreglue>
 80259e8:	4604      	mov	r4, r0
 80259ea:	6030      	str	r0, [r6, #0]
 80259ec:	2800      	cmp	r0, #0
 80259ee:	d1d5      	bne.n	802599c <__sfp+0x24>
 80259f0:	f7ff ff78 	bl	80258e4 <__sfp_lock_release>
 80259f4:	230c      	movs	r3, #12
 80259f6:	603b      	str	r3, [r7, #0]
 80259f8:	e7ee      	b.n	80259d8 <__sfp+0x60>
 80259fa:	bf00      	nop
 80259fc:	0802ba98 	.word	0x0802ba98
 8025a00:	ffff0001 	.word	0xffff0001

08025a04 <fiprintf>:
 8025a04:	b40e      	push	{r1, r2, r3}
 8025a06:	b503      	push	{r0, r1, lr}
 8025a08:	4601      	mov	r1, r0
 8025a0a:	ab03      	add	r3, sp, #12
 8025a0c:	4805      	ldr	r0, [pc, #20]	; (8025a24 <fiprintf+0x20>)
 8025a0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8025a12:	6800      	ldr	r0, [r0, #0]
 8025a14:	9301      	str	r3, [sp, #4]
 8025a16:	f000 f95d 	bl	8025cd4 <_vfiprintf_r>
 8025a1a:	b002      	add	sp, #8
 8025a1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8025a20:	b003      	add	sp, #12
 8025a22:	4770      	bx	lr
 8025a24:	200000d8 	.word	0x200000d8

08025a28 <_fwalk_reent>:
 8025a28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025a2c:	4606      	mov	r6, r0
 8025a2e:	4688      	mov	r8, r1
 8025a30:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8025a34:	2700      	movs	r7, #0
 8025a36:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025a3a:	f1b9 0901 	subs.w	r9, r9, #1
 8025a3e:	d505      	bpl.n	8025a4c <_fwalk_reent+0x24>
 8025a40:	6824      	ldr	r4, [r4, #0]
 8025a42:	2c00      	cmp	r4, #0
 8025a44:	d1f7      	bne.n	8025a36 <_fwalk_reent+0xe>
 8025a46:	4638      	mov	r0, r7
 8025a48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025a4c:	89ab      	ldrh	r3, [r5, #12]
 8025a4e:	2b01      	cmp	r3, #1
 8025a50:	d907      	bls.n	8025a62 <_fwalk_reent+0x3a>
 8025a52:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025a56:	3301      	adds	r3, #1
 8025a58:	d003      	beq.n	8025a62 <_fwalk_reent+0x3a>
 8025a5a:	4629      	mov	r1, r5
 8025a5c:	4630      	mov	r0, r6
 8025a5e:	47c0      	blx	r8
 8025a60:	4307      	orrs	r7, r0
 8025a62:	3568      	adds	r5, #104	; 0x68
 8025a64:	e7e9      	b.n	8025a3a <_fwalk_reent+0x12>
	...

08025a68 <__libc_init_array>:
 8025a68:	b570      	push	{r4, r5, r6, lr}
 8025a6a:	4d0d      	ldr	r5, [pc, #52]	; (8025aa0 <__libc_init_array+0x38>)
 8025a6c:	4c0d      	ldr	r4, [pc, #52]	; (8025aa4 <__libc_init_array+0x3c>)
 8025a6e:	1b64      	subs	r4, r4, r5
 8025a70:	10a4      	asrs	r4, r4, #2
 8025a72:	2600      	movs	r6, #0
 8025a74:	42a6      	cmp	r6, r4
 8025a76:	d109      	bne.n	8025a8c <__libc_init_array+0x24>
 8025a78:	4d0b      	ldr	r5, [pc, #44]	; (8025aa8 <__libc_init_array+0x40>)
 8025a7a:	4c0c      	ldr	r4, [pc, #48]	; (8025aac <__libc_init_array+0x44>)
 8025a7c:	f000 ffac 	bl	80269d8 <_init>
 8025a80:	1b64      	subs	r4, r4, r5
 8025a82:	10a4      	asrs	r4, r4, #2
 8025a84:	2600      	movs	r6, #0
 8025a86:	42a6      	cmp	r6, r4
 8025a88:	d105      	bne.n	8025a96 <__libc_init_array+0x2e>
 8025a8a:	bd70      	pop	{r4, r5, r6, pc}
 8025a8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8025a90:	4798      	blx	r3
 8025a92:	3601      	adds	r6, #1
 8025a94:	e7ee      	b.n	8025a74 <__libc_init_array+0xc>
 8025a96:	f855 3b04 	ldr.w	r3, [r5], #4
 8025a9a:	4798      	blx	r3
 8025a9c:	3601      	adds	r6, #1
 8025a9e:	e7f2      	b.n	8025a86 <__libc_init_array+0x1e>
 8025aa0:	0802bed8 	.word	0x0802bed8
 8025aa4:	0802bed8 	.word	0x0802bed8
 8025aa8:	0802bed8 	.word	0x0802bed8
 8025aac:	0802bef0 	.word	0x0802bef0

08025ab0 <ldiv>:
 8025ab0:	2900      	cmp	r1, #0
 8025ab2:	b510      	push	{r4, lr}
 8025ab4:	fb91 f4f2 	sdiv	r4, r1, r2
 8025ab8:	fb02 1314 	mls	r3, r2, r4, r1
 8025abc:	db06      	blt.n	8025acc <ldiv+0x1c>
 8025abe:	2b00      	cmp	r3, #0
 8025ac0:	da01      	bge.n	8025ac6 <ldiv+0x16>
 8025ac2:	3401      	adds	r4, #1
 8025ac4:	1a9b      	subs	r3, r3, r2
 8025ac6:	e9c0 4300 	strd	r4, r3, [r0]
 8025aca:	bd10      	pop	{r4, pc}
 8025acc:	2b00      	cmp	r3, #0
 8025ace:	bfc4      	itt	gt
 8025ad0:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8025ad4:	189b      	addgt	r3, r3, r2
 8025ad6:	e7f6      	b.n	8025ac6 <ldiv+0x16>

08025ad8 <__retarget_lock_init_recursive>:
 8025ad8:	4770      	bx	lr

08025ada <__retarget_lock_acquire_recursive>:
 8025ada:	4770      	bx	lr

08025adc <__retarget_lock_release>:
 8025adc:	4770      	bx	lr

08025ade <__retarget_lock_release_recursive>:
 8025ade:	4770      	bx	lr

08025ae0 <malloc>:
 8025ae0:	4b02      	ldr	r3, [pc, #8]	; (8025aec <malloc+0xc>)
 8025ae2:	4601      	mov	r1, r0
 8025ae4:	6818      	ldr	r0, [r3, #0]
 8025ae6:	f000 b871 	b.w	8025bcc <_malloc_r>
 8025aea:	bf00      	nop
 8025aec:	200000d8 	.word	0x200000d8

08025af0 <free>:
 8025af0:	4b02      	ldr	r3, [pc, #8]	; (8025afc <free+0xc>)
 8025af2:	4601      	mov	r1, r0
 8025af4:	6818      	ldr	r0, [r3, #0]
 8025af6:	f000 b819 	b.w	8025b2c <_free_r>
 8025afa:	bf00      	nop
 8025afc:	200000d8 	.word	0x200000d8

08025b00 <memcpy>:
 8025b00:	440a      	add	r2, r1
 8025b02:	4291      	cmp	r1, r2
 8025b04:	f100 33ff 	add.w	r3, r0, #4294967295
 8025b08:	d100      	bne.n	8025b0c <memcpy+0xc>
 8025b0a:	4770      	bx	lr
 8025b0c:	b510      	push	{r4, lr}
 8025b0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025b12:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025b16:	4291      	cmp	r1, r2
 8025b18:	d1f9      	bne.n	8025b0e <memcpy+0xe>
 8025b1a:	bd10      	pop	{r4, pc}

08025b1c <memset>:
 8025b1c:	4402      	add	r2, r0
 8025b1e:	4603      	mov	r3, r0
 8025b20:	4293      	cmp	r3, r2
 8025b22:	d100      	bne.n	8025b26 <memset+0xa>
 8025b24:	4770      	bx	lr
 8025b26:	f803 1b01 	strb.w	r1, [r3], #1
 8025b2a:	e7f9      	b.n	8025b20 <memset+0x4>

08025b2c <_free_r>:
 8025b2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8025b2e:	2900      	cmp	r1, #0
 8025b30:	d048      	beq.n	8025bc4 <_free_r+0x98>
 8025b32:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025b36:	9001      	str	r0, [sp, #4]
 8025b38:	2b00      	cmp	r3, #0
 8025b3a:	f1a1 0404 	sub.w	r4, r1, #4
 8025b3e:	bfb8      	it	lt
 8025b40:	18e4      	addlt	r4, r4, r3
 8025b42:	f000 ff09 	bl	8026958 <__malloc_lock>
 8025b46:	4a20      	ldr	r2, [pc, #128]	; (8025bc8 <_free_r+0x9c>)
 8025b48:	9801      	ldr	r0, [sp, #4]
 8025b4a:	6813      	ldr	r3, [r2, #0]
 8025b4c:	4615      	mov	r5, r2
 8025b4e:	b933      	cbnz	r3, 8025b5e <_free_r+0x32>
 8025b50:	6063      	str	r3, [r4, #4]
 8025b52:	6014      	str	r4, [r2, #0]
 8025b54:	b003      	add	sp, #12
 8025b56:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8025b5a:	f000 bf03 	b.w	8026964 <__malloc_unlock>
 8025b5e:	42a3      	cmp	r3, r4
 8025b60:	d90b      	bls.n	8025b7a <_free_r+0x4e>
 8025b62:	6821      	ldr	r1, [r4, #0]
 8025b64:	1862      	adds	r2, r4, r1
 8025b66:	4293      	cmp	r3, r2
 8025b68:	bf04      	itt	eq
 8025b6a:	681a      	ldreq	r2, [r3, #0]
 8025b6c:	685b      	ldreq	r3, [r3, #4]
 8025b6e:	6063      	str	r3, [r4, #4]
 8025b70:	bf04      	itt	eq
 8025b72:	1852      	addeq	r2, r2, r1
 8025b74:	6022      	streq	r2, [r4, #0]
 8025b76:	602c      	str	r4, [r5, #0]
 8025b78:	e7ec      	b.n	8025b54 <_free_r+0x28>
 8025b7a:	461a      	mov	r2, r3
 8025b7c:	685b      	ldr	r3, [r3, #4]
 8025b7e:	b10b      	cbz	r3, 8025b84 <_free_r+0x58>
 8025b80:	42a3      	cmp	r3, r4
 8025b82:	d9fa      	bls.n	8025b7a <_free_r+0x4e>
 8025b84:	6811      	ldr	r1, [r2, #0]
 8025b86:	1855      	adds	r5, r2, r1
 8025b88:	42a5      	cmp	r5, r4
 8025b8a:	d10b      	bne.n	8025ba4 <_free_r+0x78>
 8025b8c:	6824      	ldr	r4, [r4, #0]
 8025b8e:	4421      	add	r1, r4
 8025b90:	1854      	adds	r4, r2, r1
 8025b92:	42a3      	cmp	r3, r4
 8025b94:	6011      	str	r1, [r2, #0]
 8025b96:	d1dd      	bne.n	8025b54 <_free_r+0x28>
 8025b98:	681c      	ldr	r4, [r3, #0]
 8025b9a:	685b      	ldr	r3, [r3, #4]
 8025b9c:	6053      	str	r3, [r2, #4]
 8025b9e:	4421      	add	r1, r4
 8025ba0:	6011      	str	r1, [r2, #0]
 8025ba2:	e7d7      	b.n	8025b54 <_free_r+0x28>
 8025ba4:	d902      	bls.n	8025bac <_free_r+0x80>
 8025ba6:	230c      	movs	r3, #12
 8025ba8:	6003      	str	r3, [r0, #0]
 8025baa:	e7d3      	b.n	8025b54 <_free_r+0x28>
 8025bac:	6825      	ldr	r5, [r4, #0]
 8025bae:	1961      	adds	r1, r4, r5
 8025bb0:	428b      	cmp	r3, r1
 8025bb2:	bf04      	itt	eq
 8025bb4:	6819      	ldreq	r1, [r3, #0]
 8025bb6:	685b      	ldreq	r3, [r3, #4]
 8025bb8:	6063      	str	r3, [r4, #4]
 8025bba:	bf04      	itt	eq
 8025bbc:	1949      	addeq	r1, r1, r5
 8025bbe:	6021      	streq	r1, [r4, #0]
 8025bc0:	6054      	str	r4, [r2, #4]
 8025bc2:	e7c7      	b.n	8025b54 <_free_r+0x28>
 8025bc4:	b003      	add	sp, #12
 8025bc6:	bd30      	pop	{r4, r5, pc}
 8025bc8:	20027aac 	.word	0x20027aac

08025bcc <_malloc_r>:
 8025bcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025bce:	1ccd      	adds	r5, r1, #3
 8025bd0:	f025 0503 	bic.w	r5, r5, #3
 8025bd4:	3508      	adds	r5, #8
 8025bd6:	2d0c      	cmp	r5, #12
 8025bd8:	bf38      	it	cc
 8025bda:	250c      	movcc	r5, #12
 8025bdc:	2d00      	cmp	r5, #0
 8025bde:	4606      	mov	r6, r0
 8025be0:	db01      	blt.n	8025be6 <_malloc_r+0x1a>
 8025be2:	42a9      	cmp	r1, r5
 8025be4:	d903      	bls.n	8025bee <_malloc_r+0x22>
 8025be6:	230c      	movs	r3, #12
 8025be8:	6033      	str	r3, [r6, #0]
 8025bea:	2000      	movs	r0, #0
 8025bec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025bee:	f000 feb3 	bl	8026958 <__malloc_lock>
 8025bf2:	4921      	ldr	r1, [pc, #132]	; (8025c78 <_malloc_r+0xac>)
 8025bf4:	680a      	ldr	r2, [r1, #0]
 8025bf6:	4614      	mov	r4, r2
 8025bf8:	b99c      	cbnz	r4, 8025c22 <_malloc_r+0x56>
 8025bfa:	4f20      	ldr	r7, [pc, #128]	; (8025c7c <_malloc_r+0xb0>)
 8025bfc:	683b      	ldr	r3, [r7, #0]
 8025bfe:	b923      	cbnz	r3, 8025c0a <_malloc_r+0x3e>
 8025c00:	4621      	mov	r1, r4
 8025c02:	4630      	mov	r0, r6
 8025c04:	f000 fb94 	bl	8026330 <_sbrk_r>
 8025c08:	6038      	str	r0, [r7, #0]
 8025c0a:	4629      	mov	r1, r5
 8025c0c:	4630      	mov	r0, r6
 8025c0e:	f000 fb8f 	bl	8026330 <_sbrk_r>
 8025c12:	1c43      	adds	r3, r0, #1
 8025c14:	d123      	bne.n	8025c5e <_malloc_r+0x92>
 8025c16:	230c      	movs	r3, #12
 8025c18:	6033      	str	r3, [r6, #0]
 8025c1a:	4630      	mov	r0, r6
 8025c1c:	f000 fea2 	bl	8026964 <__malloc_unlock>
 8025c20:	e7e3      	b.n	8025bea <_malloc_r+0x1e>
 8025c22:	6823      	ldr	r3, [r4, #0]
 8025c24:	1b5b      	subs	r3, r3, r5
 8025c26:	d417      	bmi.n	8025c58 <_malloc_r+0x8c>
 8025c28:	2b0b      	cmp	r3, #11
 8025c2a:	d903      	bls.n	8025c34 <_malloc_r+0x68>
 8025c2c:	6023      	str	r3, [r4, #0]
 8025c2e:	441c      	add	r4, r3
 8025c30:	6025      	str	r5, [r4, #0]
 8025c32:	e004      	b.n	8025c3e <_malloc_r+0x72>
 8025c34:	6863      	ldr	r3, [r4, #4]
 8025c36:	42a2      	cmp	r2, r4
 8025c38:	bf0c      	ite	eq
 8025c3a:	600b      	streq	r3, [r1, #0]
 8025c3c:	6053      	strne	r3, [r2, #4]
 8025c3e:	4630      	mov	r0, r6
 8025c40:	f000 fe90 	bl	8026964 <__malloc_unlock>
 8025c44:	f104 000b 	add.w	r0, r4, #11
 8025c48:	1d23      	adds	r3, r4, #4
 8025c4a:	f020 0007 	bic.w	r0, r0, #7
 8025c4e:	1ac2      	subs	r2, r0, r3
 8025c50:	d0cc      	beq.n	8025bec <_malloc_r+0x20>
 8025c52:	1a1b      	subs	r3, r3, r0
 8025c54:	50a3      	str	r3, [r4, r2]
 8025c56:	e7c9      	b.n	8025bec <_malloc_r+0x20>
 8025c58:	4622      	mov	r2, r4
 8025c5a:	6864      	ldr	r4, [r4, #4]
 8025c5c:	e7cc      	b.n	8025bf8 <_malloc_r+0x2c>
 8025c5e:	1cc4      	adds	r4, r0, #3
 8025c60:	f024 0403 	bic.w	r4, r4, #3
 8025c64:	42a0      	cmp	r0, r4
 8025c66:	d0e3      	beq.n	8025c30 <_malloc_r+0x64>
 8025c68:	1a21      	subs	r1, r4, r0
 8025c6a:	4630      	mov	r0, r6
 8025c6c:	f000 fb60 	bl	8026330 <_sbrk_r>
 8025c70:	3001      	adds	r0, #1
 8025c72:	d1dd      	bne.n	8025c30 <_malloc_r+0x64>
 8025c74:	e7cf      	b.n	8025c16 <_malloc_r+0x4a>
 8025c76:	bf00      	nop
 8025c78:	20027aac 	.word	0x20027aac
 8025c7c:	20027ab0 	.word	0x20027ab0

08025c80 <__sfputc_r>:
 8025c80:	6893      	ldr	r3, [r2, #8]
 8025c82:	3b01      	subs	r3, #1
 8025c84:	2b00      	cmp	r3, #0
 8025c86:	b410      	push	{r4}
 8025c88:	6093      	str	r3, [r2, #8]
 8025c8a:	da08      	bge.n	8025c9e <__sfputc_r+0x1e>
 8025c8c:	6994      	ldr	r4, [r2, #24]
 8025c8e:	42a3      	cmp	r3, r4
 8025c90:	db01      	blt.n	8025c96 <__sfputc_r+0x16>
 8025c92:	290a      	cmp	r1, #10
 8025c94:	d103      	bne.n	8025c9e <__sfputc_r+0x1e>
 8025c96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025c9a:	f000 bbe1 	b.w	8026460 <__swbuf_r>
 8025c9e:	6813      	ldr	r3, [r2, #0]
 8025ca0:	1c58      	adds	r0, r3, #1
 8025ca2:	6010      	str	r0, [r2, #0]
 8025ca4:	7019      	strb	r1, [r3, #0]
 8025ca6:	4608      	mov	r0, r1
 8025ca8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025cac:	4770      	bx	lr

08025cae <__sfputs_r>:
 8025cae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025cb0:	4606      	mov	r6, r0
 8025cb2:	460f      	mov	r7, r1
 8025cb4:	4614      	mov	r4, r2
 8025cb6:	18d5      	adds	r5, r2, r3
 8025cb8:	42ac      	cmp	r4, r5
 8025cba:	d101      	bne.n	8025cc0 <__sfputs_r+0x12>
 8025cbc:	2000      	movs	r0, #0
 8025cbe:	e007      	b.n	8025cd0 <__sfputs_r+0x22>
 8025cc0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025cc4:	463a      	mov	r2, r7
 8025cc6:	4630      	mov	r0, r6
 8025cc8:	f7ff ffda 	bl	8025c80 <__sfputc_r>
 8025ccc:	1c43      	adds	r3, r0, #1
 8025cce:	d1f3      	bne.n	8025cb8 <__sfputs_r+0xa>
 8025cd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08025cd4 <_vfiprintf_r>:
 8025cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025cd8:	460d      	mov	r5, r1
 8025cda:	b09d      	sub	sp, #116	; 0x74
 8025cdc:	4614      	mov	r4, r2
 8025cde:	4698      	mov	r8, r3
 8025ce0:	4606      	mov	r6, r0
 8025ce2:	b118      	cbz	r0, 8025cec <_vfiprintf_r+0x18>
 8025ce4:	6983      	ldr	r3, [r0, #24]
 8025ce6:	b90b      	cbnz	r3, 8025cec <_vfiprintf_r+0x18>
 8025ce8:	f7ff fe0e 	bl	8025908 <__sinit>
 8025cec:	4b89      	ldr	r3, [pc, #548]	; (8025f14 <_vfiprintf_r+0x240>)
 8025cee:	429d      	cmp	r5, r3
 8025cf0:	d11b      	bne.n	8025d2a <_vfiprintf_r+0x56>
 8025cf2:	6875      	ldr	r5, [r6, #4]
 8025cf4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025cf6:	07d9      	lsls	r1, r3, #31
 8025cf8:	d405      	bmi.n	8025d06 <_vfiprintf_r+0x32>
 8025cfa:	89ab      	ldrh	r3, [r5, #12]
 8025cfc:	059a      	lsls	r2, r3, #22
 8025cfe:	d402      	bmi.n	8025d06 <_vfiprintf_r+0x32>
 8025d00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025d02:	f7ff feea 	bl	8025ada <__retarget_lock_acquire_recursive>
 8025d06:	89ab      	ldrh	r3, [r5, #12]
 8025d08:	071b      	lsls	r3, r3, #28
 8025d0a:	d501      	bpl.n	8025d10 <_vfiprintf_r+0x3c>
 8025d0c:	692b      	ldr	r3, [r5, #16]
 8025d0e:	b9eb      	cbnz	r3, 8025d4c <_vfiprintf_r+0x78>
 8025d10:	4629      	mov	r1, r5
 8025d12:	4630      	mov	r0, r6
 8025d14:	f000 fc08 	bl	8026528 <__swsetup_r>
 8025d18:	b1c0      	cbz	r0, 8025d4c <_vfiprintf_r+0x78>
 8025d1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025d1c:	07dc      	lsls	r4, r3, #31
 8025d1e:	d50e      	bpl.n	8025d3e <_vfiprintf_r+0x6a>
 8025d20:	f04f 30ff 	mov.w	r0, #4294967295
 8025d24:	b01d      	add	sp, #116	; 0x74
 8025d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d2a:	4b7b      	ldr	r3, [pc, #492]	; (8025f18 <_vfiprintf_r+0x244>)
 8025d2c:	429d      	cmp	r5, r3
 8025d2e:	d101      	bne.n	8025d34 <_vfiprintf_r+0x60>
 8025d30:	68b5      	ldr	r5, [r6, #8]
 8025d32:	e7df      	b.n	8025cf4 <_vfiprintf_r+0x20>
 8025d34:	4b79      	ldr	r3, [pc, #484]	; (8025f1c <_vfiprintf_r+0x248>)
 8025d36:	429d      	cmp	r5, r3
 8025d38:	bf08      	it	eq
 8025d3a:	68f5      	ldreq	r5, [r6, #12]
 8025d3c:	e7da      	b.n	8025cf4 <_vfiprintf_r+0x20>
 8025d3e:	89ab      	ldrh	r3, [r5, #12]
 8025d40:	0598      	lsls	r0, r3, #22
 8025d42:	d4ed      	bmi.n	8025d20 <_vfiprintf_r+0x4c>
 8025d44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025d46:	f7ff feca 	bl	8025ade <__retarget_lock_release_recursive>
 8025d4a:	e7e9      	b.n	8025d20 <_vfiprintf_r+0x4c>
 8025d4c:	2300      	movs	r3, #0
 8025d4e:	9309      	str	r3, [sp, #36]	; 0x24
 8025d50:	2320      	movs	r3, #32
 8025d52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8025d56:	f8cd 800c 	str.w	r8, [sp, #12]
 8025d5a:	2330      	movs	r3, #48	; 0x30
 8025d5c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8025f20 <_vfiprintf_r+0x24c>
 8025d60:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8025d64:	f04f 0901 	mov.w	r9, #1
 8025d68:	4623      	mov	r3, r4
 8025d6a:	469a      	mov	sl, r3
 8025d6c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025d70:	b10a      	cbz	r2, 8025d76 <_vfiprintf_r+0xa2>
 8025d72:	2a25      	cmp	r2, #37	; 0x25
 8025d74:	d1f9      	bne.n	8025d6a <_vfiprintf_r+0x96>
 8025d76:	ebba 0b04 	subs.w	fp, sl, r4
 8025d7a:	d00b      	beq.n	8025d94 <_vfiprintf_r+0xc0>
 8025d7c:	465b      	mov	r3, fp
 8025d7e:	4622      	mov	r2, r4
 8025d80:	4629      	mov	r1, r5
 8025d82:	4630      	mov	r0, r6
 8025d84:	f7ff ff93 	bl	8025cae <__sfputs_r>
 8025d88:	3001      	adds	r0, #1
 8025d8a:	f000 80aa 	beq.w	8025ee2 <_vfiprintf_r+0x20e>
 8025d8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025d90:	445a      	add	r2, fp
 8025d92:	9209      	str	r2, [sp, #36]	; 0x24
 8025d94:	f89a 3000 	ldrb.w	r3, [sl]
 8025d98:	2b00      	cmp	r3, #0
 8025d9a:	f000 80a2 	beq.w	8025ee2 <_vfiprintf_r+0x20e>
 8025d9e:	2300      	movs	r3, #0
 8025da0:	f04f 32ff 	mov.w	r2, #4294967295
 8025da4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025da8:	f10a 0a01 	add.w	sl, sl, #1
 8025dac:	9304      	str	r3, [sp, #16]
 8025dae:	9307      	str	r3, [sp, #28]
 8025db0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8025db4:	931a      	str	r3, [sp, #104]	; 0x68
 8025db6:	4654      	mov	r4, sl
 8025db8:	2205      	movs	r2, #5
 8025dba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025dbe:	4858      	ldr	r0, [pc, #352]	; (8025f20 <_vfiprintf_r+0x24c>)
 8025dc0:	f7da fa1e 	bl	8000200 <memchr>
 8025dc4:	9a04      	ldr	r2, [sp, #16]
 8025dc6:	b9d8      	cbnz	r0, 8025e00 <_vfiprintf_r+0x12c>
 8025dc8:	06d1      	lsls	r1, r2, #27
 8025dca:	bf44      	itt	mi
 8025dcc:	2320      	movmi	r3, #32
 8025dce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8025dd2:	0713      	lsls	r3, r2, #28
 8025dd4:	bf44      	itt	mi
 8025dd6:	232b      	movmi	r3, #43	; 0x2b
 8025dd8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8025ddc:	f89a 3000 	ldrb.w	r3, [sl]
 8025de0:	2b2a      	cmp	r3, #42	; 0x2a
 8025de2:	d015      	beq.n	8025e10 <_vfiprintf_r+0x13c>
 8025de4:	9a07      	ldr	r2, [sp, #28]
 8025de6:	4654      	mov	r4, sl
 8025de8:	2000      	movs	r0, #0
 8025dea:	f04f 0c0a 	mov.w	ip, #10
 8025dee:	4621      	mov	r1, r4
 8025df0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8025df4:	3b30      	subs	r3, #48	; 0x30
 8025df6:	2b09      	cmp	r3, #9
 8025df8:	d94e      	bls.n	8025e98 <_vfiprintf_r+0x1c4>
 8025dfa:	b1b0      	cbz	r0, 8025e2a <_vfiprintf_r+0x156>
 8025dfc:	9207      	str	r2, [sp, #28]
 8025dfe:	e014      	b.n	8025e2a <_vfiprintf_r+0x156>
 8025e00:	eba0 0308 	sub.w	r3, r0, r8
 8025e04:	fa09 f303 	lsl.w	r3, r9, r3
 8025e08:	4313      	orrs	r3, r2
 8025e0a:	9304      	str	r3, [sp, #16]
 8025e0c:	46a2      	mov	sl, r4
 8025e0e:	e7d2      	b.n	8025db6 <_vfiprintf_r+0xe2>
 8025e10:	9b03      	ldr	r3, [sp, #12]
 8025e12:	1d19      	adds	r1, r3, #4
 8025e14:	681b      	ldr	r3, [r3, #0]
 8025e16:	9103      	str	r1, [sp, #12]
 8025e18:	2b00      	cmp	r3, #0
 8025e1a:	bfbb      	ittet	lt
 8025e1c:	425b      	neglt	r3, r3
 8025e1e:	f042 0202 	orrlt.w	r2, r2, #2
 8025e22:	9307      	strge	r3, [sp, #28]
 8025e24:	9307      	strlt	r3, [sp, #28]
 8025e26:	bfb8      	it	lt
 8025e28:	9204      	strlt	r2, [sp, #16]
 8025e2a:	7823      	ldrb	r3, [r4, #0]
 8025e2c:	2b2e      	cmp	r3, #46	; 0x2e
 8025e2e:	d10c      	bne.n	8025e4a <_vfiprintf_r+0x176>
 8025e30:	7863      	ldrb	r3, [r4, #1]
 8025e32:	2b2a      	cmp	r3, #42	; 0x2a
 8025e34:	d135      	bne.n	8025ea2 <_vfiprintf_r+0x1ce>
 8025e36:	9b03      	ldr	r3, [sp, #12]
 8025e38:	1d1a      	adds	r2, r3, #4
 8025e3a:	681b      	ldr	r3, [r3, #0]
 8025e3c:	9203      	str	r2, [sp, #12]
 8025e3e:	2b00      	cmp	r3, #0
 8025e40:	bfb8      	it	lt
 8025e42:	f04f 33ff 	movlt.w	r3, #4294967295
 8025e46:	3402      	adds	r4, #2
 8025e48:	9305      	str	r3, [sp, #20]
 8025e4a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8025f30 <_vfiprintf_r+0x25c>
 8025e4e:	7821      	ldrb	r1, [r4, #0]
 8025e50:	2203      	movs	r2, #3
 8025e52:	4650      	mov	r0, sl
 8025e54:	f7da f9d4 	bl	8000200 <memchr>
 8025e58:	b140      	cbz	r0, 8025e6c <_vfiprintf_r+0x198>
 8025e5a:	2340      	movs	r3, #64	; 0x40
 8025e5c:	eba0 000a 	sub.w	r0, r0, sl
 8025e60:	fa03 f000 	lsl.w	r0, r3, r0
 8025e64:	9b04      	ldr	r3, [sp, #16]
 8025e66:	4303      	orrs	r3, r0
 8025e68:	3401      	adds	r4, #1
 8025e6a:	9304      	str	r3, [sp, #16]
 8025e6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025e70:	482c      	ldr	r0, [pc, #176]	; (8025f24 <_vfiprintf_r+0x250>)
 8025e72:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8025e76:	2206      	movs	r2, #6
 8025e78:	f7da f9c2 	bl	8000200 <memchr>
 8025e7c:	2800      	cmp	r0, #0
 8025e7e:	d03f      	beq.n	8025f00 <_vfiprintf_r+0x22c>
 8025e80:	4b29      	ldr	r3, [pc, #164]	; (8025f28 <_vfiprintf_r+0x254>)
 8025e82:	bb1b      	cbnz	r3, 8025ecc <_vfiprintf_r+0x1f8>
 8025e84:	9b03      	ldr	r3, [sp, #12]
 8025e86:	3307      	adds	r3, #7
 8025e88:	f023 0307 	bic.w	r3, r3, #7
 8025e8c:	3308      	adds	r3, #8
 8025e8e:	9303      	str	r3, [sp, #12]
 8025e90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e92:	443b      	add	r3, r7
 8025e94:	9309      	str	r3, [sp, #36]	; 0x24
 8025e96:	e767      	b.n	8025d68 <_vfiprintf_r+0x94>
 8025e98:	fb0c 3202 	mla	r2, ip, r2, r3
 8025e9c:	460c      	mov	r4, r1
 8025e9e:	2001      	movs	r0, #1
 8025ea0:	e7a5      	b.n	8025dee <_vfiprintf_r+0x11a>
 8025ea2:	2300      	movs	r3, #0
 8025ea4:	3401      	adds	r4, #1
 8025ea6:	9305      	str	r3, [sp, #20]
 8025ea8:	4619      	mov	r1, r3
 8025eaa:	f04f 0c0a 	mov.w	ip, #10
 8025eae:	4620      	mov	r0, r4
 8025eb0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025eb4:	3a30      	subs	r2, #48	; 0x30
 8025eb6:	2a09      	cmp	r2, #9
 8025eb8:	d903      	bls.n	8025ec2 <_vfiprintf_r+0x1ee>
 8025eba:	2b00      	cmp	r3, #0
 8025ebc:	d0c5      	beq.n	8025e4a <_vfiprintf_r+0x176>
 8025ebe:	9105      	str	r1, [sp, #20]
 8025ec0:	e7c3      	b.n	8025e4a <_vfiprintf_r+0x176>
 8025ec2:	fb0c 2101 	mla	r1, ip, r1, r2
 8025ec6:	4604      	mov	r4, r0
 8025ec8:	2301      	movs	r3, #1
 8025eca:	e7f0      	b.n	8025eae <_vfiprintf_r+0x1da>
 8025ecc:	ab03      	add	r3, sp, #12
 8025ece:	9300      	str	r3, [sp, #0]
 8025ed0:	462a      	mov	r2, r5
 8025ed2:	4b16      	ldr	r3, [pc, #88]	; (8025f2c <_vfiprintf_r+0x258>)
 8025ed4:	a904      	add	r1, sp, #16
 8025ed6:	4630      	mov	r0, r6
 8025ed8:	f3af 8000 	nop.w
 8025edc:	4607      	mov	r7, r0
 8025ede:	1c78      	adds	r0, r7, #1
 8025ee0:	d1d6      	bne.n	8025e90 <_vfiprintf_r+0x1bc>
 8025ee2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025ee4:	07d9      	lsls	r1, r3, #31
 8025ee6:	d405      	bmi.n	8025ef4 <_vfiprintf_r+0x220>
 8025ee8:	89ab      	ldrh	r3, [r5, #12]
 8025eea:	059a      	lsls	r2, r3, #22
 8025eec:	d402      	bmi.n	8025ef4 <_vfiprintf_r+0x220>
 8025eee:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025ef0:	f7ff fdf5 	bl	8025ade <__retarget_lock_release_recursive>
 8025ef4:	89ab      	ldrh	r3, [r5, #12]
 8025ef6:	065b      	lsls	r3, r3, #25
 8025ef8:	f53f af12 	bmi.w	8025d20 <_vfiprintf_r+0x4c>
 8025efc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025efe:	e711      	b.n	8025d24 <_vfiprintf_r+0x50>
 8025f00:	ab03      	add	r3, sp, #12
 8025f02:	9300      	str	r3, [sp, #0]
 8025f04:	462a      	mov	r2, r5
 8025f06:	4b09      	ldr	r3, [pc, #36]	; (8025f2c <_vfiprintf_r+0x258>)
 8025f08:	a904      	add	r1, sp, #16
 8025f0a:	4630      	mov	r0, r6
 8025f0c:	f000 f880 	bl	8026010 <_printf_i>
 8025f10:	e7e4      	b.n	8025edc <_vfiprintf_r+0x208>
 8025f12:	bf00      	nop
 8025f14:	0802ba58 	.word	0x0802ba58
 8025f18:	0802ba78 	.word	0x0802ba78
 8025f1c:	0802ba38 	.word	0x0802ba38
 8025f20:	0802ba9c 	.word	0x0802ba9c
 8025f24:	0802baa6 	.word	0x0802baa6
 8025f28:	00000000 	.word	0x00000000
 8025f2c:	08025caf 	.word	0x08025caf
 8025f30:	0802baa2 	.word	0x0802baa2

08025f34 <_printf_common>:
 8025f34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025f38:	4616      	mov	r6, r2
 8025f3a:	4699      	mov	r9, r3
 8025f3c:	688a      	ldr	r2, [r1, #8]
 8025f3e:	690b      	ldr	r3, [r1, #16]
 8025f40:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8025f44:	4293      	cmp	r3, r2
 8025f46:	bfb8      	it	lt
 8025f48:	4613      	movlt	r3, r2
 8025f4a:	6033      	str	r3, [r6, #0]
 8025f4c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8025f50:	4607      	mov	r7, r0
 8025f52:	460c      	mov	r4, r1
 8025f54:	b10a      	cbz	r2, 8025f5a <_printf_common+0x26>
 8025f56:	3301      	adds	r3, #1
 8025f58:	6033      	str	r3, [r6, #0]
 8025f5a:	6823      	ldr	r3, [r4, #0]
 8025f5c:	0699      	lsls	r1, r3, #26
 8025f5e:	bf42      	ittt	mi
 8025f60:	6833      	ldrmi	r3, [r6, #0]
 8025f62:	3302      	addmi	r3, #2
 8025f64:	6033      	strmi	r3, [r6, #0]
 8025f66:	6825      	ldr	r5, [r4, #0]
 8025f68:	f015 0506 	ands.w	r5, r5, #6
 8025f6c:	d106      	bne.n	8025f7c <_printf_common+0x48>
 8025f6e:	f104 0a19 	add.w	sl, r4, #25
 8025f72:	68e3      	ldr	r3, [r4, #12]
 8025f74:	6832      	ldr	r2, [r6, #0]
 8025f76:	1a9b      	subs	r3, r3, r2
 8025f78:	42ab      	cmp	r3, r5
 8025f7a:	dc26      	bgt.n	8025fca <_printf_common+0x96>
 8025f7c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8025f80:	1e13      	subs	r3, r2, #0
 8025f82:	6822      	ldr	r2, [r4, #0]
 8025f84:	bf18      	it	ne
 8025f86:	2301      	movne	r3, #1
 8025f88:	0692      	lsls	r2, r2, #26
 8025f8a:	d42b      	bmi.n	8025fe4 <_printf_common+0xb0>
 8025f8c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8025f90:	4649      	mov	r1, r9
 8025f92:	4638      	mov	r0, r7
 8025f94:	47c0      	blx	r8
 8025f96:	3001      	adds	r0, #1
 8025f98:	d01e      	beq.n	8025fd8 <_printf_common+0xa4>
 8025f9a:	6823      	ldr	r3, [r4, #0]
 8025f9c:	68e5      	ldr	r5, [r4, #12]
 8025f9e:	6832      	ldr	r2, [r6, #0]
 8025fa0:	f003 0306 	and.w	r3, r3, #6
 8025fa4:	2b04      	cmp	r3, #4
 8025fa6:	bf08      	it	eq
 8025fa8:	1aad      	subeq	r5, r5, r2
 8025faa:	68a3      	ldr	r3, [r4, #8]
 8025fac:	6922      	ldr	r2, [r4, #16]
 8025fae:	bf0c      	ite	eq
 8025fb0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8025fb4:	2500      	movne	r5, #0
 8025fb6:	4293      	cmp	r3, r2
 8025fb8:	bfc4      	itt	gt
 8025fba:	1a9b      	subgt	r3, r3, r2
 8025fbc:	18ed      	addgt	r5, r5, r3
 8025fbe:	2600      	movs	r6, #0
 8025fc0:	341a      	adds	r4, #26
 8025fc2:	42b5      	cmp	r5, r6
 8025fc4:	d11a      	bne.n	8025ffc <_printf_common+0xc8>
 8025fc6:	2000      	movs	r0, #0
 8025fc8:	e008      	b.n	8025fdc <_printf_common+0xa8>
 8025fca:	2301      	movs	r3, #1
 8025fcc:	4652      	mov	r2, sl
 8025fce:	4649      	mov	r1, r9
 8025fd0:	4638      	mov	r0, r7
 8025fd2:	47c0      	blx	r8
 8025fd4:	3001      	adds	r0, #1
 8025fd6:	d103      	bne.n	8025fe0 <_printf_common+0xac>
 8025fd8:	f04f 30ff 	mov.w	r0, #4294967295
 8025fdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025fe0:	3501      	adds	r5, #1
 8025fe2:	e7c6      	b.n	8025f72 <_printf_common+0x3e>
 8025fe4:	18e1      	adds	r1, r4, r3
 8025fe6:	1c5a      	adds	r2, r3, #1
 8025fe8:	2030      	movs	r0, #48	; 0x30
 8025fea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8025fee:	4422      	add	r2, r4
 8025ff0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8025ff4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8025ff8:	3302      	adds	r3, #2
 8025ffa:	e7c7      	b.n	8025f8c <_printf_common+0x58>
 8025ffc:	2301      	movs	r3, #1
 8025ffe:	4622      	mov	r2, r4
 8026000:	4649      	mov	r1, r9
 8026002:	4638      	mov	r0, r7
 8026004:	47c0      	blx	r8
 8026006:	3001      	adds	r0, #1
 8026008:	d0e6      	beq.n	8025fd8 <_printf_common+0xa4>
 802600a:	3601      	adds	r6, #1
 802600c:	e7d9      	b.n	8025fc2 <_printf_common+0x8e>
	...

08026010 <_printf_i>:
 8026010:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026014:	460c      	mov	r4, r1
 8026016:	4691      	mov	r9, r2
 8026018:	7e27      	ldrb	r7, [r4, #24]
 802601a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802601c:	2f78      	cmp	r7, #120	; 0x78
 802601e:	4680      	mov	r8, r0
 8026020:	469a      	mov	sl, r3
 8026022:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026026:	d807      	bhi.n	8026038 <_printf_i+0x28>
 8026028:	2f62      	cmp	r7, #98	; 0x62
 802602a:	d80a      	bhi.n	8026042 <_printf_i+0x32>
 802602c:	2f00      	cmp	r7, #0
 802602e:	f000 80d8 	beq.w	80261e2 <_printf_i+0x1d2>
 8026032:	2f58      	cmp	r7, #88	; 0x58
 8026034:	f000 80a3 	beq.w	802617e <_printf_i+0x16e>
 8026038:	f104 0642 	add.w	r6, r4, #66	; 0x42
 802603c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026040:	e03a      	b.n	80260b8 <_printf_i+0xa8>
 8026042:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8026046:	2b15      	cmp	r3, #21
 8026048:	d8f6      	bhi.n	8026038 <_printf_i+0x28>
 802604a:	a001      	add	r0, pc, #4	; (adr r0, 8026050 <_printf_i+0x40>)
 802604c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8026050:	080260a9 	.word	0x080260a9
 8026054:	080260bd 	.word	0x080260bd
 8026058:	08026039 	.word	0x08026039
 802605c:	08026039 	.word	0x08026039
 8026060:	08026039 	.word	0x08026039
 8026064:	08026039 	.word	0x08026039
 8026068:	080260bd 	.word	0x080260bd
 802606c:	08026039 	.word	0x08026039
 8026070:	08026039 	.word	0x08026039
 8026074:	08026039 	.word	0x08026039
 8026078:	08026039 	.word	0x08026039
 802607c:	080261c9 	.word	0x080261c9
 8026080:	080260ed 	.word	0x080260ed
 8026084:	080261ab 	.word	0x080261ab
 8026088:	08026039 	.word	0x08026039
 802608c:	08026039 	.word	0x08026039
 8026090:	080261eb 	.word	0x080261eb
 8026094:	08026039 	.word	0x08026039
 8026098:	080260ed 	.word	0x080260ed
 802609c:	08026039 	.word	0x08026039
 80260a0:	08026039 	.word	0x08026039
 80260a4:	080261b3 	.word	0x080261b3
 80260a8:	680b      	ldr	r3, [r1, #0]
 80260aa:	1d1a      	adds	r2, r3, #4
 80260ac:	681b      	ldr	r3, [r3, #0]
 80260ae:	600a      	str	r2, [r1, #0]
 80260b0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80260b4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80260b8:	2301      	movs	r3, #1
 80260ba:	e0a3      	b.n	8026204 <_printf_i+0x1f4>
 80260bc:	6825      	ldr	r5, [r4, #0]
 80260be:	6808      	ldr	r0, [r1, #0]
 80260c0:	062e      	lsls	r6, r5, #24
 80260c2:	f100 0304 	add.w	r3, r0, #4
 80260c6:	d50a      	bpl.n	80260de <_printf_i+0xce>
 80260c8:	6805      	ldr	r5, [r0, #0]
 80260ca:	600b      	str	r3, [r1, #0]
 80260cc:	2d00      	cmp	r5, #0
 80260ce:	da03      	bge.n	80260d8 <_printf_i+0xc8>
 80260d0:	232d      	movs	r3, #45	; 0x2d
 80260d2:	426d      	negs	r5, r5
 80260d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80260d8:	485e      	ldr	r0, [pc, #376]	; (8026254 <_printf_i+0x244>)
 80260da:	230a      	movs	r3, #10
 80260dc:	e019      	b.n	8026112 <_printf_i+0x102>
 80260de:	f015 0f40 	tst.w	r5, #64	; 0x40
 80260e2:	6805      	ldr	r5, [r0, #0]
 80260e4:	600b      	str	r3, [r1, #0]
 80260e6:	bf18      	it	ne
 80260e8:	b22d      	sxthne	r5, r5
 80260ea:	e7ef      	b.n	80260cc <_printf_i+0xbc>
 80260ec:	680b      	ldr	r3, [r1, #0]
 80260ee:	6825      	ldr	r5, [r4, #0]
 80260f0:	1d18      	adds	r0, r3, #4
 80260f2:	6008      	str	r0, [r1, #0]
 80260f4:	0628      	lsls	r0, r5, #24
 80260f6:	d501      	bpl.n	80260fc <_printf_i+0xec>
 80260f8:	681d      	ldr	r5, [r3, #0]
 80260fa:	e002      	b.n	8026102 <_printf_i+0xf2>
 80260fc:	0669      	lsls	r1, r5, #25
 80260fe:	d5fb      	bpl.n	80260f8 <_printf_i+0xe8>
 8026100:	881d      	ldrh	r5, [r3, #0]
 8026102:	4854      	ldr	r0, [pc, #336]	; (8026254 <_printf_i+0x244>)
 8026104:	2f6f      	cmp	r7, #111	; 0x6f
 8026106:	bf0c      	ite	eq
 8026108:	2308      	moveq	r3, #8
 802610a:	230a      	movne	r3, #10
 802610c:	2100      	movs	r1, #0
 802610e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026112:	6866      	ldr	r6, [r4, #4]
 8026114:	60a6      	str	r6, [r4, #8]
 8026116:	2e00      	cmp	r6, #0
 8026118:	bfa2      	ittt	ge
 802611a:	6821      	ldrge	r1, [r4, #0]
 802611c:	f021 0104 	bicge.w	r1, r1, #4
 8026120:	6021      	strge	r1, [r4, #0]
 8026122:	b90d      	cbnz	r5, 8026128 <_printf_i+0x118>
 8026124:	2e00      	cmp	r6, #0
 8026126:	d04d      	beq.n	80261c4 <_printf_i+0x1b4>
 8026128:	4616      	mov	r6, r2
 802612a:	fbb5 f1f3 	udiv	r1, r5, r3
 802612e:	fb03 5711 	mls	r7, r3, r1, r5
 8026132:	5dc7      	ldrb	r7, [r0, r7]
 8026134:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8026138:	462f      	mov	r7, r5
 802613a:	42bb      	cmp	r3, r7
 802613c:	460d      	mov	r5, r1
 802613e:	d9f4      	bls.n	802612a <_printf_i+0x11a>
 8026140:	2b08      	cmp	r3, #8
 8026142:	d10b      	bne.n	802615c <_printf_i+0x14c>
 8026144:	6823      	ldr	r3, [r4, #0]
 8026146:	07df      	lsls	r7, r3, #31
 8026148:	d508      	bpl.n	802615c <_printf_i+0x14c>
 802614a:	6923      	ldr	r3, [r4, #16]
 802614c:	6861      	ldr	r1, [r4, #4]
 802614e:	4299      	cmp	r1, r3
 8026150:	bfde      	ittt	le
 8026152:	2330      	movle	r3, #48	; 0x30
 8026154:	f806 3c01 	strble.w	r3, [r6, #-1]
 8026158:	f106 36ff 	addle.w	r6, r6, #4294967295
 802615c:	1b92      	subs	r2, r2, r6
 802615e:	6122      	str	r2, [r4, #16]
 8026160:	f8cd a000 	str.w	sl, [sp]
 8026164:	464b      	mov	r3, r9
 8026166:	aa03      	add	r2, sp, #12
 8026168:	4621      	mov	r1, r4
 802616a:	4640      	mov	r0, r8
 802616c:	f7ff fee2 	bl	8025f34 <_printf_common>
 8026170:	3001      	adds	r0, #1
 8026172:	d14c      	bne.n	802620e <_printf_i+0x1fe>
 8026174:	f04f 30ff 	mov.w	r0, #4294967295
 8026178:	b004      	add	sp, #16
 802617a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802617e:	4835      	ldr	r0, [pc, #212]	; (8026254 <_printf_i+0x244>)
 8026180:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8026184:	6823      	ldr	r3, [r4, #0]
 8026186:	680e      	ldr	r6, [r1, #0]
 8026188:	061f      	lsls	r7, r3, #24
 802618a:	f856 5b04 	ldr.w	r5, [r6], #4
 802618e:	600e      	str	r6, [r1, #0]
 8026190:	d514      	bpl.n	80261bc <_printf_i+0x1ac>
 8026192:	07d9      	lsls	r1, r3, #31
 8026194:	bf44      	itt	mi
 8026196:	f043 0320 	orrmi.w	r3, r3, #32
 802619a:	6023      	strmi	r3, [r4, #0]
 802619c:	b91d      	cbnz	r5, 80261a6 <_printf_i+0x196>
 802619e:	6823      	ldr	r3, [r4, #0]
 80261a0:	f023 0320 	bic.w	r3, r3, #32
 80261a4:	6023      	str	r3, [r4, #0]
 80261a6:	2310      	movs	r3, #16
 80261a8:	e7b0      	b.n	802610c <_printf_i+0xfc>
 80261aa:	6823      	ldr	r3, [r4, #0]
 80261ac:	f043 0320 	orr.w	r3, r3, #32
 80261b0:	6023      	str	r3, [r4, #0]
 80261b2:	2378      	movs	r3, #120	; 0x78
 80261b4:	4828      	ldr	r0, [pc, #160]	; (8026258 <_printf_i+0x248>)
 80261b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80261ba:	e7e3      	b.n	8026184 <_printf_i+0x174>
 80261bc:	065e      	lsls	r6, r3, #25
 80261be:	bf48      	it	mi
 80261c0:	b2ad      	uxthmi	r5, r5
 80261c2:	e7e6      	b.n	8026192 <_printf_i+0x182>
 80261c4:	4616      	mov	r6, r2
 80261c6:	e7bb      	b.n	8026140 <_printf_i+0x130>
 80261c8:	680b      	ldr	r3, [r1, #0]
 80261ca:	6826      	ldr	r6, [r4, #0]
 80261cc:	6960      	ldr	r0, [r4, #20]
 80261ce:	1d1d      	adds	r5, r3, #4
 80261d0:	600d      	str	r5, [r1, #0]
 80261d2:	0635      	lsls	r5, r6, #24
 80261d4:	681b      	ldr	r3, [r3, #0]
 80261d6:	d501      	bpl.n	80261dc <_printf_i+0x1cc>
 80261d8:	6018      	str	r0, [r3, #0]
 80261da:	e002      	b.n	80261e2 <_printf_i+0x1d2>
 80261dc:	0671      	lsls	r1, r6, #25
 80261de:	d5fb      	bpl.n	80261d8 <_printf_i+0x1c8>
 80261e0:	8018      	strh	r0, [r3, #0]
 80261e2:	2300      	movs	r3, #0
 80261e4:	6123      	str	r3, [r4, #16]
 80261e6:	4616      	mov	r6, r2
 80261e8:	e7ba      	b.n	8026160 <_printf_i+0x150>
 80261ea:	680b      	ldr	r3, [r1, #0]
 80261ec:	1d1a      	adds	r2, r3, #4
 80261ee:	600a      	str	r2, [r1, #0]
 80261f0:	681e      	ldr	r6, [r3, #0]
 80261f2:	6862      	ldr	r2, [r4, #4]
 80261f4:	2100      	movs	r1, #0
 80261f6:	4630      	mov	r0, r6
 80261f8:	f7da f802 	bl	8000200 <memchr>
 80261fc:	b108      	cbz	r0, 8026202 <_printf_i+0x1f2>
 80261fe:	1b80      	subs	r0, r0, r6
 8026200:	6060      	str	r0, [r4, #4]
 8026202:	6863      	ldr	r3, [r4, #4]
 8026204:	6123      	str	r3, [r4, #16]
 8026206:	2300      	movs	r3, #0
 8026208:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802620c:	e7a8      	b.n	8026160 <_printf_i+0x150>
 802620e:	6923      	ldr	r3, [r4, #16]
 8026210:	4632      	mov	r2, r6
 8026212:	4649      	mov	r1, r9
 8026214:	4640      	mov	r0, r8
 8026216:	47d0      	blx	sl
 8026218:	3001      	adds	r0, #1
 802621a:	d0ab      	beq.n	8026174 <_printf_i+0x164>
 802621c:	6823      	ldr	r3, [r4, #0]
 802621e:	079b      	lsls	r3, r3, #30
 8026220:	d413      	bmi.n	802624a <_printf_i+0x23a>
 8026222:	68e0      	ldr	r0, [r4, #12]
 8026224:	9b03      	ldr	r3, [sp, #12]
 8026226:	4298      	cmp	r0, r3
 8026228:	bfb8      	it	lt
 802622a:	4618      	movlt	r0, r3
 802622c:	e7a4      	b.n	8026178 <_printf_i+0x168>
 802622e:	2301      	movs	r3, #1
 8026230:	4632      	mov	r2, r6
 8026232:	4649      	mov	r1, r9
 8026234:	4640      	mov	r0, r8
 8026236:	47d0      	blx	sl
 8026238:	3001      	adds	r0, #1
 802623a:	d09b      	beq.n	8026174 <_printf_i+0x164>
 802623c:	3501      	adds	r5, #1
 802623e:	68e3      	ldr	r3, [r4, #12]
 8026240:	9903      	ldr	r1, [sp, #12]
 8026242:	1a5b      	subs	r3, r3, r1
 8026244:	42ab      	cmp	r3, r5
 8026246:	dcf2      	bgt.n	802622e <_printf_i+0x21e>
 8026248:	e7eb      	b.n	8026222 <_printf_i+0x212>
 802624a:	2500      	movs	r5, #0
 802624c:	f104 0619 	add.w	r6, r4, #25
 8026250:	e7f5      	b.n	802623e <_printf_i+0x22e>
 8026252:	bf00      	nop
 8026254:	0802baad 	.word	0x0802baad
 8026258:	0802babe 	.word	0x0802babe

0802625c <cleanup_glue>:
 802625c:	b538      	push	{r3, r4, r5, lr}
 802625e:	460c      	mov	r4, r1
 8026260:	6809      	ldr	r1, [r1, #0]
 8026262:	4605      	mov	r5, r0
 8026264:	b109      	cbz	r1, 802626a <cleanup_glue+0xe>
 8026266:	f7ff fff9 	bl	802625c <cleanup_glue>
 802626a:	4621      	mov	r1, r4
 802626c:	4628      	mov	r0, r5
 802626e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8026272:	f7ff bc5b 	b.w	8025b2c <_free_r>
	...

08026278 <_reclaim_reent>:
 8026278:	4b2c      	ldr	r3, [pc, #176]	; (802632c <_reclaim_reent+0xb4>)
 802627a:	681b      	ldr	r3, [r3, #0]
 802627c:	4283      	cmp	r3, r0
 802627e:	b570      	push	{r4, r5, r6, lr}
 8026280:	4604      	mov	r4, r0
 8026282:	d051      	beq.n	8026328 <_reclaim_reent+0xb0>
 8026284:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8026286:	b143      	cbz	r3, 802629a <_reclaim_reent+0x22>
 8026288:	68db      	ldr	r3, [r3, #12]
 802628a:	2b00      	cmp	r3, #0
 802628c:	d14a      	bne.n	8026324 <_reclaim_reent+0xac>
 802628e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8026290:	6819      	ldr	r1, [r3, #0]
 8026292:	b111      	cbz	r1, 802629a <_reclaim_reent+0x22>
 8026294:	4620      	mov	r0, r4
 8026296:	f7ff fc49 	bl	8025b2c <_free_r>
 802629a:	6961      	ldr	r1, [r4, #20]
 802629c:	b111      	cbz	r1, 80262a4 <_reclaim_reent+0x2c>
 802629e:	4620      	mov	r0, r4
 80262a0:	f7ff fc44 	bl	8025b2c <_free_r>
 80262a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80262a6:	b111      	cbz	r1, 80262ae <_reclaim_reent+0x36>
 80262a8:	4620      	mov	r0, r4
 80262aa:	f7ff fc3f 	bl	8025b2c <_free_r>
 80262ae:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80262b0:	b111      	cbz	r1, 80262b8 <_reclaim_reent+0x40>
 80262b2:	4620      	mov	r0, r4
 80262b4:	f7ff fc3a 	bl	8025b2c <_free_r>
 80262b8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80262ba:	b111      	cbz	r1, 80262c2 <_reclaim_reent+0x4a>
 80262bc:	4620      	mov	r0, r4
 80262be:	f7ff fc35 	bl	8025b2c <_free_r>
 80262c2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80262c4:	b111      	cbz	r1, 80262cc <_reclaim_reent+0x54>
 80262c6:	4620      	mov	r0, r4
 80262c8:	f7ff fc30 	bl	8025b2c <_free_r>
 80262cc:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80262ce:	b111      	cbz	r1, 80262d6 <_reclaim_reent+0x5e>
 80262d0:	4620      	mov	r0, r4
 80262d2:	f7ff fc2b 	bl	8025b2c <_free_r>
 80262d6:	6da1      	ldr	r1, [r4, #88]	; 0x58
 80262d8:	b111      	cbz	r1, 80262e0 <_reclaim_reent+0x68>
 80262da:	4620      	mov	r0, r4
 80262dc:	f7ff fc26 	bl	8025b2c <_free_r>
 80262e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80262e2:	b111      	cbz	r1, 80262ea <_reclaim_reent+0x72>
 80262e4:	4620      	mov	r0, r4
 80262e6:	f7ff fc21 	bl	8025b2c <_free_r>
 80262ea:	69a3      	ldr	r3, [r4, #24]
 80262ec:	b1e3      	cbz	r3, 8026328 <_reclaim_reent+0xb0>
 80262ee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80262f0:	4620      	mov	r0, r4
 80262f2:	4798      	blx	r3
 80262f4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80262f6:	b1b9      	cbz	r1, 8026328 <_reclaim_reent+0xb0>
 80262f8:	4620      	mov	r0, r4
 80262fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80262fe:	f7ff bfad 	b.w	802625c <cleanup_glue>
 8026302:	5949      	ldr	r1, [r1, r5]
 8026304:	b941      	cbnz	r1, 8026318 <_reclaim_reent+0xa0>
 8026306:	3504      	adds	r5, #4
 8026308:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802630a:	2d80      	cmp	r5, #128	; 0x80
 802630c:	68d9      	ldr	r1, [r3, #12]
 802630e:	d1f8      	bne.n	8026302 <_reclaim_reent+0x8a>
 8026310:	4620      	mov	r0, r4
 8026312:	f7ff fc0b 	bl	8025b2c <_free_r>
 8026316:	e7ba      	b.n	802628e <_reclaim_reent+0x16>
 8026318:	680e      	ldr	r6, [r1, #0]
 802631a:	4620      	mov	r0, r4
 802631c:	f7ff fc06 	bl	8025b2c <_free_r>
 8026320:	4631      	mov	r1, r6
 8026322:	e7ef      	b.n	8026304 <_reclaim_reent+0x8c>
 8026324:	2500      	movs	r5, #0
 8026326:	e7ef      	b.n	8026308 <_reclaim_reent+0x90>
 8026328:	bd70      	pop	{r4, r5, r6, pc}
 802632a:	bf00      	nop
 802632c:	200000d8 	.word	0x200000d8

08026330 <_sbrk_r>:
 8026330:	b538      	push	{r3, r4, r5, lr}
 8026332:	4d06      	ldr	r5, [pc, #24]	; (802634c <_sbrk_r+0x1c>)
 8026334:	2300      	movs	r3, #0
 8026336:	4604      	mov	r4, r0
 8026338:	4608      	mov	r0, r1
 802633a:	602b      	str	r3, [r5, #0]
 802633c:	f7db fe1a 	bl	8001f74 <_sbrk>
 8026340:	1c43      	adds	r3, r0, #1
 8026342:	d102      	bne.n	802634a <_sbrk_r+0x1a>
 8026344:	682b      	ldr	r3, [r5, #0]
 8026346:	b103      	cbz	r3, 802634a <_sbrk_r+0x1a>
 8026348:	6023      	str	r3, [r4, #0]
 802634a:	bd38      	pop	{r3, r4, r5, pc}
 802634c:	20027f2c 	.word	0x20027f2c

08026350 <_raise_r>:
 8026350:	291f      	cmp	r1, #31
 8026352:	b538      	push	{r3, r4, r5, lr}
 8026354:	4604      	mov	r4, r0
 8026356:	460d      	mov	r5, r1
 8026358:	d904      	bls.n	8026364 <_raise_r+0x14>
 802635a:	2316      	movs	r3, #22
 802635c:	6003      	str	r3, [r0, #0]
 802635e:	f04f 30ff 	mov.w	r0, #4294967295
 8026362:	bd38      	pop	{r3, r4, r5, pc}
 8026364:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8026366:	b112      	cbz	r2, 802636e <_raise_r+0x1e>
 8026368:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802636c:	b94b      	cbnz	r3, 8026382 <_raise_r+0x32>
 802636e:	4620      	mov	r0, r4
 8026370:	f000 f830 	bl	80263d4 <_getpid_r>
 8026374:	462a      	mov	r2, r5
 8026376:	4601      	mov	r1, r0
 8026378:	4620      	mov	r0, r4
 802637a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802637e:	f000 b817 	b.w	80263b0 <_kill_r>
 8026382:	2b01      	cmp	r3, #1
 8026384:	d00a      	beq.n	802639c <_raise_r+0x4c>
 8026386:	1c59      	adds	r1, r3, #1
 8026388:	d103      	bne.n	8026392 <_raise_r+0x42>
 802638a:	2316      	movs	r3, #22
 802638c:	6003      	str	r3, [r0, #0]
 802638e:	2001      	movs	r0, #1
 8026390:	e7e7      	b.n	8026362 <_raise_r+0x12>
 8026392:	2400      	movs	r4, #0
 8026394:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8026398:	4628      	mov	r0, r5
 802639a:	4798      	blx	r3
 802639c:	2000      	movs	r0, #0
 802639e:	e7e0      	b.n	8026362 <_raise_r+0x12>

080263a0 <raise>:
 80263a0:	4b02      	ldr	r3, [pc, #8]	; (80263ac <raise+0xc>)
 80263a2:	4601      	mov	r1, r0
 80263a4:	6818      	ldr	r0, [r3, #0]
 80263a6:	f7ff bfd3 	b.w	8026350 <_raise_r>
 80263aa:	bf00      	nop
 80263ac:	200000d8 	.word	0x200000d8

080263b0 <_kill_r>:
 80263b0:	b538      	push	{r3, r4, r5, lr}
 80263b2:	4d07      	ldr	r5, [pc, #28]	; (80263d0 <_kill_r+0x20>)
 80263b4:	2300      	movs	r3, #0
 80263b6:	4604      	mov	r4, r0
 80263b8:	4608      	mov	r0, r1
 80263ba:	4611      	mov	r1, r2
 80263bc:	602b      	str	r3, [r5, #0]
 80263be:	f7db fda5 	bl	8001f0c <_kill>
 80263c2:	1c43      	adds	r3, r0, #1
 80263c4:	d102      	bne.n	80263cc <_kill_r+0x1c>
 80263c6:	682b      	ldr	r3, [r5, #0]
 80263c8:	b103      	cbz	r3, 80263cc <_kill_r+0x1c>
 80263ca:	6023      	str	r3, [r4, #0]
 80263cc:	bd38      	pop	{r3, r4, r5, pc}
 80263ce:	bf00      	nop
 80263d0:	20027f2c 	.word	0x20027f2c

080263d4 <_getpid_r>:
 80263d4:	f7db bd98 	b.w	8001f08 <_getpid>

080263d8 <__sread>:
 80263d8:	b510      	push	{r4, lr}
 80263da:	460c      	mov	r4, r1
 80263dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80263e0:	f000 fac6 	bl	8026970 <_read_r>
 80263e4:	2800      	cmp	r0, #0
 80263e6:	bfab      	itete	ge
 80263e8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80263ea:	89a3      	ldrhlt	r3, [r4, #12]
 80263ec:	181b      	addge	r3, r3, r0
 80263ee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80263f2:	bfac      	ite	ge
 80263f4:	6563      	strge	r3, [r4, #84]	; 0x54
 80263f6:	81a3      	strhlt	r3, [r4, #12]
 80263f8:	bd10      	pop	{r4, pc}

080263fa <__swrite>:
 80263fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80263fe:	461f      	mov	r7, r3
 8026400:	898b      	ldrh	r3, [r1, #12]
 8026402:	05db      	lsls	r3, r3, #23
 8026404:	4605      	mov	r5, r0
 8026406:	460c      	mov	r4, r1
 8026408:	4616      	mov	r6, r2
 802640a:	d505      	bpl.n	8026418 <__swrite+0x1e>
 802640c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026410:	2302      	movs	r3, #2
 8026412:	2200      	movs	r2, #0
 8026414:	f000 fa2a 	bl	802686c <_lseek_r>
 8026418:	89a3      	ldrh	r3, [r4, #12]
 802641a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802641e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8026422:	81a3      	strh	r3, [r4, #12]
 8026424:	4632      	mov	r2, r6
 8026426:	463b      	mov	r3, r7
 8026428:	4628      	mov	r0, r5
 802642a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802642e:	f000 b869 	b.w	8026504 <_write_r>

08026432 <__sseek>:
 8026432:	b510      	push	{r4, lr}
 8026434:	460c      	mov	r4, r1
 8026436:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802643a:	f000 fa17 	bl	802686c <_lseek_r>
 802643e:	1c43      	adds	r3, r0, #1
 8026440:	89a3      	ldrh	r3, [r4, #12]
 8026442:	bf15      	itete	ne
 8026444:	6560      	strne	r0, [r4, #84]	; 0x54
 8026446:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802644a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802644e:	81a3      	strheq	r3, [r4, #12]
 8026450:	bf18      	it	ne
 8026452:	81a3      	strhne	r3, [r4, #12]
 8026454:	bd10      	pop	{r4, pc}

08026456 <__sclose>:
 8026456:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802645a:	f000 b935 	b.w	80266c8 <_close_r>
	...

08026460 <__swbuf_r>:
 8026460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026462:	460e      	mov	r6, r1
 8026464:	4614      	mov	r4, r2
 8026466:	4605      	mov	r5, r0
 8026468:	b118      	cbz	r0, 8026472 <__swbuf_r+0x12>
 802646a:	6983      	ldr	r3, [r0, #24]
 802646c:	b90b      	cbnz	r3, 8026472 <__swbuf_r+0x12>
 802646e:	f7ff fa4b 	bl	8025908 <__sinit>
 8026472:	4b21      	ldr	r3, [pc, #132]	; (80264f8 <__swbuf_r+0x98>)
 8026474:	429c      	cmp	r4, r3
 8026476:	d12b      	bne.n	80264d0 <__swbuf_r+0x70>
 8026478:	686c      	ldr	r4, [r5, #4]
 802647a:	69a3      	ldr	r3, [r4, #24]
 802647c:	60a3      	str	r3, [r4, #8]
 802647e:	89a3      	ldrh	r3, [r4, #12]
 8026480:	071a      	lsls	r2, r3, #28
 8026482:	d52f      	bpl.n	80264e4 <__swbuf_r+0x84>
 8026484:	6923      	ldr	r3, [r4, #16]
 8026486:	b36b      	cbz	r3, 80264e4 <__swbuf_r+0x84>
 8026488:	6923      	ldr	r3, [r4, #16]
 802648a:	6820      	ldr	r0, [r4, #0]
 802648c:	1ac0      	subs	r0, r0, r3
 802648e:	6963      	ldr	r3, [r4, #20]
 8026490:	b2f6      	uxtb	r6, r6
 8026492:	4283      	cmp	r3, r0
 8026494:	4637      	mov	r7, r6
 8026496:	dc04      	bgt.n	80264a2 <__swbuf_r+0x42>
 8026498:	4621      	mov	r1, r4
 802649a:	4628      	mov	r0, r5
 802649c:	f000 f9aa 	bl	80267f4 <_fflush_r>
 80264a0:	bb30      	cbnz	r0, 80264f0 <__swbuf_r+0x90>
 80264a2:	68a3      	ldr	r3, [r4, #8]
 80264a4:	3b01      	subs	r3, #1
 80264a6:	60a3      	str	r3, [r4, #8]
 80264a8:	6823      	ldr	r3, [r4, #0]
 80264aa:	1c5a      	adds	r2, r3, #1
 80264ac:	6022      	str	r2, [r4, #0]
 80264ae:	701e      	strb	r6, [r3, #0]
 80264b0:	6963      	ldr	r3, [r4, #20]
 80264b2:	3001      	adds	r0, #1
 80264b4:	4283      	cmp	r3, r0
 80264b6:	d004      	beq.n	80264c2 <__swbuf_r+0x62>
 80264b8:	89a3      	ldrh	r3, [r4, #12]
 80264ba:	07db      	lsls	r3, r3, #31
 80264bc:	d506      	bpl.n	80264cc <__swbuf_r+0x6c>
 80264be:	2e0a      	cmp	r6, #10
 80264c0:	d104      	bne.n	80264cc <__swbuf_r+0x6c>
 80264c2:	4621      	mov	r1, r4
 80264c4:	4628      	mov	r0, r5
 80264c6:	f000 f995 	bl	80267f4 <_fflush_r>
 80264ca:	b988      	cbnz	r0, 80264f0 <__swbuf_r+0x90>
 80264cc:	4638      	mov	r0, r7
 80264ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80264d0:	4b0a      	ldr	r3, [pc, #40]	; (80264fc <__swbuf_r+0x9c>)
 80264d2:	429c      	cmp	r4, r3
 80264d4:	d101      	bne.n	80264da <__swbuf_r+0x7a>
 80264d6:	68ac      	ldr	r4, [r5, #8]
 80264d8:	e7cf      	b.n	802647a <__swbuf_r+0x1a>
 80264da:	4b09      	ldr	r3, [pc, #36]	; (8026500 <__swbuf_r+0xa0>)
 80264dc:	429c      	cmp	r4, r3
 80264de:	bf08      	it	eq
 80264e0:	68ec      	ldreq	r4, [r5, #12]
 80264e2:	e7ca      	b.n	802647a <__swbuf_r+0x1a>
 80264e4:	4621      	mov	r1, r4
 80264e6:	4628      	mov	r0, r5
 80264e8:	f000 f81e 	bl	8026528 <__swsetup_r>
 80264ec:	2800      	cmp	r0, #0
 80264ee:	d0cb      	beq.n	8026488 <__swbuf_r+0x28>
 80264f0:	f04f 37ff 	mov.w	r7, #4294967295
 80264f4:	e7ea      	b.n	80264cc <__swbuf_r+0x6c>
 80264f6:	bf00      	nop
 80264f8:	0802ba58 	.word	0x0802ba58
 80264fc:	0802ba78 	.word	0x0802ba78
 8026500:	0802ba38 	.word	0x0802ba38

08026504 <_write_r>:
 8026504:	b538      	push	{r3, r4, r5, lr}
 8026506:	4d07      	ldr	r5, [pc, #28]	; (8026524 <_write_r+0x20>)
 8026508:	4604      	mov	r4, r0
 802650a:	4608      	mov	r0, r1
 802650c:	4611      	mov	r1, r2
 802650e:	2200      	movs	r2, #0
 8026510:	602a      	str	r2, [r5, #0]
 8026512:	461a      	mov	r2, r3
 8026514:	f7db fd15 	bl	8001f42 <_write>
 8026518:	1c43      	adds	r3, r0, #1
 802651a:	d102      	bne.n	8026522 <_write_r+0x1e>
 802651c:	682b      	ldr	r3, [r5, #0]
 802651e:	b103      	cbz	r3, 8026522 <_write_r+0x1e>
 8026520:	6023      	str	r3, [r4, #0]
 8026522:	bd38      	pop	{r3, r4, r5, pc}
 8026524:	20027f2c 	.word	0x20027f2c

08026528 <__swsetup_r>:
 8026528:	4b32      	ldr	r3, [pc, #200]	; (80265f4 <__swsetup_r+0xcc>)
 802652a:	b570      	push	{r4, r5, r6, lr}
 802652c:	681d      	ldr	r5, [r3, #0]
 802652e:	4606      	mov	r6, r0
 8026530:	460c      	mov	r4, r1
 8026532:	b125      	cbz	r5, 802653e <__swsetup_r+0x16>
 8026534:	69ab      	ldr	r3, [r5, #24]
 8026536:	b913      	cbnz	r3, 802653e <__swsetup_r+0x16>
 8026538:	4628      	mov	r0, r5
 802653a:	f7ff f9e5 	bl	8025908 <__sinit>
 802653e:	4b2e      	ldr	r3, [pc, #184]	; (80265f8 <__swsetup_r+0xd0>)
 8026540:	429c      	cmp	r4, r3
 8026542:	d10f      	bne.n	8026564 <__swsetup_r+0x3c>
 8026544:	686c      	ldr	r4, [r5, #4]
 8026546:	89a3      	ldrh	r3, [r4, #12]
 8026548:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802654c:	0719      	lsls	r1, r3, #28
 802654e:	d42c      	bmi.n	80265aa <__swsetup_r+0x82>
 8026550:	06dd      	lsls	r5, r3, #27
 8026552:	d411      	bmi.n	8026578 <__swsetup_r+0x50>
 8026554:	2309      	movs	r3, #9
 8026556:	6033      	str	r3, [r6, #0]
 8026558:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802655c:	81a3      	strh	r3, [r4, #12]
 802655e:	f04f 30ff 	mov.w	r0, #4294967295
 8026562:	e03e      	b.n	80265e2 <__swsetup_r+0xba>
 8026564:	4b25      	ldr	r3, [pc, #148]	; (80265fc <__swsetup_r+0xd4>)
 8026566:	429c      	cmp	r4, r3
 8026568:	d101      	bne.n	802656e <__swsetup_r+0x46>
 802656a:	68ac      	ldr	r4, [r5, #8]
 802656c:	e7eb      	b.n	8026546 <__swsetup_r+0x1e>
 802656e:	4b24      	ldr	r3, [pc, #144]	; (8026600 <__swsetup_r+0xd8>)
 8026570:	429c      	cmp	r4, r3
 8026572:	bf08      	it	eq
 8026574:	68ec      	ldreq	r4, [r5, #12]
 8026576:	e7e6      	b.n	8026546 <__swsetup_r+0x1e>
 8026578:	0758      	lsls	r0, r3, #29
 802657a:	d512      	bpl.n	80265a2 <__swsetup_r+0x7a>
 802657c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802657e:	b141      	cbz	r1, 8026592 <__swsetup_r+0x6a>
 8026580:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026584:	4299      	cmp	r1, r3
 8026586:	d002      	beq.n	802658e <__swsetup_r+0x66>
 8026588:	4630      	mov	r0, r6
 802658a:	f7ff facf 	bl	8025b2c <_free_r>
 802658e:	2300      	movs	r3, #0
 8026590:	6363      	str	r3, [r4, #52]	; 0x34
 8026592:	89a3      	ldrh	r3, [r4, #12]
 8026594:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026598:	81a3      	strh	r3, [r4, #12]
 802659a:	2300      	movs	r3, #0
 802659c:	6063      	str	r3, [r4, #4]
 802659e:	6923      	ldr	r3, [r4, #16]
 80265a0:	6023      	str	r3, [r4, #0]
 80265a2:	89a3      	ldrh	r3, [r4, #12]
 80265a4:	f043 0308 	orr.w	r3, r3, #8
 80265a8:	81a3      	strh	r3, [r4, #12]
 80265aa:	6923      	ldr	r3, [r4, #16]
 80265ac:	b94b      	cbnz	r3, 80265c2 <__swsetup_r+0x9a>
 80265ae:	89a3      	ldrh	r3, [r4, #12]
 80265b0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80265b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80265b8:	d003      	beq.n	80265c2 <__swsetup_r+0x9a>
 80265ba:	4621      	mov	r1, r4
 80265bc:	4630      	mov	r0, r6
 80265be:	f000 f98b 	bl	80268d8 <__smakebuf_r>
 80265c2:	89a0      	ldrh	r0, [r4, #12]
 80265c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80265c8:	f010 0301 	ands.w	r3, r0, #1
 80265cc:	d00a      	beq.n	80265e4 <__swsetup_r+0xbc>
 80265ce:	2300      	movs	r3, #0
 80265d0:	60a3      	str	r3, [r4, #8]
 80265d2:	6963      	ldr	r3, [r4, #20]
 80265d4:	425b      	negs	r3, r3
 80265d6:	61a3      	str	r3, [r4, #24]
 80265d8:	6923      	ldr	r3, [r4, #16]
 80265da:	b943      	cbnz	r3, 80265ee <__swsetup_r+0xc6>
 80265dc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80265e0:	d1ba      	bne.n	8026558 <__swsetup_r+0x30>
 80265e2:	bd70      	pop	{r4, r5, r6, pc}
 80265e4:	0781      	lsls	r1, r0, #30
 80265e6:	bf58      	it	pl
 80265e8:	6963      	ldrpl	r3, [r4, #20]
 80265ea:	60a3      	str	r3, [r4, #8]
 80265ec:	e7f4      	b.n	80265d8 <__swsetup_r+0xb0>
 80265ee:	2000      	movs	r0, #0
 80265f0:	e7f7      	b.n	80265e2 <__swsetup_r+0xba>
 80265f2:	bf00      	nop
 80265f4:	200000d8 	.word	0x200000d8
 80265f8:	0802ba58 	.word	0x0802ba58
 80265fc:	0802ba78 	.word	0x0802ba78
 8026600:	0802ba38 	.word	0x0802ba38

08026604 <__register_exitproc>:
 8026604:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026608:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80266c4 <__register_exitproc+0xc0>
 802660c:	4606      	mov	r6, r0
 802660e:	f8d8 0000 	ldr.w	r0, [r8]
 8026612:	461f      	mov	r7, r3
 8026614:	460d      	mov	r5, r1
 8026616:	4691      	mov	r9, r2
 8026618:	f7ff fa5f 	bl	8025ada <__retarget_lock_acquire_recursive>
 802661c:	4b25      	ldr	r3, [pc, #148]	; (80266b4 <__register_exitproc+0xb0>)
 802661e:	681c      	ldr	r4, [r3, #0]
 8026620:	b934      	cbnz	r4, 8026630 <__register_exitproc+0x2c>
 8026622:	4c25      	ldr	r4, [pc, #148]	; (80266b8 <__register_exitproc+0xb4>)
 8026624:	601c      	str	r4, [r3, #0]
 8026626:	4b25      	ldr	r3, [pc, #148]	; (80266bc <__register_exitproc+0xb8>)
 8026628:	b113      	cbz	r3, 8026630 <__register_exitproc+0x2c>
 802662a:	681b      	ldr	r3, [r3, #0]
 802662c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8026630:	6863      	ldr	r3, [r4, #4]
 8026632:	2b1f      	cmp	r3, #31
 8026634:	dd07      	ble.n	8026646 <__register_exitproc+0x42>
 8026636:	f8d8 0000 	ldr.w	r0, [r8]
 802663a:	f7ff fa50 	bl	8025ade <__retarget_lock_release_recursive>
 802663e:	f04f 30ff 	mov.w	r0, #4294967295
 8026642:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026646:	b34e      	cbz	r6, 802669c <__register_exitproc+0x98>
 8026648:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802664c:	b988      	cbnz	r0, 8026672 <__register_exitproc+0x6e>
 802664e:	4b1c      	ldr	r3, [pc, #112]	; (80266c0 <__register_exitproc+0xbc>)
 8026650:	b923      	cbnz	r3, 802665c <__register_exitproc+0x58>
 8026652:	f8d8 0000 	ldr.w	r0, [r8]
 8026656:	f7ff fa41 	bl	8025adc <__retarget_lock_release>
 802665a:	e7f0      	b.n	802663e <__register_exitproc+0x3a>
 802665c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8026660:	f7ff fa3e 	bl	8025ae0 <malloc>
 8026664:	2800      	cmp	r0, #0
 8026666:	d0f4      	beq.n	8026652 <__register_exitproc+0x4e>
 8026668:	2300      	movs	r3, #0
 802666a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802666e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8026672:	6863      	ldr	r3, [r4, #4]
 8026674:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026678:	2201      	movs	r2, #1
 802667a:	409a      	lsls	r2, r3
 802667c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8026680:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8026684:	4313      	orrs	r3, r2
 8026686:	2e02      	cmp	r6, #2
 8026688:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802668c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8026690:	bf02      	ittt	eq
 8026692:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8026696:	431a      	orreq	r2, r3
 8026698:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 802669c:	6863      	ldr	r3, [r4, #4]
 802669e:	f8d8 0000 	ldr.w	r0, [r8]
 80266a2:	1c5a      	adds	r2, r3, #1
 80266a4:	3302      	adds	r3, #2
 80266a6:	6062      	str	r2, [r4, #4]
 80266a8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80266ac:	f7ff fa17 	bl	8025ade <__retarget_lock_release_recursive>
 80266b0:	2000      	movs	r0, #0
 80266b2:	e7c6      	b.n	8026642 <__register_exitproc+0x3e>
 80266b4:	20027c48 	.word	0x20027c48
 80266b8:	20027bbc 	.word	0x20027bbc
 80266bc:	0802bad0 	.word	0x0802bad0
 80266c0:	08025ae1 	.word	0x08025ae1
 80266c4:	2000013c 	.word	0x2000013c

080266c8 <_close_r>:
 80266c8:	b538      	push	{r3, r4, r5, lr}
 80266ca:	4d06      	ldr	r5, [pc, #24]	; (80266e4 <_close_r+0x1c>)
 80266cc:	2300      	movs	r3, #0
 80266ce:	4604      	mov	r4, r0
 80266d0:	4608      	mov	r0, r1
 80266d2:	602b      	str	r3, [r5, #0]
 80266d4:	f7db fc42 	bl	8001f5c <_close>
 80266d8:	1c43      	adds	r3, r0, #1
 80266da:	d102      	bne.n	80266e2 <_close_r+0x1a>
 80266dc:	682b      	ldr	r3, [r5, #0]
 80266de:	b103      	cbz	r3, 80266e2 <_close_r+0x1a>
 80266e0:	6023      	str	r3, [r4, #0]
 80266e2:	bd38      	pop	{r3, r4, r5, pc}
 80266e4:	20027f2c 	.word	0x20027f2c

080266e8 <__sflush_r>:
 80266e8:	898a      	ldrh	r2, [r1, #12]
 80266ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80266ee:	4605      	mov	r5, r0
 80266f0:	0710      	lsls	r0, r2, #28
 80266f2:	460c      	mov	r4, r1
 80266f4:	d458      	bmi.n	80267a8 <__sflush_r+0xc0>
 80266f6:	684b      	ldr	r3, [r1, #4]
 80266f8:	2b00      	cmp	r3, #0
 80266fa:	dc05      	bgt.n	8026708 <__sflush_r+0x20>
 80266fc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80266fe:	2b00      	cmp	r3, #0
 8026700:	dc02      	bgt.n	8026708 <__sflush_r+0x20>
 8026702:	2000      	movs	r0, #0
 8026704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026708:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802670a:	2e00      	cmp	r6, #0
 802670c:	d0f9      	beq.n	8026702 <__sflush_r+0x1a>
 802670e:	2300      	movs	r3, #0
 8026710:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026714:	682f      	ldr	r7, [r5, #0]
 8026716:	602b      	str	r3, [r5, #0]
 8026718:	d032      	beq.n	8026780 <__sflush_r+0x98>
 802671a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802671c:	89a3      	ldrh	r3, [r4, #12]
 802671e:	075a      	lsls	r2, r3, #29
 8026720:	d505      	bpl.n	802672e <__sflush_r+0x46>
 8026722:	6863      	ldr	r3, [r4, #4]
 8026724:	1ac0      	subs	r0, r0, r3
 8026726:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8026728:	b10b      	cbz	r3, 802672e <__sflush_r+0x46>
 802672a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802672c:	1ac0      	subs	r0, r0, r3
 802672e:	2300      	movs	r3, #0
 8026730:	4602      	mov	r2, r0
 8026732:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026734:	6a21      	ldr	r1, [r4, #32]
 8026736:	4628      	mov	r0, r5
 8026738:	47b0      	blx	r6
 802673a:	1c43      	adds	r3, r0, #1
 802673c:	89a3      	ldrh	r3, [r4, #12]
 802673e:	d106      	bne.n	802674e <__sflush_r+0x66>
 8026740:	6829      	ldr	r1, [r5, #0]
 8026742:	291d      	cmp	r1, #29
 8026744:	d82c      	bhi.n	80267a0 <__sflush_r+0xb8>
 8026746:	4a2a      	ldr	r2, [pc, #168]	; (80267f0 <__sflush_r+0x108>)
 8026748:	40ca      	lsrs	r2, r1
 802674a:	07d6      	lsls	r6, r2, #31
 802674c:	d528      	bpl.n	80267a0 <__sflush_r+0xb8>
 802674e:	2200      	movs	r2, #0
 8026750:	6062      	str	r2, [r4, #4]
 8026752:	04d9      	lsls	r1, r3, #19
 8026754:	6922      	ldr	r2, [r4, #16]
 8026756:	6022      	str	r2, [r4, #0]
 8026758:	d504      	bpl.n	8026764 <__sflush_r+0x7c>
 802675a:	1c42      	adds	r2, r0, #1
 802675c:	d101      	bne.n	8026762 <__sflush_r+0x7a>
 802675e:	682b      	ldr	r3, [r5, #0]
 8026760:	b903      	cbnz	r3, 8026764 <__sflush_r+0x7c>
 8026762:	6560      	str	r0, [r4, #84]	; 0x54
 8026764:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026766:	602f      	str	r7, [r5, #0]
 8026768:	2900      	cmp	r1, #0
 802676a:	d0ca      	beq.n	8026702 <__sflush_r+0x1a>
 802676c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026770:	4299      	cmp	r1, r3
 8026772:	d002      	beq.n	802677a <__sflush_r+0x92>
 8026774:	4628      	mov	r0, r5
 8026776:	f7ff f9d9 	bl	8025b2c <_free_r>
 802677a:	2000      	movs	r0, #0
 802677c:	6360      	str	r0, [r4, #52]	; 0x34
 802677e:	e7c1      	b.n	8026704 <__sflush_r+0x1c>
 8026780:	6a21      	ldr	r1, [r4, #32]
 8026782:	2301      	movs	r3, #1
 8026784:	4628      	mov	r0, r5
 8026786:	47b0      	blx	r6
 8026788:	1c41      	adds	r1, r0, #1
 802678a:	d1c7      	bne.n	802671c <__sflush_r+0x34>
 802678c:	682b      	ldr	r3, [r5, #0]
 802678e:	2b00      	cmp	r3, #0
 8026790:	d0c4      	beq.n	802671c <__sflush_r+0x34>
 8026792:	2b1d      	cmp	r3, #29
 8026794:	d001      	beq.n	802679a <__sflush_r+0xb2>
 8026796:	2b16      	cmp	r3, #22
 8026798:	d101      	bne.n	802679e <__sflush_r+0xb6>
 802679a:	602f      	str	r7, [r5, #0]
 802679c:	e7b1      	b.n	8026702 <__sflush_r+0x1a>
 802679e:	89a3      	ldrh	r3, [r4, #12]
 80267a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80267a4:	81a3      	strh	r3, [r4, #12]
 80267a6:	e7ad      	b.n	8026704 <__sflush_r+0x1c>
 80267a8:	690f      	ldr	r7, [r1, #16]
 80267aa:	2f00      	cmp	r7, #0
 80267ac:	d0a9      	beq.n	8026702 <__sflush_r+0x1a>
 80267ae:	0793      	lsls	r3, r2, #30
 80267b0:	680e      	ldr	r6, [r1, #0]
 80267b2:	bf08      	it	eq
 80267b4:	694b      	ldreq	r3, [r1, #20]
 80267b6:	600f      	str	r7, [r1, #0]
 80267b8:	bf18      	it	ne
 80267ba:	2300      	movne	r3, #0
 80267bc:	eba6 0807 	sub.w	r8, r6, r7
 80267c0:	608b      	str	r3, [r1, #8]
 80267c2:	f1b8 0f00 	cmp.w	r8, #0
 80267c6:	dd9c      	ble.n	8026702 <__sflush_r+0x1a>
 80267c8:	6a21      	ldr	r1, [r4, #32]
 80267ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80267cc:	4643      	mov	r3, r8
 80267ce:	463a      	mov	r2, r7
 80267d0:	4628      	mov	r0, r5
 80267d2:	47b0      	blx	r6
 80267d4:	2800      	cmp	r0, #0
 80267d6:	dc06      	bgt.n	80267e6 <__sflush_r+0xfe>
 80267d8:	89a3      	ldrh	r3, [r4, #12]
 80267da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80267de:	81a3      	strh	r3, [r4, #12]
 80267e0:	f04f 30ff 	mov.w	r0, #4294967295
 80267e4:	e78e      	b.n	8026704 <__sflush_r+0x1c>
 80267e6:	4407      	add	r7, r0
 80267e8:	eba8 0800 	sub.w	r8, r8, r0
 80267ec:	e7e9      	b.n	80267c2 <__sflush_r+0xda>
 80267ee:	bf00      	nop
 80267f0:	20400001 	.word	0x20400001

080267f4 <_fflush_r>:
 80267f4:	b538      	push	{r3, r4, r5, lr}
 80267f6:	690b      	ldr	r3, [r1, #16]
 80267f8:	4605      	mov	r5, r0
 80267fa:	460c      	mov	r4, r1
 80267fc:	b913      	cbnz	r3, 8026804 <_fflush_r+0x10>
 80267fe:	2500      	movs	r5, #0
 8026800:	4628      	mov	r0, r5
 8026802:	bd38      	pop	{r3, r4, r5, pc}
 8026804:	b118      	cbz	r0, 802680e <_fflush_r+0x1a>
 8026806:	6983      	ldr	r3, [r0, #24]
 8026808:	b90b      	cbnz	r3, 802680e <_fflush_r+0x1a>
 802680a:	f7ff f87d 	bl	8025908 <__sinit>
 802680e:	4b14      	ldr	r3, [pc, #80]	; (8026860 <_fflush_r+0x6c>)
 8026810:	429c      	cmp	r4, r3
 8026812:	d11b      	bne.n	802684c <_fflush_r+0x58>
 8026814:	686c      	ldr	r4, [r5, #4]
 8026816:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802681a:	2b00      	cmp	r3, #0
 802681c:	d0ef      	beq.n	80267fe <_fflush_r+0xa>
 802681e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8026820:	07d0      	lsls	r0, r2, #31
 8026822:	d404      	bmi.n	802682e <_fflush_r+0x3a>
 8026824:	0599      	lsls	r1, r3, #22
 8026826:	d402      	bmi.n	802682e <_fflush_r+0x3a>
 8026828:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802682a:	f7ff f956 	bl	8025ada <__retarget_lock_acquire_recursive>
 802682e:	4628      	mov	r0, r5
 8026830:	4621      	mov	r1, r4
 8026832:	f7ff ff59 	bl	80266e8 <__sflush_r>
 8026836:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026838:	07da      	lsls	r2, r3, #31
 802683a:	4605      	mov	r5, r0
 802683c:	d4e0      	bmi.n	8026800 <_fflush_r+0xc>
 802683e:	89a3      	ldrh	r3, [r4, #12]
 8026840:	059b      	lsls	r3, r3, #22
 8026842:	d4dd      	bmi.n	8026800 <_fflush_r+0xc>
 8026844:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026846:	f7ff f94a 	bl	8025ade <__retarget_lock_release_recursive>
 802684a:	e7d9      	b.n	8026800 <_fflush_r+0xc>
 802684c:	4b05      	ldr	r3, [pc, #20]	; (8026864 <_fflush_r+0x70>)
 802684e:	429c      	cmp	r4, r3
 8026850:	d101      	bne.n	8026856 <_fflush_r+0x62>
 8026852:	68ac      	ldr	r4, [r5, #8]
 8026854:	e7df      	b.n	8026816 <_fflush_r+0x22>
 8026856:	4b04      	ldr	r3, [pc, #16]	; (8026868 <_fflush_r+0x74>)
 8026858:	429c      	cmp	r4, r3
 802685a:	bf08      	it	eq
 802685c:	68ec      	ldreq	r4, [r5, #12]
 802685e:	e7da      	b.n	8026816 <_fflush_r+0x22>
 8026860:	0802ba58 	.word	0x0802ba58
 8026864:	0802ba78 	.word	0x0802ba78
 8026868:	0802ba38 	.word	0x0802ba38

0802686c <_lseek_r>:
 802686c:	b538      	push	{r3, r4, r5, lr}
 802686e:	4d07      	ldr	r5, [pc, #28]	; (802688c <_lseek_r+0x20>)
 8026870:	4604      	mov	r4, r0
 8026872:	4608      	mov	r0, r1
 8026874:	4611      	mov	r1, r2
 8026876:	2200      	movs	r2, #0
 8026878:	602a      	str	r2, [r5, #0]
 802687a:	461a      	mov	r2, r3
 802687c:	f7db fb78 	bl	8001f70 <_lseek>
 8026880:	1c43      	adds	r3, r0, #1
 8026882:	d102      	bne.n	802688a <_lseek_r+0x1e>
 8026884:	682b      	ldr	r3, [r5, #0]
 8026886:	b103      	cbz	r3, 802688a <_lseek_r+0x1e>
 8026888:	6023      	str	r3, [r4, #0]
 802688a:	bd38      	pop	{r3, r4, r5, pc}
 802688c:	20027f2c 	.word	0x20027f2c

08026890 <__swhatbuf_r>:
 8026890:	b570      	push	{r4, r5, r6, lr}
 8026892:	460e      	mov	r6, r1
 8026894:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026898:	2900      	cmp	r1, #0
 802689a:	b096      	sub	sp, #88	; 0x58
 802689c:	4614      	mov	r4, r2
 802689e:	461d      	mov	r5, r3
 80268a0:	da07      	bge.n	80268b2 <__swhatbuf_r+0x22>
 80268a2:	2300      	movs	r3, #0
 80268a4:	602b      	str	r3, [r5, #0]
 80268a6:	89b3      	ldrh	r3, [r6, #12]
 80268a8:	061a      	lsls	r2, r3, #24
 80268aa:	d410      	bmi.n	80268ce <__swhatbuf_r+0x3e>
 80268ac:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80268b0:	e00e      	b.n	80268d0 <__swhatbuf_r+0x40>
 80268b2:	466a      	mov	r2, sp
 80268b4:	f000 f86e 	bl	8026994 <_fstat_r>
 80268b8:	2800      	cmp	r0, #0
 80268ba:	dbf2      	blt.n	80268a2 <__swhatbuf_r+0x12>
 80268bc:	9a01      	ldr	r2, [sp, #4]
 80268be:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80268c2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80268c6:	425a      	negs	r2, r3
 80268c8:	415a      	adcs	r2, r3
 80268ca:	602a      	str	r2, [r5, #0]
 80268cc:	e7ee      	b.n	80268ac <__swhatbuf_r+0x1c>
 80268ce:	2340      	movs	r3, #64	; 0x40
 80268d0:	2000      	movs	r0, #0
 80268d2:	6023      	str	r3, [r4, #0]
 80268d4:	b016      	add	sp, #88	; 0x58
 80268d6:	bd70      	pop	{r4, r5, r6, pc}

080268d8 <__smakebuf_r>:
 80268d8:	898b      	ldrh	r3, [r1, #12]
 80268da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80268dc:	079d      	lsls	r5, r3, #30
 80268de:	4606      	mov	r6, r0
 80268e0:	460c      	mov	r4, r1
 80268e2:	d507      	bpl.n	80268f4 <__smakebuf_r+0x1c>
 80268e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80268e8:	6023      	str	r3, [r4, #0]
 80268ea:	6123      	str	r3, [r4, #16]
 80268ec:	2301      	movs	r3, #1
 80268ee:	6163      	str	r3, [r4, #20]
 80268f0:	b002      	add	sp, #8
 80268f2:	bd70      	pop	{r4, r5, r6, pc}
 80268f4:	ab01      	add	r3, sp, #4
 80268f6:	466a      	mov	r2, sp
 80268f8:	f7ff ffca 	bl	8026890 <__swhatbuf_r>
 80268fc:	9900      	ldr	r1, [sp, #0]
 80268fe:	4605      	mov	r5, r0
 8026900:	4630      	mov	r0, r6
 8026902:	f7ff f963 	bl	8025bcc <_malloc_r>
 8026906:	b948      	cbnz	r0, 802691c <__smakebuf_r+0x44>
 8026908:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802690c:	059a      	lsls	r2, r3, #22
 802690e:	d4ef      	bmi.n	80268f0 <__smakebuf_r+0x18>
 8026910:	f023 0303 	bic.w	r3, r3, #3
 8026914:	f043 0302 	orr.w	r3, r3, #2
 8026918:	81a3      	strh	r3, [r4, #12]
 802691a:	e7e3      	b.n	80268e4 <__smakebuf_r+0xc>
 802691c:	4b0d      	ldr	r3, [pc, #52]	; (8026954 <__smakebuf_r+0x7c>)
 802691e:	62b3      	str	r3, [r6, #40]	; 0x28
 8026920:	89a3      	ldrh	r3, [r4, #12]
 8026922:	6020      	str	r0, [r4, #0]
 8026924:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8026928:	81a3      	strh	r3, [r4, #12]
 802692a:	9b00      	ldr	r3, [sp, #0]
 802692c:	6163      	str	r3, [r4, #20]
 802692e:	9b01      	ldr	r3, [sp, #4]
 8026930:	6120      	str	r0, [r4, #16]
 8026932:	b15b      	cbz	r3, 802694c <__smakebuf_r+0x74>
 8026934:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026938:	4630      	mov	r0, r6
 802693a:	f000 f83d 	bl	80269b8 <_isatty_r>
 802693e:	b128      	cbz	r0, 802694c <__smakebuf_r+0x74>
 8026940:	89a3      	ldrh	r3, [r4, #12]
 8026942:	f023 0303 	bic.w	r3, r3, #3
 8026946:	f043 0301 	orr.w	r3, r3, #1
 802694a:	81a3      	strh	r3, [r4, #12]
 802694c:	89a0      	ldrh	r0, [r4, #12]
 802694e:	4305      	orrs	r5, r0
 8026950:	81a5      	strh	r5, [r4, #12]
 8026952:	e7cd      	b.n	80268f0 <__smakebuf_r+0x18>
 8026954:	080258a1 	.word	0x080258a1

08026958 <__malloc_lock>:
 8026958:	4801      	ldr	r0, [pc, #4]	; (8026960 <__malloc_lock+0x8>)
 802695a:	f7ff b8be 	b.w	8025ada <__retarget_lock_acquire_recursive>
 802695e:	bf00      	nop
 8026960:	20027f24 	.word	0x20027f24

08026964 <__malloc_unlock>:
 8026964:	4801      	ldr	r0, [pc, #4]	; (802696c <__malloc_unlock+0x8>)
 8026966:	f7ff b8ba 	b.w	8025ade <__retarget_lock_release_recursive>
 802696a:	bf00      	nop
 802696c:	20027f24 	.word	0x20027f24

08026970 <_read_r>:
 8026970:	b538      	push	{r3, r4, r5, lr}
 8026972:	4d07      	ldr	r5, [pc, #28]	; (8026990 <_read_r+0x20>)
 8026974:	4604      	mov	r4, r0
 8026976:	4608      	mov	r0, r1
 8026978:	4611      	mov	r1, r2
 802697a:	2200      	movs	r2, #0
 802697c:	602a      	str	r2, [r5, #0]
 802697e:	461a      	mov	r2, r3
 8026980:	f7db fad2 	bl	8001f28 <_read>
 8026984:	1c43      	adds	r3, r0, #1
 8026986:	d102      	bne.n	802698e <_read_r+0x1e>
 8026988:	682b      	ldr	r3, [r5, #0]
 802698a:	b103      	cbz	r3, 802698e <_read_r+0x1e>
 802698c:	6023      	str	r3, [r4, #0]
 802698e:	bd38      	pop	{r3, r4, r5, pc}
 8026990:	20027f2c 	.word	0x20027f2c

08026994 <_fstat_r>:
 8026994:	b538      	push	{r3, r4, r5, lr}
 8026996:	4d07      	ldr	r5, [pc, #28]	; (80269b4 <_fstat_r+0x20>)
 8026998:	2300      	movs	r3, #0
 802699a:	4604      	mov	r4, r0
 802699c:	4608      	mov	r0, r1
 802699e:	4611      	mov	r1, r2
 80269a0:	602b      	str	r3, [r5, #0]
 80269a2:	f7db fade 	bl	8001f62 <_fstat>
 80269a6:	1c43      	adds	r3, r0, #1
 80269a8:	d102      	bne.n	80269b0 <_fstat_r+0x1c>
 80269aa:	682b      	ldr	r3, [r5, #0]
 80269ac:	b103      	cbz	r3, 80269b0 <_fstat_r+0x1c>
 80269ae:	6023      	str	r3, [r4, #0]
 80269b0:	bd38      	pop	{r3, r4, r5, pc}
 80269b2:	bf00      	nop
 80269b4:	20027f2c 	.word	0x20027f2c

080269b8 <_isatty_r>:
 80269b8:	b538      	push	{r3, r4, r5, lr}
 80269ba:	4d06      	ldr	r5, [pc, #24]	; (80269d4 <_isatty_r+0x1c>)
 80269bc:	2300      	movs	r3, #0
 80269be:	4604      	mov	r4, r0
 80269c0:	4608      	mov	r0, r1
 80269c2:	602b      	str	r3, [r5, #0]
 80269c4:	f7db fad2 	bl	8001f6c <_isatty>
 80269c8:	1c43      	adds	r3, r0, #1
 80269ca:	d102      	bne.n	80269d2 <_isatty_r+0x1a>
 80269cc:	682b      	ldr	r3, [r5, #0]
 80269ce:	b103      	cbz	r3, 80269d2 <_isatty_r+0x1a>
 80269d0:	6023      	str	r3, [r4, #0]
 80269d2:	bd38      	pop	{r3, r4, r5, pc}
 80269d4:	20027f2c 	.word	0x20027f2c

080269d8 <_init>:
 80269d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80269da:	bf00      	nop
 80269dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80269de:	bc08      	pop	{r3}
 80269e0:	469e      	mov	lr, r3
 80269e2:	4770      	bx	lr

080269e4 <_fini>:
 80269e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80269e6:	bf00      	nop
 80269e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80269ea:	bc08      	pop	{r3}
 80269ec:	469e      	mov	lr, r3
 80269ee:	4770      	bx	lr
